using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography;
using System.Text;
using Il2CppDummyDll;
using ProtoFramework;
using ProtoFramework.AnimationUtilities;
using RoboRyanTron.QuickButtons;
using RoboRyanTron.SceneReference;
using RootMotion;
using RootMotion.Dynamics;
using RootMotion.FinalIK;
using SG.BehaviorTrees;
using SG.BehaviorTrees.Experimental;
using SG.Claymore;
using SG.Claymore.AI;
using SG.Claymore.AI.Nodes;
using SG.Claymore.Analytics;
using SG.Claymore.Armaments;
using SG.Claymore.Armaments.Abilities;
using SG.Claymore.Armaments.Traits;
using SG.Claymore.Armaments.Variables;
using SG.Claymore.Armory;
using SG.Claymore.Audio;
using SG.Claymore.Avatar;
using SG.Claymore.Bindings;
using SG.Claymore.Bindings.TransformBinding;
using SG.Claymore.Combat;
using SG.Claymore.Combat.Blocking;
using SG.Claymore.Combat.Combatants;
using SG.Claymore.Combat.CritPoints;
using SG.Claymore.Combat.EnemyAttacks;
using SG.Claymore.Combat.GroundAttack;
using SG.Claymore.Combat.Timeline;
using SG.Claymore.Credits;
using SG.Claymore.Diagnostics;
using SG.Claymore.Dynamics;
using SG.Claymore.Effects;
using SG.Claymore.Effects.Diagnostics;
using SG.Claymore.Entities;
using SG.Claymore.Graphics;
using SG.Claymore.HitSystem;
using SG.Claymore.Interaction;
using SG.Claymore.Interaction.Rewards;
using SG.Claymore.Level;
using SG.Claymore.Localization;
using SG.Claymore.Movement;
using SG.Claymore.Movement.Dash;
using SG.Claymore.NPCs;
using SG.Claymore.Player;
using SG.Claymore.PlayerLoopControllers;
using SG.Claymore.ResourceLoading;
using SG.Claymore.SaveSystem;
using SG.Claymore.SaveSystem.SavedElements;
using SG.Claymore.Status;
using SG.Claymore.Targeting;
using SG.Claymore.UI;
using SG.Claymore.UI.EnemyUI;
using SG.Claymore.UI.Popup;
using SG.Claymore.Visuals;
using SG.Claymore.WeaponTracking;
using SG.Claymore._Testing;
using SG.Code.Claymore.Armaments;
using SG.Code.Framework.Core;
using SG.Code.XR.Achievements;
using SG.Core;
using SG.Core.CustomPlayerLoops;
using SG.Core.Inspector;
using SG.GFX.Data;
using SG.GlobalEvents;
using SG.GlobalEvents.Generated;
using SG.GlobalEvents.Variables;
using SG.Music;
using SG.Pooling;
using SG.Pooling.AutoRecycle;
using SG.ProtoFramework;
using SG.ProtoFramework.AnimationMapping;
using SG.ProtoFramework.ClosedCaption;
using SG.ProtoFramework.Localization;
using SG.ProtoFramework.Resource;
using SG.Rendering.Vulpine;
using SG.Rendering.Vulpine.PostProcessing;
using SG.Save;
using SG.Vignettitor;
using SG.Vignettitor.Graph;
using SG.Vignettitor.VignetteData;
using SG.Vignettitor.VignettitorCore;
using SG.XR;
using SG.XR.GUIInteraction;
using SG.XR.Haptics;
using SG.XR.InputHandling;
using SG.XR.Vignetting;
using TMPro;
using Unity.Collections;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking.PlayerConnection;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using XftWeapon;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class AvatarQuickBind : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ClaymoreVRIK IKReference;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Root;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SearchRoot;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB35C", Offset = "0x8AB35C")]
	public string pelvis;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string spine;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string chest;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string neck;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string head;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string leftShoulder;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string leftUpperArm;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string leftForearm;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string leftHand;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string rightShoulder;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string rightUpperArm;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string rightForearm;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string rightHand;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string leftThigh;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string leftCalf;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string leftFoot;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string leftToe;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string rightThigh;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string rightCalf;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string rightFoot;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string rightToe;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB394", Offset = "0x8AB394")]
	public TwistRelaxer leftTwist;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TwistRelaxer rightTwist;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x18CEE3C", Offset = "0x18CEE3C", VA = "0x18CEE3C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDDA8", Offset = "0x8DDDA8")]
	public void ApplyTwistRelaxers()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x18CF01C", Offset = "0x18CF01C", VA = "0x18CF01C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDDE0", Offset = "0x8DDDE0")]
	public void GetIkLinks()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x18CF478", Offset = "0x18CF478", VA = "0x18CF478")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDE18", Offset = "0x8DDE18")]
	public void ApplyReferences()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x18CF8A8", Offset = "0x18CF8A8", VA = "0x18CF8A8")]
	private Transform TraverseHierarchyByName(Transform subRoot, string name)
	{
		return null;
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x18CFE5C", Offset = "0x18CFE5C", VA = "0x18CFE5C")]
	public AvatarQuickBind()
	{
	}
}
[Token(Token = "0x2000003")]
public class CombatantQuickBind : MonoBehaviour
{
	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CombatantRoot;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB3CC", Offset = "0x8AB3CC")]
	public PuppetMaster Puppet;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float KillDuration;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float DeadMuscleWeight;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float DeadMuscleDamper;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float MaxFreezeSqrVelocity;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float StateBlendTime;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MuscleSpring;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MuscleDamper;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB404", Offset = "0x8AB404")]
	public LookAtIK LookIk;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string Head;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<string> Spine;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x18CFE64", Offset = "0x18CFE64", VA = "0x18CFE64")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDE50", Offset = "0x8DDE50")]
	public void AssignDefaultsToLookIk()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x18D05F4", Offset = "0x18D05F4", VA = "0x18D05F4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDE88", Offset = "0x8DDE88")]
	public void CacheValuesFromLookAtIK()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x18D0750", Offset = "0x18D0750", VA = "0x18D0750")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDEC0", Offset = "0x8DDEC0")]
	public void CacheValuesFromPuppet()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x18D080C", Offset = "0x18D080C", VA = "0x18D080C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDEF8", Offset = "0x8DDEF8")]
	public void SetPuppetMasterDefaults()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x18D0040", Offset = "0x18D0040", VA = "0x18D0040")]
	private Transform TraverseHierarchyByName(Transform subRoot, string name)
	{
		return null;
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x18D08F8", Offset = "0x18D08F8", VA = "0x18D08F8")]
	public CombatantQuickBind()
	{
	}
}
[Token(Token = "0x2000004")]
public class FbikQuickBind : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FullBodyBipedIK IKReference;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Root;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SearchRoot;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB43C", Offset = "0x8AB43C")]
	public string pelvis;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string head;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string leftUpperArm;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string leftForearm;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string leftHand;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string rightUpperArm;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string rightForearm;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string rightHand;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string leftThigh;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string leftCalf;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string leftFoot;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string rightThigh;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string rightCalf;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string rightFoot;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string[] spine;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB474", Offset = "0x8AB474")]
	public string rootNode;

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x18D3924", Offset = "0x18D3924", VA = "0x18D3924")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDF30", Offset = "0x8DDF30")]
	public void GetIkLinks()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x18D3D5C", Offset = "0x18D3D5C", VA = "0x18D3D5C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDF68", Offset = "0x8DDF68")]
	public void ApplyReferences()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x18D4178", Offset = "0x18D4178", VA = "0x18D4178")]
	private Transform TraverseHierarchyByName(Transform subRoot, string name)
	{
		return null;
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x18D472C", Offset = "0x18D472C", VA = "0x18D472C")]
	public FbikQuickBind()
	{
	}
}
[Token(Token = "0x2000005")]
public class RagdollQuickBind : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BipedRagdollCreator IKReference;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform Root;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SearchRoot;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB484", Offset = "0x8AB484")]
	public string hips;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string spine;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string chest;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string head;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string leftUpperLeg;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string leftLowerLeg;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string leftFoot;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string rightUpperLeg;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string rightLowerLeg;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public string rightFoot;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string leftUpperArm;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public string leftLowerArm;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string leftHand;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public string rightUpperArm;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public string rightLowerArm;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string rightHand;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x18D88E0", Offset = "0x18D88E0", VA = "0x18D88E0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDFA0", Offset = "0x8DDFA0")]
	public void GetIkLinks()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x18D8BB8", Offset = "0x18D8BB8", VA = "0x18D8BB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DDFD8", Offset = "0x8DDFD8")]
	public void ApplyReferences()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x18D8E64", Offset = "0x18D8E64", VA = "0x18D8E64")]
	private Transform TraverseHierarchyByName(Transform subRoot, string name)
	{
		return null;
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x18D9418", Offset = "0x18D9418", VA = "0x18D9418")]
	public RagdollQuickBind()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public struct CreditsBlockConfig
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	[HideInInspector]
	public string elementName;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UserString heading;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] names1;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] names2;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] names3;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xA112E4", Offset = "0xA112E4", VA = "0xA112E4")]
	public void UpdateElementName()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xA112EC", Offset = "0xA112EC", VA = "0xA112EC")]
	public int GetColumnCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xA112F4", Offset = "0xA112F4", VA = "0xA112F4")]
	public int GetNameCount()
	{
		return default(int);
	}
}
[Token(Token = "0x2000007")]
public class CreditsBlock : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI heading;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB504", Offset = "0x8AB504")]
	[SerializeField]
	private Transform columnParent1;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform columnParent2;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform columnParent3;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB55C", Offset = "0x8AB55C")]
	[SerializeField]
	private CreditsName[] nameFields1;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private CreditsName[] nameFields2;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CreditsName[] nameFields3;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB5B4", Offset = "0x8AB5B4")]
	[SerializeField]
	private bool doAutoLayout;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float offset;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float spacing;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	[HideInInspector]
	private int totalNames;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int hitCount;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int greatestRowCount;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<MeshFilter> letterRenderers;

	[Token(Token = "0x17000001")]
	public int HitCount
	{
		[Token(Token = "0x6000019")]
		[Address(RVA = "0x18D0AF8", Offset = "0x18D0AF8", VA = "0x18D0AF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x14000001")]
	private event Action onAllNamesHitCallback
	{
		[Token(Token = "0x6000017")]
		[Address(RVA = "0x18D09B0", Offset = "0x18D09B0", VA = "0x18D09B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE010", Offset = "0x8DE010")]
		add
		{
		}
		[Token(Token = "0x6000018")]
		[Address(RVA = "0x18D0A54", Offset = "0x18D0A54", VA = "0x18D0A54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE020", Offset = "0x8DE020")]
		remove
		{
		}
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x18D0B00", Offset = "0x18D0B00", VA = "0x18D0B00")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x18D0CB4", Offset = "0x18D0CB4", VA = "0x18D0CB4")]
	public MeshFilter[] Initialize(CreditsBlockConfig nameConfigs)
	{
		return null;
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x18D0E1C", Offset = "0x18D0E1C", VA = "0x18D0E1C")]
	private void Initialize(Transform column, CreditsName[] fields, string[] names)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x18D12C4", Offset = "0x18D12C4", VA = "0x18D12C4")]
	private void HandleNameHit()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x18D0F5C", Offset = "0x18D0F5C", VA = "0x18D0F5C")]
	private void AutoLayout(int rowCount, CreditsName[] nameFields, Transform columnParent)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x18D12FC", Offset = "0x18D12FC", VA = "0x18D12FC")]
	public void Play(Action onAllNamesHitCallback)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x18D14D0", Offset = "0x18D14D0", VA = "0x18D14D0")]
	public void End()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x18D1508", Offset = "0x18D1508", VA = "0x18D1508")]
	private void End(CreditsName[] fields)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x18D1594", Offset = "0x18D1594", VA = "0x18D1594")]
	public CreditsBlock()
	{
	}
}
[Token(Token = "0x2000008")]
public class CreditsController : MonoBehaviour
{
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC44", Offset = "0x8AAC44")]
	private sealed class <Start>d__40 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsController <>4__this;

		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <endTime>5__3;

		[Token(Token = "0x170003F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AE6")]
			[Address(RVA = "0x18D3708", Offset = "0x18D3708", VA = "0x18D3708", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AE8")]
			[Address(RVA = "0x18D3770", Offset = "0x18D3770", VA = "0x18D3770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x18D2F68", Offset = "0x18D2F68", VA = "0x18D2F68")]
		[DebuggerHidden]
		public <Start>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x18D3368", Offset = "0x18D3368", VA = "0x18D3368", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x18D336C", Offset = "0x18D336C", VA = "0x18D336C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x18D3710", Offset = "0x18D3710", VA = "0x18D3710", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC54", Offset = "0x8AAC54")]
	private sealed class <QuitCreditRoutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreditsController <>4__this;

		[Token(Token = "0x170003F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x18D32F8", Offset = "0x18D32F8", VA = "0x18D32F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0x18D3360", Offset = "0x18D3360", VA = "0x18D3360", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x18D3018", Offset = "0x18D3018", VA = "0x18D3018")]
		[DebuggerHidden]
		public <QuitCreditRoutine>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x18D324C", Offset = "0x18D324C", VA = "0x18D324C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x18D3250", Offset = "0x18D3250", VA = "0x18D3250", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x18D3300", Offset = "0x18D3300", VA = "0x18D3300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelManager levelManager;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CreditsListData _creditsListData;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Room exitRoom;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BinaryInputAction pauseInput;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool quitOnPauseInput;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private BoolVariable controllerIsVisible;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private BoolVariable avatarIsVisible;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private IntVariable armamentInspectionUISuppression;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB6E8", Offset = "0x8AB6E8")]
	[SerializeField]
	public CreditsBlockConfig[] blockConfigs;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB720", Offset = "0x8AB720")]
	[SerializeField]
	private CreditsBlock[] columnBlockTemplates;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private MusicTrack musicTrack;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private MusicTrack titleMusicTrack;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private MusicMixChange endTransition;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AB788", Offset = "0x8AB788")]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AB788", Offset = "0x8AB788")]
	private float baseDuration;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private float bonusDurPerName;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private float postBreakDelay;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private float endDelay;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private float initialDelay;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[SerializeField]
	private float gravityMultiplier;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CreditsBlock currentBlock;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool atLeastOneNameRemains;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 ogGravity;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int hitCount;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	[SerializeField]
	[HideInInspector]
	private int totalNamesCount;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private List<CreditsBlock> blocks;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<string, Mesh> meshLookup;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Coroutine loadNewSceneRoutine;

	[NonSerialized]
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<string, TextKey> _reverseLookup;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x18D18C8", Offset = "0x18D18C8", VA = "0x18D18C8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE030", Offset = "0x8DE030")]
	private void UpdateBlock()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x18D1B4C", Offset = "0x18D1B4C", VA = "0x18D1B4C")]
	private void CacheTextKeyLookup()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x18D1D00", Offset = "0x18D1D00", VA = "0x18D1D00")]
	private TextKey GetTextKey(string text)
	{
		return null;
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x18D1E28", Offset = "0x18D1E28", VA = "0x18D1E28")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE068", Offset = "0x8DE068")]
	private void UpdateData()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x18D2170", Offset = "0x18D2170", VA = "0x18D2170")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE0A0", Offset = "0x8DE0A0")]
	private void BuildTexts()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x18D2A08", Offset = "0x18D2A08", VA = "0x18D2A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x18D2A0C", Offset = "0x18D2A0C", VA = "0x18D2A0C")]
	private void EnsureAudioIsReady()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x18D2AEC", Offset = "0x18D2AEC", VA = "0x18D2AEC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x18D2BFC", Offset = "0x18D2BFC", VA = "0x18D2BFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x18D2CF8", Offset = "0x18D2CF8", VA = "0x18D2CF8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x18D2D94", Offset = "0x18D2D94", VA = "0x18D2D94")]
	private void OnPauseDown()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x18D2ED8", Offset = "0x18D2ED8", VA = "0x18D2ED8")]
	private void OnAltPauseDown()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x18D2EEC", Offset = "0x18D2EEC", VA = "0x18D2EEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE0D8", Offset = "0x8DE0D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x18D2F94", Offset = "0x18D2F94", VA = "0x18D2F94")]
	public void HandleQuit()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x18D2DA8", Offset = "0x18D2DA8", VA = "0x18D2DA8")]
	private void HandleQuit(bool doLevelLoad)
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x18D2F9C", Offset = "0x18D2F9C", VA = "0x18D2F9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE13C", Offset = "0x8DE13C")]
	private IEnumerator QuitCreditRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x18D3044", Offset = "0x18D3044", VA = "0x18D3044")]
	private void ShowBlock(int index, float endTime)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x18D29B8", Offset = "0x18D29B8", VA = "0x18D29B8")]
	private CreditsBlock GetBlockTemplate(CreditsBlockConfig config)
	{
		return null;
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x18D3184", Offset = "0x18D3184", VA = "0x18D3184")]
	private void HandleAllNamesHit()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x18D31B0", Offset = "0x18D31B0", VA = "0x18D31B0")]
	public CreditsController()
	{
	}
}
[Token(Token = "0x2000009")]
public class EnableTracksBoolVariable : MonoBehaviour
{
	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BoolVariable enabledVariable;

	[NonSerialized]
	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool registered;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x18D3788", Offset = "0x18D3788", VA = "0x18D3788")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x18D3834", Offset = "0x18D3834", VA = "0x18D3834")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x18D38E8", Offset = "0x18D38E8", VA = "0x18D38E8")]
	private void OnBoolChanged(bool value)
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x18D391C", Offset = "0x18D391C", VA = "0x18D391C")]
	public EnableTracksBoolVariable()
	{
	}
}
[Token(Token = "0x200000A")]
public class FloatVariableToTextMesh : MonoBehaviour
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FloatVariable FrameTimeVariable;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshPro Text;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private string Format;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x18D4734", Offset = "0x18D4734", VA = "0x18D4734")]
	private void Start()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x18D4844", Offset = "0x18D4844", VA = "0x18D4844")]
	public void SetTextWhite()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x18D4880", Offset = "0x18D4880", VA = "0x18D4880")]
	public void SetTextBlack()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x18D48BC", Offset = "0x18D48BC", VA = "0x18D48BC")]
	public void SetTextRed()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x18D48F8", Offset = "0x18D48F8", VA = "0x18D48F8")]
	private void OnChanged()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x18D49F8", Offset = "0x18D49F8", VA = "0x18D49F8")]
	public FloatVariableToTextMesh()
	{
	}
}
[Token(Token = "0x200000B")]
public class FrameTimeMonitor : MonoBehaviour
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private double sampleTime;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private FloatVariable frameTimeVariable;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FloatVariable fpsVariable;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private XRPlatformManager platformManager;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[CollapsingUnityEvent]
	public UnityEvent OnFramerateBelowThreshold;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[CollapsingUnityEvent]
	public UnityEvent OnFramerateRecovered;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AB91C", Offset = "0x8AB91C")]
	[SerializeField]
	private string platformName;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRPlatform _currentPlatform;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int _frameCount;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private double _interval;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _badFrameRate;

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x18D4A00", Offset = "0x18D4A00", VA = "0x18D4A00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x18D4A50", Offset = "0x18D4A50", VA = "0x18D4A50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x18D4BF0", Offset = "0x18D4BF0", VA = "0x18D4BF0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x18D4CDC", Offset = "0x18D4CDC", VA = "0x18D4CDC")]
	public FrameTimeMonitor()
	{
	}
}
[Token(Token = "0x200000C")]
public class PerfAlertQuad : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC64", Offset = "0x8AAC64")]
	private sealed class <BringOutQuad>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerfAlertQuad <>4__this;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170003F6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF2")]
			[Address(RVA = "0x18D7C10", Offset = "0x18D7C10", VA = "0x18D7C10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AF4")]
			[Address(RVA = "0x18D7C78", Offset = "0x18D7C78", VA = "0x18D7C78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x18D791C", Offset = "0x18D791C", VA = "0x18D791C")]
		[DebuggerHidden]
		public <BringOutQuad>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x18D7A74", Offset = "0x18D7A74", VA = "0x18D7A74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x18D7A78", Offset = "0x18D7A78", VA = "0x18D7A78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x18D7C18", Offset = "0x18D7C18", VA = "0x18D7C18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC74", Offset = "0x8AAC74")]
	private sealed class <ShowPerfAlert>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerfAlertQuad <>4__this;

		[Token(Token = "0x170003F8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AF8")]
			[Address(RVA = "0x18D7EC8", Offset = "0x18D7EC8", VA = "0x18D7EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003F9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001AFA")]
			[Address(RVA = "0x18D7F30", Offset = "0x18D7F30", VA = "0x18D7F30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x18D7948", Offset = "0x18D7948", VA = "0x18D7948")]
		[DebuggerHidden]
		public <ShowPerfAlert>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x18D7DE4", Offset = "0x18D7DE4", VA = "0x18D7DE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x18D7DE8", Offset = "0x18D7DE8", VA = "0x18D7DE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x18D7ED0", Offset = "0x18D7ED0", VA = "0x18D7ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC84", Offset = "0x8AAC84")]
	private sealed class <Cooldown>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PerfAlertQuad <>4__this;

		[Token(Token = "0x170003FA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001AFE")]
			[Address(RVA = "0x18D7D74", Offset = "0x18D7D74", VA = "0x18D7D74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B00")]
			[Address(RVA = "0x18D7DDC", Offset = "0x18D7DDC", VA = "0x18D7DDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x18D79F0", Offset = "0x18D79F0", VA = "0x18D79F0")]
		[DebuggerHidden]
		public <Cooldown>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x18D7C80", Offset = "0x18D7C80", VA = "0x18D7C80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x18D7C84", Offset = "0x18D7C84", VA = "0x18D7C84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x18D7D7C", Offset = "0x18D7D7C", VA = "0x18D7D7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MeshRenderer QuadRenderer;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float BadFrameTimeDuration;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB978", Offset = "0x8AB978")]
	[SerializeField]
	private float AlertVisibleTime;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float AlertCooldown;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Color AlertColor;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AB9E4", Offset = "0x8AB9E4")]
	[SerializeField]
	private FloatVariable OffsetFromTop;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float OffsetMin;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float OffsetMax;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ABA50", Offset = "0x8ABA50")]
	[SerializeField]
	private RectTransform Text;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private FloatVariable TextOffset;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float TextOffsetMin;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private float TextOffsetMax;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ABACC", Offset = "0x8ABACC")]
	[SerializeField]
	private IntVariable ModalUIStatus;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] AttachedObjects;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ABB28", Offset = "0x8ABB28")]
	[SerializeField]
	private bool TestQuad;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private BoolVariable AlwaysOn;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int _nether;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _frameRateBad;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool _alertVisible;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float _elapsed;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material _mat;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int _id;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x18D7040", Offset = "0x18D7040", VA = "0x18D7040")]
	private void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x18D710C", Offset = "0x18D710C", VA = "0x18D710C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x18D72B4", Offset = "0x18D72B4", VA = "0x18D72B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x18D743C", Offset = "0x18D743C", VA = "0x18D743C")]
	private void OnModalUIChanged(int value)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x18D74E0", Offset = "0x18D74E0", VA = "0x18D74E0")]
	private void TextOffsetChanged(float offset)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x18D75A8", Offset = "0x18D75A8", VA = "0x18D75A8")]
	private void OnAlwaysOnChanged(bool isOn)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x18D764C", Offset = "0x18D764C", VA = "0x18D764C")]
	private void OnOffsetFromTopChanged(float offset)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x18D7728", Offset = "0x18D7728", VA = "0x18D7728")]
	public void OnFramerateBad()
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x18D7734", Offset = "0x18D7734", VA = "0x18D7734")]
	public void OnFramerateGood()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x18D773C", Offset = "0x18D773C", VA = "0x18D773C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x18D78A0", Offset = "0x18D78A0", VA = "0x18D78A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE1A0", Offset = "0x8DE1A0")]
	private IEnumerator BringOutQuad()
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x18D7824", Offset = "0x18D7824", VA = "0x18D7824")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE204", Offset = "0x8DE204")]
	private IEnumerator ShowPerfAlert()
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x18D7974", Offset = "0x18D7974", VA = "0x18D7974")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE268", Offset = "0x8DE268")]
	private IEnumerator Cooldown()
	{
		return null;
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x18D7A1C", Offset = "0x18D7A1C", VA = "0x18D7A1C")]
	public PerfAlertQuad()
	{
	}
}
[Token(Token = "0x200000D")]
public class IntroController : MonoBehaviour
{
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAC94", Offset = "0x8AAC94")]
	private sealed class <Start>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroController <>4__this;

		[Token(Token = "0x170003FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B04")]
			[Address(RVA = "0x18D6FD0", Offset = "0x18D6FD0", VA = "0x18D6FD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B06")]
			[Address(RVA = "0x18D7038", Offset = "0x18D7038", VA = "0x18D7038", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x18D5A20", Offset = "0x18D5A20", VA = "0x18D5A20")]
		[DebuggerHidden]
		public <Start>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x18D6DD0", Offset = "0x18D6DD0", VA = "0x18D6DD0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x18D6DD4", Offset = "0x18D6DD4", VA = "0x18D6DD4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x18D6FD8", Offset = "0x18D6FD8", VA = "0x18D6FD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACA4", Offset = "0x8AACA4")]
	private sealed class <DelayedStart>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroController <>4__this;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool <showEngineSplash>5__2;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timesUp>5__3;

		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IEnumerator <enumerator>5__4;

		[Token(Token = "0x170003FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0x18D688C", Offset = "0x18D688C", VA = "0x18D688C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B0C")]
			[Address(RVA = "0x18D68F4", Offset = "0x18D68F4", VA = "0x18D68F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x18D5BEC", Offset = "0x18D5BEC", VA = "0x18D5BEC")]
		[DebuggerHidden]
		public <DelayedStart>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x18D60B0", Offset = "0x18D60B0", VA = "0x18D60B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x18D60B4", Offset = "0x18D60B4", VA = "0x18D60B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x18D6894", Offset = "0x18D6894", VA = "0x18D6894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACB4", Offset = "0x8AACB4")]
	private sealed class <PostDisclaimer>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroController <>4__this;

		[Token(Token = "0x17000400")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0x18D6D60", Offset = "0x18D6D60", VA = "0x18D6D60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000401")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B12")]
			[Address(RVA = "0x18D6DC8", Offset = "0x18D6DC8", VA = "0x18D6DC8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x18D5C18", Offset = "0x18D5C18", VA = "0x18D5C18")]
		[DebuggerHidden]
		public <PostDisclaimer>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x18D68FC", Offset = "0x18D68FC", VA = "0x18D68FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x18D6900", Offset = "0x18D6900", VA = "0x18D6900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x18D6D68", Offset = "0x18D6D68", VA = "0x18D6D68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACC4", Offset = "0x8AACC4")]
	private sealed class <DelayedCredits>d__66 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntroController <>4__this;

		[Token(Token = "0x17000402")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B16")]
			[Address(RVA = "0x18D6040", Offset = "0x18D6040", VA = "0x18D6040", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000403")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B18")]
			[Address(RVA = "0x18D60A8", Offset = "0x18D60A8", VA = "0x18D60A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x18D5EA4", Offset = "0x18D5EA4", VA = "0x18D5EA4")]
		[DebuggerHidden]
		public <DelayedCredits>d__66(int <>1__state)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x18D5F54", Offset = "0x18D5F54", VA = "0x18D5F54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x18D5F58", Offset = "0x18D5F58", VA = "0x18D5F58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x18D6048", Offset = "0x18D6048", VA = "0x18D6048", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator animator;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private CalibrationScreen calibrationScreen;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UICanvas calibrationScreenUICanvas;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private NetherSpaceBubble introBubble;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Transform headTrackedUI;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private SaveManager saveManager;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LanguageSelectController languageSelectController;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private FloatVariable versionNumber;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ABC04", Offset = "0x8ABC04")]
	[SerializeField]
	private TimeScaleController timeScaleController;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnalyticsController analyticsController;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8ABC60", Offset = "0x8ABC60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8ABC60", Offset = "0x8ABC60")]
	[SerializeField]
	private bool beginIntroOnStart;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABCA8", Offset = "0x8ABCA8")]
	[SerializeField]
	private MecanimParameterReference showHMDMessageParam;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABCFC", Offset = "0x8ABCFC")]
	[SerializeField]
	private MecanimParameterReference playDisclaimerParam;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABD50", Offset = "0x8ABD50")]
	[SerializeField]
	private MecanimParameterReference skipParam;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABDA4", Offset = "0x8ABDA4")]
	[SerializeField]
	private MecanimParameterReference engineSplashParam;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Image splashImageObject;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[SerializeField]
	private float onStartDelay;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABE18", Offset = "0x8ABE18")]
	[SerializeField]
	private MecanimParameterReference playIntroParam;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABE6C", Offset = "0x8ABE6C")]
	[SerializeField]
	private MecanimParameterReference trackingParam;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8ABEC0", Offset = "0x8ABEC0")]
	public bool notPlayedLocalized;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABED4", Offset = "0x8ABED4")]
	[SerializeField]
	private MecanimParameterReference shouldPlayLanguageParam;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8ABF28", Offset = "0x8ABF28")]
	[SerializeField]
	private MecanimParameterReference languageParam;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private float logosRequiredDuration;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	[SerializeField]
	private float logosExtraDuration;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private float preCalbirationDelay;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	private float postCalibrationDelay;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[SerializeField]
	private BoolVariable isAlreadyCalibrated;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[SerializeField]
	private Room creditsRoom;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[SerializeField]
	private IntroUI introUI;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[SerializeField]
	private MusicTrack titleMusicWithIntro;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[SerializeField]
	private MusicTrack titleMusicWithoutIntro;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[SerializeField]
	private ProfileUI[] profileButtons;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AC01C", Offset = "0x8AC01C")]
	[SerializeField]
	private CompoundBinaryAction continueAction;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[SerializeField]
	private XRPlatformManager _xrPlatformManager;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[SerializeField]
	private LevelManager _levelManager;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[SerializeField]
	private XRTrackedNode headNode;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[SerializeField]
	private IntVariable _modalUICounter;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[SerializeField]
	private GlobalEvent _applicationQuitGlobalEvent;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[SerializeField]
	private PlayerLoopInitializer initializer;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[SerializeField]
	private PlayerSpawnLocation spawnLocation;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC0C4", Offset = "0x8AC0C4")]
	[SerializeField]
	private TextMeshProUGUI trackingTitle;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[SerializeField]
	private TextMeshProUGUI trackingDescription;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AC120", Offset = "0x8AC120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC120", Offset = "0x8AC120")]
	[SerializeField]
	private GlobalEvent onHeightCalibrationCompleted;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[SerializeField]
	private GlobalEvent onPlayerHeightChanged;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AC18C", Offset = "0x8AC18C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC18C", Offset = "0x8AC18C")]
	[SerializeField]
	private UnityEvent onHeadTrackedTransformUpdated;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private bool calibrationComplete;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
	private bool skipIntroElement;

	[NonSerialized]
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
	private bool _hasRegisteredModalUICount;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x18D4CEC", Offset = "0x18D4CEC", VA = "0x18D4CEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x18D4DF0", Offset = "0x18D4DF0", VA = "0x18D4DF0")]
	private void SetVersionNumber()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x18D5384", Offset = "0x18D5384", VA = "0x18D5384")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x18D55A0", Offset = "0x18D55A0", VA = "0x18D55A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x18D5704", Offset = "0x18D5704", VA = "0x18D5704")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x18D58E0", Offset = "0x18D58E0", VA = "0x18D58E0")]
	private void OnLoadWillStart()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x18D5940", Offset = "0x18D5940", VA = "0x18D5940")]
	private void OnLevelReady()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x18D59A4", Offset = "0x18D59A4", VA = "0x18D59A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE2CC", Offset = "0x8DE2CC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x18D4D10", Offset = "0x18D4D10", VA = "0x18D4D10")]
	private void EnsureAudioIsReady()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x18D5A4C", Offset = "0x18D5A4C", VA = "0x18D5A4C")]
	private void HandleNewProfileLoaded()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x18D5A68", Offset = "0x18D5A68", VA = "0x18D5A68")]
	public void HandleDisclaimerContinue()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x18D5B2C", Offset = "0x18D5B2C", VA = "0x18D5B2C")]
	public void HandleLanguageSelectContinue()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x18D5B70", Offset = "0x18D5B70", VA = "0x18D5B70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE330", Offset = "0x8DE330")]
	private IEnumerator DelayedStart()
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x18D5AB0", Offset = "0x18D5AB0", VA = "0x18D5AB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE394", Offset = "0x8DE394")]
	private IEnumerator PostDisclaimer()
	{
		return null;
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x18D5C44", Offset = "0x18D5C44", VA = "0x18D5C44")]
	private void HandleCalibrationCompletion()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x18D5C50", Offset = "0x18D5C50", VA = "0x18D5C50")]
	private void PlaceHeadTrackedUI()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x18D5DBC", Offset = "0x18D5DBC", VA = "0x18D5DBC")]
	public void HandleQuitButton()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x18D5DD8", Offset = "0x18D5DD8", VA = "0x18D5DD8")]
	public void HandleCreditsButton()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x18D5E28", Offset = "0x18D5E28", VA = "0x18D5E28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE3F8", Offset = "0x8DE3F8")]
	private IEnumerator DelayedCredits()
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x18D5ED0", Offset = "0x18D5ED0", VA = "0x18D5ED0")]
	public IntroController()
	{
	}
}
[Token(Token = "0x200000E")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x89F9A4", Offset = "0x89F9A4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89F9A4", Offset = "0x89F9A4")]
public class RoomCompletionHistory : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200043D")]
	public class RoomData
	{
		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string roomName;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int roomMotes;

		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isBossRoom;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool bossIsInRoom;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool roomExperienced;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<NPCCombatantDefinition> enemyDefinitions;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ArmamentAugment crushedReward;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Encounter encounter;

		[Token(Token = "0x17000404")]
		public bool IsCrushedAetherReward
		{
			[Token(Token = "0x6001B19")]
			[Address(RVA = "0x18DAB14", Offset = "0x18DAB14", VA = "0x18DAB14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000405")]
		public AetherMoteArmamentAugment AetherMoteArmamentAugment
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x18DAB98", Offset = "0x18DAB98", VA = "0x18DAB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000406")]
		public int AetherRewardAmount
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x18D9A8C", Offset = "0x18D9A8C", VA = "0x18D9A8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000407")]
		public bool IsSuccess
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x18DAC1C", Offset = "0x18DAC1C", VA = "0x18DAC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x18D9C48", Offset = "0x18D9C48", VA = "0x18D9C48")]
		public RoomData()
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x18D9B1C", Offset = "0x18D9B1C", VA = "0x18D9B1C")]
		public int CalcEnemyPayout()
		{
			return default(int);
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x18DA860", Offset = "0x18DA860", VA = "0x18DA860")]
		public void Populate(Campaign.RoomSelection currentLevel, int motes)
		{
		}
	}

	[Token(Token = "0x40000D3")]
	public const float SMALLEST_PAYOUT_MULTIPLIER_DELTA = 0.001f;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private LevelManager levelManager;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SaveManager saveManager;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private IntVariable currency;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FloatVariable payoutMultiplier;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private IntVariable lastRunReward;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<RoomData> roomData;

	[Token(Token = "0x17000002")]
	public RoomData Item
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0x18D9540", Offset = "0x18D9540", VA = "0x18D9540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000003")]
	public int Count
	{
		[Token(Token = "0x600006F")]
		[Address(RVA = "0x18D9BF8", Offset = "0x18D9BF8", VA = "0x18D9BF8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x18D9420", Offset = "0x18D9420", VA = "0x18D9420")]
	public static int CalculatePayout(int basePayout, float multiplier)
	{
		return default(int);
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x18D95B8", Offset = "0x18D95B8", VA = "0x18D95B8")]
	public void QuickCashout()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x18D969C", Offset = "0x18D969C", VA = "0x18D969C")]
	public RoomData GetRoomData(int index)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x18D9C50", Offset = "0x18D9C50", VA = "0x18D9C50")]
	public RoomData GetRoomData(Encounter encounter)
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x18D9D54", Offset = "0x18D9D54", VA = "0x18D9D54")]
	public StringList GetEnemyGUIDs(int index)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x18D9E94", Offset = "0x18D9E94", VA = "0x18D9E94")]
	public void Add(int index, RoomData roomData)
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x18D9F10", Offset = "0x18D9F10", VA = "0x18D9F10")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x18D9F68", Offset = "0x18D9F68", VA = "0x18D9F68")]
	public bool Contains(RoomData room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x18D9FD0", Offset = "0x18D9FD0", VA = "0x18D9FD0")]
	public void DebugPopulate(float completion)
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x18DA3AC", Offset = "0x18DA3AC", VA = "0x18DA3AC")]
	public void AddEnemy(NPCCombatantDefinition enemyDefinition)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x18DA4B4", Offset = "0x18DA4B4", VA = "0x18DA4B4")]
	public void SetCrushedReward(ArmamentAugment crushedRewardDef)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x18DA5AC", Offset = "0x18DA5AC", VA = "0x18DA5AC")]
	public void SetCompletionState(bool success)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x18DA8E0", Offset = "0x18DA8E0", VA = "0x18DA8E0")]
	public void DoDebugDump()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x18DAA94", Offset = "0x18DAA94", VA = "0x18DAA94")]
	public RoomCompletionHistory()
	{
	}
}
[Token(Token = "0x200000F")]
public class SoftFollowGaze : MonoBehaviour
{
	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRTrackedNode centerNode;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fixedDistance;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float fixedFollowHeight;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rectTransformHeight;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform thisRectTransform;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float recenterTopFollow;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float safeDistance;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float outOfBoundsTime;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float distanceToSettle;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float slowestSpeedToSettle;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private bool flipRotation;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private XRPlatformManager platformManager;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _hasInitialized;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _timer;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _chase;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _counting;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _distance;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _settleDistance;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AC2F8", Offset = "0x8AC2F8")]
	[SerializeField]
	private float _instantSpeed;

	[Token(Token = "0x17000004")]
	public Vector3 Target
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x12FDC44", Offset = "0x12FDC44", VA = "0x12FDC44")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000005")]
	public Vector3 TrackedForward
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x12FDD24", Offset = "0x12FDD24", VA = "0x12FDD24")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000006")]
	private bool HasRect
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x12FDE04", Offset = "0x12FDE04", VA = "0x12FDE04")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x12FDE74", Offset = "0x12FDE74", VA = "0x12FDE74")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x12FDF68", Offset = "0x12FDF68", VA = "0x12FDF68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x12FE034", Offset = "0x12FE034", VA = "0x12FE034")]
	public void PlaceUI()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x12FE040", Offset = "0x12FE040", VA = "0x12FE040")]
	private void OnRecenterComplete()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x12FDF44", Offset = "0x12FDF44", VA = "0x12FDF44")]
	private void InitPos()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x12FE208", Offset = "0x12FE208", VA = "0x12FE208")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x12FE300", Offset = "0x12FE300", VA = "0x12FE300")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x12FE47C", Offset = "0x12FE47C", VA = "0x12FE47C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x12FE04C", Offset = "0x12FE04C", VA = "0x12FE04C")]
	private void SetNextPosition(Vector3 nextPos)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x12FE640", Offset = "0x12FE640", VA = "0x12FE640")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x12FE5EC", Offset = "0x12FE5EC", VA = "0x12FE5EC")]
	private void TryLevelRect()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x12FE858", Offset = "0x12FE858", VA = "0x12FE858")]
	public SoftFollowGaze()
	{
	}
}
[Token(Token = "0x2000010")]
public class Empty : MonoBehaviour
{
	[Token(Token = "0x6000086")]
	[Address(RVA = "0x18D3778", Offset = "0x18D3778", VA = "0x18D3778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x18D377C", Offset = "0x18D377C", VA = "0x18D377C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x18D3780", Offset = "0x18D3780", VA = "0x18D3780")]
	public Empty()
	{
	}
}
namespace ProtoFramework
{
	[Token(Token = "0x2000011")]
	public class Billboard : MonoBehaviour
	{
		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC334", Offset = "0x8AC334")]
		public bool Flip;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC36C", Offset = "0x8AC36C")]
		public Transform CenterPointOverride;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool Planar;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool LockUp;

		[NonSerialized]
		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool hasCamera;

		[NonSerialized]
		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera targetCamera;

		[NonSerialized]
		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform cameraTransform;

		[NonSerialized]
		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform thisTransform;

		[Token(Token = "0x6000089")]
		[Address(RVA = "0x18D8074", Offset = "0x18D8074", VA = "0x18D8074")]
		private void Update()
		{
		}

		[Token(Token = "0x600008A")]
		[Address(RVA = "0x18D8098", Offset = "0x18D8098", VA = "0x18D8098")]
		private void CacheCamera()
		{
		}

		[Token(Token = "0x600008B")]
		[Address(RVA = "0x18D8184", Offset = "0x18D8184", VA = "0x18D8184")]
		public void PerformBillboard()
		{
		}

		[Token(Token = "0x600008C")]
		[Address(RVA = "0x18D8750", Offset = "0x18D8750", VA = "0x18D8750")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600008D")]
		[Address(RVA = "0x18D8830", Offset = "0x18D8830", VA = "0x18D8830")]
		public Billboard()
		{
		}
	}
	[Token(Token = "0x2000012")]
	public class GameObjectToggler : MonoBehaviour
	{
		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool setInitialState;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool initialState;

		[Token(Token = "0x600008E")]
		[Address(RVA = "0x18D8838", Offset = "0x18D8838", VA = "0x18D8838")]
		private void Awake()
		{
		}

		[Token(Token = "0x600008F")]
		[Address(RVA = "0x18D8880", Offset = "0x18D8880", VA = "0x18D8880")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000090")]
		[Address(RVA = "0x18D88D8", Offset = "0x18D88D8", VA = "0x18D88D8")]
		public GameObjectToggler()
		{
		}
	}
	[Token(Token = "0x2000013")]
	public class RuntimeCollection<T> : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8AC3C4", Offset = "0x8AC3C4")]
		public List<T> Items;

		[Token(Token = "0x6000091")]
		public virtual void AddItem(T item)
		{
		}

		[Token(Token = "0x6000092")]
		public virtual void RemoveItem(T item)
		{
		}

		[Token(Token = "0x6000093")]
		public RuntimeCollection()
		{
		}
	}
}
namespace ProtoFramework.AnimationUtilities
{
	[Token(Token = "0x2000014")]
	public class MecanimParameterAttribute : PropertyAttribute
	{
		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AnimatorFieldName;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatorControllerParameterType TypeFilter;

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AnimatorRelativeToObject;

		[Token(Token = "0x6000094")]
		[Address(RVA = "0x18D7F74", Offset = "0x18D7F74", VA = "0x18D7F74")]
		public MecanimParameterAttribute(string animatorFieldName)
		{
		}
	}
	[Token(Token = "0x2000015")]
	public class MecanimControllerParameterAttribute : PropertyAttribute
	{
		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string AnimatorControllerFieldName;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimatorControllerParameterType TypeFilter;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool AnimatorRelativeToObject;

		[Token(Token = "0x6000095")]
		[Address(RVA = "0x18D7F38", Offset = "0x18D7F38", VA = "0x18D7F38")]
		public MecanimControllerParameterAttribute(string animatorControllerFieldName)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000016")]
	public struct MecanimParameterReference : ISerializationCallbackReceiver
	{
		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string AnimationName;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int AnimationHash;

		[Token(Token = "0x6000096")]
		[Address(RVA = "0xA11398", Offset = "0xA11398", VA = "0xA11398")]
		public MecanimParameterReference(string animationName)
		{
		}

		[Token(Token = "0x6000097")]
		[Address(RVA = "0x18D8030", Offset = "0x18D8030", VA = "0x18D8030")]
		public static implicit operator int(MecanimParameterReference parameter)
		{
			return default(int);
		}

		[Token(Token = "0x6000098")]
		[Address(RVA = "0xA113D4", Offset = "0xA113D4", VA = "0xA113D4", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000099")]
		[Address(RVA = "0xA1140C", Offset = "0xA1140C", VA = "0xA1140C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x2000017")]
	public static class MecanimParameterExtensions
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x18D7FB0", Offset = "0x18D7FB0", VA = "0x18D7FB0")]
		public static MecanimParameterReference AsAnimatorParameter(this string s)
		{
			return default(MecanimParameterReference);
		}
	}
}
namespace SG.Music
{
	[Token(Token = "0x2000018")]
	public enum BeatType
	{
		[Token(Token = "0x4000101")]
		DownBeat,
		[Token(Token = "0x4000102")]
		UpBeat,
		[Token(Token = "0x4000103")]
		WholeNote,
		[Token(Token = "0x4000104")]
		HalfNote,
		[Token(Token = "0x4000105")]
		HalfNoteTriplet,
		[Token(Token = "0x4000106")]
		QuarterNote,
		[Token(Token = "0x4000107")]
		QuarterNoteTriplet,
		[Token(Token = "0x4000108")]
		EighthNote,
		[Token(Token = "0x4000109")]
		EighthNoteTriplet,
		[Token(Token = "0x400010A")]
		SixteenthNote,
		[Token(Token = "0x400010B")]
		None
	}
	[Token(Token = "0x2000019")]
	public enum MusicExitPoint
	{
		[Token(Token = "0x400010D")]
		Immediate,
		[Token(Token = "0x400010E")]
		NextBeat,
		[Token(Token = "0x400010F")]
		NextBar,
		[Token(Token = "0x4000110")]
		NextUpBeat,
		[Token(Token = "0x4000111")]
		ExitTime,
		[Token(Token = "0x4000112")]
		End,
		[Token(Token = "0x4000113")]
		DoNotTransition
	}
	[Serializable]
	[Token(Token = "0x200001A")]
	public class MusicLayer
	{
		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string MusicLayerName;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AC3E4", Offset = "0x8AC3E4")]
		public float Volume;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip MusicLayerClip;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject MusicLayerPrefab;

		[Token(Token = "0x600009B")]
		[Address(RVA = "0xD5AB7C", Offset = "0xD5AB7C", VA = "0xD5AB7C")]
		public MusicLayer()
		{
		}
	}
	[Token(Token = "0x200001B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FA20", Offset = "0x89FA20")]
	public class MusicMetronome : CustomPlayerLoop
	{
		[Token(Token = "0x4000118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _initialized;

		[Token(Token = "0x400011A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[HideInInspector]
		public bool IsActive;

		[Token(Token = "0x400011B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public MusicManager MusicManager;

		[Token(Token = "0x400011C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC41C", Offset = "0x8AC41C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC41C", Offset = "0x8AC41C")]
		public float Tempo;

		[Token(Token = "0x400011D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC47C", Offset = "0x8AC47C")]
		public int BeatsPerMeasure;

		[Token(Token = "0x400011E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC4B4", Offset = "0x8AC4B4")]
		public int ValuePerBeat;

		[Token(Token = "0x400011F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int _beatCount;

		[Token(Token = "0x4000120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _upBeat;

		[Token(Token = "0x4000121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _pickupBeats;

		[Token(Token = "0x4000122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _pickupValuePerBeat;

		[Token(Token = "0x4000123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int _effectiveBeatsPerMeasure;

		[Token(Token = "0x4000124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private double _effectiveValuePerBeat;

		[Token(Token = "0x4000125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private double _interval;

		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private double _nextBeat;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private double _intervalRemainder;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MusicTrack _queuedSong;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool _updateDownBeat;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool _updateUpBeat;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
		private bool _updateWholeNote;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
		private bool _updateHalfNote;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _updateQuarterNote;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		private bool _updateEighthNote;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
		private bool _updateSixteenthNote;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
		private bool _updateTimeBased;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double _updateTime;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _maxBeatFidelity;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private double _delayedStartTime;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _delayedStart;

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xD5F324", Offset = "0xD5F324", VA = "0xD5F324")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xD5F3D8", Offset = "0xD5F3D8", VA = "0xD5F3D8", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xD5F444", Offset = "0xD5F444", VA = "0xD5F444", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xD5F4A4", Offset = "0xD5F4A4", VA = "0xD5F4A4")]
		private void InitializeMusicMetronome()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0xD5F4F0", Offset = "0xD5F4F0", VA = "0xD5F4F0", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xD5F754", Offset = "0xD5F754", VA = "0xD5F754")]
		public void StartMetronome()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xD5F0D8", Offset = "0xD5F0D8", VA = "0xD5F0D8")]
		public void StartMetronome(float tempo, int beatsPerMeasure, int valuePerBeat, int pickupBeats, int pickupValuePerBeat)
		{
		}

		[Token(Token = "0x60000A3")]
		[Address(RVA = "0xD5F0E8", Offset = "0xD5F0E8", VA = "0xD5F0E8")]
		public void DelayedStartMetronome(float tempo, int beatsPerMeasure, int valuePerBeat, int pickupBeats, int pickupValuePerBeat, float delay)
		{
		}

		[Token(Token = "0x60000A4")]
		[Address(RVA = "0xD5F658", Offset = "0xD5F658", VA = "0xD5F658")]
		private void DelayedStart()
		{
		}

		[Token(Token = "0x60000A5")]
		[Address(RVA = "0xD5F970", Offset = "0xD5F970", VA = "0xD5F970")]
		public void UpdateMetronome(int tempo)
		{
		}

		[Token(Token = "0x60000A6")]
		[Address(RVA = "0xD5F994", Offset = "0xD5F994", VA = "0xD5F994")]
		public void UpdateMetronome(int tempo, int beatsPerMeasure, int valuePerBeat)
		{
		}

		[Token(Token = "0x60000A7")]
		[Address(RVA = "0xD5E6C8", Offset = "0xD5E6C8", VA = "0xD5E6C8")]
		public void ForceDownbeat()
		{
		}

		[Token(Token = "0x60000A8")]
		[Address(RVA = "0xD5B01C", Offset = "0xD5B01C", VA = "0xD5B01C")]
		public void StopMetronome()
		{
		}

		[Token(Token = "0x60000A9")]
		[Address(RVA = "0xD5E0A0", Offset = "0xD5E0A0", VA = "0xD5E0A0")]
		public void PauseMetronome()
		{
		}

		[Token(Token = "0x60000AA")]
		[Address(RVA = "0xD5E3BC", Offset = "0xD5E3BC", VA = "0xD5E3BC")]
		public void UnpauseMetronome()
		{
		}

		[Token(Token = "0x60000AB")]
		[Address(RVA = "0xD5F68C", Offset = "0xD5F68C", VA = "0xD5F68C")]
		private void CountBeat()
		{
		}

		[Token(Token = "0x60000AC")]
		[Address(RVA = "0xD5C9A4", Offset = "0xD5C9A4", VA = "0xD5C9A4")]
		public void RegisterOnBeatTrackChange(MusicTrack song, int beatType)
		{
		}

		[Token(Token = "0x60000AD")]
		[Address(RVA = "0xD5C768", Offset = "0xD5C768", VA = "0xD5C768")]
		public double RegisterAtTimeTrackChange(MusicTrack song, double startTime, float trackDuration)
		{
			return default(double);
		}

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xD5C770", Offset = "0xD5C770", VA = "0xD5C770")]
		public double RegisterAtTimeTrackChange(MusicTrack song, double trackStartTime, float trackDuration, float trackExitTime)
		{
			return default(double);
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xD5F714", Offset = "0xD5F714", VA = "0xD5F714")]
		private void StartMusicTrack()
		{
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xD5FB90", Offset = "0xD5FB90", VA = "0xD5FB90")]
		private void CheckUpdateQueue(BeatType bt)
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xD5C13C", Offset = "0xD5C13C", VA = "0xD5C13C")]
		public void ClearUpdates()
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xD5F9FC", Offset = "0xD5F9FC", VA = "0xD5F9FC")]
		private void DetermineBeat()
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xD5F9D4", Offset = "0xD5F9D4", VA = "0xD5F9D4")]
		private void DownBeat()
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xD5F9EC", Offset = "0xD5F9EC", VA = "0xD5F9EC")]
		private void UpBeat()
		{
		}

		[Token(Token = "0x60000B5")]
		[Address(RVA = "0xD5FBF0", Offset = "0xD5FBF0", VA = "0xD5FBF0")]
		private void BeatCallback(BeatType bt)
		{
		}

		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xD5FBF4", Offset = "0xD5FBF4", VA = "0xD5FBF4")]
		public MusicMetronome()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001C")]
	public class MusicMixLayer
	{
		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string MusicLayerName;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip MusicLayerClip;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MixType MixBehavior;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC4FC", Offset = "0x8AC4FC")]
		public float VolumeTarget;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC53C", Offset = "0x8AC53C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC53C", Offset = "0x8AC53C")]
		public float VolumeAdjustment;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC5A4", Offset = "0x8AC5A4")]
		public float FadeTime;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC5E4", Offset = "0x8AC5E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC5E4", Offset = "0x8AC5E4")]
		[SerializeField]
		public AnimationCurve FadeCurve;

		[Token(Token = "0x60000B8")]
		[Address(RVA = "0xD608A4", Offset = "0xD608A4", VA = "0xD608A4")]
		public void SubValidate()
		{
		}

		[Token(Token = "0x60000B9")]
		[Address(RVA = "0xD60858", Offset = "0xD60858", VA = "0xD60858")]
		public MusicMixLayer()
		{
		}
	}
	[Token(Token = "0x200001D")]
	public enum MixType
	{
		[Token(Token = "0x400013D")]
		Ignore,
		[Token(Token = "0x400013E")]
		Set,
		[Token(Token = "0x400013F")]
		Modify
	}
	[Serializable]
	[Token(Token = "0x200001E")]
	public class MusicTimebasedStinger
	{
		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string StingerName;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicTrack Stinger;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Delayed]
		public float activeAfterTime;

		[Token(Token = "0x60000BA")]
		[Address(RVA = "0xD623CC", Offset = "0xD623CC", VA = "0xD623CC")]
		public MusicTimebasedStinger()
		{
		}
	}
	[Token(Token = "0x200001F")]
	public interface IMusicManagerInternal
	{
		[Token(Token = "0x17000007")]
		Dictionary<MusicTrack, List<MusicSourceTimer>> TrackObjectListDict
		{
			[Token(Token = "0x60000BB")]
			get;
		}
	}
	[Token(Token = "0x2000020")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FA8C", Offset = "0x89FA8C")]
	public class MusicManager : ScriptableObject, IMusicManagerInternal
	{
		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MusicMetronome _metronome;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool autoPopulateTransitions;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MusicTransitionList _musicTransitionList;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC6AC", Offset = "0x8AC6AC")]
		[SerializeField]
		private float _fadeOutTimeOnStop;

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve _fadeOutCurveOnStop;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AC708", Offset = "0x8AC708")]
		[SerializeField]
		private bool _bypassDefaultsOnFirstPlay;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private MusicExitPoint _defaultExitPoint;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _originFadeOutDelay;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _originFadeOutDuration;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve _originFadeOutCurve;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _destinationFadeInDelay;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _destinationFadeInDuration;

		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve _destinationFadeInCurve;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		private PoolManager _pool;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MusicTrack _activeTrack;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MusicTrack _queuedTrack;

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MusicTransition _activeTransition;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private double _activeTrackStartTime;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private MusicTransition _defaultTransition;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<GameObject> _queuedTargetList;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<MusicTrack, List<MusicSourceTimer>> _trackObjectListDict;

		[NonSerialized]
		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _gateFirstPlay;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AC7FC", Offset = "0x8AC7FC")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x17000008")]
		public bool IsInitialized
		{
			[Token(Token = "0x60000BC")]
			[Address(RVA = "0xD5AB84", Offset = "0xD5AB84", VA = "0xD5AB84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE46C", Offset = "0x8DE46C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000BD")]
			[Address(RVA = "0xD5AB8C", Offset = "0xD5AB8C", VA = "0xD5AB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE47C", Offset = "0x8DE47C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000009")]
		public MusicTrack ActiveTrack
		{
			[Token(Token = "0x60000BE")]
			[Address(RVA = "0xD5AB98", Offset = "0xD5AB98", VA = "0xD5AB98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		public MusicTrack QueuedTrack
		{
			[Token(Token = "0x60000BF")]
			[Address(RVA = "0xD5ABA0", Offset = "0xD5ABA0", VA = "0xD5ABA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000B")]
		private Dictionary<MusicTrack, List<MusicSourceTimer>> SG.Music.IMusicManagerInternal.TrackObjectListDict
		{
			[Token(Token = "0x60000C0")]
			[Address(RVA = "0xD5ABA8", Offset = "0xD5ABA8", VA = "0xD5ABA8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		public MusicTransitionList MusicTransitionList
		{
			[Token(Token = "0x60000C1")]
			[Address(RVA = "0xD5ABB0", Offset = "0xD5ABB0", VA = "0xD5ABB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000C2")]
		[Address(RVA = "0xD5ABB8", Offset = "0xD5ABB8", VA = "0xD5ABB8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60000C3")]
		[Address(RVA = "0xD5B030", Offset = "0xD5B030", VA = "0xD5B030")]
		private MusicTransition GenerateDefaultTransition()
		{
			return null;
		}

		[Token(Token = "0x60000C4")]
		[Address(RVA = "0xD5B170", Offset = "0xD5B170", VA = "0xD5B170")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x60000C5")]
		[Address(RVA = "0xD5B320", Offset = "0xD5B320", VA = "0xD5B320")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60000C6")]
		[Address(RVA = "0xD5B400", Offset = "0xD5B400", VA = "0xD5B400")]
		public void PlayTrack(MusicTrack song)
		{
		}

		[Token(Token = "0x60000C7")]
		[Address(RVA = "0xD5C0D4", Offset = "0xD5C0D4", VA = "0xD5C0D4")]
		public bool CheckMusicAlreadyPlaying(MusicTrack song)
		{
			return default(bool);
		}

		[Token(Token = "0x60000C8")]
		[Address(RVA = "0xD5B408", Offset = "0xD5B408", VA = "0xD5B408")]
		public void PlayTrack(MusicTrack nextSong, List<GameObject> goList)
		{
		}

		[Token(Token = "0x60000C9")]
		[Address(RVA = "0xD5CCDC", Offset = "0xD5CCDC", VA = "0xD5CCDC")]
		private void PlayStinger(MusicTrack stinger, List<GameObject> goList, float duration, float delay, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xD5D508", Offset = "0xD5D508", VA = "0xD5D508")]
		public void CallbackMetronome()
		{
		}

		[Token(Token = "0x60000CB")]
		[Address(RVA = "0xD5C25C", Offset = "0xD5C25C", VA = "0xD5C25C")]
		private void PlayQueuedMusicTrack()
		{
		}

		[Token(Token = "0x60000CC")]
		[Address(RVA = "0xD5D1F4", Offset = "0xD5D1F4", VA = "0xD5D1F4")]
		private MusicSourceTimer GenerateSource(MusicLayer definition, MusicTrack song, GameObject target)
		{
			return null;
		}

		[Token(Token = "0x60000CD")]
		[Address(RVA = "0xD5D804", Offset = "0xD5D804", VA = "0xD5D804")]
		private void EndActiveTrack()
		{
		}

		[Token(Token = "0x60000CE")]
		[Address(RVA = "0xD5DA00", Offset = "0xD5DA00", VA = "0xD5DA00")]
		public void StopAllTracks()
		{
		}

		[Token(Token = "0x60000CF")]
		[Address(RVA = "0xD5DAF8", Offset = "0xD5DAF8", VA = "0xD5DAF8")]
		public void StopTrack(MusicTrack song, float fadeOutTime)
		{
		}

		[Token(Token = "0x60000D0")]
		[Address(RVA = "0xD5DDDC", Offset = "0xD5DDDC", VA = "0xD5DDDC")]
		public void PauseAllTracks()
		{
		}

		[Token(Token = "0x60000D1")]
		[Address(RVA = "0xD5DED0", Offset = "0xD5DED0", VA = "0xD5DED0")]
		public void PauseTrack(MusicTrack song)
		{
		}

		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xD5E0E4", Offset = "0xD5E0E4", VA = "0xD5E0E4")]
		public void UnpauseAllTracks()
		{
		}

		[Token(Token = "0x60000D3")]
		[Address(RVA = "0xD5E1E4", Offset = "0xD5E1E4", VA = "0xD5E1E4")]
		public void UnpauseTrack(MusicTrack song)
		{
		}

		[Token(Token = "0x60000D4")]
		[Address(RVA = "0xD5E41C", Offset = "0xD5E41C", VA = "0xD5E41C")]
		public void RestartAllTracks()
		{
		}

		[Token(Token = "0x60000D5")]
		[Address(RVA = "0xD5E510", Offset = "0xD5E510", VA = "0xD5E510")]
		public void RestartTrack(MusicTrack song)
		{
		}

		[Token(Token = "0x60000D6")]
		[Address(RVA = "0xD5E718", Offset = "0xD5E718", VA = "0xD5E718")]
		public void RemoveTimerFromDictionary(MusicTrack song, MusicSourceTimer timer)
		{
		}

		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xD5E810", Offset = "0xD5E810", VA = "0xD5E810")]
		public void MixChange(MusicMixChange mix)
		{
		}

		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xD5D6E0", Offset = "0xD5D6E0", VA = "0xD5D6E0")]
		private void StartMetronome(float tempo, int beatsPerMeasure, int valuePerBeat, int pickupBeats, int pickupValuePerBeat)
		{
		}

		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xD5D7AC", Offset = "0xD5D7AC", VA = "0xD5D7AC")]
		private void StartMetronome(float tempo, int beatsPerMeasure, int valuePerBeat, int pickupBeats, int pickupValuePerBeat, float delay)
		{
		}

		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xD5F138", Offset = "0xD5F138", VA = "0xD5F138")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x2000021")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FAF4", Offset = "0x89FAF4")]
	public class MusicMixChange : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200043E")]
		public class MixLayerData
		{
			[Token(Token = "0x4001C7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<MusicMixLayer> MixLayerList;

			[Token(Token = "0x6001B20")]
			[Address(RVA = "0xD60B50", Offset = "0xD60B50", VA = "0xD60B50")]
			public MixLayerData()
			{
			}
		}

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public MusicTrack track;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _addMusicTrackLayers;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		public bool useMasterSettings;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AC83C", Offset = "0x8AC83C")]
		[SerializeField]
		private bool _setAllLayersToMaster;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AC888", Offset = "0x8AC888")]
		[SerializeField]
		public MixType masterMixBehavior;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC8D4", Offset = "0x8AC8D4")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AC8D4", Offset = "0x8AC8D4")]
		[SerializeField]
		public float masterVolumeTarget;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC94C", Offset = "0x8AC94C")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AC94C", Offset = "0x8AC94C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AC94C", Offset = "0x8AC94C")]
		[SerializeField]
		public float masterVolumeAdjustment;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AC9E8", Offset = "0x8AC9E8")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AC9E8", Offset = "0x8AC9E8")]
		[SerializeField]
		public float masterFadeTime;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8ACA60", Offset = "0x8ACA60")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8ACA60", Offset = "0x8ACA60")]
		[SerializeField]
		public AnimationCurve masterFadeCurve;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public MixLayerData LayerData;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MusicManager _musicManager;

		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xD5FD10", Offset = "0xD5FD10", VA = "0xD5FD10")]
		public void EnsureAudioIsReady()
		{
		}

		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xD60274", Offset = "0xD60274", VA = "0xD60274")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60000DE")]
		[Address(RVA = "0xD60938", Offset = "0xD60938", VA = "0xD60938")]
		public void MixChange()
		{
		}

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xD60A7C", Offset = "0xD60A7C", VA = "0xD60A7C")]
		public MusicMixChange()
		{
		}
	}
	[Token(Token = "0x2000022")]
	public class MusicPlayer : MonoBehaviour
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ACAF8", Offset = "0x8ACAF8")]
		public UnityEngine.Object MusicPiece;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ACB30", Offset = "0x8ACB30")]
		public List<GameObject> MusicTargets;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<GameObject> BackupTarget;

		[Token(Token = "0x60000E1")]
		[Address(RVA = "0xD60B58", Offset = "0xD60B58", VA = "0xD60B58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xD60BF4", Offset = "0xD60BF4", VA = "0xD60BF4")]
		public void PlayMusic()
		{
		}

		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xD60F94", Offset = "0xD60F94", VA = "0xD60F94")]
		public void PlayMusicCustom(MusicTrack song)
		{
		}

		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xD60F98", Offset = "0xD60F98", VA = "0xD60F98")]
		public void PlayMusicCustom(MusicSwitch songSwitch)
		{
		}

		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xD60C8C", Offset = "0xD60C8C", VA = "0xD60C8C")]
		private MusicTrack CheckObject()
		{
			return null;
		}

		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xD60E98", Offset = "0xD60E98", VA = "0xD60E98")]
		private void CheckListForNull(MusicTrack song)
		{
		}

		[Token(Token = "0x60000E7")]
		[Address(RVA = "0xD61164", Offset = "0xD61164", VA = "0xD61164")]
		private void PlayInternal(MusicTrack song, List<GameObject> goList)
		{
		}

		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xD611A4", Offset = "0xD611A4", VA = "0xD611A4")]
		public MusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FB60", Offset = "0x89FB60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FB60", Offset = "0x89FB60")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FB60", Offset = "0x89FB60")]
	public class MusicSourceBolter : MonoBehaviour
	{
		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject FollowThis;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _attached;

		[Token(Token = "0x60000EA")]
		[Address(RVA = "0xD61234", Offset = "0xD61234", VA = "0xD61234")]
		private void Update()
		{
		}

		[Token(Token = "0x60000EB")]
		[Address(RVA = "0xD613E4", Offset = "0xD613E4", VA = "0xD613E4")]
		public void FollowObject(GameObject trackObject, GameObject pool)
		{
		}

		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xD61478", Offset = "0xD61478", VA = "0xD61478")]
		public void Detach()
		{
		}

		[Token(Token = "0x60000ED")]
		[Address(RVA = "0xD614A8", Offset = "0xD614A8", VA = "0xD614A8")]
		public MusicSourceBolter()
		{
		}
	}
	[Token(Token = "0x2000024")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FC14", Offset = "0x89FC14")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FC14", Offset = "0x89FC14")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FC14", Offset = "0x89FC14")]
	public class MusicSourceRecycler : MonoBehaviour, IAutoRecycle
	{
		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public AudioSource Source;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MusicSourceTimer Timer;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool RecycleOnFinished;

		[Token(Token = "0x14000002")]
		public event Action<IAutoRecycle> AutoRecycleHandler
		{
			[Token(Token = "0x60000EF")]
			[Address(RVA = "0xD61538", Offset = "0xD61538", VA = "0xD61538", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE48C", Offset = "0x8DE48C")]
			add
			{
			}
			[Token(Token = "0x60000F0")]
			[Address(RVA = "0xD615DC", Offset = "0xD615DC", VA = "0xD615DC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE49C", Offset = "0x8DE49C")]
			remove
			{
			}
		}

		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xD61680", Offset = "0xD61680", VA = "0xD61680", Slot = "6")]
		public void SetActive(bool value)
		{
		}

		[Token(Token = "0x60000F2")]
		[Address(RVA = "0xD61684", Offset = "0xD61684", VA = "0xD61684", Slot = "7")]
		public void Play()
		{
		}

		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xD61688", Offset = "0xD61688", VA = "0xD61688", Slot = "8")]
		public void Stop()
		{
		}

		[Token(Token = "0x60000F4")]
		[Address(RVA = "0xD6168C", Offset = "0xD6168C", VA = "0xD6168C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xD61710", Offset = "0xD61710", VA = "0xD61710")]
		private void Update()
		{
		}

		[Token(Token = "0x60000F6")]
		[Address(RVA = "0xD6175C", Offset = "0xD6175C", VA = "0xD6175C")]
		public void Recycle()
		{
		}

		[Token(Token = "0x60000F7")]
		[Address(RVA = "0xD61884", Offset = "0xD61884", VA = "0xD61884")]
		protected void InternalRecycle()
		{
		}

		[Token(Token = "0x60000F8")]
		[Address(RVA = "0xD61924", Offset = "0xD61924", VA = "0xD61924")]
		public MusicSourceRecycler()
		{
		}
	}
	[Token(Token = "0x2000025")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FCC8", Offset = "0x89FCC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FCC8", Offset = "0x89FCC8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FCC8", Offset = "0x89FCC8")]
	public class MusicSourceTimer : MonoBehaviour
	{
		[Token(Token = "0x200043F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACD4", Offset = "0x8AACD4")]
		private sealed class <FadeCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001C7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001C7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001C7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float duration;

			[Token(Token = "0x4001C7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MusicSourceTimer <>4__this;

			[Token(Token = "0x4001C80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float destination;

			[Token(Token = "0x4001C81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool stopOnEnd;

			[Token(Token = "0x4001C82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float waitDelay;

			[Token(Token = "0x4001C83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public float origin;

			[Token(Token = "0x4001C84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public AnimationCurve curve;

			[Token(Token = "0x4001C85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <t>5__2;

			[Token(Token = "0x4001C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <startTime>5__3;

			[Token(Token = "0x17000408")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B24")]
				[Address(RVA = "0xD61EDC", Offset = "0xD61EDC", VA = "0xD61EDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000409")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B26")]
				[Address(RVA = "0xD61F44", Offset = "0xD61F44", VA = "0xD61F44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B21")]
			[Address(RVA = "0xD61B94", Offset = "0xD61B94", VA = "0xD61B94")]
			[DebuggerHidden]
			public <FadeCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001B22")]
			[Address(RVA = "0xD61C50", Offset = "0xD61C50", VA = "0xD61C50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B23")]
			[Address(RVA = "0xD61C54", Offset = "0xD61C54", VA = "0xD61C54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B25")]
			[Address(RVA = "0xD61EE4", Offset = "0xD61EE4", VA = "0xD61EE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource Source;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool FadingOut;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float TargetVolume;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MusicSourceBolter _bolter;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MusicSourceRecycler _recycler;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IEnumerator _activeCoroutine;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MusicTrack _stingerValue;

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MusicManager _manager;

		[Token(Token = "0x60000F9")]
		[Address(RVA = "0xD6192C", Offset = "0xD6192C", VA = "0xD6192C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60000FA")]
		[Address(RVA = "0xD5D948", Offset = "0xD5D948", VA = "0xD5D948")]
		public void SetTarget(GameObject targetObject, GameObject poolParent)
		{
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0xD5D4BC", Offset = "0xD5D4BC", VA = "0xD5D4BC")]
		public void MakeStinger(MusicTrack stinger, MusicManager manager)
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xD617B8", Offset = "0xD617B8", VA = "0xD617B8")]
		public void ClearStinger()
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xD5D3D4", Offset = "0xD5D3D4", VA = "0xD5D3D4")]
		public void FadeIn(float destination, float duration, float delay, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xD5D960", Offset = "0xD5D960", VA = "0xD5D960")]
		public void FadeOut(float duration, float delay, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xD5EF18", Offset = "0xD5EF18", VA = "0xD5EF18")]
		public void MixChange(float destination, float duration, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xD61AC4", Offset = "0xD61AC4", VA = "0xD61AC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE4AC", Offset = "0x8DE4AC")]
		private IEnumerator FadeCoroutine(float origin, float destination, float duration, float waitDelay, AnimationCurve curve, bool stopOnEnd)
		{
			return null;
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0xD61BC0", Offset = "0xD61BC0", VA = "0xD61BC0")]
		public MusicSourceTimer()
		{
		}
	}
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FD7C", Offset = "0x89FD7C")]
	public class MusicSwitch : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000440")]
		public class MusicSwitchObject
		{
			[Token(Token = "0x4001C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string StateName;

			[Token(Token = "0x4001C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MusicTrack Track;

			[Token(Token = "0x6001B27")]
			[Address(RVA = "0xD623C4", Offset = "0xD623C4", VA = "0xD623C4")]
			public MusicSwitchObject()
			{
			}
		}

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DefaultSwitchState;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string CurrentSwitchState;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public List<MusicSwitchObject> MusicSwitchTracks;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		private Dictionary<string, MusicTrack> _stateMapDict;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _containsDefault;

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xD61F4C", Offset = "0xD61F4C", VA = "0xD61F4C")]
		[ExecuteInEditMode]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xD622B0", Offset = "0xD622B0", VA = "0xD622B0")]
		public void SetSwitchState(string newState)
		{
		}

		[Token(Token = "0x6000105")]
		[Address(RVA = "0xD60FCC", Offset = "0xD60FCC", VA = "0xD60FCC")]
		public MusicTrack GetTrack()
		{
			return null;
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xD622B8", Offset = "0xD622B8", VA = "0xD622B8")]
		public MusicSwitch()
		{
		}
	}
	[Token(Token = "0x2000027")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FDE8", Offset = "0x89FDE8")]
	public class MusicTimebasedStingerList : ScriptableObject
	{
		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MusicTrack DefaultStinger;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<MusicTimebasedStinger> StingerList;

		[Token(Token = "0x6000108")]
		[Address(RVA = "0xD623D4", Offset = "0xD623D4", VA = "0xD623D4")]
		[ExecuteInEditMode]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000109")]
		[Address(RVA = "0xD62978", Offset = "0xD62978", VA = "0xD62978")]
		private int CompareNoDuplicates(MusicTimebasedStinger x, MusicTimebasedStinger y)
		{
			return default(int);
		}

		[Token(Token = "0x600010A")]
		[Address(RVA = "0xD629C8", Offset = "0xD629C8", VA = "0xD629C8")]
		public MusicTrack GetTrack(float elapsedTime)
		{
			return null;
		}

		[Token(Token = "0x600010B")]
		[Address(RVA = "0xD62AA8", Offset = "0xD62AA8", VA = "0xD62AA8")]
		public MusicTimebasedStingerList()
		{
		}
	}
	[Token(Token = "0x2000028")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FE54", Offset = "0x89FE54")]
	public class MusicTrack : ScriptableObject
	{
		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject SourcePrefab;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup Output;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsLooping;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool IsStinger;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8ACC10", Offset = "0x8ACC10")]
		public float StartDelay;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ACC48", Offset = "0x8ACC48")]
		public float Tempo;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACC80", Offset = "0x8ACC80")]
		public int BeatsPerMeasure;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int ValuePerBeat;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int PickupBeats;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int PickupValuePerBeat;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACCB8", Offset = "0x8ACCB8")]
		public float TotalDuration;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float ExitTime;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FadeOutTimeOnStop;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public AnimationCurve FadeOutCurveOnStop;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MusicLayer> MusicLayersList;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MusicManager _musicManager;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SaveManager _saveManager;

		[Token(Token = "0x1700000D")]
		public bool IsPlaying
		{
			[Token(Token = "0x600010D")]
			[Address(RVA = "0xD62B38", Offset = "0xD62B38", VA = "0xD62B38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xD62B58", Offset = "0xD62B58", VA = "0xD62B58")]
		[ExecuteInEditMode]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xD5FFE8", Offset = "0xD5FFE8", VA = "0xD5FFE8")]
		public void EnsureAudioIsReady()
		{
		}

		[Token(Token = "0x6000110")]
		[Address(RVA = "0xD63594", Offset = "0xD63594", VA = "0xD63594")]
		public void Play()
		{
		}

		[Token(Token = "0x6000111")]
		[Address(RVA = "0xD635B4", Offset = "0xD635B4", VA = "0xD635B4")]
		public void PlayWithLastVolumeSetting()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xD61180", Offset = "0xD61180", VA = "0xD61180")]
		public void PlayWithArray(List<GameObject> targList)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xD635F4", Offset = "0xD635F4", VA = "0xD635F4")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xD63614", Offset = "0xD63614", VA = "0xD63614")]
		public void StopImmediate()
		{
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xD63638", Offset = "0xD63638", VA = "0xD63638")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xD63654", Offset = "0xD63654", VA = "0xD63654")]
		public void Unpause()
		{
		}

		[Token(Token = "0x6000117")]
		[Address(RVA = "0xD63670", Offset = "0xD63670", VA = "0xD63670")]
		public void Restart()
		{
		}

		[Token(Token = "0x6000118")]
		[Address(RVA = "0xD63420", Offset = "0xD63420", VA = "0xD63420")]
		private float DurationCheck()
		{
			return default(float);
		}

		[Token(Token = "0x6000119")]
		[Address(RVA = "0xD62B3C", Offset = "0xD62B3C", VA = "0xD62B3C")]
		private bool IsPlayingCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x600011A")]
		[Address(RVA = "0xD6368C", Offset = "0xD6368C", VA = "0xD6368C")]
		public MusicTrack()
		{
		}
	}
	[Token(Token = "0x2000029")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FEC0", Offset = "0x89FEC0")]
	public class MusicTransition : ScriptableObject
	{
		[Token(Token = "0x2000441")]
		public enum DestinationDelayType
		{
			[Token(Token = "0x4001C8A")]
			UseManualDelayTime,
			[Token(Token = "0x4001C8B")]
			UseStingerTrackExitTime
		}

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Notify _log;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACD10", Offset = "0x8ACD10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACD10", Offset = "0x8ACD10")]
		[SerializeField]
		private MusicTrack _originTrack;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public MusicExitPoint ExitPoint;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float OriginFadeOutDelay;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float OriginFadeOutDuration;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public AnimationCurve OriginFadeOutCurve;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACDA0", Offset = "0x8ACDA0")]
		[SerializeField]
		private MusicTrack _destinationTrack;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public DestinationDelayType DestinationFadeInDelayType;

		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8ACDEC", Offset = "0x8ACDEC")]
		public float DestinationFadeInDelay;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float DestinationFadeInDuration;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public AnimationCurve DestinationFadeInCurve;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACE3C", Offset = "0x8ACE3C")]
		[SerializeField]
		public UnityEngine.Object Stinger;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float StingerPlayDelay;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float StingerFadeInDuration;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public AnimationCurve StingerFadeInCurve;

		[Token(Token = "0x600011C")]
		[Address(RVA = "0xD63778", Offset = "0xD63778", VA = "0xD63778")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600011D")]
		[Address(RVA = "0xD63A6C", Offset = "0xD63A6C", VA = "0xD63A6C")]
		public MusicTrack GetTransitionOrigin()
		{
			return null;
		}

		[Token(Token = "0x600011E")]
		[Address(RVA = "0xD63A74", Offset = "0xD63A74", VA = "0xD63A74")]
		public MusicTrack GetTransitionDestination()
		{
			return null;
		}

		[Token(Token = "0x600011F")]
		[Address(RVA = "0xD5D50C", Offset = "0xD5D50C", VA = "0xD5D50C")]
		public MusicTrack GetStinger(float elapsedTime)
		{
			return null;
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xD63A7C", Offset = "0xD63A7C", VA = "0xD63A7C")]
		public void GetStingerTracks(ISet<MusicTrack> list)
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0xD5D704", Offset = "0xD5D704", VA = "0xD5D704")]
		public float GetDestinationDelay(MusicTrack stinger)
		{
			return default(float);
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0xD63E80", Offset = "0xD63E80", VA = "0xD63E80")]
		public MusicTransition()
		{
		}
	}
	[Token(Token = "0x200002A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x89FF2C", Offset = "0x89FF2C")]
	public class MusicTransitionList : ScriptableObject
	{
		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<MusicTransition> AllTransitionsList;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<MusicTrack, Dictionary<MusicTrack, MusicTransition>> _trackTransitionDict;

		[Token(Token = "0x1700000E")]
		public bool IsInitialized
		{
			[Token(Token = "0x6000124")]
			[Address(RVA = "0xD63FB0", Offset = "0xD63FB0", VA = "0xD63FB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000125")]
		[Address(RVA = "0xD5AD70", Offset = "0xD5AD70", VA = "0xD5AD70")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000126")]
		[Address(RVA = "0xD5C170", Offset = "0xD5C170", VA = "0xD5C170")]
		public MusicTransition GetTransition(MusicTrack origin, MusicTrack destination)
		{
			return null;
		}

		[Token(Token = "0x6000127")]
		[Address(RVA = "0xD64010", Offset = "0xD64010", VA = "0xD64010")]
		public void GetTransitionTracks(MusicTrack origin, ISet<MusicTrack> tracks)
		{
		}

		[Token(Token = "0x6000128")]
		[Address(RVA = "0xD641E0", Offset = "0xD641E0", VA = "0xD641E0")]
		public MusicTransitionList()
		{
		}
	}
}
namespace SG.GFX
{
	[Token(Token = "0x200002B")]
	public class GFXAssertException : Exception
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0xCACC68", Offset = "0xCACC68", VA = "0xCACC68")]
		public GFXAssertException(string message, params object[] args)
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class Assert
	{
		[Token(Token = "0x2000442")]
		public enum Pragma
		{
			[Token(Token = "0x4001C8D")]
			Warning,
			[Token(Token = "0x4001C8E")]
			DisabledWithWarning,
			[Token(Token = "0x4001C8F")]
			Error,
			[Token(Token = "0x4001C90")]
			Exception
		}

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Notify Log;

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xCAC034", Offset = "0xCAC034", VA = "0xCAC034")]
		public static bool AttachedCamera(MonoBehaviour behaviour, out Camera cam, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x600012B")]
		public static bool HasComponent<T>(MonoBehaviour behaviour, out T component, Pragma pragma) where T : Component
		{
			return default(bool);
		}

		[Token(Token = "0x600012C")]
		public static T GetComponent<T>(MonoBehaviour behaviour, Pragma pragma) where T : Component
		{
			return null;
		}

		[Token(Token = "0x600012D")]
		public static bool RequireComponent<T>(MonoBehaviour behaviour, Pragma pragma) where T : Component
		{
			return default(bool);
		}

		[Token(Token = "0x600012E")]
		[Address(RVA = "0xCAC310", Offset = "0xCAC310", VA = "0xCAC310")]
		public static bool NotNull(MonoBehaviour behaviour, object obj, string fieldIdentifier, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x600012F")]
		[Address(RVA = "0xCAC50C", Offset = "0xCAC50C", VA = "0xCAC50C")]
		public static bool HasMaterialProperty(MonoBehaviour behaviour, Material material, string propertyName, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x6000130")]
		[Address(RVA = "0xCAC75C", Offset = "0xCAC75C", VA = "0xCAC75C")]
		public static bool SupportsShaderModel(MonoBehaviour behaviour, int shaderModel, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x6000131")]
		[Address(RVA = "0xCAC8C0", Offset = "0xCAC8C0", VA = "0xCAC8C0")]
		public static bool SupportsCubeRenderTextures(MonoBehaviour behaviour, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x6000132")]
		[Address(RVA = "0xCAC8C8", Offset = "0xCAC8C8", VA = "0xCAC8C8")]
		public static bool SupportsComputeShaders(MonoBehaviour behaviour, Pragma pragma)
		{
			return default(bool);
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xCACA18", Offset = "0xCACA18", VA = "0xCACA18")]
		public static bool SupportsRenderTextureFormat(MonoBehaviour behaviour, Pragma pragma, RenderTextureFormat format)
		{
			return default(bool);
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xCACACC", Offset = "0xCACACC", VA = "0xCACACC")]
		public static bool SupportsRenderTextureFormats(MonoBehaviour behaviour, Pragma pragma, RenderTextureFormat[] formats)
		{
			return default(bool);
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xCAC1C0", Offset = "0xCAC1C0", VA = "0xCAC1C0")]
		private static void DoLog(UnityEngine.Object context, Pragma pragma, string message, params object[] args)
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0xCACCFC", Offset = "0xCACCFC", VA = "0xCACCFC")]
		public Assert()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200002D")]
	public struct ClearInstructions
	{
		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool clearDepth;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool clearColor;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color backgroundColor;

		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float depth;

		[Token(Token = "0x1700000F")]
		public static ClearInstructions DontClear
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0xCAE4AC", Offset = "0xCAE4AC", VA = "0xCAE4AC")]
			get
			{
				return default(ClearInstructions);
			}
		}

		[Token(Token = "0x17000010")]
		public static ClearInstructions ToBlack
		{
			[Token(Token = "0x6000139")]
			[Address(RVA = "0xCAE504", Offset = "0xCAE504", VA = "0xCAE504")]
			get
			{
				return default(ClearInstructions);
			}
		}

		[Token(Token = "0x17000011")]
		public static ClearInstructions ToWhite
		{
			[Token(Token = "0x600013A")]
			[Address(RVA = "0xCAE544", Offset = "0xCAE544", VA = "0xCAE544")]
			get
			{
				return default(ClearInstructions);
			}
		}

		[Token(Token = "0x17000012")]
		public static ClearInstructions OnlyDepth0
		{
			[Token(Token = "0x600013B")]
			[Address(RVA = "0xCAE584", Offset = "0xCAE584", VA = "0xCAE584")]
			get
			{
				return default(ClearInstructions);
			}
		}

		[Token(Token = "0x17000013")]
		public static ClearInstructions OnlyDepth1
		{
			[Token(Token = "0x600013C")]
			[Address(RVA = "0xCAE5C0", Offset = "0xCAE5C0", VA = "0xCAE5C0")]
			get
			{
				return default(ClearInstructions);
			}
		}

		[Token(Token = "0x600013D")]
		[Address(RVA = "0x967E48", Offset = "0x967E48", VA = "0x967E48")]
		public ClearInstructions(bool clearDepth, bool clearColor, Color backgroundColor, float depth = 1f)
		{
		}

		[Token(Token = "0x600013E")]
		[Address(RVA = "0xCAE600", Offset = "0xCAE600", VA = "0xCAE600")]
		public static void Invoke(ClearInstructions instructions)
		{
		}
	}
	[Token(Token = "0x200002E")]
	public struct DepthBufferSize
	{
		[Token(Token = "0x40001AC")]
		public const int ZERO = 0;

		[Token(Token = "0x40001AD")]
		public const int SIXTEEN = 16;

		[Token(Token = "0x40001AE")]
		public const int TWENTY_FOUR = 24;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static DepthBufferSize Zero;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static DepthBufferSize Sixteen;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static DepthBufferSize TwentyFour;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int value;

		[Token(Token = "0x600013F")]
		[Address(RVA = "0x967E68", Offset = "0x967E68", VA = "0x967E68")]
		private DepthBufferSize(int value)
		{
		}

		[Token(Token = "0x6000140")]
		[Address(RVA = "0xCAFFA8", Offset = "0xCAFFA8", VA = "0xCAFFA8")]
		public static implicit operator int(DepthBufferSize d)
		{
			return default(int);
		}

		[Token(Token = "0x6000141")]
		[Address(RVA = "0xCADEF0", Offset = "0xCADEF0", VA = "0xCADEF0")]
		public static implicit operator DepthBufferSize(int i)
		{
			return default(DepthBufferSize);
		}
	}
	[Token(Token = "0x200002F")]
	public enum DownSample
	{
		[Token(Token = "0x40001B4")]
		None,
		[Token(Token = "0x40001B5")]
		Half,
		[Token(Token = "0x40001B6")]
		Quarter,
		[Token(Token = "0x40001B7")]
		Eighth
	}
	[Token(Token = "0x2000030")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x89FF98", Offset = "0x89FF98")]
	public class GFXModuleComponentAttribute : Attribute
	{
		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string name;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string version;

		[Token(Token = "0x6000143")]
		[Address(RVA = "0xCB0040", Offset = "0xCB0040", VA = "0xCB0040")]
		public GFXModuleComponentAttribute(string name, string version)
		{
		}
	}
	[Token(Token = "0x2000031")]
	public static class GFXModuleHelp
	{
		[Token(Token = "0x40001BA")]
		private const string DOCS_URL = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/";

		[Token(Token = "0x40001BB")]
		public const string DOWNSAMPLED_GRABPASS = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.u7jhknuanng0";

		[Token(Token = "0x40001BC")]
		public const string IMAGEFX_OUTLINE = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.ahgvv6r9vw56";

		[Token(Token = "0x40001BD")]
		public const string MATERIAL_MODIFIER = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.hotz1dp1cz7g";

		[Token(Token = "0x40001BE")]
		public const string CUSTOM_PROJECTOR = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.th55e81iuioz";

		[Token(Token = "0x40001BF")]
		public const string OFFSCREEN_BUFFER_CAMERA = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.ghclltynje3b";

		[Token(Token = "0x40001C0")]
		public const string REPLACEMENT_SHADER_COMPONENT = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.h8sc5xjl2jgj";

		[Token(Token = "0x40001C1")]
		public const string REPLACEMENT_SHADER_DEFINITION = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.gx81phz24bro";

		[Token(Token = "0x40001C2")]
		public const string GRAPHICS_CBUFFER = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.9iz2moizen3f";

		[Token(Token = "0x40001C3")]
		public const string METABLOB_PARTICLES_EXTENSION = "https://docs.google.com/a/schellgames.com/document/d/13UOh5wyVSACtmlxuKKyN5BoLeiURoHl2wj9s-eXlw2A/#heading=h.gtniu12gvku6";
	}
	[Token(Token = "0x2000032")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x89FFCC", Offset = "0x89FFCC")]
	public class ImageFXBase : MonoBehaviour
	{
		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ACEA8", Offset = "0x8ACEA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ACEA8", Offset = "0x8ACEA8")]
		[SerializeField]
		protected Shader shader;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ACF18", Offset = "0x8ACF18")]
		protected int pass;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected Camera camera;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Material material;

		[Token(Token = "0x6000144")]
		[Address(RVA = "0xCB3A04", Offset = "0xCB3A04", VA = "0xCB3A04", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000145")]
		[Address(RVA = "0xCB3A90", Offset = "0xCB3A90", VA = "0xCB3A90", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000146")]
		[Address(RVA = "0xCB3B54", Offset = "0xCB3B54", VA = "0xCB3B54", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000147")]
		[Address(RVA = "0xCB3C08", Offset = "0xCB3C08", VA = "0xCB3C08", Slot = "7")]
		protected virtual void OnRenderImage(Texture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x6000148")]
		[Address(RVA = "0xCB3C94", Offset = "0xCB3C94", VA = "0xCB3C94")]
		public ImageFXBase()
		{
		}
	}
	[Token(Token = "0x2000033")]
	public struct MSAASamples
	{
		[Token(Token = "0x40001C8")]
		public const int NONE = 1;

		[Token(Token = "0x40001C9")]
		public const int TWO = 2;

		[Token(Token = "0x40001CA")]
		public const int FOUR = 4;

		[Token(Token = "0x40001CB")]
		public const int EIGHT = 8;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static MSAASamples None;

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static MSAASamples Two;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static MSAASamples Four;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static MSAASamples Eight;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int value;

		[Token(Token = "0x6000149")]
		[Address(RVA = "0x967E70", Offset = "0x967E70", VA = "0x967E70")]
		private MSAASamples(int value)
		{
		}

		[Token(Token = "0x600014A")]
		[Address(RVA = "0xCB3D44", Offset = "0xCB3D44", VA = "0xCB3D44")]
		public static implicit operator int(MSAASamples d)
		{
			return default(int);
		}

		[Token(Token = "0x600014B")]
		[Address(RVA = "0xCB3D48", Offset = "0xCB3D48", VA = "0xCB3D48")]
		public static implicit operator MSAASamples(int i)
		{
			return default(MSAASamples);
		}
	}
	[Serializable]
	[Token(Token = "0x2000034")]
	public struct Quad
	{
		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 blPosition;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 brPosition;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 trPosition;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 tlPosition;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector2 blTexcoord;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector2 brTexcoord;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 trTexcoord;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector2 tlTexcoord;

		[Token(Token = "0x17000014")]
		public static Quad FullScreen
		{
			[Token(Token = "0x600014D")]
			[Address(RVA = "0xCB49B4", Offset = "0xCB49B4", VA = "0xCB49B4")]
			get
			{
				return default(Quad);
			}
		}

		[Token(Token = "0x600014E")]
		[Address(RVA = "0xCB4B50", Offset = "0xCB4B50", VA = "0xCB4B50")]
		public static Quad Mul(Matrix4x4 matrix, Quad quad)
		{
			return default(Quad);
		}

		[Token(Token = "0x600014F")]
		[Address(RVA = "0xCB4C5C", Offset = "0xCB4C5C", VA = "0xCB4C5C")]
		public static Quad MulTRS(Matrix4x4 matrix, Quad quad)
		{
			return default(Quad);
		}
	}
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A0030", Offset = "0x8A0030")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A0030", Offset = "0x8A0030")]
	public class ReplacementShaderDefinition : ScriptableObject
	{
		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string replacementTag;

		[Token(Token = "0x17000015")]
		public Shader Shader
		{
			[Token(Token = "0x6000150")]
			[Address(RVA = "0xCB4D68", Offset = "0xCB4D68", VA = "0xCB4D68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		public string ReplacementTag
		{
			[Token(Token = "0x6000151")]
			[Address(RVA = "0xCB4D70", Offset = "0xCB4D70", VA = "0xCB4D70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000152")]
		[Address(RVA = "0xCB4D78", Offset = "0xCB4D78", VA = "0xCB4D78")]
		public static ReplacementShaderDefinition Create(Shader shader, string replacementTag)
		{
			return null;
		}

		[Token(Token = "0x6000153")]
		[Address(RVA = "0xCAE3EC", Offset = "0xCAE3EC", VA = "0xCAE3EC")]
		public void Apply(Camera camera)
		{
		}

		[Token(Token = "0x6000154")]
		[Address(RVA = "0xCADB70", Offset = "0xCADB70", VA = "0xCADB70")]
		public void Render(Camera camera)
		{
		}

		[Token(Token = "0x6000155")]
		[Address(RVA = "0xCB4E00", Offset = "0xCB4E00", VA = "0xCB4E00")]
		public ReplacementShaderDefinition()
		{
		}
	}
}
namespace SG.GFX.Utils
{
	[Token(Token = "0x2000036")]
	public static class Blit
	{
		[Token(Token = "0x6000156")]
		[Address(RVA = "0xCB5F8C", Offset = "0xCB5F8C", VA = "0xCB5F8C")]
		public static void OrthoQuad(RenderTexture target, Quad quad, Material material, int materialPass = 0)
		{
		}

		[Token(Token = "0x6000157")]
		[Address(RVA = "0xCB6028", Offset = "0xCB6028", VA = "0xCB6028")]
		public static void QuadWithPerspective(RenderTexture target, Quad quad, Matrix4x4 matrix, Material material, int materialPass = 0)
		{
		}
	}
	[Token(Token = "0x2000037")]
	public static class ColorMath
	{
		[Token(Token = "0x17000017")]
		public static Matrix4x4 Mat_sRGB2Xyz
		{
			[Token(Token = "0x600015D")]
			[Address(RVA = "0xCB6444", Offset = "0xCB6444", VA = "0xCB6444")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000018")]
		public static Matrix4x4 Mat_Xyz2sRGB
		{
			[Token(Token = "0x600015E")]
			[Address(RVA = "0xCB648C", Offset = "0xCB648C", VA = "0xCB648C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x17000019")]
		public static Matrix4x4 Mat_sRGB2YIQ
		{
			[Token(Token = "0x600015F")]
			[Address(RVA = "0xCB64D4", Offset = "0xCB64D4", VA = "0xCB64D4")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x1700001A")]
		public static Matrix4x4 Mat_YIQ2sRGB
		{
			[Token(Token = "0x6000160")]
			[Address(RVA = "0xCB651C", Offset = "0xCB651C", VA = "0xCB651C")]
			get
			{
				return default(Matrix4x4);
			}
		}

		[Token(Token = "0x6000158")]
		[Address(RVA = "0xCB60DC", Offset = "0xCB60DC", VA = "0xCB60DC")]
		public static Color EncodeFloatAsRGB(float f)
		{
			return default(Color);
		}

		[Token(Token = "0x6000159")]
		[Address(RVA = "0xCB61AC", Offset = "0xCB61AC", VA = "0xCB61AC")]
		public static float DecodeRGBToFloat(Color color)
		{
			return default(float);
		}

		[Token(Token = "0x600015A")]
		[Address(RVA = "0xCB61B8", Offset = "0xCB61B8", VA = "0xCB61B8")]
		public static Color Invert(Color input, bool keepAlpha = true)
		{
			return default(Color);
		}

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xCB6204", Offset = "0xCB6204", VA = "0xCB6204")]
		public static Color LerpLCH(Color a, Color b, float t)
		{
			return default(Color);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xCB6358", Offset = "0xCB6358", VA = "0xCB6358")]
		public static Vector4 TransformColor(Matrix4x4 mat, Color color)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000161")]
		[Address(RVA = "0xCB6564", Offset = "0xCB6564", VA = "0xCB6564")]
		public static Vector4 sRGBA2Linear(Color sRGBA)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000162")]
		[Address(RVA = "0xCB6710", Offset = "0xCB6710", VA = "0xCB6710")]
		public static Color Linear2sRGB(Vector4 rgba)
		{
			return default(Color);
		}

		[Token(Token = "0x6000163")]
		[Address(RVA = "0xCB68A4", Offset = "0xCB68A4", VA = "0xCB68A4")]
		public static Vector4 RGBA2HSLA(Color rgba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000164")]
		[Address(RVA = "0xCB6A40", Offset = "0xCB6A40", VA = "0xCB6A40")]
		public static Color HSLA2RGBA(Vector4 hsla)
		{
			return default(Color);
		}

		[Token(Token = "0x6000165")]
		[Address(RVA = "0xCB6B08", Offset = "0xCB6B08", VA = "0xCB6B08")]
		private static float Hue2RGBComponent(float f1, float f2, float hue)
		{
			return default(float);
		}

		[Token(Token = "0x6000166")]
		[Address(RVA = "0xCB6328", Offset = "0xCB6328", VA = "0xCB6328")]
		public static Vector4 RGBA2CIE_LCHA(Color rgba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000167")]
		[Address(RVA = "0xCB6340", Offset = "0xCB6340", VA = "0xCB6340")]
		public static Color CIE_LCHA2RGBA(Vector4 lcha)
		{
			return default(Color);
		}

		[Token(Token = "0x6000168")]
		[Address(RVA = "0xCB7228", Offset = "0xCB7228", VA = "0xCB7228")]
		public static Vector4 RGBA2XyzA(Color32 rgba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000169")]
		[Address(RVA = "0xCB6B94", Offset = "0xCB6B94", VA = "0xCB6B94")]
		public static Vector4 RGBA2XyzA(Color rgba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600016A")]
		[Address(RVA = "0xCB7138", Offset = "0xCB7138", VA = "0xCB7138")]
		public static Color XyzA2RGBA(Vector4 xyza)
		{
			return default(Color);
		}

		[Token(Token = "0x600016B")]
		[Address(RVA = "0xCB6BF8", Offset = "0xCB6BF8", VA = "0xCB6BF8")]
		public static Vector4 XyzA2CIE_LabA(Vector4 xyza)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600016C")]
		[Address(RVA = "0xCB6FB4", Offset = "0xCB6FB4", VA = "0xCB6FB4")]
		public static Vector4 CIE_LabA2XyzA(Vector4 laba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600016D")]
		[Address(RVA = "0xCB6DC4", Offset = "0xCB6DC4", VA = "0xCB6DC4")]
		public static Vector4 CIE_LabA2CIE_LCHA(Vector4 laba)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600016E")]
		[Address(RVA = "0xCB6F00", Offset = "0xCB6F00", VA = "0xCB6F00")]
		public static Vector4 CIE_LCHA2CIE_LabA(Vector4 lcha)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x2000038")]
	public class GLUtils
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0xD58084", Offset = "0xD58084", VA = "0xD58084")]
		public static void InitializeRenderTexture(RenderTexture target, string name, bool generateMipMaps, FilterMode filterMode, TextureWrapMode wrapMode, ClearInstructions instructions)
		{
		}

		[Token(Token = "0x6000170")]
		[Address(RVA = "0xD58188", Offset = "0xD58188", VA = "0xD58188")]
		public static void DrawQuad(Quad quad)
		{
		}

		[Token(Token = "0x6000171")]
		[Address(RVA = "0xD58140", Offset = "0xD58140", VA = "0xD58140")]
		public static void ClearTarget(RenderTexture target, ClearInstructions instructions)
		{
		}

		[Token(Token = "0x6000172")]
		[Address(RVA = "0xD58210", Offset = "0xD58210", VA = "0xD58210")]
		public static void ClearWithMaterial(RenderTexture target, Material material, int pass = 0)
		{
		}

		[Token(Token = "0x6000173")]
		[Address(RVA = "0xD58278", Offset = "0xD58278", VA = "0xD58278")]
		public static void CopyBufferToTexture(RenderTexture source, ref Texture2D destination, Rect sampleRect, int destX, int destY, bool recalculateMipMaps)
		{
		}

		[Token(Token = "0x6000174")]
		[Address(RVA = "0xD582FC", Offset = "0xD582FC", VA = "0xD582FC")]
		public GLUtils()
		{
		}
	}
	[Token(Token = "0x2000039")]
	public static class MatrixMath
	{
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xD58304", Offset = "0xD58304", VA = "0xD58304")]
		public static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Quaternion angle)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000176")]
		[Address(RVA = "0xD58428", Offset = "0xD58428", VA = "0xD58428")]
		public static Matrix4x4 GetWorldTRS(Transform transform)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000177")]
		[Address(RVA = "0xD58538", Offset = "0xD58538", VA = "0xD58538")]
		public static void DeriveCameraProperties(Matrix4x4 projectionMatrix, out float fov, out float aspect, out float nearClip, out float farClip)
		{
		}
	}
	[Token(Token = "0x200003A")]
	public class MeshBlit
	{
		[Token(Token = "0x6000178")]
		[Address(RVA = "0xD58688", Offset = "0xD58688", VA = "0xD58688")]
		public static void Render(Mesh mesh, Matrix4x4 meshTRS, Camera camera, RenderTexture targetBuffer, ClearInstructions clearInstructions, Material material, int pass = 0)
		{
		}

		[Token(Token = "0x6000179")]
		[Address(RVA = "0xD58808", Offset = "0xD58808", VA = "0xD58808")]
		public static void Draw(Mesh mesh, Matrix4x4 meshTRS)
		{
		}

		[Token(Token = "0x600017A")]
		[Address(RVA = "0xD588E8", Offset = "0xD588E8", VA = "0xD588E8")]
		public MeshBlit()
		{
		}
	}
	[Token(Token = "0x200003B")]
	public static class RenderTextureUtility
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xD588F0", Offset = "0xD588F0", VA = "0xD588F0")]
		public static RenderTexture Create(RenderTextureDescriptor descriptor, out RenderTargetIdentifier id)
		{
			return null;
		}

		[Token(Token = "0x600017C")]
		[Address(RVA = "0xD589B4", Offset = "0xD589B4", VA = "0xD589B4")]
		public static RenderTextureDescriptor GetScreenDescriptor()
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x600017D")]
		[Address(RVA = "0xD58A60", Offset = "0xD58A60", VA = "0xD58A60")]
		public static RenderTextureDescriptor GetScaledDescriptor(float scale)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x600017E")]
		[Address(RVA = "0xD58C5C", Offset = "0xD58C5C", VA = "0xD58C5C")]
		public static RenderTextureDescriptor GetScaledDescriptor(DownSample downsample)
		{
			return default(RenderTextureDescriptor);
		}

		[Token(Token = "0x600017F")]
		[Address(RVA = "0xD58D0C", Offset = "0xD58D0C", VA = "0xD58D0C")]
		public static RenderTextureDescriptor Descriptor(int width, int height, RenderTextureFormat format = RenderTextureFormat.Default, int depth = 0)
		{
			return default(RenderTextureDescriptor);
		}
	}
	[Token(Token = "0x200003C")]
	public static class ScreenUtils
	{
		[Token(Token = "0x6000180")]
		[Address(RVA = "0xD58D90", Offset = "0xD58D90", VA = "0xD58D90")]
		public static int GetScaledWidth(float scale, Camera sourceCamera)
		{
			return default(int);
		}

		[Token(Token = "0x6000181")]
		[Address(RVA = "0xD58E50", Offset = "0xD58E50", VA = "0xD58E50")]
		public static int GetScaledHeight(float scale, Camera sourceCamera)
		{
			return default(int);
		}

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xD58B04", Offset = "0xD58B04", VA = "0xD58B04")]
		public static int GetScaledWidth(float scale)
		{
			return default(int);
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xD58BB0", Offset = "0xD58BB0", VA = "0xD58BB0")]
		public static int GetScaledHeight(float scale)
		{
			return default(int);
		}
	}
}
namespace SG.GFX.Shaders
{
	[Token(Token = "0x200003D")]
	public static class ShaderLib
	{
		[Token(Token = "0x2000443")]
		public static class ImageFX
		{
			[Token(Token = "0x20005EB")]
			public static class Outline
			{
				[Token(Token = "0x170004B6")]
				public static Shader FX
				{
					[Token(Token = "0x6002F07")]
					[Address(RVA = "0xCB1AF8", Offset = "0xCB1AF8", VA = "0xCB1AF8")]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004B7")]
				public static Shader Object
				{
					[Token(Token = "0x6002F08")]
					[Address(RVA = "0xCB1B74", Offset = "0xCB1B74", VA = "0xCB1B74")]
					get
					{
						return null;
					}
				}
			}

			[Token(Token = "0x4001C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Dictionary<Shader, Material> shader2Material;

			[Token(Token = "0x4001C92")]
			private const string IMAGE_FX_SHADER_PATH = "Hidden/SG/ImageFX/";

			[Token(Token = "0x1700040A")]
			public static Shader BlitLerpMask
			{
				[Token(Token = "0x6001B29")]
				[Address(RVA = "0xCB5B0C", Offset = "0xCB5B0C", VA = "0xCB5B0C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040B")]
			public static Shader BlitCopy
			{
				[Token(Token = "0x6001B2A")]
				[Address(RVA = "0xCB5B78", Offset = "0xCB5B78", VA = "0xCB5B78")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040C")]
			public static Shader BlitBlend
			{
				[Token(Token = "0x6001B2B")]
				[Address(RVA = "0xCB5BE4", Offset = "0xCB5BE4", VA = "0xCB5BE4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040D")]
			public static Shader BlitAdd
			{
				[Token(Token = "0x6001B2C")]
				[Address(RVA = "0xCB5C50", Offset = "0xCB5C50", VA = "0xCB5C50")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040E")]
			public static Shader BlitMultiply
			{
				[Token(Token = "0x6001B2D")]
				[Address(RVA = "0xCB5CBC", Offset = "0xCB5CBC", VA = "0xCB5CBC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040F")]
			public static Shader BlitColor
			{
				[Token(Token = "0x6001B2E")]
				[Address(RVA = "0xCB5D28", Offset = "0xCB5D28", VA = "0xCB5D28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000410")]
			public static Shader GaussianBlur
			{
				[Token(Token = "0x6001B2F")]
				[Address(RVA = "0xCB5D94", Offset = "0xCB5D94", VA = "0xCB5D94")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B28")]
			[Address(RVA = "0xCB5A08", Offset = "0xCB5A08", VA = "0xCB5A08")]
			public static Material GetMaterial(Shader shader)
			{
				return null;
			}
		}

		[Token(Token = "0x2000444")]
		public static class Keywords
		{
			[Token(Token = "0x20005EC")]
			public static class DownsampledGrabPass
			{
				[Token(Token = "0x4002387")]
				public const string SG_GRABPASS_ENABLED = "SG_GRABPASS_ENABLED";
			}

			[Token(Token = "0x20005ED")]
			public static class GaussianBlur
			{
				[Token(Token = "0x4002388")]
				public const string BLUR_ALPHA = "BLUR_ALPHA_ON";
			}

			[Token(Token = "0x20005EE")]
			public static class Outline
			{
				[Token(Token = "0x4002389")]
				public const string BLUR_ON = "GAUSSIAN_BLUR_ON";

				[Token(Token = "0x400238A")]
				public const string BLEND_ADDITIVE = "BLEND_ADDITIVE";
			}

			[Token(Token = "0x20005EF")]
			public static class Standard
			{
				[Token(Token = "0x400238B")]
				public const string EMISSION = "_EMISSION";

				[Token(Token = "0x400238C")]
				public const string TEX_METALLIC_GLOSS = "_METALLICGLOSSMAP";

				[Token(Token = "0x400238D")]
				public const string TEX_NORMAL = "_NORMALMAP";

				[Token(Token = "0x400238E")]
				public const string TEX_DETAIL_X2 = "_DETAIL_MULX2";

				[Token(Token = "0x400238F")]
				public const string TEX_PARALLAX = "_PARALLAXMAP";
			}

			[Token(Token = "0x4001C93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Dictionary<string, int> KeyReferences;

			[Token(Token = "0x6001B31")]
			[Address(RVA = "0xCB5E78", Offset = "0xCB5E78", VA = "0xCB5E78")]
			public static int GetReferenceCount(string keyword)
			{
				return default(int);
			}

			[Token(Token = "0x6001B32")]
			[Address(RVA = "0xCB03D0", Offset = "0xCB03D0", VA = "0xCB03D0")]
			public static void Increment(string keyword)
			{
			}

			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xCB0590", Offset = "0xCB0590", VA = "0xCB0590")]
			public static void Decrement(string keyword)
			{
			}
		}

		[Token(Token = "0x2000445")]
		public static class Passes
		{
			[Token(Token = "0x20005F0")]
			public static class Outline
			{
				[Token(Token = "0x4002390")]
				public const int OCCLUSION = 0;

				[Token(Token = "0x4002391")]
				public const int COMPOSITE = 1;
			}

			[Token(Token = "0x20005F1")]
			public static class GaussianBlur
			{
				[Token(Token = "0x4002392")]
				public const int DOWNSAMPLE = 0;

				[Token(Token = "0x4002393")]
				public const int VERTICALBLUR = 1;

				[Token(Token = "0x4002394")]
				public const int HORIZONTALBLUR = 2;

				[Token(Token = "0x4002395")]
				public const int VERTICALBLUR_SGX = 3;

				[Token(Token = "0x4002396")]
				public const int HORIZONTALBLUR_SGX = 4;

				[Token(Token = "0x4002397")]
				public const int COMPOSITE = 5;
			}

			[Token(Token = "0x20005F2")]
			public static class Standard
			{
				[Token(Token = "0x200060E")]
				public static class HighQuality
				{
					[Token(Token = "0x40023E5")]
					public const int FORWARDBASE = 0;

					[Token(Token = "0x40023E6")]
					public const int FORWARDADD = 1;

					[Token(Token = "0x40023E7")]
					public const int SHADOWCASTER = 2;

					[Token(Token = "0x40023E8")]
					public const int DEFERRED = 3;

					[Token(Token = "0x40023E9")]
					public const int META = 4;
				}

				[Token(Token = "0x200060F")]
				public static class LowQuality
				{
					[Token(Token = "0x40023EA")]
					public const int FORWARDBASE = 0;

					[Token(Token = "0x40023EB")]
					public const int FORWARDADD = 1;

					[Token(Token = "0x40023EC")]
					public const int SHADOWCASTER = 2;

					[Token(Token = "0x40023ED")]
					public const int META = 3;
				}
			}
		}

		[Token(Token = "0x2000446")]
		public static class Tags
		{
			[Token(Token = "0x4001C94")]
			public const string FX_GENERAL = "FXType";

			[Token(Token = "0x4001C95")]
			public const string FX_REFLECTION = "Reflection";
		}

		[Token(Token = "0x2000447")]
		public static class Variables
		{
			[Token(Token = "0x20005F3")]
			public static class GaussianBlur
			{
				[Token(Token = "0x4002398")]
				public const string BlurTex = "_BlurTex";

				[Token(Token = "0x4002399")]
				public const string BlurParams = "_BlurParams";

				[Token(Token = "0x400239A")]
				public const string OcclusionTex = "_OcclusionTex";
			}

			[Token(Token = "0x20005F4")]
			public static class Outline
			{
				[Token(Token = "0x400239B")]
				public const string Thickness = "_OutlineThickness";

				[Token(Token = "0x400239C")]
				public const string Channel = "_ChannelColor";

				[Token(Token = "0x400239D")]
				public const string OutlineTex = "_OutlineTex";

				[Token(Token = "0x400239E")]
				public const string OcclusionTex = "_OcclusionTex";

				[Token(Token = "0x400239F")]
				public const string ColorMask = "_OutlineColorMask";

				[Token(Token = "0x40023A0")]
				public const string Color0 = "_OutlineColor0";

				[Token(Token = "0x40023A1")]
				public const string Color1 = "_OutlineColor1";

				[Token(Token = "0x40023A2")]
				public const string Color2 = "_OutlineColor2";

				[Token(Token = "0x40023A3")]
				public const string Color3 = "_OutlineColor3";

				[Token(Token = "0x40023A4")]
				public const string FadeSpeed = "_FadeSpeed";

				[Token(Token = "0x40023A5")]
				public const string FadeOffset = "_FadeOffset";

				[Token(Token = "0x40023A6")]
				public const string FadeMask = "_FadeMask";

				[Token(Token = "0x40023A7")]
				public const string FadeTime = "_FadeTime";

				[Token(Token = "0x40023A8")]
				public const string DepthParams = "_DepthParams";

				[Token(Token = "0x40023A9")]
				public const string OcclusionParams = "_OcclusionParams";
			}

			[Token(Token = "0x20005F5")]
			public static class Globals
			{
				[Token(Token = "0x40023AA")]
				public const string CustomProjector = "_CustomProjector";

				[Token(Token = "0x40023AB")]
				public const string CustomProjectorDirection = "_CustomProjectorDirection";

				[Token(Token = "0x40023AC")]
				public const string GrabTex = "__SGGrabTex";
			}

			[Token(Token = "0x4001C96")]
			public const string MAINTEX = "_MainTex";

			[Token(Token = "0x4001C97")]
			public const string COLOR = "_Color";

			[Token(Token = "0x4001C98")]
			public const string SPEC_COLOR = "_SpecColor";

			[Token(Token = "0x4001C99")]
			public const string BLEND_SRC = "__BlendSrc";

			[Token(Token = "0x4001C9A")]
			public const string BLEND_DST = "__BlendDst";

			[Token(Token = "0x4001C9B")]
			public const string StencilRef = "__StencilRef";

			[Token(Token = "0x4001C9C")]
			public const string StencilComp = "__StencilComp";

			[Token(Token = "0x4001C9D")]
			public const string StencilOp = "__StencilOp";
		}

		[Token(Token = "0x2000448")]
		public static class Replacement
		{
			[Token(Token = "0x4001C9E")]
			private const string REPLACEMENT_SHADER_PATH = "Hidden/SG/Replacement/";
		}

		[Token(Token = "0x2000449")]
		public static class Debugging
		{
			[Token(Token = "0x4001C9F")]
			private const string DEBUGGING_SHADER_PATH = "Hidden/SG/Debugging/";

			[Token(Token = "0x4001CA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static Shader _fallback;

			[Token(Token = "0x17000411")]
			public static Shader Fallback
			{
				[Token(Token = "0x6001B35")]
				[Address(RVA = "0xCB5004", Offset = "0xCB5004", VA = "0xCB5004")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B36")]
				[Address(RVA = "0xCB58D8", Offset = "0xCB58D8", VA = "0xCB58D8")]
				set
				{
				}
			}

			[Token(Token = "0x17000412")]
			public static Shader Null
			{
				[Token(Token = "0x6001B37")]
				[Address(RVA = "0xCB5930", Offset = "0xCB5930", VA = "0xCB5930")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000413")]
			public static Shader Deprecated
			{
				[Token(Token = "0x6001B38")]
				[Address(RVA = "0xCB599C", Offset = "0xCB599C", VA = "0xCB599C")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x200044A")]
		public static class BlendModePresets
		{
			[Token(Token = "0x20005F6")]
			public static class AlphaBlended
			{
				[Token(Token = "0x40023AD")]
				public const int ID = 1;

				[Token(Token = "0x40023AE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly BlendMode Src;

				[Token(Token = "0x40023AF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly BlendMode Dst;
			}

			[Token(Token = "0x20005F7")]
			public static class Additive
			{
				[Token(Token = "0x40023B0")]
				public const int ID = 2;

				[Token(Token = "0x40023B1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly BlendMode Src;

				[Token(Token = "0x40023B2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly BlendMode Dst;
			}

			[Token(Token = "0x20005F8")]
			public static class SoftAdditive
			{
				[Token(Token = "0x40023B3")]
				public const int ID = 3;

				[Token(Token = "0x40023B4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly BlendMode Src;

				[Token(Token = "0x40023B5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly BlendMode Dst;
			}

			[Token(Token = "0x20005F9")]
			public static class Multiply
			{
				[Token(Token = "0x40023B6")]
				public const int ID = 4;

				[Token(Token = "0x40023B7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly BlendMode Src;

				[Token(Token = "0x40023B8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly BlendMode Dst;
			}

			[Token(Token = "0x20005FA")]
			public static class Multiply2X
			{
				[Token(Token = "0x40023B9")]
				public const int ID = 5;

				[Token(Token = "0x40023BA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly BlendMode Src;

				[Token(Token = "0x40023BB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public static readonly BlendMode Dst;
			}

			[Token(Token = "0x4001CA1")]
			public const int CUSTOM_PRESET_INDEX = 0;

			[Token(Token = "0x4001CA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly string[] Presets;

			[Token(Token = "0x4001CA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static readonly GUIContent[] PresetsGUIContents;

			[Token(Token = "0x6001B39")]
			[Address(RVA = "0xCB511C", Offset = "0xCB511C", VA = "0xCB511C")]
			public static void ApplyPreset(int preset, ref float src, ref float dst)
			{
			}
		}

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static Notify Log;

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xCB4E10", Offset = "0xCB4E10", VA = "0xCB4E10")]
		public static Shader SafeFind(string name, bool fallbackIfNull = true)
		{
			return null;
		}
	}
	[Token(Token = "0x200003E")]
	public class ShaderInfo
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xCB4E08", Offset = "0xCB4E08", VA = "0xCB4E08")]
		public ShaderInfo()
		{
		}
	}
}
namespace SG.GFX.Materials
{
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A00B8", Offset = "0x8A00B8")]
	public class MaterialInstanceModifier : MaterialModifier
	{
		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int targetMaterialIndex;

		[NonSerialized]
		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material materialInstance;

		[Token(Token = "0x1700001B")]
		public int MaterialID
		{
			[Token(Token = "0x6000187")]
			[Address(RVA = "0xCB3E18", Offset = "0xCB3E18", VA = "0xCB3E18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000188")]
		[Address(RVA = "0xCB3E20", Offset = "0xCB3E20", VA = "0xCB3E20")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000189")]
		[Address(RVA = "0xCB3FB8", Offset = "0xCB3FB8", VA = "0xCB3FB8", Slot = "5")]
		public override void ApplyAll()
		{
		}

		[Token(Token = "0x600018A")]
		[Address(RVA = "0xCB40E0", Offset = "0xCB40E0", VA = "0xCB40E0", Slot = "6")]
		public override void ApplyProperty(string propertyName)
		{
		}

		[Token(Token = "0x600018B")]
		[Address(RVA = "0xCB41C8", Offset = "0xCB41C8", VA = "0xCB41C8", Slot = "7")]
		public override void ApplyProperty(MaterialModifierProperty prop)
		{
		}

		[Token(Token = "0x600018C")]
		[Address(RVA = "0xCB41E8", Offset = "0xCB41E8", VA = "0xCB41E8")]
		public MaterialInstanceModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000040")]
	public class MaterialInstanceProperty : MaterialModifierProperty
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0xCB42B8", Offset = "0xCB42B8", VA = "0xCB42B8")]
		public MaterialInstanceProperty(string propertyName, string displayName, MaterialModifierPropertyType propertyType)
		{
		}
	}
	[Token(Token = "0x2000041")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A011C", Offset = "0x8A011C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A011C", Offset = "0x8A011C")]
	public abstract class MaterialModifier : MonoBehaviour
	{
		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Notify Log;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Renderer renderer;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MaterialModifierProperty[] properties;

		[Token(Token = "0x600018E")]
		[Address(RVA = "0xCB4318", Offset = "0xCB4318", VA = "0xCB4318", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600018F")]
		[Address(RVA = "0xCB439C", Offset = "0xCB439C", VA = "0xCB439C")]
		public bool Contains(string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000190")]
		[Address(RVA = "0xCB442C", Offset = "0xCB442C", VA = "0xCB442C")]
		public bool TryGet(string propertyName, out MaterialModifierProperty prop)
		{
			return default(bool);
		}

		[Token(Token = "0x6000191")]
		[Address(RVA = "0xCB4114", Offset = "0xCB4114", VA = "0xCB4114")]
		public MaterialModifierProperty GetProperty(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000192")]
		public abstract void ApplyAll();

		[Token(Token = "0x6000193")]
		public abstract void ApplyProperty(string propertyName);

		[Token(Token = "0x6000194")]
		public abstract void ApplyProperty(MaterialModifierProperty prop);

		[Token(Token = "0x6000195")]
		[Address(RVA = "0xCB44FC", Offset = "0xCB44FC", VA = "0xCB44FC")]
		private void AddInternal(MaterialModifierProperty property)
		{
		}

		[Token(Token = "0x6000196")]
		[Address(RVA = "0xCB4568", Offset = "0xCB4568", VA = "0xCB4568")]
		private void RemoveInternal(MaterialModifierProperty property)
		{
		}

		[Token(Token = "0x6000197")]
		[Address(RVA = "0xCB424C", Offset = "0xCB424C", VA = "0xCB424C")]
		protected MaterialModifier()
		{
		}
	}
	[Token(Token = "0x2000042")]
	public enum MaterialModifierPropertyType
	{
		[Token(Token = "0x40001E2")]
		Texture,
		[Token(Token = "0x40001E3")]
		Vector,
		[Token(Token = "0x40001E4")]
		Float,
		[Token(Token = "0x40001E5")]
		Color
	}
	[Serializable]
	[Token(Token = "0x2000043")]
	public class MaterialModifierProperty
	{
		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MaterialModifierPropertyType propertyType;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string propertyName;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string displayName;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Texture textureValue;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector4 vectorValue;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float floatValue;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Color colorValue;

		[Token(Token = "0x1700001C")]
		public string PropertyName
		{
			[Token(Token = "0x6000199")]
			[Address(RVA = "0xCB465C", Offset = "0xCB465C", VA = "0xCB465C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		public string DisplayName
		{
			[Token(Token = "0x600019A")]
			[Address(RVA = "0xCB4664", Offset = "0xCB4664", VA = "0xCB4664")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019B")]
		[Address(RVA = "0xCB42BC", Offset = "0xCB42BC", VA = "0xCB42BC")]
		public MaterialModifierProperty(string propertyName, string displayName, MaterialModifierPropertyType propertyType)
		{
		}

		[Token(Token = "0x600019C")]
		[Address(RVA = "0xCB466C", Offset = "0xCB466C", VA = "0xCB466C")]
		public void SetValue(Texture val)
		{
		}

		[Token(Token = "0x600019D")]
		[Address(RVA = "0xCB4674", Offset = "0xCB4674", VA = "0xCB4674")]
		public void SetValue(Color val)
		{
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xCB4680", Offset = "0xCB4680", VA = "0xCB4680")]
		public void SetValue(float val)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xCB4688", Offset = "0xCB4688", VA = "0xCB4688")]
		public void SetValue(Vector4 val)
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xCB4024", Offset = "0xCB4024", VA = "0xCB4024")]
		internal void __ApplyPropertyInternal(Material mat)
		{
		}

		[Token(Token = "0x60001A1")]
		[Address(RVA = "0xCB4694", Offset = "0xCB4694", VA = "0xCB4694")]
		internal void __ApplyPropertyInternal(MaterialPropertyBlock mat)
		{
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xCB4750", Offset = "0xCB4750", VA = "0xCB4750")]
		public void GetValue(out Color val)
		{
		}

		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xCB475C", Offset = "0xCB475C", VA = "0xCB475C")]
		public void GetValue(out Vector4 val)
		{
		}

		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xCB4768", Offset = "0xCB4768", VA = "0xCB4768")]
		public void GetValue(out float val)
		{
		}

		[Token(Token = "0x60001A5")]
		[Address(RVA = "0xCB4774", Offset = "0xCB4774", VA = "0xCB4774")]
		public void GetValue(out Texture val)
		{
		}
	}
	[Token(Token = "0x2000044")]
	public class MaterialPropertyBlockModifier : MaterialModifier
	{
		[NonSerialized]
		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x60001A6")]
		[Address(RVA = "0xCB4788", Offset = "0xCB4788", VA = "0xCB4788", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60001A7")]
		[Address(RVA = "0xCB47F8", Offset = "0xCB47F8", VA = "0xCB47F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60001A8")]
		[Address(RVA = "0xCB481C", Offset = "0xCB481C", VA = "0xCB481C", Slot = "5")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE540", Offset = "0x8DE540")]
		public override void ApplyAll()
		{
		}

		[Token(Token = "0x60001A9")]
		[Address(RVA = "0xCB48B8", Offset = "0xCB48B8", VA = "0xCB48B8", Slot = "7")]
		public override void ApplyProperty(MaterialModifierProperty prop)
		{
		}

		[Token(Token = "0x60001AA")]
		[Address(RVA = "0xCB4910", Offset = "0xCB4910", VA = "0xCB4910", Slot = "6")]
		public override void ApplyProperty(string propertyName)
		{
		}

		[Token(Token = "0x60001AB")]
		[Address(RVA = "0xCB4950", Offset = "0xCB4950", VA = "0xCB4950")]
		public MaterialPropertyBlockModifier()
		{
		}
	}
}
namespace SG.GFX.ImageEffects
{
	[Token(Token = "0x2000045")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A01A4", Offset = "0x8A01A4")]
	[AttributeAttribute(Name = "GFXModuleComponentAttribute", RVA = "0x8A01A4", Offset = "0x8A01A4")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A01A4", Offset = "0x8A01A4")]
	public class DownsampledGrabPass : MonoBehaviour
	{
		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CameraEvent cameraEvent;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD024", Offset = "0x8AD024")]
		[SerializeField]
		private DownSample downSample;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FauxEnumAttribute", RVA = "0x8AD070", Offset = "0x8AD070")]
		[SerializeField]
		private int msaa;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool useMipMaps;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string textureName;

		[NonSerialized]
		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int id_texture;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTargetIdentifier textureID;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CommandBuffer commandBuffer;

		[NonSerialized]
		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Camera camera;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "FauxEnumAttribute", RVA = "0x8AD19C", Offset = "0x8AD19C")]
		[SerializeField]
		private int depthSize;

		[Token(Token = "0x60001AC")]
		[Address(RVA = "0xCB0090", Offset = "0xCB0090", VA = "0xCB0090")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001AD")]
		[Address(RVA = "0xCB0100", Offset = "0xCB0100", VA = "0xCB0100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60001AE")]
		[Address(RVA = "0xCB0508", Offset = "0xCB0508", VA = "0xCB0508")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60001AF")]
		[Address(RVA = "0xCB0250", Offset = "0xCB0250", VA = "0xCB0250")]
		private void Apply(CommandBuffer input)
		{
		}

		[Token(Token = "0x60001B0")]
		[Address(RVA = "0xCB0694", Offset = "0xCB0694", VA = "0xCB0694")]
		public DownsampledGrabPass()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000046")]
	public class GaussianBlur
	{
		[Token(Token = "0x200044B")]
		public enum Heuristic
		{
			[Token(Token = "0x4001CA5")]
			Standard = 0,
			[Token(Token = "0x4001CA6")]
			Sgx = 2
		}

		[Token(Token = "0x40001F8")]
		private const float MAX_BLUR_RANGE = 10f;

		[Token(Token = "0x40001F9")]
		private const int MAX_ITERATIONS = 4;

		[Token(Token = "0x40001FA")]
		private const string TEMP_BUFFER_NAME_0 = "__GaussianBlurTempTex0";

		[Token(Token = "0x40001FB")]
		private const string TEMP_BUFFER_NAME_1 = "__GaussianBlurTempTex1";

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD294", Offset = "0x8AD294")]
		[SerializeField]
		private DownSample downSample;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD2E0", Offset = "0x8AD2E0")]
		public float blurSize;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD2F8", Offset = "0x8AD2F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD2F8", Offset = "0x8AD2F8")]
		public int blurIterations;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD34C", Offset = "0x8AD34C")]
		public Heuristic heuristic;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int id_BlurParams;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[DebugOnly]
		[SerializeField]
		private Shader shader;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[DebugOnly]
		[SerializeField]
		private Shader overrideShader;

		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[DebugOnly]
		[SerializeField]
		private Material material;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTextureDescriptor desc;

		[Token(Token = "0x1700001E")]
		private Shader Shader
		{
			[Token(Token = "0x60001B1")]
			[Address(RVA = "0xCB0708", Offset = "0xCB0708", VA = "0xCB0708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private bool BlurAlphaChannel
		{
			[Token(Token = "0x60001B5")]
			[Address(RVA = "0xCB082C", Offset = "0xCB082C", VA = "0xCB082C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001B6")]
			[Address(RVA = "0xCB08D0", Offset = "0xCB08D0", VA = "0xCB08D0")]
			set
			{
			}
		}

		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xCB0790", Offset = "0xCB0790", VA = "0xCB0790")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60001B3")]
		[Address(RVA = "0xCB07F4", Offset = "0xCB07F4", VA = "0xCB07F4")]
		private void EnableKeyword(string keyword)
		{
		}

		[Token(Token = "0x60001B4")]
		[Address(RVA = "0xCB0810", Offset = "0xCB0810", VA = "0xCB0810")]
		private void DisableKeyword(string keyword)
		{
		}

		[Token(Token = "0x60001B7")]
		[Address(RVA = "0xCB0994", Offset = "0xCB0994", VA = "0xCB0994")]
		public void Initialize(bool blurAlphaChannel = false)
		{
		}

		[Token(Token = "0x60001B8")]
		[Address(RVA = "0xCB0A8C", Offset = "0xCB0A8C", VA = "0xCB0A8C")]
		public void ApplyPCFDownSample(RenderTexture source, out RenderTexture dest, int downsample, [Optional] Material mat)
		{
		}

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xCB0C3C", Offset = "0xCB0C3C", VA = "0xCB0C3C")]
		public void Apply(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xCB0EDC", Offset = "0xCB0EDC", VA = "0xCB0EDC")]
		public void AppendToCommandBuffer(CommandBuffer target, RenderTexture source, bool stereoEnabled = false)
		{
		}

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xCB12C0", Offset = "0xCB12C0", VA = "0xCB12C0")]
		public GaussianBlur()
		{
		}
	}
	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A026C", Offset = "0x8A026C")]
	public class ObjectOutline : MonoBehaviour
	{
		[Token(Token = "0x200044C")]
		public enum Channel
		{
			[Token(Token = "0x4001CA8")]
			One,
			[Token(Token = "0x4001CA9")]
			Two,
			[Token(Token = "0x4001CAA")]
			Three,
			[Token(Token = "0x4001CAB")]
			Four
		}

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectOutlineCollection[] collections;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Renderer _renderer;

		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Channel channel;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool useAllSubmeshes;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] submeshIndices;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[DebugOnly]
		private int[] allSubmeshes;

		[Token(Token = "0x17000020")]
		public Renderer Renderer
		{
			[Token(Token = "0x60001BC")]
			[Address(RVA = "0xCB12D4", Offset = "0xCB12D4", VA = "0xCB12D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		public Channel ChannelID
		{
			[Token(Token = "0x60001BD")]
			[Address(RVA = "0xCB12DC", Offset = "0xCB12DC", VA = "0xCB12DC")]
			get
			{
				return default(Channel);
			}
		}

		[Token(Token = "0x17000022")]
		public bool UseAllSubmeshes
		{
			[Token(Token = "0x60001BE")]
			[Address(RVA = "0xCB12E4", Offset = "0xCB12E4", VA = "0xCB12E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60001BF")]
		[Address(RVA = "0xCB12EC", Offset = "0xCB12EC", VA = "0xCB12EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001C0")]
		[Address(RVA = "0xCB1438", Offset = "0xCB1438", VA = "0xCB1438")]
		public void SetChannel(Channel channel)
		{
		}

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xCB14A8", Offset = "0xCB14A8", VA = "0xCB14A8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xCB15A8", Offset = "0xCB15A8", VA = "0xCB15A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xCB16A8", Offset = "0xCB16A8", VA = "0xCB16A8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xCB17C8", Offset = "0xCB17C8", VA = "0xCB17C8")]
		public int[] GetSubmeshes()
		{
			return null;
		}

		[Token(Token = "0x60001C5")]
		[Address(RVA = "0xCB17E4", Offset = "0xCB17E4", VA = "0xCB17E4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE578", Offset = "0x8DE578")]
		private void SetChannelOne()
		{
		}

		[Token(Token = "0x60001C6")]
		[Address(RVA = "0xCB17EC", Offset = "0xCB17EC", VA = "0xCB17EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE5B0", Offset = "0x8DE5B0")]
		private void SetChannelTwo()
		{
		}

		[Token(Token = "0x60001C7")]
		[Address(RVA = "0xCB17F4", Offset = "0xCB17F4", VA = "0xCB17F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE5E8", Offset = "0x8DE5E8")]
		private void SetChannelThree()
		{
		}

		[Token(Token = "0x60001C8")]
		[Address(RVA = "0xCB17FC", Offset = "0xCB17FC", VA = "0xCB17FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE620", Offset = "0x8DE620")]
		private void SetChannelFour()
		{
		}

		[Token(Token = "0x60001C9")]
		[Address(RVA = "0xCB1804", Offset = "0xCB1804", VA = "0xCB1804")]
		public ObjectOutline()
		{
		}
	}
	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A02D0", Offset = "0x8A02D0")]
	public class ObjectOutlineCollection : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<ObjectOutline> collection;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AD47C", Offset = "0x8AD47C")]
		private bool <isDirty>k__BackingField;

		[Token(Token = "0x17000023")]
		public bool isDirty
		{
			[Token(Token = "0x60001CA")]
			[Address(RVA = "0xCB18B8", Offset = "0xCB18B8", VA = "0xCB18B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE658", Offset = "0x8DE658")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001CB")]
			[Address(RVA = "0xCB18C0", Offset = "0xCB18C0", VA = "0xCB18C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE668", Offset = "0x8DE668")]
			private set
			{
			}
		}

		[Token(Token = "0x60001CC")]
		[Address(RVA = "0xCB1514", Offset = "0xCB1514", VA = "0xCB1514")]
		public void Add(ObjectOutline obj)
		{
		}

		[Token(Token = "0x60001CD")]
		[Address(RVA = "0xCB1614", Offset = "0xCB1614", VA = "0xCB1614")]
		public void Remove(ObjectOutline obj)
		{
		}

		[Token(Token = "0x60001CE")]
		[Address(RVA = "0xCB18CC", Offset = "0xCB18CC", VA = "0xCB18CC")]
		public ObjectOutline[] Collect()
		{
			return null;
		}

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xCB149C", Offset = "0xCB149C", VA = "0xCB149C")]
		internal void __ForceDirty()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xCB1928", Offset = "0xCB1928", VA = "0xCB1928")]
		public ObjectOutlineCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000049")]
	public class OutlineChannelConfiguration
	{
		[Token(Token = "0x200044D")]
		public enum DrawOptions
		{
			[Token(Token = "0x4001CAD")]
			AlwaysDraw,
			[Token(Token = "0x4001CAE")]
			DrawOnlyWhenOccluded,
			[Token(Token = "0x4001CAF")]
			DrawOccludedTransparent
		}

		[Token(Token = "0x200044E")]
		[Flags]
		public enum ChannelMask
		{
			[Token(Token = "0x4001CB1")]
			One = 1,
			[Token(Token = "0x4001CB2")]
			Two = 2,
			[Token(Token = "0x4001CB3")]
			Three = 4,
			[Token(Token = "0x4001CB4")]
			Four = 8
		}

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private DrawOptions drawMode;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool fade;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD49C", Offset = "0x8AD49C")]
		public float fadeSpeed;

		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD4D4", Offset = "0x8AD4D4")]
		public float fadeOffset;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color lineColor;

		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD50C", Offset = "0x8AD50C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD50C", Offset = "0x8AD50C")]
		private float occlusionOpacity;

		[Token(Token = "0x17000024")]
		public DrawOptions DrawMode
		{
			[Token(Token = "0x60001D2")]
			[Address(RVA = "0xCB19B4", Offset = "0xCB19B4", VA = "0xCB19B4")]
			get
			{
				return default(DrawOptions);
			}
		}

		[Token(Token = "0x17000025")]
		public bool RequiresDepthBuffer
		{
			[Token(Token = "0x60001D3")]
			[Address(RVA = "0xCB19BC", Offset = "0xCB19BC", VA = "0xCB19BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000026")]
		public float OcclusionOpacity
		{
			[Token(Token = "0x60001D4")]
			[Address(RVA = "0xCB19CC", Offset = "0xCB19CC", VA = "0xCB19CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60001D1")]
		[Address(RVA = "0xCB19A4", Offset = "0xCB19A4", VA = "0xCB19A4")]
		public int GetDrawMode()
		{
			return default(int);
		}

		[Token(Token = "0x60001D5")]
		[Address(RVA = "0xCB1A60", Offset = "0xCB1A60", VA = "0xCB1A60")]
		internal void __Reset()
		{
		}

		[Token(Token = "0x60001D6")]
		[Address(RVA = "0xCB1AA8", Offset = "0xCB1AA8", VA = "0xCB1AA8")]
		public OutlineChannelConfiguration()
		{
		}
	}
	[Token(Token = "0x200004A")]
	public enum BlendPreset
	{
		[Token(Token = "0x4000214")]
		Additive,
		[Token(Token = "0x4000215")]
		AlphaBlended
	}
	[Token(Token = "0x200004B")]
	[AttributeAttribute(Name = "GFXModuleComponentAttribute", RVA = "0x8A0330", Offset = "0x8A0330")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A0330", Offset = "0x8A0330")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A0330", Offset = "0x8A0330")]
	public class ScreenSpaceOutline : MonoBehaviour
	{
		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ObjectOutlineCollection collection;

		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD580", Offset = "0x8AD580")]
		[SerializeField]
		private float bufferScale;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD5CC", Offset = "0x8AD5CC")]
		[SerializeField]
		private CameraEvent cameraEvent;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BlendPreset blendMode;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD628", Offset = "0x8AD628")]
		private bool hardEdge;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD674", Offset = "0x8AD674")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD674", Offset = "0x8AD674")]
		private float hardEdgeThreshold;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD6D8", Offset = "0x8AD6D8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD6D8", Offset = "0x8AD6D8")]
		private float edgeBoost;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AD73C", Offset = "0x8AD73C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AD73C", Offset = "0x8AD73C")]
		private float edgePower;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GaussianBlur blurSettings;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OutlineChannelConfiguration channelOne;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OutlineChannelConfiguration channelTwo;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OutlineChannelConfiguration channelThree;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OutlineChannelConfiguration channelFour;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[DebugOnly]
		[SerializeField]
		private Camera camera;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[DebugOnly]
		[SerializeField]
		private bool depthComposite;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[DebugOnly]
		[SerializeField]
		private Shader compositeShader;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[DebugOnly]
		[SerializeField]
		private Shader objectShader;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[DebugOnly]
		[SerializeField]
		private Material compositeMaterial;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AD8C8", Offset = "0x8AD8C8")]
		[SerializeField]
		private Material[] objectMaterials;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color[] clearColors;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ColorWriteMask[] colorMasks;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Color[] colors;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int id_Thickness;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int id_OutlineTex;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int id_BlurTex;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int id_OcclusionTex;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int id_FadeSpeed;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int id_FadeOffset;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int id_FadeMask;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int id_FadeTime;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int id_Color0;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int id_Color1;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int id_Color2;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int id_Color3;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int id_DepthParams;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int id_OcclusionParams;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CommandBuffer commandBuffer;

		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture offscreenColorBuffer;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTargetIdentifier offscreenColorBufferID;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture offscreenOcclusionBuffer;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private RenderTargetIdentifier offscreenOcclusionBufferID;

		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private RenderTargetIdentifier[] rts_ColorAndDepth;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private RenderTargetIdentifier[] rts_ColorOnly;

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private RenderTextureDescriptor blitDesc;

		[Token(Token = "0x17000027")]
		private Shader CompositeShader
		{
			[Token(Token = "0x60001D7")]
			[Address(RVA = "0xCB1AE8", Offset = "0xCB1AE8", VA = "0xCB1AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000028")]
		private Shader ObjectShader
		{
			[Token(Token = "0x60001D8")]
			[Address(RVA = "0xCB1B64", Offset = "0xCB1B64", VA = "0xCB1B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		public BlendPreset BlendMode
		{
			[Token(Token = "0x60001D9")]
			[Address(RVA = "0xCB1BE0", Offset = "0xCB1BE0", VA = "0xCB1BE0")]
			get
			{
				return default(BlendPreset);
			}
			[Token(Token = "0x60001DA")]
			[Address(RVA = "0xCB1C48", Offset = "0xCB1C48", VA = "0xCB1C48")]
			set
			{
			}
		}

		[Token(Token = "0x1700002A")]
		public bool HardEdge
		{
			[Token(Token = "0x60001DB")]
			[Address(RVA = "0xCB1CC4", Offset = "0xCB1CC4", VA = "0xCB1CC4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60001DC")]
			[Address(RVA = "0xCB1D2C", Offset = "0xCB1D2C", VA = "0xCB1D2C")]
			set
			{
			}
		}

		[Token(Token = "0x60001DD")]
		[Address(RVA = "0xCB1DA8", Offset = "0xCB1DA8", VA = "0xCB1DA8")]
		private void Reset()
		{
		}

		[Token(Token = "0x60001DE")]
		[Address(RVA = "0xCB2440", Offset = "0xCB2440", VA = "0xCB2440")]
		private void CollectPropertyIDs()
		{
		}

		[Token(Token = "0x60001DF")]
		[Address(RVA = "0xCB2140", Offset = "0xCB2140", VA = "0xCB2140")]
		private void SetupObjectMaterials()
		{
		}

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0xCB25D0", Offset = "0xCB25D0", VA = "0xCB25D0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0xCB2AB0", Offset = "0xCB2AB0", VA = "0xCB2AB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xCB2D48", Offset = "0xCB2D48", VA = "0xCB2D48")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xCB304C", Offset = "0xCB304C", VA = "0xCB304C")]
		private void Update()
		{
		}

		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xCB3088", Offset = "0xCB3088", VA = "0xCB3088")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xCB3410", Offset = "0xCB3410", VA = "0xCB3410")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xCB3438", Offset = "0xCB3438", VA = "0xCB3438")]
		private void OnRenderImage(RenderTexture src, RenderTexture dst)
		{
		}

		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xCB2414", Offset = "0xCB2414", VA = "0xCB2414")]
		private void UpdateKeywords()
		{
		}

		[Token(Token = "0x60001E8")]
		[Address(RVA = "0xCB285C", Offset = "0xCB285C", VA = "0xCB285C")]
		private void UpdateMaterialParameters()
		{
		}

		[Token(Token = "0x60001E9")]
		[Address(RVA = "0xCB2D6C", Offset = "0xCB2D6C", VA = "0xCB2D6C")]
		private void RebuildCommandBuffer()
		{
		}

		[Token(Token = "0x60001EA")]
		[Address(RVA = "0xCB3784", Offset = "0xCB3784", VA = "0xCB3784")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE678", Offset = "0x8DE678")]
		private void SelectBuffer()
		{
		}

		[Token(Token = "0x60001EB")]
		[Address(RVA = "0xCB3788", Offset = "0xCB3788", VA = "0xCB3788")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE6B0", Offset = "0x8DE6B0")]
		private void SelectCompositeMaterial()
		{
		}

		[Token(Token = "0x60001EC")]
		[Address(RVA = "0xCB378C", Offset = "0xCB378C", VA = "0xCB378C")]
		public ScreenSpaceOutline()
		{
		}
	}
}
namespace SG.GFX.Data
{
	[Token(Token = "0x200004C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A03F8", Offset = "0x8A03F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A03F8", Offset = "0x8A03F8")]
	public class GraphicsCBuffer : ScriptableObject
	{
		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected bool global;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GraphicsCBufferProperty[] properties;

		[Token(Token = "0x1700002B")]
		public bool IsGlobal
		{
			[Token(Token = "0x60001EE")]
			[Address(RVA = "0xCAE62C", Offset = "0xCAE62C", VA = "0xCAE62C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700002C")]
		public GraphicsCBufferProperty[] Properties
		{
			[Token(Token = "0x60001EF")]
			[Address(RVA = "0xCAE634", Offset = "0xCAE634", VA = "0xCAE634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001F0")]
		public T GetPropertyByName<T>(string n) where T : GraphicsCBufferProperty
		{
			return null;
		}

		[Token(Token = "0x60001F1")]
		[Address(RVA = "0xCAE63C", Offset = "0xCAE63C", VA = "0xCAE63C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60001F2")]
		[Address(RVA = "0xCAE6AC", Offset = "0xCAE6AC", VA = "0xCAE6AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE6E8", Offset = "0x8DE6E8")]
		public void UpdateAll()
		{
		}

		[Token(Token = "0x60001F3")]
		[Address(RVA = "0xCAE788", Offset = "0xCAE788", VA = "0xCAE788")]
		public void UpdateAll(Material target)
		{
		}

		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xCAE878", Offset = "0xCAE878", VA = "0xCAE878")]
		public void ApplyFromTo(Material from, Material target)
		{
		}

		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xCAE930", Offset = "0xCAE930", VA = "0xCAE930")]
		public void ApplyFromTo(Material from, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x60001F6")]
		[Address(RVA = "0xCAE9E8", Offset = "0xCAE9E8", VA = "0xCAE9E8")]
		public void UpdateAll(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x60001F7")]
		[Address(RVA = "0xCAEAD8", Offset = "0xCAEAD8", VA = "0xCAEAD8")]
		public GraphicsCBuffer()
		{
		}
	}
	[Token(Token = "0x200004D")]
	public class GraphicsCBufferColorArrayProperty : GraphicsCBufferProperty<Color[]>
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0xCAEB44", Offset = "0xCAEB44", VA = "0xCAEB44")]
		private Vector4[] ToVectorArray(Color[] colors)
		{
			return null;
		}

		[Token(Token = "0x60001F9")]
		[Address(RVA = "0xCAEC24", Offset = "0xCAEC24", VA = "0xCAEC24", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x60001FA")]
		[Address(RVA = "0xCAEC64", Offset = "0xCAEC64", VA = "0xCAEC64", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x60001FB")]
		[Address(RVA = "0xCAECAC", Offset = "0xCAECAC", VA = "0xCAECAC", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x60001FC")]
		[Address(RVA = "0xCAED00", Offset = "0xCAED00", VA = "0xCAED00", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x60001FD")]
		[Address(RVA = "0xCAED5C", Offset = "0xCAED5C", VA = "0xCAED5C")]
		public GraphicsCBufferColorArrayProperty()
		{
		}
	}
	[Token(Token = "0x200004E")]
	public class GraphicsCBufferColorProperty : GraphicsCBufferProperty<Color>
	{
		[Token(Token = "0x60001FE")]
		[Address(RVA = "0xCAEDAC", Offset = "0xCAEDAC", VA = "0xCAEDAC", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x60001FF")]
		[Address(RVA = "0xCAEDE4", Offset = "0xCAEDE4", VA = "0xCAEDE4", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000200")]
		[Address(RVA = "0xCAEE30", Offset = "0xCAEE30", VA = "0xCAEE30", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000201")]
		[Address(RVA = "0xCAEE80", Offset = "0xCAEE80", VA = "0xCAEE80", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000202")]
		[Address(RVA = "0xCAEECC", Offset = "0xCAEECC", VA = "0xCAEECC")]
		public GraphicsCBufferColorProperty()
		{
		}
	}
	[Token(Token = "0x200004F")]
	public class GraphicsCBufferFloatArrayProperty : GraphicsCBufferProperty<float[]>
	{
		[Token(Token = "0x6000203")]
		[Address(RVA = "0xCAEF1C", Offset = "0xCAEF1C", VA = "0xCAEF1C", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000204")]
		[Address(RVA = "0xCAEF50", Offset = "0xCAEF50", VA = "0xCAEF50", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000205")]
		[Address(RVA = "0xCAEF98", Offset = "0xCAEF98", VA = "0xCAEF98", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000206")]
		[Address(RVA = "0xCAEFEC", Offset = "0xCAEFEC", VA = "0xCAEFEC", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000207")]
		[Address(RVA = "0xCAF034", Offset = "0xCAF034", VA = "0xCAF034")]
		public GraphicsCBufferFloatArrayProperty()
		{
		}
	}
	[Token(Token = "0x2000050")]
	public class GraphicsCBufferFloatProperty : GraphicsCBufferProperty<float>
	{
		[Token(Token = "0x6000208")]
		[Address(RVA = "0xCAF084", Offset = "0xCAF084", VA = "0xCAF084", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000209")]
		[Address(RVA = "0xCAF0B8", Offset = "0xCAF0B8", VA = "0xCAF0B8", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x600020A")]
		[Address(RVA = "0xCAF100", Offset = "0xCAF100", VA = "0xCAF100", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x600020B")]
		[Address(RVA = "0xCAF14C", Offset = "0xCAF14C", VA = "0xCAF14C", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x600020C")]
		[Address(RVA = "0xCAF194", Offset = "0xCAF194", VA = "0xCAF194")]
		public GraphicsCBufferFloatProperty()
		{
		}
	}
	[Token(Token = "0x2000051")]
	public class GraphicsCBufferKeywordProperty : GraphicsCBufferProperty
	{
		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		protected bool value;

		[Token(Token = "0x1700002D")]
		public bool Value
		{
			[Token(Token = "0x600020D")]
			[Address(RVA = "0xCAF1E4", Offset = "0xCAF1E4", VA = "0xCAF1E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600020E")]
			[Address(RVA = "0xCAF1EC", Offset = "0xCAF1EC", VA = "0xCAF1EC")]
			set
			{
			}
		}

		[Token(Token = "0x600020F")]
		[Address(RVA = "0xCAF1F8", Offset = "0xCAF1F8", VA = "0xCAF1F8", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000210")]
		[Address(RVA = "0xCAF210", Offset = "0xCAF210", VA = "0xCAF210", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0xCAF27C", Offset = "0xCAF27C", VA = "0xCAF27C", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000212")]
		[Address(RVA = "0xCAF2AC", Offset = "0xCAF2AC", VA = "0xCAF2AC", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000213")]
		[Address(RVA = "0xCAF2EC", Offset = "0xCAF2EC", VA = "0xCAF2EC", Slot = "10")]
		protected override void InitializePropertyIDInternal()
		{
		}

		[Token(Token = "0x6000214")]
		[Address(RVA = "0xCAF2F0", Offset = "0xCAF2F0", VA = "0xCAF2F0")]
		public GraphicsCBufferKeywordProperty()
		{
		}
	}
	[Token(Token = "0x2000052")]
	public class GraphicsCBufferMatrixArrayProperty : GraphicsCBufferProperty<Matrix4x4[]>
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0xCAF310", Offset = "0xCAF310", VA = "0xCAF310", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000216")]
		[Address(RVA = "0xCAF344", Offset = "0xCAF344", VA = "0xCAF344", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000217")]
		[Address(RVA = "0xCAF38C", Offset = "0xCAF38C", VA = "0xCAF38C", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xCAF3E0", Offset = "0xCAF3E0", VA = "0xCAF3E0", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xCAF428", Offset = "0xCAF428", VA = "0xCAF428")]
		public GraphicsCBufferMatrixArrayProperty()
		{
		}
	}
	[Token(Token = "0x2000053")]
	public class GraphicsCBufferMatrixProperty : GraphicsCBufferProperty<Matrix4x4>
	{
		[Token(Token = "0x600021A")]
		[Address(RVA = "0xCAF478", Offset = "0xCAF478", VA = "0xCAF478", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0xCAF4D0", Offset = "0xCAF4D0", VA = "0xCAF4D0", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0xCAF54C", Offset = "0xCAF54C", VA = "0xCAF54C", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x600021D")]
		[Address(RVA = "0xCAF5B8", Offset = "0xCAF5B8", VA = "0xCAF5B8", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0xCAF634", Offset = "0xCAF634", VA = "0xCAF634")]
		public GraphicsCBufferMatrixProperty()
		{
		}
	}
	[Token(Token = "0x2000054")]
	public abstract class GraphicsCBufferProperty : ScriptableObject
	{
		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string propertyName;

		[NonSerialized]
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int propertyID;

		[NonSerialized]
		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool initialized;

		[Token(Token = "0x1700002E")]
		public string PropertyName
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0xCAF684", Offset = "0xCAF684", VA = "0xCAF684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002F")]
		public virtual object ObjectValue
		{
			[Token(Token = "0x6000220")]
			[Address(RVA = "0xCAF68C", Offset = "0xCAF68C", VA = "0xCAF68C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000221")]
		public abstract void SetData();

		[Token(Token = "0x6000222")]
		public abstract void SetData(Material target);

		[Token(Token = "0x6000223")]
		public abstract void SetData(MaterialPropertyBlock target);

		[Token(Token = "0x6000224")]
		public abstract void GetData(Material target);

		[Token(Token = "0x6000225")]
		[Address(RVA = "0xCAF6EC", Offset = "0xCAF6EC", VA = "0xCAF6EC", Slot = "9")]
		public virtual void AttemptToInitializePropertyID()
		{
		}

		[Token(Token = "0x6000226")]
		[Address(RVA = "0xCAF728", Offset = "0xCAF728", VA = "0xCAF728", Slot = "10")]
		protected virtual void InitializePropertyIDInternal()
		{
		}

		[Token(Token = "0x6000227")]
		[Address(RVA = "0xCAF300", Offset = "0xCAF300", VA = "0xCAF300")]
		protected GraphicsCBufferProperty()
		{
		}
	}
	[Token(Token = "0x2000055")]
	public abstract class GraphicsCBufferProperty<T> : GraphicsCBufferProperty
	{
		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T value;

		[Token(Token = "0x17000030")]
		public T Value
		{
			[Token(Token = "0x6000228")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000229")]
			set
			{
			}
		}

		[Token(Token = "0x17000031")]
		public override object ObjectValue
		{
			[Token(Token = "0x600022A")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600022B")]
		protected GraphicsCBufferProperty()
		{
		}
	}
	[Token(Token = "0x2000056")]
	public class GraphicsCBufferTextureArrayProperty : GraphicsCBufferProperty<Texture2DArray>
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xCAF754", Offset = "0xCAF754", VA = "0xCAF754", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x600022D")]
		[Address(RVA = "0xCAF7F8", Offset = "0xCAF7F8", VA = "0xCAF7F8", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x600022E")]
		[Address(RVA = "0xCAF8B8", Offset = "0xCAF8B8", VA = "0xCAF8B8", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x600022F")]
		[Address(RVA = "0xCAF9AC", Offset = "0xCAF9AC", VA = "0xCAF9AC", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000230")]
		[Address(RVA = "0xCAFA6C", Offset = "0xCAFA6C", VA = "0xCAFA6C")]
		public GraphicsCBufferTextureArrayProperty()
		{
		}
	}
	[Token(Token = "0x2000057")]
	public class GraphicsCBufferTextureProperty : GraphicsCBufferProperty<Texture>
	{
		[Token(Token = "0x6000231")]
		[Address(RVA = "0xCAFABC", Offset = "0xCAFABC", VA = "0xCAFABC", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000232")]
		[Address(RVA = "0xCAFAF0", Offset = "0xCAFAF0", VA = "0xCAFAF0", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000233")]
		[Address(RVA = "0xCAFB38", Offset = "0xCAFB38", VA = "0xCAFB38", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000234")]
		[Address(RVA = "0xCAFB8C", Offset = "0xCAFB8C", VA = "0xCAFB8C", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x6000235")]
		[Address(RVA = "0xCAFBD4", Offset = "0xCAFBD4", VA = "0xCAFBD4")]
		public GraphicsCBufferTextureProperty()
		{
		}
	}
	[Token(Token = "0x2000058")]
	public class GraphicsCBufferVectorArrayProperty : GraphicsCBufferProperty<Vector4[]>
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0xCAFC24", Offset = "0xCAFC24", VA = "0xCAFC24", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x6000237")]
		[Address(RVA = "0xCAFC58", Offset = "0xCAFC58", VA = "0xCAFC58", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x6000238")]
		[Address(RVA = "0xCAFCA0", Offset = "0xCAFCA0", VA = "0xCAFCA0", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x6000239")]
		[Address(RVA = "0xCAFCF4", Offset = "0xCAFCF4", VA = "0xCAFCF4", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x600023A")]
		[Address(RVA = "0xCAFD3C", Offset = "0xCAFD3C", VA = "0xCAFD3C")]
		public GraphicsCBufferVectorArrayProperty()
		{
		}
	}
	[Token(Token = "0x2000059")]
	public class GraphicsCBufferVectorProperty : GraphicsCBufferProperty<Vector4>
	{
		[Token(Token = "0x600023B")]
		[Address(RVA = "0xCAFD8C", Offset = "0xCAFD8C", VA = "0xCAFD8C", Slot = "5")]
		public override void SetData()
		{
		}

		[Token(Token = "0x600023C")]
		[Address(RVA = "0xCAFDC4", Offset = "0xCAFDC4", VA = "0xCAFDC4", Slot = "6")]
		public override void SetData(Material target)
		{
		}

		[Token(Token = "0x600023D")]
		[Address(RVA = "0xCAFE10", Offset = "0xCAFE10", VA = "0xCAFE10", Slot = "8")]
		public override void GetData(Material target)
		{
		}

		[Token(Token = "0x600023E")]
		[Address(RVA = "0xCAFE60", Offset = "0xCAFE60", VA = "0xCAFE60", Slot = "7")]
		public override void SetData(MaterialPropertyBlock target)
		{
		}

		[Token(Token = "0x600023F")]
		[Address(RVA = "0xCAFEAC", Offset = "0xCAFEAC", VA = "0xCAFEAC")]
		public GraphicsCBufferVectorProperty()
		{
		}
	}
}
namespace SG.GFX.Cameras
{
	[Token(Token = "0x200005A")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A0480", Offset = "0x8A0480")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A0480", Offset = "0x8A0480")]
	public class CustomProjector : MonoBehaviour
	{
		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float aspect;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string customMatrixProperty;

		[NonSerialized]
		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int id_matrix;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string customDirectionProperty;

		[NonSerialized]
		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int id_direction;

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[DebugOnly]
		private Camera camera;

		[Token(Token = "0x6000240")]
		[Address(RVA = "0xCACD8C", Offset = "0xCACD8C", VA = "0xCACD8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000241")]
		[Address(RVA = "0xCACE24", Offset = "0xCACE24", VA = "0xCACE24")]
		private void GetShaderPropertyIDs()
		{
		}

		[Token(Token = "0x6000242")]
		[Address(RVA = "0xCACE64", Offset = "0xCACE64", VA = "0xCACE64")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000243")]
		[Address(RVA = "0xCACEA4", Offset = "0xCACEA4", VA = "0xCACEA4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000244")]
		[Address(RVA = "0xCACF3C", Offset = "0xCACF3C", VA = "0xCACF3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000245")]
		[Address(RVA = "0xCACF40", Offset = "0xCACF40", VA = "0xCACF40")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000246")]
		[Address(RVA = "0xCACF44", Offset = "0xCACF44", VA = "0xCACF44")]
		public void UpdateShaderVariables()
		{
		}

		[Token(Token = "0x6000247")]
		[Address(RVA = "0xCACFAC", Offset = "0xCACFAC", VA = "0xCACFAC")]
		public Matrix4x4 GetProjectionMatrix()
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0xCAD094", Offset = "0xCAD094", VA = "0xCAD094")]
		public Vector4 GetProjectorDirection()
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000249")]
		[Address(RVA = "0xCAD0E0", Offset = "0xCAD0E0", VA = "0xCAD0E0")]
		public void ConfigureOrthoProjectionFromBounds(Bounds bounds)
		{
		}

		[Token(Token = "0x600024A")]
		[Address(RVA = "0xCAD25C", Offset = "0xCAD25C", VA = "0xCAD25C")]
		public void ConfigureOrthoProjectionFromVector2(Vector2 size)
		{
		}

		[Token(Token = "0x600024B")]
		[Address(RVA = "0xCAD2C0", Offset = "0xCAD2C0", VA = "0xCAD2C0")]
		public CustomProjector()
		{
		}
	}
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A0518", Offset = "0x8A0518")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A0518", Offset = "0x8A0518")]
	public class OffscreenBufferCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044F")]
		public class CameraParams
		{
			[Token(Token = "0x4001CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LayerMask cullingMask;

			[Token(Token = "0x4001CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public CameraClearFlags clearFlags;

			[Token(Token = "0x4001CB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color backgroundColor;

			[Token(Token = "0x4001CB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DepthTextureMode depthTextureMode;

			[Token(Token = "0x4001CB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool allowHDR;

			[Token(Token = "0x4001CBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public StereoTargetEyeMask stereoTargetEye;

			[Token(Token = "0x6001B3B")]
			[Address(RVA = "0xCADD34", Offset = "0xCADD34", VA = "0xCADD34")]
			public CameraParams()
			{
			}

			[Token(Token = "0x6001B3C")]
			[Address(RVA = "0xCAE28C", Offset = "0xCAE28C", VA = "0xCAE28C")]
			public CameraParams(Camera source)
			{
			}

			[Token(Token = "0x6001B3D")]
			[Address(RVA = "0xCAD9EC", Offset = "0xCAD9EC", VA = "0xCAD9EC")]
			public void PushTo(Camera dest)
			{
			}
		}

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Notify Log;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera camera;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RenderTexture buffer;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTextureDescriptor rtDesc;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTargetIdentifier rtID;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AD984", Offset = "0x8AD984")]
		[SerializeField]
		private int bufferWidth;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int bufferHeight;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FauxEnumAttribute", RVA = "0x8AD9E0", Offset = "0x8AD9E0")]
		[SerializeField]
		private DepthBufferSize bufferDepth;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private RenderTextureFormat bufferFormat;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private RenderTextureReadWrite bufferRW;

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private FilterMode bufferFilterMode;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADB08", Offset = "0x8ADB08")]
		private bool generateMipMaps;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public CameraParams cameraProperties;

		[Token(Token = "0x17000032")]
		public Camera Camera
		{
			[Token(Token = "0x600024C")]
			[Address(RVA = "0xCAD340", Offset = "0xCAD340", VA = "0xCAD340")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000033")]
		public RenderTexture Buffer
		{
			[Token(Token = "0x600024D")]
			[Address(RVA = "0xCAD348", Offset = "0xCAD348", VA = "0xCAD348")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000034")]
		public RenderTargetIdentifier Identifier
		{
			[Token(Token = "0x600024E")]
			[Address(RVA = "0xCAD350", Offset = "0xCAD350", VA = "0xCAD350")]
			get
			{
				return default(RenderTargetIdentifier);
			}
		}

		[Token(Token = "0x17000035")]
		public RenderTextureDescriptor Descriptor
		{
			[Token(Token = "0x600024F")]
			[Address(RVA = "0xCAD364", Offset = "0xCAD364", VA = "0xCAD364")]
			get
			{
				return default(RenderTextureDescriptor);
			}
		}

		[Token(Token = "0x17000036")]
		public static CameraParams DefaultCameraProperties
		{
			[Token(Token = "0x600025A")]
			[Address(RVA = "0xCADCDC", Offset = "0xCADCDC", VA = "0xCADCDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000250")]
		[Address(RVA = "0xCAD384", Offset = "0xCAD384", VA = "0xCAD384")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000251")]
		[Address(RVA = "0xCAD3F4", Offset = "0xCAD3F4", VA = "0xCAD3F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000252")]
		[Address(RVA = "0xCAD8D0", Offset = "0xCAD8D0", VA = "0xCAD8D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000253")]
		[Address(RVA = "0xCAD984", Offset = "0xCAD984", VA = "0xCAD984")]
		private void ApplyCameraProperties()
		{
		}

		[Token(Token = "0x6000254")]
		[Address(RVA = "0xCADA80", Offset = "0xCADA80", VA = "0xCADA80")]
		public void Render(Camera sourceCamera, ReplacementShaderDefinition replacementData)
		{
		}

		[Token(Token = "0x6000255")]
		[Address(RVA = "0xCADAC4", Offset = "0xCADAC4", VA = "0xCADAC4")]
		public void Render(ReplacementShaderDefinition replacementData)
		{
		}

		[Token(Token = "0x6000256")]
		[Address(RVA = "0xCADB94", Offset = "0xCADB94", VA = "0xCADB94")]
		public void CreateBuffer(float bufferScale, string bufferName)
		{
		}

		[Token(Token = "0x6000257")]
		[Address(RVA = "0xCADBF0", Offset = "0xCADBF0", VA = "0xCADBF0")]
		public void CreateBuffer(int width, int height, string bufferName)
		{
		}

		[Token(Token = "0x6000258")]
		[Address(RVA = "0xCAD574", Offset = "0xCAD574", VA = "0xCAD574")]
		public void CreateBuffer(int width, int height, int depth, RenderTextureFormat format, RenderTextureReadWrite readWrite, bool supportMipMap, FilterMode filterMode, string bufferName, VRTextureUsage vrUsage = VRTextureUsage.None)
		{
		}

		[Token(Token = "0x6000259")]
		[Address(RVA = "0xCAD52C", Offset = "0xCAD52C", VA = "0xCAD52C")]
		private static VRTextureUsage DetermineVRTextureUsageFromTargetEye(StereoTargetEyeMask eyeMask)
		{
			return default(VRTextureUsage);
		}

		[Token(Token = "0x600025B")]
		[Address(RVA = "0xCADD7C", Offset = "0xCADD7C", VA = "0xCADD7C")]
		public static OffscreenBufferCamera Create(float bufferSize)
		{
			return null;
		}

		[Token(Token = "0x600025C")]
		[Address(RVA = "0xCADDEC", Offset = "0xCADDEC", VA = "0xCADDEC")]
		public static OffscreenBufferCamera Create(float bufferSize, CameraParams cameraProperties)
		{
			return null;
		}

		[Token(Token = "0x600025D")]
		[Address(RVA = "0xCAE080", Offset = "0xCAE080", VA = "0xCAE080")]
		public static OffscreenBufferCamera Create(int bufferWidth, int bufferHeight, DepthBufferSize bufferDepth, RenderTextureFormat bufferFormat, RenderTextureReadWrite bufferRW, bool supportMipMap, FilterMode bufferFilterMode, DepthTextureMode depthTextureMode, [Optional] string name)
		{
			return null;
		}

		[Token(Token = "0x600025E")]
		[Address(RVA = "0xCADF1C", Offset = "0xCADF1C", VA = "0xCADF1C")]
		public static OffscreenBufferCamera Create(int bufferWidth, int bufferHeight, DepthBufferSize bufferDepth, RenderTextureFormat bufferFormat, RenderTextureReadWrite bufferRW, bool supportMipMap, FilterMode bufferFilterMode, DepthTextureMode depthTextureMode, string name, CameraParams cameraProperties)
		{
			return null;
		}

		[Token(Token = "0x600025F")]
		[Address(RVA = "0xCAE138", Offset = "0xCAE138", VA = "0xCAE138")]
		public OffscreenBufferCamera()
		{
		}
	}
	[Token(Token = "0x200005C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8A05A0", Offset = "0x8A05A0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A05A0", Offset = "0x8A05A0")]
	public class ReplacementShader : MonoBehaviour
	{
		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ReplacementShaderDefinition replacementDef;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera cam;

		[Token(Token = "0x17000037")]
		public ReplacementShaderDefinition ReplacementShaderDefinition
		{
			[Token(Token = "0x6000261")]
			[Address(RVA = "0xCAE354", Offset = "0xCAE354", VA = "0xCAE354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000262")]
		[Address(RVA = "0xCAE35C", Offset = "0xCAE35C", VA = "0xCAE35C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000263")]
		[Address(RVA = "0xCAE3CC", Offset = "0xCAE3CC", VA = "0xCAE3CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000264")]
		[Address(RVA = "0xCAE410", Offset = "0xCAE410", VA = "0xCAE410")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000265")]
		[Address(RVA = "0xCAE4A4", Offset = "0xCAE4A4", VA = "0xCAE4A4")]
		public ReplacementShader()
		{
		}
	}
}
namespace SG.GlobalEvents.Generated
{
	[Token(Token = "0x200005D")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0628", Offset = "0x8A0628")]
	public class AnimatorVariable : GenericVariable<Animator>
	{
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xD58F5C", Offset = "0xD58F5C", VA = "0xD58F5C")]
		public AnimatorVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200005E")]
	public class AnimatorReference : ValueReference<Animator>
	{
		[Token(Token = "0x6000267")]
		[Address(RVA = "0xD58F0C", Offset = "0xD58F0C", VA = "0xD58F0C")]
		public AnimatorReference()
		{
		}
	}
	[Token(Token = "0x200005F")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0694", Offset = "0x8A0694")]
	public class ArmamentAbilityDefinitionGlobalEvent : GenericGlobalEvent<ArmamentAbilityDefinition>
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xD58FAC", Offset = "0xD58FAC", VA = "0xD58FAC")]
		public ArmamentAbilityDefinitionGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000060")]
	public class ArmamentAbilityDefinitionUnityEvent : UnityEvent<ArmamentAbilityDefinition>
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xD5904C", Offset = "0xD5904C", VA = "0xD5904C")]
		public ArmamentAbilityDefinitionUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000061")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A06FC", Offset = "0x8A06FC")]
	public class ArmamentAbilityDefinitionGlobalEventListener : GenericGlobalEventListener<ArmamentAbilityDefinitionGlobalEvent, ArmamentAbilityDefinitionUnityEvent, ArmamentAbilityDefinition>
	{
		[Token(Token = "0x600026A")]
		[Address(RVA = "0xD58FFC", Offset = "0xD58FFC", VA = "0xD58FFC")]
		public ArmamentAbilityDefinitionGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0734", Offset = "0x8A0734")]
	public class ArmamentAugmentEffectDataGlobalEvent : GenericGlobalEvent<ArmamentAugmentEffectData>
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xD5909C", Offset = "0xD5909C", VA = "0xD5909C")]
		public ArmamentAugmentEffectDataGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000063")]
	public class ArmamentAugmentEffectDataUnityEvent : UnityEvent<ArmamentAugmentEffectData>
	{
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xD5913C", Offset = "0xD5913C", VA = "0xD5913C")]
		public ArmamentAugmentEffectDataUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000064")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A079C", Offset = "0x8A079C")]
	public class ArmamentAugmentEffectDataGlobalEventListener : GenericGlobalEventListener<ArmamentAugmentEffectDataGlobalEvent, ArmamentAugmentEffectDataUnityEvent, ArmamentAugmentEffectData>
	{
		[Token(Token = "0x600026D")]
		[Address(RVA = "0xD590EC", Offset = "0xD590EC", VA = "0xD590EC")]
		public ArmamentAugmentEffectDataGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000065")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A07D4", Offset = "0x8A07D4")]
	public class ArmamentIDVariable : GenericVariable<ArmamentID>
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xD591DC", Offset = "0xD591DC", VA = "0xD591DC")]
		public ArmamentIDVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000066")]
	public class ArmamentIDReference : ValueReference<ArmamentID>
	{
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xD5918C", Offset = "0xD5918C", VA = "0xD5918C")]
		public ArmamentIDReference()
		{
		}
	}
	[Token(Token = "0x2000067")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0840", Offset = "0x8A0840")]
	public class AudioRuntimeGlobalEvent : GenericGlobalEvent<AudioRuntime>
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xD5922C", Offset = "0xD5922C", VA = "0xD5922C")]
		public AudioRuntimeGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000068")]
	public class AudioRuntimeUnityEvent : UnityEvent<AudioRuntime>
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xD592CC", Offset = "0xD592CC", VA = "0xD592CC")]
		public AudioRuntimeUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A08A8", Offset = "0x8A08A8")]
	public class AudioRuntimeGlobalEventListener : GenericGlobalEventListener<AudioRuntimeGlobalEvent, AudioRuntimeUnityEvent, AudioRuntime>
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xD5927C", Offset = "0xD5927C", VA = "0xD5927C")]
		public AudioRuntimeGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A08E0", Offset = "0x8A08E0")]
	public class CameraShakeRequestGlobalEvent : GenericGlobalEvent<CameraShakeRequest>
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xD5931C", Offset = "0xD5931C", VA = "0xD5931C")]
		public CameraShakeRequestGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006B")]
	public class CameraShakeRequestUnityEvent : UnityEvent<CameraShakeRequest>
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xD5940C", Offset = "0xD5940C", VA = "0xD5940C")]
		public CameraShakeRequestUnityEvent()
		{
		}
	}
	[Token(Token = "0x200006C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0948", Offset = "0x8A0948")]
	public class CameraShakeRequestGlobalEventListener : GenericGlobalEventListener<CameraShakeRequestGlobalEvent, CameraShakeRequestUnityEvent, CameraShakeRequest>
	{
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xD5936C", Offset = "0xD5936C", VA = "0xD5936C")]
		public CameraShakeRequestGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0980", Offset = "0x8A0980")]
	public class CameraShakeRequestVariable : GenericVariable<CameraShakeRequest>
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xD5945C", Offset = "0xD5945C", VA = "0xD5945C")]
		public CameraShakeRequestVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006E")]
	public class CameraShakeRequestReference : ValueReference<CameraShakeRequest>
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xD593BC", Offset = "0xD593BC", VA = "0xD593BC")]
		public CameraShakeRequestReference()
		{
		}
	}
	[Token(Token = "0x200006F")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A09EC", Offset = "0x8A09EC")]
	public class ClaymoreEntityGlobalEvent : GenericGlobalEvent<ClaymoreEntity>
	{
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xD594AC", Offset = "0xD594AC", VA = "0xD594AC")]
		public ClaymoreEntityGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000070")]
	public class ClaymoreEntityUnityEvent : UnityEvent<ClaymoreEntity>
	{
		[Token(Token = "0x6000279")]
		[Address(RVA = "0xD5959C", Offset = "0xD5959C", VA = "0xD5959C")]
		public ClaymoreEntityUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000071")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0A54", Offset = "0x8A0A54")]
	public class ClaymoreEntityGlobalEventListener : GenericGlobalEventListener<ClaymoreEntityGlobalEvent, ClaymoreEntityUnityEvent, ClaymoreEntity>
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xD594FC", Offset = "0xD594FC", VA = "0xD594FC")]
		public ClaymoreEntityGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000072")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0A8C", Offset = "0x8A0A8C")]
	public class ClaymoreEntityVariable : GenericVariable<ClaymoreEntity>
	{
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xD595EC", Offset = "0xD595EC", VA = "0xD595EC")]
		public ClaymoreEntityVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000073")]
	public class ClaymoreEntityReference : ValueReference<ClaymoreEntity>
	{
		[Token(Token = "0x600027C")]
		[Address(RVA = "0xD5954C", Offset = "0xD5954C", VA = "0xD5954C")]
		public ClaymoreEntityReference()
		{
		}
	}
	[Token(Token = "0x2000074")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0AF8", Offset = "0x8A0AF8")]
	public class DistanceThresholdVariable : GenericVariable<DistanceThreshold>
	{
		[Token(Token = "0x600027D")]
		[Address(RVA = "0xD5968C", Offset = "0xD5968C", VA = "0xD5968C")]
		public DistanceThresholdVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000075")]
	public class DistanceThresholdReference : ValueReference<DistanceThreshold>
	{
		[Token(Token = "0x600027E")]
		[Address(RVA = "0xD5963C", Offset = "0xD5963C", VA = "0xD5963C")]
		public DistanceThresholdReference()
		{
		}
	}
	[Token(Token = "0x2000076")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0B64", Offset = "0x8A0B64")]
	public class EnemyGlobalEvent : GenericGlobalEvent<Enemy>
	{
		[Token(Token = "0x600027F")]
		[Address(RVA = "0xD596DC", Offset = "0xD596DC", VA = "0xD596DC")]
		public EnemyGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000077")]
	public class EnemyUnityEvent : UnityEvent<Enemy>
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0xD5995C", Offset = "0xD5995C", VA = "0xD5995C")]
		public EnemyUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000078")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0BCC", Offset = "0x8A0BCC")]
	public class EnemyGlobalEventListener : GenericGlobalEventListener<EnemyGlobalEvent, EnemyUnityEvent, Enemy>
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0xD5972C", Offset = "0xD5972C", VA = "0xD5972C")]
		public EnemyGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0C04", Offset = "0x8A0C04")]
	public class EnemyProjectileAssetGlobalEvent : GenericGlobalEvent<EnemyProjectileAsset>
	{
		[Token(Token = "0x6000282")]
		[Address(RVA = "0xD5977C", Offset = "0xD5977C", VA = "0xD5977C")]
		public EnemyProjectileAssetGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007A")]
	public class EnemyProjectileAssetUnityEvent : UnityEvent<EnemyProjectileAsset>
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0xD5981C", Offset = "0xD5981C", VA = "0xD5981C")]
		public EnemyProjectileAssetUnityEvent()
		{
		}
	}
	[Token(Token = "0x200007B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0C6C", Offset = "0x8A0C6C")]
	public class EnemyProjectileAssetGlobalEventListener : GenericGlobalEventListener<EnemyProjectileAssetGlobalEvent, EnemyProjectileAssetUnityEvent, EnemyProjectileAsset>
	{
		[Token(Token = "0x6000284")]
		[Address(RVA = "0xD597CC", Offset = "0xD597CC", VA = "0xD597CC")]
		public EnemyProjectileAssetGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200007C")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0CA4", Offset = "0x8A0CA4")]
	public class EnemyProjectileGlobalEvent : GenericGlobalEvent<EnemyProjectile>
	{
		[Token(Token = "0x6000285")]
		[Address(RVA = "0xD5986C", Offset = "0xD5986C", VA = "0xD5986C")]
		public EnemyProjectileGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200007D")]
	public class EnemyProjectileUnityEvent : UnityEvent<EnemyProjectile>
	{
		[Token(Token = "0x6000286")]
		[Address(RVA = "0xD5990C", Offset = "0xD5990C", VA = "0xD5990C")]
		public EnemyProjectileUnityEvent()
		{
		}
	}
	[Token(Token = "0x200007E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0D0C", Offset = "0x8A0D0C")]
	public class EnemyProjectileGlobalEventListener : GenericGlobalEventListener<EnemyProjectileGlobalEvent, EnemyProjectileUnityEvent, EnemyProjectile>
	{
		[Token(Token = "0x6000287")]
		[Address(RVA = "0xD598BC", Offset = "0xD598BC", VA = "0xD598BC")]
		public EnemyProjectileGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200007F")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0D44", Offset = "0x8A0D44")]
	public class EnvironmentSettingsRequestGlobalEvent : GenericGlobalEvent<EnvironmentSettingsRequest>
	{
		[Token(Token = "0x6000288")]
		[Address(RVA = "0xD599AC", Offset = "0xD599AC", VA = "0xD599AC")]
		public EnvironmentSettingsRequestGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000080")]
	public class EnvironmentSettingsRequestUnityEvent : UnityEvent<EnvironmentSettingsRequest>
	{
		[Token(Token = "0x6000289")]
		[Address(RVA = "0xD59A4C", Offset = "0xD59A4C", VA = "0xD59A4C")]
		public EnvironmentSettingsRequestUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000081")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0DAC", Offset = "0x8A0DAC")]
	public class EnvironmentSettingsRequestGlobalEventListener : GenericGlobalEventListener<EnvironmentSettingsRequestGlobalEvent, EnvironmentSettingsRequestUnityEvent, EnvironmentSettingsRequest>
	{
		[Token(Token = "0x600028A")]
		[Address(RVA = "0xD599FC", Offset = "0xD599FC", VA = "0xD599FC")]
		public EnvironmentSettingsRequestGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0DE4", Offset = "0x8A0DE4")]
	public class ErrorMessageGlobalEvent : GenericGlobalEvent<ErrorMessage>
	{
		[Token(Token = "0x600028B")]
		[Address(RVA = "0xD59A9C", Offset = "0xD59A9C", VA = "0xD59A9C")]
		public ErrorMessageGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000083")]
	public class ErrorMessageUnityEvent : UnityEvent<ErrorMessage>
	{
		[Token(Token = "0x600028C")]
		[Address(RVA = "0xD59B3C", Offset = "0xD59B3C", VA = "0xD59B3C")]
		public ErrorMessageUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0E4C", Offset = "0x8A0E4C")]
	public class ErrorMessageGlobalEventListener : GenericGlobalEventListener<ErrorMessageGlobalEvent, ErrorMessageUnityEvent, ErrorMessage>
	{
		[Token(Token = "0x600028D")]
		[Address(RVA = "0xD59AEC", Offset = "0xD59AEC", VA = "0xD59AEC")]
		public ErrorMessageGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000085")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0E84", Offset = "0x8A0E84")]
	public class GameObjectGlobalEvent : GenericGlobalEvent<GameObject>
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xD59B8C", Offset = "0xD59B8C", VA = "0xD59B8C")]
		public GameObjectGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000086")]
	public class GameObjectUnityEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x600028F")]
		[Address(RVA = "0xD59C2C", Offset = "0xD59C2C", VA = "0xD59C2C")]
		public GameObjectUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000087")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0EEC", Offset = "0x8A0EEC")]
	public class GameObjectGlobalEventListener : GenericGlobalEventListener<GameObjectGlobalEvent, GameObjectUnityEvent, GameObject>
	{
		[Token(Token = "0x6000290")]
		[Address(RVA = "0xD59BDC", Offset = "0xD59BDC", VA = "0xD59BDC")]
		public GameObjectGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0F24", Offset = "0x8A0F24")]
	public class HandPoseGlobalEvent : GenericGlobalEvent<HandPoseData>
	{
		[Token(Token = "0x6000291")]
		[Address(RVA = "0xD59C7C", Offset = "0xD59C7C", VA = "0xD59C7C")]
		public HandPoseGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000089")]
	public class HandPoseUnityEvent : UnityEvent<HandPoseData>
	{
		[Token(Token = "0x6000292")]
		[Address(RVA = "0xD59D1C", Offset = "0xD59D1C", VA = "0xD59D1C")]
		public HandPoseUnityEvent()
		{
		}
	}
	[Token(Token = "0x200008A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A0F8C", Offset = "0x8A0F8C")]
	public class HandPoseGlobalEventListener : GenericGlobalEventListener<HandPoseGlobalEvent, HandPoseUnityEvent, HandPoseData>
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0xD59CCC", Offset = "0xD59CCC", VA = "0xD59CCC")]
		public HandPoseGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200008B")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A0FC4", Offset = "0x8A0FC4")]
	public class LanguageKeyVariable : GenericVariable<LanguageKey>
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0xD59DBC", Offset = "0xD59DBC", VA = "0xD59DBC")]
		public LanguageKeyVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008C")]
	public class LanguageKeyReference : ValueReference<LanguageKey>
	{
		[Token(Token = "0x6000295")]
		[Address(RVA = "0xD59D6C", Offset = "0xD59D6C", VA = "0xD59D6C")]
		public LanguageKeyReference()
		{
		}
	}
	[Token(Token = "0x200008D")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1030", Offset = "0x8A1030")]
	public class NPCCombatantDefinitionVariable : GenericVariable<NPCCombatantDefinition>
	{
		[Token(Token = "0x6000296")]
		[Address(RVA = "0xD59E5C", Offset = "0xD59E5C", VA = "0xD59E5C")]
		public NPCCombatantDefinitionVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008E")]
	public class NPCCombatantDefinitionReference : ValueReference<NPCCombatantDefinition>
	{
		[Token(Token = "0x6000297")]
		[Address(RVA = "0xD59E0C", Offset = "0xD59E0C", VA = "0xD59E0C")]
		public NPCCombatantDefinitionReference()
		{
		}
	}
	[Token(Token = "0x200008F")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A109C", Offset = "0x8A109C")]
	public class PlayerEntityVariable : GenericVariable<PlayerEntity>
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0xD59EFC", Offset = "0xD59EFC", VA = "0xD59EFC")]
		public PlayerEntityVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000090")]
	public class PlayerEntityReference : ValueReference<PlayerEntity>
	{
		[Token(Token = "0x6000299")]
		[Address(RVA = "0xD59EAC", Offset = "0xD59EAC", VA = "0xD59EAC")]
		public PlayerEntityReference()
		{
		}
	}
	[Token(Token = "0x2000091")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1108", Offset = "0x8A1108")]
	public class PlayerHandVariable : GenericVariable<PlayerHand>
	{
		[Token(Token = "0x600029A")]
		[Address(RVA = "0xD59F9C", Offset = "0xD59F9C", VA = "0xD59F9C")]
		public PlayerHandVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000092")]
	public class PlayerHandReference : ValueReference<PlayerHand>
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0xD59F4C", Offset = "0xD59F4C", VA = "0xD59F4C")]
		public PlayerHandReference()
		{
		}
	}
	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1174", Offset = "0x8A1174")]
	public class PopupUIAssetGlobalEvent : GenericGlobalEvent<PopupUIAsset>
	{
		[Token(Token = "0x600029C")]
		[Address(RVA = "0xD59FEC", Offset = "0xD59FEC", VA = "0xD59FEC")]
		public PopupUIAssetGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000094")]
	public class PopupUIAssetUnityEvent : UnityEvent<PopupUIAsset>
	{
		[Token(Token = "0x600029D")]
		[Address(RVA = "0xD5A08C", Offset = "0xD5A08C", VA = "0xD5A08C")]
		public PopupUIAssetUnityEvent()
		{
		}
	}
	[Token(Token = "0x2000095")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A11DC", Offset = "0x8A11DC")]
	public class PopupUIAssetGlobalEventListener : GenericGlobalEventListener<PopupUIAssetGlobalEvent, PopupUIAssetUnityEvent, PopupUIAsset>
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0xD5A03C", Offset = "0xD5A03C", VA = "0xD5A03C")]
		public PopupUIAssetGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x2000096")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1214", Offset = "0x8A1214")]
	public class PoseVariable : GenericVariable<Pose>
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0xD5A12C", Offset = "0xD5A12C", VA = "0xD5A12C")]
		public PoseVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000097")]
	public class PoseReference : ValueReference<Pose>
	{
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xD5A0DC", Offset = "0xD5A0DC", VA = "0xD5A0DC")]
		public PoseReference()
		{
		}
	}
	[Token(Token = "0x2000098")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1280", Offset = "0x8A1280")]
	public class PostProcessControllerVariable : GenericVariable<PostProcessController>
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD5A1CC", Offset = "0xD5A1CC", VA = "0xD5A1CC")]
		public PostProcessControllerVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000099")]
	public class PostProcessControllerReference : ValueReference<PostProcessController>
	{
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xD5A17C", Offset = "0xD5A17C", VA = "0xD5A17C")]
		public PostProcessControllerReference()
		{
		}
	}
	[Token(Token = "0x200009A")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A12EC", Offset = "0x8A12EC")]
	public class PostProcessVolumeVariable : GenericVariable<PostProcessVolume>
	{
		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD5A26C", Offset = "0xD5A26C", VA = "0xD5A26C")]
		public PostProcessVolumeVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009B")]
	public class PostProcessVolumeReference : ValueReference<PostProcessVolume>
	{
		[Token(Token = "0x60002A4")]
		[Address(RVA = "0xD5A21C", Offset = "0xD5A21C", VA = "0xD5A21C")]
		public PostProcessVolumeReference()
		{
		}
	}
	[Token(Token = "0x200009C")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1358", Offset = "0x8A1358")]
	public class PremonitionGlobalEvent : GenericGlobalEvent<Premonition>
	{
		[Token(Token = "0x60002A5")]
		[Address(RVA = "0xD5A2BC", Offset = "0xD5A2BC", VA = "0xD5A2BC")]
		public PremonitionGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009D")]
	public class PremonitionUnityEvent : UnityEvent<Premonition>
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0xD5A35C", Offset = "0xD5A35C", VA = "0xD5A35C")]
		public PremonitionUnityEvent()
		{
		}
	}
	[Token(Token = "0x200009E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A13C0", Offset = "0x8A13C0")]
	public class PremonitionGlobalEventListener : GenericGlobalEventListener<PremonitionGlobalEvent, PremonitionUnityEvent, Premonition>
	{
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0xD5A30C", Offset = "0xD5A30C", VA = "0xD5A30C")]
		public PremonitionGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x200009F")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A13F8", Offset = "0x8A13F8")]
	public class RandomTimeBoxVariable : GenericVariable<RandomTimeBox>
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xD5A3FC", Offset = "0xD5A3FC", VA = "0xD5A3FC")]
		public RandomTimeBoxVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A0")]
	public class RandomTimeBoxReference : ValueReference<RandomTimeBox>
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0xD5A3AC", Offset = "0xD5A3AC", VA = "0xD5A3AC")]
		public RandomTimeBoxReference()
		{
		}
	}
	[Token(Token = "0x20000A1")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1464", Offset = "0x8A1464")]
	public class ScreenFlashRequestGlobalEvent : GenericGlobalEvent<ScreenFlashRequest>
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD5A44C", Offset = "0xD5A44C", VA = "0xD5A44C")]
		public ScreenFlashRequestGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A2")]
	public class ScreenFlashRequestUnityEvent : UnityEvent<ScreenFlashRequest>
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0xD5A4EC", Offset = "0xD5A4EC", VA = "0xD5A4EC")]
		public ScreenFlashRequestUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A14CC", Offset = "0x8A14CC")]
	public class ScreenFlashRequestGlobalEventListener : GenericGlobalEventListener<ScreenFlashRequestGlobalEvent, ScreenFlashRequestUnityEvent, ScreenFlashRequest>
	{
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0xD5A49C", Offset = "0xD5A49C", VA = "0xD5A49C")]
		public ScreenFlashRequestGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1504", Offset = "0x8A1504")]
	public class StringGlobalEvent : GenericGlobalEvent<string>
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0xD5A53C", Offset = "0xD5A53C", VA = "0xD5A53C")]
		public StringGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A5")]
	public class StringUnityEvent : UnityEvent<string>
	{
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xD5A5DC", Offset = "0xD5A5DC", VA = "0xD5A5DC")]
		public StringUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A156C", Offset = "0x8A156C")]
	public class StringGlobalEventListener : GenericRangeGlobalEventListener<StringGlobalEvent, StringUnityEvent, string, StringRangeSet, StringRange, StringRangeComparison>
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xD5A58C", Offset = "0xD5A58C", VA = "0xD5A58C")]
		public StringGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A15A4", Offset = "0x8A15A4")]
	public class TargetableGlobalEvent : GenericGlobalEvent<Targetable>
	{
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD5A62C", Offset = "0xD5A62C", VA = "0xD5A62C")]
		public TargetableGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000A8")]
	public class TargetableUnityEvent : UnityEvent<Targetable>
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD5A71C", Offset = "0xD5A71C", VA = "0xD5A71C")]
		public TargetableUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A160C", Offset = "0x8A160C")]
	public class TargetableGlobalEventListener : GenericGlobalEventListener<TargetableGlobalEvent, TargetableUnityEvent, Targetable>
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xD5A67C", Offset = "0xD5A67C", VA = "0xD5A67C")]
		public TargetableGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1644", Offset = "0x8A1644")]
	public class TargetableVariable : GenericVariable<Targetable>
	{
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xD5A76C", Offset = "0xD5A76C", VA = "0xD5A76C")]
		public TargetableVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AB")]
	public class TargetableReference : ValueReference<Targetable>
	{
		[Token(Token = "0x60002B4")]
		[Address(RVA = "0xD5A6CC", Offset = "0xD5A6CC", VA = "0xD5A6CC")]
		public TargetableReference()
		{
		}
	}
	[Token(Token = "0x20000AC")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A16B0", Offset = "0x8A16B0")]
	public class TimeScaleRequestGlobalEvent : GenericGlobalEvent<TimeScaleRequest>
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xD5A7BC", Offset = "0xD5A7BC", VA = "0xD5A7BC")]
		public TimeScaleRequestGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AD")]
	public class TimeScaleRequestUnityEvent : UnityEvent<TimeScaleRequest>
	{
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xD5A85C", Offset = "0xD5A85C", VA = "0xD5A85C")]
		public TimeScaleRequestUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000AE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A1718", Offset = "0x8A1718")]
	public class TimeScaleRequestGlobalEventListener : GenericGlobalEventListener<TimeScaleRequestGlobalEvent, TimeScaleRequestUnityEvent, TimeScaleRequest>
	{
		[Token(Token = "0x60002B7")]
		[Address(RVA = "0xD5A80C", Offset = "0xD5A80C", VA = "0xD5A80C")]
		public TimeScaleRequestGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1750", Offset = "0x8A1750")]
	public class TransformGlobalEvent : GenericGlobalEvent<Transform>
	{
		[Token(Token = "0x60002B8")]
		[Address(RVA = "0xD5A8AC", Offset = "0xD5A8AC", VA = "0xD5A8AC")]
		public TransformGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B0")]
	public class TransformUnityEvent : UnityEvent<Transform>
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xD5A94C", Offset = "0xD5A94C", VA = "0xD5A94C")]
		public TransformUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A17B8", Offset = "0x8A17B8")]
	public class TransformGlobalEventListener : GenericGlobalEventListener<TransformGlobalEvent, TransformUnityEvent, Transform>
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xD5A8FC", Offset = "0xD5A8FC", VA = "0xD5A8FC")]
		public TransformGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A17F0", Offset = "0x8A17F0")]
	public class TriggerVolumeGlobalEvent : GenericGlobalEvent<TriggerVolume>
	{
		[Token(Token = "0x60002BB")]
		[Address(RVA = "0xD5A99C", Offset = "0xD5A99C", VA = "0xD5A99C")]
		public TriggerVolumeGlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B3")]
	public class TriggerVolumeUnityEvent : UnityEvent<TriggerVolume>
	{
		[Token(Token = "0x60002BC")]
		[Address(RVA = "0xD5AA3C", Offset = "0xD5AA3C", VA = "0xD5AA3C")]
		public TriggerVolumeUnityEvent()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A1858", Offset = "0x8A1858")]
	public class TriggerVolumeGlobalEventListener : GenericGlobalEventListener<TriggerVolumeGlobalEvent, TriggerVolumeUnityEvent, TriggerVolume>
	{
		[Token(Token = "0x60002BD")]
		[Address(RVA = "0xD5A9EC", Offset = "0xD5A9EC", VA = "0xD5A9EC")]
		public TriggerVolumeGlobalEventListener()
		{
		}
	}
	[Token(Token = "0x20000B5")]
	[AttributeAttribute(Name = "GenerateAssetIconAttribute", RVA = "0x8A1890", Offset = "0x8A1890")]
	public class Vector3GlobalEvent : GenericGlobalEvent<Vector3>
	{
		[Token(Token = "0x60002BE")]
		[Address(RVA = "0xD5AA8C", Offset = "0xD5AA8C", VA = "0xD5AA8C")]
		public Vector3GlobalEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B6")]
	public class Vector3UnityEvent : UnityEvent<Vector3>
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0xD5AB2C", Offset = "0xD5AB2C", VA = "0xD5AB2C")]
		public Vector3UnityEvent()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8A18F8", Offset = "0x8A18F8")]
	public class Vector3GlobalEventListener : GenericGlobalEventListener<Vector3GlobalEvent, Vector3UnityEvent, Vector3>
	{
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0xD5AADC", Offset = "0xD5AADC", VA = "0xD5AADC")]
		public Vector3GlobalEventListener()
		{
		}
	}
}
namespace SG.ProtoFramework
{
	[Token(Token = "0x20000B8")]
	public class DeveloperNotes : MonoBehaviour
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x12FA284", Offset = "0x12FA284", VA = "0x12FA284")]
		public DeveloperNotes()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public class EnumMappedListAttribute : PropertyAttribute
	{
		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type EnumType;

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x12FA28C", Offset = "0x12FA28C", VA = "0x12FA28C")]
		public EnumMappedListAttribute(Type enumType)
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public interface ISubAssetCallback
	{
		[Token(Token = "0x60002C3")]
		void EditorDidCreate();

		[Token(Token = "0x60002C4")]
		void EditorWillDelete();
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public class RechargingFloat : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADB64", Offset = "0x8ADB64")]
		public float FullRechargeTime;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADB9C", Offset = "0x8ADB9C")]
		public AnimationCurve RechargeCurve;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADBD4", Offset = "0x8ADBD4")]
		public float RechargeStartDelay;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rechargeStartValue;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rechargeStartTime;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADC0C", Offset = "0x8ADC0C")]
		private float <RawValue>k__BackingField;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8ADC1C", Offset = "0x8ADC1C")]
		private float <CurrentValue>k__BackingField;

		[Token(Token = "0x17000038")]
		public float RawValue
		{
			[Token(Token = "0x60002C7")]
			[Address(RVA = "0x12FC89C", Offset = "0x12FC89C", VA = "0x12FC89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE720", Offset = "0x8DE720")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002C8")]
			[Address(RVA = "0x12FC8A4", Offset = "0x12FC8A4", VA = "0x12FC8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE730", Offset = "0x8DE730")]
			private set
			{
			}
		}

		[Token(Token = "0x17000039")]
		public float CurrentValue
		{
			[Token(Token = "0x60002C9")]
			[Address(RVA = "0x12FC8AC", Offset = "0x12FC8AC", VA = "0x12FC8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE740", Offset = "0x8DE740")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DE740", Offset = "0x8DE740")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002CA")]
			[Address(RVA = "0x12FC8B4", Offset = "0x12FC8B4", VA = "0x12FC8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE778", Offset = "0x8DE778")]
			private set
			{
			}
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x12FC86C", Offset = "0x12FC86C", VA = "0x12FC86C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x12FC890", Offset = "0x12FC890", VA = "0x12FC890", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x12FC8BC", Offset = "0x12FC8BC", VA = "0x12FC8BC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x12FC8CC", Offset = "0x12FC8CC", VA = "0x12FC8CC")]
		public void Set(float newValue)
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x12FC90C", Offset = "0x12FC90C", VA = "0x12FC90C")]
		public void Update(float dt)
		{
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x12FCA18", Offset = "0x12FCA18", VA = "0x12FCA18")]
		public RechargingFloat()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public class UserString
	{
		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string defaultValue;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string formattedPreview;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextKey textKey;

		[Token(Token = "0x1700003A")]
		public bool IsValid
		{
			[Token(Token = "0x60002CF")]
			[Address(RVA = "0x12FCF14", Offset = "0x12FCF14", VA = "0x12FCF14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700003B")]
		public string DefaultValue
		{
			[Token(Token = "0x60002D0")]
			[Address(RVA = "0x12FCFA8", Offset = "0x12FCFA8", VA = "0x12FCFA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002D1")]
			[Address(RVA = "0x12FD234", Offset = "0x12FD234", VA = "0x12FD234")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public string FormattedPreview
		{
			[Token(Token = "0x60002D2")]
			[Address(RVA = "0x12FD23C", Offset = "0x12FD23C", VA = "0x12FD23C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002D3")]
			[Address(RVA = "0x12FD244", Offset = "0x12FD244", VA = "0x12FD244")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public TextKey TextKey
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x12FD24C", Offset = "0x12FD24C", VA = "0x12FD24C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0x12FD254", Offset = "0x12FD254", VA = "0x12FD254")]
			set
			{
			}
		}

		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x12FD25C", Offset = "0x12FD25C", VA = "0x12FD25C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x12FD260", Offset = "0x12FD260", VA = "0x12FD260")]
		public static implicit operator string(UserString userString)
		{
			return null;
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x12FD2C0", Offset = "0x12FD2C0", VA = "0x12FD2C0")]
		public UserString()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class WeightedRandomSet
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x12FD330", Offset = "0x12FD330", VA = "0x12FD330")]
		public WeightedRandomSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BE")]
	public class WeightedRandomSet<T> : WeightedRandomSet, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> Items;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<float> Weights;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Vector2> Ranges;

		[Token(Token = "0x60002DA")]
		public virtual void Cache()
		{
		}

		[Token(Token = "0x60002DB")]
		public T GetRandom()
		{
			return (T)null;
		}

		[Token(Token = "0x60002DC")]
		public float GetSum()
		{
			return default(float);
		}

		[Token(Token = "0x60002DD")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60002DE")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60002DF")]
		public WeightedRandomSet()
		{
		}
	}
}
namespace SG.ProtoFramework.Resource
{
	[Token(Token = "0x20000BF")]
	public class CreateNewAssetAttribute : PropertyAttribute
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x12FCA80", Offset = "0x12FCA80", VA = "0x12FCA80")]
		public CreateNewAssetAttribute()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public interface IDatabaseEntry
	{
		[Token(Token = "0x1700003E")]
		UnityEngine.Object Key
		{
			[Token(Token = "0x60002E1")]
			get;
			[Token(Token = "0x60002E2")]
			set;
		}

		[Token(Token = "0x1700003F")]
		bool IsEnabled
		{
			[Token(Token = "0x60002E3")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20000C1")]
	public class DatabaseEntry<TKey> : IDatabaseEntry where TKey : UnityEngine.Object
	{
		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[CreateNewAsset]
		public TKey Key;

		[Token(Token = "0x17000040")]
		private UnityEngine.Object SG.ProtoFramework.Resource.IDatabaseEntry.Key
		{
			[Token(Token = "0x60002E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002E5")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public virtual bool IsEnabled
		{
			[Token(Token = "0x60002E6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60002E7")]
		public DatabaseEntry()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A1930", Offset = "0x8A1930")]
	public abstract class GenericDatabase : ScriptableObject
	{
		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _assetGuidString;

		[Token(Token = "0x17000042")]
		public string AssetGuidString
		{
			[Token(Token = "0x60002E8")]
			[Address(RVA = "0x12FCA88", Offset = "0x12FCA88", VA = "0x12FCA88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000043")]
		protected abstract IDatabaseEntry Item
		{
			[Token(Token = "0x60002E9")]
			get;
			[Token(Token = "0x60002EA")]
			set;
		}

		[Token(Token = "0x17000044")]
		public abstract int Count
		{
			[Token(Token = "0x60002EB")]
			get;
		}

		[Token(Token = "0x60002EC")]
		public abstract void AddNewEntry();

		[Token(Token = "0x60002ED")]
		public abstract void AddNewEntry(UnityEngine.Object key, int index = -1);

		[Token(Token = "0x60002EE")]
		public abstract void RemoveEntry(int index);

		[Token(Token = "0x60002EF")]
		public abstract void Sort(Comparison<UnityEngine.Object> comparison);

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x12FCA90", Offset = "0x12FCA90", VA = "0x12FCA90", Slot = "11")]
		public virtual UnityEngine.Object GetKey(int i)
		{
			return null;
		}

		[Token(Token = "0x60002F1")]
		public abstract bool Validate(int entryIndex);

		[Token(Token = "0x60002F2")]
		public abstract bool CheckIsEnabled(int entryIndex);

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x12FCB60", Offset = "0x12FCB60", VA = "0x12FCB60")]
		protected GenericDatabase()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A1968", Offset = "0x8A1968")]
	public class GenericDatabase<T> : GenericDatabase where T : IDatabaseEntry
	{
		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AACF4", Offset = "0x8AACF4")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001CBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Comparison<UnityEngine.Object> comparison;

			[Token(Token = "0x6001B3E")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6001B3F")]
			internal int <Sort>b__0(T a, T b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> Entries;

		[Token(Token = "0x17000045")]
		protected override IDatabaseEntry Item
		{
			[Token(Token = "0x60002F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60002F5")]
			set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public override int Count
		{
			[Token(Token = "0x60002F6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60002F7")]
		protected T CreateEntry()
		{
			return (T)null;
		}

		[Token(Token = "0x60002F8")]
		public override void AddNewEntry()
		{
		}

		[Token(Token = "0x60002F9")]
		public override void AddNewEntry(UnityEngine.Object key, int index = -1)
		{
		}

		[Token(Token = "0x60002FA")]
		public override void RemoveEntry(int index)
		{
		}

		[Token(Token = "0x60002FB")]
		public override void Sort(Comparison<UnityEngine.Object> comparison)
		{
		}

		[Token(Token = "0x60002FC")]
		public override bool Validate(int entryIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60002FD")]
		public override bool CheckIsEnabled(int entryIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60002FE")]
		public GenericDatabase()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class ResourceTypeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type ExpectedType;

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x12FCEE0", Offset = "0x12FCEE0", VA = "0x12FCEE0")]
		public ResourceTypeAttribute(Type type)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C5")]
	public class ResourceAddress
	{
		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADC7C", Offset = "0x8ADC7C")]
		[SerializeField]
		private string path;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADCC8", Offset = "0x8ADCC8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8ADCC8", Offset = "0x8ADCC8")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x17000047")]
		public string Path
		{
			[Token(Token = "0x6000300")]
			[Address(RVA = "0x12FCB68", Offset = "0x12FCB68", VA = "0x12FCB68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000301")]
			[Address(RVA = "0x12FCB70", Offset = "0x12FCB70", VA = "0x12FCB70")]
			set
			{
			}
		}

		[Token(Token = "0x17000048")]
		public string GUID
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x12FCB78", Offset = "0x12FCB78", VA = "0x12FCB78")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000303")]
			[Address(RVA = "0x12FCB80", Offset = "0x12FCB80", VA = "0x12FCB80")]
			set
			{
			}
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x12FCB88", Offset = "0x12FCB88", VA = "0x12FCB88", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x12FCA78", Offset = "0x12FCA78", VA = "0x12FCA78")]
		public ResourceAddress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C6")]
	public class AssetAddress : ResourceAddress
	{
		[Token(Token = "0x6000306")]
		public static T[] LoadAssetList<T>(AssetAddress[] addresses) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x12FCA70", Offset = "0x12FCA70", VA = "0x12FCA70")]
		public AssetAddress()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A19A0", Offset = "0x8A19A0")]
	public class ResourceController : ScriptableObject
	{
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD04", Offset = "0x8AAD04")]
		private sealed class <>c__DisplayClass5_0<T> where T : UnityEngine.Object
		{
			[Token(Token = "0x4001CBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ResourceController <>4__this;

			[Token(Token = "0x4001CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ResourceRequest request;

			[Token(Token = "0x4001CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> OnComplete;

			[Token(Token = "0x6001B40")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001B41")]
			internal void <LoadResource>b__0(AsyncOperation operation)
			{
			}
		}

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceDatabase _defaultDatabase;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceDatabase[] _resourceDatabases;

		[NonSerialized]
		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ResourceDatabase _currentDatabase;

		[NonSerialized]
		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool _isInitialized;

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x12FAECC", Offset = "0x12FAECC", VA = "0x12FAECC")]
		public void ChangeDatabase(ResourceDatabase newDatabase)
		{
		}

		[Token(Token = "0x6000309")]
		public void LoadResource<T>(ResourceKey key, Action<T> OnComplete) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x600030A")]
		private void OnLoadOperationCompleted<T>(AsyncOperation obj, ResourceRequest request, Action<T> OnComplete) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x12FCBE0", Offset = "0x12FCBE0", VA = "0x12FCBE0")]
		public int GetCachedId(ResourceKey resourceKey)
		{
			return default(int);
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x12FCCC4", Offset = "0x12FCCC4", VA = "0x12FCCC4")]
		public ResourceController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C8")]
	public class ResourceDatabaseEntry : DatabaseEntry<ResourceKey>
	{
		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResourceAddress Address;

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x12FCE88", Offset = "0x12FCE88", VA = "0x12FCE88")]
		public ResourceDatabaseEntry()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1A00", Offset = "0x8A1A00")]
	public class ResourceDatabase : GenericDatabase<ResourceDatabaseEntry>
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x12FCD30", Offset = "0x12FCD30", VA = "0x12FCD30", Slot = "12")]
		public override bool Validate(int entryIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x12FCE38", Offset = "0x12FCE38", VA = "0x12FCE38")]
		public ResourceDatabase()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1A60", Offset = "0x8A1A60")]
	public class ResourceKey : ScriptableObject
	{
		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public int CachedID;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceController _resourceController;

		[Token(Token = "0x6000310")]
		public void LoadResource<T>(Action<T> OnComplete) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x12FCED8", Offset = "0x12FCED8", VA = "0x12FCED8")]
		public ResourceKey()
		{
		}
	}
}
namespace SG.ProtoFramework.ClosedCaption
{
	[Token(Token = "0x20000CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1AC0", Offset = "0x8A1AC0")]
	public class ClosedCaptionConfigData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000452")]
		public struct TagPair
		{
			[Token(Token = "0x4001CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Tag;

			[Token(Token = "0x4001CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Serializable]
		[Token(Token = "0x2000453")]
		public struct CharLengthPair
		{
			[Token(Token = "0x4001CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ClosedCaptionLocationData LocationData;

			[Token(Token = "0x4001CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int CharLimit;
		}

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<TagPair> TagPairs;

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x12F52C0", Offset = "0x12F52C0", VA = "0x12F52C0")]
		public ClosedCaptionConfigData()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1B20", Offset = "0x8A1B20")]
	public class ClosedCaptionData : ScriptableObject
	{
		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioClip AudioClip;

		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ClosedCaptionTrack> Tracks;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float overrideAngle;

		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SubtitleSpeaker Speaker;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ADD64", Offset = "0x8ADD64")]
		public string DeveloperNotes;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float Duration;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public int TotalEventCount;

		[NonSerialized]
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TimeEventStarted;

		[NonSerialized]
		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float TimeEventEnd;

		[Token(Token = "0x17000049")]
		public int TrackCount
		{
			[Token(Token = "0x6000313")]
			[Address(RVA = "0x12F533C", Offset = "0x12F533C", VA = "0x12F533C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x12F538C", Offset = "0x12F538C", VA = "0x12F538C")]
		public int GetTrackIndex(ClosedCaptionTrack track)
		{
			return default(int);
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x12F542C", Offset = "0x12F542C", VA = "0x12F542C")]
		public ClosedCaptionTrack GetTrack(string trackName)
		{
			return null;
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x12F5558", Offset = "0x12F5558", VA = "0x12F5558")]
		public ClosedCaptionTrack GetTrack(int trackIndex)
		{
			return null;
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x12F55EC", Offset = "0x12F55EC", VA = "0x12F55EC")]
		public ClosedCaptionData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000CD")]
	public class ClosedCaptionDatabaseEntry : DatabaseEntry<AudioClip>
	{
		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClosedCaptionData Data;

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x12F5A14", Offset = "0x12F5A14", VA = "0x12F5A14")]
		public ClosedCaptionDatabaseEntry()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1B80", Offset = "0x8A1B80")]
	public class ClosedCaptionDatabase : GenericDatabase<ClosedCaptionDatabaseEntry>
	{
		[Token(Token = "0x4000284")]
		private const float COPY_TIME_DURATION_EPSILON = 0.05f;

		[NonSerialized]
		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<ClosedCaptionData> RuntimeData;

		[NonSerialized]
		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly List<ClosedCaptionData> PreviewData;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ADD9C", Offset = "0x8ADD9C")]
		[SerializeField]
		private string _spreadsheetID;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _ccdImportSuffix;

		[Token(Token = "0x1700004A")]
		public string SpreadsheetID
		{
			[Token(Token = "0x6000319")]
			[Address(RVA = "0x12F5688", Offset = "0x12F5688", VA = "0x12F5688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004B")]
		public string CCDImportSuffix
		{
			[Token(Token = "0x600031A")]
			[Address(RVA = "0x12F5690", Offset = "0x12F5690", VA = "0x12F5690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		public string TabName
		{
			[Token(Token = "0x600031B")]
			[Address(RVA = "0x12F5698", Offset = "0x12F5698", VA = "0x12F5698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x12F56A0", Offset = "0x12F56A0", VA = "0x12F56A0")]
		public bool TryGet(AudioClip clip, out ClosedCaptionData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x12F57D8", Offset = "0x12F57D8", VA = "0x12F57D8")]
		public void AddNewEntry(AudioClip clip, ClosedCaptionData data)
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x12F594C", Offset = "0x12F594C", VA = "0x12F594C")]
		public ClosedCaptionDatabase()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1BE0", Offset = "0x8A1BE0")]
	public class ClosedCaptionLocationData : ScriptableObject
	{
		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TextAnchor _previewLocation;

		[Token(Token = "0x1700004D")]
		public TextAnchor PreviewLocation
		{
			[Token(Token = "0x600031F")]
			[Address(RVA = "0x12F5A64", Offset = "0x12F5A64", VA = "0x12F5A64")]
			get
			{
				return default(TextAnchor);
			}
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x12F5A6C", Offset = "0x12F5A6C", VA = "0x12F5A6C")]
		public ClosedCaptionLocationData()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1C40", Offset = "0x8A1C40")]
	public class ClosedCaptionManager : CustomPlayerLoop
	{
		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ADE08", Offset = "0x8ADE08")]
		[SerializeField]
		private ResourceKey _closedCaptionDatabaseKey;

		[NonSerialized]
		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ClosedCaptionDatabase _currentClosedCaptionDatabase;

		[NonSerialized]
		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _loadedClosedCaptionDatabase;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8ADE54", Offset = "0x8ADE54")]
		[SerializeField]
		private LocalizationManager _localizationManager;

		[Token(Token = "0x1700004E")]
		public List<ClosedCaptionData> ActiveClosedCaptionData
		{
			[Token(Token = "0x6000321")]
			[Address(RVA = "0x12F5A74", Offset = "0x12F5A74", VA = "0x12F5A74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		public List<ClosedCaptionData> PreviewClosedCaptionData
		{
			[Token(Token = "0x6000322")]
			[Address(RVA = "0x12F5A90", Offset = "0x12F5A90", VA = "0x12F5A90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000050")]
		public bool IsManagerReady
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0x12F5AAC", Offset = "0x12F5AAC", VA = "0x12F5AAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x12F5AB4", Offset = "0x12F5AB4", VA = "0x12F5AB4", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x12F5B20", Offset = "0x12F5B20", VA = "0x12F5B20", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x12F5CAC", Offset = "0x12F5CAC", VA = "0x12F5CAC", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x12F5E8C", Offset = "0x12F5E8C", VA = "0x12F5E8C")]
		private void LoadDatabase()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x12F5F28", Offset = "0x12F5F28", VA = "0x12F5F28")]
		private void OnClosedCaptionDatabaseLoaded(ClosedCaptionDatabase loadedDatabase)
		{
		}

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x12F623C", Offset = "0x12F623C", VA = "0x12F623C")]
		private void OnClosedCaptionDatabaseChanged(ClosedCaptionDatabase curDatabase, ClosedCaptionDatabase newDatabase)
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x12F6464", Offset = "0x12F6464", VA = "0x12F6464")]
		public void PlayClosedCaption(AudioClip clip, float startOffset = 0f)
		{
		}

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x12F654C", Offset = "0x12F654C", VA = "0x12F654C")]
		public void PlayClosedCaptionUnscaleTime(AudioClip clip, float startOffset = 0f)
		{
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x12F6634", Offset = "0x12F6634", VA = "0x12F6634")]
		public void CancelClosedCaption(AudioClip clip)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x12F5B30", Offset = "0x12F5B30", VA = "0x12F5B30")]
		private void RemoveExpiredClosedCaptions()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x12F6760", Offset = "0x12F6760", VA = "0x12F6760")]
		private void ClearClosedCaptions()
		{
		}

		[Token(Token = "0x600032F")]
		[Address(RVA = "0x12F6804", Offset = "0x12F6804", VA = "0x12F6804")]
		public ClosedCaptionManager()
		{
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x12F686C", Offset = "0x12F686C", VA = "0x12F686C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE788", Offset = "0x8DE788")]
		private void <BeginAsyncInitialize>b__12_0()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D1")]
	public class ClosedCaptionTrack
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string TrackName;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Mute;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<ClosedCaptionTrackEvent> Events;

		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIUsage[] UIUsages;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8ADEB0", Offset = "0x8ADEB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADEB0", Offset = "0x8ADEB0")]
		public int MaxCharacterCount;

		[Token(Token = "0x17000051")]
		public int EventCount
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x12F6870", Offset = "0x12F6870", VA = "0x12F6870")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x12F68C0", Offset = "0x12F68C0", VA = "0x12F68C0")]
		public ClosedCaptionTrack(string trackName)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x12F697C", Offset = "0x12F697C", VA = "0x12F697C")]
		public ClosedCaptionTrack(ClosedCaptionTrack copyFrom)
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x12F6A80", Offset = "0x12F6A80", VA = "0x12F6A80")]
		public void DeleteEvent(int index)
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x12F6AE8", Offset = "0x12F6AE8", VA = "0x12F6AE8")]
		public void AddEvent(ClosedCaptionTrackEvent e)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x12F6B64", Offset = "0x12F6B64", VA = "0x12F6B64")]
		public ClosedCaptionTrackEvent CreateEvent(float time, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x12F6C04", Offset = "0x12F6C04", VA = "0x12F6C04")]
		public ClosedCaptionTrackEvent GetEvent(int index)
		{
			return null;
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x12F6C7C", Offset = "0x12F6C7C", VA = "0x12F6C7C")]
		public void ScrubSampleTime(float seconds)
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x12F6D74", Offset = "0x12F6D74", VA = "0x12F6D74")]
		public void StopSampling()
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x12F6D78", Offset = "0x12F6D78", VA = "0x12F6D78")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x12F6DDC", Offset = "0x12F6DDC", VA = "0x12F6DDC")]
		public void UpdateMaxCharCount()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000D2")]
	public class ClosedCaptionTrackEvent : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Duration;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ADF00", Offset = "0x8ADF00")]
		public string Text;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8ADF18", Offset = "0x8ADF18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8ADF18", Offset = "0x8ADF18")]
		public string DisplayText;

		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ClosedCaptionLocationData Location;

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public ClosedCaptionConfigData ClosedCaptionConfigData;

		[Token(Token = "0x17000052")]
		public float End
		{
			[Token(Token = "0x600033E")]
			[Address(RVA = "0x12F6ED8", Offset = "0x12F6ED8", VA = "0x12F6ED8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600033F")]
			[Address(RVA = "0x12F6EE4", Offset = "0x12F6EE4", VA = "0x12F6EE4")]
			set
			{
			}
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x12F6BFC", Offset = "0x12F6BFC", VA = "0x12F6BFC")]
		public ClosedCaptionTrackEvent()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x12F6E5C", Offset = "0x12F6E5C", VA = "0x12F6E5C")]
		public ClosedCaptionTrackEvent(ClosedCaptionTrackEvent copyFrom)
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x12F6EFC", Offset = "0x12F6EFC", VA = "0x12F6EFC", Slot = "6")]
		public virtual void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x12F702C", Offset = "0x12F702C", VA = "0x12F702C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x12F7030", Offset = "0x12F7030", VA = "0x12F7030", Slot = "7")]
		public virtual void OnValidate()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class ClosedCaptionUI : MonoBehaviour
	{
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransformVariable _subtitleShakeRootTransform;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ClosedCaptionConfigData _configData;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADF8C", Offset = "0x8ADF8C")]
		[SerializeField]
		protected ClosedCaptionManager _ccManager;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8ADFD8", Offset = "0x8ADFD8")]
		[SerializeField]
		protected LocalizationManager _lManager;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE024", Offset = "0x8AE024")]
		[SerializeField]
		private XRTrackedNode _hmdNode;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE070", Offset = "0x8AE070")]
		[SerializeField]
		private BoolVariable _isClosedCaptionActive;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable _isClosedCaptionAudioCuesActive;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable _isClosedCaptionDebug;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVariable _scaleFactor;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatRange _scaleRange;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVariable _isDrawingCCAfterFadeEnabled;

		[Token(Token = "0x40002A4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE10C", Offset = "0x8AE10C")]
		private const float MAX_SIDE_STEP = 0.7f;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE144", Offset = "0x8AE144")]
		[SerializeField]
		private AnimationCurve scaleDistCurve;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LayerMask _obstacleLayerMask;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE1A0", Offset = "0x8AE1A0")]
		[SerializeField]
		private Vector2 _distanceFromPlayer;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float _reappearDistance;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float _surfaceDistance;

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int _fpsStep;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float _angleOffset;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float _smoothMoveTime;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isFirstCCD;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE23C", Offset = "0x8AE23C")]
		[SerializeField]
		protected Animation _animation;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AnimationClip _appearAnimationClip;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AnimationClip _disappearAnimationClip;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AnimationClip _hiddenAnimationClip;

		[NonSerialized]
		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected AnimationState _currentAnimationState;

		[NonSerialized]
		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected float _elapsedAnimationTime;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE2B8", Offset = "0x8AE2B8")]
		[SerializeField]
		protected DrawPostFullScreenEffect _effect;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected BoolVariable _effectInQueue;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE314", Offset = "0x8AE314")]
		[SerializeField]
		private Transform _mainPanel;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Transform _root;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private Transform _audioCuesRoot;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Transform _shakeRoot;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		protected ClosedCaptionLocationData _speakerLocation;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE3A0", Offset = "0x8AE3A0")]
		[SerializeField]
		private ClosedCaptionLocationData _locationData;

		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private string _debugText;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		protected List<ClosedCaptionData> activeCCD;

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x12F7034", Offset = "0x12F7034", VA = "0x12F7034")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE798", Offset = "0x8DE798")]
		public void DebugTest()
		{
		}

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x12F7048", Offset = "0x12F7048", VA = "0x12F7048")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x12F7054", Offset = "0x12F7054", VA = "0x12F7054", Slot = "4")]
		public virtual void AwakeHandler()
		{
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x12F70DC", Offset = "0x12F70DC", VA = "0x12F70DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x12F7244", Offset = "0x12F7244", VA = "0x12F7244")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x12F7378", Offset = "0x12F7378", VA = "0x12F7378")]
		private void OnScaleChanged(float newValue)
		{
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x12F7458", Offset = "0x12F7458", VA = "0x12F7458")]
		private void UpdateScale(float distance)
		{
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x12F7510", Offset = "0x12F7510", VA = "0x12F7510")]
		private void OnClosedCaptionSetActive(bool isActive)
		{
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x12F7C94", Offset = "0x12F7C94", VA = "0x12F7C94")]
		private void OnClosedCaptionAudioCuesSetActive(bool isActive)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x12F7CD0", Offset = "0x12F7CD0", VA = "0x12F7CD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x12F7F5C", Offset = "0x12F7F5C", VA = "0x12F7F5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x12F7F68", Offset = "0x12F7F68", VA = "0x12F7F68", Slot = "5")]
		public virtual void DoLateUpdate()
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x12F7570", Offset = "0x12F7570", VA = "0x12F7570")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x12F7F0C", Offset = "0x12F7F0C", VA = "0x12F7F0C")]
		private void UpdatePosition()
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x12F8024", Offset = "0x12F8024", VA = "0x12F8024")]
		private float GetDistanceRaycast(Vector3 from, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x12F8308", Offset = "0x12F8308", VA = "0x12F8308", Slot = "6")]
		public virtual void UpdateFont()
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x12F830C", Offset = "0x12F830C", VA = "0x12F830C", Slot = "7")]
		public virtual void UpdateActiveCCD()
		{
		}

		[Token(Token = "0x6000354")]
		[Address(RVA = "0x12F7D34", Offset = "0x12F7D34", VA = "0x12F7D34")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x12F8350", Offset = "0x12F8350", VA = "0x12F8350", Slot = "8")]
		protected virtual void UpdateDrawEffect()
		{
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x12F847C", Offset = "0x12F847C", VA = "0x12F847C", Slot = "9")]
		public virtual void ClearAll()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x12F8480", Offset = "0x12F8480", VA = "0x12F8480", Slot = "10")]
		public virtual void Display(List<ClosedCaptionTrack> tracks, float startTime, float _angle, ClosedCaptionData activeData)
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x12F86D4", Offset = "0x12F86D4", VA = "0x12F86D4", Slot = "11")]
		public virtual void SetText(ClosedCaptionLocationData location, string text, float _angle)
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x12F86D8", Offset = "0x12F86D8", VA = "0x12F86D8")]
		private void UpdateAngleOffset(float _CCDAngle)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x12F81FC", Offset = "0x12F81FC", VA = "0x12F81FC")]
		private void Appear()
		{
		}

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x12F7AF4", Offset = "0x12F7AF4", VA = "0x12F7AF4")]
		private void Disappear()
		{
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x12F80F8", Offset = "0x12F80F8", VA = "0x12F80F8")]
		private void Hidden()
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x12F87C4", Offset = "0x12F87C4", VA = "0x12F87C4")]
		public ClosedCaptionUI()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class ClosedCaptionUIHQ : ClosedCaptionUI
	{
		[Serializable]
		[Token(Token = "0x2000454")]
		private struct ClosedCaptionTextLocation
		{
			[NonSerialized]
			[Token(Token = "0x4001CC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsActive;

			[Token(Token = "0x4001CC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool IsAutoFitBackgroundEnabled;

			[Token(Token = "0x4001CC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TextMeshPro Text;

			[Token(Token = "0x4001CC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DC248", Offset = "0x8DC248")]
			public MeshRenderer TextMeshRenderer;

			[Token(Token = "0x4001CC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DC25C", Offset = "0x8DC25C")]
			public Material TextMeshMaterial;

			[Token(Token = "0x4001CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer Background;

			[Token(Token = "0x4001CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ClosedCaptionLocationData LocationData;
		}

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ClosedCaptionTextLocation[] _textLocations;

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x12F88EC", Offset = "0x12F88EC", VA = "0x12F88EC", Slot = "4")]
		public override void AwakeHandler()
		{
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x12F89E0", Offset = "0x12F89E0", VA = "0x12F89E0", Slot = "9")]
		public override void ClearAll()
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x12F8AEC", Offset = "0x12F8AEC", VA = "0x12F8AEC")]
		private void CheckSubMesh(ClosedCaptionTextLocation location, bool shouldShowSubMesh = false)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x12F8BAC", Offset = "0x12F8BAC", VA = "0x12F8BAC", Slot = "8")]
		protected override void UpdateDrawEffect()
		{
		}

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x12F8CD8", Offset = "0x12F8CD8", VA = "0x12F8CD8", Slot = "11")]
		public override void SetText(ClosedCaptionLocationData location, string text, float _angle)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x12F8E54", Offset = "0x12F8E54", VA = "0x12F8E54", Slot = "6")]
		public override void UpdateFont()
		{
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x12F8F48", Offset = "0x12F8F48", VA = "0x12F8F48")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000365")]
		[Address(RVA = "0x12F91A4", Offset = "0x12F91A4", VA = "0x12F91A4")]
		public ClosedCaptionUIHQ()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class ClosedCaptionUIHQPreview : ClosedCaptionUIHQ
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x12F920C", Offset = "0x12F920C", VA = "0x12F920C", Slot = "7")]
		public override void UpdateActiveCCD()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x12F9250", Offset = "0x12F9250", VA = "0x12F9250", Slot = "10")]
		public override void Display(List<ClosedCaptionTrack> tracks, float startTime, float _angle, ClosedCaptionData activeData)
		{
		}

		[Token(Token = "0x6000368")]
		[Address(RVA = "0x12F9410", Offset = "0x12F9410", VA = "0x12F9410", Slot = "5")]
		public override void DoLateUpdate()
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x12F94CC", Offset = "0x12F94CC", VA = "0x12F94CC")]
		public ClosedCaptionUIHQPreview()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class ClosedCaptionUILQ : ClosedCaptionUI
	{
		[Serializable]
		[Token(Token = "0x2000455")]
		private struct ClosedCaptionTextLocation
		{
			[NonSerialized]
			[Token(Token = "0x4001CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsActive;

			[Token(Token = "0x4001CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool IsAutoFitBackgroundEnabled;

			[Token(Token = "0x4001CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TextMesh Text;

			[Token(Token = "0x4001CCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DC270", Offset = "0x8DC270")]
			public MeshRenderer TextMeshRenderer;

			[Token(Token = "0x4001CCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DC284", Offset = "0x8DC284")]
			public Material TextMeshMaterial;

			[Token(Token = "0x4001CCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpriteRenderer Background;

			[Token(Token = "0x4001CD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ClosedCaptionLocationData LocationData;
		}

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ClosedCaptionTextLocation[] _textLocations;

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x12F94D0", Offset = "0x12F94D0", VA = "0x12F94D0", Slot = "4")]
		public override void AwakeHandler()
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x12F95C4", Offset = "0x12F95C4", VA = "0x12F95C4", Slot = "9")]
		public override void ClearAll()
		{
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x12F9694", Offset = "0x12F9694", VA = "0x12F9694", Slot = "11")]
		public override void SetText(ClosedCaptionLocationData location, string text, float _angle)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x12F97D4", Offset = "0x12F97D4", VA = "0x12F97D4", Slot = "6")]
		public override void UpdateFont()
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x12F97D8", Offset = "0x12F97D8", VA = "0x12F97D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x12F9A34", Offset = "0x12F9A34", VA = "0x12F9A34")]
		public ClosedCaptionUILQ()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public class ClosedCaptionUILQPreview : ClosedCaptionUILQ
	{
		[Token(Token = "0x6000370")]
		[Address(RVA = "0x12F9A9C", Offset = "0x12F9A9C", VA = "0x12F9A9C", Slot = "7")]
		public override void UpdateActiveCCD()
		{
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x12F9AE0", Offset = "0x12F9AE0", VA = "0x12F9AE0", Slot = "10")]
		public override void Display(List<ClosedCaptionTrack> tracks, float startTime, float _angle, ClosedCaptionData activeData)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x12F9CA0", Offset = "0x12F9CA0", VA = "0x12F9CA0", Slot = "5")]
		public override void DoLateUpdate()
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x12F9D5C", Offset = "0x12F9D5C", VA = "0x12F9D5C")]
		public ClosedCaptionUILQPreview()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class SubMeshManager : MonoBehaviour
	{
		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<MeshRenderer> subMeshRender;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool SyncSubMesh;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DrawPostFullScreenEffect _effect;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int idealRendererCount;

		[Token(Token = "0x6000374")]
		[Address(RVA = "0x12F9D60", Offset = "0x12F9D60", VA = "0x12F9D60")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x12F9F14", Offset = "0x12F9F14", VA = "0x12F9F14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0x12F9FE8", Offset = "0x12F9FE8", VA = "0x12F9FE8")]
		public SubMeshManager()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class SubtitlePreview : MonoBehaviour
	{
		[Token(Token = "0x40002C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool isFTUE;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE45C", Offset = "0x8AE45C")]
		[SerializeField]
		private AudioRequest previewAudio;

		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE4A8", Offset = "0x8AE4A8")]
		[SerializeField]
		private AudioClip previewAudioClip;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ClosedCaptionManager _ccManager;

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x12FA064", Offset = "0x12FA064", VA = "0x12FA064")]
		private void AudioController(bool shouldPlay)
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x12FA13C", Offset = "0x12FA13C", VA = "0x12FA13C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x12FA1E8", Offset = "0x12FA1E8", VA = "0x12FA1E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x12FA154", Offset = "0x12FA154", VA = "0x12FA154")]
		private void PlayNoFTUEAudio(bool shouldPlayer)
		{
		}

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x12FA200", Offset = "0x12FA200", VA = "0x12FA200")]
		public SubtitlePreview()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1CA8", Offset = "0x8A1CA8")]
	public class SubtitleSpeaker : ScriptableObject
	{
		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable currentSpeakerName;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<UserString> displayName;

		[Token(Token = "0x17000053")]
		public string DisplayName
		{
			[Token(Token = "0x600037C")]
			[Address(RVA = "0x12F8640", Offset = "0x12F8640", VA = "0x12F8640")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x12FA208", Offset = "0x12FA208", VA = "0x12FA208")]
		public SubtitleSpeaker()
		{
		}
	}
}
namespace SG.ProtoFramework.AnimationUtilities
{
	[Token(Token = "0x20000DB")]
	public class BoolParamSetter : StateMachineBehaviour
	{
		[Token(Token = "0x2000456")]
		public enum BoolSetting
		{
			[Token(Token = "0x4001CD2")]
			Unchanged,
			[Token(Token = "0x4001CD3")]
			False,
			[Token(Token = "0x4001CD4")]
			True
		}

		[Serializable]
		[Token(Token = "0x2000457")]
		public class BoolParameterSetValue
		{
			[Token(Token = "0x4001CD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC298", Offset = "0x8DC298")]
			public string ParameterName;

			[Token(Token = "0x4001CD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC2D0", Offset = "0x8DC2D0")]
			[HideInInspector]
			[SerializeField]
			public int Hash;

			[Token(Token = "0x4001CD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC32C", Offset = "0x8DC32C")]
			public BoolSetting OnStateEnterValue;

			[Token(Token = "0x4001CD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC364", Offset = "0x8DC364")]
			public BoolSetting OnStateMachineEnterValue;

			[Token(Token = "0x4001CD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC39C", Offset = "0x8DC39C")]
			public BoolSetting OnStateTransitionOutStartValue;

			[Token(Token = "0x4001CDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC3D4", Offset = "0x8DC3D4")]
			public BoolSetting OnStateExitValue;

			[Token(Token = "0x4001CDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC40C", Offset = "0x8DC40C")]
			public BoolSetting OnStateMachineExitValue;

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x12F4B50", Offset = "0x12F4B50", VA = "0x12F4B50")]
			public void OnValidate()
			{
			}

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x12F5064", Offset = "0x12F5064", VA = "0x12F5064")]
			public BoolParameterSetValue()
			{
			}
		}

		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE534", Offset = "0x8AE534")]
		public BoolParameterSetValue[] Parameters;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool exitStarted;

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x12F4A90", Offset = "0x12F4A90", VA = "0x12F4A90")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x12F4BE0", Offset = "0x12F4BE0", VA = "0x12F4BE0", Slot = "9")]
		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x12F4C7C", Offset = "0x12F4C7C", VA = "0x12F4C7C", Slot = "10")]
		public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x12F4D18", Offset = "0x12F4D18", VA = "0x12F4D18", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x12F4DD4", Offset = "0x12F4DD4", VA = "0x12F4DD4", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x12F4E8C", Offset = "0x12F4E8C", VA = "0x12F4E8C", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x12F4FF8", Offset = "0x12F4FF8", VA = "0x12F4FF8")]
		public BoolParamSetter()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class DisableAnimator : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000458")]
		public enum ShutdownMode
		{
			[Token(Token = "0x4001CDD")]
			DisableAnimator,
			[Token(Token = "0x4001CDE")]
			DisableGameObject,
			[Token(Token = "0x4001CDF")]
			DisableParentGameObject
		}

		[Serializable]
		[Token(Token = "0x2000459")]
		public enum TriggerMode
		{
			[Token(Token = "0x4001CE1")]
			OnEnter,
			[Token(Token = "0x4001CE2")]
			OnExit,
			[Token(Token = "0x4001CE3")]
			OnNormalizedTime
		}

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ShutdownMode shutdownMode;

		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TriggerMode triggerMode;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8AE58C", Offset = "0x8AE58C")]
		[SerializeField]
		private float normalizedTime;

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x12F506C", Offset = "0x12F506C", VA = "0x12F506C", Slot = "9")]
		public override void OnStateMachineEnter(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x12F513C", Offset = "0x12F513C", VA = "0x12F513C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x12F5194", Offset = "0x12F5194", VA = "0x12F5194", Slot = "10")]
		public override void OnStateMachineExit(Animator animator, int stateMachinePathHash)
		{
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x12F51DC", Offset = "0x12F51DC", VA = "0x12F51DC", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x12F50B0", Offset = "0x12F50B0", VA = "0x12F50B0")]
		private void Shutdown(Animator animator)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x12F5238", Offset = "0x12F5238", VA = "0x12F5238", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0x12F52B8", Offset = "0x12F52B8", VA = "0x12F52B8")]
		public DisableAnimator()
		{
		}
	}
}
namespace SG.ProtoFramework.AnimationMapping
{
	[Token(Token = "0x20000DD")]
	public class Animapper : MonoBehaviour
	{
		[Token(Token = "0x200045A")]
		public class SubAnimatorPlayableData
		{
			[Token(Token = "0x4001CE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animator Animator;

			[Token(Token = "0x4001CE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationPlayableOutput AnimationPlayableOutput;

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0xD64DF4", Offset = "0xD64DF4", VA = "0xD64DF4")]
			public SubAnimatorPlayableData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200045B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD14", Offset = "0x8AAD14")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001CE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__42_0;

			[Token(Token = "0x4001CE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<object> <>9__42_1;

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0xD667AC", Offset = "0xD667AC", VA = "0xD667AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B47")]
			[Address(RVA = "0xD667B4", Offset = "0xD667B4", VA = "0xD667B4")]
			internal void <.ctor>b__42_0(object animapper)
			{
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0xD66840", Offset = "0xD66840", VA = "0xD66840")]
			internal void <.ctor>b__42_1(object animapper)
			{
			}
		}

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<int, float> internalNormalizedTimes;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<AnimationClip, float> explicitNormalizedTimes;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationMapData MapData;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator Animator;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExposedAnimatorMap AnimatorMap;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ExposedRendererMap RendererMap;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform RootTransform;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool useExternalTransformMap;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AE5F0", Offset = "0x8AE5F0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AE5F0", Offset = "0x8AE5F0")]
		[SerializeField]
		private ExposedTransformMap transformMap;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AE670", Offset = "0x8AE670")]
		[SerializeField]
		private MonoBehaviour externalTransformMap;

		[Token(Token = "0x40002DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private QuickButton validateAllEvents;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private QuickButton validateMaterialEvents;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<AnimatorClipInfo>[] playingClips;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<AnimationMap.MapRuntime> runtimeList;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<AnimationClip> allPlayingClips;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Dictionary<ExposedAnimator, SubAnimatorPlayableData> PlayableDataCache;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<object, AnimapperEvent.AnimapperEventRuntime> eventCache;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<AnimationClip> extraAnimations;

		[Token(Token = "0x17000054")]
		public List<AnimationMap> Maps
		{
			[Token(Token = "0x600038C")]
			[Address(RVA = "0xD6425C", Offset = "0xD6425C", VA = "0xD6425C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0xD6427C", Offset = "0xD6427C", VA = "0xD6427C")]
		public void SetExternalTransformMap(ITransformMap map)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xD64318", Offset = "0xD64318", VA = "0xD64318")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0xD643E0", Offset = "0xD643E0", VA = "0xD643E0")]
		private void ValidateEvents(Type typeFilter)
		{
		}

		[Token(Token = "0x6000390")]
		[Address(RVA = "0xD64690", Offset = "0xD64690", VA = "0xD64690")]
		private float GetUpdateTime(AnimationMap map, AnimatorStateInfo animatorStateInfo)
		{
			return default(float);
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0xD648C8", Offset = "0xD648C8", VA = "0xD648C8")]
		public void StoreEvent(object key, AnimapperEvent.AnimapperEventRuntime evt)
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0xD64984", Offset = "0xD64984", VA = "0xD64984")]
		public AnimapperEvent.AnimapperEventRuntime GetEvent(object key)
		{
			return null;
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0xD64A18", Offset = "0xD64A18", VA = "0xD64A18")]
		public void ClearEvent(object key)
		{
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0xD64AB0", Offset = "0xD64AB0", VA = "0xD64AB0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000395")]
		[Address(RVA = "0xD64C34", Offset = "0xD64C34", VA = "0xD64C34")]
		private void Start()
		{
		}

		[Token(Token = "0x6000396")]
		[Address(RVA = "0xD64C38", Offset = "0xD64C38", VA = "0xD64C38")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0xD64DFC", Offset = "0xD64DFC", VA = "0xD64DFC")]
		public void EditorForceRefreshData()
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0xD64F2C", Offset = "0xD64F2C", VA = "0xD64F2C")]
		private AnimationMap GetMapForClip(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x6000399")]
		[Address(RVA = "0xD65074", Offset = "0xD65074", VA = "0xD65074")]
		private AnimationMap.MapRuntime GetExistingRuntime(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0xD651D4", Offset = "0xD651D4", VA = "0xD651D4")]
		public float GetNormalizedTime(AnimationClip clip)
		{
			return default(float);
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0xD653E8", Offset = "0xD653E8", VA = "0xD653E8")]
		public void SetExplicitNormalizedTime(AnimationClip key, float t)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0xD654C4", Offset = "0xD654C4", VA = "0xD654C4")]
		public void ClearExplicitNormalizedTime(AnimationClip key)
		{
		}

		[Token(Token = "0x600039D")]
		[Address(RVA = "0xD65578", Offset = "0xD65578", VA = "0xD65578")]
		private void ProcessClip(AnimationClip clip, float weight, float normalizedTime)
		{
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0xD65B00", Offset = "0xD65B00", VA = "0xD65B00")]
		private AnimationMap.MapRuntime GetOrCreateRuntime(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0xD65BF0", Offset = "0xD65BF0", VA = "0xD65BF0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0xD661F4", Offset = "0xD661F4", VA = "0xD661F4")]
		public Transform GetBoundTransform(ExposedTransformPoint point)
		{
			return null;
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0xD662E8", Offset = "0xD662E8", VA = "0xD662E8")]
		public bool ContainsPoint(ExposedTransformPoint point)
		{
			return default(bool);
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0xD663E0", Offset = "0xD663E0", VA = "0xD663E0")]
		public Animapper()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DE")]
	public abstract class AnimapperEvent : ISerializationCallbackReceiver
	{
		[Token(Token = "0x200045C")]
		public abstract class AnimapperEventRuntime
		{
			[Token(Token = "0x4001CE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC444", Offset = "0x8DC444")]
			private Animapper <Owner>k__BackingField;

			[Token(Token = "0x4001CEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC454", Offset = "0x8DC454")]
			private AnimapperEvent <Source>k__BackingField;

			[Token(Token = "0x17000414")]
			public Animapper Owner
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0xD66A58", Offset = "0xD66A58", VA = "0xD66A58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E39BC", Offset = "0x8E39BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B4A")]
				[Address(RVA = "0xD66A60", Offset = "0xD66A60", VA = "0xD66A60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E39CC", Offset = "0x8E39CC")]
				protected set
				{
				}
			}

			[Token(Token = "0x17000415")]
			public AnimapperEvent Source
			{
				[Token(Token = "0x6001B4B")]
				[Address(RVA = "0xD66A68", Offset = "0xD66A68", VA = "0xD66A68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E39DC", Offset = "0x8E39DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001B4C")]
				[Address(RVA = "0xD66A70", Offset = "0xD66A70", VA = "0xD66A70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E39EC", Offset = "0x8E39EC")]
				protected set
				{
				}
			}

			[Token(Token = "0x17000416")]
			public abstract float StartTime
			{
				[Token(Token = "0x6001B50")]
				get;
			}

			[Token(Token = "0x17000417")]
			public abstract float Duration
			{
				[Token(Token = "0x6001B51")]
				get;
			}

			[Token(Token = "0x6001B4D")]
			public abstract void Begin();

			[Token(Token = "0x6001B4E")]
			public abstract bool Update(float animationTime, float weight);

			[Token(Token = "0x6001B4F")]
			public abstract void End();

			[Token(Token = "0x6001B52")]
			public abstract bool KeepAlive(ref List<AnimationClip> playing);

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0xD66A78", Offset = "0xD66A78", VA = "0xD66A78")]
			protected AnimapperEventRuntime()
			{
			}
		}

		[Token(Token = "0x200045D")]
		public abstract class AnimapperEventRuntime<TEvent> : AnimapperEventRuntime where TEvent : AnimapperEvent
		{
			[Token(Token = "0x4001CEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected readonly TEvent sourceEvent;

			[Token(Token = "0x4001CEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected float lastUpdateLocalTime;

			[Token(Token = "0x4001CED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected bool completed;

			[Token(Token = "0x17000418")]
			public override float StartTime
			{
				[Token(Token = "0x6001B54")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x17000419")]
			public override float Duration
			{
				[Token(Token = "0x6001B55")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6001B56")]
			protected AnimapperEventRuntime(TEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B57")]
			public override bool KeepAlive(ref List<AnimationClip> playing)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B58")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001B59")]
			public override void End()
			{
			}

			[Token(Token = "0x6001B5A")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Mute;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Duration;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MinStartWeight;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinContinueWeight;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[DebugOnly]
		public AnimapperTrack Track;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<AnimationClip> LoopWhiteList;

		[Token(Token = "0x17000055")]
		public float End
		{
			[Token(Token = "0x60003A4")]
			[Address(RVA = "0xD66984", Offset = "0xD66984", VA = "0xD66984")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60003A5")]
			[Address(RVA = "0xD66990", Offset = "0xD66990", VA = "0xD66990")]
			set
			{
			}
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0xD66980", Offset = "0xD66980", VA = "0xD66980", Slot = "6")]
		public virtual void ValidateFor(Animapper animapper)
		{
		}

		[Token(Token = "0x60003A6")]
		public abstract AnimapperEventRuntime GetRuntime(Animapper owner);

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0xD669A8", Offset = "0xD669A8", VA = "0xD669A8", Slot = "8")]
		public virtual void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0xD669CC", Offset = "0xD669CC", VA = "0xD669CC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0xD669D0", Offset = "0xD669D0", VA = "0xD669D0", Slot = "9")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0xD669D4", Offset = "0xD669D4", VA = "0xD669D4")]
		protected AnimapperEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000DF")]
	public class AnimapperEventContentException : GameContentException
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0xD66A80", Offset = "0xD66A80", VA = "0xD66A80")]
		private static string GetMessage(Animapper source, AnimapperEvent evt, string message)
		{
			return null;
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0xD66E90", Offset = "0xD66E90", VA = "0xD66E90")]
		public AnimapperEventContentException(Animapper source, AnimapperEvent evt, string message)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class AnimapperException : GameContentException
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0xD66EC8", Offset = "0xD66EC8", VA = "0xD66EC8")]
		public AnimapperException(string message)
		{
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xD66ED0", Offset = "0xD66ED0", VA = "0xD66ED0")]
		public AnimapperException(string message, params object[] args)
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public abstract class AnimapperTrack : ScriptableObject
	{
		[Token(Token = "0x200045E")]
		public abstract class AnimapperTrackRuntime
		{
			[Token(Token = "0x6001B5B")]
			public abstract void OnAnimationEnded();

			[Token(Token = "0x6001B5C")]
			public abstract void EditorForceRefreshData();

			[Token(Token = "0x6001B5D")]
			public abstract bool KeepAlive(ref List<AnimationClip> playing);

			[Token(Token = "0x6001B5E")]
			public abstract void UpdateEvents(float realTime, AnimationClip clip, float weight);

			[Token(Token = "0x6001B5F")]
			public abstract void BeginEvent(AnimationClip clip, float weight, int eventIndex);

			[Token(Token = "0x6001B60")]
			[Address(RVA = "0xD66F90", Offset = "0xD66F90", VA = "0xD66F90")]
			protected AnimapperTrackRuntime()
			{
			}
		}

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Mute;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationMap Map;

		[Token(Token = "0x17000056")]
		public abstract int EventCount
		{
			[Token(Token = "0x60003AF")]
			get;
		}

		[Token(Token = "0x60003B0")]
		public abstract AnimapperEvent GetEvent(int index);

		[Token(Token = "0x60003B1")]
		public abstract AnimapperTrackRuntime GetRuntime(Animapper owner);

		[Token(Token = "0x60003B2")]
		public abstract void AddEvent(AnimapperEvent e);

		[Token(Token = "0x60003B3")]
		public abstract AnimapperEvent CreateEvent(float time, float duration);

		[Token(Token = "0x60003B4")]
		public abstract void DeleteEvent(int index);

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0xD66F08", Offset = "0xD66F08", VA = "0xD66F08", Slot = "10")]
		public virtual void ScrubSampleTime(Animapper target, float seconds)
		{
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0xD66F0C", Offset = "0xD66F0C", VA = "0xD66F0C", Slot = "11")]
		public virtual void StopSampling(Animapper target)
		{
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0xD66F10", Offset = "0xD66F10", VA = "0xD66F10")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x60003B8")]
		[Address(RVA = "0xD66F88", Offset = "0xD66F88", VA = "0xD66F88")]
		protected AnimapperTrack()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public abstract class AnimapperTrack<TEvent> : AnimapperTrack where TEvent : AnimapperEvent, new()
	{
		[Token(Token = "0x200045F")]
		public new abstract class AnimapperTrackRuntime<TTrack> : AnimapperTrackRuntime where TTrack : AnimapperTrack
		{
			[Token(Token = "0x4001CEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private bool isInError;

			[Token(Token = "0x4001CEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected TTrack source;

			[Token(Token = "0x4001CF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected Animapper owner;

			[Token(Token = "0x4001CF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			protected readonly List<AnimapperEvent.AnimapperEventRuntime> events;

			[Token(Token = "0x4001CF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly List<AnimapperEvent.AnimapperEventRuntime> liveEvents;

			[Token(Token = "0x4001CF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Dictionary<AnimapperEvent, AnimapperEvent.AnimapperEventRuntime> eventToRuntime;

			[Token(Token = "0x6001B61")]
			protected AnimapperTrackRuntime(TTrack rendererTrack, Animapper owner)
			{
			}

			[Token(Token = "0x6001B62")]
			public override bool KeepAlive(ref List<AnimationClip> playing)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B63")]
			private void CreateRuntime(AnimapperEvent e)
			{
			}

			[Token(Token = "0x6001B64")]
			public override void EditorForceRefreshData()
			{
			}

			[Token(Token = "0x6001B65")]
			public override void OnAnimationEnded()
			{
			}

			[Token(Token = "0x6001B66")]
			public override void BeginEvent(AnimationClip clip, float weight, int eventIndex)
			{
			}

			[Token(Token = "0x6001B67")]
			public override void UpdateEvents(float realTime, AnimationClip clip, float weight)
			{
			}
		}

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<TEvent> Events;

		[Token(Token = "0x17000057")]
		public override int EventCount
		{
			[Token(Token = "0x60003B9")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60003BA")]
		public override void DeleteEvent(int index)
		{
		}

		[Token(Token = "0x60003BB")]
		public override void AddEvent(AnimapperEvent e)
		{
		}

		[Token(Token = "0x60003BC")]
		public override AnimapperEvent CreateEvent(float time, float duration)
		{
			return null;
		}

		[Token(Token = "0x60003BD")]
		public override AnimapperEvent GetEvent(int index)
		{
			return null;
		}

		[Token(Token = "0x60003BE")]
		protected AnimapperTrack()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class AnimationClipTrack : AnimapperTrack<AnimationClipTrackEvent>
	{
		[Token(Token = "0x2000460")]
		public class AnimationClipTrackRuntime : AnimapperTrackRuntime<AnimationClipTrack>
		{
			[Token(Token = "0x6001B68")]
			[Address(RVA = "0xD67008", Offset = "0xD67008", VA = "0xD67008")]
			public AnimationClipTrackRuntime(AnimationClipTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x40002EC")]
		private const int ParticleSeed = 54453;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<AnimationClipTrackEvent, ParticleSystem[]> _eventParticleMap;

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0xD66F98", Offset = "0xD66F98", VA = "0xD66F98", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0xD67070", Offset = "0xD67070", VA = "0xD67070", Slot = "10")]
		public override void ScrubSampleTime(Animapper target, float seconds)
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0xD67100", Offset = "0xD67100", VA = "0xD67100")]
		public AnimationClipTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E4")]
	public class AnimationClipTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x2000461")]
		public class AnimationClipTrackEventRuntime : AnimapperEventRuntime<AnimationClipTrackEvent>
		{
			[Token(Token = "0x6001B69")]
			[Address(RVA = "0xD67204", Offset = "0xD67204", VA = "0xD67204")]
			public AnimationClipTrackEventRuntime(AnimationClipTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B6A")]
			[Address(RVA = "0xD67478", Offset = "0xD67478", VA = "0xD67478", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001B6B")]
			[Address(RVA = "0xD676B0", Offset = "0xD676B0", VA = "0xD676B0", Slot = "5")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ExposedAnimator _exposedAnimator;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationClip _animationClip;

		[Token(Token = "0x17000058")]
		public ExposedAnimator ExposedAnimator
		{
			[Token(Token = "0x60003C2")]
			[Address(RVA = "0xD67184", Offset = "0xD67184", VA = "0xD67184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000059")]
		public AnimationClip AnimationClip
		{
			[Token(Token = "0x60003C3")]
			[Address(RVA = "0xD6718C", Offset = "0xD6718C", VA = "0xD6718C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xD67194", Offset = "0xD67194", VA = "0xD67194", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xD67474", Offset = "0xD67474", VA = "0xD67474")]
		public AnimationClipTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class AnimationMap : ScriptableObject
	{
		[Token(Token = "0x2000462")]
		public enum UpdateModeType
		{
			[Token(Token = "0x4001CF5")]
			Animator,
			[Token(Token = "0x4001CF6")]
			Manual,
			[Token(Token = "0x4001CF7")]
			Explicit
		}

		[Serializable]
		[Token(Token = "0x2000463")]
		public class EventID : IComparable<EventID>
		{
			[Token(Token = "0x4001CF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimapperTrack track;

			[Token(Token = "0x4001CF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int trackIndex;

			[Token(Token = "0x4001CFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int index;

			[Token(Token = "0x6001B6C")]
			[Address(RVA = "0xD67EA8", Offset = "0xD67EA8", VA = "0xD67EA8", Slot = "4")]
			public int CompareTo(EventID other)
			{
				return default(int);
			}

			[Token(Token = "0x6001B6D")]
			[Address(RVA = "0xD67978", Offset = "0xD67978", VA = "0xD67978")]
			public EventID()
			{
			}
		}

		[Token(Token = "0x2000464")]
		public class MapRuntime
		{
			[Token(Token = "0x4001CFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly AnimationMap sourceMap;

			[Token(Token = "0x4001CFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float currentTime;

			[Token(Token = "0x4001CFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private bool updated;

			[Token(Token = "0x4001CFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly List<AnimapperTrack.AnimapperTrackRuntime> trackRuntimes;

			[Token(Token = "0x1700041A")]
			public AnimationMap SourceMap
			{
				[Token(Token = "0x6001B6E")]
				[Address(RVA = "0xD67F60", Offset = "0xD67F60", VA = "0xD67F60")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B6F")]
			[Address(RVA = "0xD6514C", Offset = "0xD6514C", VA = "0xD6514C")]
			public bool UsesClip(AnimationClip clip)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B70")]
			[Address(RVA = "0xD656B0", Offset = "0xD656B0", VA = "0xD656B0")]
			public MapRuntime(AnimationMap map, Animapper owner)
			{
			}

			[Token(Token = "0x6001B71")]
			[Address(RVA = "0xD64E90", Offset = "0xD64E90", VA = "0xD64E90")]
			public void EditorForceRefreshData()
			{
			}

			[Token(Token = "0x6001B72")]
			[Address(RVA = "0xD6610C", Offset = "0xD6610C", VA = "0xD6610C")]
			public bool KeepAlive(ref List<AnimationClip> playing)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0xD661C0", Offset = "0xD661C0", VA = "0xD661C0")]
			public bool CompleteUpdate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B74")]
			[Address(RVA = "0xD643DC", Offset = "0xD643DC", VA = "0xD643DC")]
			public void ForceEnd()
			{
			}

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0xD657E8", Offset = "0xD657E8", VA = "0xD657E8")]
			public void UpdateNormalizedTime(float normalizedTime, float weight)
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0xD67F68", Offset = "0xD67F68", VA = "0xD67F68")]
			private void OnAnimationEnded()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD24", Offset = "0x8AAD24")]
		private sealed class <>c
		{
			[Token(Token = "0x4001CFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<EventID> <>9__6_0;

			[Token(Token = "0x6001B78")]
			[Address(RVA = "0xD67E20", Offset = "0xD67E20", VA = "0xD67E20")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0xD67E28", Offset = "0xD67E28", VA = "0xD67E28")]
			internal int <OnValidate>b__6_0(EventID a, EventID b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UpdateModeType UpdateMode;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationClip Clip;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AnimapperTrack> Tracks;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<EventID> SortedEvents;

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xD67718", Offset = "0xD67718", VA = "0xD67718")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xD67980", Offset = "0xD67980", VA = "0xD67980")]
		public void Validate(ref List<UnityEngine.Object> assets)
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xD67D08", Offset = "0xD67D08", VA = "0xD67D08")]
		public AnimationMap()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1D08", Offset = "0x8A1D08")]
	public class AnimationMapData : ScriptableObject
	{
		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AE71C", Offset = "0x8AE71C")]
		[SerializeField]
		protected List<AnimationMap> maps;

		[Token(Token = "0x1700005A")]
		public virtual List<AnimationMap> Maps
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0xD68004", Offset = "0xD68004", VA = "0xD68004", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0xD6800C", Offset = "0xD6800C", VA = "0xD6800C", Slot = "5")]
		public virtual void AddMap(AnimationMap newMap)
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0xD68074", Offset = "0xD68074", VA = "0xD68074", Slot = "6")]
		public virtual void RemoveMap(AnimationMap map)
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0xD680DC", Offset = "0xD680DC", VA = "0xD680DC")]
		public AnimationMap GetMap(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0xD681E0", Offset = "0xD681E0", VA = "0xD681E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE7D0", Offset = "0x8DE7D0")]
		public void Clean()
		{
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0xD681E4", Offset = "0xD681E4", VA = "0xD681E4")]
		public AnimationMapData()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1D4C", Offset = "0x8A1D4C")]
	public class AnimationMapDataOverride : AnimationMapData
	{
		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE768", Offset = "0x8AE768")]
		[SerializeField]
		private AnimationMapData sourceData;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE7B4", Offset = "0x8AE7B4")]
		[SerializeField]
		private List<AnimationMap> compositeMaps;

		[Token(Token = "0x1700005B")]
		public AnimationMapData Source
		{
			[Token(Token = "0x60003CF")]
			[Address(RVA = "0xD68260", Offset = "0xD68260", VA = "0xD68260")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public override List<AnimationMap> Maps
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xD6855C", Offset = "0xD6855C", VA = "0xD6855C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xD68268", Offset = "0xD68268", VA = "0xD68268", Slot = "5")]
		public override void AddMap(AnimationMap newMap)
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xD6828C", Offset = "0xD6828C", VA = "0xD6828C")]
		private void RebuildMapsList()
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xD6858C", Offset = "0xD6858C", VA = "0xD6858C", Slot = "6")]
		public override void RemoveMap(AnimationMap map)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0xD685B0", Offset = "0xD685B0", VA = "0xD685B0")]
		public bool HasOverride(AnimationClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xD68690", Offset = "0xD68690", VA = "0xD68690")]
		public AnimationMapDataOverride()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public class CameraShakeTrack : AnimapperTrack<CameraShakeTrackEvent>
	{
		[Token(Token = "0x2000466")]
		public class CameraShakeTrackRuntime : AnimapperTrackRuntime<CameraShakeTrack>
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0xD69868", Offset = "0xD69868", VA = "0xD69868")]
			public CameraShakeTrackRuntime(CameraShakeTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xD697F8", Offset = "0xD697F8", VA = "0xD697F8", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xD698D0", Offset = "0xD698D0", VA = "0xD698D0")]
		public CameraShakeTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000E9")]
	public class CameraShakeTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x2000467")]
		public class CameraShakeTrackEventRuntime : AnimapperEventRuntime<CameraShakeTrackEvent>
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0xD69998", Offset = "0xD69998", VA = "0xD69998")]
			public CameraShakeTrackEventRuntime(CameraShakeTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0xD69A04", Offset = "0xD69A04", VA = "0xD69A04", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CameraShakeRequestAsset _cameraShakeRequestAsset;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AE810", Offset = "0x8AE810")]
		[SerializeField]
		private ExposedTransformPoint _shakeOrigin;

		[Token(Token = "0x1700005D")]
		public CameraShakeRequestAsset CameraShakeRequestAsset
		{
			[Token(Token = "0x60003D8")]
			[Address(RVA = "0xD69920", Offset = "0xD69920", VA = "0xD69920")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xD69928", Offset = "0xD69928", VA = "0xD69928", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xD69A00", Offset = "0xD69A00", VA = "0xD69A00")]
		public CameraShakeTrackEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EA")]
	public class DebugLogEvent : AnimapperEvent
	{
		[Token(Token = "0x2000468")]
		public class DebugLogEventRuntime : AnimapperEventRuntime<DebugLogEvent>
		{
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0xD69B2C", Offset = "0xD69B2C", VA = "0xD69B2C")]
			public DebugLogEventRuntime(DebugLogEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0xD69B98", Offset = "0xD69B98", VA = "0xD69B98", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0xD69C2C", Offset = "0xD69C2C", VA = "0xD69C2C", Slot = "6")]
			public override void End()
			{
			}
		}

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string message;

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xD69ABC", Offset = "0xD69ABC", VA = "0xD69ABC", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xD69B94", Offset = "0xD69B94", VA = "0xD69B94")]
		public DebugLogEvent()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	public class DebugLogTrack : AnimapperTrack<DebugLogEvent>
	{
		[Token(Token = "0x2000469")]
		public class DebugLogTrackRuntime : AnimapperTrackRuntime<DebugLogTrack>
		{
			[Token(Token = "0x6001B80")]
			[Address(RVA = "0xD69D30", Offset = "0xD69D30", VA = "0xD69D30")]
			public DebugLogTrackRuntime(DebugLogTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xD69CC0", Offset = "0xD69CC0", VA = "0xD69CC0", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD69D98", Offset = "0xD69D98", VA = "0xD69D98")]
		public DebugLogTrack()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class BoolVariableTrack : AnimapperTrack<BoolVariableTrackEvent>
	{
		[Token(Token = "0x200046A")]
		public class BoolVariableTrackRuntime : AnimapperTrackRuntime<BoolVariableTrack>
		{
			[Token(Token = "0x6001B81")]
			[Address(RVA = "0xD69570", Offset = "0xD69570", VA = "0xD69570")]
			public BoolVariableTrackRuntime(BoolVariableTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xD69500", Offset = "0xD69500", VA = "0xD69500", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xD695D8", Offset = "0xD695D8", VA = "0xD695D8")]
		public BoolVariableTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000ED")]
	public class BoolVariableTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x200046B")]
		public class BoolVariableTrackEventRuntime : AnimapperEventRuntime<BoolVariableTrackEvent>
		{
			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xD69698", Offset = "0xD69698", VA = "0xD69698")]
			public BoolVariableTrackEventRuntime(BoolVariableTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0xD69704", Offset = "0xD69704", VA = "0xD69704", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolVariable variable;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool value;

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0xD69628", Offset = "0xD69628", VA = "0xD69628", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0xD69700", Offset = "0xD69700", VA = "0xD69700")]
		public BoolVariableTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class GlobalEventTrack : AnimapperTrack<GlobalEventTrackEvent>
	{
		[Token(Token = "0x200046C")]
		public class GlobalEventTrackRuntime : AnimapperTrackRuntime<GlobalEventTrack>
		{
			[Token(Token = "0x6001B84")]
			[Address(RVA = "0xD6B794", Offset = "0xD6B794", VA = "0xD6B794")]
			public GlobalEventTrackRuntime(GlobalEventTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x60003E3")]
		[Address(RVA = "0xD6B724", Offset = "0xD6B724", VA = "0xD6B724", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xD6B7FC", Offset = "0xD6B7FC", VA = "0xD6B7FC")]
		public GlobalEventTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000EF")]
	public class GlobalEventTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x200046D")]
		public class GlobalEventTrackEventRuntime : AnimapperEventRuntime<GlobalEventTrackEvent>
		{
			[Token(Token = "0x6001B85")]
			[Address(RVA = "0xD6B8BC", Offset = "0xD6B8BC", VA = "0xD6B8BC")]
			public GlobalEventTrackEventRuntime(GlobalEventTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0xD6B928", Offset = "0xD6B928", VA = "0xD6B928", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _globalEvent;

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xD6B84C", Offset = "0xD6B84C", VA = "0xD6B84C", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xD6B924", Offset = "0xD6B924", VA = "0xD6B924")]
		public GlobalEventTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public interface IRequiredAnimapperUpdate
	{
		[Token(Token = "0x60003E7")]
		void ForceUpdate();
	}
	[Token(Token = "0x20000F1")]
	public class EnableRendererTrack : AnimapperTrack<EnableRendererTrackEvent>
	{
		[Token(Token = "0x200046E")]
		public class EnableRendererTrackRuntime : AnimapperTrackRuntime<EnableRendererTrack>
		{
			[Token(Token = "0x6001B87")]
			[Address(RVA = "0xD6B154", Offset = "0xD6B154", VA = "0xD6B154")]
			public EnableRendererTrackRuntime(EnableRendererTrack rendererTrack, Animapper owner)
			{
			}
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0xD6B0E4", Offset = "0xD6B0E4", VA = "0xD6B0E4", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0xD6B1BC", Offset = "0xD6B1BC", VA = "0xD6B1BC")]
		public EnableRendererTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F2")]
	public class EnableRendererTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x200046F")]
		private class EnableRendererEventRuntime : AnimapperEventRuntime<EnableRendererTrackEvent>
		{
			[Token(Token = "0x6001B88")]
			[Address(RVA = "0xD6B514", Offset = "0xD6B514", VA = "0xD6B514")]
			public EnableRendererEventRuntime(EnableRendererTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0xD6B588", Offset = "0xD6B588", VA = "0xD6B588", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		internal ExposedRenderer[] targetRenderers;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		internal bool setEnabled;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0xD6B20C", Offset = "0xD6B20C", VA = "0xD6B20C", Slot = "6")]
		public override void ValidateFor(Animapper animapper)
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0xD6B4A4", Offset = "0xD6B4A4", VA = "0xD6B4A4", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xD6B57C", Offset = "0xD6B57C", VA = "0xD6B57C")]
		public EnableRendererTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class MaterialColorTrack : AnimapperTrack<MaterialColorTrackEvent>
	{
		[Token(Token = "0x2000470")]
		public class MaterialColorTrackRuntime : AnimapperTrackRuntime<MaterialColorTrack>
		{
			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0xD6BA80", Offset = "0xD6BA80", VA = "0xD6BA80")]
			public MaterialColorTrackRuntime(MaterialColorTrack track, Animapper owner)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock[] materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] originalSources;

		[NonSerialized]
		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<MaterialColorTrackEvent> activeEvents;

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xD6BA10", Offset = "0xD6BA10", VA = "0xD6BA10", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0xD6BAE8", Offset = "0xD6BAE8", VA = "0xD6BAE8")]
		private void RevertMaterial(Animapper target, int eventIndex)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0xD6BCE4", Offset = "0xD6BCE4", VA = "0xD6BCE4", Slot = "11")]
		public override void StopSampling(Animapper target)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xD6BF10", Offset = "0xD6BF10", VA = "0xD6BF10", Slot = "10")]
		public override void ScrubSampleTime(Animapper target, float seconds)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xD6C4DC", Offset = "0xD6C4DC", VA = "0xD6C4DC")]
		public MaterialColorTrack()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class MaterialTrack : AnimapperTrack<MaterialTrackEvent>
	{
		[Token(Token = "0x2000471")]
		private class MaterialTrackRuntime : AnimapperTrackRuntime<MaterialTrack>
		{
			[Token(Token = "0x6001B8B")]
			[Address(RVA = "0xD6CD5C", Offset = "0xD6CD5C", VA = "0xD6CD5C")]
			public MaterialTrackRuntime(MaterialTrack track, Animapper owner)
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock[] materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material[] originalSources;

		[NonSerialized]
		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<MaterialTrackEvent> activeEvents;

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xD6CCEC", Offset = "0xD6CCEC", VA = "0xD6CCEC", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xD6CDC4", Offset = "0xD6CDC4", VA = "0xD6CDC4", Slot = "11")]
		public override void StopSampling(Animapper target)
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xD6D000", Offset = "0xD6D000", VA = "0xD6D000")]
		private void RevertMaterial(Animapper target, int eventIndex)
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xD6D1FC", Offset = "0xD6D1FC", VA = "0xD6D1FC", Slot = "10")]
		public override void ScrubSampleTime(Animapper target, float seconds)
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0xD6D724", Offset = "0xD6D724", VA = "0xD6D724")]
		public MaterialTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F5")]
	public class MaterialColorTrackEvent : AnimapperEvent
	{
		[Serializable]
		[Token(Token = "0x2000472")]
		public class ColorKey
		{
			[Token(Token = "0x4001D01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DC464", Offset = "0x8DC464")]
			public float Time;

			[Token(Token = "0x4001D02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8DC47C", Offset = "0x8DC47C")]
			public Color Color;

			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0xD6C978", Offset = "0xD6C978", VA = "0xD6C978")]
			public ColorKey()
			{
			}
		}

		[Token(Token = "0x2000473")]
		private class MaterialColorTrackEventRuntime : AnimapperEventRuntime<MaterialColorTrackEvent>
		{
			[Token(Token = "0x4001D03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Material target;

			[Token(Token = "0x4001D04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private MaterialPropertyBlock materialPropertyBlock;

			[Token(Token = "0x4001D05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material originalSource;

			[Token(Token = "0x4001D06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int propertyID;

			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0xD6C710", Offset = "0xD6C710", VA = "0xD6C710")]
			public MaterialColorTrackEventRuntime(MaterialColorTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0xD6C980", Offset = "0xD6C980", VA = "0xD6C980", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xD6CB04", Offset = "0xD6CB04", VA = "0xD6CB04", Slot = "5")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xD6CC10", Offset = "0xD6CC10", VA = "0xD6CC10", Slot = "6")]
			public override void End()
			{
			}
		}

		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		internal bool revertOnAnimationEnd;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		internal ExposedRenderer targetRenderer;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		internal string propertyName;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8AE8EC", Offset = "0x8AE8EC")]
		[SerializeField]
		internal ColorKey[] colorKeys;

		[Token(Token = "0x1700005E")]
		public ExposedRenderer TargetRenderer
		{
			[Token(Token = "0x60003F7")]
			[Address(RVA = "0xD6C5A8", Offset = "0xD6C5A8", VA = "0xD6C5A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005F")]
		public string PropertyName
		{
			[Token(Token = "0x60003F8")]
			[Address(RVA = "0xD6C5B0", Offset = "0xD6C5B0", VA = "0xD6C5B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000060")]
		public ColorKey[] ColorKeys
		{
			[Token(Token = "0x60003F9")]
			[Address(RVA = "0xD6C5B8", Offset = "0xD6C5B8", VA = "0xD6C5B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0xD6C5C0", Offset = "0xD6C5C0", VA = "0xD6C5C0", Slot = "6")]
		public override void ValidateFor(Animapper animapper)
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0xD6C6A0", Offset = "0xD6C6A0", VA = "0xD6C6A0", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD6C794", Offset = "0xD6C794", VA = "0xD6C794")]
		private int GetTargetKey(float normalizedTime)
		{
			return default(int);
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xD6C7F0", Offset = "0xD6C7F0", VA = "0xD6C7F0")]
		private float GetLerpPerTarget(int from, int to, float normalizedTgt)
		{
			return default(float);
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0xD6C3F8", Offset = "0xD6C3F8", VA = "0xD6C3F8")]
		public Color GetColor(float normalizedTime)
		{
			return default(Color);
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0xD6C8D0", Offset = "0xD6C8D0", VA = "0xD6C8D0", Slot = "8")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0xD6C974", Offset = "0xD6C974", VA = "0xD6C974")]
		public MaterialColorTrackEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F6")]
	public class MaterialTrackEvent : AnimapperEvent
	{
		[Serializable]
		[Token(Token = "0x2000474")]
		public class PropertyAnimation
		{
			[Token(Token = "0x4001D07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string propertyName;

			[Token(Token = "0x4001D08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private AnimationCurve floatCurve;

			[NonSerialized]
			[Token(Token = "0x4001D09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int propertyID;

			[NonSerialized]
			[Token(Token = "0x4001D0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private bool cached;

			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xD6DD18", Offset = "0xD6DD18", VA = "0xD6DD18")]
			public void Apply(MaterialPropertyBlock block, float curveT)
			{
			}

			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xD6DDA0", Offset = "0xD6DDA0", VA = "0xD6DDA0")]
			public PropertyAnimation()
			{
			}
		}

		[Token(Token = "0x2000475")]
		private class MaterialTrackEventRuntime : AnimapperEventRuntime<MaterialTrackEvent>
		{
			[Token(Token = "0x4001D0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Material target;

			[Token(Token = "0x4001D0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private MaterialPropertyBlock materialPropertyBlock;

			[Token(Token = "0x4001D0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material originalSource;

			[Token(Token = "0x6001B93")]
			[Address(RVA = "0xD6D948", Offset = "0xD6D948", VA = "0xD6D948")]
			public MaterialTrackEventRuntime(MaterialTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B94")]
			[Address(RVA = "0xD6DA18", Offset = "0xD6DA18", VA = "0xD6DA18", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001B95")]
			[Address(RVA = "0xD6DB70", Offset = "0xD6DB70", VA = "0xD6DB70", Slot = "5")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B96")]
			[Address(RVA = "0xD6DC3C", Offset = "0xD6DC3C", VA = "0xD6DC3C", Slot = "6")]
			public override void End()
			{
			}
		}

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		internal bool revertOnAnimationEnd;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader swapShader;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public ExposedRenderer targetRenderer;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public PropertyAnimation[] PropertyAnimations;

		[Token(Token = "0x17000061")]
		public ExposedRenderer TargetRenderer
		{
			[Token(Token = "0x6000401")]
			[Address(RVA = "0xD6D7F0", Offset = "0xD6D7F0", VA = "0xD6D7F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0xD6D7F8", Offset = "0xD6D7F8", VA = "0xD6D7F8", Slot = "6")]
		public override void ValidateFor(Animapper animapper)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0xD6D8D8", Offset = "0xD6D8D8", VA = "0xD6D8D8", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0xD6D9B0", Offset = "0xD6D9B0", VA = "0xD6D9B0")]
		public MaterialTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class ScreenFadeTrack : AnimapperTrack<ScreenFadeTrackEvent>
	{
		[Token(Token = "0x2000476")]
		public class ScreenFadeTrackRuntime : AnimapperTrackRuntime<ScreenFadeTrack>
		{
			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x12F46E0", Offset = "0x12F46E0", VA = "0x12F46E0")]
			public ScreenFadeTrackRuntime(ScreenFadeTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0xD6DDA8", Offset = "0xD6DDA8", VA = "0xD6DDA8", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x6000406")]
		[Address(RVA = "0xD6DE1C", Offset = "0xD6DE1C", VA = "0xD6DE1C")]
		public ScreenFadeTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F8")]
	public class ScreenFadeTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x2000477")]
		public class ScreenFadeTrackEventRuntime : AnimapperEventRuntime<ScreenFadeTrackEvent>
		{
			[Token(Token = "0x6001B98")]
			[Address(RVA = "0x12F47C0", Offset = "0x12F47C0", VA = "0x12F47C0")]
			public ScreenFadeTrackEventRuntime(ScreenFadeTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x12F4830", Offset = "0x12F4830", VA = "0x12F4830", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScreenFadeConfig _screenFadeRequestAsset;

		[Token(Token = "0x17000062")]
		public ScreenFadeConfig ScreenFadeRequestAsset
		{
			[Token(Token = "0x6000407")]
			[Address(RVA = "0x12F4748", Offset = "0x12F4748", VA = "0x12F4748")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x12F4750", Offset = "0x12F4750", VA = "0x12F4750", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x12F4828", Offset = "0x12F4828", VA = "0x12F4828")]
		public ScreenFadeTrackEvent()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class ScreenFlashTrack : AnimapperTrack<ScreenFlashTrackEvent>
	{
		[Token(Token = "0x2000478")]
		public class ScreenFlashTrackRuntime : AnimapperTrackRuntime<ScreenFlashTrack>
		{
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x12F48C8", Offset = "0x12F48C8", VA = "0x12F48C8")]
			public ScreenFlashTrackRuntime(ScreenFlashTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x12F4858", Offset = "0x12F4858", VA = "0x12F4858", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x12F4930", Offset = "0x12F4930", VA = "0x12F4930")]
		public ScreenFlashTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FA")]
	public class ScreenFlashTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x2000479")]
		public class ScreenFlashTrackEventRuntime : AnimapperEventRuntime<ScreenFlashTrackEvent>
		{
			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x12F49F8", Offset = "0x12F49F8", VA = "0x12F49F8")]
			public ScreenFlashTrackEventRuntime(ScreenFlashTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B9C")]
			[Address(RVA = "0x12F4A68", Offset = "0x12F4A68", VA = "0x12F4A68", Slot = "4")]
			public override void Begin()
			{
			}
		}

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScreenFlashRequestAsset _screenFlashRequestAsset;

		[Token(Token = "0x17000063")]
		public ScreenFlashRequestAsset ScreenFlashRequestAsset
		{
			[Token(Token = "0x600040C")]
			[Address(RVA = "0x12F4980", Offset = "0x12F4980", VA = "0x12F4980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x12F4988", Offset = "0x12F4988", VA = "0x12F4988", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x12F4A60", Offset = "0x12F4A60", VA = "0x12F4A60")]
		public ScreenFlashTrackEvent()
		{
		}
	}
}
namespace SG.ProtoFramework.AnimationMapping.Effects
{
	[Token(Token = "0x20000FB")]
	public class VisualEffectTrack : AnimapperTrack<VisualEffectTrackEvent>
	{
		[Token(Token = "0x200047A")]
		private class VisualEffectTrackRuntime : AnimapperTrackRuntime<VisualEffectTrack>
		{
			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0xD6AA20", Offset = "0xD6AA20", VA = "0xD6AA20")]
			public VisualEffectTrackRuntime(VisualEffectTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x400030F")]
		private const int PARTICLE_SEED = 5016;

		[NonSerialized]
		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private VisualsDatabase _visualsDatabase;

		[NonSerialized]
		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem[] _editorParticleSystems;

		[Token(Token = "0x600040F")]
		[Address(RVA = "0xD69DE8", Offset = "0xD69DE8", VA = "0xD69DE8", Slot = "11")]
		public override void StopSampling(Animapper target)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0xD69F4C", Offset = "0xD69F4C", VA = "0xD69F4C", Slot = "10")]
		public override void ScrubSampleTime(Animapper target, float seconds)
		{
		}

		[Token(Token = "0x6000411")]
		[Address(RVA = "0xD6A6F8", Offset = "0xD6A6F8", VA = "0xD6A6F8")]
		private ParticleSystem TryGetParticleSystem(VisualKeyData key)
		{
			return null;
		}

		[Token(Token = "0x6000412")]
		[Address(RVA = "0xD6A9B0", Offset = "0xD6A9B0", VA = "0xD6A9B0", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x6000413")]
		[Address(RVA = "0xD6AA88", Offset = "0xD6AA88", VA = "0xD6AA88")]
		public VisualEffectTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FC")]
	public class VisualEffectTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x200047B")]
		public enum ParticleSyncMode
		{
			[Token(Token = "0x4001D0F")]
			FireAndForget,
			[Token(Token = "0x4001D10")]
			SyncAndEndWithAnimation,
			[Token(Token = "0x4001D11")]
			DestroyOnEnd,
			[Token(Token = "0x4001D12")]
			StopEmitterOnEnd
		}

		[Token(Token = "0x200047C")]
		public class VisualEffectTrackEventRuntime : AnimapperEventRuntime<VisualEffectTrackEvent>
		{
			[NonSerialized]
			[Token(Token = "0x4001D13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ParticleEffectRuntime _currentEffect;

			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xD6AB7C", Offset = "0xD6AB7C", VA = "0xD6AB7C")]
			public VisualEffectTrackEventRuntime(VisualEffectTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xD6ACAC", Offset = "0xD6ACAC", VA = "0xD6ACAC")]
			private void OnRequestPlayed(EffectRuntime effectRuntime)
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xD6AD44", Offset = "0xD6AD44", VA = "0xD6AD44", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0xD6AECC", Offset = "0xD6AECC", VA = "0xD6AECC", Slot = "5")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA2")]
			[Address(RVA = "0xD6AFF4", Offset = "0xD6AFF4", VA = "0xD6AFF4", Slot = "6")]
			public override void End()
			{
			}
		}

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VisualKeyData _visualKeyData;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ExposedTransformPoint _spawnPoint;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public bool _followPosition;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		public bool _followRotation;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private ParticleSyncMode _syncMode;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _stopOnEventDuration;

		[Token(Token = "0x17000064")]
		public VisualKeyData VisualKeyData
		{
			[Token(Token = "0x6000414")]
			[Address(RVA = "0xD6AAFC", Offset = "0xD6AAFC", VA = "0xD6AAFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		public ExposedTransformPoint SpawnPoint
		{
			[Token(Token = "0x6000415")]
			[Address(RVA = "0xD6AB04", Offset = "0xD6AB04", VA = "0xD6AB04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000416")]
		[Address(RVA = "0xD6AB0C", Offset = "0xD6AB0C", VA = "0xD6AB0C", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x6000417")]
		[Address(RVA = "0xD6ABE4", Offset = "0xD6ABE4", VA = "0xD6ABE4", Slot = "6")]
		public override void ValidateFor(Animapper animapper)
		{
		}

		[Token(Token = "0x6000418")]
		[Address(RVA = "0xD6ACA8", Offset = "0xD6ACA8", VA = "0xD6ACA8")]
		public VisualEffectTrackEvent()
		{
		}
	}
}
namespace SG.ProtoFramework.AnimationMapping.Audio
{
	[Token(Token = "0x20000FD")]
	public class AudioEffectTrack : AnimapperTrack<AudioEffectTrackEvent>
	{
		[Token(Token = "0x200047D")]
		private class AudioEffectTrackRuntime : AnimapperTrackRuntime<AudioEffectTrack>
		{
			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0xD68704", Offset = "0xD68704", VA = "0xD68704")]
			public AudioEffectTrackRuntime(AudioEffectTrack track, Animapper owner)
			{
			}
		}

		[Token(Token = "0x6000419")]
		[Address(RVA = "0xD68694", Offset = "0xD68694", VA = "0xD68694", Slot = "6")]
		public override AnimapperTrackRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x600041A")]
		[Address(RVA = "0xD6876C", Offset = "0xD6876C", VA = "0xD6876C")]
		public AudioEffectTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000FE")]
	public class AudioEffectTrackEvent : AnimapperEvent
	{
		[Token(Token = "0x200047E")]
		public enum AudioEventAction
		{
			[Token(Token = "0x4001D15")]
			Play,
			[Token(Token = "0x4001D16")]
			Stop,
			[Token(Token = "0x4001D17")]
			PlayOneShot
		}

		[Token(Token = "0x200047F")]
		private class AudioEffectTrackEventRuntime : AnimapperEventRuntime<AudioEffectTrackEvent>
		{
			[Token(Token = "0x4001D18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			private bool _requestPending;

			[Token(Token = "0x4001D19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AudioRuntime _currentAudioRuntime;

			[Token(Token = "0x4001D1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Transform _targetTransform;

			[Token(Token = "0x4001D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool _inError;

			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xD68844", Offset = "0xD68844", VA = "0xD68844")]
			public AudioEffectTrackEventRuntime(AudioEffectTrackEvent source, Animapper owner)
			{
			}

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0xD688BC", Offset = "0xD688BC", VA = "0xD688BC")]
			private void OnRequestCancel()
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xD688CC", Offset = "0xD688CC", VA = "0xD688CC")]
			private void OnRequestPlay(EffectRuntime audioRuntime)
			{
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xD68968", Offset = "0xD68968", VA = "0xD68968", Slot = "4")]
			public override void Begin()
			{
			}

			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xD691BC", Offset = "0xD691BC", VA = "0xD691BC", Slot = "5")]
			public override bool Update(float animationTime, float weight)
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xD6939C", Offset = "0xD6939C", VA = "0xD6939C", Slot = "6")]
			public override void End()
			{
			}

			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xD690C4", Offset = "0xD690C4", VA = "0xD690C4")]
			private void StopAudio(AudioKeyData eventKey, bool clearEvent = true)
			{
			}
		}

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ExposedTransformPoint _spawnPoint;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData _audioKeyData;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AE9F4", Offset = "0x8AE9F4")]
		[SerializeField]
		private AudioKeyData _interruptAudioKeyData;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _playIndefinitely;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private AudioEventAction _eventAction;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioDatabase _database;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioDatabaseEntry _entry;

		[Token(Token = "0x17000066")]
		public AudioKeyData AudioKeyData
		{
			[Token(Token = "0x600041B")]
			[Address(RVA = "0xD687BC", Offset = "0xD687BC", VA = "0xD687BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000067")]
		public bool PlayIndefinitely
		{
			[Token(Token = "0x600041C")]
			[Address(RVA = "0xD687C4", Offset = "0xD687C4", VA = "0xD687C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		public AudioEventAction EventAction
		{
			[Token(Token = "0x600041D")]
			[Address(RVA = "0xD687CC", Offset = "0xD687CC", VA = "0xD687CC")]
			get
			{
				return default(AudioEventAction);
			}
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0xD687D4", Offset = "0xD687D4", VA = "0xD687D4", Slot = "7")]
		public override AnimapperEventRuntime GetRuntime(Animapper owner)
		{
			return null;
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0xD688AC", Offset = "0xD688AC", VA = "0xD688AC")]
		public void GetAllClips(ref List<AudioClip> clips)
		{
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0xD688B0", Offset = "0xD688B0", VA = "0xD688B0")]
		public bool IsLooping()
		{
			return default(bool);
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0xD688B8", Offset = "0xD688B8", VA = "0xD688B8")]
		public AudioEffectTrackEvent()
		{
		}
	}
}
namespace SG.ProtoFramework.XR
{
	[Token(Token = "0x20000FF")]
	public class ScreenshotTaker : MonoBehaviour
	{
		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD34", Offset = "0x8AAD34")]
		private sealed class <CaptureRoutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotTaker <>4__this;

			[Token(Token = "0x1700041B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BAE")]
				[Address(RVA = "0x12FDBD4", Offset = "0x12FDBD4", VA = "0x12FDBD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB0")]
				[Address(RVA = "0x12FDC3C", Offset = "0x12FDC3C", VA = "0x12FDC3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x12FD850", Offset = "0x12FD850", VA = "0x12FD850")]
			[DebuggerHidden]
			public <CaptureRoutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x12FD8E4", Offset = "0x12FD8E4", VA = "0x12FD8E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x12FD8E8", Offset = "0x12FD8E8", VA = "0x12FD8E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x12FDBDC", Offset = "0x12FDBDC", VA = "0x12FDBDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEA60", Offset = "0x8AEA60")]
		[SerializeField]
		private BinaryInputAction captureAction;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEAAC", Offset = "0x8AEAAC")]
		[SerializeField]
		private float longPressDuration;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEAF8", Offset = "0x8AEAF8")]
		[SerializeField]
		private ScreenFlashRequestGlobalEvent flashRequestEvent;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEB44", Offset = "0x8AEB44")]
		[SerializeField]
		private ScreenFlashRequest flashRequestData;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEB90", Offset = "0x8AEB90")]
		[SerializeField]
		private bool convertToGammaSpace;

		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEBDC", Offset = "0x8AEBDC")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEC28", Offset = "0x8AEC28")]
		[SerializeField]
		private SaveManager saveManager;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEC74", Offset = "0x8AEC74")]
		[SerializeField]
		private string filePrefix;

		[NonSerialized]
		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool capturing;

		[NonSerialized]
		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool capturedThisClick;

		[NonSerialized]
		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Scene currentSaveScene;

		[NonSerialized]
		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private string exportGroupName;

		[NonSerialized]
		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int savesThisGroup;

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x12FD338", Offset = "0x12FD338", VA = "0x12FD338")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x12FD3C4", Offset = "0x12FD3C4", VA = "0x12FD3C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x12FD450", Offset = "0x12FD450", VA = "0x12FD450")]
		private void Update()
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x12FD4D4", Offset = "0x12FD4D4", VA = "0x12FD4D4")]
		private void CreateLogGroup()
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x12FD54C", Offset = "0x12FD54C", VA = "0x12FD54C")]
		private string GetNewLogGroupID()
		{
			return null;
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x12FD76C", Offset = "0x12FD76C", VA = "0x12FD76C")]
		private void StartCapture(bool pressed)
		{
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x12FD514", Offset = "0x12FD514", VA = "0x12FD514")]
		public void Capture()
		{
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x12FD7D4", Offset = "0x12FD7D4", VA = "0x12FD7D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE808", Offset = "0x8DE808")]
		private IEnumerator CaptureRoutine()
		{
			return null;
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x12FD87C", Offset = "0x12FD87C", VA = "0x12FD87C")]
		public ScreenshotTaker()
		{
		}
	}
}
namespace SG.ProtoFramework.Localization
{
	[Token(Token = "0x2000100")]
	public class LanguageButton : Button
	{
		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private LanguageKeyVariable currentLangVar;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Text _langText;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Image _curLangIcon;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private LanguageKey _langKey;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private LanguageButtonLoader _parent;

		[Token(Token = "0x600042B")]
		[Address(RVA = "0x12FA2C0", Offset = "0x12FA2C0", VA = "0x12FA2C0", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x12FA3A0", Offset = "0x12FA3A0", VA = "0x12FA3A0")]
		public void Configure(LanguageKey langKey, LanguageButtonLoader loader)
		{
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x12FA3E4", Offset = "0x12FA3E4", VA = "0x12FA3E4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x12FA500", Offset = "0x12FA500", VA = "0x12FA500")]
		public LanguageButton()
		{
		}
	}
	[Token(Token = "0x2000101")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A1D90", Offset = "0x8A1D90")]
	public class LanguageButtonLoader : MonoBehaviour
	{
		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationManager _manager;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LanguageButton buttonPrefab;

		[NonSerialized]
		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<LanguageButton> _langButtons;

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x12FA508", Offset = "0x12FA508", VA = "0x12FA508")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x12FA6E4", Offset = "0x12FA6E4", VA = "0x12FA6E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x12FA714", Offset = "0x12FA714", VA = "0x12FA714")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x12FA30C", Offset = "0x12FA30C", VA = "0x12FA30C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x12FA9D4", Offset = "0x12FA9D4", VA = "0x12FA9D4")]
		public LanguageButtonLoader()
		{
		}
	}
	[Token(Token = "0x2000102")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1DF4", Offset = "0x8A1DF4")]
	public class LanguageKey : ScriptableObject
	{
		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AED20", Offset = "0x8AED20")]
		public string CachedGUID;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SystemLanguage _systemLanguage;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string nativeLanguageName;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TMP_FontAsset[] fonts;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material[] materialPresets;

		[Token(Token = "0x4000339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TMP_FontAsset subtitleFont;

		[Token(Token = "0x17000069")]
		public SystemLanguage SystemLanguage
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0x12FAA50", Offset = "0x12FAA50", VA = "0x12FAA50")]
			get
			{
				return default(SystemLanguage);
			}
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x12FAA58", Offset = "0x12FAA58", VA = "0x12FAA58")]
		public LanguageKey()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1E54", Offset = "0x8A1E54")]
	public class LocalizationManager : CustomPlayerLoop
	{
		[Serializable]
		[Token(Token = "0x2000481")]
		private struct LanguageToDatabase
		{
			[Token(Token = "0x4001D1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LanguageKey LanguageKey;

			[Token(Token = "0x4001D20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SG.ProtoFramework.Resource.ResourceDatabase Database;
		}

		[Serializable]
		[Token(Token = "0x2000482")]
		private struct LanguageToBool
		{
			[Token(Token = "0x4001D21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LanguageKey LanguageKey;

			[Token(Token = "0x4001D22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BoolVariable LanguageVariable;
		}

		[Token(Token = "0x400033A")]
		private const string ERROR_DATABASE_NOT_LOADED = "Error! Database not loaded yet.";

		[Token(Token = "0x400033B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AED44", Offset = "0x8AED44")]
		[SerializeField]
		private ResourceController _resourceController;

		[Token(Token = "0x400033C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LanguageToDatabase[] _languageToDatabases;

		[Token(Token = "0x400033D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LanguageToBool[] _languageToBools;

		[Token(Token = "0x400033E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ResourceKey _textDatabaseKey;

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEDC0", Offset = "0x8AEDC0")]
		[SerializeField]
		private LanguageKeyVariable _currentLanguage;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEE0C", Offset = "0x8AEE0C")]
		private bool swapTextMaterials;

		[Token(Token = "0x4000341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GlobalEvent onLanguageChange;

		[NonSerialized]
		[Token(Token = "0x4000342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private TextDatabase _currentTextDatabase;

		[NonSerialized]
		[Token(Token = "0x4000343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _loadedTextDatabase;

		[NonSerialized]
		[Token(Token = "0x4000344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string _loadedLanguageKeyGUID;

		[Token(Token = "0x1700006A")]
		public LanguageKey CurrentLanguage
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0x12FAAE8", Offset = "0x12FAAE8", VA = "0x12FAAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		public bool IsManagerReady
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x12FABB0", Offset = "0x12FABB0", VA = "0x12FABB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000003")]
		public event Action OnLanguageChanged
		{
			[Token(Token = "0x6000437")]
			[Address(RVA = "0x12F5DE8", Offset = "0x12F5DE8", VA = "0x12F5DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE86C", Offset = "0x8DE86C")]
			add
			{
			}
			[Token(Token = "0x6000438")]
			[Address(RVA = "0x12FAB0C", Offset = "0x12FAB0C", VA = "0x12FAB0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE87C", Offset = "0x8DE87C")]
			remove
			{
			}
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x12FABB8", Offset = "0x12FABB8", VA = "0x12FABB8", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x12FAC24", Offset = "0x12FAC24", VA = "0x12FAC24", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x12FAC28", Offset = "0x12FAC28", VA = "0x12FAC28", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x12FAC6C", Offset = "0x12FAC6C", VA = "0x12FAC6C", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x600043E")]
		[Address(RVA = "0x12FB1A8", Offset = "0x12FB1A8", VA = "0x12FB1A8")]
		private void LoadDatabase()
		{
		}

		[Token(Token = "0x600043F")]
		[Address(RVA = "0x12FB244", Offset = "0x12FB244", VA = "0x12FB244")]
		private void OnTextDatabaseLoaded(TextDatabase textDatabase)
		{
		}

		[Token(Token = "0x6000440")]
		[Address(RVA = "0x12FAC5C", Offset = "0x12FAC5C", VA = "0x12FAC5C")]
		private void UnloadTextDatabase()
		{
		}

		[Token(Token = "0x6000441")]
		[Address(RVA = "0x12FB568", Offset = "0x12FB568", VA = "0x12FB568")]
		public string GetText(TextKey textKey)
		{
			return null;
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x12FB73C", Offset = "0x12FB73C", VA = "0x12FB73C")]
		public TMP_FontAsset GetFont(TMP_FontAsset defaultFont)
		{
			return null;
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x12FB914", Offset = "0x12FB914", VA = "0x12FB914")]
		public Material GetFontMaterial(Material defaultMaterial)
		{
			return null;
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x12F8F14", Offset = "0x12F8F14", VA = "0x12F8F14")]
		public TMP_FontAsset GetSubtitleFont()
		{
			return null;
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x12FBAF4", Offset = "0x12FBAF4", VA = "0x12FBAF4")]
		public void SetLanguage(LanguageKey newLanguage)
		{
		}

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x12FAFD0", Offset = "0x12FAFD0", VA = "0x12FAFD0")]
		private void SetLanguage_Internal(LanguageKey newLanguage)
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x12FA5D0", Offset = "0x12FA5D0", VA = "0x12FA5D0")]
		public List<LanguageKey> GetLanguageKeyList()
		{
			return null;
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x12FBB44", Offset = "0x12FBB44", VA = "0x12FBB44")]
		public void LoadLanguage()
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x12FBD10", Offset = "0x12FBD10", VA = "0x12FBD10")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x12FBD14", Offset = "0x12FBD14", VA = "0x12FBD14")]
		public LocalizationManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000104")]
	public class TextDatabaseEntry : DatabaseEntry<TextKey>
	{
		[Token(Token = "0x4000346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8AEE78", Offset = "0x8AEE78")]
		public string Value;

		[Token(Token = "0x4000347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8AEE90", Offset = "0x8AEE90")]
		public string MaxCharacterCount;

		[Token(Token = "0x4000348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8AEEA8", Offset = "0x8AEEA8")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8AEEA8", Offset = "0x8AEEA8")]
		public string DeveloperNotes;

		[Token(Token = "0x1700006C")]
		public override bool IsEnabled
		{
			[Token(Token = "0x600044B")]
			[Address(RVA = "0x12FC1F4", Offset = "0x12FC1F4", VA = "0x12FC1F4", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x12FC288", Offset = "0x12FC288", VA = "0x12FC288")]
		public TextDatabaseEntry()
		{
		}
	}
	[Token(Token = "0x2000105")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1EBC", Offset = "0x8A1EBC")]
	public class TextDatabase : GenericDatabase<TextDatabaseEntry>
	{
		[Token(Token = "0x4000349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AEEE8", Offset = "0x8AEEE8")]
		[SerializeField]
		private string _spreadsheetID;

		[Token(Token = "0x1700006D")]
		public string SpreadsheetID
		{
			[Token(Token = "0x600044D")]
			[Address(RVA = "0x12FBDD0", Offset = "0x12FBDD0", VA = "0x12FBDD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		public string TabName
		{
			[Token(Token = "0x600044E")]
			[Address(RVA = "0x12FBDD8", Offset = "0x12FBDD8", VA = "0x12FBDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x12FBDE0", Offset = "0x12FBDE0", VA = "0x12FBDE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x12FBDE4", Offset = "0x12FBDE4", VA = "0x12FBDE4")]
		public void UpdateMaxCharacterCounts()
		{
		}

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x12FB608", Offset = "0x12FB608", VA = "0x12FB608")]
		public string GetText(TextKey textKey)
		{
			return null;
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x12FC030", Offset = "0x12FC030", VA = "0x12FC030")]
		public void AddNewEntry(TextKey textKey, string value)
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x12FC1A4", Offset = "0x12FC1A4", VA = "0x12FC1A4")]
		public TextDatabase()
		{
		}
	}
	[Token(Token = "0x2000106")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1F1C", Offset = "0x8A1F1C")]
	public class TextKey : ScriptableObject
	{
		[Token(Token = "0x2000483")]
		public enum Alignment
		{
			[Token(Token = "0x4001D24")]
			Left,
			[Token(Token = "0x4001D25")]
			Center,
			[Token(Token = "0x4001D26")]
			Right,
			[Token(Token = "0x4001D27")]
			Default
		}

		[Serializable]
		[Token(Token = "0x2000484")]
		private struct LanguageToTextSize
		{
			[Token(Token = "0x4001D28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LanguageKey languageKey;

			[Token(Token = "0x4001D29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float textSize;

			[Token(Token = "0x4001D2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Alignment alignment;
		}

		[Token(Token = "0x400034A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LocalizationManager _localizationManager;

		[Token(Token = "0x400034B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEF44", Offset = "0x8AEF44")]
		[SerializeField]
		private bool _enabled;

		[Token(Token = "0x400034C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UIUsage[] uIUsages;

		[Token(Token = "0x400034D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Unity.Collections.ReadOnly]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AEFA0", Offset = "0x8AEFA0")]
		public int maxCharacterCount;

		[Token(Token = "0x400034E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LanguageToTextSize[] overwriteTextSize;

		[Token(Token = "0x1700006F")]
		public bool IsAssignedToManager
		{
			[Token(Token = "0x6000454")]
			[Address(RVA = "0x12FC328", Offset = "0x12FC328", VA = "0x12FC328")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000070")]
		public bool IsReady
		{
			[Token(Token = "0x6000455")]
			[Address(RVA = "0x12FC398", Offset = "0x12FC398", VA = "0x12FC398")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public bool IsEnabled
		{
			[Token(Token = "0x6000456")]
			[Address(RVA = "0x12FC42C", Offset = "0x12FC42C", VA = "0x12FC42C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x12FC434", Offset = "0x12FC434", VA = "0x12FC434")]
		public string GetText(LocalizationManager instance)
		{
			return null;
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x12FC454", Offset = "0x12FC454", VA = "0x12FC454")]
		public string GetText()
		{
			return null;
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x12FC4C4", Offset = "0x12FC4C4", VA = "0x12FC4C4")]
		public TMP_FontAsset GetFont(TMP_FontAsset defaultFont)
		{
			return null;
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x12FC4EC", Offset = "0x12FC4EC", VA = "0x12FC4EC")]
		public Material GetFontMaterial(Material defaultMaterial)
		{
			return null;
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x12FC514", Offset = "0x12FC514", VA = "0x12FC514")]
		public float GetTextSize()
		{
			return default(float);
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x12FC67C", Offset = "0x12FC67C", VA = "0x12FC67C")]
		public int GetAlignment()
		{
			return default(int);
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x12FC570", Offset = "0x12FC570", VA = "0x12FC570")]
		private int GetLanguageIndex()
		{
			return default(int);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x12FC6D8", Offset = "0x12FC6D8", VA = "0x12FC6D8")]
		public void BindToLanguageChange(Action action)
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x12FC6F0", Offset = "0x12FC6F0", VA = "0x12FC6F0")]
		public void UnbindFromLanguageChange(Action action)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x12FBFB0", Offset = "0x12FBFB0", VA = "0x12FBFB0")]
		public void UpdateMaxCharCount()
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x12FC708", Offset = "0x12FC708", VA = "0x12FC708")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x12FC7C4", Offset = "0x12FC7C4", VA = "0x12FC7C4")]
		public TextKey()
		{
		}
	}
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A1F7C", Offset = "0x8A1F7C")]
	public class UIUsage : ScriptableObject
	{
		[Token(Token = "0x400034F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int maxCharacterCount;

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x12FC85C", Offset = "0x12FC85C", VA = "0x12FC85C")]
		public int GetCharacterCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x12FC864", Offset = "0x12FC864", VA = "0x12FC864")]
		public UIUsage()
		{
		}
	}
}
namespace SG.Code.Claymore.Armaments
{
	[Token(Token = "0x2000108")]
	public interface IGUIDProvider
	{
		[Token(Token = "0x17000072")]
		string GUID
		{
			[Token(Token = "0x6000465")]
			get;
		}

		[Token(Token = "0x17000073")]
		string DeveloperName
		{
			[Token(Token = "0x6000466")]
			get;
		}
	}
	[Token(Token = "0x2000109")]
	public abstract class ObjectDatabase<T> : ScriptableObject where T : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x4000350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected UnityEngine.Object directory;

		[Token(Token = "0x4000351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool autoPopulate;

		[Token(Token = "0x4000352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<T> Objects;

		[Token(Token = "0x17000074")]
		public bool AutoPopulate
		{
			[Token(Token = "0x6000467")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000468")]
		public Type GetObjectType()
		{
			return null;
		}

		[Token(Token = "0x6000469")]
		public T GetObject(string guid)
		{
			return null;
		}

		[Token(Token = "0x600046A")]
		public T Resolve(string guid)
		{
			return null;
		}

		[Token(Token = "0x600046B")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600046C")]
		protected ObjectDatabase()
		{
		}
	}
}
namespace SG.Claymore
{
	[Token(Token = "0x200010A")]
	public class ClaymorePlayerLoopInitializer : PlayerLoopInitializer
	{
		[Token(Token = "0x4000353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "InjectedFeatureAttribute", RVA = "0x8AF02C", Offset = "0x8AF02C")]
		private VariableInstancerAsset variableOverrides;

		[Token(Token = "0x600046D")]
		[Address(RVA = "0xB75984", Offset = "0xB75984", VA = "0xB75984", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0xB75ADC", Offset = "0xB75ADC", VA = "0xB75ADC", Slot = "12")]
		protected override void Init()
		{
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0xB75D7C", Offset = "0xB75D7C", VA = "0xB75D7C")]
		public void FirstSceneReady(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0xB76058", Offset = "0xB76058", VA = "0xB76058", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xB76198", Offset = "0xB76198", VA = "0xB76198", Slot = "11")]
		protected override void LogStartup()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xB76C20", Offset = "0xB76C20", VA = "0xB76C20", Slot = "13")]
		protected override bool ReadyToInit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0xB76C58", Offset = "0xB76C58", VA = "0xB76C58", Slot = "15")]
		protected override void PrepareLoopForInit(CustomPlayerLoop loop)
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0xB770C8", Offset = "0xB770C8", VA = "0xB770C8")]
		public ClaymorePlayerLoopInitializer()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class ComponentPool<T> where T : Component
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Stack<T> unspawnedItems;

		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> spawnedItems;

		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hideInactive;

		[Token(Token = "0x17000075")]
		public List<T> SpawnedItems
		{
			[Token(Token = "0x6000475")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000076")]
		public int BorrowedCount
		{
			[Token(Token = "0x6000476")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000477")]
		public ComponentPool(T prefab, int poolSize, bool hide, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x6000478")]
		public T BorrowItem()
		{
			return null;
		}

		[Token(Token = "0x6000479")]
		public void ReturnItem(T item)
		{
		}

		[Token(Token = "0x600047A")]
		public void ForceReturnAll()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class CircularComponentPool<T> where T : Component
	{
		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] items;

		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int index;

		[Token(Token = "0x4000359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hideInactive;

		[Token(Token = "0x17000077")]
		public T[] Items
		{
			[Token(Token = "0x600047B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600047C")]
		public CircularComponentPool(T prefab, int poolSize, bool hide, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x600047D")]
		public CircularComponentPool(T prefab, bool deactivateInstance, int poolSize, bool hide, [Optional] Transform parent)
		{
		}

		[Token(Token = "0x600047E")]
		public T GetNext()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200010D")]
	public struct DistanceThreshold : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400035A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AF040", Offset = "0x8AF040")]
		public float edgeInnerOffset;

		[Token(Token = "0x400035B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float bullseyeInnerOffset;

		[Token(Token = "0x400035C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AF078", Offset = "0x8AF078")]
		public float distance;

		[Token(Token = "0x400035D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float bullseyeOuterOffset;

		[Token(Token = "0x400035E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AF0B0", Offset = "0x8AF0B0")]
		public float edgeOuterOffset;

		[Token(Token = "0x17000078")]
		public float EdgeInner
		{
			[Token(Token = "0x600047F")]
			[Address(RVA = "0x9680D0", Offset = "0x9680D0", VA = "0x9680D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000079")]
		public float EdgeOuter
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x9680E0", Offset = "0x9680E0", VA = "0x9680E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007A")]
		public float BullseyeInner
		{
			[Token(Token = "0x6000481")]
			[Address(RVA = "0x9680F0", Offset = "0x9680F0", VA = "0x9680F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007B")]
		public float BullseyeOuter
		{
			[Token(Token = "0x6000482")]
			[Address(RVA = "0x9680FC", Offset = "0x9680FC", VA = "0x9680FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007C")]
		public float SqrEdgeInner
		{
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x968108", Offset = "0x968108", VA = "0x968108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007D")]
		public float SqrEdgeOuter
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0x96811C", Offset = "0x96811C", VA = "0x96811C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007E")]
		public float SqrBullseyeInner
		{
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x968130", Offset = "0x968130", VA = "0x968130")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700007F")]
		public float SqrBullseyeOuter
		{
			[Token(Token = "0x6000486")]
			[Address(RVA = "0x968140", Offset = "0x968140", VA = "0x968140")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000080")]
		public float SqrDist
		{
			[Token(Token = "0x6000487")]
			[Address(RVA = "0x968150", Offset = "0x968150", VA = "0x968150")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000081")]
		public float BullseyeRadius
		{
			[Token(Token = "0x6000488")]
			[Address(RVA = "0x96815C", Offset = "0x96815C", VA = "0x96815C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000082")]
		public float EdgeRadius
		{
			[Token(Token = "0x6000489")]
			[Address(RVA = "0x96816C", Offset = "0x96816C", VA = "0x96816C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x96817C", Offset = "0x96817C", VA = "0x96817C")]
		public DistanceThreshold(float distance, float edgeInnerOffset, float edgeOuterOffset, float bullseyeInnerOffset, float bullseyeOuterOffset)
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x96818C", Offset = "0x96818C", VA = "0x96818C")]
		public DistanceThreshold(float distance, float edgeRadius, float bullseyeRadius)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x96819C", Offset = "0x96819C", VA = "0x96819C")]
		public bool WithinEdgeThreshold(float sqrDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x9681D4", Offset = "0x9681D4", VA = "0x9681D4")]
		public bool WithinEdgeThreshold(Vector3 destination, Vector3 currentPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x9681DC", Offset = "0x9681DC", VA = "0x9681DC")]
		public bool WithinEdgeThreshold(Vector3 heading)
		{
			return default(bool);
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x9681E4", Offset = "0x9681E4", VA = "0x9681E4")]
		public bool WithinBullseyeThreshold(float sqrDistance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x968218", Offset = "0x968218", VA = "0x968218")]
		public bool WithinBullseyeThreshold(Vector3 destination, Vector3 currentPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x968220", Offset = "0x968220", VA = "0x968220")]
		public bool WithinBullseyeThreshold(Vector3 heading)
		{
			return default(bool);
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x968228", Offset = "0x968228", VA = "0x968228", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x96826C", Offset = "0x96826C", VA = "0x96826C", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x968270", Offset = "0x968270", VA = "0x968270")]
		public void DebugDistance(float dist)
		{
		}
	}
	[Token(Token = "0x200010E")]
	public static class EasingFunction
	{
		[Token(Token = "0x2000485")]
		public enum Ease
		{
			[Token(Token = "0x4001D2C")]
			EaseInQuad,
			[Token(Token = "0x4001D2D")]
			EaseOutQuad,
			[Token(Token = "0x4001D2E")]
			EaseInOutQuad,
			[Token(Token = "0x4001D2F")]
			EaseInCubic,
			[Token(Token = "0x4001D30")]
			EaseOutCubic,
			[Token(Token = "0x4001D31")]
			EaseInOutCubic,
			[Token(Token = "0x4001D32")]
			EaseInQuart,
			[Token(Token = "0x4001D33")]
			EaseOutQuart,
			[Token(Token = "0x4001D34")]
			EaseInOutQuart,
			[Token(Token = "0x4001D35")]
			EaseInQuint,
			[Token(Token = "0x4001D36")]
			EaseOutQuint,
			[Token(Token = "0x4001D37")]
			EaseInOutQuint,
			[Token(Token = "0x4001D38")]
			EaseInSine,
			[Token(Token = "0x4001D39")]
			EaseOutSine,
			[Token(Token = "0x4001D3A")]
			EaseInOutSine,
			[Token(Token = "0x4001D3B")]
			EaseInExpo,
			[Token(Token = "0x4001D3C")]
			EaseOutExpo,
			[Token(Token = "0x4001D3D")]
			EaseInOutExpo,
			[Token(Token = "0x4001D3E")]
			EaseInCirc,
			[Token(Token = "0x4001D3F")]
			EaseOutCirc,
			[Token(Token = "0x4001D40")]
			EaseInOutCirc,
			[Token(Token = "0x4001D41")]
			Linear,
			[Token(Token = "0x4001D42")]
			Spring,
			[Token(Token = "0x4001D43")]
			EaseInBounce,
			[Token(Token = "0x4001D44")]
			EaseOutBounce,
			[Token(Token = "0x4001D45")]
			EaseInOutBounce,
			[Token(Token = "0x4001D46")]
			EaseInBack,
			[Token(Token = "0x4001D47")]
			EaseOutBack,
			[Token(Token = "0x4001D48")]
			EaseInOutBack,
			[Token(Token = "0x4001D49")]
			EaseInElastic,
			[Token(Token = "0x4001D4A")]
			EaseOutElastic,
			[Token(Token = "0x4001D4B")]
			EaseInOutElastic
		}

		[Token(Token = "0x2000486")]
		public delegate float Function(float s, float e, float v);

		[Token(Token = "0x400035F")]
		private const float NaturalLogOf2 = 0.6931472f;

		[MethodImpl(256)]
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xBAC3E0", Offset = "0xBAC3E0", VA = "0xBAC3E0")]
		public static float Linear(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000496")]
		[Address(RVA = "0xBAC468", Offset = "0xBAC468", VA = "0xBAC468")]
		public static float Spring(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000497")]
		[Address(RVA = "0xBAC56C", Offset = "0xBAC56C", VA = "0xBAC56C")]
		public static float EaseInQuad(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000498")]
		[Address(RVA = "0xBAC580", Offset = "0xBAC580", VA = "0xBAC580")]
		public static float EaseOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x6000499")]
		[Address(RVA = "0xBAC59C", Offset = "0xBAC59C", VA = "0xBAC59C")]
		public static float EaseInOutQuad(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049A")]
		[Address(RVA = "0xBAC5F0", Offset = "0xBAC5F0", VA = "0xBAC5F0")]
		public static float EaseInCubic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049B")]
		[Address(RVA = "0xBAC608", Offset = "0xBAC608", VA = "0xBAC608")]
		public static float EaseOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049C")]
		[Address(RVA = "0xBAC630", Offset = "0xBAC630", VA = "0xBAC630")]
		public static float EaseInOutCubic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049D")]
		[Address(RVA = "0xBAC688", Offset = "0xBAC688", VA = "0xBAC688")]
		public static float EaseInQuart(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xBAC6A4", Offset = "0xBAC6A4", VA = "0xBAC6A4")]
		public static float EaseOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xBAC6CC", Offset = "0xBAC6CC", VA = "0xBAC6CC")]
		public static float EaseInOutQuart(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xBAC728", Offset = "0xBAC728", VA = "0xBAC728")]
		public static float EaseInQuint(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xBAC748", Offset = "0xBAC748", VA = "0xBAC748")]
		public static float EaseOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xBAC778", Offset = "0xBAC778", VA = "0xBAC778")]
		public static float EaseInOutQuint(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xBAC7E0", Offset = "0xBAC7E0", VA = "0xBAC7E0")]
		public static float EaseInSine(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xBAC878", Offset = "0xBAC878", VA = "0xBAC878")]
		public static float EaseOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xBAC90C", Offset = "0xBAC90C", VA = "0xBAC90C")]
		public static float EaseInOutSine(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0xBAC9B0", Offset = "0xBAC9B0", VA = "0xBAC9B0")]
		public static float EaseInExpo(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xBACA48", Offset = "0xBACA48", VA = "0xBACA48")]
		public static float EaseOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xBACAE0", Offset = "0xBACAE0", VA = "0xBACAE0")]
		public static float EaseInOutExpo(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xBACBD0", Offset = "0xBACBD0", VA = "0xBACBD0")]
		public static float EaseInCirc(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xBACC7C", Offset = "0xBACC7C", VA = "0xBACC7C")]
		public static float EaseOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xBACD28", Offset = "0xBACD28", VA = "0xBACD28")]
		public static float EaseInOutCirc(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xBACE20", Offset = "0xBACE20", VA = "0xBACE20")]
		public static float EaseInBounce(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xBACF00", Offset = "0xBACF00", VA = "0xBACF00")]
		public static float EaseOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xBACFCC", Offset = "0xBACFCC", VA = "0xBACFCC")]
		public static float EaseInOutBounce(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xBAD19C", Offset = "0xBAD19C", VA = "0xBAD19C")]
		public static float EaseInBack(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xBAD1CC", Offset = "0xBAD1CC", VA = "0xBAD1CC")]
		public static float EaseOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xBAD20C", Offset = "0xBAD20C", VA = "0xBAD20C")]
		public static float EaseInOutBack(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xBAD290", Offset = "0xBAD290", VA = "0xBAD290")]
		public static float EaseInElastic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xBAD3DC", Offset = "0xBAD3DC", VA = "0xBAD3DC")]
		public static float EaseOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xBAD524", Offset = "0xBAD524", VA = "0xBAD524")]
		public static float EaseInOutElastic(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xBAD6F4", Offset = "0xBAD6F4", VA = "0xBAD6F4")]
		public static float LinearD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xBAD6FC", Offset = "0xBAD6FC", VA = "0xBAD6FC")]
		public static float EaseInQuadD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xBAD70C", Offset = "0xBAD70C", VA = "0xBAD70C")]
		public static float EaseOutQuadD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xBAD728", Offset = "0xBAD728", VA = "0xBAD728")]
		public static float EaseInOutQuadD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xBAD750", Offset = "0xBAD750", VA = "0xBAD750")]
		public static float EaseInCubicD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xBAD768", Offset = "0xBAD768", VA = "0xBAD768")]
		public static float EaseOutCubicD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xBAD788", Offset = "0xBAD788", VA = "0xBAD788")]
		public static float EaseInOutCubicD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xBAD7B8", Offset = "0xBAD7B8", VA = "0xBAD7B8")]
		public static float EaseInQuartD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xBAD7D4", Offset = "0xBAD7D4", VA = "0xBAD7D4")]
		public static float EaseOutQuartD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xBAD7F8", Offset = "0xBAD7F8", VA = "0xBAD7F8")]
		public static float EaseInOutQuartD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xBAD830", Offset = "0xBAD830", VA = "0xBAD830")]
		public static float EaseInQuintD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xBAD850", Offset = "0xBAD850", VA = "0xBAD850")]
		public static float EaseOutQuintD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xBAD878", Offset = "0xBAD878", VA = "0xBAD878")]
		public static float EaseInOutQuintD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xBAD8B0", Offset = "0xBAD8B0", VA = "0xBAD8B0")]
		public static float EaseInSineD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xBAD954", Offset = "0xBAD954", VA = "0xBAD954")]
		public static float EaseOutSineD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xBAD9E8", Offset = "0xBAD9E8", VA = "0xBAD9E8")]
		public static float EaseInOutSineD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xBADA84", Offset = "0xBADA84", VA = "0xBADA84")]
		public static float EaseInExpoD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xBADB24", Offset = "0xBADB24", VA = "0xBADB24")]
		public static float EaseOutExpoD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xBADBC4", Offset = "0xBADBC4", VA = "0xBADBC4")]
		public static float EaseInOutExpoD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xBADCB4", Offset = "0xBADCB4", VA = "0xBADCB4")]
		public static float EaseInCircD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xBADD58", Offset = "0xBADD58", VA = "0xBADD58")]
		public static float EaseOutCircD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xBADE04", Offset = "0xBADE04", VA = "0xBADE04")]
		public static float EaseInOutCircD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xBADEFC", Offset = "0xBADEFC", VA = "0xBADEFC")]
		public static float EaseInBounceD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xBADF78", Offset = "0xBADF78", VA = "0xBADF78")]
		public static float EaseOutBounceD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xBAE000", Offset = "0xBAE000", VA = "0xBAE000")]
		public static float EaseInOutBounceD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xBAE124", Offset = "0xBAE124", VA = "0xBAE124")]
		public static float EaseInBackD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xBAE154", Offset = "0xBAE154", VA = "0xBAE154")]
		public static float EaseOutBackD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xBAE190", Offset = "0xBAE190", VA = "0xBAE190")]
		public static float EaseInOutBackD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xBAE220", Offset = "0xBAE220", VA = "0xBAE220")]
		public static float EaseInElasticD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xBAE348", Offset = "0xBAE348", VA = "0xBAE348")]
		public static float EaseOutElasticD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xBAE46C", Offset = "0xBAE46C", VA = "0xBAE46C")]
		public static float EaseInOutElasticD(float start, float end, float value)
		{
			return default(float);
		}

		[MethodImpl(256)]
		[Token(Token = "0x60004D4")]
		[Address(RVA = "0xBAE624", Offset = "0xBAE624", VA = "0xBAE624")]
		public static float SpringD(float start, float end, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xBAE7D8", Offset = "0xBAE7D8", VA = "0xBAE7D8")]
		public static Function GetEasingFunction(Ease easingFunction)
		{
			return null;
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xBAEBF4", Offset = "0xBAEBF4", VA = "0xBAEBF4")]
		public static Function GetEasingFunctionDerivative(Ease easingFunction)
		{
			return null;
		}
	}
	[Token(Token = "0x200010F")]
	public class ExceptionDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF0E8", Offset = "0x8AF0E8")]
		[SerializeField]
		private Text titleText;

		[Token(Token = "0x4000361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI titleTMP;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF144", Offset = "0x8AF144")]
		[SerializeField]
		private Text conditionText;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI conditionTextTMP;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF1A0", Offset = "0x8AF1A0")]
		[SerializeField]
		private Text stackTraceText;

		[Token(Token = "0x4000365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMeshProUGUI stackTraceTextTMP;

		[Token(Token = "0x4000366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalExceptionHandler exceptionHandler;

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xBB9C50", Offset = "0xBB9C50", VA = "0xBB9C50")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xBB9CEC", Offset = "0xBB9CEC", VA = "0xBB9CEC")]
		public void Display(string title, string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xBB9F2C", Offset = "0xBB9F2C", VA = "0xBB9F2C")]
		public ExceptionDisplay()
		{
		}
	}
	[Token(Token = "0x2000110")]
	public class ErrorMessage : ScriptableObject
	{
		[Token(Token = "0x4000367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public string Title;

		[Token(Token = "0x4000368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public string Message;

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xBB9C48", Offset = "0xBB9C48", VA = "0xBB9C48")]
		public ErrorMessage()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class GlobalExceptionHandler : CustomPlayerLoop, IGlobalEventListener<ErrorMessage>
	{
		[Token(Token = "0x2000487")]
		private static class EditorStateMonitoring
		{
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xBBA0D0", Offset = "0xBBA0D0", VA = "0xBBA0D0")]
			public static void Initialize()
			{
			}

			[Token(Token = "0x6001BB6")]
			[Address(RVA = "0xBBA698", Offset = "0xBBA698", VA = "0xBBA698")]
			public static bool IsPlaymodeValid()
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000488")]
		private enum HandleMode
		{
			[Token(Token = "0x4001D4D")]
			Ignore,
			[Token(Token = "0x4001D4E")]
			Popup,
			[Token(Token = "0x4001D4F")]
			SceneLoad
		}

		[Token(Token = "0x4000369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneReference generalErrorScene;

		[Token(Token = "0x400036A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF23C", Offset = "0x8AF23C")]
		[SerializeField]
		private TimeScaleController timeScaleController;

		[Token(Token = "0x400036B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScreenFadeController screenFadeController;

		[Token(Token = "0x400036C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScreenFlashController screenFlashController;

		[Token(Token = "0x400036D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable bypassErrors;

		[Token(Token = "0x400036E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HandleMode handleMode;

		[Token(Token = "0x400036F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private HandleMode editorHandleMode;

		[Token(Token = "0x4000370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF2D8", Offset = "0x8AF2D8")]
		[SerializeField]
		private string defaultErrorText;

		[Token(Token = "0x4000371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF324", Offset = "0x8AF324")]
		[SerializeField]
		private string defaultDetailText;

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF370", Offset = "0x8AF370")]
		[SerializeField]
		private ExceptionDisplay exceptionDisplayPrefab;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF3BC", Offset = "0x8AF3BC")]
		[SerializeField]
		private bool timePauseOnException;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF408", Offset = "0x8AF408")]
		[SerializeField]
		private bool handleException;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF454", Offset = "0x8AF454")]
		[SerializeField]
		private bool handleError;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF4A0", Offset = "0x8AF4A0")]
		[SerializeField]
		private bool handleWarning;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF4EC", Offset = "0x8AF4EC")]
		[SerializeField]
		private ErrorMessageGlobalEvent showErrorEvent;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ExceptionDisplay exceptionDisplayInstance;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF538", Offset = "0x8AF538")]
		private string <ExceptionTitle>k__BackingField;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF548", Offset = "0x8AF548")]
		private string <ExceptionString>k__BackingField;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF558", Offset = "0x8AF558")]
		private string <ExceptionStackTrace>k__BackingField;

		[Token(Token = "0x17000083")]
		public string ExceptionTitle
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0xBB9F34", Offset = "0xBB9F34", VA = "0xBB9F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE88C", Offset = "0x8DE88C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0xBB9F3C", Offset = "0xBB9F3C", VA = "0xBB9F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE89C", Offset = "0x8DE89C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public string ExceptionString
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0xBB9F44", Offset = "0xBB9F44", VA = "0xBB9F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE8AC", Offset = "0x8DE8AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0xBB9F4C", Offset = "0xBB9F4C", VA = "0xBB9F4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE8BC", Offset = "0x8DE8BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public string ExceptionStackTrace
		{
			[Token(Token = "0x60004DF")]
			[Address(RVA = "0xBB9F54", Offset = "0xBB9F54", VA = "0xBB9F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE8CC", Offset = "0x8DE8CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004E0")]
			[Address(RVA = "0xBB9F5C", Offset = "0xBB9F5C", VA = "0xBB9F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE8DC", Offset = "0x8DE8DC")]
			private set
			{
			}
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xBB9F64", Offset = "0xBB9F64", VA = "0xBB9F64", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xBB9FD0", Offset = "0xBB9FD0", VA = "0xBB9FD0", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xBB9FD4", Offset = "0xBB9FD4", VA = "0xBB9FD4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DE8EC", Offset = "0x8DE8EC")]
		public void DebugTestException()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xBBA008", Offset = "0xBBA008", VA = "0xBBA008", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xBBA0D4", Offset = "0xBBA0D4", VA = "0xBBA0D4", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xBBA13C", Offset = "0xBBA13C", VA = "0xBBA13C")]
		public void LogCallback(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xBBA1BC", Offset = "0xBBA1BC", VA = "0xBBA1BC")]
		public void DisplayMessage(string title, string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xBBA6A0", Offset = "0xBBA6A0", VA = "0xBBA6A0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xBBA740", Offset = "0xBBA740", VA = "0xBBA740", Slot = "10")]
		private void SG.GlobalEvents.IGlobalEventListener<SG.Claymore.ErrorMessage>.HandleEvent(ErrorMessage arg)
		{
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xBBA7B4", Offset = "0xBBA7B4", VA = "0xBBA7B4")]
		public GlobalExceptionHandler()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class ShardsExploder : MonoBehaviour
	{
		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD44", Offset = "0x8AAD44")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShardsExploder <>4__this;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <destroyTimeActual>5__2;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <gravityTimeActual>5__3;

			[Token(Token = "0x1700041D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BBA")]
				[Address(RVA = "0xC4F634", Offset = "0xC4F634", VA = "0xC4F634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700041E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BBC")]
				[Address(RVA = "0xC4F69C", Offset = "0xC4F69C", VA = "0xC4F69C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0xC4F1B0", Offset = "0xC4F1B0", VA = "0xC4F1B0")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0xC4F268", Offset = "0xC4F268", VA = "0xC4F268", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xC4F26C", Offset = "0xC4F26C", VA = "0xC4F26C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BBB")]
			[Address(RVA = "0xC4F63C", Offset = "0xC4F63C", VA = "0xC4F63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatRange explosionForce;

		[Token(Token = "0x400037D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ExplosionRadius;

		[Token(Token = "0x400037E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float UpwardsModifier;

		[Token(Token = "0x400037F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF568", Offset = "0x8AF568")]
		public bool doGravityToggle;

		[Token(Token = "0x4000380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatRange gravityToggleTime;

		[Token(Token = "0x4000381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FloatRange destroyTime;

		[Token(Token = "0x4000382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<Rigidbody> shards;

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC4F134", Offset = "0xC4F134", VA = "0xC4F134")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE924", Offset = "0x8DE924")]
		public IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC4F1DC", Offset = "0xC4F1DC", VA = "0xC4F1DC")]
		public ShardsExploder()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public static class ObjectExtensionUtility
	{
		[Token(Token = "0x4000383")]
		private const string NULL = "<NULL>";

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xB09534", Offset = "0xB09534", VA = "0xB09534")]
		public static string GetNullCheckedName(this UnityEngine.Object obj)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class PlatformEnablingSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048A")]
		public class ToggleGroup
		{
			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlatformExclude.ClaymoreBuildTarget platform;

			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject gameObject;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool active;

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0xB096C8", Offset = "0xB096C8", VA = "0xB096C8")]
			public ToggleGroup()
			{
			}
		}

		[Token(Token = "0x4000384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ToggleGroup[] toggles;

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xB095D0", Offset = "0xB095D0", VA = "0xB095D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xB0965C", Offset = "0xB0965C", VA = "0xB0965C")]
		public PlatformEnablingSwitch()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public class PlatformExclude : MonoBehaviour
	{
		[Token(Token = "0x200048B")]
		public enum ClaymoreBuildTarget
		{
			[Token(Token = "0x4001D59")]
			PC,
			[Token(Token = "0x4001D5A")]
			Quest,
			[Token(Token = "0x4001D5B")]
			PS4
		}

		[Token(Token = "0x4000385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClaymoreBuildTarget excludedTarget;

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xB096D0", Offset = "0xB096D0", VA = "0xB096D0")]
		private void Exclude()
		{
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xB09654", Offset = "0xB09654", VA = "0xB09654")]
		public static ClaymoreBuildTarget GetBuildTarget()
		{
			return default(ClaymoreBuildTarget);
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xB097D0", Offset = "0xB097D0", VA = "0xB097D0")]
		private bool ShouldExclude()
		{
			return default(bool);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xB097E0", Offset = "0xB097E0", VA = "0xB097E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xB098C8", Offset = "0xB098C8", VA = "0xB098C8")]
		public PlatformExclude()
		{
		}
	}
}
namespace SG.Claymore.Testing
{
	[Token(Token = "0x2000116")]
	public class DebugLogger : MonoBehaviour
	{
		[Token(Token = "0x4000386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringGlobalEvent LogMessageEvent;

		[Token(Token = "0x4000387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text UIText;

		[Token(Token = "0x4000388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int MaxMessagesToDisplay;

		[Token(Token = "0x4000389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int numMessagesDisplayed;

		[Token(Token = "0x400038A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string messages;

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xAEA92C", Offset = "0xAEA92C", VA = "0xAEA92C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xAEA9F8", Offset = "0xAEA9F8", VA = "0xAEA9F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xAEAA94", Offset = "0xAEAA94", VA = "0xAEAA94")]
		private void RecieveLogMessage(string message)
		{
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xAEAD58", Offset = "0xAEAD58", VA = "0xAEAD58")]
		public DebugLogger()
		{
		}
	}
}
namespace SG.Claymore._Testing
{
	[Token(Token = "0x2000117")]
	public class DebugEncounterSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200048C")]
		public class ButtonSet
		{
			[Token(Token = "0x20005FB")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB32C", Offset = "0x8AB32C")]
			private sealed class <>c__DisplayClass3_0
			{
				[Token(Token = "0x40023BC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public ButtonSet <>4__this;

				[Token(Token = "0x40023BD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Button b;

				[Token(Token = "0x40023BE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public Action onClick;

				[Token(Token = "0x6002F0E")]
				[Address(RVA = "0xCA9C1C", Offset = "0xCA9C1C", VA = "0xCA9C1C")]
				public <>c__DisplayClass3_0()
				{
				}

				[Token(Token = "0x6002F0F")]
				[Address(RVA = "0xCA9CA0", Offset = "0xCA9CA0", VA = "0xCA9CA0")]
				internal void <CreateButton>b__0()
				{
				}
			}

			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private Button buttonTemplate;

			[NonSerialized]
			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly List<Button> buttons;

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0xCA8D94", Offset = "0xCA8D94", VA = "0xCA8D94")]
			public void ClearButtons()
			{
			}

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0xCA9800", Offset = "0xCA9800", VA = "0xCA9800")]
			public void CreateButton(string text, Action onClick)
			{
			}

			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0xCA9C24", Offset = "0xCA9C24", VA = "0xCA9C24")]
			public ButtonSet()
			{
			}
		}

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD54", Offset = "0x8AAD54")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugEncounterSelector <>4__this;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Campaign campaign;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CampaignTier tier;

			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0xCA97F8", Offset = "0xCA97F8", VA = "0xCA97F8")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0xCA9B20", Offset = "0xCA9B20", VA = "0xCA9B20")]
			internal void <PopulateRooms>b__0()
			{
			}
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD64", Offset = "0x8AAD64")]
		private sealed class <>c__DisplayClass14_1
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Room r;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass14_0 CS$<>8__locals1;

			[Token(Token = "0x6001BC3")]
			[Address(RVA = "0xCA99D8", Offset = "0xCA99D8", VA = "0xCA99D8")]
			public <>c__DisplayClass14_1()
			{
			}

			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0xCA9B40", Offset = "0xCA9B40", VA = "0xCA9B40")]
			internal void <PopulateRooms>b__1()
			{
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD74", Offset = "0x8AAD74")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugEncounterSelector <>4__this;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Room room;

			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0xCA99E0", Offset = "0xCA99E0", VA = "0xCA99E0")]
			public <>c__DisplayClass15_0()
			{
			}
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD84", Offset = "0x8AAD84")]
		private sealed class <>c__DisplayClass15_1
		{
			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Encounter encounter;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass15_0 CS$<>8__locals1;

			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0xCA99E8", Offset = "0xCA99E8", VA = "0xCA99E8")]
			public <>c__DisplayClass15_1()
			{
			}

			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0xCA9B6C", Offset = "0xCA9B6C", VA = "0xCA9B6C")]
			internal void <PopulateEncounters>b__0()
			{
			}
		}

		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAD94", Offset = "0x8AAD94")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DebugEncounterSelector <>4__this;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Campaign campaign;

			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0xCA99F0", Offset = "0xCA99F0", VA = "0xCA99F0")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0xCA9B9C", Offset = "0xCA9B9C", VA = "0xCA9B9C")]
			internal void <PopulateTiers>b__0()
			{
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADA4", Offset = "0x8AADA4")]
		private sealed class <>c__DisplayClass16_1
		{
			[Token(Token = "0x4001D69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CampaignTier tier;

			[Token(Token = "0x4001D6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass16_0 CS$<>8__locals1;

			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0xCA99F8", Offset = "0xCA99F8", VA = "0xCA99F8")]
			public <>c__DisplayClass16_1()
			{
			}

			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xCA9BCC", Offset = "0xCA9BCC", VA = "0xCA9BCC")]
			internal void <PopulateTiers>b__1()
			{
			}
		}

		[Token(Token = "0x2000493")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADB4", Offset = "0x8AADB4")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4001D6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Campaign campaign;

			[Token(Token = "0x4001D6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DebugEncounterSelector <>4__this;

			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0xCA9B10", Offset = "0xCA9B10", VA = "0xCA9B10")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0xCA9BFC", Offset = "0xCA9BFC", VA = "0xCA9BFC")]
			internal void <PopulateCampaigns>b__0()
			{
			}
		}

		[Token(Token = "0x400038B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x400038C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CampaignDatabase campaigns;

		[Token(Token = "0x400038D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonSet campaignButton;

		[Token(Token = "0x400038E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ButtonSet tierButton;

		[Token(Token = "0x400038F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ButtonSet roomButton;

		[Token(Token = "0x4000390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ButtonSet encounterButton;

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xCA8968", Offset = "0xCA8968", VA = "0xCA8968")]
		private void Start()
		{
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xCA8D44", Offset = "0xCA8D44", VA = "0xCA8D44")]
		private void SelectCampaign(Campaign campaign)
		{
		}

		[Token(Token = "0x60004FB")]
		[Address(RVA = "0xCA9078", Offset = "0xCA9078", VA = "0xCA9078")]
		private void SelectTier(Campaign campaign, CampaignTier tier)
		{
		}

		[Token(Token = "0x60004FC")]
		[Address(RVA = "0xCA93DC", Offset = "0xCA93DC", VA = "0xCA93DC")]
		private void SelectRoom(Room room)
		{
		}

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xCA95D0", Offset = "0xCA95D0", VA = "0xCA95D0")]
		private void PlayCampaign(Campaign campaign)
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xCA95EC", Offset = "0xCA95EC", VA = "0xCA95EC")]
		private void PlayTier(Campaign campaign, CampaignTier tier)
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xCA972C", Offset = "0xCA972C", VA = "0xCA972C")]
		private void SelectEncounter(Room room, Encounter encounter)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xCA90CC", Offset = "0xCA90CC", VA = "0xCA90CC")]
		private void PopulateRooms(Campaign campaign, CampaignTier tier)
		{
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xCA9414", Offset = "0xCA9414", VA = "0xCA9414")]
		private void PopulateEncounters(Room room)
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xCA8E70", Offset = "0xCA8E70", VA = "0xCA8E70")]
		private void PopulateTiers(Campaign campaign)
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xCA9A00", Offset = "0xCA9A00", VA = "0xCA9A00")]
		private bool IsInBuild(string sceneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xCA896C", Offset = "0xCA896C", VA = "0xCA896C")]
		private void PopulateCampaigns()
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xCA9B18", Offset = "0xCA9B18", VA = "0xCA9B18")]
		public DebugEncounterSelector()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public class DebugEnemyStatBoost : MonoBehaviour
	{
		[Token(Token = "0x4000391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyManager EnemyManager;

		[Token(Token = "0x4000392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StatMod[] Buffs;

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xCA9D68", Offset = "0xCA9D68", VA = "0xCA9D68")]
		public void Apply()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xCAA074", Offset = "0xCAA074", VA = "0xCAA074")]
		public DebugEnemyStatBoost()
		{
		}
	}
	[Token(Token = "0x2000119")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A1FEC", Offset = "0x8A1FEC")]
	public class DebugFPS : MonoBehaviour
	{
		[Token(Token = "0x4000393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x4000394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private double _updateDelay;

		[Token(Token = "0x4000395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _frameCount;

		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float elapsedTime;

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xCAA07C", Offset = "0xCAA07C", VA = "0xCAA07C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0xCAA0DC", Offset = "0xCAA0DC", VA = "0xCAA0DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0xCAA1C4", Offset = "0xCAA1C4", VA = "0xCAA1C4")]
		public DebugFPS()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class DebugForceCrash : MonoBehaviour
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xCAA1D4", Offset = "0xCAA1D4", VA = "0xCAA1D4")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DE998", Offset = "0x8DE998")]
		public void ForceNullReference()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0xCAA208", Offset = "0xCAA208", VA = "0xCAA208")]
		public DebugForceCrash()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class DebugHitQuality : MonoBehaviour
	{
		[Token(Token = "0x4000397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TMP_Text _text;

		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TMP_Text _distanceValue;

		[Token(Token = "0x600050D")]
		[Address(RVA = "0xCAA210", Offset = "0xCAA210", VA = "0xCAA210")]
		public void SetText(HitData.HitQualityType hitQualityType, HitData.HitStyleType styleType, float distance)
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0xCAA344", Offset = "0xCAA344", VA = "0xCAA344")]
		public DebugHitQuality()
		{
		}
	}
	[Token(Token = "0x200011C")]
	public class DebugRewardPanel : MonoBehaviour
	{
		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button buttonTemplate;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandState hand;

		[Token(Token = "0x400039B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandState otherHand;

		[Token(Token = "0x400039C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int rewardsPerTier;

		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private WeightedArmamentAugmentSet[] weightedSets;

		[NonSerialized]
		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<Button> buttons;

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xCAA34C", Offset = "0xCAA34C", VA = "0xCAA34C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xCAA350", Offset = "0xCAA350", VA = "0xCAA350")]
		private void Populate()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xCAA5CC", Offset = "0xCAA5CC", VA = "0xCAA5CC")]
		public void GiveRandomAugment()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xCAAAB0", Offset = "0xCAAAB0", VA = "0xCAAAB0")]
		public void GiveBuild(ArmamentAugmentBuild armamentAugmentBuild)
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xCAAD48", Offset = "0xCAAD48", VA = "0xCAAD48")]
		public DebugRewardPanel()
		{
		}
	}
	[Token(Token = "0x200011D")]
	public class DebugSceneLoader : MonoBehaviour
	{
		[Token(Token = "0x400039F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager LevelManager;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneReference Scene;

		[Token(Token = "0x6000514")]
		[Address(RVA = "0xCAADF0", Offset = "0xCAADF0", VA = "0xCAADF0")]
		public void LoadScene()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0xCAAE14", Offset = "0xCAAE14", VA = "0xCAAE14")]
		public void ReloadScene()
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0xCAAE64", Offset = "0xCAAE64", VA = "0xCAAE64")]
		public DebugSceneLoader()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class DebugWeaponMover : MonoBehaviour
	{
		[Token(Token = "0x2000494")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001D6E")]
			Update,
			[Token(Token = "0x4001D6F")]
			FixedUpdate,
			[Token(Token = "0x4001D70")]
			LateUpdate
		}

		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADC4", Offset = "0x8AADC4")]
		private sealed class <Start>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DebugWeaponMover <>4__this;

			[Token(Token = "0x1700041F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD1")]
				[Address(RVA = "0xCABAE0", Offset = "0xCABAE0", VA = "0xCABAE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000420")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD3")]
				[Address(RVA = "0xCABB48", Offset = "0xCABB48", VA = "0xCABB48", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0xCAAEF8", Offset = "0xCAAEF8", VA = "0xCAAEF8")]
			[DebuggerHidden]
			public <Start>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xCAB8F4", Offset = "0xCAB8F4", VA = "0xCAB8F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0xCAB8F8", Offset = "0xCAB8F8", VA = "0xCAB8F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0xCABAE8", Offset = "0xCABAE8", VA = "0xCABAE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UpdateMode _updateMode;

		[Token(Token = "0x40003A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40003A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8AF6B0", Offset = "0x8AF6B0")]
		private MecanimParameterReference _parameter;

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Armament _armament;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF718", Offset = "0x8AF718")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF718", Offset = "0x8AF718")]
		[SerializeField]
		private HandSpringRig _handSpringRigPrefab;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _handTransform;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FauxEnumAttribute", RVA = "0x8AF798", Offset = "0x8AF798")]
		[SerializeField]
		private int _palmFacing;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AF86C", Offset = "0x8AF86C")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AF86C", Offset = "0x8AF86C")]
		[SerializeField]
		private string _weaponStabTraveledDistance;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AF8CC", Offset = "0x8AF8CC")]
		[SerializeField]
		private string _weaponStabAverageSpeed;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AF908", Offset = "0x8AF908")]
		[SerializeField]
		private string _weaponSwingTraveledDistance;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8AF944", Offset = "0x8AF944")]
		[SerializeField]
		private string _weaponSwingAverageSpeed;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AF980", Offset = "0x8AF980")]
		private HandSpringRig <HandSpringRigInstance>k__BackingField;

		[Token(Token = "0x17000086")]
		public HandSpringRig HandSpringRigInstance
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0xCAAE6C", Offset = "0xCAAE6C", VA = "0xCAAE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE9A8", Offset = "0x8DE9A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000518")]
			[Address(RVA = "0xCAAE74", Offset = "0xCAAE74", VA = "0xCAAE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DE9B8", Offset = "0x8DE9B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xCAAE7C", Offset = "0xCAAE7C", VA = "0xCAAE7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DE9C8", Offset = "0x8DE9C8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xCAAF24", Offset = "0xCAAF24", VA = "0xCAAF24")]
		private void PrepareSprings()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xCAB2E4", Offset = "0xCAB2E4", VA = "0xCAB2E4")]
		private void InitializeSpring()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xCAB468", Offset = "0xCAB468", VA = "0xCAB468")]
		private void DoUpdate()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xCAB8AC", Offset = "0xCAB8AC", VA = "0xCAB8AC")]
		private void Update()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xCAB8BC", Offset = "0xCAB8BC", VA = "0xCAB8BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xCAB8D0", Offset = "0xCAB8D0", VA = "0xCAB8D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xCAB8E4", Offset = "0xCAB8E4", VA = "0xCAB8E4")]
		public DebugWeaponMover()
		{
		}
	}
	[Token(Token = "0x200011F")]
	public class StartupLoader : MonoBehaviour
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF990", Offset = "0x8AF990")]
		[SerializeField]
		private bool resourceLoad;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AF9DC", Offset = "0x8AF9DC")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AF9DC", Offset = "0x8AF9DC")]
		[SerializeField]
		private string playerLoopInitializerResPath;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFA4C", Offset = "0x8AFA4C")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AFA4C", Offset = "0x8AFA4C")]
		[SerializeField]
		private PlayerLoopInitializer initializer;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFAC4", Offset = "0x8AFAC4")]
		[SerializeField]
		private float onGameReadyDelay;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFB10", Offset = "0x8AFB10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8AFB10", Offset = "0x8AFB10")]
		[SerializeField]
		private UnityEvent onGameReady;

		[NonSerialized]
		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float elapsed;

		[NonSerialized]
		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool executed;

		[NonSerialized]
		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float startTime;

		[NonSerialized]
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool done;

		[NonSerialized]
		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResourceRequest req;

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xCABB50", Offset = "0xCABB50", VA = "0xCABB50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xCABC70", Offset = "0xCABC70", VA = "0xCABC70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xCABFC8", Offset = "0xCABFC8", VA = "0xCABFC8")]
		public StartupLoader()
		{
		}
	}
}
namespace SG.Claymore.WeaponTracking
{
	[Token(Token = "0x2000120")]
	public class ArmLengthConstraint : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		public enum UpdateType
		{
			[Token(Token = "0x4001D75")]
			Normal,
			[Token(Token = "0x4001D76")]
			Fixed
		}

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFB80", Offset = "0x8AFB80")]
		public Transform Anchor;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFBB8", Offset = "0x8AFBB8")]
		public Rigidbody Weapon;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateType UpdateMode;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ClaymoreAnimCurve TetherForceOverDistance;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool ForceMaxDist;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float dist;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float force;

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xCA3B0C", Offset = "0xCA3B0C", VA = "0xCA3B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xCA3D7C", Offset = "0xCA3D7C", VA = "0xCA3D7C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xCA3B1C", Offset = "0xCA3B1C", VA = "0xCA3B1C")]
		private void UpdateWeaponTethering()
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xCA3D90", Offset = "0xCA3D90", VA = "0xCA3D90")]
		private Vector3 DirTowardsAnchor()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xCA3F3C", Offset = "0xCA3F3C", VA = "0xCA3F3C")]
		public ArmLengthConstraint()
		{
		}
	}
	[Token(Token = "0x2000121")]
	public class CenterOfMassAssignment : MonoBehaviour
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody Body;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform CenterOfMass;

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xCA3F44", Offset = "0xCA3F44", VA = "0xCA3F44")]
		private void Start()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xCA3F48", Offset = "0xCA3F48", VA = "0xCA3F48")]
		public void UpdateCenterOfMass()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xCA3FAC", Offset = "0xCA3FAC", VA = "0xCA3FAC")]
		public CenterOfMassAssignment()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class ExtraGravity : MonoBehaviour
	{
		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody AppliedBody;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform TrackedTarget;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform OptionalForcePoint;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ClaymoreAnimCurve ExtraGravityOverVerticalDistance;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float vertDistance;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float force;

		[Token(Token = "0x600052C")]
		[Address(RVA = "0xCA407C", Offset = "0xCA407C", VA = "0xCA407C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xCA428C", Offset = "0xCA428C", VA = "0xCA428C")]
		public ExtraGravity()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public class HelperSpringFollow : MonoBehaviour
	{
		[Token(Token = "0x2000497")]
		public enum BlendModeType
		{
			[Token(Token = "0x4001D78")]
			Blended,
			[Token(Token = "0x4001D79")]
			ForceRest,
			[Token(Token = "0x4001D7A")]
			ForceSwing,
			[Token(Token = "0x4001D7B")]
			Disabled
		}

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFBF0", Offset = "0x8AFBF0")]
		public VelocityTracker TrackedObject;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurableJoint CoreJoint;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody ConnectedBody;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlendModeType BlendMode;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool StartEnabled;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFC28", Offset = "0x8AFC28")]
		public float BlendTimeToSwing;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float BlendTimeToRest;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ClaymoreAnimCurve CoreSpringBlendOverVelocity;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float VelocitySampleInterval;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool ShowDebugGravityOverridePercent;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool coreBlendDirty;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		private bool coreMultDirty;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float targetCoreBlend;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentCoreBlendPercent;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private WeaponDriveSet currentCoreSpring;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFC60", Offset = "0x8AFC60")]
		public bool UseGravityDampOverride;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AFC98", Offset = "0x8AFC98")]
		public Transform WeaponSamplePosition;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AFCD0", Offset = "0x8AFCD0")]
		public Transform DriverSamplePosition;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AFD08", Offset = "0x8AFD08")]
		public WeaponDrive Overriding_Y_Drive;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8AFD40", Offset = "0x8AFD40")]
		public ClaymoreAnimCurve GravityDampPercent_Over_Distance;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float prevGravityOverridePercent;

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float gravityOverridePercent;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float prevDriverHeight;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFD78", Offset = "0x8AFD78")]
		public WeaponDriveSet CoreSpring_AtRest;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public WeaponDriveSet CoreSpring_Swing;

		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFDB0", Offset = "0x8AFDB0")]
		public bool UseTwoHandMultipliers;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public WeaponDrive TwoHand_LinearMult;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		public WeaponDrive TwoHand_AngleYZMult;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private WeaponDrive global_LinearMult;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private WeaponDrive global_AngleYZMult;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private WeaponLimit global_linearLimitMult;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private WeaponLimit global_angleLimitMult;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool constraintsActive;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private ConfigurableJointMotion xRot;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private ConfigurableJointMotion yRot;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private ConfigurableJointMotion zRot;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Vector3 originalLocalPosition;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Quaternion originalLocalRotation;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private bool isEnabled;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		private bool initialized;

		[Token(Token = "0x17000087")]
		public bool IsEnabled
		{
			[Token(Token = "0x600052E")]
			[Address(RVA = "0xCA4294", Offset = "0xCA4294", VA = "0xCA4294")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xCA429C", Offset = "0xCA429C", VA = "0xCA429C")]
		public void SetEnabled(bool enabled, Rigidbody target)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xCA44A4", Offset = "0xCA44A4", VA = "0xCA44A4")]
		public void Start()
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xCA4534", Offset = "0xCA4534", VA = "0xCA4534")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xCA4C18", Offset = "0xCA4C18", VA = "0xCA4C18")]
		private void UpdateCoreMultipliers()
		{
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xCA4D08", Offset = "0xCA4D08", VA = "0xCA4D08")]
		public void SetJointConstraintsDisabled(bool isDisabled)
		{
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xCA4EC8", Offset = "0xCA4EC8", VA = "0xCA4EC8")]
		public bool IsJointEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000535")]
		[Address(RVA = "0xCA4ED8", Offset = "0xCA4ED8", VA = "0xCA4ED8")]
		public void SetJointDisabled(bool isDisabled)
		{
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xCA4F40", Offset = "0xCA4F40", VA = "0xCA4F40")]
		public void ForceDataRefresh()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xCA4F78", Offset = "0xCA4F78", VA = "0xCA4F78")]
		public void SetMultipliers(in WeaponDrive newLinearMult, in WeaponDrive newAngleMult)
		{
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xCA5124", Offset = "0xCA5124", VA = "0xCA5124")]
		public void SetLinearLimitMultiplier(in WeaponLimit linearLimit)
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xCA5294", Offset = "0xCA5294", VA = "0xCA5294")]
		public void SetAngleLimitMultiplier(in WeaponLimit angleLimit)
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xCA4C8C", Offset = "0xCA4C8C", VA = "0xCA4C8C")]
		private void ApplyLimitMultipliers()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xCA4BA0", Offset = "0xCA4BA0", VA = "0xCA4BA0")]
		private void AddTwoHandedMultipliers()
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xCA47E4", Offset = "0xCA47E4", VA = "0xCA47E4")]
		private void UpdateGravityDampOverride()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xCA46C0", Offset = "0xCA46C0", VA = "0xCA46C0")]
		private void UpdateTargetBlend()
		{
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0xCA4728", Offset = "0xCA4728", VA = "0xCA4728")]
		private void UpdateCurrentBlend()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xCA568C", Offset = "0xCA568C", VA = "0xCA568C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA2C", Offset = "0x8DEA2C")]
		public void PushRestData()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xCA5698", Offset = "0xCA5698", VA = "0xCA5698")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA64", Offset = "0x8DEA64")]
		public void PushSwingData()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xCA56A4", Offset = "0xCA56A4", VA = "0xCA56A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEA9C", Offset = "0x8DEA9C")]
		public void ApplyJointToRestDrive()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xCA5814", Offset = "0xCA5814", VA = "0xCA5814")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DEAD4", Offset = "0x8DEAD4")]
		public void ApplyJointToSwingDrive()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xCA5820", Offset = "0xCA5820", VA = "0xCA5820")]
		public HelperSpringFollow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000124")]
	public class ClaymoreAnimCurve
	{
		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve Curve;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinY;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxY;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float MinX;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MaxX;

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xCA3FB4", Offset = "0xCA3FB4", VA = "0xCA3FB4")]
		public void SetValues(AnimationCurve newCurve, float minX, float maxX, float minY, float maxY)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xCA3E88", Offset = "0xCA3E88", VA = "0xCA3E88")]
		public float Evaluate(float currentX)
		{
			return default(float);
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xCA4004", Offset = "0xCA4004", VA = "0xCA4004")]
		public ClaymoreAnimCurve()
		{
		}
	}
	[Token(Token = "0x2000125")]
	public class HistoricalLagFollow : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		public enum AnimBlendType
		{
			[Token(Token = "0x4001D7D")]
			Blended,
			[Token(Token = "0x4001D7E")]
			ForceMin,
			[Token(Token = "0x4001D7F")]
			ForceMax
		}

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFDE8", Offset = "0x8AFDE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFDE8", Offset = "0x8AFDE8")]
		public VelocityTracker HandleTracker;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFE48", Offset = "0x8AFE48")]
		public VelocityTracker WeaponTipTracker;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFE80", Offset = "0x8AFE80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFE80", Offset = "0x8AFE80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8AFE80", Offset = "0x8AFE80")]
		public float LagGrowPercent;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFEF8", Offset = "0x8AFEF8")]
		public float LagDecayPerSecond;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFF30", Offset = "0x8AFF30")]
		public float VelocitySampleTime;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFF68", Offset = "0x8AFF68")]
		public float InterpolationTime;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8AFFA0", Offset = "0x8AFFA0")]
		public AnimBlendType AnimBlend;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8AFFD8", Offset = "0x8AFFD8")]
		public ClaymoreAnimCurve TargetLagOverVelocity;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float targetLag;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float currentLag;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float currentVelocity;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float debugPeakVelocity;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float debugPeakTargetLag;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float debugPeakCurrentLag;

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xCA5890", Offset = "0xCA5890", VA = "0xCA5890")]
		private void Update()
		{
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xCA59DC", Offset = "0xCA59DC", VA = "0xCA59DC")]
		private void UpdateVelocities()
		{
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0xCA5A44", Offset = "0xCA5A44", VA = "0xCA5A44")]
		private void UpdateTargetLag()
		{
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xCA5AD0", Offset = "0xCA5AD0", VA = "0xCA5AD0")]
		private void UpdateCurrentLag()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xCA60D0", Offset = "0xCA60D0", VA = "0xCA60D0")]
		public HistoricalLagFollow()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class HistoricalLagFollowAlternate : MonoBehaviour
	{
		[Token(Token = "0x2000499")]
		public enum XValueType
		{
			[Token(Token = "0x4001D81")]
			Velocity,
			[Token(Token = "0x4001D82")]
			Acceleration
		}

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0010", Offset = "0x8B0010")]
		public bool Active;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0048", Offset = "0x8B0048")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0048", Offset = "0x8B0048")]
		public VelocityTracker HandleTracker;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B00A8", Offset = "0x8B00A8")]
		public VelocityTracker TrackedVelocity;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B00E0", Offset = "0x8B00E0")]
		public float MaxLagInSeconds;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MinLagInSeconds;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public XValueType CurveMode;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ClaymoreAnimCurve LagGainOverVelocity;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0118", Offset = "0x8B0118")]
		public float LagDecayPerSecond;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0150", Offset = "0x8B0150")]
		public float VelocitySampleTime;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0188", Offset = "0x8B0188")]
		public float InterpolationTime;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float currentLagGainPerSecond;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float currentLag;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float currentVelocity;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float debugPeakVelocity;

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xCA60F0", Offset = "0xCA60F0", VA = "0xCA60F0")]
		public void ClearTrackerHistories()
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xCA617C", Offset = "0xCA617C", VA = "0xCA617C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xCA6380", Offset = "0xCA6380", VA = "0xCA6380")]
		private void UpdateVelocities()
		{
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xCA63F8", Offset = "0xCA63F8", VA = "0xCA63F8")]
		private void UpdateLagGainRate()
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xCA6564", Offset = "0xCA6564", VA = "0xCA6564")]
		private void ApplyLagToCurrent()
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xCA671C", Offset = "0xCA671C", VA = "0xCA671C")]
		public HistoricalLagFollowAlternate()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public class LockTransformRotation : MonoBehaviour
	{
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xCA6744", Offset = "0xCA6744", VA = "0xCA6744")]
		private void Update()
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0xCA6848", Offset = "0xCA6848", VA = "0xCA6848")]
		public LockTransformRotation()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class SpringGravityCorrection : MonoBehaviour
	{
		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody TestBody;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform SamplePoint;

		[Token(Token = "0x6000554")]
		[Address(RVA = "0xCA6850", Offset = "0xCA6850", VA = "0xCA6850")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0xCA68BC", Offset = "0xCA68BC", VA = "0xCA68BC")]
		public SpringGravityCorrection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000129")]
	public struct WeaponDriveSet
	{
		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponDrive SpringDrive_X;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WeaponDrive SpringDrive_Y;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponDrive SpringDrive_Z;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WeaponDrive TorqueDrive_X;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WeaponDrive TorqueDrive_YZ;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WeaponLimit LinearLimit;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WeaponLimit AngularLimit_Y;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public WeaponLimit AngularLimit_Z;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly WeaponDriveSet Null;

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x967CB4", Offset = "0x967CB4", VA = "0x967CB4")]
		public void SetToLerp(in WeaponDriveSet A, in WeaponDriveSet B, float percent)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x967CBC", Offset = "0x967CBC", VA = "0x967CBC")]
		public void CopySettingsFrom(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x967CC4", Offset = "0x967CC4", VA = "0x967CC4")]
		public void SetAllSpringDrives(in WeaponDrive newDrive)
		{
		}

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x967CF8", Offset = "0x967CF8", VA = "0x967CF8")]
		public void SetYZLimits(float newLimit)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x967D04", Offset = "0x967D04", VA = "0x967D04")]
		public void PushAllToJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x967D0C", Offset = "0x967D0C", VA = "0x967D0C")]
		public void PushAngleDrivesToJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x967D14", Offset = "0x967D14", VA = "0x967D14")]
		public void PushLinearDrivesToJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x967D1C", Offset = "0x967D1C", VA = "0x967D1C")]
		public void PushLimitsToJoint(ConfigurableJoint joint)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012A")]
	public struct WeaponLimit
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Limit;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Bounciness;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ContactDistance;

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x967D24", Offset = "0x967D24", VA = "0x967D24")]
		public WeaponLimit(float newLimit, float newBounce, float newContact)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x967D30", Offset = "0x967D30", VA = "0x967D30")]
		public void ApplyLimitsAsMultipliers(in WeaponLimit mults)
		{
		}

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x967D60", Offset = "0x967D60", VA = "0x967D60")]
		public void CopySettingsFrom(in WeaponLimit limit)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x967D7C", Offset = "0x967D7C", VA = "0x967D7C")]
		public void CopySettingsFrom(in SoftJointLimit limit)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x967D84", Offset = "0x967D84", VA = "0x967D84")]
		public bool IsApproximatelyEqualTo(in WeaponLimit other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x967D8C", Offset = "0x967D8C", VA = "0x967D8C")]
		public SoftJointLimit ToSoftJointLimit()
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x967D94", Offset = "0x967D94", VA = "0x967D94")]
		public void SetToLerp(in WeaponLimit A, in WeaponLimit B, float percent)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012B")]
	public struct WeaponDrive
	{
		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Spring;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Damper;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Force;

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x967C18", Offset = "0x967C18", VA = "0x967C18")]
		public WeaponDrive(float newSpring, float newDamper, float newForce)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x967C24", Offset = "0x967C24", VA = "0x967C24")]
		public WeaponDrive(in JointDrive drive)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x967C2C", Offset = "0x967C2C", VA = "0x967C2C")]
		public bool IsApproximatelyEqualTo(in WeaponDrive other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x967C34", Offset = "0x967C34", VA = "0x967C34")]
		public void ApplyDriveAsMultipliers(in WeaponDrive mult)
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x967C64", Offset = "0x967C64", VA = "0x967C64")]
		public void CopySettingsFrom(in WeaponDrive wpnDrive)
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x967C80", Offset = "0x967C80", VA = "0x967C80")]
		public void CopySettingsFrom(in JointDrive drive)
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x967C88", Offset = "0x967C88", VA = "0x967C88")]
		public void SetToLerp(in WeaponDrive start, in WeaponDrive end, float t)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x967C90", Offset = "0x967C90", VA = "0x967C90")]
		public JointDrive ToDrive()
		{
			return default(JointDrive);
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x967C9C", Offset = "0x967C9C", VA = "0x967C9C")]
		public JointDrive ToDrive(float multiplier)
		{
			return default(JointDrive);
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x967CA4", Offset = "0x967CA4", VA = "0x967CA4")]
		public JointDrive ToDrive(float globalMultiplier, float springMult)
		{
			return default(JointDrive);
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x967CAC", Offset = "0x967CAC", VA = "0x967CAC")]
		public JointDrive ToDrive(float globalMultiplier, float springMult, float dampMult)
		{
			return default(JointDrive);
		}
	}
	[Serializable]
	[Token(Token = "0x200012C")]
	public struct WeaponSpring
	{
		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Spring;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Damper;

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x967D9C", Offset = "0x967D9C", VA = "0x967D9C")]
		public WeaponSpring(SoftJointLimitSpring newSpring)
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0x967DDC", Offset = "0x967DDC", VA = "0x967DDC")]
		public SoftJointLimitSpring ToSpring()
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0x967DE4", Offset = "0x967DE4", VA = "0x967DE4")]
		public SoftJointLimitSpring ToSpring(float mult)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x200012D")]
	public class SpringRig : MonoBehaviour
	{
		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B01C0", Offset = "0x8B01C0")]
		public ConfigurableJoint Spring;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody DrivingBody;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody DrivenBody;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B01F8", Offset = "0x8B01F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B01F8", Offset = "0x8B01F8")]
		public bool ApplyMassMultiplier;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ActivateOnStart;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool LimitMotion;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0258", Offset = "0x8B0258")]
		public WeaponSpring LinearSpring;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WeaponSpring AngularXSpring;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WeaponSpring AngularYZSpring;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0290", Offset = "0x8B0290")]
		public WeaponDrive xMotion;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public WeaponDrive yMotion;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public WeaponDrive zMotion;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WeaponDrive angular_xMotion;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public WeaponDrive angular_yzMotion;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public WeaponDrive slerpMotion;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool active;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private JointDrive zeroConfig;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float springMult;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float currentMult;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float dampMult;

		[Token(Token = "0x17000088")]
		public bool isActive
		{
			[Token(Token = "0x6000573")]
			[Address(RVA = "0xCA69A8", Offset = "0xCA69A8", VA = "0xCA69A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public float SpringMult
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0xCA69B0", Offset = "0xCA69B0", VA = "0xCA69B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000575")]
		[Address(RVA = "0xCA69B8", Offset = "0xCA69B8", VA = "0xCA69B8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0xCA69C8", Offset = "0xCA69C8", VA = "0xCA69C8")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0xCA6C50", Offset = "0xCA6C50", VA = "0xCA6C50")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0xCA6D50", Offset = "0xCA6D50", VA = "0xCA6D50")]
		public void UpdateDrives()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0xCA6D74", Offset = "0xCA6D74", VA = "0xCA6D74")]
		public float GetLinearLimit()
		{
			return default(float);
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0xCA6DBC", Offset = "0xCA6DBC", VA = "0xCA6DBC")]
		public void UpdateLinearLimit(float limitValue)
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xCA6E38", Offset = "0xCA6E38", VA = "0xCA6E38")]
		public void ApplyBonusMultiplier(float newMult)
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0xCA6E70", Offset = "0xCA6E70", VA = "0xCA6E70")]
		public void ApplyDampMultiplier(float newDamp)
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0xCA6EA8", Offset = "0xCA6EA8", VA = "0xCA6EA8")]
		public void ApplySpringAndDampMult(float newSpringMult, float newDampMult)
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xCA6F0C", Offset = "0xCA6F0C", VA = "0xCA6F0C")]
		private void UpdateInternalMultiplier()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xCA6BDC", Offset = "0xCA6BDC", VA = "0xCA6BDC")]
		private void ApplyJointSprings()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xCA6AE4", Offset = "0xCA6AE4", VA = "0xCA6AE4")]
		private void ApplyJointDrives()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xCA6CA4", Offset = "0xCA6CA4", VA = "0xCA6CA4")]
		private void FreeJointDrives()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xCA701C", Offset = "0xCA701C", VA = "0xCA701C")]
		private void SetLinearJointConstraints(ConfigurableJointMotion motion)
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xCA6A84", Offset = "0xCA6A84", VA = "0xCA6A84")]
		private void SetJointConstraints(ConfigurableJointMotion motion)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xCA7074", Offset = "0xCA7074", VA = "0xCA7074")]
		public SpringRig()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012E")]
	public struct DualWeaponDrive
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponDrive AtRest;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WeaponDrive Swing;

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x967BC4", Offset = "0x967BC4", VA = "0x967BC4")]
		public DualWeaponDrive(WeaponDrive atRest, WeaponDrive swing)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200012F")]
	public struct DualWeaponLimit
	{
		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WeaponLimit AtRest;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WeaponLimit Swing;

		[Token(Token = "0x6000586")]
		[Address(RVA = "0x967BD4", Offset = "0x967BD4", VA = "0x967BD4")]
		public DualWeaponLimit(WeaponLimit atRest, WeaponLimit swing)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000130")]
	public class SpringImpact
	{
		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ImpactMagnitude;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WeaponDrive ImpactLinearSpringMultiplier;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WeaponLimit ImpactLinearLimitMult;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public WeaponDrive ImpactTipSpringMultiplier;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public WeaponLimit ImpactTipLimitMult;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WeaponDrive ImpactAngularSpringMultiplier;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WeaponLimit ImpactAngularLimitMult;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float ImpactRecoveryTime;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve ImpactRecoveryCurve;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static WeaponDrive baseSpringMultiplier;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static WeaponLimit baseLimitMultiplier;

		[NonSerialized]
		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WeaponDrive linearSpringMultiplier;

		[NonSerialized]
		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WeaponDrive angularSpringMultiplier;

		[NonSerialized]
		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public WeaponDrive tipSpringMultiplier;

		[NonSerialized]
		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public WeaponLimit linearLimitMultiplier;

		[NonSerialized]
		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public WeaponLimit angleLimitMultiplier;

		[NonSerialized]
		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public WeaponLimit tipLimitMultiplier;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private IEnumerator runningCoroutine;

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xCA68C4", Offset = "0xCA68C4", VA = "0xCA68C4")]
		public SpringImpact()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public enum TipSpringType
	{
		[Token(Token = "0x4000450")]
		Omni,
		[Token(Token = "0x4000451")]
		Separated
	}
	[Serializable]
	[Token(Token = "0x2000132")]
	public struct TrackedPos
	{
		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Velocity;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 ForwardZ;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 UpY;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float TimeStamp;

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x967BE4", Offset = "0x967BE4", VA = "0x967BE4")]
		public TrackedPos(Vector3 pos, Vector3 vel, Vector3 forward, Vector3 up, float time)
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class VelocityTracker : MonoBehaviour
	{
		[Token(Token = "0x4000457")]
		private const int MAX_TRACKED_DATA = 200;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform LocalRoot;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform Tracked;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float HistoryDepth;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool UseWorldPosition;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<TrackedPos> history;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 prevTrackedPos;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 trackedOffset;

		[Token(Token = "0x1700008A")]
		private Vector3 TrackedLocalPosition
		{
			[Token(Token = "0x600058B")]
			[Address(RVA = "0xCA70C8", Offset = "0xCA70C8", VA = "0xCA70C8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xCA6124", Offset = "0xCA6124", VA = "0xCA6124")]
		public void ClearHistory()
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xCA71B0", Offset = "0xCA71B0", VA = "0xCA71B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xCA7254", Offset = "0xCA7254", VA = "0xCA7254")]
		private void Start()
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xCA7340", Offset = "0xCA7340", VA = "0xCA7340")]
		private void Update()
		{
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xCA74D8", Offset = "0xCA74D8", VA = "0xCA74D8")]
		private TrackedPos SampleNewTrackedPos()
		{
			return default(TrackedPos);
		}

		[Token(Token = "0x6000590")]
		[Address(RVA = "0xCA76B4", Offset = "0xCA76B4", VA = "0xCA76B4")]
		private Vector3 GetLocalForward()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000591")]
		[Address(RVA = "0xCA76D0", Offset = "0xCA76D0", VA = "0xCA76D0")]
		private Vector3 GetLocalUp()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0xCA5BB8", Offset = "0xCA5BB8", VA = "0xCA5BB8")]
		public TrackedPos InterpolateBlendedHistory(float time, float envelope)
		{
			return default(TrackedPos);
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0xCA76EC", Offset = "0xCA76EC", VA = "0xCA76EC")]
		public TrackedPos InterpolateExactHistory(float time)
		{
			return default(TrackedPos);
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xCA7B8C", Offset = "0xCA7B8C", VA = "0xCA7B8C")]
		public Vector3 AverageUp(float envelope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0xCA7DD4", Offset = "0xCA7DD4", VA = "0xCA7DD4")]
		public Vector3 AverageForward(float envelope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0xCA53E4", Offset = "0xCA53E4", VA = "0xCA53E4")]
		public Vector3 AverageVelocity(float envelope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0xCA801C", Offset = "0xCA801C", VA = "0xCA801C")]
		public Vector3 AccelVector(float envelope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0xCA6608", Offset = "0xCA6608", VA = "0xCA6608")]
		public float Acceleration(float envelope)
		{
			return default(float);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0xCA8164", Offset = "0xCA8164", VA = "0xCA8164")]
		public Vector3 AveragePosition(float envelope)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0xCA8360", Offset = "0xCA8360", VA = "0xCA8360")]
		public VelocityTracker()
		{
		}
	}
}
namespace SG.Claymore.Visuals
{
	[Token(Token = "0x2000134")]
	public class ManualParticleEffectRuntime : ParticleEffectRuntime
	{
		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onPlay;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onEnd;

		[NonSerialized]
		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _trackingEnd;

		[Token(Token = "0x600059B")]
		[Address(RVA = "0xCA24B8", Offset = "0xCA24B8", VA = "0xCA24B8", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0xCA24F8", Offset = "0xCA24F8", VA = "0xCA24F8")]
		public void PlayAutoClear()
		{
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0xCA2548", Offset = "0xCA2548", VA = "0xCA2548")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xCA259C", Offset = "0xCA259C", VA = "0xCA259C", Slot = "7")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xCA25F8", Offset = "0xCA25F8", VA = "0xCA25F8", Slot = "8")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xCA25FC", Offset = "0xCA25FC", VA = "0xCA25FC", Slot = "9")]
		public override void StopAndClear()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xCA25A0", Offset = "0xCA25A0", VA = "0xCA25A0")]
		private void Shutdown()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xCA2678", Offset = "0xCA2678", VA = "0xCA2678")]
		public ManualParticleEffectRuntime()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class MeshEffectRuntime : VisualRuntime
	{
		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer meshRenderer;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool timed;

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float duration;

		[NonSerialized]
		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float startTime;

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xCA2688", Offset = "0xCA2688", VA = "0xCA2688", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xCA26D4", Offset = "0xCA26D4", VA = "0xCA26D4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xCA2734", Offset = "0xCA2734", VA = "0xCA2734", Slot = "7")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xCA2778", Offset = "0xCA2778", VA = "0xCA2778", Slot = "8")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xCA2738", Offset = "0xCA2738", VA = "0xCA2738")]
		private void Shutdown()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xCA277C", Offset = "0xCA277C", VA = "0xCA277C")]
		public MeshEffectRuntime()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class ParticleEffectRuntime : VisualRuntime
	{
		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ParticleSystem _particleSystem;

		[Token(Token = "0x1700008B")]
		public ParticleSystem ParticleSystem
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0xCA278C", Offset = "0xCA278C", VA = "0xCA278C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xCA2794", Offset = "0xCA2794", VA = "0xCA2794", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xCA27D0", Offset = "0xCA27D0", VA = "0xCA27D0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xCA281C", Offset = "0xCA281C", VA = "0xCA281C", Slot = "7")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xCA285C", Offset = "0xCA285C", VA = "0xCA285C", Slot = "8")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xCA2820", Offset = "0xCA2820", VA = "0xCA2820")]
		private void Shutdown()
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xCA2634", Offset = "0xCA2634", VA = "0xCA2634", Slot = "9")]
		public virtual void StopAndClear()
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xCA2680", Offset = "0xCA2680", VA = "0xCA2680")]
		public ParticleEffectRuntime()
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2050", Offset = "0x8A2050")]
	public class VFXController : EffectsController
	{
		[Token(Token = "0x200049A")]
		private sealed class VisualPoolMap : PoolMap
		{
			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly Transform _cachedRoot;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly int _instances;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private int _currentIndex;

			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly EffectRuntime[] _effectRuntimeInstances;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly EffectKeyData _effectDataKey;

			[Token(Token = "0x17000421")]
			public EffectKeyData EffectKeyData
			{
				[Token(Token = "0x6001BD4")]
				[Address(RVA = "0xCA3428", Offset = "0xCA3428", VA = "0xCA3428")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xCA2DD4", Offset = "0xCA2DD4", VA = "0xCA2DD4")]
			public VisualPoolMap(IEffectDatabaseEntry entry, EffectRuntime effectRuntimePrefab, Transform root)
			{
			}

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0xCA2964", Offset = "0xCA2964", VA = "0xCA2964")]
			public EffectRuntime GetNext()
			{
				return null;
			}

			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xCA3430", Offset = "0xCA3430", VA = "0xCA3430", Slot = "4")]
			public override void ResetParent()
			{
			}
		}

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B0378", Offset = "0x8B0378")]
		private readonly RemoteDebuggerConfiguration <DebuggerConfiguration>k__BackingField;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0388", Offset = "0x8B0388")]
		[AttributeAttribute(Name = "ResourceTypeAttribute", RVA = "0x8B0388", Offset = "0x8B0388")]
		[SerializeField]
		private SG.Claymore.ResourceLoading.AssetAddress[] debugAllDatabases;

		[NonSerialized]
		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "InjectedFeatureAttribute", RVA = "0x8B0420", Offset = "0x8B0420")]
		private VisualsDatabase _database;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private BoolVariable _vfxEnabled;

		[Token(Token = "0x1700008C")]
		public override RemoteDebuggerConfiguration DebuggerConfiguration
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0xCA2860", Offset = "0xCA2860", VA = "0xCA2860", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEB0C", Offset = "0x8DEB0C")]
			get
			{
				return default(RemoteDebuggerConfiguration);
			}
		}

		[Token(Token = "0x1700008D")]
		public VisualsDatabase[] DebugAllDatabases
		{
			[Token(Token = "0x60005B2")]
			[Address(RVA = "0xCA286C", Offset = "0xCA286C", VA = "0xCA286C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		public override EffectsDatabase Database
		{
			[Token(Token = "0x60005B3")]
			[Address(RVA = "0xCA28BC", Offset = "0xCA28BC", VA = "0xCA28BC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xCA28C4", Offset = "0xCA28C4", VA = "0xCA28C4", Slot = "14")]
		protected override EffectRuntime GetEffect(EffectKeyData request)
		{
			return null;
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0xCA29B8", Offset = "0xCA29B8", VA = "0xCA29B8", Slot = "15")]
		protected override bool CheckIsEnabled(EffectKeyData effectKeyData)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xCA2AD4", Offset = "0xCA2AD4", VA = "0xCA2AD4", Slot = "13")]
		protected override void CreatePool(Transform root)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xCA337C", Offset = "0xCA337C", VA = "0xCA337C")]
		public VFXController()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A20B0", Offset = "0x8A20B0")]
	public class VisualKeyData : EffectKeyData
	{
		[Token(Token = "0x1700008F")]
		protected override string DefaultControllerGuid
		{
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xCA34FC", Offset = "0xCA34FC", VA = "0xCA34FC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xCA3544", Offset = "0xCA3544", VA = "0xCA3544")]
		public VisualKeyData()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public abstract class VisualRuntime : EffectRuntime
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xCA2784", Offset = "0xCA2784", VA = "0xCA2784")]
		protected VisualRuntime()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013A")]
	public class VisualDatabaseEntry : EffectDatabaseEntry<VisualKeyData>
	{
		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8B0444", Offset = "0x8B0444")]
		public VisualRuntime EffectRuntimePrefab;

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xCA34AC", Offset = "0xCA34AC", VA = "0xCA34AC")]
		public VisualDatabaseEntry()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2110", Offset = "0x8A2110")]
	public sealed class VisualsDatabase : EffectsDatabase<VisualDatabaseEntry>
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xCA354C", Offset = "0xCA354C", VA = "0xCA354C")]
		public EffectRuntime GetRuntimePrefab(VisualKeyData key)
		{
			return null;
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xCA3658", Offset = "0xCA3658", VA = "0xCA3658")]
		public VisualDatabaseEntry GetEntry(VisualKeyData key)
		{
			return null;
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0xCA375C", Offset = "0xCA375C", VA = "0xCA375C")]
		public void AddNewEntry(VisualKeyData key, VisualRuntime runtime)
		{
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xCA3828", Offset = "0xCA3828", VA = "0xCA3828")]
		private bool Contains(VisualKeyData key)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xCA3908", Offset = "0xCA3908", VA = "0xCA3908")]
		public bool Contains(string keyName)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xCA39C8", Offset = "0xCA39C8", VA = "0xCA39C8")]
		public VisualKeyData GetKey(string keyName)
		{
			return null;
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xCA3ABC", Offset = "0xCA3ABC", VA = "0xCA3ABC")]
		public VisualsDatabase()
		{
		}
	}
}
namespace SG.Claymore.UI
{
	[Token(Token = "0x200013C")]
	public class CalibrationScreen : MonoBehaviour
	{
		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADD4", Offset = "0x8AADD4")]
		private sealed class <CalibrationCloseScreen>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CalibrationScreen <>4__this;

			[Token(Token = "0x17000422")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDB")]
				[Address(RVA = "0xAF1720", Offset = "0xAF1720", VA = "0xAF1720", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000423")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BDD")]
				[Address(RVA = "0xAF1788", Offset = "0xAF1788", VA = "0xAF1788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0xAF1274", Offset = "0xAF1274", VA = "0xAF1274")]
			[DebuggerHidden]
			public <CalibrationCloseScreen>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xAF1644", Offset = "0xAF1644", VA = "0xAF1644", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0xAF1648", Offset = "0xAF1648", VA = "0xAF1648", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0xAF1728", Offset = "0xAF1728", VA = "0xAF1728", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADE4", Offset = "0x8AADE4")]
		private sealed class <FadePanel>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CanvasGroup panel;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool active;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public CalibrationScreen <>4__this;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float targetAlpha;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <speed>5__2;

			[Token(Token = "0x17000424")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0xAF19D0", Offset = "0xAF19D0", VA = "0xAF19D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000425")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE3")]
				[Address(RVA = "0xAF1A38", Offset = "0xAF1A38", VA = "0xAF1A38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0xAF1354", Offset = "0xAF1354", VA = "0xAF1354")]
			[DebuggerHidden]
			public <FadePanel>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0xAF1790", Offset = "0xAF1790", VA = "0xAF1790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0xAF1794", Offset = "0xAF1794", VA = "0xAF1794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0xAF19D8", Offset = "0xAF19D8", VA = "0xAF19D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0454", Offset = "0x8B0454")]
		[SerializeField]
		private GlobalEvent onRequestCalibration;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B04A0", Offset = "0x8B04A0")]
		[SerializeField]
		private CanvasGroup modeSelectPanel;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B04EC", Offset = "0x8B04EC")]
		[SerializeField]
		private float panelTransitionDuration;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable isSeated;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3Variable worldForward;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private XRTrackedNode chestNode;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private XRPlatformManager platform;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine modeSelectCoroutine;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine reminderPanelCoroutine;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<Button> modeSelectButtons;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool interstitialIsSeated;

		[Token(Token = "0x17000090")]
		public Vector3 WorldForward
		{
			[Token(Token = "0x60005C3")]
			[Address(RVA = "0xAF0B74", Offset = "0xAF0B74", VA = "0xAF0B74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xAF0BF8", Offset = "0xAF0BF8", VA = "0xAF0BF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xAF0CE4", Offset = "0xAF0CE4", VA = "0xAF0CE4")]
		private void Start()
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xAF0CE8", Offset = "0xAF0CE8", VA = "0xAF0CE8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xAF0DDC", Offset = "0xAF0DDC", VA = "0xAF0DDC")]
		public void ShowModeSelect()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xAF103C", Offset = "0xAF103C", VA = "0xAF103C")]
		public void SaveWorldForward()
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xAF116C", Offset = "0xAF116C", VA = "0xAF116C")]
		public void BackToModeSelect()
		{
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xAF1170", Offset = "0xAF1170", VA = "0xAF1170")]
		public void RequestCalibration(bool isSeated)
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xAF1220", Offset = "0xAF1220", VA = "0xAF1220")]
		public void RequestCalibration()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xAF11A4", Offset = "0xAF11A4", VA = "0xAF11A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEB1C", Offset = "0x8DEB1C")]
		private IEnumerator CalibrationCloseScreen()
		{
			return null;
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0xAF0E60", Offset = "0xAF0E60", VA = "0xAF0E60")]
		private Coroutine StartFadePanel(CanvasGroup panel, float targetAlpha, bool active)
		{
			return null;
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xAF12A0", Offset = "0xAF12A0", VA = "0xAF12A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEB80", Offset = "0x8DEB80")]
		private IEnumerator FadePanel(CanvasGroup panel, float targetAlpha, bool active)
		{
			return null;
		}

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xAF1380", Offset = "0xAF1380", VA = "0xAF1380")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0xAF0F98", Offset = "0xAF0F98", VA = "0xAF0F98")]
		private void SetButtonsInteractable(List<Button> btns, bool interactable)
		{
		}

		[Token(Token = "0x60005D1")]
		[Address(RVA = "0xAF1518", Offset = "0xAF1518", VA = "0xAF1518")]
		private void FinalCleanup()
		{
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0xAF1634", Offset = "0xAF1634", VA = "0xAF1634")]
		public CalibrationScreen()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200013D")]
	public struct CashOutIconConfig
	{
		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RoomCompletionHistory.RoomData completionData;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool shouldAnimate;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float animDelay;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int enemyPayout;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isCurrentRoom;
	}
	[Token(Token = "0x200013E")]
	public class CashOutIcon : MonoBehaviour
	{
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AADF4", Offset = "0x8AADF4")]
		private sealed class <AnimateIn>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutIcon <>4__this;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <lastTime>5__2;

			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsed>5__3;

			[Token(Token = "0x17000426")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE7")]
				[Address(RVA = "0xAF2754", Offset = "0xAF2754", VA = "0xAF2754", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000427")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE9")]
				[Address(RVA = "0xAF27BC", Offset = "0xAF27BC", VA = "0xAF27BC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0xAF209C", Offset = "0xAF209C", VA = "0xAF209C")]
			[DebuggerHidden]
			public <AnimateIn>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0xAF22EC", Offset = "0xAF22EC", VA = "0xAF22EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0xAF22F0", Offset = "0xAF22F0", VA = "0xAF22F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xAF275C", Offset = "0xAF275C", VA = "0xAF275C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] bossCrown;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image backgroundRenderer;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image bossStampRenderer;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image currentRoomIndicator;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B05B8", Offset = "0x8B05B8")]
		[SerializeField]
		private Sprite bossBG;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite basicBG;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject crystalRewardGroup;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI rewardMotes;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI roomMotes;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool showCurrentRoomIndicator;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0640", Offset = "0x8B0640")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B068C", Offset = "0x8B068C")]
		private MecanimParameterReference successSlashBoolParam;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B06E4", Offset = "0x8B06E4")]
		private MecanimParameterReference playParam;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0730", Offset = "0x8B0730")]
		private MecanimParameterReference resetParam;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B0768", Offset = "0x8B0768")]
		[SerializeField]
		protected AudioKeyData bossSFXKey;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		protected AudioKeyData failureSFXKey;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		protected float aetherGainSFXDelay;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		protected AudioKeyData basicAetherGainSFXKey;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected AudioKeyData rewardAetherGainSFXKey;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool crushedMoteAugment;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private CashOutIconConfig cashOutConfig;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float speed;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool isInitialized;

		[Token(Token = "0x17000091")]
		private float DurationSpeedMultiplier
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0xAF1B88", Offset = "0xAF1B88", VA = "0xAF1B88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000004")]
		public event Action<CashOutIconConfig, int> onMotesRevealed
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0xAF1A40", Offset = "0xAF1A40", VA = "0xAF1A40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBE4", Offset = "0x8DEBE4")]
			add
			{
			}
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0xAF1AE4", Offset = "0xAF1AE4", VA = "0xAF1AE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEBF4", Offset = "0x8DEBF4")]
			remove
			{
			}
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xAF1B98", Offset = "0xAF1B98", VA = "0xAF1B98")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0xAF1D38", Offset = "0xAF1D38", VA = "0xAF1D38")]
		public void Initialize(CashOutIconConfig config)
		{
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0xAF2040", Offset = "0xAF2040", VA = "0xAF2040")]
		public void ResetIcon()
		{
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0xAF1FB4", Offset = "0xAF1FB4", VA = "0xAF1FB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEC04", Offset = "0x8DEC04")]
		private IEnumerator AnimateIn(float delay)
		{
			return null;
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0xAF20C8", Offset = "0xAF20C8", VA = "0xAF20C8")]
		public void SetSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0xAF20FC", Offset = "0xAF20FC", VA = "0xAF20FC")]
		public void HandleMotesRevealed()
		{
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0xAF2260", Offset = "0xAF2260", VA = "0xAF2260")]
		public CashOutIcon()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class CashOutScreen : MonoBehaviour, IResourceLoadHandler<CashOutView>, IResourceLoadHandler
	{
		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE04", Offset = "0x8AAE04")]
		private sealed class <Start>d__80 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutScreen <>4__this;

			[Token(Token = "0x17000428")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BED")]
				[Address(RVA = "0xAF55D8", Offset = "0xAF55D8", VA = "0xAF55D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000429")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BEF")]
				[Address(RVA = "0xAF5640", Offset = "0xAF5640", VA = "0xAF5640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xAF2EF0", Offset = "0xAF2EF0", VA = "0xAF2EF0")]
			[DebuggerHidden]
			public <Start>d__80(int <>1__state)
			{
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xAF550C", Offset = "0xAF550C", VA = "0xAF550C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0xAF5510", Offset = "0xAF5510", VA = "0xAF5510", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0xAF55E0", Offset = "0xAF55E0", VA = "0xAF55E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE14", Offset = "0x8AAE14")]
		private sealed class <BeginCashoutCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutScreen <>4__this;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lastTime>5__2;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsed>5__3;

			[Token(Token = "0x1700042A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF3")]
				[Address(RVA = "0xAF4FFC", Offset = "0xAF4FFC", VA = "0xAF4FFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF5")]
				[Address(RVA = "0xAF5064", Offset = "0xAF5064", VA = "0xAF5064", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0xAF355C", Offset = "0xAF355C", VA = "0xAF355C")]
			[DebuggerHidden]
			public <BeginCashoutCoroutine>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0xAF4C18", Offset = "0xAF4C18", VA = "0xAF4C18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0xAF4C1C", Offset = "0xAF4C1C", VA = "0xAF4C1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0xAF5004", Offset = "0xAF5004", VA = "0xAF5004", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE24", Offset = "0x8AAE24")]
		private sealed class <DelayedPlayEarned>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutScreen <>4__this;

			[Token(Token = "0x4001DA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float lastIconDelay;

			[Token(Token = "0x1700042C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF9")]
				[Address(RVA = "0xAF5184", Offset = "0xAF5184", VA = "0xAF5184", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFB")]
				[Address(RVA = "0xAF51EC", Offset = "0xAF51EC", VA = "0xAF51EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xAF3FE8", Offset = "0xAF3FE8", VA = "0xAF3FE8")]
			[DebuggerHidden]
			public <DelayedPlayEarned>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xAF506C", Offset = "0xAF506C", VA = "0xAF506C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xAF5070", Offset = "0xAF5070", VA = "0xAF5070", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0xAF518C", Offset = "0xAF518C", VA = "0xAF518C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE34", Offset = "0x8AAE34")]
		private sealed class <SetReadyForCashOut>d__90 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutScreen <>4__this;

			[Token(Token = "0x4001DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float totalDelay;

			[Token(Token = "0x4001DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <lastTime>5__2;

			[Token(Token = "0x4001DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsed>5__3;

			[Token(Token = "0x1700042E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFF")]
				[Address(RVA = "0xAF549C", Offset = "0xAF549C", VA = "0xAF549C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700042F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C01")]
				[Address(RVA = "0xAF5504", Offset = "0xAF5504", VA = "0xAF5504", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BFC")]
			[Address(RVA = "0xAF40A0", Offset = "0xAF40A0", VA = "0xAF40A0")]
			[DebuggerHidden]
			public <SetReadyForCashOut>d__90(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xAF5358", Offset = "0xAF5358", VA = "0xAF5358", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xAF535C", Offset = "0xAF535C", VA = "0xAF535C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C00")]
			[Address(RVA = "0xAF54A4", Offset = "0xAF54A4", VA = "0xAF54A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE44", Offset = "0x8AAE44")]
		private sealed class <DelayedStartFlame>d__97 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CashOutScreen <>4__this;

			[Token(Token = "0x4001DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <lastTime>5__2;

			[Token(Token = "0x4001DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <elapsed>5__3;

			[Token(Token = "0x17000430")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C05")]
				[Address(RVA = "0xAF52E8", Offset = "0xAF52E8", VA = "0xAF52E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000431")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C07")]
				[Address(RVA = "0xAF5350", Offset = "0xAF5350", VA = "0xAF5350", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xAF479C", Offset = "0xAF479C", VA = "0xAF479C")]
			[DebuggerHidden]
			public <DelayedStartFlame>d__97(int <>1__state)
			{
			}

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xAF51F4", Offset = "0xAF51F4", VA = "0xAF51F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xAF51F8", Offset = "0xAF51F8", VA = "0xAF51F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xAF52F0", Offset = "0xAF52F0", VA = "0xAF52F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE54", Offset = "0x8AAE54")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__98_0;

			[Token(Token = "0x4001DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<object> <>9__98_1;

			[Token(Token = "0x6001C09")]
			[Address(RVA = "0xAF4B00", Offset = "0xAF4B00", VA = "0xAF4B00")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xAF4B08", Offset = "0xAF4B08", VA = "0xAF4B08")]
			internal void <.ctor>b__98_0(object input)
			{
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xAF4B90", Offset = "0xAF4B90", VA = "0xAF4B90")]
			internal void <.ctor>b__98_1(object input)
			{
			}
		}

		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRPlatformManager platform;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0800", Offset = "0x8B0800")]
		[SerializeField]
		private ResourceRequestKey cashOutViewKey;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float distanceFromHead;

		[NonSerialized]
		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CashOutView cashOutView;

		[NonSerialized]
		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CashOutView visualPrefab;

		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B086C", Offset = "0x8B086C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B086C", Offset = "0x8B086C")]
		[SerializeField]
		private float playOnStartDelay;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B08DC", Offset = "0x8B08DC")]
		[SerializeField]
		private float playEarnedDelay;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0928", Offset = "0x8B0928")]
		[SerializeField]
		private float startFlameDelay;

		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0974", Offset = "0x8B0974")]
		[SerializeField]
		private float showRoomIconsDelay;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B09C0", Offset = "0x8B09C0")]
		[SerializeField]
		private AnimationCurve interIconDelayCurve;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0A0C", Offset = "0x8B0A0C")]
		[SerializeField]
		private float minStatusBarDur;

		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0A58", Offset = "0x8B0A58")]
		[SerializeField]
		private float maxStatusBarDur;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float riseAgainVisibilityDelay;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float cashoutFillToFinalFlameDelay;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0AC4", Offset = "0x8B0AC4")]
		[SerializeField]
		private float sceneProgressionDelay;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float moteTickRate;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B0B20", Offset = "0x8B0B20")]
		[SerializeField]
		private float anyKeyHoldDuration;

		[Token(Token = "0x40004A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float fastForwardSpeed;

		[Token(Token = "0x40004A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0B7C", Offset = "0x8B0B7C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0B7C", Offset = "0x8B0B7C")]
		[SerializeField]
		private MecanimParameterReference victoryBoolParam;

		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0BEC", Offset = "0x8B0BEC")]
		[SerializeField]
		private MecanimParameterReference readyForDetailsParam;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0C38", Offset = "0x8B0C38")]
		[SerializeField]
		private MecanimParameterReference cashoutParam;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0C84", Offset = "0x8B0C84")]
		[SerializeField]
		private MecanimParameterReference doFirstPlay;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0CD8", Offset = "0x8B0CD8")]
		[SerializeField]
		private MecanimParameterReference playEarned;

		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0D24", Offset = "0x8B0D24")]
		[SerializeField]
		private MecanimParameterReference replayParam;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B0D70", Offset = "0x8B0D70")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0D70", Offset = "0x8B0D70")]
		[SerializeField]
		private MecanimParameterReference riseAgainFillParam;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0DCC", Offset = "0x8B0DCC")]
		[SerializeField]
		private MecanimParameterReference riseAgainFillCompleteParam;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B0E18", Offset = "0x8B0E18")]
		[SerializeField]
		private MecanimParameterReference riseAgainShowParam;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0E64", Offset = "0x8B0E64")]
		[SerializeField]
		protected RoomCompletionHistory history;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private SaveManager saveManager;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private ScreenFadeConfig fadeTransition;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private IntVariable currency;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private IntVariable lastRunReward;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private FloatVariable lastRunPlayTime;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private FloatVariable runPlayTime;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private IntVariable campaignSeed;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private CompoundBinaryAction continueAction;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private IntVariable pauseMenuSuppression;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private IntVariable modalUI;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B0F60", Offset = "0x8B0F60")]
		[SerializeField]
		protected AudioKeyData flameStartSFXKey;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		protected AudioKeyData bossRoomFlamePoofSFXKey;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		protected AudioKeyData bossKillFlamePoofSFXKey;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		protected AudioKeyData flameCashoutSFXKey;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		protected AudioKeyData congratsShownSFXKey;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		protected AudioKeyData onForgeNotificationSFXKey;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		protected AudioKeyData[] cashoutStopSFXKey;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		protected AudioKeyData onCashoutSequenceStartKey;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private ProceduralAudio riseAgainBarFillProceduralAudio;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B102C", Offset = "0x8B102C")]
		[SerializeField]
		private AchievementAsset aetherTotalAchievement;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AchievementAsset speedrunAchievement;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AchievementAsset speedrunnerAchievement;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AchievementAsset speedrunnestAchievement;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B10A8", Offset = "0x8B10A8")]
		private float speedrunAchievementTime;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B10F4", Offset = "0x8B10F4")]
		private float speedrunnerAchievementTime;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1140", Offset = "0x8B1140")]
		private float speedrunnestAchievementTime;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		protected UnityEvent onExitTriggerPull;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		protected UnityEvent onExitTriggerPullActual;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		protected UnityEvent onExitTriggerRelease;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private bool forceVictory;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8B11CC", Offset = "0x8B11CC")]
		[SerializeField]
		private QuickButton debugPlayVictory;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8B1204", Offset = "0x8B1204")]
		[SerializeField]
		private QuickButton debugPlay25;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int totalReward;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float displayedAetherCount;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private int toDisplay;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private float anyKeyHeldFor;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private bool waitingForAnyKey;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x229")]
		private bool isPlaying;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22A")]
		private bool isInitialized;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22B")]
		private bool playOnInit;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private bool finishedSceneProgression;

		[NonSerialized]
		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22D")]
		private bool isVictory;

		[NonSerialized]
		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22E")]
		private bool _triggerPressed;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Dictionary<ScriptableObject, CashOutTallyIcon> tallyLookup;

		[Token(Token = "0x17000092")]
		private float RateSpeedMultiplier
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0xAF27C4", Offset = "0xAF27C4", VA = "0xAF27C4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0xAF27FC", Offset = "0xAF27FC", VA = "0xAF27FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0xAF2930", Offset = "0xAF2930", VA = "0xAF2930")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0xAF2A04", Offset = "0xAF2A04", VA = "0xAF2A04", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0xAF2D0C", Offset = "0xAF2D0C", VA = "0xAF2D0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0xAF2E74", Offset = "0xAF2E74", VA = "0xAF2E74")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEC68", Offset = "0x8DEC68")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0xAF2F1C", Offset = "0xAF2F1C", VA = "0xAF2F1C")]
		private void Recenter()
		{
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0xAF2B74", Offset = "0xAF2B74", VA = "0xAF2B74")]
		private void Initialize()
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0xAF3114", Offset = "0xAF3114", VA = "0xAF3114")]
		private void Update()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0xAF34E0", Offset = "0xAF34E0", VA = "0xAF34E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DECCC", Offset = "0x8DECCC")]
		private IEnumerator BeginCashoutCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0xAF3588", Offset = "0xAF3588", VA = "0xAF3588")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DED30", Offset = "0x8DED30")]
		public void DebugPlay()
		{
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0xAF3CAC", Offset = "0xAF3CAC", VA = "0xAF3CAC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DED68", Offset = "0x8DED68")]
		public void DebugPlay25()
		{
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0xAF3D1C", Offset = "0xAF3D1C", VA = "0xAF3D1C")]
		public void DebugPlay(float normalizedCompletion)
		{
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0xAF35F8", Offset = "0xAF35F8", VA = "0xAF35F8")]
		public void Play()
		{
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0xAF3F5C", Offset = "0xAF3F5C", VA = "0xAF3F5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEDA0", Offset = "0x8DEDA0")]
		private IEnumerator DelayedPlayEarned(float lastIconDelay)
		{
			return null;
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0xAF4014", Offset = "0xAF4014", VA = "0xAF4014")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEE04", Offset = "0x8DEE04")]
		private IEnumerator SetReadyForCashOut(float totalDelay)
		{
			return null;
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0xAF3D98", Offset = "0xAF3D98", VA = "0xAF3D98")]
		private void DoCashOutSave()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0xAF40CC", Offset = "0xAF40CC", VA = "0xAF40CC")]
		public void DoSceneProgression()
		{
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0xAF41D4", Offset = "0xAF41D4", VA = "0xAF41D4")]
		public void StartFlame()
		{
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0xAF4300", Offset = "0xAF4300", VA = "0xAF4300")]
		public void AnimEvent_HandleNewWeaponNotification()
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0xAF4400", Offset = "0xAF4400", VA = "0xAF4400")]
		public void AnimEvent_HandleVictoryCongratsNotification()
		{
		}

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0xAF4500", Offset = "0xAF4500", VA = "0xAF4500")]
		private void HandleMotesRevealed(CashOutIconConfig iconConfig, int motesRevealed)
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0xAF4720", Offset = "0xAF4720", VA = "0xAF4720")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEE68", Offset = "0x8DEE68")]
		private IEnumerator DelayedStartFlame()
		{
			return null;
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0xAF47C8", Offset = "0xAF47C8", VA = "0xAF47C8")]
		public CashOutScreen()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public interface IProvideIconSprite
	{
		[Token(Token = "0x17000093")]
		Sprite IconSprite
		{
			[Token(Token = "0x60005F5")]
			get;
		}
	}
	[Token(Token = "0x2000141")]
	public class CashOutTallyIcon : MonoBehaviour
	{
		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableObject identifier;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI tallyText;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int currentTally;

		[Token(Token = "0x17000094")]
		public ScriptableObject Identifier
		{
			[Token(Token = "0x60005F6")]
			[Address(RVA = "0xAF5648", Offset = "0xAF5648", VA = "0xAF5648")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xAF5650", Offset = "0xAF5650", VA = "0xAF5650")]
		public void Initialize(ScriptableObject identifier)
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xAF577C", Offset = "0xAF577C", VA = "0xAF577C")]
		public void Add(int additional = 1)
		{
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xAF57EC", Offset = "0xAF57EC", VA = "0xAF57EC")]
		public CashOutTallyIcon()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class CashOutView : MonoBehaviour
	{
		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B126C", Offset = "0x8B126C")]
		public Animator animator;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator riseAgainAnimator;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B12A4", Offset = "0x8B12A4")]
		public TextMeshProUGUI rewardText;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI totalCurrencyDisplay;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CanvasGroup fallenPanel;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CanvasGroup forgeNotificationPanel;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup fastForwardPanel;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup aetherPanel;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public RoomStatusBar roomStatusBar;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B12DC", Offset = "0x8B12DC")]
		public ParticleSystem endFlame;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ParticleSystem endFlameFinal;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ParticleSystem endFlameLargePoof;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ParticleSystem endFlameSmallPoof;

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xAF30E4", Offset = "0xAF30E4", VA = "0xAF30E4")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xAF57F4", Offset = "0xAF57F4", VA = "0xAF57F4")]
		public void InitUI()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xAF5860", Offset = "0xAF5860", VA = "0xAF5860")]
		public void InitFX()
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xAF58DC", Offset = "0xAF58DC", VA = "0xAF58DC")]
		public CashOutView()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class ComfortWizard : MonoBehaviour
	{
		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VignettePreviewController vignettePreview;

		[NonSerialized]
		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool requested;

		[Token(Token = "0x14000005")]
		public event Action OnComfortWindowContinue
		{
			[Token(Token = "0x60005FE")]
			[Address(RVA = "0xAF58E4", Offset = "0xAF58E4", VA = "0xAF58E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEECC", Offset = "0x8DEECC")]
			add
			{
			}
			[Token(Token = "0x60005FF")]
			[Address(RVA = "0xAF5988", Offset = "0xAF5988", VA = "0xAF5988")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEDC", Offset = "0x8DEEDC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0xAF5A2C", Offset = "0xAF5A2C", VA = "0xAF5A2C")]
		public void HandleComfortWizardContinue()
		{
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0xAF5AA0", Offset = "0xAF5AA0", VA = "0xAF5AA0")]
		public void BeginVignettePreview()
		{
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0xAF5A5C", Offset = "0xAF5A5C", VA = "0xAF5A5C")]
		private void EndVignettePreview()
		{
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0xAF5AD0", Offset = "0xAF5AD0", VA = "0xAF5AD0")]
		public ComfortWizard()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000144")]
	public class PipColor
	{
		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Tint;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B1334", Offset = "0x8B1334")]
		public Color EmissionForeground;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B134C", Offset = "0x8B134C")]
		public Color EmissionBackground;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B1364", Offset = "0x8B1364")]
		public Color BurnFrom;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8B137C", Offset = "0x8B137C")]
		public Color BurnTo;

		[Token(Token = "0x6000604")]
		[Address(RVA = "0xC09204", Offset = "0xC09204", VA = "0xC09204")]
		public PipColor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000145")]
	public struct HealthPipRenderer
	{
		[Token(Token = "0x40004F7")]
		private const int PIP_MAX = 100;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1394", Offset = "0x8B1394")]
		[SerializeField]
		private Mesh pip;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B13E0", Offset = "0x8B13E0")]
		[SerializeField]
		private Material pipMaterial;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B142C", Offset = "0x8B142C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B142C", Offset = "0x8B142C")]
		[SerializeField]
		private Transform origin;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B149C", Offset = "0x8B149C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B149C", Offset = "0x8B149C")]
		[SerializeField]
		private Transform originGuardBreak;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B150C", Offset = "0x8B150C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B150C", Offset = "0x8B150C")]
		[SerializeField]
		private float spacing;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B157C", Offset = "0x8B157C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B157C", Offset = "0x8B157C")]
		[SerializeField]
		private float rowSpacing;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B15EC", Offset = "0x8B15EC")]
		[SerializeField]
		private float pipScale;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1638", Offset = "0x8B1638")]
		[SerializeField]
		private float pipRotation;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1684", Offset = "0x8B1684")]
		[SerializeField]
		private PipColor[] rowColors;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B16D0", Offset = "0x8B16D0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B16D0", Offset = "0x8B16D0")]
		[SerializeField]
		private MaterialPropertyReference pipFill;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B1740", Offset = "0x8B1740")]
		[SerializeField]
		private MaterialPropertyReference pipBurn;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B178C", Offset = "0x8B178C")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B178C", Offset = "0x8B178C")]
		[SerializeField]
		private MaterialPropertyReference pipTint;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B17FC", Offset = "0x8B17FC")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B17FC", Offset = "0x8B17FC")]
		[SerializeField]
		private MaterialPropertyReference pipEmission;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B186C", Offset = "0x8B186C")]
		[SerializeField]
		private MaterialPropertyReference pipBurnTint;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float burnPauseTime;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float burnGlowTime;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float burnCatchupRate;

		[NonSerialized]
		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private MaterialPropertyBlock propertyBlock;

		[NonSerialized]
		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Matrix4x4[] matrices;

		[NonSerialized]
		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float[] fill;

		[NonSerialized]
		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] burn;

		[NonSerialized]
		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector4[] color;

		[NonSerialized]
		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector4[] emission;

		[NonSerialized]
		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector4[] burnColor;

		[NonSerialized]
		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] timeSinceHit;

		[NonSerialized]
		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float lastTime;

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x966288", Offset = "0x966288", VA = "0x966288")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x966290", Offset = "0x966290", VA = "0x966290")]
		private int CalculateHealthParams(float current, float max, float healthPerPip, float pipsPerRow, bool guardIsBroken)
		{
			return default(int);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x96629C", Offset = "0x96629C", VA = "0x96629C")]
		public void AppendDrawingData(ref HealthDrawingData healthDrawingData, float current, float max, float healthPerPip, float pipsPerRow, bool guardIsBroken)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x9662A8", Offset = "0x9662A8", VA = "0x9662A8")]
		public void DrawHealth(float current, float max, float healthPerPip, float pipsPerRow, bool guardIsBroken)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x9662B4", Offset = "0x9662B4", VA = "0x9662B4")]
		public void DrawHealth(float current, float max, float healthPerPip, float pipsPerRow, bool guardIsBroken, Camera camera)
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class IntVariableGameObjectSwitch : MonoBehaviour
	{
		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B18E8", Offset = "0x8B18E8")]
		[SerializeField]
		private IntVariable variable;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1934", Offset = "0x8B1934")]
		[SerializeField]
		private GameObject[] objects;

		[Token(Token = "0x600060A")]
		[Address(RVA = "0xBFD4C0", Offset = "0xBFD4C0", VA = "0xBFD4C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0xBFD564", Offset = "0xBFD564", VA = "0xBFD564")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0xBFD600", Offset = "0xBFD600", VA = "0xBFD600")]
		private void OnVariableChanged(int newValue)
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xBFD6E0", Offset = "0xBFD6E0", VA = "0xBFD6E0")]
		public IntVariableGameObjectSwitch()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class LevelText : MonoBehaviour
	{
		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1980", Offset = "0x8B1980")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B19CC", Offset = "0x8B19CC")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xBFEA90", Offset = "0xBFEA90", VA = "0xBFEA90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0xBFEAE0", Offset = "0xBFEAE0", VA = "0xBFEAE0")]
		public LevelText()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class IntroUI : MonoBehaviour
	{
		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UICanvas UICanvas;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoolVariable isControllerVisible;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B1A38", Offset = "0x8B1A38")]
		[SerializeField]
		private GameObject _profilePanel;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ProfileUI[] _profileUIButtons;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PauseScreen pauseScreen;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ComfortWizard comfortWizard;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _hasFocus;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isNewGameStart;

		[Token(Token = "0x14000006")]
		public event Action OnNewProfileLoaded
		{
			[Token(Token = "0x6000610")]
			[Address(RVA = "0xBFDC2C", Offset = "0xBFDC2C", VA = "0xBFDC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEEC", Offset = "0x8DEEEC")]
			add
			{
			}
			[Token(Token = "0x6000611")]
			[Address(RVA = "0xBFDCD0", Offset = "0xBFDCD0", VA = "0xBFDCD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEEFC", Offset = "0x8DEEFC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0xBFDD74", Offset = "0xBFDD74", VA = "0xBFDD74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0xBFE0E8", Offset = "0xBFE0E8", VA = "0xBFE0E8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0xBFE45C", Offset = "0xBFE45C", VA = "0xBFE45C")]
		private void OnProfileSelected(bool isNewGame)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0xBFE484", Offset = "0xBFE484", VA = "0xBFE484")]
		private void OnProfileLoaded(bool isNewGame)
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0xBFE620", Offset = "0xBFE620", VA = "0xBFE620")]
		public void ShowProfileUI()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0xBFE688", Offset = "0xBFE688", VA = "0xBFE688")]
		public void ShowComfortWizard()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0xBFE6F0", Offset = "0xBFE6F0", VA = "0xBFE6F0")]
		public void HideAll()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0xBFE75C", Offset = "0xBFE75C", VA = "0xBFE75C")]
		public void HandleComfortWizardContinuePressed()
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0xBFE5D8", Offset = "0xBFE5D8", VA = "0xBFE5D8")]
		private void StartGame()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0xBFE780", Offset = "0xBFE780", VA = "0xBFE780")]
		public void ShowSettings()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0xBFE9B4", Offset = "0xBFE9B4", VA = "0xBFE9B4")]
		private void HandleSettingsClosed()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0xBFEA84", Offset = "0xBFEA84", VA = "0xBFEA84")]
		private void ValidAddClickHandlers(Button button, UnityAction action)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0xBFEA88", Offset = "0xBFEA88", VA = "0xBFEA88")]
		public IntroUI()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class ProfileUI : MonoBehaviour
	{
		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1AB0", Offset = "0x8B1AB0")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int _profileIndex;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntVariable _currencyVariable;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatVariable _playTime;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerHandState _leftHandState;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1B5C", Offset = "0x8B1B5C")]
		[SerializeField]
		private TextMeshProUGUI _totalPlayTimeTextMeshPro;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI _roomNameTextMeshPro;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshProUGUI _moneyTextMeshPro;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI _newGameTextMeshPro;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Image _leftHandArmament;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Image _rightHandArmament;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _deleteProfileButton;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private GameObject _openSettingsButton;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PressAndHoldButton playButton;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B1C28", Offset = "0x8B1C28")]
		[SerializeField]
		private StandardAnalyticsEvent _profileCreatedAnalyticsEvent;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PlaytimeAnalyticsEvent _profileDeletedAnalyticsEvent;

		[NonSerialized]
		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _isNewGame;

		[NonSerialized]
		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool _loaded;

		[Token(Token = "0x14000007")]
		public event Action<bool> OnProfileSelected
		{
			[Token(Token = "0x600061F")]
			[Address(RVA = "0xBFDEFC", Offset = "0xBFDEFC", VA = "0xBFDEFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF0C", Offset = "0x8DEF0C")]
			add
			{
			}
			[Token(Token = "0x6000620")]
			[Address(RVA = "0xBFE270", Offset = "0xBFE270", VA = "0xBFE270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF1C", Offset = "0x8DEF1C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event Action<bool> OnProfileLoaded
		{
			[Token(Token = "0x6000621")]
			[Address(RVA = "0xBFDFA0", Offset = "0xBFDFA0", VA = "0xBFDFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF2C", Offset = "0x8DEF2C")]
			add
			{
			}
			[Token(Token = "0x6000622")]
			[Address(RVA = "0xBFE314", Offset = "0xBFE314", VA = "0xBFE314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF3C", Offset = "0x8DEF3C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event Action onRequestSettings
		{
			[Token(Token = "0x6000623")]
			[Address(RVA = "0xBFE044", Offset = "0xBFE044", VA = "0xBFE044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF4C", Offset = "0x8DEF4C")]
			add
			{
			}
			[Token(Token = "0x6000624")]
			[Address(RVA = "0xBFE3B8", Offset = "0xBFE3B8", VA = "0xBFE3B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF5C", Offset = "0x8DEF5C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xC0ECD8", Offset = "0xC0ECD8", VA = "0xC0ECD8")]
		public void AttemptLoad()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xC0F3F8", Offset = "0xC0F3F8", VA = "0xC0F3F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xC0F224", Offset = "0xC0F224", VA = "0xC0F224")]
		private void ShowNewGameMode(bool isNewGame)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xC0F428", Offset = "0xC0F428", VA = "0xC0F428")]
		public void LoadProfile()
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xC0F4A4", Offset = "0xC0F4A4", VA = "0xC0F4A4")]
		public void LoadData()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xC0F5B8", Offset = "0xC0F5B8", VA = "0xC0F5B8")]
		public void ShowProfileSettings()
		{
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0xC0F604", Offset = "0xC0F604", VA = "0xC0F604")]
		public void ClearProfile()
		{
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0xC0EF40", Offset = "0xC0EF40", VA = "0xC0EF40")]
		private string FloatDurationFormat(float duration)
		{
			return null;
		}

		[Token(Token = "0x600062D")]
		[Address(RVA = "0xC0F0B0", Offset = "0xC0F0B0", VA = "0xC0F0B0")]
		private string GetRoomText()
		{
			return null;
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0xC0F6DC", Offset = "0xC0F6DC", VA = "0xC0F6DC")]
		public ProfileUI()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class VignettePreviewController : MonoBehaviour
	{
		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1CB4", Offset = "0x8B1CB4")]
		[SerializeField]
		private FloatVariable additionalVignetting;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntVariable vignetteLayer;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1D10", Offset = "0x8B1D10")]
		[SerializeField]
		private float previewHoldDuration;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1D5C", Offset = "0x8B1D5C")]
		[SerializeField]
		private float previewCloseDuration;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1DA8", Offset = "0x8B1DA8")]
		[SerializeField]
		private Layer previewLayer;

		[NonSerialized]
		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float lastRequestEndTime;

		[NonSerialized]
		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int requests;

		[Token(Token = "0x17000095")]
		public int Requests
		{
			[Token(Token = "0x6000632")]
			[Address(RVA = "0xCA2064", Offset = "0xCA2064", VA = "0xCA2064")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000633")]
			[Address(RVA = "0xCA206C", Offset = "0xCA206C", VA = "0xCA206C")]
			set
			{
			}
		}

		[Token(Token = "0x600062F")]
		[Address(RVA = "0xCA1F18", Offset = "0xCA1F18", VA = "0xCA1F18")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0xCA1FB8", Offset = "0xCA1FB8", VA = "0xCA1FB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xCA200C", Offset = "0xCA200C", VA = "0xCA200C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xCA20E8", Offset = "0xCA20E8", VA = "0xCA20E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xCA2188", Offset = "0xCA2188", VA = "0xCA2188")]
		public void HandleOnChanged()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xCA21BC", Offset = "0xCA21BC", VA = "0xCA21BC")]
		public VignettePreviewController()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class HMDMessagingUI : MonoBehaviour
	{
		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Canvas _canvas;

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xAF9AC0", Offset = "0xAF9AC0", VA = "0xAF9AC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xAF9B40", Offset = "0xAF9B40", VA = "0xAF9B40")]
		public HMDMessagingUI()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public class PanningSheenUIBounds : MonoBehaviour
	{
		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Bounds bounds;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[DebugOnly]
		private Matrix4x4 objectToWorld;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[DebugOnly]
		private Matrix4x4 worldToObject;

		[Token(Token = "0x17000096")]
		public Bounds Bounds
		{
			[Token(Token = "0x6000639")]
			[Address(RVA = "0xC0536C", Offset = "0xC0536C", VA = "0xC0536C")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0xC05380", Offset = "0xC05380", VA = "0xC05380")]
		private void Reset()
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xC053FC", Offset = "0xC053FC", VA = "0xC053FC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xC054D4", Offset = "0xC054D4", VA = "0xC054D4")]
		public Vector3 TransformPointIntoQuantizedSpace(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xC0567C", Offset = "0xC0567C", VA = "0xC0567C")]
		public Vector3 TransformDirectionIntoQuantizedSpace(Vector3 d)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xC0576C", Offset = "0xC0576C", VA = "0xC0576C")]
		public Vector3 TransformQuantizedPointIntoLocalSpace(Vector3 p)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xC058EC", Offset = "0xC058EC", VA = "0xC058EC")]
		public Vector3 TransformUVToWorld(Vector2 uv)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xC0594C", Offset = "0xC0594C", VA = "0xC0594C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0xC05AF0", Offset = "0xC05AF0", VA = "0xC05AF0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0xC05954", Offset = "0xC05954", VA = "0xC05954")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0xC05AF8", Offset = "0xC05AF8", VA = "0xC05AF8")]
		public PanningSheenUIBounds()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A2170", Offset = "0x8A2170")]
	public class PanningSheenUIEffect : BaseMeshEffect
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PanningSheenUIBounds sheenBounds;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1EA4", Offset = "0x8B1EA4")]
		public Vector2 scale;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B1EDC", Offset = "0x8B1EDC")]
		public Vector2 offset;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MaskableGraphic cachedGraphic;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Canvas canvas;

		[NonSerialized]
		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bounds bounds;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[DebugOnly]
		private Matrix4x4 objectToWorld;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[DebugOnly]
		private Vector2[] uvs;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[DebugOnly]
		private Vector3 boundsCenter;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[DebugOnly]
		private Vector3 boundsMin;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[DebugOnly]
		private Vector3 boundsMax;

		[Token(Token = "0x17000097")]
		public PanningSheenUIBounds SheenBounds
		{
			[Token(Token = "0x6000644")]
			[Address(RVA = "0xC05B00", Offset = "0xC05B00", VA = "0xC05B00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0xC05B08", Offset = "0xC05B08", VA = "0xC05B08")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0xC05C04", Offset = "0xC05C04", VA = "0xC05C04", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xC05D50", Offset = "0xC05D50", VA = "0xC05D50")]
		public void ApplyOffset(Vector2 offsetVector)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xC05F84", Offset = "0xC05F84", VA = "0xC05F84", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xC06370", Offset = "0xC06370", VA = "0xC06370")]
		private void ApplyVertexTranslateAndScale(ref Vector3 vert)
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0xC06490", Offset = "0xC06490", VA = "0xC06490")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0xC06A18", Offset = "0xC06A18", VA = "0xC06A18")]
		public PanningSheenUIEffect()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class BoolCanvasGroupController : MonoBehaviour
	{
		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable boolVar;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B203C", Offset = "0x8B203C")]
		[SerializeField]
		private CanvasGroup target;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] activeObjects;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image[] enabledImages;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B2094", Offset = "0x8B2094")]
		[SerializeField]
		private float falseAlpha;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float trueAlpha;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool invertedInteractable;

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xAEF740", Offset = "0xAEF740", VA = "0xAEF740")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xAEF828", Offset = "0xAEF828", VA = "0xAEF828")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xAEFB70", Offset = "0xAEFB70", VA = "0xAEFB70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xAEF928", Offset = "0xAEF928", VA = "0xAEF928")]
		private void UpdateGroup(bool newValue)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xAEFC54", Offset = "0xAEFC54", VA = "0xAEFC54")]
		public BoolCanvasGroupController()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public class PauseScreen : MonoBehaviour
	{
		[Token(Token = "0x20004A4")]
		public enum State
		{
			[Token(Token = "0x4001DB3")]
			Uninitialized,
			[Token(Token = "0x4001DB4")]
			Closed,
			[Token(Token = "0x4001DB5")]
			Closing,
			[Token(Token = "0x4001DB6")]
			Open,
			[Token(Token = "0x4001DB7")]
			Opening,
			[Token(Token = "0x4001DB8")]
			Error
		}

		[Token(Token = "0x20004A5")]
		public enum Mode
		{
			[Token(Token = "0x4001DBA")]
			GamePause = 0,
			[Token(Token = "0x4001DBB")]
			CalibrationOnly = 1,
			[Token(Token = "0x4001DBC")]
			SettingsOnly = 3
		}

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GlobalEvent onHeightCalibrationCompleted;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B20FC", Offset = "0x8B20FC")]
		[SerializeField]
		private BinaryInputAction pauseInput;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B2148", Offset = "0x8B2148")]
		[SerializeField]
		private XRTrackedNode playerHead;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRPlatformManager platform;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UICanvas uiCanvas;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B21A0", Offset = "0x8B21A0")]
		[SerializeField]
		private IntVariable playerMovementSuppresion;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVariable pauseMenuSuppression;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable controllerVisible;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVariable hasCalibrated;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVariable isPauseScreenDisplayed;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVariable showCalibrationOnPauseResume;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GlobalEvent requestPauseScreen;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable modalUI;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private TimeScaleController timeScaleController;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private TimeScaleRequest onPauseTimescaleRequest;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B2268", Offset = "0x8B2268")]
		private GlobalEvent killPlayerGlobalEvent;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B22B4", Offset = "0x8B22B4")]
		[SerializeField]
		protected RoomCompletionHistory history;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SaveManager saveManager;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private IntVariable currency;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B231C", Offset = "0x8B231C")]
		[SerializeField]
		private AudioKeyData onResumeSFXKey;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioKeyData onPauseSFXKey;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BoolVariable strictWorldForward;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2374", Offset = "0x8B2374")]
		[SerializeField]
		private CalibrationScreen calibrationScreen;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private CanvasGroup pausePanel;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B23D0", Offset = "0x8B23D0")]
		[SerializeField]
		private PressAndHoldButton giveUpButton;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Button resumeButton;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SettingsPanel settingsPanel;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private GameObject ForgeVisuals;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private NetherSpaceBubble bubble;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B2448", Offset = "0x8B2448")]
		[SerializeField]
		private RoomStatusBar roomStatusBar;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private TextMeshProUGUI earnedMotesDisplay;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject motesPanel;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private GameObject pauseUIRoot;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private GameObject runPlayTime;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B24C0", Offset = "0x8B24C0")]
		[SerializeField]
		private float distFromHead;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[SerializeField]
		private bool showRunProgressElementsOverride;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		[SerializeField]
		private bool showRoomStatusBar;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float repositionDistThreshold;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B253C", Offset = "0x8B253C")]
		private bool suppressPauseButton;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2588", Offset = "0x8B2588")]
		[SerializeField]
		private PlayerHealthAnalyticsEvent runAbortedAnalyticsEvent;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private StandardAnalyticsEvent saveQuitAnalyticsEvent;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private EnemyCountAnalyticsEvent settingsOpenedAnalyticsEvent;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private State currentState;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private int timeScaleRequestID;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private int roomCount;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private bool showRunProgressElements;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Vector3 lastRespositionHeadPos;

		[NonSerialized]
		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private Vector3 prePauseFootPos;

		[NonSerialized]
		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool isModalLocked;

		[NonSerialized]
		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool isMoveLocked;

		[NonSerialized]
		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		private bool registeredCalibrate;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Mode mode;

		[Token(Token = "0x17000098")]
		public bool Initialized
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0xC06A98", Offset = "0xC06A98", VA = "0xC06A98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000099")]
		public bool BusyAnimating
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0xC06AB4", Offset = "0xC06AB4", VA = "0xC06AB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public bool IsClosed
		{
			[Token(Token = "0x6000655")]
			[Address(RVA = "0xC06AD0", Offset = "0xC06AD0", VA = "0xC06AD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000A")]
		public event Action OnSettingsClosed
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0xBFE90C", Offset = "0xBFE90C", VA = "0xBFE90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF6C", Offset = "0x8DEF6C")]
			add
			{
			}
			[Token(Token = "0x6000652")]
			[Address(RVA = "0xBFE864", Offset = "0xBFE864", VA = "0xBFE864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF7C", Offset = "0x8DEF7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xC06AE0", Offset = "0xC06AE0", VA = "0xC06AE0")]
		private void ValidAddClickHandlers(Button button, UnityAction action)
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xC06AE4", Offset = "0xC06AE4", VA = "0xC06AE4")]
		private void ModalLock(bool shouldLock)
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xC06B70", Offset = "0xC06B70", VA = "0xC06B70")]
		private void MoveLock(bool shouldLock)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xC06BFC", Offset = "0xC06BFC", VA = "0xC06BFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xC06CB8", Offset = "0xC06CB8", VA = "0xC06CB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xC06EF0", Offset = "0xC06EF0", VA = "0xC06EF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xC072C0", Offset = "0xC072C0", VA = "0xC072C0")]
		private void Recenter()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xC06C00", Offset = "0xC06C00", VA = "0xC06C00")]
		public void Initialize()
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xC07598", Offset = "0xC07598", VA = "0xC07598")]
		public void OpenAsGamePause()
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xC07BF8", Offset = "0xC07BF8", VA = "0xC07BF8")]
		public void OpenAsCalibration(Vector3 lastFootPos)
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xC07D78", Offset = "0xC07D78", VA = "0xC07D78")]
		public void OpenAsSettingsOnly()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xC080DC", Offset = "0xC080DC", VA = "0xC080DC")]
		private void HandlePauseButtonPressed()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xC083FC", Offset = "0xC083FC", VA = "0xC083FC")]
		public void HandleLostUserPresence()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xC08478", Offset = "0xC08478", VA = "0xC08478")]
		public void HandleUserPresenceAutoUnpause()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xBFE860", Offset = "0xBFE860", VA = "0xBFE860")]
		public void HandleSettingsRequest()
		{
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0xC085E4", Offset = "0xC085E4", VA = "0xC085E4")]
		public void HandleGiveUpButton()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xC086DC", Offset = "0xC086DC", VA = "0xC086DC")]
		public void HandleQuitToTitleButton()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xC087AC", Offset = "0xC087AC", VA = "0xC087AC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xC087C0", Offset = "0xC087C0", VA = "0xC087C0")]
		private void QuitCleanup()
		{
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xC0886C", Offset = "0xC0886C", VA = "0xC0886C")]
		public void PauseModeOpenSettingsPanel()
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xC08940", Offset = "0xC08940", VA = "0xC08940")]
		public void CloseSettingsSubPanel()
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xC08194", Offset = "0xC08194", VA = "0xC08194")]
		public void HandleResumeButton()
		{
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xC07C54", Offset = "0xC07C54", VA = "0xC07C54")]
		private void OpenCalibrationSubPanel()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xC08A64", Offset = "0xC08A64", VA = "0xC08A64")]
		private void CloseCalibrationSubPanel()
		{
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xC0782C", Offset = "0xC0782C", VA = "0xC0782C")]
		private void BeginOpening()
		{
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xC0918C", Offset = "0xC0918C", VA = "0xC0918C")]
		private void FinishOpening()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xC0847C", Offset = "0xC0847C", VA = "0xC0847C")]
		public void BeginClosing()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xC071C4", Offset = "0xC071C4", VA = "0xC071C4")]
		private void FinishClosing()
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xC08BA8", Offset = "0xC08BA8", VA = "0xC08BA8")]
		private void RepositionScreen()
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xC09078", Offset = "0xC09078", VA = "0xC09078")]
		private void UpdateMotesDisplay()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xC08DBC", Offset = "0xC08DBC", VA = "0xC08DBC")]
		private int CalcRoomCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xC091E0", Offset = "0xC091E0", VA = "0xC091E0")]
		public PauseScreen()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class SettingsPanel : MonoBehaviour
	{
		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Button closePanelButton;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button calbirateButton;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CanvasGroup canvasGroup;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B2634", Offset = "0x8B2634")]
		[SerializeField]
		private Button comfortButton;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button gameplayButton;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button uiButton;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button audioButton;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button graphicsButton;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button languageButton;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject version;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject spacer;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B26DC", Offset = "0x8B26DC")]
		[SerializeField]
		private CanvasGroup comfortSettings;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CanvasGroup gameplaySettings;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CanvasGroup uiSettings;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private CanvasGroup audioSettings;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private CanvasGroup graphicsSettings;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private CanvasGroup languageSettings;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B2764", Offset = "0x8B2764")]
		[SerializeField]
		private CanvasGroup tabs;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private CanvasGroup comfortWizardNavigation;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GameObject comfortVignettePreview;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GameObject[] comfortWizardHiddenElements;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CanvasGroup openPanel;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool comfortWizardMode;

		[Token(Token = "0x1700009B")]
		public Button ClosePanelButton
		{
			[Token(Token = "0x6000677")]
			[Address(RVA = "0xC0FBE4", Offset = "0xC0FBE4", VA = "0xC0FBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009C")]
		public Button CalibrateButton
		{
			[Token(Token = "0x6000678")]
			[Address(RVA = "0xC0FBEC", Offset = "0xC0FBEC", VA = "0xC0FBEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400000B")]
		public event Action onComfortWizardCloseRequest
		{
			[Token(Token = "0x6000679")]
			[Address(RVA = "0xC0FBF4", Offset = "0xC0FBF4", VA = "0xC0FBF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF8C", Offset = "0x8DEF8C")]
			add
			{
			}
			[Token(Token = "0x600067A")]
			[Address(RVA = "0xC0FC98", Offset = "0xC0FC98", VA = "0xC0FC98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEF9C", Offset = "0x8DEF9C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event Action onSettingsClose
		{
			[Token(Token = "0x600067B")]
			[Address(RVA = "0xC06E4C", Offset = "0xC06E4C", VA = "0xC06E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEFAC", Offset = "0x8DEFAC")]
			add
			{
			}
			[Token(Token = "0x600067C")]
			[Address(RVA = "0xC07120", Offset = "0xC07120", VA = "0xC07120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DEFBC", Offset = "0x8DEFBC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xC0FAFC", Offset = "0xC0FAFC", VA = "0xC0FAFC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xC0FD3C", Offset = "0xC0FD3C", VA = "0xC0FD3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xC07500", Offset = "0xC07500", VA = "0xC07500")]
		public void HideVignettePreview()
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xC07E14", Offset = "0xC07E14", VA = "0xC07E14")]
		public void Initialize(bool showTabs)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xC0FF24", Offset = "0xC0FF24", VA = "0xC0FF24")]
		public void ToggleComfort()
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xC10154", Offset = "0xC10154", VA = "0xC10154")]
		public void ToggleGameplay()
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xC101F4", Offset = "0xC101F4", VA = "0xC101F4")]
		public void ToggleUI()
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xC10294", Offset = "0xC10294", VA = "0xC10294")]
		public void ToggleAudio()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xC10334", Offset = "0xC10334", VA = "0xC10334")]
		public void ToggleGraphics()
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xC103D4", Offset = "0xC103D4", VA = "0xC103D4")]
		public void ToggleLanguage()
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xC0FFF8", Offset = "0xC0FFF8", VA = "0xC0FFF8")]
		private void SetTabButtonInteractable(Button target)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xC0FDA0", Offset = "0xC0FDA0", VA = "0xC0FDA0")]
		private void ShowSettings(CanvasGroup targetGroup, bool visible)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xC0FEE8", Offset = "0xC0FEE8", VA = "0xC0FEE8")]
		private void InstantChange(CanvasGroup targetGroup, bool show)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xC10474", Offset = "0xC10474", VA = "0xC10474")]
		public void HandleComfortWizardClose()
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xC104AC", Offset = "0xC104AC", VA = "0xC104AC")]
		public void HandleSettingsCloseButton()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xC104C0", Offset = "0xC104C0", VA = "0xC104C0")]
		public SettingsPanel()
		{
		}
	}
	[Token(Token = "0x2000151")]
	public class SmoothTurnSliderHandler : MonoBehaviour
	{
		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable smoothTurn;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject slider;

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xC10F74", Offset = "0xC10F74", VA = "0xC10F74")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xC10FC0", Offset = "0xC10FC0", VA = "0xC10FC0")]
		public SmoothTurnSliderHandler()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class AbilityChargeUINoCanvas : MonoBehaviour
	{
		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B280C", Offset = "0x8B280C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B280C", Offset = "0x8B280C")]
		[SerializeField]
		private PlayerHandState _handState;

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B287C", Offset = "0x8B287C")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B28C8", Offset = "0x8B28C8")]
		[SerializeField]
		private MaterialPropertyReference _abilityFillName;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B2914", Offset = "0x8B2914")]
		[SerializeField]
		private MaterialPropertyReference _fillColorName;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B2960", Offset = "0x8B2960")]
		[SerializeField]
		private MaterialPropertyReference _superType;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B29AC", Offset = "0x8B29AC")]
		[SerializeField]
		private MaterialPropertyReference _sigilFillName;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B29F8", Offset = "0x8B29F8")]
		[SerializeField]
		private MaterialPropertyReference _alpha;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Renderer _sigilRenderer;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B2A54", Offset = "0x8B2A54")]
		[SerializeField]
		private MaterialPropertyReference _sigilFillNameSigil;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B2AA0", Offset = "0x8B2AA0")]
		[SerializeField]
		private MaterialPropertyReference _sigilAlpha;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2AEC", Offset = "0x8B2AEC")]
		[SerializeField]
		private BoolVariable _superUIEnabled;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Color _inactiveColor;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Color _activeColor;

		[NonSerialized]
		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private ArmamentAbilityUser _target;

		[NonSerialized]
		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private ArmamentAbilityDefinition _targetDef;

		[NonSerialized]
		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool _isCharged;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MaterialPropertyBlock _sigilMaterialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _registered;

		[NonSerialized]
		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _initialized;

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xAEE81C", Offset = "0xAEE81C", VA = "0xAEE81C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xAEE8BC", Offset = "0xAEE8BC", VA = "0xAEE8BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xAEE9F8", Offset = "0xAEE9F8", VA = "0xAEE9F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xAEEB0C", Offset = "0xAEEB0C", VA = "0xAEEB0C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xAEE9D8", Offset = "0xAEE9D8", VA = "0xAEE9D8")]
		private void OnSetSuperUIVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xAEEC1C", Offset = "0xAEEC1C", VA = "0xAEEC1C")]
		private void Register()
		{
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xAEEB10", Offset = "0xAEEB10", VA = "0xAEEB10")]
		private void Unregister()
		{
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xAEED2C", Offset = "0xAEED2C", VA = "0xAEED2C")]
		private void SetTarget(Armament armament)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xAEEF6C", Offset = "0xAEEF6C", VA = "0xAEEF6C")]
		private void OnFullCharge()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xAEF068", Offset = "0xAEF068", VA = "0xAEF068")]
		public void SetAlpha(float newAlpha)
		{
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xAEF148", Offset = "0xAEF148", VA = "0xAEF148")]
		private void Update()
		{
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xAEF584", Offset = "0xAEF584", VA = "0xAEF584")]
		public AbilityChargeUINoCanvas()
		{
		}
	}
	[Token(Token = "0x2000153")]
	[ExecuteAlways]
	public class DashUIInstanced : UIPipInstanced
	{
		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2B58", Offset = "0x8B2B58")]
		[SerializeField]
		protected IntVariable _dashCharges;

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xAF5AD8", Offset = "0xAF5AD8", VA = "0xAF5AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xAF5BF4", Offset = "0xAF5BF4", VA = "0xAF5BF4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xAF5D00", Offset = "0xAF5D00", VA = "0xAF5D00")]
		private void OnDashChargeChanged(int newDashCharge)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xAF5D08", Offset = "0xAF5D08", VA = "0xAF5D08")]
		private void OnMaxDashChargeChanged(int newMaxDashCharge)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xAF5D18", Offset = "0xAF5D18", VA = "0xAF5D18")]
		public DashUIInstanced()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[ExecuteAlways]
	public class PlayerHealthUIInstanced : UIPipInstanced
	{
		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2BA4", Offset = "0x8B2BA4")]
		[SerializeField]
		protected ClaymoreEntityVariable _playerVariable;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected InstancedFloatVariable _playerHealth;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float _anchorInitialOffset;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _anchorStepOffset;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Transform _leftAnchor;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Transform _rightAnchor;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2C40", Offset = "0x8B2C40")]
		[SerializeField]
		private VisualKeyData _onHealthPipBreakFX;

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xC0920C", Offset = "0xC0920C", VA = "0xC0920C")]
		private void Start()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xC09388", Offset = "0xC09388", VA = "0xC09388")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xC0472C", Offset = "0xC0472C", VA = "0xC0472C", Slot = "7")]
		protected virtual void OnPlayerHealthChanged(float newHealth)
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xC049B8", Offset = "0xC049B8", VA = "0xC049B8", Slot = "8")]
		protected virtual void OnMaxPlayerHealthChanged(float newMaxHealth)
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xC09678", Offset = "0xC09678", VA = "0xC09678", Slot = "6")]
		protected override void RefreshBackground(int maxPips)
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xC04EA0", Offset = "0xC04EA0", VA = "0xC04EA0")]
		public PlayerHealthUIInstanced()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class PlayerUI : XRNodeTracker
	{
		[Token(Token = "0x20004A6")]
		private enum RaycastOperation
		{
			[Token(Token = "0x4001DBE")]
			CENTER_LEFT,
			[Token(Token = "0x4001DBF")]
			CENTER_MIDDLE,
			[Token(Token = "0x4001DC0")]
			CENTER_RIGHT,
			[Token(Token = "0x4001DC1")]
			LEFT,
			[Token(Token = "0x4001DC2")]
			RIGHT,
			[Token(Token = "0x4001DC3")]
			SIZE
		}

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TransformVariable _playerSpaceTransform;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LayerMask _obstacleLayerMask;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2CAC", Offset = "0x8B2CAC")]
		[SerializeField]
		private Renderer _backgroundRenderer;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B2CF8", Offset = "0x8B2CF8")]
		[SerializeField]
		private MaterialPropertyReference _backgroundAlpha;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TextMeshPro _dashDamageText;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshPro _comboLimitText;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve _fadeCurve;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AbilityChargeUINoCanvas _leftSuper;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AbilityChargeUINoCanvas _rightSuper;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2D94", Offset = "0x8B2D94")]
		[SerializeField]
		private bool _staggeredRaycastUpdate;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private FloatRange _distanceFromPlayer;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private FloatRange _sideAnchorsRange;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float _swivelSpeed;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _hudRetractMoveSpeed;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float _hudExtendMoveSpeed;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float _hudExtendTimeDelay;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float _angleThreshold;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2E50", Offset = "0x8B2E50")]
		[SerializeField]
		private GameObject _mainPanel;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform _leftAnchor;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Transform _rightAnchor;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Transform _centerPivot;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UIPipInstanced[] _UIPipInstances;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2EDC", Offset = "0x8B2EDC")]
		[SerializeField]
		private BoolVariable _playerHUDEnabledSettings;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private BoolVariable _playerHUDEnabledTutorial;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private bool _updateQueueOnUIPanelActive;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private BoolVariable _isUIPanelActivatedLeft;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private BoolVariable _isUIPanelActivatedRight;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Material[] _materialUpdateQueue;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private int[] _materialUpdateQueueDefaults;

		[NonSerialized]
		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _isOverlay;

		[NonSerialized]
		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _angle;

		[NonSerialized]
		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool _shouldRotate;

		[NonSerialized]
		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Quaternion _targetRotation;

		[NonSerialized]
		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private Quaternion _lastPlayerSpaceRotation;

		[NonSerialized]
		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private Vector3 _lastPanelPosition;

		[NonSerialized]
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float _nextForwardDistanceTgt;

		[NonSerialized]
		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float _currentForwardDistance;

		[NonSerialized]
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private float _currentSideDistTgt;

		[NonSerialized]
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private bool _canHudExtend;

		[NonSerialized]
		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private float _timeLastRetract;

		[NonSerialized]
		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float _currentAlpha;

		[NonSerialized]
		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool _canUpdatePose;

		[NonSerialized]
		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float _currentForwardDistanceNormalized;

		[NonSerialized]
		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _currentForwardDistanceTgt;

		[NonSerialized]
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float _currentSideDistance;

		[NonSerialized]
		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool _hitLeft;

		[NonSerialized]
		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool _hitCenterLeft;

		[NonSerialized]
		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
		private bool _hitCenterMiddle;

		[NonSerialized]
		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
		private bool _hitCenterRight;

		[NonSerialized]
		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private bool _hitRight;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private MaterialPropertyBlock _backgroundPropertyBlock;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B2F88", Offset = "0x8B2F88")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B2F88", Offset = "0x8B2F88")]
		[SerializeField]
		private bool _drawRaycastChecks;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private readonly AnimationCurve lineSizeCurve;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private LineRenderer _leftCenterToPanelLineRenderer;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private LineRenderer _centerToPanelLineRenderer;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private LineRenderer _rightCenterToPanelLineRenderer;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private LineRenderer _panelToLeftLineRenderer;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private LineRenderer _panelToRightLineRenderer;

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xC099AC", Offset = "0xC099AC", VA = "0xC099AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xC09DA0", Offset = "0xC09DA0", VA = "0xC09DA0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xC0A114", Offset = "0xC0A114", VA = "0xC0A114", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xC0A3E0", Offset = "0xC0A3E0", VA = "0xC0A3E0")]
		private void RenderPipelineManagerOnBeginFrameRendering(ScriptableRenderContext scriptableRenderContext, Camera[] cameras)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xC0A468", Offset = "0xC0A468", VA = "0xC0A468")]
		private void OnUIPanelActivated(bool isActivated)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xC0A5B0", Offset = "0xC0A5B0", VA = "0xC0A5B0")]
		private void OnSetPlayerHUDEnabled(bool isVisible)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xC0A624", Offset = "0xC0A624", VA = "0xC0A624", Slot = "6")]
		protected override void OnPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xC09AAC", Offset = "0xC09AAC", VA = "0xC09AAC")]
		private void BuildLineRenderers()
		{
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xC0A884", Offset = "0xC0A884", VA = "0xC0A884")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xC0A9D4", Offset = "0xC0A9D4", VA = "0xC0A9D4")]
		private void DoOriginAnchorRaycastCheck()
		{
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xC0B7C0", Offset = "0xC0B7C0", VA = "0xC0B7C0")]
		private void CheckExtentTime()
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xC0B27C", Offset = "0xC0B27C", VA = "0xC0B27C")]
		private void DoForwardUpdate(Vector3 origin)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xC0B5FC", Offset = "0xC0B5FC", VA = "0xC0B5FC")]
		private void DoSideUpdate()
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xC0B12C", Offset = "0xC0B12C", VA = "0xC0B12C")]
		private float GetPlayerDistanceRaycast(Vector3 from, Vector3 direction)
		{
			return default(float);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xC0B840", Offset = "0xC0B840", VA = "0xC0B840")]
		public PlayerUI()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public class PlayerUIRoot : MonoBehaviour, IResourceLoadHandler<PlayerUI>, IResourceLoadHandler
	{
		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceRequestKey _playerUIKey;

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xC0B950", Offset = "0xC0B950", VA = "0xC0B950")]
		private void Awake()
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xC0BA38", Offset = "0xC0BA38", VA = "0xC0BA38", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xC0BB40", Offset = "0xC0BB40", VA = "0xC0BB40")]
		public PlayerUIRoot()
		{
		}
	}
	[Token(Token = "0x2000157")]
	public class UIPipInstanced : MonoBehaviour
	{
		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3008", Offset = "0x8B3008")]
		[SerializeField]
		protected UIPipRenderer _pipRenderer;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Color _activeColor;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Color _inactiveColor;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3074", Offset = "0x8B3074")]
		[SerializeField]
		protected float _offsetScale;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected Renderer _backgroundRenderer;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B30D0", Offset = "0x8B30D0")]
		[SerializeField]
		private MaterialPropertyReference _offset;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B311C", Offset = "0x8B311C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B311C", Offset = "0x8B311C")]
		protected int _debugCurrent;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B3180", Offset = "0x8B3180")]
		protected int _debugMax;

		[NonSerialized]
		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected int _cachedCurrentValue;

		[NonSerialized]
		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int _cachedMaxValue;

		[NonSerialized]
		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _backgroundPropertyBlock;

		[Token(Token = "0x1700009D")]
		public Color ActiveColor
		{
			[Token(Token = "0x60006B7")]
			[Address(RVA = "0xC111A0", Offset = "0xC111A0", VA = "0xC111A0")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x1700009E")]
		public Color InactiveColor
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0xC111AC", Offset = "0xC111AC", VA = "0xC111AC")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xC044A0", Offset = "0xC044A0", VA = "0xC044A0", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xC112C4", Offset = "0xC112C4", VA = "0xC112C4", Slot = "5")]
		public virtual void Draw(float alpha)
		{
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xC1132C", Offset = "0xC1132C", VA = "0xC1132C")]
		private void OnRenderObject()
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xC09828", Offset = "0xC09828", VA = "0xC09828", Slot = "6")]
		protected virtual void RefreshBackground(int maxPips)
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xC0995C", Offset = "0xC0995C", VA = "0xC0995C")]
		public UIPipInstanced()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000158")]
	public class UIPipRenderer
	{
		[Token(Token = "0x20004A7")]
		public struct TRS
		{
			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Position;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion Rotation;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 Scale;
		}

		[Token(Token = "0x4000609")]
		private const int PIP_MAX = 10;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B31C0", Offset = "0x8B31C0")]
		[SerializeField]
		protected Mesh _mesh;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B320C", Offset = "0x8B320C")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3258", Offset = "0x8B3258")]
		[SerializeField]
		protected Transform _originScale;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B32A4", Offset = "0x8B32A4")]
		[SerializeField]
		protected float _spacing;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B32F0", Offset = "0x8B32F0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B32F0", Offset = "0x8B32F0")]
		[SerializeField]
		protected MaterialPropertyReference _valueParam;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B3360", Offset = "0x8B3360")]
		[SerializeField]
		protected MaterialPropertyReference _colorParam;

		[NonSerialized]
		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float[] _activation;

		[NonSerialized]
		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector4[] _color;

		[NonSerialized]
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock _propertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private UIPipInstanced _currentPipDriver;

		[Token(Token = "0x1700009F")]
		public Transform OriginScale
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0xC11374", Offset = "0xC11374", VA = "0xC11374")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xC111B8", Offset = "0xC111B8", VA = "0xC111B8")]
		public void Initialize(UIPipInstanced uiPipInstanced)
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xC04A98", Offset = "0xC04A98", VA = "0xC04A98")]
		public void Draw(int current, int max, float alpha = 1f)
		{
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xC094F4", Offset = "0xC094F4", VA = "0xC094F4")]
		public TRS GetPipTRS(int index, int max)
		{
			return default(TRS);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xC1137C", Offset = "0xC1137C", VA = "0xC1137C")]
		public UIPipRenderer()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class PressAndHoldButton : UIBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE64", Offset = "0x8AAE64")]
		private sealed class <DelayedFillComplete>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PressAndHoldButton <>4__this;

			[Token(Token = "0x17000432")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C0F")]
				[Address(RVA = "0xC0EC68", Offset = "0xC0EC68", VA = "0xC0EC68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000433")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C11")]
				[Address(RVA = "0xC0ECD0", Offset = "0xC0ECD0", VA = "0xC0ECD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xC0E838", Offset = "0xC0E838", VA = "0xC0E838")]
			[DebuggerHidden]
			public <DelayedFillComplete>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001C0D")]
			[Address(RVA = "0xC0EA74", Offset = "0xC0EA74", VA = "0xC0EA74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xC0EA78", Offset = "0xC0EA78", VA = "0xC0EA78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xC0EC70", Offset = "0xC0EC70", VA = "0xC0EC70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PressAndHoldButton activeButton;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B33AC", Offset = "0x8B33AC")]
		public MecanimParameterReference fillParam;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B33F0", Offset = "0x8B33F0")]
		public MecanimParameterReference fillCompleteParam;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B3434", Offset = "0x8B3434")]
		public MecanimParameterReference hoverParam;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B3478", Offset = "0x8B3478")]
		public MecanimParameterReference pressedParam;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B34BC", Offset = "0x8B34BC")]
		public MecanimParameterReference isNewGameParam;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B3500", Offset = "0x8B3500")]
		public MecanimParameterReference disabledParam;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float fillDuration;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float drainRate;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float postCompleteDelay;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B3544", Offset = "0x8B3544")]
		public UnityEvent onFillCompletePostDelay;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent onFillCompletePreDelay;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Animator fillAnimator;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve fillCurve;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Image fillImage;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B358C", Offset = "0x8B358C")]
		[SerializeField]
		private ProceduralAudio proceduralAudioFillSFX;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioKeyData onHighlightSFXKey;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioKeyData onPressDownSFXKey;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private AudioKeyData onFillCompleteSFXKey;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float heldDuration;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool locked;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int downID;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool started;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool isInteractable;

		[Token(Token = "0x170000A0")]
		public bool IsInteractable
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0xC0DA78", Offset = "0xC0DA78", VA = "0xC0DA78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0xC0DA80", Offset = "0xC0DA80", VA = "0xC0DA80")]
			set
			{
			}
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xC0DAC4", Offset = "0xC0DAC4", VA = "0xC0DAC4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0xC0DC68", Offset = "0xC0DC68", VA = "0xC0DC68", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0xC0DC78", Offset = "0xC0DC78", VA = "0xC0DC78", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0xC0DDF4", Offset = "0xC0DDF4", VA = "0xC0DDF4")]
		public void Initialize(bool isNewGame)
		{
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0xC0DEA8", Offset = "0xC0DEA8", VA = "0xC0DEA8", Slot = "21")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0xC0E054", Offset = "0xC0E054", VA = "0xC0E054", Slot = "22")]
		public virtual void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0xC0E18C", Offset = "0xC0E18C", VA = "0xC0E18C", Slot = "23")]
		public virtual void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0xC0E2F0", Offset = "0xC0E2F0", VA = "0xC0E2F0", Slot = "24")]
		public virtual void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0xC0E3FC", Offset = "0xC0E3FC", VA = "0xC0E3FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0xC0E7BC", Offset = "0xC0E7BC", VA = "0xC0E7BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DEFCC", Offset = "0x8DEFCC")]
		private IEnumerator DelayedFillComplete()
		{
			return null;
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xC0E864", Offset = "0xC0E864", VA = "0xC0E864")]
		public void AbortFill()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xC0E90C", Offset = "0xC0E90C", VA = "0xC0E90C")]
		public PressAndHoldButton()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class RoomStatusBar : MonoBehaviour
	{
		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float angleDelta;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CashOutIcon[] icons;

		[NonSerialized]
		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextAngle;

		[NonSerialized]
		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float initialAngle;

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xC08EBC", Offset = "0xC08EBC", VA = "0xC08EBC")]
		public void Initialize(CashOutIconConfig[] configData)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0xC0F6E4", Offset = "0xC0F6E4", VA = "0xC0F6E4")]
		public void AddListeners(int index, Action<CashOutIconConfig, int> onMotesRevealedHandler)
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0xC0F72C", Offset = "0xC0F72C", VA = "0xC0F72C")]
		public void SetSpeed(float speed)
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xC0F7A8", Offset = "0xC0F7A8", VA = "0xC0F7A8")]
		public void ReInitialize()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xC0F848", Offset = "0xC0F848", VA = "0xC0F848")]
		public RoomStatusBar()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class SlashScreenEffect : MonoBehaviour
	{
		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE74", Offset = "0x8AAE74")]
		private sealed class <AnimationCoroutine>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SlashScreenEffect <>4__this;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x17000434")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C15")]
				[Address(RVA = "0xC10F04", Offset = "0xC10F04", VA = "0xC10F04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000435")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C17")]
				[Address(RVA = "0xC10F6C", Offset = "0xC10F6C", VA = "0xC10F6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xC10BC0", Offset = "0xC10BC0", VA = "0xC10BC0")]
			[DebuggerHidden]
			public <AnimationCoroutine>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001C13")]
			[Address(RVA = "0xC10D78", Offset = "0xC10D78", VA = "0xC10D78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xC10D7C", Offset = "0xC10D7C", VA = "0xC10D7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xC10F0C", Offset = "0xC10F0C", VA = "0xC10F0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B3628", Offset = "0x8B3628")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3628", Offset = "0x8B3628")]
		[SerializeField]
		private FloatGlobalEvent slashEvent;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3698", Offset = "0x8B3698")]
		[SerializeField]
		private AudioKeyData soundKey;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B36E4", Offset = "0x8B36E4")]
		[SerializeField]
		private CameraShakeRequestAsset cameraShake;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3730", Offset = "0x8B3730")]
		[SerializeField]
		private ScreenFlashController flashController;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B377C", Offset = "0x8B377C")]
		[SerializeField]
		private ScreenFlashRequest[] screenFlash;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B37C8", Offset = "0x8B37C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B37C8", Offset = "0x8B37C8")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform particleTransform;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool hasParticles;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool useConfiguration;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3868", Offset = "0x8B3868")]
		[SerializeField]
		private float positionOffset;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B38B4", Offset = "0x8B38B4")]
		[SerializeField]
		private float angleMult;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3900", Offset = "0x8B3900")]
		[SerializeField]
		private float positionOffsetAngleMult;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B394C", Offset = "0x8B394C")]
		[SerializeField]
		private float positionOffsetAngleOffset;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3998", Offset = "0x8B3998")]
		[SerializeField]
		private float degreeOffset;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B39E4", Offset = "0x8B39E4")]
		[SerializeField]
		private Material fullScreenMaterial;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B3A30", Offset = "0x8B3A30")]
		[SerializeField]
		private MaterialPropertyReference animationProperty;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float animationTime;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private bool useUnscaledTime;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AnimationCurve animationCurve;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[NonSerialized]
		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private FullScreenEffect fullScreenFade;

		[NonSerialized]
		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material runtimeFullScreenMaterial;

		[NonSerialized]
		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine animationCoroutine;

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xC104C8", Offset = "0xC104C8", VA = "0xC104C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xC106E0", Offset = "0xC106E0", VA = "0xC106E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xC10864", Offset = "0xC10864", VA = "0xC10864")]
		private void HandleSlashEvent(float slashAngle)
		{
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xC10B44", Offset = "0xC10B44", VA = "0xC10B44")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF030", Offset = "0x8DF030")]
		private IEnumerator AnimationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xC10BEC", Offset = "0xC10BEC", VA = "0xC10BEC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xC10C98", Offset = "0xC10C98", VA = "0xC10C98")]
		public SlashScreenEffect()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class TabController : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject activeObject;

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xC10FC8", Offset = "0xC10FC8", VA = "0xC10FC8")]
		private void Start()
		{
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xC11040", Offset = "0xC11040", VA = "0xC11040")]
		public void SetActive(GameObject go)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xC11198", Offset = "0xC11198", VA = "0xC11198")]
		public TabController()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class BoolVariableToggle : Toggle, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE84", Offset = "0x8AAE84")]
		private sealed class <DelayedDisable>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BoolVariableToggle <>4__this;

			[Token(Token = "0x17000436")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C1B")]
				[Address(RVA = "0xAF0B04", Offset = "0xAF0B04", VA = "0xAF0B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000437")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1D")]
				[Address(RVA = "0xAF0B6C", Offset = "0xAF0B6C", VA = "0xAF0B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xAF00C8", Offset = "0xAF00C8", VA = "0xAF00C8")]
			[DebuggerHidden]
			public <DelayedDisable>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xAF09F4", Offset = "0xAF09F4", VA = "0xAF09F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xAF09F8", Offset = "0xAF09F8", VA = "0xAF09F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xAF0B0C", Offset = "0xAF0B0C", VA = "0xAF0B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAE94", Offset = "0x8AAE94")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__20_0;

			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xAF0804", Offset = "0xAF0804", VA = "0xAF0804")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xAF080C", Offset = "0xAF080C", VA = "0xAF080C")]
			internal void <.ctor>b__20_0(object input)
			{
			}
		}

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public BoolVariable Variable;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float disableDelay;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3ABC", Offset = "0x8B3ABC")]
		[SerializeField]
		private AudioKeyData trueSFXKey;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private AudioKeyData falseSFXKey;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private AudioKeyData highlightSFXKey;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool isDoingDelayedDisable;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private List<int> activeHovers;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Animator cachedAnimator;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private QuickButton setNameToVariableName;

		[Token(Token = "0x170000A1")]
		public Animator CachedAnimator
		{
			[Token(Token = "0x60006DF")]
			[Address(RVA = "0xAEFC68", Offset = "0xAEFC68", VA = "0xAEFC68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xAEFD0C", Offset = "0xAEFD0C", VA = "0xAEFD0C", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xAEFEBC", Offset = "0xAEFEBC", VA = "0xAEFEBC", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xAEFDFC", Offset = "0xAEFDFC", VA = "0xAEFDFC")]
		private void Update()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xAEFF64", Offset = "0xAEFF64", VA = "0xAEFF64")]
		private void HandleChanged(bool b)
		{
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xAF004C", Offset = "0xAF004C", VA = "0xAF004C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF094", Offset = "0x8DF094")]
		private IEnumerator DelayedDisable()
		{
			return null;
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xAF00F4", Offset = "0xAF00F4", VA = "0xAF00F4", Slot = "51")]
		protected virtual void OnSetTrue()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xAF0210", Offset = "0xAF0210", VA = "0xAF0210", Slot = "52")]
		protected virtual void OnSetFalse()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xAF032C", Offset = "0xAF032C", VA = "0xAF032C", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xAF050C", Offset = "0xAF050C", VA = "0xAF050C", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xAF067C", Offset = "0xAF067C", VA = "0xAF067C")]
		public BoolVariableToggle()
		{
		}
	}
	[Token(Token = "0x200015E")]
	public class FloatVariableSlider : VariableSlider<FloatVariable>
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xAF9340", Offset = "0xAF9340", VA = "0xAF9340", Slot = "58")]
		protected override void SetVariableValue(float newValue)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xAF93D8", Offset = "0xAF93D8", VA = "0xAF93D8", Slot = "59")]
		protected override float GetVariableValue()
		{
			return default(float);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xAF93FC", Offset = "0xAF93FC", VA = "0xAF93FC")]
		public FloatVariableSlider()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class FloatVariableSlider_NoSubtitleAudio : FloatVariableSlider
	{
		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private AudioClip[] audioPool;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xAF944C", Offset = "0xAF944C", VA = "0xAF944C", Slot = "61")]
		public override void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0xAF94EC", Offset = "0xAF94EC", VA = "0xAF94EC", Slot = "62")]
		public override void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0xAF961C", Offset = "0xAF961C", VA = "0xAF961C")]
		public FloatVariableSlider_NoSubtitleAudio()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class FloatVariableTimeText : MonoBehaviour
	{
		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3B58", Offset = "0x8B3B58")]
		[SerializeField]
		private FloatVariable _floatVariable;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3BA4", Offset = "0x8B3BA4")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3BF0", Offset = "0x8B3BF0")]
		[SerializeField]
		private TextMeshProUGUI _textMeshPro;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3C3C", Offset = "0x8B3C3C")]
		[SerializeField]
		private string _displayFormat;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3C88", Offset = "0x8B3C88")]
		[SerializeField]
		private bool _updateWhenChanged;

		[NonSerialized]
		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool registered;

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0xAF9620", Offset = "0xAF9620", VA = "0xAF9620")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0xAF98D8", Offset = "0xAF98D8", VA = "0xAF98D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0xAF9704", Offset = "0xAF9704", VA = "0xAF9704")]
		private void OnValueChange(float newValue)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0xAF9984", Offset = "0xAF9984", VA = "0xAF9984")]
		private string Format(float duration)
		{
			return null;
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xAF9A60", Offset = "0xAF9A60", VA = "0xAF9A60")]
		public FloatVariableTimeText()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class IntVariableSlider : VariableSlider<IntVariable>
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private string[] enumBindings;

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xBFD6E8", Offset = "0xBFD6E8", VA = "0xBFD6E8", Slot = "58")]
		protected override void SetVariableValue(float newValue)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xBFD710", Offset = "0xBFD710", VA = "0xBFD710", Slot = "59")]
		protected override float GetVariableValue()
		{
			return default(float);
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xBFD740", Offset = "0xBFD740", VA = "0xBFD740", Slot = "60")]
		public override void SetText(float input)
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xBFD874", Offset = "0xBFD874", VA = "0xBFD874")]
		public IntVariableSlider()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class IntVariableText : MonoBehaviour
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI _textMeshPro;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IntVariable _intVariable;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B3D14", Offset = "0x8B3D14")]
		private string[] _textOptions;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UserString[] _userTextOptions;

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0xBFD8E8", Offset = "0xBFD8E8", VA = "0xBFD8E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xBFD98C", Offset = "0xBFD98C", VA = "0xBFD98C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xBFDA28", Offset = "0xBFDA28", VA = "0xBFDA28")]
		private void OnValueChange(int newValue)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xBFDB9C", Offset = "0xBFDB9C", VA = "0xBFDB9C")]
		public IntVariableText()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class SettingsButton : Button
	{
		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3D80", Offset = "0x8B3D80")]
		[SerializeField]
		private AudioKeyData _clickSFXKey;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AudioKeyData _highlightSFXKey;

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xC0F8BC", Offset = "0xC0F8BC", VA = "0xC0F8BC", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xC0F9D8", Offset = "0xC0F9D8", VA = "0xC0F9D8", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xC0FAF4", Offset = "0xC0FAF4", VA = "0xC0FAF4")]
		public SettingsButton()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public abstract class VariableSlider<T> : Slider, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IPointerEnterHandler, IPointerExitHandler where T : Variable
	{
		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T Variable;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Text ValueText;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool doStopOnRelease;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioRequest onGrabSFX;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioKeyData onGrabReleaseSFXKey;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool initialized;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<int> activeHovers;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Animator cachedAnimator;

		[Token(Token = "0x170000A2")]
		public Animator CachedAnimator
		{
			[Token(Token = "0x6000700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000701")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000702")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000703")]
		protected abstract void SetVariableValue(float newValue);

		[Token(Token = "0x6000704")]
		protected abstract float GetVariableValue();

		[Token(Token = "0x6000705")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000706")]
		protected override void Set(float input, bool sendCallback)
		{
		}

		[Token(Token = "0x6000707")]
		public virtual void SetText(float input)
		{
		}

		[Token(Token = "0x6000708")]
		public virtual void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000709")]
		public virtual void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x600070A")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600070B")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600070C")]
		protected VariableSlider()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class VariableText : MonoBehaviour
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3DDC", Offset = "0x8B3DDC")]
		[SerializeField]
		private Text text;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3E28", Offset = "0x8B3E28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B3E28", Offset = "0x8B3E28")]
		[SerializeField]
		private TextMeshProUGUI textMeshUGUI;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro textMesh;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B3EA8", Offset = "0x8B3EA8")]
		[SerializeField]
		private List<Variable> variables;

		[NonSerialized]
		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string baseText;

		[NonSerialized]
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool ready;

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xC11384", Offset = "0xC11384", VA = "0xC11384")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xC1184C", Offset = "0xC1184C", VA = "0xC1184C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xC115AC", Offset = "0xC115AC", VA = "0xC115AC")]
		private void RebuildText()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xC11960", Offset = "0xC11960", VA = "0xC11960")]
		public VariableText()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class VignettingVariableSlider : FloatVariableSlider
	{
		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public VignettePreviewController vignettePreview;

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xCA21D0", Offset = "0xCA21D0", VA = "0xCA21D0", Slot = "61")]
		public override void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xCA2280", Offset = "0xCA2280", VA = "0xCA2280", Slot = "62")]
		public override void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xCA2330", Offset = "0xCA2330", VA = "0xCA2330", Slot = "34")]
		public override void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xCA23F0", Offset = "0xCA23F0", VA = "0xCA23F0", Slot = "35")]
		public override void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xCA24B0", Offset = "0xCA24B0", VA = "0xCA24B0")]
		public VignettingVariableSlider()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class VersionText : VersionTextBase
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text Text;

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xC119DC", Offset = "0xC119DC", VA = "0xC119DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xC11CD0", Offset = "0xC11CD0", VA = "0xC11CD0")]
		public VersionText()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public abstract class VersionTextBase : MonoBehaviour
	{
		[Token(Token = "0x20004AC")]
		public enum VersionWriteMode
		{
			[Token(Token = "0x4001DD4")]
			ReplaceAll,
			[Token(Token = "0x4001DD5")]
			ReplaceSpecial
		}

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VersionWriteMode Mode;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8B3EF4", Offset = "0x8B3EF4")]
		public string VersionReplaceString;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8B3F34", Offset = "0x8B3F34")]
		public string RevisionReplaceString;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8B3F74", Offset = "0x8B3F74")]
		public string BranchReplaceString;

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xC11A38", Offset = "0xC11A38", VA = "0xC11A38")]
		protected string GetText(string baseText)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xC11CD4", Offset = "0xC11CD4", VA = "0xC11CD4")]
		protected VersionTextBase()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class VersionTextMeshPro : VersionTextBase
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshPro Text;

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xCA1E90", Offset = "0xCA1E90", VA = "0xCA1E90")]
		private void Start()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xCA1ECC", Offset = "0xCA1ECC", VA = "0xCA1ECC")]
		public VersionTextMeshPro()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class VersionTextMeshProUGUI : VersionTextBase
	{
		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI Text;

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xCA1ED4", Offset = "0xCA1ED4", VA = "0xCA1ED4")]
		private void Start()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xCA1F10", Offset = "0xCA1F10", VA = "0xCA1F10")]
		public VersionTextMeshProUGUI()
		{
		}
	}
}
namespace SG.Claymore.UI.Popup
{
	[Token(Token = "0x200016B")]
	public class PopupUI : MonoBehaviour
	{
		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GlobalEvent onLanguageChange;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PopupUIAsset popupUI;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B3FD4", Offset = "0x8B3FD4")]
		[SerializeField]
		private TextMeshProUGUI _header;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TextMeshProUGUI _text;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image _image;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TMP_FontAsset _headerFont;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TMP_FontAsset _textFont;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4060", Offset = "0x8B4060")]
		[SerializeField]
		protected Animator _animator;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B40AC", Offset = "0x8B40AC")]
		[SerializeField]
		private MecanimParameterReference _showParam;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B40F8", Offset = "0x8B40F8")]
		[SerializeField]
		private MecanimParameterReference _hideParam;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _useLegacyAnimation;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[SerializeField]
		private bool _isUnscaled;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Animation _animation;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AnimationClip _showAnimationClip;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AnimationClip _hideAnimationClip;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4194", Offset = "0x8B4194")]
		[SerializeField]
		private float _stretch;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Renderer _backgroundRenderer;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B41F0", Offset = "0x8B41F0")]
		[SerializeField]
		private MaterialPropertyReference _stretchParam;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Layer _visibleLayer;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private Layer _hiddenLayer;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B425C", Offset = "0x8B425C")]
		[SerializeField]
		private Transform[] _renderers;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private AnimationState _currentAnimationState;

		[NonSerialized]
		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float _elapsedAnimationTime;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4298", Offset = "0x8B4298")]
		[SerializeField]
		private TextKey dashImpact;

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xC0BB48", Offset = "0xC0BB48", VA = "0xC0BB48")]
		private void Awake()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xC0BD24", Offset = "0xC0BD24", VA = "0xC0BD24")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xC0BDBC", Offset = "0xC0BDBC", VA = "0xC0BDBC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xC0BCA8", Offset = "0xC0BCA8", VA = "0xC0BCA8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xC0BE4C", Offset = "0xC0BE4C", VA = "0xC0BE4C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xC0BF64", Offset = "0xC0BF64", VA = "0xC0BF64")]
		public void Setup(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC0C2C4", Offset = "0xC0C2C4", VA = "0xC0C2C4", Slot = "4")]
		protected virtual void ApplyPosition(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xC0C44C", Offset = "0xC0C44C", VA = "0xC0C44C")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC0C190", Offset = "0xC0C190", VA = "0xC0C190")]
		private void SetText(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC0C6B8", Offset = "0xC0C6B8", VA = "0xC0C6B8")]
		public void Show()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xC0C824", Offset = "0xC0C824", VA = "0xC0C824")]
		public void Dismiss()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC0C508", Offset = "0xC0C508", VA = "0xC0C508")]
		private string RemoveSizeTags(string text)
		{
			return null;
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xC0C914", Offset = "0xC0C914", VA = "0xC0C914")]
		public PopupUI()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A21F4", Offset = "0x8A21F4")]
	public class PopupUIAsset : ScriptableObject
	{
		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B42E4", Offset = "0x8B42E4")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceRequestKey _templateKey;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4340", Offset = "0x8B4340")]
		[SerializeField]
		private bool _useInputSprite;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8B438C", Offset = "0x8B438C")]
		[SerializeField]
		private InputAction _inputAction;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8B43D8", Offset = "0x8B43D8")]
		[SerializeField]
		private Sprite _sprite;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B442C", Offset = "0x8B442C")]
		private string _header;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UserString _userHeader;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B4498", Offset = "0x8B4498")]
		private string _text;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UserString _userText;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B4504", Offset = "0x8B4504")]
		[SerializeField]
		private TextFormatKey[] _formatKeys;

		[NonSerialized]
		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TransformVariable Parent;

		[Token(Token = "0x170000A3")]
		public ResourceRequestKey TemplateKey
		{
			[Token(Token = "0x600072B")]
			[Address(RVA = "0xC0C9BC", Offset = "0xC0C9BC", VA = "0xC0C9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public Sprite Sprite
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0xC0C2C0", Offset = "0xC0C2C0", VA = "0xC0C2C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public string Header
		{
			[Token(Token = "0x600072D")]
			[Address(RVA = "0xC0C4D8", Offset = "0xC0C4D8", VA = "0xC0C4D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A6")]
		public string Text
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0xC0C688", Offset = "0xC0C688", VA = "0xC0C688")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xC0CA10", Offset = "0xC0CA10", VA = "0xC0CA10")]
		private string Format(string text)
		{
			return null;
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC0C5CC", Offset = "0xC0C5CC", VA = "0xC0C5CC")]
		public TMP_FontAsset GetFont(TMP_FontAsset defaultFont)
		{
			return null;
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xC0C9C4", Offset = "0xC0C9C4", VA = "0xC0C9C4")]
		private Sprite GetSprite()
		{
			return null;
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xC0CA64", Offset = "0xC0CA64", VA = "0xC0CA64")]
		public PopupUIAsset()
		{
		}
	}
	[Token(Token = "0x200016D")]
	public class PopupUIController : MonoBehaviour
	{
		[Token(Token = "0x20004AD")]
		private class PopupUILoader : IResourceLoadHandler<PopupUI>, IResourceLoadHandler
		{
			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ResourceRequestKey _key;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly PopupUIController _poolController;

			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xC0D488", Offset = "0xC0D488", VA = "0xC0D488")]
			public PopupUILoader(ResourceRequestKey key, PopupUIController poolController)
			{
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xC0D548", Offset = "0xC0D548", VA = "0xC0D548", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEA4", Offset = "0x8AAEA4")]
		private sealed class <Start>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PopupUIController <>4__this;

			[Token(Token = "0x17000438")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C26")]
				[Address(RVA = "0xC0D4D8", Offset = "0xC0D4D8", VA = "0xC0D4D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000439")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C28")]
				[Address(RVA = "0xC0D540", Offset = "0xC0D540", VA = "0xC0D540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xC0CBB4", Offset = "0xC0CBB4", VA = "0xC0CBB4")]
			[DebuggerHidden]
			public <Start>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xC0D348", Offset = "0xC0D348", VA = "0xC0D348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xC0D34C", Offset = "0xC0D34C", VA = "0xC0D34C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C27")]
			[Address(RVA = "0xC0D4E0", Offset = "0xC0D4E0", VA = "0xC0D4E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4550", Offset = "0x8B4550")]
		[SerializeField]
		private EnemyGlobalEvent _onPlayerKilled;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B459C", Offset = "0x8B459C")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ResourceRequestKey[] _popupUIKeys;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4608", Offset = "0x8B4608")]
		[SerializeField]
		private PopupUIAssetGlobalEvent _showPopupUIGlobalEvent;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PopupUIAssetGlobalEvent _dismissPopupUIGlobalEvent;

		[NonSerialized]
		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _elementsLoaded;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<ResourceRequestKey, CircularComponentPool<PopupUI>> _popupUIPool;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<PopupUIAsset, PopupUI> _activePopupUIDictionary;

		[Token(Token = "0x170000A7")]
		private bool IsReady
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xC0CAD0", Offset = "0xC0CAD0", VA = "0xC0CAD0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xC0CB38", Offset = "0xC0CB38", VA = "0xC0CB38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF0F8", Offset = "0x8DF0F8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xC0CBE0", Offset = "0xC0CBE0", VA = "0xC0CBE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC0CD2C", Offset = "0xC0CD2C", VA = "0xC0CD2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC0CE60", Offset = "0xC0CE60", VA = "0xC0CE60")]
		private void OnPlayerKilled(Enemy enemy)
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC0CF68", Offset = "0xC0CF68", VA = "0xC0CF68")]
		private void OnShowPopupUI(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xC0D15C", Offset = "0xC0D15C", VA = "0xC0D15C")]
		private void OnDismissPopupUI(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xC0D26C", Offset = "0xC0D26C", VA = "0xC0D26C")]
		public PopupUIController()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public class PopupUIRandomDisplay : PopupUI
	{
		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4664", Offset = "0x8B4664")]
		[SerializeField]
		private IntVariable choiceIndexMemory;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B46B0", Offset = "0x8B46B0")]
		[SerializeField]
		private PopupUIAsset[] choices;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B46FC", Offset = "0x8B46FC")]
		[SerializeField]
		private bool autoShow;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4748", Offset = "0x8B4748")]
		[SerializeField]
		private float autoShowDelay;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4794", Offset = "0x8B4794")]
		[SerializeField]
		private bool useUnscaledTime;

		[NonSerialized]
		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool displayed;

		[NonSerialized]
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float elapsed;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B47E0", Offset = "0x8B47E0")]
		[SerializeField]
		private bool debugMode;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private int curIndex;

		[Token(Token = "0x170000A8")]
		public int CurIndex
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0xC0D6B0", Offset = "0xC0D6B0", VA = "0xC0D6B0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000A9")]
		public bool IsLast
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0xC0D6B8", Offset = "0xC0D6B8", VA = "0xC0D6B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AA")]
		public bool IsFirst
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0xC0D6E4", Offset = "0xC0D6E4", VA = "0xC0D6E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xC0D6F4", Offset = "0xC0D6F4", VA = "0xC0D6F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xC0D774", Offset = "0xC0D774", VA = "0xC0D774")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF15C", Offset = "0x8DF15C")]
		public void Display()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xC0D8C0", Offset = "0xC0D8C0", VA = "0xC0D8C0", Slot = "4")]
		protected override void ApplyPosition(PopupUIAsset popupUIAsset)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xC0D8C4", Offset = "0xC0D8C4", VA = "0xC0D8C4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC0D8D0", Offset = "0xC0D8D0", VA = "0xC0D8D0")]
		public string DebugDisplayNext()
		{
			return null;
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xC0D954", Offset = "0xC0D954", VA = "0xC0D954")]
		public string DebugDisplayPrev()
		{
			return null;
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC0D9F8", Offset = "0xC0D9F8", VA = "0xC0D9F8")]
		public int GetIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xC0DA00", Offset = "0xC0DA00", VA = "0xC0DA00")]
		public PopupUIRandomDisplay()
		{
		}
	}
}
namespace SG.Claymore.UI.Notification
{
	[Token(Token = "0x200016F")]
	public class AbilityChargeUINotifierInstanced : MonoBehaviour
	{
		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEB4", Offset = "0x8AAEB4")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AbilityChargeUINotifierInstanced <>4__this;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int index;

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xBFF6F0", Offset = "0xBFF6F0", VA = "0xBFF6F0")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xC00B68", Offset = "0xC00B68", VA = "0xC00B68")]
			internal void <Register>b__0()
			{
			}
		}

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B482C", Offset = "0x8B482C")]
		[SerializeField]
		private PlayerHandState _leftHandState;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IntVariable _modalUICount;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4898", Offset = "0x8B4898")]
		[SerializeField]
		private Transform _leftTransform;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _rightTransform;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B4914", Offset = "0x8B4914")]
		[SerializeField]
		private MaterialPropertyReference _superType;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B4960", Offset = "0x8B4960")]
		[SerializeField]
		private MaterialPropertyReference _scaleParam;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B49AC", Offset = "0x8B49AC")]
		[SerializeField]
		private MaterialPropertyReference _sheenScaleParam;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B49F8", Offset = "0x8B49F8")]
		[SerializeField]
		private MaterialPropertyReference _sheenAlphaParam;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private TrailRenderer _leftTrailRenderer;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private TrailRenderer _rightTrailRenderer;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4A64", Offset = "0x8B4A64")]
		[SerializeField]
		private float _showDuration;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AnimationCurve _timeMoveCurve;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AnimationCurve _scale;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AnimationCurve _sheenScale;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AnimationCurve _sheenAlpha;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private BoolVariable _playerHUDEnabled;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private TransformVariable _leftTargetIconPosition;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TransformVariable _rightTargetIconPosition;

		[NonSerialized]
		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Vector3[] _initialIconPositions;

		[NonSerialized]
		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Vector3[] _initialIconScales;

		[NonSerialized]
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Quaternion[] _initialLocalRotations;

		[NonSerialized]
		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly float[] _startDisplayTimes;

		[NonSerialized]
		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private readonly bool[] _isDisplayingChargedNotifications;

		[NonSerialized]
		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private readonly float[] _timeStarted;

		[NonSerialized]
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private readonly float[] _scales;

		[NonSerialized]
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private readonly float[] _sheenScales;

		[NonSerialized]
		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly float[] _sheenAlphas;

		[NonSerialized]
		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly float[] _superTypes;

		[NonSerialized]
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly ArmamentAbilityUser[] _currentArmamentAbilityUser;

		[NonSerialized]
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly ArmamentAbilityDefinition[] _currentAbilityIDs;

		[NonSerialized]
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _canUpdatePose;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Action[] _cachedFullCharge;

		[NonSerialized]
		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private PlayerHandState[] _states;

		[NonSerialized]
		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Transform[] _transforms;

		[NonSerialized]
		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private TrailRenderer[] _trailRenderers;

		[NonSerialized]
		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool[] _registered;

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xBFED90", Offset = "0xBFED90", VA = "0xBFED90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xBFF178", Offset = "0xBFF178", VA = "0xBFF178")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xBFF21C", Offset = "0xBFF21C", VA = "0xBFF21C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xBFF2B8", Offset = "0xBFF2B8", VA = "0xBFF2B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xBFF46C", Offset = "0xBFF46C", VA = "0xBFF46C")]
		private void OnModalChanged(int newValue)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xBFF4A8", Offset = "0xBFF4A8", VA = "0xBFF4A8")]
		private void Register(int index)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xBFF2E4", Offset = "0xBFF2E4", VA = "0xBFF2E4")]
		private void Unregister(int index)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xBFF6F8", Offset = "0xBFF6F8", VA = "0xBFF6F8")]
		private void SetCurrentArmamentAbilityUser(int index, Armament armament)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xBFFAB0", Offset = "0xBFFAB0", VA = "0xBFFAB0")]
		private void Draw()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xBFFEC8", Offset = "0xBFFEC8", VA = "0xBFFEC8")]
		public void DoUpdate(Pose pose)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xC00764", Offset = "0xC00764", VA = "0xC00764")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC00240", Offset = "0xC00240", VA = "0xC00240")]
		private void DoMove(int index)
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xBFF9A4", Offset = "0xBFF9A4", VA = "0xBFF9A4")]
		private void OnFullCharge(int index)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC00770", Offset = "0xC00770", VA = "0xC00770")]
		private void ResetMovableObject(int index)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xC00868", Offset = "0xC00868", VA = "0xC00868")]
		public AbilityChargeUINotifierInstanced()
		{
		}
	}
	[Token(Token = "0x2000170")]
	public class DashUINotifierInstanced : MonoBehaviour
	{
		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEC4", Offset = "0x8AAEC4")]
		private sealed class <AnimationCoroutine>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DashUINotifierInstanced <>4__this;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700043A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C2E")]
				[Address(RVA = "0xC01F88", Offset = "0xC01F88", VA = "0xC01F88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C30")]
				[Address(RVA = "0xC01FF0", Offset = "0xC01FF0", VA = "0xC01FF0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C2B")]
			[Address(RVA = "0xC01C3C", Offset = "0xC01C3C", VA = "0xC01C3C")]
			[DebuggerHidden]
			public <AnimationCoroutine>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xC01D1C", Offset = "0xC01D1C", VA = "0xC01D1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C2D")]
			[Address(RVA = "0xC01D20", Offset = "0xC01D20", VA = "0xC01D20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xC01F90", Offset = "0xC01F90", VA = "0xC01F90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4B20", Offset = "0x8B4B20")]
		[SerializeField]
		protected IntVariable _dashChargesVariable;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4B6C", Offset = "0x8B4B6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4B6C", Offset = "0x8B4B6C")]
		[SerializeField]
		private BinaryInputAction _dashBackInputAction;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4BDC", Offset = "0x8B4BDC")]
		[SerializeField]
		private BinaryInputAction _dashForwardInputAction;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4C28", Offset = "0x8B4C28")]
		[SerializeField]
		private AudioKeyData _dashDepletedSFXKey;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioKeyData _dashGainSFXKey;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4C84", Offset = "0x8B4C84")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B4CD0", Offset = "0x8B4CD0")]
		[SerializeField]
		private MaterialPropertyReference _textureParam;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B4D1C", Offset = "0x8B4D1C")]
		[SerializeField]
		private MaterialPropertyReference _dataParam;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationCurve _iconAlphaAnimation;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AnimationCurve _alphaAnimation;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationCurve _scaleAnimation;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4DA8", Offset = "0x8B4DA8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B4DA8", Offset = "0x8B4DA8")]
		private float _uvHeightMask;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4E0C", Offset = "0x8B4E0C")]
		[SerializeField]
		private GlobalEvent _rebakeRTGlobalEvent;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Camera _rtCamera;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B4E68", Offset = "0x8B4E68")]
		[SerializeField]
		private RenderTexture _rt;

		[NonSerialized]
		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTextureDescriptor _rtDesc;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform _template;

		[NonSerialized]
		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int _frameDepleted;

		[NonSerialized]
		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool _isDepleted;

		[NonSerialized]
		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine _animationCoroutine;

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC00B88", Offset = "0xC00B88", VA = "0xC00B88")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC00C84", Offset = "0xC00C84", VA = "0xC00C84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC00DF8", Offset = "0xC00DF8", VA = "0xC00DF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC00F5C", Offset = "0xC00F5C", VA = "0xC00F5C")]
		private void DebugRebakeRT()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC018F8", Offset = "0xC018F8", VA = "0xC018F8")]
		private void DebugPlay()
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC01A4C", Offset = "0xC01A4C", VA = "0xC01A4C")]
		private void OnDash()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC01B68", Offset = "0xC01B68", VA = "0xC01B68")]
		private void OnDashChargeChanged(int newValue)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC00C80", Offset = "0xC00C80", VA = "0xC00C80")]
		private void RenderRT()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC019D0", Offset = "0xC019D0", VA = "0xC019D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF194", Offset = "0x8DF194")]
		private IEnumerator AnimationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xC01C68", Offset = "0xC01C68", VA = "0xC01C68")]
		public DashUINotifierInstanced()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class DashUINotifierInstancedLocalized : MonoBehaviour
	{
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAED4", Offset = "0x8AAED4")]
		private sealed class <AnimationCoroutine>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DashUINotifierInstancedLocalized <>4__this;

			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700043C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C34")]
				[Address(RVA = "0xC0333C", Offset = "0xC0333C", VA = "0xC0333C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C36")]
				[Address(RVA = "0xC033A4", Offset = "0xC033A4", VA = "0xC033A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C31")]
			[Address(RVA = "0xC02FA4", Offset = "0xC02FA4", VA = "0xC02FA4")]
			[DebuggerHidden]
			public <AnimationCoroutine>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xC0317C", Offset = "0xC0317C", VA = "0xC0317C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C33")]
			[Address(RVA = "0xC03180", Offset = "0xC03180", VA = "0xC03180", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xC03344", Offset = "0xC03344", VA = "0xC03344", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4EB4", Offset = "0x8B4EB4")]
		[SerializeField]
		protected IntVariable _dashChargesVariable;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4F00", Offset = "0x8B4F00")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4F00", Offset = "0x8B4F00")]
		[SerializeField]
		private BinaryInputAction _dashBackInputAction;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B4F70", Offset = "0x8B4F70")]
		[SerializeField]
		private BinaryInputAction _dashForwardInputAction;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B4FBC", Offset = "0x8B4FBC")]
		[SerializeField]
		private AudioKeyData _dashDepletedSFXKey;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioKeyData _dashGainSFXKey;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5018", Offset = "0x8B5018")]
		[SerializeField]
		private AnimationCurve _iconAlphaAnimation;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve _alphaAnimation;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve _scaleAnimation;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5094", Offset = "0x8B5094")]
		[SerializeField]
		private GlobalEvent _rebakeRTGlobalEvent;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _template;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B50F0", Offset = "0x8B50F0")]
		[SerializeField]
		private SpriteRenderer _iconRenderer;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshPro _message;

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform _scaleParent;

		[NonSerialized]
		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _frameDepleted;

		[NonSerialized]
		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _isDepleted;

		[NonSerialized]
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _animationCoroutine;

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xC01FF8", Offset = "0xC01FF8", VA = "0xC01FF8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC01FFC", Offset = "0xC01FFC", VA = "0xC01FFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xC02170", Offset = "0xC02170", VA = "0xC02170")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xC022D4", Offset = "0xC022D4", VA = "0xC022D4")]
		private void DebugRebakeRT()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xC02C74", Offset = "0xC02C74", VA = "0xC02C74")]
		private void DebugPlay()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xC02DC8", Offset = "0xC02DC8", VA = "0xC02DC8")]
		private void OnDash()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xC02ED0", Offset = "0xC02ED0", VA = "0xC02ED0")]
		private void OnDashChargeChanged(int newValue)
		{
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xC02C70", Offset = "0xC02C70", VA = "0xC02C70")]
		private void RenderRT()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xC02D4C", Offset = "0xC02D4C", VA = "0xC02D4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF1F8", Offset = "0x8DF1F8")]
		private IEnumerator AnimationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xC02FD0", Offset = "0xC02FD0", VA = "0xC02FD0")]
		private void UpdateTemplate(Vector3 _data)
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xC030CC", Offset = "0xC030CC", VA = "0xC030CC")]
		public DashUINotifierInstancedLocalized()
		{
		}
	}
	[Token(Token = "0x2000172")]
	public abstract class DeathsDoorVisuals : MonoBehaviour
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected IntVariable _modalUICount;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[NonSerialized]
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected bool _isOnDeathsDoor;

		[NonSerialized]
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected FullScreenEffect _deathsDoorScreenOverlay;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _useFullScreenMaterial;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected Material _fullScreenMaterial;

		[NonSerialized]
		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Material _runtimeFullScreenMaterial;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		protected float _fadeToClearTime;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected AnimationCurve _fadeToClearCurve;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B51BC", Offset = "0x8B51BC")]
		[SerializeField]
		protected MaterialPropertyReference _animationProperty;

		[NonSerialized]
		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float _lastAlphaValue;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Coroutine _deathsDoorFadeCoroutine;

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xC033AC", Offset = "0xC033AC", VA = "0xC033AC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xC0357C", Offset = "0xC0357C", VA = "0xC0357C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600076C")]
		protected abstract void OnModalUICountChanged(int newCount);

		[Token(Token = "0x600076D")]
		public abstract void OnEnterDeathsDoor();

		[Token(Token = "0x600076E")]
		public abstract void OnExitDeathsDoor();

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC036BC", Offset = "0xC036BC", VA = "0xC036BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC036C0", Offset = "0xC036C0", VA = "0xC036C0")]
		protected DeathsDoorVisuals()
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class DeathsDoorVisualsHQ : DeathsDoorVisuals
	{
		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEE4", Offset = "0x8AAEE4")]
		private sealed class <DeathsDoorFadeCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathsDoorVisualsHQ <>4__this;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700043E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3A")]
				[Address(RVA = "0xC03BD8", Offset = "0xC03BD8", VA = "0xC03BD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700043F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3C")]
				[Address(RVA = "0xC03C40", Offset = "0xC03C40", VA = "0xC03C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C37")]
			[Address(RVA = "0xC03A20", Offset = "0xC03A20", VA = "0xC03A20")]
			[DebuggerHidden]
			public <DeathsDoorFadeCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xC03A50", Offset = "0xC03A50", VA = "0xC03A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C39")]
			[Address(RVA = "0xC03A54", Offset = "0xC03A54", VA = "0xC03A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xC03BE0", Offset = "0xC03BE0", VA = "0xC03BE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SpriteRenderer _deathsDoorsIcon;

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC0377C", Offset = "0xC0377C", VA = "0xC0377C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC037B0", Offset = "0xC037B0", VA = "0xC037B0", Slot = "5")]
		protected override void OnModalUICountChanged(int newCount)
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC038BC", Offset = "0xC038BC", VA = "0xC038BC", Slot = "6")]
		public override void OnEnterDeathsDoor()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC0394C", Offset = "0xC0394C", VA = "0xC0394C", Slot = "7")]
		public override void OnExitDeathsDoor()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC039A4", Offset = "0xC039A4", VA = "0xC039A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF25C", Offset = "0x8DF25C")]
		private IEnumerator DeathsDoorFadeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC03838", Offset = "0xC03838", VA = "0xC03838")]
		private void SetDeathsDoorGroupAlpha(float newValue)
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC03A4C", Offset = "0xC03A4C", VA = "0xC03A4C")]
		public DeathsDoorVisualsHQ()
		{
		}
	}
	[Token(Token = "0x2000174")]
	public class DeathsDoorVisualsLQ : DeathsDoorVisuals
	{
		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAEF4", Offset = "0x8AAEF4")]
		private sealed class <DeathsDoorFadeCoroutine>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathsDoorVisualsLQ <>4__this;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x17000440")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C40")]
				[Address(RVA = "0xC0432C", Offset = "0xC0432C", VA = "0xC0432C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000441")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C42")]
				[Address(RVA = "0xC04394", Offset = "0xC04394", VA = "0xC04394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xC0407C", Offset = "0xC0407C", VA = "0xC0407C")]
			[DebuggerHidden]
			public <DeathsDoorFadeCoroutine>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xC04160", Offset = "0xC04160", VA = "0xC04160", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xC04164", Offset = "0xC04164", VA = "0xC04164", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xC04334", Offset = "0xC04334", VA = "0xC04334", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Renderer _skullRenderer;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Renderer _skullRendererDissolve;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B5238", Offset = "0x8B5238")]
		[SerializeField]
		protected MaterialPropertyReference _dissolveParam;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FloatRange _dissolveRange;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC03C48", Offset = "0xC03C48", VA = "0xC03C48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xC03CB0", Offset = "0xC03CB0", VA = "0xC03CB0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xC03CF8", Offset = "0xC03CF8", VA = "0xC03CF8", Slot = "5")]
		protected override void OnModalUICountChanged(int newCount)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xC03EFC", Offset = "0xC03EFC", VA = "0xC03EFC", Slot = "6")]
		public override void OnEnterDeathsDoor()
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xC03FA8", Offset = "0xC03FA8", VA = "0xC03FA8", Slot = "7")]
		public override void OnExitDeathsDoor()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xC04000", Offset = "0xC04000", VA = "0xC04000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF2C0", Offset = "0x8DF2C0")]
		private IEnumerator DeathsDoorFadeCoroutine()
		{
			return null;
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xC03DD4", Offset = "0xC03DD4", VA = "0xC03DD4")]
		private void SetDeathsDoorGroupAlpha(float newValue)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xC040A8", Offset = "0xC040A8", VA = "0xC040A8")]
		public DeathsDoorVisualsLQ()
		{
		}
	}
	[Token(Token = "0x2000175")]
	public class HealthUINotifierInstanced : PlayerHealthUIInstanced
	{
		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float _timeVisible;

		[NonSerialized]
		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _lastTimeChanged;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B52A4", Offset = "0x8B52A4")]
		[SerializeField]
		private ScreenFlashRequestAsset _healthGainScreenFlashRequestAsset;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioKeyData _healthGainSFXKey;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5310", Offset = "0x8B5310")]
		[SerializeField]
		private DeathsDoorVisuals _deathsDoorVisuals;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		protected GlobalEvent _onEnterDeathsDoor;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected GlobalEvent _onExitDeathsDoor;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xC0439C", Offset = "0xC0439C", VA = "0xC0439C", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xC04530", Offset = "0xC04530", VA = "0xC04530")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xC0461C", Offset = "0xC0461C", VA = "0xC0461C", Slot = "7")]
		protected override void OnPlayerHealthChanged(float newHealth)
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xC0498C", Offset = "0xC0498C", VA = "0xC0498C", Slot = "8")]
		protected override void OnMaxPlayerHealthChanged(float newMaxHealth)
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xC04A44", Offset = "0xC04A44", VA = "0xC04A44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xC04E54", Offset = "0xC04E54", VA = "0xC04E54")]
		private void OnEnterDeathsDoor()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xC04E74", Offset = "0xC04E74", VA = "0xC04E74")]
		private void OnExitDeathsDoor()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xC04E94", Offset = "0xC04E94", VA = "0xC04E94")]
		public HealthUINotifierInstanced()
		{
		}
	}
	[Token(Token = "0x2000176")]
	public class NotificationUI : XRNodeTracker
	{
		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AbilityChargeUINotifierInstanced abilityChargeUINotifier;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B538C", Offset = "0x8B538C")]
		[SerializeField]
		private BoolVariable settingsNotificationEnabled;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable tutorialNotificationEnabled;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject mainPanel;

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xC04EA4", Offset = "0xC04EA4", VA = "0xC04EA4", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xC04FA0", Offset = "0xC04FA0", VA = "0xC04FA0", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xC0508C", Offset = "0xC0508C", VA = "0xC0508C")]
		private void OnSetPlayerNotificationEnabled(bool isVisible)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xC05100", Offset = "0xC05100", VA = "0xC05100", Slot = "6")]
		protected override void OnPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xC0516C", Offset = "0xC0516C", VA = "0xC0516C")]
		public NotificationUI()
		{
		}
	}
	[Token(Token = "0x2000177")]
	public class NotificationUIRoot : MonoBehaviour, IResourceLoadHandler<NotificationUI>, IResourceLoadHandler
	{
		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceRequestKey _notificationUIKey;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xC05174", Offset = "0xC05174", VA = "0xC05174")]
		private void Awake()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xC0525C", Offset = "0xC0525C", VA = "0xC0525C", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xC05364", Offset = "0xC05364", VA = "0xC05364")]
		public NotificationUIRoot()
		{
		}
	}
}
namespace SG.Claymore.UI.Modal
{
	[Token(Token = "0x2000178")]
	public class ModalUI : MonoBehaviour
	{
		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int SortingOrder;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xBFEAE8", Offset = "0xBFEAE8", VA = "0xBFEAE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xBFEB68", Offset = "0xBFEB68", VA = "0xBFEB68")]
		public ModalUI()
		{
		}
	}
	[Token(Token = "0x2000179")]
	public class ModalUIElement : MonoBehaviour
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer[] _renderers;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Canvas[] _canvases;

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xBFEBC4", Offset = "0xBFEBC4", VA = "0xBFEBC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xBFED00", Offset = "0xBFED00", VA = "0xBFED00")]
		public ModalUIElement()
		{
		}
	}
}
namespace SG.Claymore.UI.Inspection
{
	[Token(Token = "0x200017A")]
	public class DescriptionInspectionPanel : InspectionPanel
	{
		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5448", Offset = "0x8B5448")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5448", Offset = "0x8B5448")]
		[SerializeField]
		private TextMeshProUGUI nameText;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B54B8", Offset = "0x8B54B8")]
		[SerializeField]
		private TextMeshProUGUI descriptionText;

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xAFA80C", Offset = "0xAFA80C", VA = "0xAFA80C", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xAFA94C", Offset = "0xAFA94C", VA = "0xAFA94C", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xAFA980", Offset = "0xAFA980", VA = "0xAFA980")]
		public DescriptionInspectionPanel()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class DescriptionInspectionPanelLQ : InspectionPanel
	{
		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5504", Offset = "0x8B5504")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5504", Offset = "0x8B5504")]
		[SerializeField]
		private TextMeshPro nameText;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5574", Offset = "0x8B5574")]
		[SerializeField]
		private TextMeshPro descriptionText;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xAFA988", Offset = "0xAFA988", VA = "0xAFA988", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xAFAAC8", Offset = "0xAFAAC8", VA = "0xAFAAC8")]
		public DescriptionInspectionPanelLQ()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class StatSet
	{
		[Token(Token = "0x20004B4")]
		public struct VariableDiff
		{
			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Amount;
		}

		[Token(Token = "0x20004B5")]
		public class StatSetDiff
		{
			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Dictionary<Variable, float> variableDiffs;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC4C4", Offset = "0x8DC4C4")]
			private bool <AbilityChanged>k__BackingField;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC4D4", Offset = "0x8DC4D4")]
			private float <StaminaIncrease>k__BackingField;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC4E4", Offset = "0x8DC4E4")]
			private float <HealthIncrease>k__BackingField;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC4F4", Offset = "0x8DC4F4")]
			private int <ArmamentLevelIncrease>k__BackingField;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public readonly List<Variable> changed;

			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DC504", Offset = "0x8DC504")]
			private int <TraitCountDelta>k__BackingField;

			[Token(Token = "0x17000442")]
			public bool AbilityChanged
			{
				[Token(Token = "0x6001C43")]
				[Address(RVA = "0xCF8378", Offset = "0xCF8378", VA = "0xCF8378")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FEC", Offset = "0x8E3FEC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001C44")]
				[Address(RVA = "0xCF8380", Offset = "0xCF8380", VA = "0xCF8380")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3FFC", Offset = "0x8E3FFC")]
				set
				{
				}
			}

			[Token(Token = "0x17000443")]
			public float StaminaIncrease
			{
				[Token(Token = "0x6001C45")]
				[Address(RVA = "0xCF838C", Offset = "0xCF838C", VA = "0xCF838C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E400C", Offset = "0x8E400C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001C46")]
				[Address(RVA = "0xCF8394", Offset = "0xCF8394", VA = "0xCF8394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E401C", Offset = "0x8E401C")]
				set
				{
				}
			}

			[Token(Token = "0x17000444")]
			public float HealthIncrease
			{
				[Token(Token = "0x6001C47")]
				[Address(RVA = "0xCF839C", Offset = "0xCF839C", VA = "0xCF839C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E402C", Offset = "0x8E402C")]
				get
				{
					return default(float);
				}
				[Token(Token = "0x6001C48")]
				[Address(RVA = "0xCF83A4", Offset = "0xCF83A4", VA = "0xCF83A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E403C", Offset = "0x8E403C")]
				set
				{
				}
			}

			[Token(Token = "0x17000445")]
			public int ArmamentLevelIncrease
			{
				[Token(Token = "0x6001C49")]
				[Address(RVA = "0xCF83AC", Offset = "0xCF83AC", VA = "0xCF83AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E404C", Offset = "0x8E404C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001C4A")]
				[Address(RVA = "0xCF83B4", Offset = "0xCF83B4", VA = "0xCF83B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E405C", Offset = "0x8E405C")]
				set
				{
				}
			}

			[Token(Token = "0x17000446")]
			public int TraitCountDelta
			{
				[Token(Token = "0x6001C4B")]
				[Address(RVA = "0xCF83BC", Offset = "0xCF83BC", VA = "0xCF83BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E406C", Offset = "0x8E406C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001C4C")]
				[Address(RVA = "0xCF83C4", Offset = "0xCF83C4", VA = "0xCF83C4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E407C", Offset = "0x8E407C")]
				set
				{
				}
			}

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xCEA7C8", Offset = "0xCEA7C8", VA = "0xCEA7C8")]
			public StatSetDiff()
			{
			}
		}

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float baseStaminaDamage;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int baseHealthDamage;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int armamentLevel;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly ArmamentAbilityDefinition ability;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Dictionary<Variable, float> variableValues;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Dictionary<Variable, float> variableChanges;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<Variable, int> variableToModIndex;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<StatMod> mods;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly List<BaseArmamentTrait> countedTraits;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ArmamentID sourceID;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Armament armInstance;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ArmamentVariablesDefinition weaponVars;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B55C0", Offset = "0x8B55C0")]
		private BaseArmamentTrait <AdditionalTrait>k__BackingField;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly IVariableResolver[] orderedInstancers;

		[Token(Token = "0x170000AB")]
		public ArmamentAbilityDefinition Ability
		{
			[Token(Token = "0x600079A")]
			[Address(RVA = "0xCF7A7C", Offset = "0xCF7A7C", VA = "0xCF7A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AC")]
		public int ArmamentLevel
		{
			[Token(Token = "0x600079B")]
			[Address(RVA = "0xCF7A84", Offset = "0xCF7A84", VA = "0xCF7A84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AD")]
		public float StaminaDamage
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xCF7A8C", Offset = "0xCF7A8C", VA = "0xCF7A8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AE")]
		public int HealthDamage
		{
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xCEC920", Offset = "0xCEC920", VA = "0xCEC920")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000AF")]
		public BaseArmamentTrait AdditionalTrait
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xCF7A94", Offset = "0xCF7A94", VA = "0xCF7A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF324", Offset = "0x8DF324")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xCF7A9C", Offset = "0xCF7A9C", VA = "0xCF7A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF334", Offset = "0x8DF334")]
			private set
			{
			}
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xCF7AA4", Offset = "0xCF7AA4", VA = "0xCF7AA4")]
		private void VariableChange(Variable v, float amount)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xCEA878", Offset = "0xCEA878", VA = "0xCEA878")]
		public StatSet(Armament arm, ArmamentAugment nextUpgrade, ArmamentVariablesDefinition weaponVariables, IVariableResolver playerInstancer)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xCEAE84", Offset = "0xCEAE84", VA = "0xCEAE84")]
		public StatSet(ArmamentID id, int armamentLevel, ArmamentVariablesDefinition weaponVariables, IVariableResolver playerInstancer)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xCEB4D0", Offset = "0xCEB4D0", VA = "0xCEB4D0")]
		public StatSetDiff DiffFrom(StatSet originalStats, ArmamentID id)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xCF81B4", Offset = "0xCF81B4", VA = "0xCF81B4")]
		private void CalculateDamages(ArmamentID id, ArmamentVariablesDefinition weaponVariables)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xCF80B8", Offset = "0xCF80B8", VA = "0xCF80B8")]
		private void UpdateValues(StatMod buff, ArmamentVariablesDefinition weaponVariables)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xCF7E70", Offset = "0xCF7E70", VA = "0xCF7E70")]
		private void AddMod(StatMod mod, ArmamentID id, bool allowInstance)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class HandUIEmitter : MonoBehaviour
	{
		[Token(Token = "0x20004B6")]
		private class InspectionPanelLoader : IResourceLoadHandler<InspectionPanel>, IResourceLoadHandler
		{
			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ResourceRequestKey _key;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly HandUIEmitter _handUiEmitter;

			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xCE94A0", Offset = "0xCE94A0", VA = "0xCE94A0")]
			public InspectionPanelLoader(ResourceRequestKey key, HandUIEmitter handUIEmitter)
			{
			}

			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xCE94F0", Offset = "0xCE94F0", VA = "0xCE94F0", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable isUIPanelActivated;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandVariable hand;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5600", Offset = "0x8B5600")]
		[SerializeField]
		private float angleToDisplay;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B564C", Offset = "0x8B564C")]
		[SerializeField]
		private Transform centerPoint;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5698", Offset = "0x8B5698")]
		[SerializeField]
		private Transform moveRoot;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B56E4", Offset = "0x8B56E4")]
		[SerializeField]
		private ResourceLoadingController resourceLoadingController;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5730", Offset = "0x8B5730")]
		[SerializeField]
		private ResourceRequestKey defaultPanelKey;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ResourceRequestKey[] panelKeys;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float minMoveRadius;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B579C", Offset = "0x8B579C")]
		[SerializeField]
		private float height;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B57E8", Offset = "0x8B57E8")]
		[SerializeField]
		private float depthOffset;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5834", Offset = "0x8B5834")]
		[SerializeField]
		private float boundsOuterRange;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5880", Offset = "0x8B5880")]
		[SerializeField]
		private AnimationCurve catchupCurve;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B58CC", Offset = "0x8B58CC")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8B58CC", Offset = "0x8B58CC")]
		private float forwardBlend;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly Dictionary<ResourceRequestKey, InspectionPanel> panels;

		[NonSerialized]
		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private InspectionPanel activePanel;

		[NonSerialized]
		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PlayerHand currentHand;

		[NonSerialized]
		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform currentHandTransform;

		[NonSerialized]
		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 forward;

		[NonSerialized]
		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool hasHand;

		[Token(Token = "0x170000B0")]
		private bool _isReady
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xAFAF94", Offset = "0xAFAF94", VA = "0xAFAF94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xAFB004", Offset = "0xAFB004", VA = "0xAFB004")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xAFB0A8", Offset = "0xAFB0A8", VA = "0xAFB0A8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xAFB144", Offset = "0xAFB144", VA = "0xAFB144")]
		private void OnHandAssigned(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xAFB41C", Offset = "0xAFB41C", VA = "0xAFB41C")]
		private void OnDestroyArmament()
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xAFB328", Offset = "0xAFB328", VA = "0xAFB328")]
		private void LoadAllPanels()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xAFB4B8", Offset = "0xAFB4B8", VA = "0xAFB4B8")]
		private void AddPanel(ResourceRequestKey key, InspectionPanel prefab)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xAFB5AC", Offset = "0xAFB5AC", VA = "0xAFB5AC")]
		private void DoFollow()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xAFBD60", Offset = "0xAFBD60", VA = "0xAFBD60")]
		private void CatchupPosition()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xAFBAA8", Offset = "0xAFBAA8", VA = "0xAFBAA8")]
		private void DoBillboard()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xAFBFF8", Offset = "0xAFBFF8", VA = "0xAFBFF8")]
		private InspectionPanel GetPanel()
		{
			return null;
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xAFC164", Offset = "0xAFC164", VA = "0xAFC164")]
		private bool ShouldBeOpen()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xAFC36C", Offset = "0xAFC36C", VA = "0xAFC36C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xAFC5B8", Offset = "0xAFC5B8", VA = "0xAFC5B8")]
		public HandUIEmitter()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class InspectionPanel : MonoBehaviour
	{
		[Token(Token = "0x4000749")]
		protected const string PRE_CACHED_FONT_GLYPHS = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!()-+%: ";

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool useLegacyAnimation;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected GlobalEvent onLanguageChange;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B5950", Offset = "0x8B5950")]
		[SerializeField]
		protected PlayerHand playerHand;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B598C", Offset = "0x8B598C")]
		[SerializeField]
		protected CrushInteractable crushInteractableSource;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B59C8", Offset = "0x8B59C8")]
		[SerializeField]
		protected Transform pivot;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5A14", Offset = "0x8B5A14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5A14", Offset = "0x8B5A14")]
		[SerializeField]
		protected Animator animator;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B5A84", Offset = "0x8B5A84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5A84", Offset = "0x8B5A84")]
		[SerializeField]
		protected MecanimParameterReference activatedParam;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B5AF4", Offset = "0x8B5AF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5AF4", Offset = "0x8B5AF4")]
		[SerializeField]
		protected MecanimParameterReference outVisibleParam;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8B5B64", Offset = "0x8B5B64")]
		[SerializeField]
		protected AudioKeyData dismissSFXKey;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected AudioKeyData openSFXKey;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected TextMesh[] _textMeshes;

		[NonSerialized]
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected CrushInteractable previouslyHeld;

		[NonSerialized]
		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool _textInitialized;

		[NonSerialized]
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected PlayerHand activeHand;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B5BBC", Offset = "0x8B5BBC")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x170000B1")]
		public bool IsActive
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xCE95E0", Offset = "0xCE95E0", VA = "0xCE95E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF344", Offset = "0x8DF344")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xCE95E8", Offset = "0xCE95E8", VA = "0xCE95E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF354", Offset = "0x8DF354")]
			set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public Transform Pivot
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xCE95F4", Offset = "0xCE95F4", VA = "0xCE95F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		protected virtual bool RequireHeld
		{
			[Token(Token = "0x60007BE")]
			[Address(RVA = "0xCE9A4C", Offset = "0xCE9A4C", VA = "0xCE9A4C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xCE95FC", Offset = "0xCE95FC", VA = "0xCE95FC", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xCE9694", Offset = "0xCE9694", VA = "0xCE9694", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xCE9724", Offset = "0xCE9724", VA = "0xCE9724", Slot = "6")]
		protected virtual bool ShouldActivate(PlayerHand hand, CrushInteractable previewSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xCE983C", Offset = "0xCE983C", VA = "0xCE983C", Slot = "7")]
		public virtual void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xCE9870", Offset = "0xCE9870", VA = "0xCE9870", Slot = "8")]
		public virtual void RefreshText()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xCE9928", Offset = "0xCE9928", VA = "0xCE9928", Slot = "9")]
		public virtual void InitializeText(PlayerHand hand)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xCE9A54", Offset = "0xCE9A54", VA = "0xCE9A54", Slot = "11")]
		public virtual void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xCE9C64", Offset = "0xCE9C64", VA = "0xCE9C64", Slot = "12")]
		protected virtual void WillClose()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xCE9C68", Offset = "0xCE9C68", VA = "0xCE9C68", Slot = "13")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xCE9CCC", Offset = "0xCE9CCC", VA = "0xCE9CCC", Slot = "14")]
		public virtual void Deactivate()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xCE9EB4", Offset = "0xCE9EB4", VA = "0xCE9EB4", Slot = "15")]
		public virtual void OnDestroyArmament()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xCE9EB8", Offset = "0xCE9EB8", VA = "0xCE9EB8", Slot = "16")]
		public virtual void RefreshRenderRT()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xCE9EBC", Offset = "0xCE9EBC", VA = "0xCE9EBC")]
		public InspectionPanel()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class InspectionUIPanel : InspectionPanel
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5BCC", Offset = "0x8B5BCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5BCC", Offset = "0x8B5BCC")]
		[SerializeField]
		private TextMeshProUGUI tmpNameText;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5C3C", Offset = "0x8B5C3C")]
		[SerializeField]
		private Image weaponIcon;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5C88", Offset = "0x8B5C88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5C88", Offset = "0x8B5C88")]
		[SerializeField]
		private TitleUIPanel titlePanel;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B5CF8", Offset = "0x8B5CF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5CF8", Offset = "0x8B5CF8")]
		[SerializeField]
		private SuperDescriptionUI superPanel;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5D68", Offset = "0x8B5D68")]
		[SerializeField]
		private TraitDisplayPanel traitPanel;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5DB4", Offset = "0x8B5DB4")]
		[SerializeField]
		private StatDisplayPanel statPanel;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5E00", Offset = "0x8B5E00")]
		[SerializeField]
		private ModifiedStatView staminaDamageText;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5E4C", Offset = "0x8B5E4C")]
		[SerializeField]
		private ModifiedStatView healthDamageText;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5E98", Offset = "0x8B5E98")]
		[SerializeField]
		private bool displayDiffForPurchase;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B5EE4", Offset = "0x8B5EE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5EE4", Offset = "0x8B5EE4")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5F54", Offset = "0x8B5F54")]
		[SerializeField]
		private VariableDisplaySettings displaySettings;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5FA0", Offset = "0x8B5FA0")]
		[SerializeField]
		private IntVariable armamentInspectionUISuppression;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private BoolVariable isPauseDisplayed;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B5FFC", Offset = "0x8B5FFC")]
		[SerializeField]
		private List<ArmamentID> twoHandedWeapons;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6048", Offset = "0x8B6048")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6048", Offset = "0x8B6048")]
		[SerializeField]
		private float openTimeDuration;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private Transform handTrackRoot;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private EnemyCountAnalyticsEvent armamentInspectionSummonAnalyticsEvent;

		[NonSerialized]
		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float timeDisplayed;

		[Token(Token = "0x170000B4")]
		protected override bool RequireHeld
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xCEA1A0", Offset = "0xCEA1A0", VA = "0xCEA1A0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xCE9F28", Offset = "0xCE9F28", VA = "0xCE9F28", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xCE9FD4", Offset = "0xCE9FD4", VA = "0xCE9FD4", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xCEA078", Offset = "0xCEA078", VA = "0xCEA078", Slot = "15")]
		public override void OnDestroyArmament()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xCEA0A4", Offset = "0xCEA0A4", VA = "0xCEA0A4", Slot = "6")]
		protected override bool ShouldActivate(PlayerHand hand, CrushInteractable previewSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xCEA130", Offset = "0xCEA130", VA = "0xCEA130")]
		private void OnArmamentInspectionUISuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xCEA14C", Offset = "0xCEA14C", VA = "0xCEA14C", Slot = "12")]
		protected override void WillClose()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xCEA1A8", Offset = "0xCEA1A8", VA = "0xCEA1A8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xCEA2FC", Offset = "0xCEA2FC", VA = "0xCEA2FC", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xCEC4F8", Offset = "0xCEC4F8", VA = "0xCEC4F8", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xCEBCD0", Offset = "0xCEBCD0", VA = "0xCEBCD0")]
		private void Display(ArmamentID id, Armament arm, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xCED1B8", Offset = "0xCED1B8", VA = "0xCED1B8")]
		public InspectionUIPanel()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class InspectionUIPanelLQ : InspectionPanel
	{
		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF04", Offset = "0x8AAF04")]
		private sealed class <RefreshRenderRTCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public InspectionUIPanelLQ <>4__this;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool <wasOpen>5__2;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <originalPos>5__3;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x17000447")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C53")]
				[Address(RVA = "0xCF0204", Offset = "0xCF0204", VA = "0xCF0204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000448")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C55")]
				[Address(RVA = "0xCF026C", Offset = "0xCF026C", VA = "0xCF026C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xCED740", Offset = "0xCED740", VA = "0xCED740")]
			[DebuggerHidden]
			public <RefreshRenderRTCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xCEFE2C", Offset = "0xCEFE2C", VA = "0xCEFE2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xCEFE30", Offset = "0xCEFE30", VA = "0xCEFE30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xCF020C", Offset = "0xCF020C", VA = "0xCF020C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Renderer mainPanelRenderer;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B60E8", Offset = "0x8B60E8")]
		[SerializeField]
		private MaterialPropertyReference _bakeTextParam;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private MeshFilter weaponIconRenderer;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6144", Offset = "0x8B6144")]
		[SerializeField]
		private TextMeshPro weaponNameText;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6190", Offset = "0x8B6190")]
		[SerializeField]
		private TitleUIPanelLQ titlePanel;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B61DC", Offset = "0x8B61DC")]
		[SerializeField]
		private SuperDescriptionUILQ superPanel;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6228", Offset = "0x8B6228")]
		[SerializeField]
		private TraitDisplayPanelLQ traitPanel;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6274", Offset = "0x8B6274")]
		[SerializeField]
		private StatDisplayPanelLQ statPanel;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B62C0", Offset = "0x8B62C0")]
		[SerializeField]
		private ModifiedStatViewLQ staminaDamageText;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B630C", Offset = "0x8B630C")]
		[SerializeField]
		private ModifiedStatViewLQ healthDamageText;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6358", Offset = "0x8B6358")]
		[SerializeField]
		private bool displayDiffForPurchase;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B63A4", Offset = "0x8B63A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B63A4", Offset = "0x8B63A4")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6414", Offset = "0x8B6414")]
		[SerializeField]
		private VariableDisplaySettings displaySettings;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6460", Offset = "0x8B6460")]
		[SerializeField]
		private IntVariable armamentInspectionUISuppression;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B64AC", Offset = "0x8B64AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B64AC", Offset = "0x8B64AC")]
		[SerializeField]
		private float openTimeDuration;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform handTrackRoot;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private EnemyCountAnalyticsEvent armamentInspectionSummonAnalyticsEvent;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B653C", Offset = "0x8B653C")]
		[SerializeField]
		private bool _alwaysPopulateData;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		[SerializeField]
		private bool _staggerTextGeneration;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Coroutine _staggeredTextGenCoroutine;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private string _openAnimationState;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private TextMeshPro[] _textsToSnapshot;

		[NonSerialized]
		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private readonly List<TextMeshPro> _runtimeBakedTexts;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private Camera _leftRTCamera;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private Camera _rightRTCamera;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B65D8", Offset = "0x8B65D8")]
		[SerializeField]
		private RenderTexture _leftRT;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B6614", Offset = "0x8B6614")]
		[SerializeField]
		private RenderTexture _rightRT;

		[NonSerialized]
		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private RenderTextureDescriptor _rtDesc;

		[NonSerialized]
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float timeDisplayed;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float _leftCameraSize;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float _rightCameraSize;

		[Token(Token = "0x170000B5")]
		protected override bool RequireHeld
		{
			[Token(Token = "0x60007DB")]
			[Address(RVA = "0xCEDE68", Offset = "0xCEDE68", VA = "0xCEDE68", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xCED238", Offset = "0xCED238", VA = "0xCED238")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xCED5BC", Offset = "0xCED5BC", VA = "0xCED5BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xCED6C4", Offset = "0xCED6C4", VA = "0xCED6C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF364", Offset = "0x8DF364")]
		private IEnumerator RefreshRenderRTCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xCED76C", Offset = "0xCED76C", VA = "0xCED76C", Slot = "16")]
		public override void RefreshRenderRT()
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xCEDB04", Offset = "0xCEDB04", VA = "0xCEDB04")]
		private new void OnEnable()
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xCEDBA8", Offset = "0xCEDBA8", VA = "0xCEDBA8")]
		private new void OnDisable()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xCEDC44", Offset = "0xCEDC44", VA = "0xCEDC44", Slot = "6")]
		protected override bool ShouldActivate(PlayerHand hand, CrushInteractable previewSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xCEDCB4", Offset = "0xCEDCB4", VA = "0xCEDCB4")]
		private void OnArmamentInspectionUISuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xCEDCD0", Offset = "0xCEDCD0", VA = "0xCEDCD0", Slot = "12")]
		protected override void WillClose()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xCEDE70", Offset = "0xCEDE70", VA = "0xCEDE70")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xCEDFC4", Offset = "0xCEDFC4", VA = "0xCEDFC4", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xCEEF08", Offset = "0xCEEF08", VA = "0xCEEF08", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xCEE6A8", Offset = "0xCEE6A8", VA = "0xCEE6A8")]
		private void Display(ArmamentID id, Armament arm, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xCEFD34", Offset = "0xCEFD34", VA = "0xCEFD34")]
		public InspectionUIPanelLQ()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class ListPanel<TElement> : MonoBehaviour where TElement : MonoBehaviour
	{
		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool toggleComponentOnly;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected float spacing;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool useCanvas;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool syncCanvasAlpha;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected CanvasGroup canvasGroup;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<TElement> elements;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B66B0", Offset = "0x8B66B0")]
		[SerializeField]
		protected List<RectTransform> elementsRectTransforms;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<CanvasGroup> canvasGroups;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8B670C", Offset = "0x8B670C")]
		private int <UsedElements>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Layer currentLayer;

		[Token(Token = "0x170000B6")]
		protected int UsedElements
		{
			[Token(Token = "0x60007E1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF3C8", Offset = "0x8DF3C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007E2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF3D8", Offset = "0x8DF3D8")]
			private set
			{
			}
		}

		[Token(Token = "0x60007E3")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF3E8", Offset = "0x8DF3E8")]
		public virtual void Distribute()
		{
		}

		[Token(Token = "0x60007E4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007E5")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60007E6")]
		private void ClearElements()
		{
		}

		[Token(Token = "0x60007E7")]
		protected void BeginListGenerate()
		{
		}

		[Token(Token = "0x60007E8")]
		protected void EndListGenerate()
		{
		}

		[Token(Token = "0x60007E9")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007EA")]
		protected TElement Create()
		{
			return null;
		}

		[Token(Token = "0x60007EB")]
		public ListPanel()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class ModifiedStatView : MonoBehaviour
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B671C", Offset = "0x8B671C")]
		public TextMeshProUGUI tmpText;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6754", Offset = "0x8B6754")]
		[SerializeField]
		private TextMeshProUGUI difText;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B67A0", Offset = "0x8B67A0")]
		[SerializeField]
		private bool displayAsDiff;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B67EC", Offset = "0x8B67EC")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6838", Offset = "0x8B6838")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B6838", Offset = "0x8B6838")]
		[SerializeField]
		private MecanimParameterReference valueChangeParam;

		[Token(Token = "0x170000B7")]
		public bool DisplayAsDiff
		{
			[Token(Token = "0x60007EC")]
			[Address(RVA = "0xCF3FD0", Offset = "0xCF3FD0", VA = "0xCF3FD0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007ED")]
			[Address(RVA = "0xCF3FD8", Offset = "0xCF3FD8", VA = "0xCF3FD8")]
			set
			{
			}
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xCEC6E4", Offset = "0xCEC6E4", VA = "0xCEC6E4")]
		public void Set(int oldValue, int newValue, string displayName)
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xCF3FE4", Offset = "0xCF3FE4", VA = "0xCF3FE4")]
		public ModifiedStatView()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class ModifiedStatViewLQ : MonoBehaviour
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B68A8", Offset = "0x8B68A8")]
		[SerializeField]
		private TextMeshPro tmpText;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B68F4", Offset = "0x8B68F4")]
		[SerializeField]
		private TextMeshPro difText;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6940", Offset = "0x8B6940")]
		[SerializeField]
		private bool displayAsDiff;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B698C", Offset = "0x8B698C")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B69D8", Offset = "0x8B69D8")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B69D8", Offset = "0x8B69D8")]
		[SerializeField]
		private MecanimParameterReference valueChangeParam;

		[Token(Token = "0x170000B8")]
		public bool DisplayAsDiff
		{
			[Token(Token = "0x60007F0")]
			[Address(RVA = "0xCF3FEC", Offset = "0xCF3FEC", VA = "0xCF3FEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F1")]
			[Address(RVA = "0xCF3FF4", Offset = "0xCF3FF4", VA = "0xCF3FF4")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public TextMeshPro TmpText
		{
			[Token(Token = "0x60007F2")]
			[Address(RVA = "0xCF4000", Offset = "0xCF4000", VA = "0xCF4000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public TextMeshPro DifText
		{
			[Token(Token = "0x60007F3")]
			[Address(RVA = "0xCF4008", Offset = "0xCF4008", VA = "0xCF4008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xCEF4C0", Offset = "0xCEF4C0", VA = "0xCEF4C0")]
		public void Set(int oldValue, int newValue, string displayName)
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xCF4010", Offset = "0xCF4010", VA = "0xCF4010")]
		public ModifiedStatViewLQ()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class StatBuffUI : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ModifiedStatView statText;

		[NonSerialized]
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color defaultColor;

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xCF4148", Offset = "0xCF4148", VA = "0xCF4148")]
		public void SetStatBuff(Variable v, float original, float dif, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xCF421C", Offset = "0xCF421C", VA = "0xCF421C")]
		public StatBuffUI()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class StatBuffUILQ : MonoBehaviour
	{
		[Token(Token = "0x20004B8")]
		private enum BonusStates
		{
			[Token(Token = "0x4001DFE")]
			Normal,
			[Token(Token = "0x4001DFF")]
			Decrease,
			[Token(Token = "0x4001E00")]
			Increase
		}

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ModifiedStatViewLQ statText;

		[NonSerialized]
		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool renderingEnabled;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6A78", Offset = "0x8B6A78")]
		[SerializeField]
		private Renderer bonusRenderer;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B6AC4", Offset = "0x8B6AC4")]
		[SerializeField]
		protected MaterialPropertyReference bonusTypeParam;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6B10", Offset = "0x8B6B10")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6B5C", Offset = "0x8B6B5C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B6B5C", Offset = "0x8B6B5C")]
		[SerializeField]
		private MecanimParameterReference activated;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6BCC", Offset = "0x8B6BCC")]
		[SerializeField]
		private AnimationCurve activateCurve;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float CurrentType;

		[NonSerialized]
		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float CurrentState;

		[NonSerialized]
		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float ActivateState;

		[NonSerialized]
		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float ActivateCurveTime;

		[NonSerialized]
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsActivated;

		[Token(Token = "0x40007AE")]
		private const float PANEL_ACTIVATE_TIME = 0.5f;

		[Token(Token = "0x170000BB")]
		public TextMeshPro StatText
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xCF4224", Offset = "0xCF4224", VA = "0xCF4224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		public bool RenderingEnabled
		{
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xCF4240", Offset = "0xCF4240", VA = "0xCF4240")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0xCF4248", Offset = "0xCF4248", VA = "0xCF4248")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public Renderer BonusRenderer
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xCF4270", Offset = "0xCF4270", VA = "0xCF4270")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xCF4278", Offset = "0xCF4278", VA = "0xCF4278")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xCF42E0", Offset = "0xCF42E0", VA = "0xCF42E0")]
		public void SetStatBuff(Variable v, float original, float dif, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xCF4434", Offset = "0xCF4434", VA = "0xCF4434")]
		public void Activate()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xCF4488", Offset = "0xCF4488", VA = "0xCF4488")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0xCF44D8", Offset = "0xCF44D8", VA = "0xCF44D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0xCF457C", Offset = "0xCF457C", VA = "0xCF457C")]
		public StatBuffUILQ()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class StatChangeInspectionPanel : InspectionPanel
	{
		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6C18", Offset = "0x8B6C18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B6C18", Offset = "0x8B6C18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6C18", Offset = "0x8B6C18")]
		[SerializeField]
		private TextMeshProUGUI armamentNameText;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B6CAC", Offset = "0x8B6CAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6CAC", Offset = "0x8B6CAC")]
		[SerializeField]
		private Image armamentIcon;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6D1C", Offset = "0x8B6D1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6D1C", Offset = "0x8B6D1C")]
		[SerializeField]
		private StatDisplayPanel statPanel;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6D8C", Offset = "0x8B6D8C")]
		[SerializeField]
		private DescriptionInspectionPanel detailsPanel;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6DD8", Offset = "0x8B6DD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6DD8", Offset = "0x8B6DD8")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6E48", Offset = "0x8B6E48")]
		[SerializeField]
		private VariableDisplaySettings variableDisplay;

		[Token(Token = "0x6000802")]
		[Address(RVA = "0xCF4A1C", Offset = "0xCF4A1C", VA = "0xCF4A1C", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0xCF5290", Offset = "0xCF5290", VA = "0xCF5290", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0xCF4D70", Offset = "0xCF4D70", VA = "0xCF4D70")]
		private string FindSizePercentage(string text)
		{
			return null;
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xCF52C0", Offset = "0xCF52C0", VA = "0xCF52C0")]
		private string RemoveSizeTag(string text)
		{
			return null;
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xCF5304", Offset = "0xCF5304", VA = "0xCF5304")]
		public StatChangeInspectionPanel()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class StatChangeInspectionPanelLQ : InspectionPanel
	{
		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6E94", Offset = "0x8B6E94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B6E94", Offset = "0x8B6E94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6E94", Offset = "0x8B6E94")]
		[SerializeField]
		private TextMeshPro armamentNameText;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MeshFilter weaponIconRenderer;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6F38", Offset = "0x8B6F38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6F38", Offset = "0x8B6F38")]
		[SerializeField]
		private StatDisplayPanelLQ statPanel;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6FA8", Offset = "0x8B6FA8")]
		[SerializeField]
		private DescriptionInspectionPanelLQ detailsPanel;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B6FF4", Offset = "0x8B6FF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B6FF4", Offset = "0x8B6FF4")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7064", Offset = "0x8B7064")]
		[SerializeField]
		private VariableDisplaySettings variableDisplay;

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xCF5308", Offset = "0xCF5308", VA = "0xCF5308", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xCF5334", Offset = "0xCF5334", VA = "0xCF5334", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xCF5360", Offset = "0xCF5360", VA = "0xCF5360", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xCF5AAC", Offset = "0xCF5AAC", VA = "0xCF5AAC")]
		public StatChangeInspectionPanelLQ()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class StatDisplayPanel : ListPanel<StatBuffUI>
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0xCF6818", Offset = "0xCF6818", VA = "0xCF6818", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF420", Offset = "0x8DF420")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xCEC280", Offset = "0xCEC280", VA = "0xCEC280")]
		public void Populate(StatSet stats, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xCEC04C", Offset = "0xCEC04C", VA = "0xCEC04C")]
		public void Populate(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xCF4F0C", Offset = "0xCF4F0C", VA = "0xCF4F0C")]
		public void PopulateAugment(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xCF6868", Offset = "0xCF6868", VA = "0xCF6868")]
		public StatDisplayPanel()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class StatDisplayPanelLQ : ListPanel<StatBuffUILQ>
	{
		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B70B0", Offset = "0x8B70B0")]
		[SerializeField]
		private bool enableInstancedRendering;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool enableTextBake;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Mesh bonusPanelMesh;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material bonusPanelMaterial;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B712C", Offset = "0x8B712C")]
		[SerializeField]
		protected MaterialPropertyReference textBakedParam;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B7178", Offset = "0x8B7178")]
		[SerializeField]
		protected MaterialPropertyReference textIndexParam;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B71C4", Offset = "0x8B71C4")]
		[SerializeField]
		protected MaterialPropertyReference textEnabledParam;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B7210", Offset = "0x8B7210")]
		[SerializeField]
		protected MaterialPropertyReference bonusTypeParam;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B725C", Offset = "0x8B725C")]
		[SerializeField]
		protected MaterialPropertyReference bonusStateParam;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B72A8", Offset = "0x8B72A8")]
		[SerializeField]
		protected MaterialPropertyReference activateParam;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Matrix4x4[] matrices;

		[NonSerialized]
		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float[] bonusIndexes;

		[NonSerialized]
		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] bonusTypes;

		[NonSerialized]
		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] bonusStates;

		[NonSerialized]
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] activates;

		[NonSerialized]
		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float[] textEnabled;

		[NonSerialized]
		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public readonly List<TextMeshPro> TextCollection;

		[Token(Token = "0x40007CD")]
		private const int MAX_BONUS_COUNT = 10;

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xCF68B8", Offset = "0xCF68B8", VA = "0xCF68B8", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF458", Offset = "0x8DF458")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xCF6908", Offset = "0xCF6908", VA = "0xCF6908", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xCED570", Offset = "0xCED570", VA = "0xCED570")]
		public void SetBakedTextRT(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xCEEC1C", Offset = "0xCEEC1C", VA = "0xCEEC1C")]
		public void Populate(StatSet stats, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xCEE998", Offset = "0xCEE998", VA = "0xCEE998")]
		public void Populate(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xCF56D8", Offset = "0xCF56D8", VA = "0xCF56D8")]
		public void PopulateAugment(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0xCEF42C", Offset = "0xCEF42C", VA = "0xCEF42C")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0xCEDDD4", Offset = "0xCEDDD4", VA = "0xCEDDD4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0xCF6A9C", Offset = "0xCF6A9C", VA = "0xCF6A9C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0xCF6AA0", Offset = "0xCF6AA0", VA = "0xCF6AA0")]
		private void Draw()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xCF6F30", Offset = "0xCF6F30", VA = "0xCF6F30")]
		public StatDisplayPanelLQ()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class SuperDescriptionUI : MonoBehaviour
	{
		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B72F4", Offset = "0x8B72F4")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7340", Offset = "0x8B7340")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B7340", Offset = "0x8B7340")]
		[SerializeField]
		private MecanimParameterReference valueChangeParam;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text abilityName;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI tmpAbilityName;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text superChargeTime;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshProUGUI tmpSuperChargeTime;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Text abilityDescription;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshProUGUI tmpAbilityDescription;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Image abilityIcon;

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xCEC98C", Offset = "0xCEC98C", VA = "0xCEC98C")]
		public void SetAbility(ArmamentAbilityDefinition ability, bool isChanged)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xCF83CC", Offset = "0xCF83CC", VA = "0xCF83CC")]
		public SuperDescriptionUI()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class SuperDescriptionUILQ : MonoBehaviour
	{
		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7420", Offset = "0x8B7420")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B746C", Offset = "0x8B746C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B746C", Offset = "0x8B746C")]
		[SerializeField]
		private MecanimParameterReference valueChangeParam;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer panelRenderer;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B74EC", Offset = "0x8B74EC")]
		[SerializeField]
		private MaterialPropertyReference superIconParam;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMeshPro tmpAbilityName;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshPro tmpSuperChargeTime;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro tmpAbilityDescription;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xCF83D4", Offset = "0xCF83D4", VA = "0xCF83D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xCEF178", Offset = "0xCEF178", VA = "0xCEF178")]
		public void SetAbility(ArmamentAbilityDefinition ability, bool isChanged)
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xCF843C", Offset = "0xCF843C", VA = "0xCF843C")]
		public SuperDescriptionUILQ()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class DescriptionInspectionPanelLQTextMesh : InspectionPanel
	{
		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7568", Offset = "0x8B7568")]
		[SerializeField]
		private bool animateScale;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float scaleTime;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float enableTime;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Renderer panelRenderer;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B75E4", Offset = "0x8B75E4")]
		[SerializeField]
		protected MaterialPropertyReference activatePanelParam;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7630", Offset = "0x8B7630")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7630", Offset = "0x8B7630")]
		[SerializeField]
		private TextMesh nameText;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B76A0", Offset = "0x8B76A0")]
		[SerializeField]
		private TextMesh descriptionText;

		[NonSerialized]
		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float currentAnimTime;

		[NonSerialized]
		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool enableActivate;

		[NonSerialized]
		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xAFAAD0", Offset = "0xAFAAD0", VA = "0xAFAAD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xAFAB38", Offset = "0xAFAB38", VA = "0xAFAB38", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xAFAB50", Offset = "0xAFAB50", VA = "0xAFAB50", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xAFAB64", Offset = "0xAFAB64", VA = "0xAFAB64", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xAFACA0", Offset = "0xAFACA0", VA = "0xAFACA0", Slot = "13")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xAFAED4", Offset = "0xAFAED4", VA = "0xAFAED4", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xAFAF08", Offset = "0xAFAF08", VA = "0xAFAF08")]
		public DescriptionInspectionPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class InspectionUIPanelLQTextMesh : InspectionPanel
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B76EC", Offset = "0x8B76EC")]
		[SerializeField]
		private Animation _animation;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AnimationClip openAnimationClip;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AnimationClip closeAnimationClip;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Renderer mainPanelRenderer;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B7768", Offset = "0x8B7768")]
		[SerializeField]
		private MaterialPropertyReference _bakeTextParam;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Renderer weaponIconRenderer;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private MeshFilter weaponIconMeshFilter;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B77D4", Offset = "0x8B77D4")]
		[SerializeField]
		private TextMesh weaponNameText;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7820", Offset = "0x8B7820")]
		[SerializeField]
		private TitleUIPanelLQTextMesh titlePanel;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B786C", Offset = "0x8B786C")]
		[SerializeField]
		private SuperDescriptionUILQTextMesh superPanel;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B78B8", Offset = "0x8B78B8")]
		[SerializeField]
		private TraitDisplayPanelLQTextMesh traitPanel;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7904", Offset = "0x8B7904")]
		[SerializeField]
		private StatDisplayPanelLQTextMesh statPanel;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7950", Offset = "0x8B7950")]
		[SerializeField]
		private ModifiedStatViewLQTextMesh staminaDamageText;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B799C", Offset = "0x8B799C")]
		[SerializeField]
		private ModifiedStatViewLQTextMesh healthDamageText;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B79E8", Offset = "0x8B79E8")]
		[SerializeField]
		private bool displayDiffForPurchase;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7A34", Offset = "0x8B7A34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7A34", Offset = "0x8B7A34")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7AA4", Offset = "0x8B7AA4")]
		[SerializeField]
		private VariableDisplaySettings displaySettings;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7AF0", Offset = "0x8B7AF0")]
		[SerializeField]
		private IntVariable armamentInspectionUISuppression;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private BoolVariable isPauseDisplayed;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7B4C", Offset = "0x8B7B4C")]
		[SerializeField]
		private List<ArmamentID> twoHandedWeapons;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7B98", Offset = "0x8B7B98")]
		[SerializeField]
		private int textSize2HPreview;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7BE4", Offset = "0x8B7BE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7BE4", Offset = "0x8B7BE4")]
		[SerializeField]
		private float openTimeDuration;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private Transform handTrackRoot;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private EnemyCountAnalyticsEvent armamentInspectionSummonAnalyticsEvent;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7C74", Offset = "0x8B7C74")]
		[SerializeField]
		private ParticleSystem _activeEffect;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private Vector2Int _renderTextureSize;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private bool _enableRenderPassMode;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private Transform _leftPanelTransform;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private Transform _rightPanelTransform;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private TextMeshRendererPassData _textMeshRendererPassData;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private Renderer[] _textsToBake;

		[NonSerialized]
		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private readonly List<Renderer> _runtimeBakedTexts;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private Camera _textRTCamera;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8B7D30", Offset = "0x8B7D30")]
		[SerializeField]
		private RenderTexture _textRT;

		[NonSerialized]
		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private RenderTextureDescriptor _rtDesc;

		[NonSerialized]
		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private float timeDisplayed;

		[NonSerialized]
		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float _textCameraSize;

		[NonSerialized]
		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Vector3 _defaultLeftPanelPos;

		[NonSerialized]
		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private Vector3 _defaultRightPanelPos;

		[NonSerialized]
		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private TextMeshRendererPass _textMeshRendererPass;

		[NonSerialized]
		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private TitleUIPanelLQTextMesh.PurchaseState _previousPurchaseState;

		[Token(Token = "0x170000BE")]
		protected override bool RequireHeld
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0xCF1780", Offset = "0xCF1780", VA = "0xCF1780", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xCF0274", Offset = "0xCF0274", VA = "0xCF0274")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xCF06AC", Offset = "0xCF06AC", VA = "0xCF06AC", Slot = "9")]
		public override void InitializeText(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xCF08EC", Offset = "0xCF08EC", VA = "0xCF08EC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xCF09E4", Offset = "0xCF09E4", VA = "0xCF09E4", Slot = "16")]
		public override void RefreshRenderRT()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xCF0DC4", Offset = "0xCF0DC4", VA = "0xCF0DC4")]
		private void OnPreBakeText()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xCF0EE0", Offset = "0xCF0EE0", VA = "0xCF0EE0")]
		private void OnPostBakeText()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xCF10A0", Offset = "0xCF10A0", VA = "0xCF10A0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xCF10E8", Offset = "0xCF10E8", VA = "0xCF10E8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xCF1398", Offset = "0xCF1398", VA = "0xCF1398", Slot = "6")]
		protected override bool ShouldActivate(PlayerHand hand, CrushInteractable previewSource)
		{
			return default(bool);
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xCF1424", Offset = "0xCF1424", VA = "0xCF1424")]
		private void OnArmamentInspectionUISuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xCF1440", Offset = "0xCF1440", VA = "0xCF1440", Slot = "12")]
		protected override void WillClose()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xCF15D8", Offset = "0xCF15D8", VA = "0xCF15D8", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xCF173C", Offset = "0xCF173C", VA = "0xCF173C", Slot = "15")]
		public override void OnDestroyArmament()
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xCF1788", Offset = "0xCF1788", VA = "0xCF1788")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xCF191C", Offset = "0xCF191C", VA = "0xCF191C", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xCF29D0", Offset = "0xCF29D0", VA = "0xCF29D0", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xCF2DD4", Offset = "0xCF2DD4", VA = "0xCF2DD4", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xCF2B98", Offset = "0xCF2B98", VA = "0xCF2B98")]
		private void ReActivate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xCF1E38", Offset = "0xCF1E38", VA = "0xCF1E38")]
		private void Display(ArmamentID id, Armament arm, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xCF3E9C", Offset = "0xCF3E9C", VA = "0xCF3E9C")]
		public InspectionUIPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class ModifiedStatViewLQTextMesh : MonoBehaviour
	{
		[Token(Token = "0x20004B9")]
		private enum ValueState
		{
			[Token(Token = "0x4001E02")]
			Default,
			[Token(Token = "0x4001E03")]
			Decrease,
			[Token(Token = "0x4001E04")]
			Increase
		}

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7D6C", Offset = "0x8B7D6C")]
		public TextMesh text;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer textRenderer;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7DB4", Offset = "0x8B7DB4")]
		[SerializeField]
		private TextMesh diffText;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer diffTextRenderer;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B7E10", Offset = "0x8B7E10")]
		[SerializeField]
		private bool displayAsDiff;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7E5C", Offset = "0x8B7E5C")]
		[SerializeField]
		private bool updateValueState;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer mainPanel;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 moveOffset;

		[NonSerialized]
		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 originalOffset;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B7EC8", Offset = "0x8B7EC8")]
		[SerializeField]
		protected MaterialPropertyReference valueStateParam;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x170000BF")]
		public Renderer TextRenderer
		{
			[Token(Token = "0x600083C")]
			[Address(RVA = "0xCF4018", Offset = "0xCF4018", VA = "0xCF4018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		public bool DisplayAsDiff
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xCF4020", Offset = "0xCF4020", VA = "0xCF4020")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083E")]
			[Address(RVA = "0xCF4028", Offset = "0xCF4028", VA = "0xCF4028")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public Renderer TmpText
		{
			[Token(Token = "0x600083F")]
			[Address(RVA = "0xCF4034", Offset = "0xCF4034", VA = "0xCF4034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		public Renderer DifText
		{
			[Token(Token = "0x6000840")]
			[Address(RVA = "0xCF403C", Offset = "0xCF403C", VA = "0xCF403C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xCF4044", Offset = "0xCF4044", VA = "0xCF4044")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xCF33DC", Offset = "0xCF33DC", VA = "0xCF33DC")]
		public void Set(int oldValue, int newValue, string displayName)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xCF40E4", Offset = "0xCF40E4", VA = "0xCF40E4")]
		public ModifiedStatViewLQTextMesh()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class StatBuffUILQTextMesh : MonoBehaviour
	{
		[Token(Token = "0x20004BA")]
		private enum BonusStates
		{
			[Token(Token = "0x4001E06")]
			Normal,
			[Token(Token = "0x4001E07")]
			Decrease,
			[Token(Token = "0x4001E08")]
			Increase
		}

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7F14", Offset = "0x8B7F14")]
		[SerializeField]
		private Layer hiddenLayer;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Layer textLayer;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Layer panelLayer;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ModifiedStatViewLQTextMesh statText;

		[NonSerialized]
		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool renderingEnabled;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B7F90", Offset = "0x8B7F90")]
		[SerializeField]
		private Renderer bonusRenderer;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B7FDC", Offset = "0x8B7FDC")]
		[SerializeField]
		protected MaterialPropertyReference bonusTypeParam;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8028", Offset = "0x8B8028")]
		[SerializeField]
		private AnimationCurve activateCurve;

		[NonSerialized]
		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _activateCurveTime;

		[NonSerialized]
		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool _isActivated;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float CurrentType;

		[NonSerialized]
		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float CurrentState;

		[NonSerialized]
		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float ActivateState;

		[Token(Token = "0x400082B")]
		private const float PANEL_ACTIVATE_TIME = 0.5f;

		[Token(Token = "0x170000C3")]
		public Renderer StatText
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0xCF4600", Offset = "0xCF4600", VA = "0xCF4600")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		public bool RenderingEnabled
		{
			[Token(Token = "0x6000845")]
			[Address(RVA = "0xCF461C", Offset = "0xCF461C", VA = "0xCF461C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000846")]
			[Address(RVA = "0xCF4624", Offset = "0xCF4624", VA = "0xCF4624")]
			set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public Renderer BonusRenderer
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xCF464C", Offset = "0xCF464C", VA = "0xCF464C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xCF4654", Offset = "0xCF4654", VA = "0xCF4654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xCF46BC", Offset = "0xCF46BC", VA = "0xCF46BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xCF4720", Offset = "0xCF4720", VA = "0xCF4720")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xCF4784", Offset = "0xCF4784", VA = "0xCF4784")]
		public void SetStatBuff(Variable v, float original, float dif, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xCF48D8", Offset = "0xCF48D8", VA = "0xCF48D8")]
		public void Activate()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xCF48E4", Offset = "0xCF48E4", VA = "0xCF48E4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xCF48EC", Offset = "0xCF48EC", VA = "0xCF48EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xCF4998", Offset = "0xCF4998", VA = "0xCF4998")]
		public StatBuffUILQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class StatChangeInspectionPanelLQTextMesh : InspectionPanel
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8074", Offset = "0x8B8074")]
		[SerializeField]
		private float scaleTime;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float enableTime;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Renderer arrowRenderer;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B80E0", Offset = "0x8B80E0")]
		[SerializeField]
		protected MaterialPropertyReference activateArrowParam;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform leftPanel;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Vector3 leftPanelStart;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private Vector3 leftPanelEnd;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Transform rightPanel;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Vector3 rightPanelStart;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private Vector3 rightPanelEnd;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B818C", Offset = "0x8B818C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B818C", Offset = "0x8B818C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B818C", Offset = "0x8B818C")]
		[SerializeField]
		private TextMesh armamentNameText;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private MeshFilter weaponIconRenderer;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8230", Offset = "0x8B8230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8230", Offset = "0x8B8230")]
		[SerializeField]
		private StatDisplayPanelLQTextMesh statPanel;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B82A0", Offset = "0x8B82A0")]
		[SerializeField]
		private DescriptionInspectionPanelLQTextMesh detailsPanel;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B82EC", Offset = "0x8B82EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B82EC", Offset = "0x8B82EC")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B835C", Offset = "0x8B835C")]
		[SerializeField]
		private VariableDisplaySettings variableDisplay;

		[NonSerialized]
		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float currentAnimTime;

		[NonSerialized]
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool enableActivate;

		[NonSerialized]
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xCF5AB0", Offset = "0xCF5AB0", VA = "0xCF5AB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xCF5B18", Offset = "0xCF5B18", VA = "0xCF5B18", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xCF5B54", Offset = "0xCF5B54", VA = "0xCF5B54", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xCF5B8C", Offset = "0xCF5B8C", VA = "0xCF5B8C", Slot = "13")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xCF5EBC", Offset = "0xCF5EBC", VA = "0xCF5EBC", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xCF671C", Offset = "0xCF671C", VA = "0xCF671C", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xCF6240", Offset = "0xCF6240", VA = "0xCF6240")]
		private string FindSizePercentage(string text)
		{
			return null;
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xCF674C", Offset = "0xCF674C", VA = "0xCF674C")]
		private string RemoveSizeTag(string text)
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xCF6790", Offset = "0xCF6790", VA = "0xCF6790")]
		public StatChangeInspectionPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class StatDisplayPanelLQTextMesh : ListPanel<StatBuffUILQTextMesh>
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B83A8", Offset = "0x8B83A8")]
		[SerializeField]
		private bool enableInstancedRendering;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool enableTextBake;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Mesh bonusPanelMesh;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Material bonusPanelMaterial;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8424", Offset = "0x8B8424")]
		[SerializeField]
		protected MaterialPropertyReference textBakedParam;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8470", Offset = "0x8B8470")]
		[SerializeField]
		protected MaterialPropertyReference textIndexParam;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B84BC", Offset = "0x8B84BC")]
		[SerializeField]
		protected MaterialPropertyReference textEnabledParam;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8508", Offset = "0x8B8508")]
		[SerializeField]
		protected MaterialPropertyReference bonusTypeParam;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8554", Offset = "0x8B8554")]
		[SerializeField]
		protected MaterialPropertyReference bonusStateParam;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B85A0", Offset = "0x8B85A0")]
		[SerializeField]
		protected MaterialPropertyReference activateParam;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Matrix4x4[] matrices;

		[NonSerialized]
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float[] bonusIndexes;

		[NonSerialized]
		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float[] bonusTypes;

		[NonSerialized]
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] bonusStates;

		[NonSerialized]
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] activates;

		[NonSerialized]
		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float[] textEnabled;

		[NonSerialized]
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public readonly List<Renderer> TextCollection;

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xCF70E8", Offset = "0xCF70E8", VA = "0xCF70E8", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF490", Offset = "0x8DF490")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xCF7138", Offset = "0xCF7138", VA = "0xCF7138", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xCF7348", Offset = "0xCF7348", VA = "0xCF7348")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xCF73F8", Offset = "0xCF73F8", VA = "0xCF73F8")]
		private void RenderPipelineManagerOnBeginFrameRendering(ScriptableRenderContext scriptableRenderContext, Camera[] cameras)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xCF0660", Offset = "0xCF0660", VA = "0xCF0660")]
		public void SetBakedTextRT(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xCF274C", Offset = "0xCF274C", VA = "0xCF274C")]
		public void Populate(StatSet stats, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xCF24C8", Offset = "0xCF24C8", VA = "0xCF24C8")]
		public void Populate(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xCF6348", Offset = "0xCF6348", VA = "0xCF6348")]
		public void PopulateAugment(StatSet stats, StatSet.StatSetDiff statDiff, VariableDisplaySettings displaySettings)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xCF3344", Offset = "0xCF3344", VA = "0xCF3344")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xCF1544", Offset = "0xCF1544", VA = "0xCF1544")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xCF12FC", Offset = "0xCF12FC", VA = "0xCF12FC")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xCF73FC", Offset = "0xCF73FC", VA = "0xCF73FC")]
		private void Draw()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xCF78C4", Offset = "0xCF78C4", VA = "0xCF78C4")]
		public StatDisplayPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class SuperDescriptionUILQTextMesh : MonoBehaviour
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Renderer panelRenderer;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B85FC", Offset = "0x8B85FC")]
		[SerializeField]
		private MaterialPropertyReference superStateParam;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8648", Offset = "0x8B8648")]
		[SerializeField]
		private MaterialPropertyReference superIconParam;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMesh tmpAbilityName;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TextMesh tmpSuperChargeTime;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMesh tmpAbilityDescription;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xCF84C0", Offset = "0xCF84C0", VA = "0xCF84C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xCF30B8", Offset = "0xCF30B8", VA = "0xCF30B8")]
		public void SetAbility(ArmamentAbilityDefinition ability, bool isChanged)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xCF8528", Offset = "0xCF8528", VA = "0xCF8528")]
		public SuperDescriptionUILQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class TitleUIPanelLQTextMesh : MonoBehaviour
	{
		[Token(Token = "0x20004BB")]
		public enum PurchaseState
		{
			[Token(Token = "0x4001E0A")]
			Normal,
			[Token(Token = "0x4001E0B")]
			MaxLevel,
			[Token(Token = "0x4001E0C")]
			Fail,
			[Token(Token = "0x4001E0D")]
			Success
		}

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B86C4", Offset = "0x8B86C4")]
		[SerializeField]
		private TextMesh tmpCostText;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8710", Offset = "0x8B8710")]
		[SerializeField]
		private TextMesh tmpCurrentText;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B875C", Offset = "0x8B875C")]
		[SerializeField]
		private Renderer costTextRenderer;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer currentTextRenderer;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer maxTextRenderer;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer purchaseInstructionsTextRenderer;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer upgradeInstructionsTextRenderer;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer cantAffordTextRenderer;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer maxedOutTextRenderer;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8808", Offset = "0x8B8808")]
		[SerializeField]
		private IntVariable currentCurrency;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Renderer mainPanel;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8864", Offset = "0x8B8864")]
		[SerializeField]
		private Vector3 titleMoveOffset;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform weaponTransform;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Transform titleDissolveTransform;

		[NonSerialized]
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 originalOffset;

		[NonSerialized]
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 weaponOriginalOffset;

		[NonSerialized]
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 titleDissolveOriginalOffset;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B88D0", Offset = "0x8B88D0")]
		[SerializeField]
		protected MaterialPropertyReference purchaseParam;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[DebugOnly]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B891C", Offset = "0x8B891C")]
		private string costFormat;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[DebugOnly]
		[SerializeField]
		private UserString userCostFormat;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[DebugOnly]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B89C0", Offset = "0x8B89C0")]
		private string currentFormat;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[DebugOnly]
		[SerializeField]
		private UserString userCurrentFormat;

		[NonSerialized]
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CrushInteractable currentPurchase;

		[NonSerialized]
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int currentCost;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PurchaseState currentPurchaseState;

		[Token(Token = "0x170000C6")]
		public PurchaseState CurrentPurchaseState
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xCF96A0", Offset = "0xCF96A0", VA = "0xCF96A0")]
			get
			{
				return default(PurchaseState);
			}
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xCF96A8", Offset = "0xCF96A8", VA = "0xCF96A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xCF97C8", Offset = "0xCF97C8", VA = "0xCF97C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xCF97D4", Offset = "0xCF97D4", VA = "0xCF97D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xCF988C", Offset = "0xCF988C", VA = "0xCF988C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xCF9928", Offset = "0xCF9928", VA = "0xCF9928")]
		private void RefreshCanAfford(int newValue)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xCF9C44", Offset = "0xCF9C44", VA = "0xCF9C44")]
		private void RefreshTextVisibility(bool isUpgrade, bool hasNextLevel, bool canCrush)
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xCF0F00", Offset = "0xCF0F00", VA = "0xCF0F00")]
		public void SetCurrentPurchaseState(PurchaseState purchaseState)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xCF9D44", Offset = "0xCF9D44", VA = "0xCF9D44")]
		private static void CacheTextFormat(ref string format, TextMesh text)
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xCF9E30", Offset = "0xCF9E30", VA = "0xCF9E30")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xCF29A4", Offset = "0xCF29A4", VA = "0xCF29A4")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xCF1DB8", Offset = "0xCF1DB8", VA = "0xCF1DB8")]
		public void Activate(int cost, CrushInteractable purchase, int level)
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xCF97D8", Offset = "0xCF97D8", VA = "0xCF97D8")]
		public void ResetNormalState()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xCF9E94", Offset = "0xCF9E94", VA = "0xCF9E94")]
		public TitleUIPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class TraitDisplayPanelLQTextMesh : ListPanel<TraitUILQTextMesh>
	{
		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "EnumMappedListAttribute", RVA = "0x8B8A64", Offset = "0x8B8A64")]
		[SerializeField]
		private UserString[] invalidSelectionDisplay;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMesh invalidTraitText;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8AE8", Offset = "0x8B8AE8")]
		[SerializeField]
		private Renderer invalidTraitRenderer;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8B34", Offset = "0x8B8B34")]
		[SerializeField]
		private AnimationCurve attemptFailedCurve;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8B80", Offset = "0x8B8B80")]
		[SerializeField]
		private Vector3 invalidTextElementOffset;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8BCC", Offset = "0x8B8BCC")]
		[SerializeField]
		private bool enableTraitInstancedRendering;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		[SerializeField]
		private bool enableTextBake;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Mesh traitPanelMesh;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Material traitPanelMaterial;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8C48", Offset = "0x8B8C48")]
		[SerializeField]
		protected MaterialPropertyReference textBakedParam;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8C94", Offset = "0x8B8C94")]
		[SerializeField]
		protected MaterialPropertyReference textEnabledParam;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8CE0", Offset = "0x8B8CE0")]
		[SerializeField]
		protected MaterialPropertyReference traitTypeParam;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8D2C", Offset = "0x8B8D2C")]
		[SerializeField]
		protected MaterialPropertyReference traitStateParam;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8D78", Offset = "0x8B8D78")]
		[SerializeField]
		protected MaterialPropertyReference activateParam;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8DC4", Offset = "0x8B8DC4")]
		[SerializeField]
		protected MaterialPropertyReference invalidGlowParam;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8E10", Offset = "0x8B8E10")]
		[SerializeField]
		protected MaterialPropertyReference textIndexParam;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Matrix4x4[] matrices;

		[NonSerialized]
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float[] traitIndexes;

		[NonSerialized]
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float[] traitTypes;

		[NonSerialized]
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float[] traitStates;

		[NonSerialized]
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float[] activates;

		[NonSerialized]
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float[] invalidGlows;

		[NonSerialized]
		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float[] textEnabled;

		[NonSerialized]
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float InvalidGlowTime;

		[NonSerialized]
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float invalidTextScale;

		[NonSerialized]
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 invalidTextOriginalPos;

		[Token(Token = "0x400088D")]
		private const float INVALID_TEXT_SCALE = 14f;

		[Token(Token = "0x400088E")]
		private const float PANEL_FAILED_TIME = 0.33333f;

		[NonSerialized]
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public readonly List<Renderer> TraitTextCollection;

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xCFB124", Offset = "0xCFB124", VA = "0xCFB124", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF4C8", Offset = "0x8DF4C8")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xCFB174", Offset = "0xCFB174", VA = "0xCFB174", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xCFB3C4", Offset = "0xCFB3C4", VA = "0xCFB3C4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xCFB474", Offset = "0xCFB474", VA = "0xCFB474")]
		private void RenderPipelineManagerOnBeginFrameRendering(ScriptableRenderContext scriptableRenderContext, Camera[] cameras)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xCF0614", Offset = "0xCF0614", VA = "0xCF0614")]
		public void SetBakedTextRT(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xCF3760", Offset = "0xCF3760", VA = "0xCF3760")]
		public void Populate(ArmamentID id, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xCFBA10", Offset = "0xCFBA10", VA = "0xCFBA10")]
		public void FailUse()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xCFBAB4", Offset = "0xCFBAB4", VA = "0xCFBAB4")]
		private void Update()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xCFBBB0", Offset = "0xCFBBB0", VA = "0xCFBBB0")]
		public void SetUsage(ArmamentAugment.UsageResult usage)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xCF32AC", Offset = "0xCF32AC", VA = "0xCF32AC")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xCF14AC", Offset = "0xCF14AC", VA = "0xCF14AC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xCFBCB4", Offset = "0xCFBCB4", VA = "0xCFBCB4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xCF1260", Offset = "0xCF1260", VA = "0xCF1260")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xCFB478", Offset = "0xCFB478", VA = "0xCFB478")]
		private void Draw()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xCFBD50", Offset = "0xCFBD50", VA = "0xCFBD50")]
		public TraitDisplayPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class TraitInspectionPanelLQTextMesh : InspectionPanel
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8E5C", Offset = "0x8B8E5C")]
		[SerializeField]
		private float scaleTime;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float enableTime;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Renderer arrowRenderer;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8EC8", Offset = "0x8B8EC8")]
		[SerializeField]
		protected MaterialPropertyReference activateArrowParam;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Renderer traitRenderer;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B8F24", Offset = "0x8B8F24")]
		[SerializeField]
		protected MaterialPropertyReference activateTraitParam;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Transform leftPanel;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private Vector3 leftPanelStart;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private Vector3 leftPanelEnd;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Transform rightPanel;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Vector3 rightPanelStart;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private Vector3 rightPanelEnd;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B8FD0", Offset = "0x8B8FD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B8FD0", Offset = "0x8B8FD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B8FD0", Offset = "0x8B8FD0")]
		[SerializeField]
		private TextMesh armamentNameText;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8B9064", Offset = "0x8B9064")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9064", Offset = "0x8B9064")]
		[SerializeField]
		private Image armamentIcon;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B90D4", Offset = "0x8B90D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B90D4", Offset = "0x8B90D4")]
		[SerializeField]
		private TraitDisplayPanelLQTextMesh traitPanel;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9144", Offset = "0x8B9144")]
		[SerializeField]
		private DescriptionInspectionPanelLQTextMesh detailsPanel;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9190", Offset = "0x8B9190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9190", Offset = "0x8B9190")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[NonSerialized]
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float currentAnimTime;

		[NonSerialized]
		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool enableActivate;

		[NonSerialized]
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xCFCB3C", Offset = "0xCFCB3C", VA = "0xCFCB3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xCFCBA4", Offset = "0xCFCBA4", VA = "0xCFCBA4", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xCFCCE0", Offset = "0xCFCCE0", VA = "0xCFCCE0", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xCFCE0C", Offset = "0xCFCE0C", VA = "0xCFCE0C", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xCFD198", Offset = "0xCFD198", VA = "0xCFD198", Slot = "13")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xCFD59C", Offset = "0xCFD59C", VA = "0xCFD59C", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xCFD5CC", Offset = "0xCFD5CC", VA = "0xCFD5CC")]
		public TraitInspectionPanelLQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class TraitUILQTextMesh : MonoBehaviour
	{
		[Token(Token = "0x20004BC")]
		private enum TraitStates
		{
			[Token(Token = "0x4001E0F")]
			Normal,
			[Token(Token = "0x4001E10")]
			Locked,
			[Token(Token = "0x4001E11")]
			Preview,
			[Token(Token = "0x4001E12")]
			Invalid
		}

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9200", Offset = "0x8B9200")]
		[SerializeField]
		private Layer hiddenLayer;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Layer textLayer;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Layer panelLayer;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B926C", Offset = "0x8B926C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B926C", Offset = "0x8B926C")]
		[SerializeField]
		private TextMesh tmpNameText;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B92DC", Offset = "0x8B92DC")]
		[SerializeField]
		private TextMesh tmpDescriptionText;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer nameTextRenderer;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer descriptionTextRenderer;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9348", Offset = "0x8B9348")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9348", Offset = "0x8B9348")]
		[SerializeField]
		private AnimationCurve attemptFailedCurve;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B93B8", Offset = "0x8B93B8")]
		[SerializeField]
		private AnimationCurve activateCurve;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9404", Offset = "0x8B9404")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9404", Offset = "0x8B9404")]
		[SerializeField]
		private UserString emptyText;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9474", Offset = "0x8B9474")]
		[SerializeField]
		private UserString addedText;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B94C0", Offset = "0x8B94C0")]
		[SerializeField]
		private Renderer traitRenderer;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8B950C", Offset = "0x8B950C")]
		[SerializeField]
		protected MaterialPropertyReference traitTypeParam;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Sprite socketSprite;

		[NonSerialized]
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool renderingEnabled;

		[NonSerialized]
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		public bool IsSuper;

		[NonSerialized]
		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		public bool IsUnlocked;

		[NonSerialized]
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float CurrentState;

		[NonSerialized]
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float ActivateState;

		[NonSerialized]
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float ActivateCurveTime;

		[NonSerialized]
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool IsActivated;

		[NonSerialized]
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float InvalidGlow;

		[NonSerialized]
		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float InvalidGlowTime;

		[Token(Token = "0x40008BC")]
		private const float PANEL_FAILED_GLOW = 0.25f;

		[Token(Token = "0x40008BD")]
		private const float PANEL_FAILED_TIME = 0.33333f;

		[Token(Token = "0x40008BE")]
		private const float PANEL_ACTIVATE_TIME = 0.5f;

		[Token(Token = "0x170000C7")]
		public Renderer TmpNameText
		{
			[Token(Token = "0x600088D")]
			[Address(RVA = "0xBFC168", Offset = "0xBFC168", VA = "0xBFC168")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C8")]
		public Renderer TmpDescriptionText
		{
			[Token(Token = "0x600088E")]
			[Address(RVA = "0xBFC170", Offset = "0xBFC170", VA = "0xBFC170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		public Renderer TraitRenderer
		{
			[Token(Token = "0x600088F")]
			[Address(RVA = "0xBFC178", Offset = "0xBFC178", VA = "0xBFC178")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		public bool RenderingEnabled
		{
			[Token(Token = "0x6000890")]
			[Address(RVA = "0xBFC180", Offset = "0xBFC180", VA = "0xBFC180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xBFC188", Offset = "0xBFC188", VA = "0xBFC188")]
			set
			{
			}
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xBFC1B0", Offset = "0xBFC1B0", VA = "0xBFC1B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xBFC218", Offset = "0xBFC218", VA = "0xBFC218")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xBFC294", Offset = "0xBFC294", VA = "0xBFC294")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xBFC310", Offset = "0xBFC310", VA = "0xBFC310")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xBFC420", Offset = "0xBFC420", VA = "0xBFC420")]
		public void SetTrait(BaseArmamentTrait trait, bool isPending, ArmamentID armament, int index)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xBFC600", Offset = "0xBFC600", VA = "0xBFC600")]
		public void SetEmpty()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xBFC758", Offset = "0xBFC758", VA = "0xBFC758")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xBFC768", Offset = "0xBFC768", VA = "0xBFC768")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xBFC774", Offset = "0xBFC774", VA = "0xBFC774")]
		public void Invalid(bool isInvalid)
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xBFC78C", Offset = "0xBFC78C", VA = "0xBFC78C")]
		public void AttemptFailed()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xBFC7A4", Offset = "0xBFC7A4", VA = "0xBFC7A4")]
		private void Update()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xBFC8A4", Offset = "0xBFC8A4", VA = "0xBFC8A4")]
		public void SetAdded()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xBFC9FC", Offset = "0xBFC9FC", VA = "0xBFC9FC")]
		public TraitUILQTextMesh()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class TitleUIPanel : MonoBehaviour
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9558", Offset = "0x8B9558")]
		[SerializeField]
		private TextMeshProUGUI tmpCostText;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B95A4", Offset = "0x8B95A4")]
		[SerializeField]
		private TextMeshProUGUI tmpCurrentText;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B95F0", Offset = "0x8B95F0")]
		[SerializeField]
		private IntVariable currentCurrency;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B963C", Offset = "0x8B963C")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9688", Offset = "0x8B9688")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9688", Offset = "0x8B9688")]
		[SerializeField]
		private MecanimParameterReference canAffordBoolParam;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B96F8", Offset = "0x8B96F8")]
		[SerializeField]
		private MecanimParameterReference levelAvailableParam;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9744", Offset = "0x8B9744")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9744", Offset = "0x8B9744")]
		[SerializeField]
		private MecanimParameterReference purchaseFailTriggerParam;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B97B4", Offset = "0x8B97B4")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B97B4", Offset = "0x8B97B4")]
		[SerializeField]
		private MecanimParameterReference purchaseLevelParam;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9824", Offset = "0x8B9824")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9824", Offset = "0x8B9824")]
		[SerializeField]
		private MecanimParameterReference resetTrigger;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9894", Offset = "0x8B9894")]
		[SerializeField]
		private GameObject purchaseRoot;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[DebugOnly]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B98E0", Offset = "0x8B98E0")]
		private string costFormat;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[DebugOnly]
		[SerializeField]
		private UserString userCostFormat;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[DebugOnly]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8B9984", Offset = "0x8B9984")]
		private string currentFormat;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[DebugOnly]
		[SerializeField]
		private UserString userCurrentFormat;

		[NonSerialized]
		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CrushInteractable currentPurchase;

		[NonSerialized]
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private int currentCost;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xCF85DC", Offset = "0xCF85DC", VA = "0xCF85DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xCF8690", Offset = "0xCF8690", VA = "0xCF8690")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xCF87F8", Offset = "0xCF87F8", VA = "0xCF87F8")]
		private void RefreshCanAfford(int newValue)
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xCF8B88", Offset = "0xCF8B88", VA = "0xCF8B88")]
		public static void CacheTextFormat(ref string format, TextMeshProUGUI text)
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xCF8C60", Offset = "0xCF8C60", VA = "0xCF8C60")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xCF8CC4", Offset = "0xCF8CC4", VA = "0xCF8CC4")]
		private void OnPurchaseFail()
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xCEC464", Offset = "0xCEC464", VA = "0xCEC464")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xCEBA94", Offset = "0xCEBA94", VA = "0xCEBA94")]
		public void Activate(int cost, CrushInteractable purchase, int level)
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xCF8DBC", Offset = "0xCF8DBC", VA = "0xCF8DBC")]
		public TitleUIPanel()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class TitleUIPanelLQ : MonoBehaviour
	{
		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9A28", Offset = "0x8B9A28")]
		[SerializeField]
		private TextMeshPro tmpCostText;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9A74", Offset = "0x8B9A74")]
		[SerializeField]
		private TextMeshPro tmpCurrentText;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9AC0", Offset = "0x8B9AC0")]
		[SerializeField]
		private Renderer costTextRenderer;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer currentTextRenderer;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer maxTextRenderer;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Renderer purchaseInstructionsTextRenderer;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Renderer upgradeInstructionsTextRenderer;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Renderer cantAffordTextRenderer;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Renderer maxedOutTextRenderer;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9B6C", Offset = "0x8B9B6C")]
		[SerializeField]
		private IntVariable currentCurrency;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9BB8", Offset = "0x8B9BB8")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9C04", Offset = "0x8B9C04")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9C04", Offset = "0x8B9C04")]
		[SerializeField]
		private MecanimParameterReference canAffordBoolParam;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9C74", Offset = "0x8B9C74")]
		[SerializeField]
		private MecanimParameterReference levelAvailableParam;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9CC0", Offset = "0x8B9CC0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9CC0", Offset = "0x8B9CC0")]
		[SerializeField]
		private MecanimParameterReference purchaseFailTriggerParam;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9D30", Offset = "0x8B9D30")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9D30", Offset = "0x8B9D30")]
		[SerializeField]
		private MecanimParameterReference purchaseLevelParam;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9DA0", Offset = "0x8B9DA0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8B9DA0", Offset = "0x8B9DA0")]
		[SerializeField]
		private MecanimParameterReference resetTrigger;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9E10", Offset = "0x8B9E10")]
		[SerializeField]
		private GameObject purchaseRoot;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[DebugOnly]
		[SerializeField]
		private string costFormat;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[DebugOnly]
		[SerializeField]
		private UserString userCostFormat;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[DebugOnly]
		[SerializeField]
		private string currentFormat;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[DebugOnly]
		[SerializeField]
		private UserString userCurrentFormat;

		[NonSerialized]
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private CrushInteractable currentPurchase;

		[NonSerialized]
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int currentCost;

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xCF8DC4", Offset = "0xCF8DC4", VA = "0xCF8DC4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xCF8E78", Offset = "0xCF8E78", VA = "0xCF8E78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xCF8FE0", Offset = "0xCF8FE0", VA = "0xCF8FE0")]
		private void RefreshCanAfford(int newValue)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xCF9350", Offset = "0xCF9350", VA = "0xCF9350")]
		private void RefreshTextVisibility(bool isUpgrade, bool hasNextLevel, bool canCrush)
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xCF9434", Offset = "0xCF9434", VA = "0xCF9434")]
		private static void CacheTextFormat(ref string format, TextMeshPro text)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xCF950C", Offset = "0xCF950C", VA = "0xCF950C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xCF95A0", Offset = "0xCF95A0", VA = "0xCF95A0")]
		private void OnPurchaseFail()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xCEEE74", Offset = "0xCEEE74", VA = "0xCEEE74")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xCEE46C", Offset = "0xCEE46C", VA = "0xCEE46C")]
		public void Activate(int cost, CrushInteractable purchase, int level)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xCF9698", Offset = "0xCF9698", VA = "0xCF9698")]
		public TitleUIPanelLQ()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class TraitDisplayPanel : ListPanel<TraitUI>
	{
		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "EnumMappedListAttribute", RVA = "0x8B9F3C", Offset = "0x8B9F3C")]
		[SerializeField]
		private UserString[] invalidSelectionDisplay;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8B9FB0", Offset = "0x8B9FB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8B9FB0", Offset = "0x8B9FB0")]
		[SerializeField]
		private float invalidTextElementOffset;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RectTransform invalidTrait;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private TextMeshProUGUI invalidTraitText;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BA050", Offset = "0x8BA050")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA050", Offset = "0x8BA050")]
		[SerializeField]
		private MecanimParameterReference invalidParam;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BA0C0", Offset = "0x8BA0C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA0C0", Offset = "0x8BA0C0")]
		[SerializeField]
		private MecanimParameterReference failParam;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xCF9F4C", Offset = "0xCF9F4C", VA = "0xCF9F4C", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF500", Offset = "0x8DF500")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xCECC8C", Offset = "0xCECC8C", VA = "0xCECC8C")]
		public void Populate(ArmamentID id, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xCFA4E0", Offset = "0xCFA4E0", VA = "0xCFA4E0")]
		public void FailUse()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xCFA504", Offset = "0xCFA504", VA = "0xCFA504")]
		public void SetUsage(ArmamentAugment.UsageResult usage)
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xCFA590", Offset = "0xCFA590", VA = "0xCFA590")]
		public TraitDisplayPanel()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class TraitDisplayPanelLQ : ListPanel<TraitUILQ>
	{
		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "EnumMappedListAttribute", RVA = "0x8BA130", Offset = "0x8BA130")]
		[SerializeField]
		private UserString[] invalidSelectionDisplay;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private TextMeshPro invalidTraitText;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BA1C4", Offset = "0x8BA1C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA1C4", Offset = "0x8BA1C4")]
		[SerializeField]
		private MecanimParameterReference invalidParam;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BA234", Offset = "0x8BA234")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA234", Offset = "0x8BA234")]
		[SerializeField]
		private MecanimParameterReference failParam;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA2A4", Offset = "0x8BA2A4")]
		[SerializeField]
		private bool enableTraitInstancedRendering;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		private bool enableTextBake;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Mesh traitPanelMesh;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Material traitPanelMaterial;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA320", Offset = "0x8BA320")]
		[SerializeField]
		protected MaterialPropertyReference textBakedParam;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA36C", Offset = "0x8BA36C")]
		[SerializeField]
		protected MaterialPropertyReference textEnabledParam;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA3B8", Offset = "0x8BA3B8")]
		[SerializeField]
		protected MaterialPropertyReference traitTypeParam;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA404", Offset = "0x8BA404")]
		[SerializeField]
		protected MaterialPropertyReference traitStateParam;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA450", Offset = "0x8BA450")]
		[SerializeField]
		protected MaterialPropertyReference activateParam;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA49C", Offset = "0x8BA49C")]
		[SerializeField]
		protected MaterialPropertyReference invalidGlowParam;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BA4E8", Offset = "0x8BA4E8")]
		[SerializeField]
		protected MaterialPropertyReference textIndexParam;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Matrix4x4[] matrices;

		[NonSerialized]
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float[] traitIndexes;

		[NonSerialized]
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float[] traitTypes;

		[NonSerialized]
		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float[] traitStates;

		[NonSerialized]
		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float[] activates;

		[NonSerialized]
		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float[] invalidGlows;

		[NonSerialized]
		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float[] textEnabled;

		[NonSerialized]
		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public readonly List<TextMeshPro> TraitTextCollection;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xCFA604", Offset = "0xCFA604", VA = "0xCFA604", Slot = "4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF538", Offset = "0x8DF538")]
		public override void Distribute()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xCFA654", Offset = "0xCFA654", VA = "0xCFA654", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xCED524", Offset = "0xCED524", VA = "0xCED524")]
		public void SetBakedTextRT(RenderTexture renderTexture)
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xCEF6FC", Offset = "0xCEF6FC", VA = "0xCEF6FC")]
		public void Populate(ArmamentID id, StatSet stats, StatSet.StatSetDiff statDiff, bool previewSwap)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xCFA804", Offset = "0xCFA804", VA = "0xCFA804")]
		public void FailUse()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xCFA8B0", Offset = "0xCFA8B0", VA = "0xCFA8B0")]
		public void SetUsage(ArmamentAugment.UsageResult usage)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xCEF394", Offset = "0xCEF394", VA = "0xCEF394")]
		public void Activate()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xCEDD3C", Offset = "0xCEDD3C", VA = "0xCEDD3C")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xCFA9B8", Offset = "0xCFA9B8", VA = "0xCFA9B8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xCFA9BC", Offset = "0xCFA9BC", VA = "0xCFA9BC")]
		private void Draw()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xCFAF18", Offset = "0xCFAF18", VA = "0xCFAF18")]
		public TraitDisplayPanelLQ()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class TraitInspectionPanel : InspectionPanel
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA534", Offset = "0x8BA534")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BA534", Offset = "0x8BA534")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA534", Offset = "0x8BA534")]
		[SerializeField]
		private TextMeshProUGUI armamentNameText;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BA5C8", Offset = "0x8BA5C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA5C8", Offset = "0x8BA5C8")]
		[SerializeField]
		private Image armamentIcon;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA638", Offset = "0x8BA638")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA638", Offset = "0x8BA638")]
		[SerializeField]
		private TraitDisplayPanel traitPanel;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA6A8", Offset = "0x8BA6A8")]
		[SerializeField]
		private DescriptionInspectionPanel detailsPanel;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA6F4", Offset = "0x8BA6F4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA6F4", Offset = "0x8BA6F4")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xCFBF5C", Offset = "0xCFBF5C", VA = "0xCFBF5C", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xCFC084", Offset = "0xCFC084", VA = "0xCFC084", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xCFC1A4", Offset = "0xCFC1A4", VA = "0xCFC1A4", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xCFC530", Offset = "0xCFC530", VA = "0xCFC530", Slot = "8")]
		public override void RefreshText()
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xCFC560", Offset = "0xCFC560", VA = "0xCFC560")]
		public TraitInspectionPanel()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class TraitInspectionPanelLQ : InspectionPanel
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA764", Offset = "0x8BA764")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BA764", Offset = "0x8BA764")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA764", Offset = "0x8BA764")]
		[SerializeField]
		private TextMeshPro armamentNameText;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BA7F8", Offset = "0x8BA7F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA7F8", Offset = "0x8BA7F8")]
		[SerializeField]
		private Image armamentIcon;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA868", Offset = "0x8BA868")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA868", Offset = "0x8BA868")]
		[SerializeField]
		private TraitDisplayPanelLQ traitPanel;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA8D8", Offset = "0x8BA8D8")]
		[SerializeField]
		private DescriptionInspectionPanelLQ detailsPanel;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA924", Offset = "0x8BA924")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA924", Offset = "0x8BA924")]
		[SerializeField]
		private ArmamentVariablesDefinition weaponVariables;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xCFC564", Offset = "0xCFC564", VA = "0xCFC564", Slot = "11")]
		public override void Activate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xCFC68C", Offset = "0xCFC68C", VA = "0xCFC68C", Slot = "14")]
		public override void Deactivate()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xCFC7AC", Offset = "0xCFC7AC", VA = "0xCFC7AC", Slot = "7")]
		public override void Populate(PlayerHand hand, CrushInteractable previewSource)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xCFCB38", Offset = "0xCFCB38", VA = "0xCFCB38")]
		public TraitInspectionPanelLQ()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class TraitUI : MonoBehaviour
	{
		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BA994", Offset = "0x8BA994")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BA994", Offset = "0x8BA994")]
		[SerializeField]
		private TextMeshProUGUI tmpNameText;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAA04", Offset = "0x8BAA04")]
		[SerializeField]
		private TextMeshProUGUI tmpDescriptionText;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAA50", Offset = "0x8BAA50")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAA9C", Offset = "0x8BAA9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAA9C", Offset = "0x8BAA9C")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAB0C", Offset = "0x8BAB0C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAB0C", Offset = "0x8BAB0C")]
		[SerializeField]
		private MecanimParameterReference locked;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAB7C", Offset = "0x8BAB7C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAB7C", Offset = "0x8BAB7C")]
		[SerializeField]
		private MecanimParameterReference completed;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BABEC", Offset = "0x8BABEC")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BABEC", Offset = "0x8BABEC")]
		[SerializeField]
		private MecanimParameterReference preview;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAC5C", Offset = "0x8BAC5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAC5C", Offset = "0x8BAC5C")]
		[SerializeField]
		private UserString emptyText;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BACCC", Offset = "0x8BACCC")]
		[SerializeField]
		private UserString addedText;

		[NonSerialized]
		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sprite socketSprite;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xCF9F9C", Offset = "0xCF9F9C", VA = "0xCF9F9C")]
		public void SetTrait(BaseArmamentTrait trait, bool isPending, ArmamentID armament, int index)
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xCFA150", Offset = "0xCFA150", VA = "0xCFA150")]
		public void SetEmpty()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xCFA318", Offset = "0xCFA318", VA = "0xCFA318")]
		public void SetAdded()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xCFD67C", Offset = "0xCFD67C", VA = "0xCFD67C")]
		public TraitUI()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class TraitUILQ : MonoBehaviour
	{
		[Token(Token = "0x20004BD")]
		private enum TraitStates
		{
			[Token(Token = "0x4001E14")]
			Normal,
			[Token(Token = "0x4001E15")]
			Locked,
			[Token(Token = "0x4001E16")]
			Preview,
			[Token(Token = "0x4001E17")]
			Invalid
		}

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BAD18", Offset = "0x8BAD18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAD18", Offset = "0x8BAD18")]
		[SerializeField]
		private TextMeshPro tmpNameText;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAD88", Offset = "0x8BAD88")]
		[SerializeField]
		private TextMeshPro tmpDescriptionText;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BADD4", Offset = "0x8BADD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BADD4", Offset = "0x8BADD4")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAE44", Offset = "0x8BAE44")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAE44", Offset = "0x8BAE44")]
		[SerializeField]
		private MecanimParameterReference locked;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAEB4", Offset = "0x8BAEB4")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAEB4", Offset = "0x8BAEB4")]
		[SerializeField]
		private MecanimParameterReference completed;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAF24", Offset = "0x8BAF24")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAF24", Offset = "0x8BAF24")]
		[SerializeField]
		private MecanimParameterReference preview;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BAF94", Offset = "0x8BAF94")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BAF94", Offset = "0x8BAF94")]
		[SerializeField]
		private MecanimParameterReference invalid;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB004", Offset = "0x8BB004")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BB004", Offset = "0x8BB004")]
		[SerializeField]
		private MecanimParameterReference attemptFailed;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB074", Offset = "0x8BB074")]
		[SerializeField]
		private AnimationCurve attemptFailedCurve;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB0C0", Offset = "0x8BB0C0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BB0C0", Offset = "0x8BB0C0")]
		[SerializeField]
		private MecanimParameterReference activated;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB130", Offset = "0x8BB130")]
		[SerializeField]
		private AnimationCurve activateCurve;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB17C", Offset = "0x8BB17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB17C", Offset = "0x8BB17C")]
		[SerializeField]
		private UserString emptyText;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB1EC", Offset = "0x8BB1EC")]
		[SerializeField]
		private UserString addedText;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB238", Offset = "0x8BB238")]
		[SerializeField]
		private Renderer traitRenderer;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BB284", Offset = "0x8BB284")]
		[SerializeField]
		protected MaterialPropertyReference traitTypeParam;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private MaterialPropertyBlock materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Sprite socketSprite;

		[NonSerialized]
		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool renderingEnabled;

		[NonSerialized]
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool IsSuper;

		[NonSerialized]
		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool IsUnlocked;

		[NonSerialized]
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float CurrentState;

		[NonSerialized]
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float ActivateState;

		[NonSerialized]
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float ActivateCurveTime;

		[NonSerialized]
		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool IsActivated;

		[NonSerialized]
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float InvalidGlow;

		[NonSerialized]
		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float InvalidGlowTime;

		[Token(Token = "0x4000934")]
		private const float PANEL_FAILED_GLOW = 0.25f;

		[Token(Token = "0x4000935")]
		private const float PANEL_FAILED_TIME = 0.33333f;

		[Token(Token = "0x4000936")]
		private const float PANEL_ACTIVATE_TIME = 0.5f;

		[Token(Token = "0x170000CB")]
		public Renderer TraitRenderer
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xBFB834", Offset = "0xBFB834", VA = "0xBFB834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public bool RenderingEnabled
		{
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xBFB83C", Offset = "0xBFB83C", VA = "0xBFB83C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0xBFB844", Offset = "0xBFB844", VA = "0xBFB844")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public TextMeshPro TmpNameText
		{
			[Token(Token = "0x60008D2")]
			[Address(RVA = "0xBFB86C", Offset = "0xBFB86C", VA = "0xBFB86C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		public TextMeshPro TmpDescriptionText
		{
			[Token(Token = "0x60008D3")]
			[Address(RVA = "0xBFB874", Offset = "0xBFB874", VA = "0xBFB874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xBFB87C", Offset = "0xBFB87C", VA = "0xBFB87C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xBFB8E4", Offset = "0xBFB8E4", VA = "0xBFB8E4")]
		public void SetTrait(BaseArmamentTrait trait, bool isPending, ArmamentID armament, int index)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xBFBAF8", Offset = "0xBFBAF8", VA = "0xBFBAF8")]
		public void SetEmpty()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xBFBC98", Offset = "0xBFBC98", VA = "0xBFBC98")]
		public void Activate()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xBFBCEC", Offset = "0xBFBCEC", VA = "0xBFBCEC")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xBFBD40", Offset = "0xBFBD40", VA = "0xBFBD40")]
		public void Invalid(bool isInvalid)
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xBFBDA4", Offset = "0xBFBDA4", VA = "0xBFBDA4")]
		public void AttemptFailed()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xBFBE00", Offset = "0xBFBE00", VA = "0xBFBE00")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xBFBEEC", Offset = "0xBFBEEC", VA = "0xBFBEEC")]
		public void SetAdded()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xBFC08C", Offset = "0xBFC08C", VA = "0xBFC08C")]
		public TraitUILQ()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class VariableDisplaySettings : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004BE")]
		public class VariableDisplay
		{
			[Token(Token = "0x20005FC")]
			public enum DisplayIcon
			{
				[Token(Token = "0x40023C0")]
				HealthDamage,
				[Token(Token = "0x40023C1")]
				GuardDamage,
				[Token(Token = "0x40023C2")]
				ComboLimit,
				[Token(Token = "0x40023C3")]
				DashImpact,
				[Token(Token = "0x40023C4")]
				MaximumHealth,
				[Token(Token = "0x40023C5")]
				DashCharges
			}

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC514", Offset = "0x8DC514")]
			[SerializeField]
			private Variable variable;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC560", Offset = "0x8DC560")]
			[SerializeField]
			private UserString displayName;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC5AC", Offset = "0x8DC5AC")]
			[SerializeField]
			private Sprite icon;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private DisplayIcon displayIcon;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC608", Offset = "0x8DC608")]
			[SerializeField]
			private string formatString;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC654", Offset = "0x8DC654")]
			[SerializeField]
			private bool displayAsDiff;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DC6A0", Offset = "0x8DC6A0")]
			[SerializeField]
			private bool hidden;

			[Token(Token = "0x17000449")]
			public Variable Variable
			{
				[Token(Token = "0x6001C56")]
				[Address(RVA = "0xBFD41C", Offset = "0xBFD41C", VA = "0xBFD41C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044A")]
			public UserString DisplayName
			{
				[Token(Token = "0x6001C57")]
				[Address(RVA = "0xBFD424", Offset = "0xBFD424", VA = "0xBFD424")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			public Sprite Icon
			{
				[Token(Token = "0x6001C58")]
				[Address(RVA = "0xBFD42C", Offset = "0xBFD42C", VA = "0xBFD42C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			public DisplayIcon DisplayIconID
			{
				[Token(Token = "0x6001C59")]
				[Address(RVA = "0xBFD434", Offset = "0xBFD434", VA = "0xBFD434")]
				get
				{
					return default(DisplayIcon);
				}
			}

			[Token(Token = "0x1700044D")]
			public bool Hidden
			{
				[Token(Token = "0x6001C5A")]
				[Address(RVA = "0xBFD43C", Offset = "0xBFD43C", VA = "0xBFD43C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700044E")]
			public bool DisplayAsDiff
			{
				[Token(Token = "0x6001C5B")]
				[Address(RVA = "0xBFD444", Offset = "0xBFD444", VA = "0xBFD444")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xBFD44C", Offset = "0xBFD44C", VA = "0xBFD44C")]
			public string FormatQuantity(object value)
			{
				return null;
			}

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xBFD458", Offset = "0xBFD458", VA = "0xBFD458")]
			public VariableDisplay()
			{
			}
		}

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly StringBuilder descriptionBuilder;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly StringBuilder parseCache;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<VariableDisplay> variables;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<Variable, VariableDisplay> lookupTable;

		[NonSerialized]
		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool cached;

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xBFCAD8", Offset = "0xBFCAD8", VA = "0xBFCAD8")]
		public static string GetDescription(string description, StatMod[] statMods, [Optional] VariableDisplaySettings nameResolver)
		{
			return null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xBFD198", Offset = "0xBFD198", VA = "0xBFD198")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xBFD19C", Offset = "0xBFD19C", VA = "0xBFD19C")]
		private void CacheLookupTable()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xBFD0F4", Offset = "0xBFD0F4", VA = "0xBFD0F4")]
		public VariableDisplay GetDisplaySettings(Variable v)
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xBFD2C4", Offset = "0xBFD2C4", VA = "0xBFD2C4")]
		public VariableDisplaySettings()
		{
		}
	}
}
namespace SG.Claymore.UI.EnemyUI
{
	[Token(Token = "0x20001A0")]
	[ExecuteAlways]
	public class EnemyHealthMeterInstanced : MonoBehaviour
	{
		[Token(Token = "0x400093C")]
		private const int MAX_PIPS = 100;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected BoolVariable settingsEnemyHealthMetersVisible;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected BoolVariable tutorialEnemyHealthMetersVisible;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB300", Offset = "0x8BB300")]
		[SerializeField]
		protected ExposedTransformPoint bindingTransform;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB34C", Offset = "0x8BB34C")]
		[SerializeField]
		protected AudioKeyData guardBreakSoundKey;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolVariable enemyHealthIsVisibleSetting;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IntVariable enemyHealthMeterSuppression;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB3B8", Offset = "0x8BB3B8")]
		[SerializeField]
		private Transform guardOrigin;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float meterScale;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float cleanupTime;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB424", Offset = "0x8BB424")]
		[SerializeField]
		private Transform healthOrigin;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform healthOriginBrokenGuard;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB480", Offset = "0x8BB480")]
		[SerializeField]
		protected int healthPerPip;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB4CC", Offset = "0x8BB4CC")]
		[SerializeField]
		protected int pipsPerRow;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB518", Offset = "0x8BB518")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8BB518", Offset = "0x8BB518")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8BB574", Offset = "0x8BB574")]
		[SerializeField]
		private ResourceRequestKey enemyHealthRendererKey;

		[NonSerialized]
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float debugCurrentHealth;

		[NonSerialized]
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float debugMaxHealth;

		[NonSerialized]
		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float debugGuardMeterFill;

		[NonSerialized]
		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool isReady;

		[NonSerialized]
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EnemyHealth target;

		[NonSerialized]
		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Transform targetTransform;

		[NonSerialized]
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EnemyHealthRendererBase enemyHealthRenderer;

		[NonSerialized]
		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool isVisible;

		[NonSerialized]
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool isDead;

		[NonSerialized]
		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		private bool guardIsBroken;

		[NonSerialized]
		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float timeDied;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isActive;

		[Token(Token = "0x170000CF")]
		private float GetTime
		{
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0xAF5D20", Offset = "0xAF5D20", VA = "0xAF5D20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D0")]
		public float CurrentHealth
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xAF5D4C", Offset = "0xAF5D4C", VA = "0xAF5D4C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D1")]
		public float MaxHealth
		{
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xAF5DE4", Offset = "0xAF5DE4", VA = "0xAF5DE4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D2")]
		public int HealthPerPip
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xAF5E7C", Offset = "0xAF5E7C", VA = "0xAF5E7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public int PipsPerRow
		{
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xAF5E84", Offset = "0xAF5E84", VA = "0xAF5E84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D4")]
		public float MeterScale
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xAF5E8C", Offset = "0xAF5E8C", VA = "0xAF5E8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000D5")]
		public bool IsDead
		{
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xAF5E94", Offset = "0xAF5E94", VA = "0xAF5E94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000D6")]
		public bool GuardIsBroken
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xAF5E9C", Offset = "0xAF5E9C", VA = "0xAF5E9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400000D")]
		public event Action<EnemyHealthMeterInstanced> OnDestroyed
		{
			[Token(Token = "0x60008EC")]
			[Address(RVA = "0xAF5EA4", Offset = "0xAF5EA4", VA = "0xAF5EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF570", Offset = "0x8DF570")]
			add
			{
			}
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xAF5F48", Offset = "0xAF5F48", VA = "0xAF5F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF580", Offset = "0x8DF580")]
			remove
			{
			}
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xAF5FEC", Offset = "0xAF5FEC", VA = "0xAF5FEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xAF60EC", Offset = "0xAF60EC", VA = "0xAF60EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xAF61DC", Offset = "0xAF61DC", VA = "0xAF61DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xAF6240", Offset = "0xAF6240", VA = "0xAF6240")]
		private void UpdateExternalVisibility(bool visible)
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xAF6330", Offset = "0xAF6330", VA = "0xAF6330")]
		private void OnEnemyHealthMeterSuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xAF63E0", Offset = "0xAF63E0", VA = "0xAF63E0")]
		public void AppendGuardDrawingData(ref RendererDrawingData guardDrawingData)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xAF6758", Offset = "0xAF6758", VA = "0xAF6758")]
		public void AppendHealthDrawingData(ref RendererDrawingData healthDrawingData)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xAF6510", Offset = "0xAF6510", VA = "0xAF6510")]
		private void ReleaseTarget()
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xAF6890", Offset = "0xAF6890", VA = "0xAF6890")]
		public void Initialize(EnemyHealth enemyHealth, EnemyHealthRendererBase healthRendererBase)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xAF6B88", Offset = "0xAF6B88", VA = "0xAF6B88")]
		public void SetFacingDirection(Vector3 newFacing)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xAF69D0", Offset = "0xAF69D0", VA = "0xAF69D0")]
		private void StartListening(EnemyHealth enemyHealthTgt)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xAF6BD4", Offset = "0xAF6BD4", VA = "0xAF6BD4")]
		private void OnHealthDepleted()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xAF6C2C", Offset = "0xAF6C2C", VA = "0xAF6C2C")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xAF6C58", Offset = "0xAF6C58", VA = "0xAF6C58")]
		private void OnGuardDamage(float amount)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xAF6CD8", Offset = "0xAF6CD8", VA = "0xAF6CD8")]
		private void OnGuardRestore(float amount)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xAF6D58", Offset = "0xAF6D58", VA = "0xAF6D58")]
		private void OnGuardDepleted()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xAF6E84", Offset = "0xAF6E84", VA = "0xAF6E84")]
		private void OnCanDamageGuardChange(bool canDamage)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xAF6298", Offset = "0xAF6298", VA = "0xAF6298")]
		private void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xAF6EE0", Offset = "0xAF6EE0", VA = "0xAF6EE0")]
		public EnemyHealthMeterInstanced()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class GuardMeterDrawingData : RendererDrawingData
	{
		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Matrix4x4[] Matrices;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly Vector4[] Fills;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly Vector4[] DataValues;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Vector4[] MeterColors;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsDead;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float BurnMeterFill;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float GuardMeterFill;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool GuardIsBroken;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float TimeGuardBroke;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float TimeGuardRestored;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float TimeDied;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector4 DataScales;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float LastTimeHit;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Color MeterColor;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Matrix4x4 GuardMeterTRS;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector4 Fill;

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xAF7114", Offset = "0xAF7114", VA = "0xAF7114")]
		public GuardMeterDrawingData(int GUARD_BAR_MAX)
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xAF8F30", Offset = "0xAF8F30", VA = "0xAF8F30", Slot = "4")]
		public override void Append(RendererDrawingData other, int count)
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class HealthDrawingData : RendererDrawingData
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Matrix4x4[] Matrices;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float[] Fill;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly float[] Burn;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly Vector4[] Color;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Vector4[] BurnColor;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly Vector4[] Emission;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly float[] TimeSinceHit;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float LastTimeHit;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xAF6FDC", Offset = "0xAF6FDC", VA = "0xAF6FDC")]
		public HealthDrawingData(int PIP_MAX)
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xAF90B0", Offset = "0xAF90B0", VA = "0xAF90B0", Slot = "4")]
		public override void Append(RendererDrawingData other, int count)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	public class PipColor
	{
		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Tint;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BB5BC", Offset = "0x8BB5BC")]
		public Color EmissionForeground;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BB5D4", Offset = "0x8BB5D4")]
		public Color EmissionBackground;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BB5EC", Offset = "0x8BB5EC")]
		public Color BurnFrom;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BB604", Offset = "0x8BB604")]
		public Color BurnTo;

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xAF9338", Offset = "0xAF9338", VA = "0xAF9338")]
		public PipColor()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public abstract class EnemyHealthRendererBase : ScriptableObject
	{
		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly Dictionary<EnemyHealthMeterInstanced, RendererDrawingData> _healthDrawingDictionary;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly Dictionary<EnemyHealthMeterInstanced, RendererDrawingData> _guardDrawingDictionary;

		[Token(Token = "0x6000906")]
		public abstract void AppendGuardDrawingData(ref RendererDrawingData guardMeterDrawingData, EnemyHealthMeterInstanced enemyHealth, Transform origin);

		[Token(Token = "0x6000907")]
		public abstract void DrawGuard(RendererDrawingData guardDrawingData, MaterialPropertyBlock propertyBlock);

		[Token(Token = "0x6000908")]
		public abstract void DrawGuard(RendererDrawingData guardDrawingData, MaterialPropertyBlock propertyBlock, Camera camera);

		[Token(Token = "0x6000909")]
		public abstract void AppendHealthDrawingData(ref RendererDrawingData healthDrawingData, EnemyHealthMeterInstanced enemyHealth, Transform origin);

		[Token(Token = "0x600090A")]
		public abstract void DrawHealth(RendererDrawingData healthDrawingData, MaterialPropertyBlock propertyBlock);

		[Token(Token = "0x600090B")]
		public abstract void DrawHealth(RendererDrawingData healthDrawingData, MaterialPropertyBlock propertyBlock, Camera camera);

		[Token(Token = "0x600090C")]
		public abstract void OnHealthDepleted(EnemyHealthMeterInstanced enemyHealth);

		[Token(Token = "0x600090D")]
		public abstract void OnGuardDamage(EnemyHealthMeterInstanced enemyHealth, float amount);

		[Token(Token = "0x600090E")]
		public abstract void OnGuardRestore(EnemyHealthMeterInstanced enemyHealth, float amount);

		[Token(Token = "0x600090F")]
		public abstract void OnGuardDepleted(EnemyHealthMeterInstanced enemyHealth);

		[Token(Token = "0x6000910")]
		public abstract void OnCanDamageGuardChange(EnemyHealthMeterInstanced enemyHealth, bool canDamage);

		[Token(Token = "0x6000911")]
		public abstract void UpdateGuardMeter(EnemyHealthMeterInstanced enemyHealth, float guardFill);

		[Token(Token = "0x6000912")]
		public abstract RendererDrawingData GetGuardDrawingData(int instanceCount);

		[Token(Token = "0x6000913")]
		public abstract RendererDrawingData GetHealthDrawingData(int instanceCount);

		[Token(Token = "0x6000914")]
		public abstract void Add(EnemyHealthMeterInstanced target);

		[Token(Token = "0x6000915")]
		public abstract void Remove(EnemyHealthMeterInstanced target);

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xAF8E88", Offset = "0xAF8E88", VA = "0xAF8E88")]
		protected EnemyHealthRendererBase()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2264", Offset = "0x8A2264")]
	public class EnemyHealthRenderer : EnemyHealthRendererBase
	{
		[Token(Token = "0x4000978")]
		private const int PIP_MAX = 100;

		[Token(Token = "0x4000979")]
		private const int GUARD_MAX = 1;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB61C", Offset = "0x8BB61C")]
		[SerializeField]
		private Mesh _guardMesh;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _guardMaterial;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BB678", Offset = "0x8BB678")]
		[SerializeField]
		private MaterialPropertyReference _dataParam;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BB6C4", Offset = "0x8BB6C4")]
		[SerializeField]
		private MaterialPropertyReference _meterFillParam;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BB710", Offset = "0x8BB710")]
		[SerializeField]
		private MaterialPropertyReference _foregroundColorParam;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8BB75C", Offset = "0x8BB75C")]
		[SerializeField]
		private Color _guardRestoreColor;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB79C", Offset = "0x8BB79C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB79C", Offset = "0x8BB79C")]
		[SerializeField]
		private bool _useEasingFunctions;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _isBrokenCurve;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AnimationCurve _restoreCurve;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AnimationCurve _isDeadCurve;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AnimationCurve _alphaCurve;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BB84C", Offset = "0x8BB84C")]
		[SerializeField]
		private float _guardBurnCatchUpRate;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _breakRestoreTime;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float _cleanupTime;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BB8A4", Offset = "0x8BB8A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB8A4", Offset = "0x8BB8A4")]
		[SerializeField]
		private Mesh _pipMesh;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB914", Offset = "0x8BB914")]
		[SerializeField]
		private Material _pipMaterial;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB960", Offset = "0x8BB960")]
		[SerializeField]
		private float _spacing;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB9AC", Offset = "0x8BB9AC")]
		[SerializeField]
		private float _rowSpacing;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BB9F8", Offset = "0x8BB9F8")]
		[SerializeField]
		private float _pipScale;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBA44", Offset = "0x8BBA44")]
		[SerializeField]
		private float _pipRotation;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBA90", Offset = "0x8BBA90")]
		[SerializeField]
		private PipColor[] _rowColors;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBADC", Offset = "0x8BBADC")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BBADC", Offset = "0x8BBADC")]
		[SerializeField]
		private MaterialPropertyReference _pipFill;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BBB4C", Offset = "0x8BBB4C")]
		[SerializeField]
		private MaterialPropertyReference _pipBurn;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBB98", Offset = "0x8BBB98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BBB98", Offset = "0x8BBB98")]
		[SerializeField]
		private MaterialPropertyReference _pipTint;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBC08", Offset = "0x8BBC08")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BBC08", Offset = "0x8BBC08")]
		[SerializeField]
		private MaterialPropertyReference _pipEmission;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8BBC78", Offset = "0x8BBC78")]
		[SerializeField]
		private MaterialPropertyReference _pipBurnTint;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float _burnPauseTime;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[SerializeField]
		private float _burnGlowTime;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float _burnCatchupRate;

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xAF6F10", Offset = "0xAF6F10", VA = "0xAF6F10", Slot = "18")]
		public override void Add(EnemyHealthMeterInstanced target)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xAF7204", Offset = "0xAF7204", VA = "0xAF7204", Slot = "19")]
		public override void Remove(EnemyHealthMeterInstanced target)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xAF7280", Offset = "0xAF7280", VA = "0xAF7280", Slot = "16")]
		public override RendererDrawingData GetGuardDrawingData(int instanceCount)
		{
			return null;
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xAF72E0", Offset = "0xAF72E0", VA = "0xAF72E0", Slot = "17")]
		public override RendererDrawingData GetHealthDrawingData(int instanceCount)
		{
			return null;
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xAF7340", Offset = "0xAF7340", VA = "0xAF7340")]
		private void DoGuardAnimation(ref GuardMeterDrawingData guardData, EnemyHealthMeterInstanced target, Transform origin)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xAF77F0", Offset = "0xAF77F0", VA = "0xAF77F0", Slot = "4")]
		public override void AppendGuardDrawingData(ref RendererDrawingData guardMeterDrawingData, EnemyHealthMeterInstanced enemyHealth, Transform origin)
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xAF78E0", Offset = "0xAF78E0", VA = "0xAF78E0", Slot = "5")]
		public override void DrawGuard(RendererDrawingData guardDrawingData, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xAF7A2C", Offset = "0xAF7A2C", VA = "0xAF7A2C", Slot = "6")]
		public override void DrawGuard(RendererDrawingData guardDrawingData, MaterialPropertyBlock propertyBlock, Camera camera)
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xAF7B94", Offset = "0xAF7B94", VA = "0xAF7B94")]
		private int DoHealthAnimation(ref HealthDrawingData healthDrawingData, EnemyHealthMeterInstanced target, Transform origin)
		{
			return default(int);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xAF83F8", Offset = "0xAF83F8", VA = "0xAF83F8", Slot = "7")]
		public override void AppendHealthDrawingData(ref RendererDrawingData healthDrawingData, EnemyHealthMeterInstanced enemyHealth, Transform origin)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xAF84F4", Offset = "0xAF84F4", VA = "0xAF84F4", Slot = "8")]
		public override void DrawHealth(RendererDrawingData healthDrawingData, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xAF8680", Offset = "0xAF8680", VA = "0xAF8680", Slot = "9")]
		public override void DrawHealth(RendererDrawingData healthDrawingData, MaterialPropertyBlock propertyBlock, Camera camera)
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xAF8828", Offset = "0xAF8828", VA = "0xAF8828", Slot = "10")]
		public override void OnHealthDepleted(EnemyHealthMeterInstanced enemyHealth)
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xAF88E4", Offset = "0xAF88E4", VA = "0xAF88E4", Slot = "11")]
		public override void OnGuardDamage(EnemyHealthMeterInstanced enemyHealth, float amount)
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xAF899C", Offset = "0xAF899C", VA = "0xAF899C", Slot = "12")]
		public override void OnGuardRestore(EnemyHealthMeterInstanced enemyHealth, float amount)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xAF8A54", Offset = "0xAF8A54", VA = "0xAF8A54", Slot = "13")]
		public override void OnGuardDepleted(EnemyHealthMeterInstanced enemyHealth)
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xAF8B10", Offset = "0xAF8B10", VA = "0xAF8B10", Slot = "14")]
		public override void OnCanDamageGuardChange(EnemyHealthMeterInstanced enemyHealth, bool canDamage)
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xAF8C04", Offset = "0xAF8C04", VA = "0xAF8C04", Slot = "15")]
		public override void UpdateGuardMeter(EnemyHealthMeterInstanced enemyHealth, float guardFill)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xAF8CBC", Offset = "0xAF8CBC", VA = "0xAF8CBC")]
		public EnemyHealthRenderer()
		{
		}
	}
}
namespace SG.Claymore.Tutorial
{
	[Token(Token = "0x20001A6")]
	public class ArmamentAbilityEvent : MonoBehaviour
	{
		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHandState _handState;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBD04", Offset = "0x8BBD04")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BBD04", Offset = "0x8BBD04")]
		[SerializeField]
		private List<ArmamentAbilityDefinition> _armamentAbilityDefinitions;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BBD74", Offset = "0x8BBD74")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BBD74", Offset = "0x8BBD74")]
		[SerializeField]
		private GlobalEvent _onActivatedGlobalEvent;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent _onDeactivatedGlobalEvent;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onFullChargeGlobalEvent;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GlobalEvent _onFailUseStartGlobalEvent;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalEvent _onFailUseEndGlobalEvent;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBE10", Offset = "0x8BBE10")]
		[SerializeField]
		private GlobalEvent _onHandWeaponSuperCharge;

		[NonSerialized]
		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ArmamentAbilityUser _currentArmamentAbilityUser;

		[NonSerialized]
		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ArmamentAbilityDefinition _currentAbilityID;

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xAEAD68", Offset = "0xAEAD68", VA = "0xAEAD68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xAEAE48", Offset = "0xAEAE48", VA = "0xAEAE48")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xAEAF20", Offset = "0xAEAF20", VA = "0xAEAF20")]
		private void Register()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xAEB11C", Offset = "0xAEB11C", VA = "0xAEB11C")]
		private void Unregister()
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xAEB318", Offset = "0xAEB318", VA = "0xAEB318")]
		private void SetCurrentArmamentAbilityUser(Armament armament)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xAEB4D4", Offset = "0xAEB4D4", VA = "0xAEB4D4")]
		private void OnWeaponSuperCharge()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xAEB568", Offset = "0xAEB568", VA = "0xAEB568")]
		private bool PassFilterCheck()
		{
			return default(bool);
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xAEB5DC", Offset = "0xAEB5DC", VA = "0xAEB5DC")]
		private void OnAbilityActivated()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xAEB67C", Offset = "0xAEB67C", VA = "0xAEB67C")]
		private void OnAbilityDeactivated()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xAEB434", Offset = "0xAEB434", VA = "0xAEB434")]
		private void OnFullCharge()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xAEB71C", Offset = "0xAEB71C", VA = "0xAEB71C")]
		private void OnUseFailStart()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xAEB7BC", Offset = "0xAEB7BC", VA = "0xAEB7BC")]
		private void OnUseFailEnd()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xAEB85C", Offset = "0xAEB85C", VA = "0xAEB85C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xAEBA40", Offset = "0xAEBA40", VA = "0xAEBA40")]
		public ArmamentAbilityEvent()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class ArmamentHitTracker : MonoBehaviour
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHandVariable _playerHand;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _trackStabs;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _trackSwings;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool _trackOther;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBE9C", Offset = "0x8BBE9C")]
		[SerializeField]
		private GlobalEvent _onUnderHit;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent _onStandardHit;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onBigHit;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Armament _currentArmament;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayerHand _currentPlayerHand;

		[Token(Token = "0x6000938")]
		[Address(RVA = "0xAEBABC", Offset = "0xAEBABC", VA = "0xAEBABC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xAEBB60", Offset = "0xAEBB60", VA = "0xAEBB60")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xAEBCD4", Offset = "0xAEBCD4", VA = "0xAEBCD4")]
		private void OnPlayerHandChanged(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xAEBE44", Offset = "0xAEBE44", VA = "0xAEBE44")]
		private void OnArmamentSummoned(Armament armament)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0xAEBF48", Offset = "0xAEBF48", VA = "0xAEBF48")]
		private void OnArmamentUnsummoned()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xAEC068", Offset = "0xAEC068", VA = "0xAEC068")]
		private void OnDealt(HitData.HitQualityType hitQualityType, HitData.HitStyleType hitStyleType)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xAEC09C", Offset = "0xAEC09C", VA = "0xAEC09C")]
		private void RaiseEvent(HitData.HitQualityType hitQualityType)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xAEC1DC", Offset = "0xAEC1DC", VA = "0xAEC1DC")]
		public ArmamentHitTracker()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class ArmamentSummonedEvent : MonoBehaviour
	{
		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHandVariable _playerHand;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerHand _currentPlayerHand;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBF18", Offset = "0x8BBF18")]
		[SerializeField]
		private BoolVariable _isArmamentSummoned;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent _onArmamentSummonedGlobalEvent;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onArmamentUnsummonedGlobalEvent;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool initialized;

		[Token(Token = "0x6000940")]
		[Address(RVA = "0xAEC1EC", Offset = "0xAEC1EC", VA = "0xAEC1EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xAEC290", Offset = "0xAEC290", VA = "0xAEC290")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xAEC404", Offset = "0xAEC404", VA = "0xAEC404")]
		private void OnPlayerHandChanged(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xAEC680", Offset = "0xAEC680", VA = "0xAEC680")]
		private void OnArmamentSummoned(Armament armament)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xAEC76C", Offset = "0xAEC76C", VA = "0xAEC76C")]
		private void OnArmamentUnsummoned()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xAEC57C", Offset = "0xAEC57C", VA = "0xAEC57C")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xAEC858", Offset = "0xAEC858", VA = "0xAEC858")]
		public ArmamentSummonedEvent()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class BoolVariableValueTracker : MonoBehaviour
	{
		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable _variable;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isInstanced;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BBFA4", Offset = "0x8BBFA4")]
		[SerializeField]
		private ClaymoreEntityVariable _entityVariable;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BBFF0", Offset = "0x8BBFF0")]
		[SerializeField]
		private GlobalEvent _onValueChangeTrue;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onValueChangeFalse;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BoolVariable _currentInstanceVariable;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _lastValue;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool _entityRegistered;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xAEC860", Offset = "0xAEC860", VA = "0xAEC860")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xAEC994", Offset = "0xAEC994", VA = "0xAEC994")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xAECAAC", Offset = "0xAECAAC", VA = "0xAECAAC")]
		private void OnEntityChanged(ClaymoreEntity newEntity)
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xAECBF4", Offset = "0xAECBF4", VA = "0xAECBF4")]
		private void OnValueChanged(bool newValue)
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xAECCE4", Offset = "0xAECCE4", VA = "0xAECCE4")]
		public BoolVariableValueTracker()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	public class FTUELogo : MonoBehaviour
	{
		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onAnimationEvent;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xAECCEC", Offset = "0xAECCEC", VA = "0xAECCEC")]
		public void DoAnimationEvent()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xAECD00", Offset = "0xAECD00", VA = "0xAECD00")]
		public FTUELogo()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class FloatVariableValueSetter : MonoBehaviour
	{
		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FloatVariable _variable;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xAECD08", Offset = "0xAECD08", VA = "0xAECD08")]
		public void Set(float newValue)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xAECD2C", Offset = "0xAECD2C", VA = "0xAECD2C")]
		public FloatVariableValueSetter()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class FloatVariableValueTracker : MonoBehaviour
	{
		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FloatVariable _variable;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isInstanced;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BC0C4", Offset = "0x8BC0C4")]
		[SerializeField]
		private ClaymoreEntityVariable _entityVariable;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC110", Offset = "0x8BC110")]
		[SerializeField]
		private GlobalEvent _onValueIncrementGlobalEvent;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onValueDecrementGlobalEvent;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FloatVariable _currentInstanceVariable;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _lastValue;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _entityRegistered;

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xAECD34", Offset = "0xAECD34", VA = "0xAECD34")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xAECE64", Offset = "0xAECE64", VA = "0xAECE64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xAECF7C", Offset = "0xAECF7C", VA = "0xAECF7C")]
		private void OnEntityChanged(ClaymoreEntity newEntity)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xAED0C0", Offset = "0xAED0C0", VA = "0xAED0C0")]
		private void OnValueChanged(float newValue)
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xAED1B0", Offset = "0xAED1B0", VA = "0xAED1B0")]
		public FloatVariableValueTracker()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class IntVariableValueTracker : MonoBehaviour
	{
		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable _variable;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isInstanced;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BC18C", Offset = "0x8BC18C")]
		[SerializeField]
		private ClaymoreEntityVariable _entityVariable;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC1D8", Offset = "0x8BC1D8")]
		[SerializeField]
		private GlobalEvent _onValueIncrementGlobalEvent;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onValueDecrementGlobalEvent;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IntVariable _currentInstanceVariable;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _lastValue;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool _entityRegistered;

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xAED1B8", Offset = "0xAED1B8", VA = "0xAED1B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xAED2E8", Offset = "0xAED2E8", VA = "0xAED2E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xAED400", Offset = "0xAED400", VA = "0xAED400")]
		private void OnEntityChanged(ClaymoreEntity newEntity)
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xAED544", Offset = "0xAED544", VA = "0xAED544")]
		private void OnValueChanged(int newValue)
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xAED634", Offset = "0xAED634", VA = "0xAED634")]
		public IntVariableValueTracker()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class NodeTrackerEvent : MonoBehaviour
	{
		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRTrackedNode _trackedNode;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LayerMask _layerMask;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _raycastDistance;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC264", Offset = "0x8BC264")]
		[SerializeField]
		private BoolVariable _isTrackingVariable;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent _onStartTrackingGlobalEvent;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onEndTrackingGlobalEvent;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isTracking;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool _lastTrackingValue;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xAED63C", Offset = "0xAED63C", VA = "0xAED63C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xAED880", Offset = "0xAED880", VA = "0xAED880")]
		public NodeTrackerEvent()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class PoseBillboard : MonoBehaviour
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRTrackedNode _xrTrackedNode;

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xAED890", Offset = "0xAED890", VA = "0xAED890")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xAED990", Offset = "0xAED990", VA = "0xAED990")]
		public PoseBillboard()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class RewardGrabEvent : MonoBehaviour
	{
		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHandVariable _playerHand;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerHand _currentPlayerHand;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC2F0", Offset = "0x8BC2F0")]
		[SerializeField]
		private List<ArmamentAugment> _optionalRewardFilter;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable _variable;

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xAED998", Offset = "0xAED998", VA = "0xAED998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xAEDA3C", Offset = "0xAEDA3C", VA = "0xAEDA3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xAEDB6C", Offset = "0xAEDB6C", VA = "0xAEDB6C")]
		private void OnPlayerHandChanged(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xAEDC98", Offset = "0xAEDC98", VA = "0xAEDC98")]
		private void OnInteractableSet(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xAEDDAC", Offset = "0xAEDDAC", VA = "0xAEDDAC")]
		private bool PassFilterCheck(ArmamentAugment reward)
		{
			return default(bool);
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xAEDE30", Offset = "0xAEDE30", VA = "0xAEDE30")]
		public RewardGrabEvent()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class WeaponAutoBlockMover : MonoBehaviour
	{
		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF14", Offset = "0x8AAF14")]
		private sealed class <MoveCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WeaponAutoBlockMover <>4__this;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform <space>5__2;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Quaternion <originRot>5__3;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <destRot>5__4;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <originPos>5__5;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private Vector3 <destPos>5__6;

			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <counter>5__7;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <time>5__8;

			[Token(Token = "0x1700044F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C61")]
				[Address(RVA = "0xAEE7AC", Offset = "0xAEE7AC", VA = "0xAEE7AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000450")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C63")]
				[Address(RVA = "0xAEE814", Offset = "0xAEE814", VA = "0xAEE814", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0xAEE1B0", Offset = "0xAEE1B0", VA = "0xAEE1B0")]
			[DebuggerHidden]
			public <MoveCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xAEE260", Offset = "0xAEE260", VA = "0xAEE260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C60")]
			[Address(RVA = "0xAEE264", Offset = "0xAEE264", VA = "0xAEE264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xAEE7B4", Offset = "0xAEE7B4", VA = "0xAEE7B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _visuals;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _disableVisualsOnBlocking;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PremonitionGlobalEvent _startPremonitionGlobalEvent;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerHandState _handState;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _maxRounds;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 _originPositionOffset;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve _moveCurve;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine _moveCoroutine;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 _startPosition;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Quaternion _startRotation;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BlockPremonitionInstanced _currentActiveBlockPremonition;

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xAEDEAC", Offset = "0xAEDEAC", VA = "0xAEDEAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xAEDF64", Offset = "0xAEDF64", VA = "0xAEDF64")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xAEE000", Offset = "0xAEE000", VA = "0xAEE000")]
		private void OnStartPremonition(Premonition premonition)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xAEE134", Offset = "0xAEE134", VA = "0xAEE134")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF590", Offset = "0x8DF590")]
		private IEnumerator MoveCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xAEE1DC", Offset = "0xAEE1DC", VA = "0xAEE1DC")]
		public WeaponAutoBlockMover()
		{
		}
	}
}
namespace SG.Claymore.Targeting
{
	[Serializable]
	[Token(Token = "0x20001B2")]
	public class Arc
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BC3BC", Offset = "0x8BC3BC")]
		public float TotalAngle;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BC3DC", Offset = "0x8BC3DC")]
		public float ForwardOffset;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Radius;

		[Token(Token = "0x170000D7")]
		public Arc Mirrored
		{
			[Token(Token = "0x600096C")]
			[Address(RVA = "0xAE6934", Offset = "0xAE6934", VA = "0xAE6934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xAE6898", Offset = "0xAE6898", VA = "0xAE6898")]
		public Arc()
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xAE68A0", Offset = "0xAE68A0", VA = "0xAE68A0")]
		public Arc(float angle, float radius)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xAE68DC", Offset = "0xAE68DC", VA = "0xAE68DC")]
		public Arc(float minAngle, float maxAngle, float radius)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xAE69BC", Offset = "0xAE69BC", VA = "0xAE69BC")]
		public bool Contains(Vector3 origin, Vector3 arcForward, Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xAE6AA0", Offset = "0xAE6AA0", VA = "0xAE6AA0")]
		public bool Contains(Vector3 arcForward, Vector3 originToPoint)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001B3")]
	public struct RaycastRequirement
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool required;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float radius;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LayerMask mask;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ExposedTransformPoint targetPoint;
	}
	[Token(Token = "0x20001B4")]
	public interface ITarget
	{
		[Token(Token = "0x170000D8")]
		bool CanBeTargeted
		{
			[Token(Token = "0x600096F")]
			get;
			[Token(Token = "0x6000970")]
			set;
		}
	}
	[Token(Token = "0x20001B5")]
	public class ArcTargeter<T> where T : MonoBehaviour, ITarget
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private RuntimeCollection<T> _itemManager;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private GameObject _self;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Arc[] _targetArcs;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _ignoreY;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool useFirstArcWithResult;

		[Token(Token = "0x6000971")]
		public ArcTargeter(RuntimeCollection<T> itemManager, Arc[] targetArcs)
		{
		}

		[Token(Token = "0x6000972")]
		public ArcTargeter(RuntimeCollection<T> itemManager, Arc[] targetArcs, GameObject self, bool ignoreY)
		{
		}

		[Token(Token = "0x6000973")]
		public ArcTargeter(RuntimeCollection<T> itemManager, Arc[] targetArcs, GameObject self, bool ignoreY, bool useFirstArcWithResult)
		{
		}

		[Token(Token = "0x6000974")]
		public T GetArcTarget(Pose origin)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		public T GetArcTarget(Pose origin, RaycastRequirement lineOfEffect)
		{
			return null;
		}

		[Token(Token = "0x6000976")]
		private float GetArcScore(Arc arc, Pose origin, T item)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20001B6")]
	public enum TicketPriority
	{
		[Token(Token = "0x40009F0")]
		None,
		[Token(Token = "0x40009F1")]
		Engaged,
		[Token(Token = "0x40009F2")]
		OnDeck,
		[Token(Token = "0x40009F3")]
		Standby
	}
	[Serializable]
	[Token(Token = "0x20001B7")]
	public struct TicketRequest
	{
		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EnemyMover enemy;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Targetable target;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DistanceThreshold distanceGoal;

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x9661B0", Offset = "0x9661B0", VA = "0x9661B0")]
		public TicketRequest(EnemyMover mover, Targetable target, DistanceThreshold distanceGoal)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001B8")]
	public class FightTicket
	{
		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private TicketPriority priority;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Targetable target;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frameRefreshed;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isValid;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC41C", Offset = "0x8BC41C")]
		private float <DistToGoal>k__BackingField;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC42C", Offset = "0x8BC42C")]
		private Vector3 <ToTargetHeading>k__BackingField;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC43C", Offset = "0x8BC43C")]
		private Vector3 <ToGoalHeading>k__BackingField;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC44C", Offset = "0x8BC44C")]
		private float <PlayerRelativeFitness>k__BackingField;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC45C", Offset = "0x8BC45C")]
		private bool <HasNoNavObstruction>k__BackingField;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC46C", Offset = "0x8BC46C")]
		private Vector3 <GoalPosition>k__BackingField;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC47C", Offset = "0x8BC47C")]
		private float <DistToTarget>k__BackingField;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC48C", Offset = "0x8BC48C")]
		private bool <TargetIsOnNavmesh>k__BackingField;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC49C", Offset = "0x8BC49C")]
		private Vector3 <OffNavMeshHeading>k__BackingField;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC4AC", Offset = "0x8BC4AC")]
		private Vector3 <NavMeshHitPoint>k__BackingField;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EnemyMover enemy;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TicketRequest lastRequest;

		[Token(Token = "0x170000D9")]
		public TicketPriority Priority
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xAE6D14", Offset = "0xAE6D14", VA = "0xAE6D14")]
			get
			{
				return default(TicketPriority);
			}
			[Token(Token = "0x6000979")]
			[Address(RVA = "0xAE6D1C", Offset = "0xAE6D1C", VA = "0xAE6D1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public Targetable Target
		{
			[Token(Token = "0x600097A")]
			[Address(RVA = "0xAE6F88", Offset = "0xAE6F88", VA = "0xAE6F88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		public bool DoDebugLogging
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0xAE6F90", Offset = "0xAE6F90", VA = "0xAE6F90")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000DC")]
		public float DistToGoal
		{
			[Token(Token = "0x600097C")]
			[Address(RVA = "0xAE6FAC", Offset = "0xAE6FAC", VA = "0xAE6FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF5F4", Offset = "0x8DF5F4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600097D")]
			[Address(RVA = "0xAE6FB4", Offset = "0xAE6FB4", VA = "0xAE6FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF604", Offset = "0x8DF604")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public Vector3 ToTargetHeading
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xAE6FBC", Offset = "0xAE6FBC", VA = "0xAE6FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF614", Offset = "0x8DF614")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600097F")]
			[Address(RVA = "0xAE6FC8", Offset = "0xAE6FC8", VA = "0xAE6FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF624", Offset = "0x8DF624")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public Vector3 ToGoalHeading
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0xAE6FD4", Offset = "0xAE6FD4", VA = "0xAE6FD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF634", Offset = "0x8DF634")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000981")]
			[Address(RVA = "0xAE6FE0", Offset = "0xAE6FE0", VA = "0xAE6FE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF644", Offset = "0x8DF644")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool WasRefreshedThisFrame
		{
			[Token(Token = "0x6000982")]
			[Address(RVA = "0xAE6FEC", Offset = "0xAE6FEC", VA = "0xAE6FEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public int EngagementFitness
		{
			[Token(Token = "0x6000983")]
			[Address(RVA = "0xAE7018", Offset = "0xAE7018", VA = "0xAE7018")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E1")]
		public float PlayerRelativeFitness
		{
			[Token(Token = "0x6000984")]
			[Address(RVA = "0xAE7034", Offset = "0xAE7034", VA = "0xAE7034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF654", Offset = "0x8DF654")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000985")]
			[Address(RVA = "0xAE703C", Offset = "0xAE703C", VA = "0xAE703C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF664", Offset = "0x8DF664")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public bool IsLocked
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0xAE7044", Offset = "0xAE7044", VA = "0xAE7044")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		public float NavDistRemaining
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0xAE7060", Offset = "0xAE7060", VA = "0xAE7060")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000E4")]
		public bool HasNoNavObstruction
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xAE70C0", Offset = "0xAE70C0", VA = "0xAE70C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF674", Offset = "0x8DF674")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xAE70C8", Offset = "0xAE70C8", VA = "0xAE70C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF684", Offset = "0x8DF684")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public Vector3 GoalPosition
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xAE70D4", Offset = "0xAE70D4", VA = "0xAE70D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF694", Offset = "0x8DF694")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xAE70E0", Offset = "0xAE70E0", VA = "0xAE70E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6A4", Offset = "0x8DF6A4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E6")]
		public float DistToTarget
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xAE70EC", Offset = "0xAE70EC", VA = "0xAE70EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6B4", Offset = "0x8DF6B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xAE70F4", Offset = "0xAE70F4", VA = "0xAE70F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6C4", Offset = "0x8DF6C4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E7")]
		public bool IsValid
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xAE6F5C", Offset = "0xAE6F5C", VA = "0xAE6F5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public bool TargetIsOnNavmesh
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xAE70FC", Offset = "0xAE70FC", VA = "0xAE70FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6D4", Offset = "0x8DF6D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xAE7104", Offset = "0xAE7104", VA = "0xAE7104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6E4", Offset = "0x8DF6E4")]
			private set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public Vector3 OffNavMeshHeading
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xAE7110", Offset = "0xAE7110", VA = "0xAE7110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF6F4", Offset = "0x8DF6F4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xAE711C", Offset = "0xAE711C", VA = "0xAE711C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF704", Offset = "0x8DF704")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EA")]
		public Vector3 NavMeshHitPoint
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xAE7128", Offset = "0xAE7128", VA = "0xAE7128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF714", Offset = "0x8DF714")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xAE7134", Offset = "0xAE7134", VA = "0xAE7134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF724", Offset = "0x8DF724")]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public float CombinedEngagementValue
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0xAE7140", Offset = "0xAE7140", VA = "0xAE7140")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xAE7230", Offset = "0xAE7230", VA = "0xAE7230")]
		public FightTicket(TicketPriority priority, TicketRequest request)
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xAE72D4", Offset = "0xAE72D4", VA = "0xAE72D4")]
		public void Refresh(TicketRequest request)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xAE7BAC", Offset = "0xAE7BAC", VA = "0xAE7BAC")]
		public void Invalidate()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xAE7BB4", Offset = "0xAE7BB4", VA = "0xAE7BB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20001B9")]
	public sealed class LocalPlayerTargetFinder : MonoBehaviour
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Arc[] RangeArcs;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyManager enemies;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC4CC", Offset = "0x8BC4CC")]
		public Transform SightOrigin;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC504", Offset = "0x8BC504")]
		private Enemy <CurrentTarget>k__BackingField;

		[Token(Token = "0x170000EC")]
		public Enemy CurrentTarget
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0xAE7DE0", Offset = "0xAE7DE0", VA = "0xAE7DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF734", Offset = "0x8DF734")]
			get
			{
				return null;
			}
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xAE7DE8", Offset = "0xAE7DE8", VA = "0xAE7DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF744", Offset = "0x8DF744")]
			private set
			{
			}
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xAE7DF0", Offset = "0xAE7DF0", VA = "0xAE7DF0")]
		private void Update()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xAE7F48", Offset = "0xAE7F48", VA = "0xAE7F48")]
		private Enemy GetEnemyTarget(Pose origin)
		{
			return null;
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xAE8390", Offset = "0xAE8390", VA = "0xAE8390")]
		public LocalPlayerTargetFinder()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class TargetFinder : EnemyComponent
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool waitForLevelLoad;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatVariable DistanceToTarget;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatVariable AngleToTarget;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Arc[] RangeArcs;

		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ClaymoreEntityVariable TargetVariable;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float UpdateFrequency;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform thisTransform;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC594", Offset = "0x8BC594")]
		[SerializeField]
		private float chainAggroAlertDistance;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private EnemyManager enemyManager;

		[NonSerialized]
		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool hasPlayer;

		[NonSerialized]
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Targetable playerTarget;

		[NonSerialized]
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform playerTargetTransform;

		[NonSerialized]
		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool hasTarget;

		[NonSerialized]
		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Targetable currentTarget;

		[NonSerialized]
		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ClaymoreEntityVariable instancedTargetVariable;

		[NonSerialized]
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private FloatVariable instancedDistanceToTarget;

		[NonSerialized]
		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private FloatVariable instancedAngleToTarget;

		[NonSerialized]
		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float nextUpdateTime;

		[Token(Token = "0x170000ED")]
		public Targetable CurrentTarget
		{
			[Token(Token = "0x60009A1")]
			[Address(RVA = "0xAE8544", Offset = "0xAE8544", VA = "0xAE8544")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009A2")]
			[Address(RVA = "0xAE854C", Offset = "0xAE854C", VA = "0xAE854C")]
			set
			{
			}
		}

		[Token(Token = "0x1400000E")]
		public event Action<Targetable> OnTargetChangedEvent
		{
			[Token(Token = "0x600099F")]
			[Address(RVA = "0xAE83FC", Offset = "0xAE83FC", VA = "0xAE83FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF754", Offset = "0x8DF754")]
			add
			{
			}
			[Token(Token = "0x60009A0")]
			[Address(RVA = "0xAE84A0", Offset = "0xAE84A0", VA = "0xAE84A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF764", Offset = "0x8DF764")]
			remove
			{
			}
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xAE86A4", Offset = "0xAE86A4", VA = "0xAE86A4", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xAE88B8", Offset = "0xAE88B8", VA = "0xAE88B8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xAE8974", Offset = "0xAE8974", VA = "0xAE8974")]
		private void OnPlayerChanged(PlayerEntity p)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xAE8A50", Offset = "0xAE8A50", VA = "0xAE8A50", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xAE8D38", Offset = "0xAE8D38", VA = "0xAE8D38", Slot = "7")]
		protected virtual void AlertNearbyEnemies()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xAE8F10", Offset = "0xAE8F10", VA = "0xAE8F10")]
		public TargetFinder()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public interface IFindableTarget
	{
		[Token(Token = "0x60009A9")]
		Transform GetTargetTransform();
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A22C4", Offset = "0x8A22C4")]
	public class TargetSet : RuntimeCollection<Targetable>
	{
		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xAE8F94", Offset = "0xAE8F94", VA = "0xAE8F94")]
		public TargetSet()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class Targetable : MonoBehaviour, IEntityComponent, IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent, IFindableTarget, ITarget
	{
		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC600", Offset = "0x8BC600")]
		private ClaymoreEntity <Entity>k__BackingField;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedTransformPoint TargetTransform;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExposedTransformPoint RootTransform;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TargetSet PotentialTargets;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolVariable WasEngagedTrigger;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC610", Offset = "0x8BC610")]
		[SerializeField]
		private float dashBufferDistance;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Collider MovementCollider;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform cachedBoundTransform;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BC65C", Offset = "0x8BC65C")]
		private bool <CanBeTargeted>k__BackingField;

		[Token(Token = "0x170000EE")]
		public ClaymoreEntity Entity
		{
			[Token(Token = "0x60009AB")]
			[Address(RVA = "0xAE8FE4", Offset = "0xAE8FE4", VA = "0xAE8FE4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF774", Offset = "0x8DF774")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xAE8FEC", Offset = "0xAE8FEC", VA = "0xAE8FEC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF784", Offset = "0x8DF784")]
			set
			{
			}
		}

		[Token(Token = "0x170000EF")]
		public float DashBufferDistance
		{
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0xAE8FF4", Offset = "0xAE8FF4", VA = "0xAE8FF4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000F0")]
		public bool CanBeTargeted
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xAE90E0", Offset = "0xAE90E0", VA = "0xAE90E0", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF794", Offset = "0x8DF794")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xAE90E8", Offset = "0xAE90E8", VA = "0xAE90E8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7A4", Offset = "0x8DF7A4")]
			set
			{
			}
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xAE7AA8", Offset = "0xAE7AA8", VA = "0xAE7AA8", Slot = "6")]
		public Transform GetTargetTransform()
		{
			return null;
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xAE8FFC", Offset = "0xAE8FFC", VA = "0xAE8FFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xAE9020", Offset = "0xAE9020", VA = "0xAE9020")]
		public void OnWasEngaged()
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xAE90F4", Offset = "0xAE90F4", VA = "0xAE90F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xAE9118", Offset = "0xAE9118", VA = "0xAE9118")]
		public Targetable()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public struct PlayerNavMeshSample
	{
		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsNearNavMesh;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool SampleHitEdge;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 Location;
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2324", Offset = "0x8A2324")]
	public class Ticketmaster : CustomPlayerLoop
	{
		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EnemyManager enemyManager;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BC68C", Offset = "0x8BC68C")]
		[SerializeField]
		private IntVariable enemiesInCombat;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC6D8", Offset = "0x8BC6D8")]
		[SerializeField]
		private List<TimerVariable> globalTimers;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC724", Offset = "0x8BC724")]
		[SerializeField]
		private IntReference framesPerEnemy;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Targetable, List<FightTicket>> ticketLookup;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<FightTicket> sortingCache;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<Targetable> targets;

		[Token(Token = "0x4000A33")]
		private const int MAX_ENEMIES = 7;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private int tickIndex;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private int delayCount;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int enemyIndex;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private PlayerNavMeshSample lastPlayerPositionSample;

		[Token(Token = "0x170000F1")]
		public EnemyManager EnemyManager
		{
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0xAE917C", Offset = "0xAE917C", VA = "0xAE917C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xAE9184", Offset = "0xAE9184", VA = "0xAE9184")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xAE926C", Offset = "0xAE926C", VA = "0xAE926C", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0xAE92D8", Offset = "0xAE92D8", VA = "0xAE92D8", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xAE9374", Offset = "0xAE9374", VA = "0xAE9374", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xAE941C", Offset = "0xAE941C", VA = "0xAE941C")]
		private void OnEnemyManagerReady()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xAE9498", Offset = "0xAE9498", VA = "0xAE9498")]
		private void DoPlayerSampling()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xAE9614", Offset = "0xAE9614", VA = "0xAE9614", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xAE971C", Offset = "0xAE971C", VA = "0xAE971C")]
		public void StaggeredUpdate()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xAE98A0", Offset = "0xAE98A0", VA = "0xAE98A0")]
		private void UpdateTimers()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xAE99F4", Offset = "0xAE99F4", VA = "0xAE99F4")]
		private void RefreshTickets()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xAE9B78", Offset = "0xAE9B78", VA = "0xAE9B78")]
		private void DoEnemyMovement()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xAE9C20", Offset = "0xAE9C20", VA = "0xAE9C20")]
		private void UpdateAllTicketPriorities()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xAE9944", Offset = "0xAE9944", VA = "0xAE9944")]
		private void UpdateAllAIAgents()
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xAE9CB8", Offset = "0xAE9CB8", VA = "0xAE9CB8")]
		private FightTicket RequestTicket(FightTicket oldTicket, TicketRequest request)
		{
			return null;
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xAEA4F8", Offset = "0xAEA4F8", VA = "0xAEA4F8")]
		private void Sort(Targetable target)
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xAE9E58", Offset = "0xAE9E58", VA = "0xAE9E58")]
		private void UpdateTicketsPriority(Targetable target)
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xAEA70C", Offset = "0xAEA70C", VA = "0xAEA70C")]
		private FightTicket FindTicket(Targetable target, TicketPriority priority)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xAEA344", Offset = "0xAEA344", VA = "0xAEA344")]
		private void ValidateLookupForTarget(Targetable target)
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xAEA7E0", Offset = "0xAEA7E0", VA = "0xAEA7E0")]
		public Ticketmaster()
		{
		}
	}
}
namespace SG.Claymore.Status
{
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2368", Offset = "0x8A2368")]
	public class ConditionalTriggerProperty : HitProperty
	{
		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FloatReference attackerPower;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatReference defense;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoolVariable[] targetTriggers;

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xC4F6A4", Offset = "0xC4F6A4", VA = "0xC4F6A4", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xC4F7AC", Offset = "0xC4F7AC", VA = "0xC4F7AC")]
		public ConditionalTriggerProperty()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A23AC", Offset = "0x8A23AC")]
	public class DashDrainHitProperty : PlayerHitProperty
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC7A0", Offset = "0x8BC7A0")]
		[SerializeField]
		private IntVariable _dashChargesVariable;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable _wasDashDrained;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xC4F820", Offset = "0xC4F820", VA = "0xC4F820", Slot = "4")]
		public override void Apply()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xC4F890", Offset = "0xC4F890", VA = "0xC4F890")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF7B4", Offset = "0x8DF7B4")]
		public void ApplyDebug()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xC4F894", Offset = "0xC4F894", VA = "0xC4F894")]
		public DashDrainHitProperty()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A23F0", Offset = "0x8A23F0")]
	public class ExtraDamageThroughGuard : HitProperty
	{
		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Damage;

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xC4F8A4", Offset = "0xC4F8A4", VA = "0xC4F8A4", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xC4FA40", Offset = "0xC4FA40", VA = "0xC4FA40")]
		public ExtraDamageThroughGuard()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2434", Offset = "0x8A2434")]
	public class HitDecalProperty : HitProperty
	{
		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xC4FA48", Offset = "0xC4FA48", VA = "0xC4FA48", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xC4FA50", Offset = "0xC4FA50", VA = "0xC4FA50")]
		public HitDecalProperty()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2478", Offset = "0x8A2478")]
	public class HitProperty : ScriptableObject
	{
		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xC4FA38", Offset = "0xC4FA38", VA = "0xC4FA38", Slot = "4")]
		public virtual StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xC4FA58", Offset = "0xC4FA58", VA = "0xC4FA58", Slot = "5")]
		public virtual float FilterStaminaDamage(EnemyHealth enemyHealth, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xC4F818", Offset = "0xC4F818", VA = "0xC4F818")]
		public HitProperty()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A24BC", Offset = "0x8A24BC")]
	public class NeverBreakStaminaProperty : HitProperty
	{
		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xC4FA5C", Offset = "0xC4FA5C", VA = "0xC4FA5C", Slot = "5")]
		public override float FilterStaminaDamage(EnemyHealth enemyHealth, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xC4FAB8", Offset = "0xC4FAB8", VA = "0xC4FAB8")]
		public NeverBreakStaminaProperty()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2500", Offset = "0x8A2500")]
	public class PercentageDamageThroughGuard : HitProperty
	{
		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BC80C", Offset = "0x8BC80C")]
		public float percent;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable healthDamage;

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xC4FAC0", Offset = "0xC4FAC0", VA = "0xC4FAC0", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xC4FCF4", Offset = "0xC4FCF4", VA = "0xC4FCF4")]
		public PercentageDamageThroughGuard()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2544", Offset = "0x8A2544")]
	public class PlayerHitProperty : ScriptableObject
	{
		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xC4FCFC", Offset = "0xC4FCFC", VA = "0xC4FCFC", Slot = "4")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xC4F89C", Offset = "0xC4F89C", VA = "0xC4F89C")]
		public PlayerHitProperty()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2588", Offset = "0x8A2588")]
	public class PushBackHitProperty : HitProperty
	{
		[Token(Token = "0x20004C0")]
		private class PushBackStatusEffect : StatusEffect<PushBackHitProperty>
		{
			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float elapsed;

			[Token(Token = "0x4001E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private Vector3 travelled;

			[Token(Token = "0x4001E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private float duration;

			[Token(Token = "0x4001E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
			private Vector3 vector;

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private float rate;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
			private Vector3 pushOrigin;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private EnemyMover mover;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			private float maxRange;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
			private bool shouldAbort;

			[Token(Token = "0x6001C64")]
			[Address(RVA = "0xC4FDEC", Offset = "0xC4FDEC", VA = "0xC4FDEC")]
			internal PushBackStatusEffect(PushBackHitProperty source, EnemyHealth health, HitData hit)
			{
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xC4FE9C", Offset = "0xC4FE9C", VA = "0xC4FE9C", Slot = "4")]
			public override StatusEffectState Apply()
			{
				return default(StatusEffectState);
			}

			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xC503C4", Offset = "0xC503C4", VA = "0xC503C4", Slot = "5")]
			public override StatusEffectState Tick(float dt)
			{
				return default(StatusEffectState);
			}
		}

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC824", Offset = "0x8BC824")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC824", Offset = "0x8BC824")]
		[SerializeField]
		private FloatReference pushbackAmount;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC894", Offset = "0x8BC894")]
		[SerializeField]
		private bool enforceMaxPushbackFromPlayer;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC8E0", Offset = "0x8BC8E0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BC8E0", Offset = "0x8BC8E0")]
		[SerializeField]
		private FloatReference maxPushbackAmount;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC950", Offset = "0x8BC950")]
		[SerializeField]
		private FloatReference rate;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BC99C", Offset = "0x8BC99C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BC99C", Offset = "0x8BC99C")]
		[SerializeField]
		private FloatReference defenseScalar;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCA0C", Offset = "0x8BCA0C")]
		[SerializeField]
		private FloatReference minToAct;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCA58", Offset = "0x8BCA58")]
		[SerializeField]
		private FloatReference minToAnimate;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCAA4", Offset = "0x8BCAA4")]
		[SerializeField]
		private BoolVariable animateTrigger;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCAF0", Offset = "0x8BCAF0")]
		[SerializeField]
		private BoolVariable canBeKnockedBack;

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xC4FD00", Offset = "0xC4FD00", VA = "0xC4FD00", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0xC4FE94", Offset = "0xC4FE94", VA = "0xC4FE94")]
		public PushBackHitProperty()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A25CC", Offset = "0x8A25CC")]
	public class RestoreHealthOnKill : HitProperty
	{
		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int HealthToRestore;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerEntityVariable PlayerEntity;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0xC508E8", Offset = "0xC508E8", VA = "0xC508E8", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xC50958", Offset = "0xC50958", VA = "0xC50958")]
		public RestoreHealthOnKill()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2610", Offset = "0x8A2610")]
	public class SoulBurnHitProperty : HitProperty
	{
		[Token(Token = "0x20004C1")]
		private class SoulBurnStatusEffect : StatusEffect<SoulBurnHitProperty>
		{
			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float nextDamageTime;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
			private float endTime;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private bool shouldDamage;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private Transform location;

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xC509F0", Offset = "0xC509F0", VA = "0xC509F0")]
			internal SoulBurnStatusEffect(SoulBurnHitProperty source, EnemyHealth health, HitData hit)
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xC50BD0", Offset = "0xC50BD0", VA = "0xC50BD0")]
			private void Extend(SoulBurnStatusEffect effect)
			{
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xC50BEC", Offset = "0xC50BEC", VA = "0xC50BEC", Slot = "4")]
			public override StatusEffectState Apply()
			{
				return default(StatusEffectState);
			}

			[Token(Token = "0x6001C6A")]
			[Address(RVA = "0xC50EFC", Offset = "0xC50EFC", VA = "0xC50EFC", Slot = "5")]
			public override StatusEffectState Tick(float dt)
			{
				return default(StatusEffectState);
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xC512DC", Offset = "0xC512DC", VA = "0xC512DC", Slot = "7")]
			public override void Complete()
			{
			}
		}

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCB3C", Offset = "0x8BCB3C")]
		[SerializeField]
		private float damageInterval;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCB88", Offset = "0x8BCB88")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCBD4", Offset = "0x8BCBD4")]
		[SerializeField]
		private int healthDamage;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCC20", Offset = "0x8BCC20")]
		[SerializeField]
		private ExposedTransformPoint effectLocation;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCC6C", Offset = "0x8BCC6C")]
		[SerializeField]
		private float fumblePower;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCCB8", Offset = "0x8BCCB8")]
		[SerializeField]
		private List<HitProperty> hitProperties;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCD04", Offset = "0x8BCD04")]
		[SerializeField]
		private BoolVariable[] targetTriggers;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private VisualKeyData applyVFXKey;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioKeyData applySFXKey;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VisualKeyData hitVFXKey;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioKeyData hitSFXKey;

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xC50960", Offset = "0xC50960", VA = "0xC50960", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xC50B1C", Offset = "0xC50B1C", VA = "0xC50B1C")]
		public SoulBurnHitProperty()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2654", Offset = "0x8A2654")]
	public class StasisHitProperty : HitProperty
	{
		[Token(Token = "0x20004C2")]
		private class StasisStatusEffect : StatusEffect<StasisHitProperty>
		{
			[Token(Token = "0x4001E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			private float endTime;

			[Token(Token = "0x4001E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			private EnemyMover mover;

			[Token(Token = "0x4001E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			private ManualParticleEffectRuntime activeStasisVisuals;

			[Token(Token = "0x4001E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			private bool onsetDidOccur;

			[Token(Token = "0x4001E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
			private float onsetTime;

			[Token(Token = "0x4001E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			private float vulnerableTime;

			[Token(Token = "0x4001E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			private Transform audioTransform;

			[Token(Token = "0x4001E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			private HitData breakingHitData;

			[Token(Token = "0x6001C6C")]
			[Address(RVA = "0xC5151C", Offset = "0xC5151C", VA = "0xC5151C")]
			internal StasisStatusEffect(StasisHitProperty source, EnemyHealth health, HitData hit)
			{
			}

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xC51650", Offset = "0xC51650", VA = "0xC51650")]
			private void Extend(StasisStatusEffect other)
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xC516B0", Offset = "0xC516B0", VA = "0xC516B0", Slot = "9")]
			public override void HandleHit(HitData hit)
			{
			}

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xC51800", Offset = "0xC51800", VA = "0xC51800", Slot = "4")]
			public override StatusEffectState Apply()
			{
				return default(StatusEffectState);
			}

			[Token(Token = "0x6001C70")]
			[Address(RVA = "0xC51990", Offset = "0xC51990", VA = "0xC51990")]
			private void HandleOnset()
			{
			}

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xC51DC8", Offset = "0xC51DC8", VA = "0xC51DC8")]
			private void OnEffectPlayed(EffectRuntime effectRuntime)
			{
			}

			[Token(Token = "0x6001C72")]
			[Address(RVA = "0xC51EC8", Offset = "0xC51EC8", VA = "0xC51EC8", Slot = "5")]
			public override StatusEffectState Tick(float dt)
			{
				return default(StatusEffectState);
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xC52028", Offset = "0xC52028", VA = "0xC52028", Slot = "7")]
			public override void Complete()
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xC522AC", Offset = "0xC522AC", VA = "0xC522AC", Slot = "8")]
			public override void Clear()
			{
			}
		}

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCD90", Offset = "0x8BCD90")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool breakOnDamage;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float onsetDelay;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float hitProtectionDuration;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float staminaDamageOnBreak;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCE1C", Offset = "0x8BCE1C")]
		[SerializeField]
		private bool applyThroughBlock;

		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HitVFXData breakHitFX;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCE78", Offset = "0x8BCE78")]
		[SerializeField]
		private HitProperty preserveStasis;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCEC4", Offset = "0x8BCEC4")]
		[SerializeField]
		private BoolVariable stasisVariable;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCF10", Offset = "0x8BCF10")]
		[SerializeField]
		private BoolVariable fumbleVariable;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private VisualKeyData stasisVFXKey;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioKeyData startSoundKey;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioKeyData stopSoundKey;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioRequest loopSound;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ExposedTransformPoint audioPosition;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private BoolVariable isBlocking;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool invertIsBlockingCheck;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xC5140C", Offset = "0xC5140C", VA = "0xC5140C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xC5148C", Offset = "0xC5148C", VA = "0xC5148C", Slot = "4")]
		public override StatusEffect Apply(EnemyHealth health, HitData hit)
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xC515C4", Offset = "0xC515C4", VA = "0xC515C4")]
		public StasisHitProperty()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public enum StatusEffectState
	{
		[Token(Token = "0x4000A69")]
		Active,
		[Token(Token = "0x4000A6A")]
		Complete,
		[Token(Token = "0x4000A6B")]
		Suspended
	}
	[Token(Token = "0x20001CD")]
	public abstract class StatusEffect
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xAE686C", Offset = "0xAE686C", VA = "0xAE686C", Slot = "4")]
		public virtual StatusEffectState Apply()
		{
			return default(StatusEffectState);
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xAE6874", Offset = "0xAE6874", VA = "0xAE6874", Slot = "5")]
		public virtual StatusEffectState Tick(float dt)
		{
			return default(StatusEffectState);
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xAE687C", Offset = "0xAE687C", VA = "0xAE687C", Slot = "6")]
		public virtual bool FromPropertyType(HitProperty prop)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xAE6884", Offset = "0xAE6884", VA = "0xAE6884", Slot = "7")]
		public virtual void Complete()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xAE6888", Offset = "0xAE6888", VA = "0xAE6888", Slot = "8")]
		public virtual void Clear()
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xAE688C", Offset = "0xAE688C", VA = "0xAE688C", Slot = "9")]
		public virtual void HandleHit(HitData hit)
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xAE6890", Offset = "0xAE6890", VA = "0xAE6890")]
		protected StatusEffect()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public abstract class StatusEffect<T> : StatusEffect where T : HitProperty
	{
		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly EnemyHealth target;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly T property;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected HitData originalHit;

		[Token(Token = "0x60009EB")]
		public override bool FromPropertyType(HitProperty prop)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EC")]
		internal StatusEffect(T source, EnemyHealth health, HitData hit)
		{
		}
	}
}
namespace SG.Claymore.SaveSystem
{
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2698", Offset = "0x8A2698")]
	public class ArmamentInventory : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20004C3")]
		public class ArmamentEntry
		{
			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ArmamentID Armament;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Level;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool IsInspected;

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xC4630C", Offset = "0xC4630C", VA = "0xC4630C")]
			public ArmamentEntry()
			{
			}
		}

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BCFCC", Offset = "0x8BCFCC")]
		[SerializeField]
		private ArmamentDatabase database;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD018", Offset = "0x8BD018")]
		[SerializeField]
		private PlayerHandState leftHand;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD064", Offset = "0x8BD064")]
		[SerializeField]
		private PlayerHandState rightHand;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD0B0", Offset = "0x8BD0B0")]
		[SerializeField]
		private IntVariable currency;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD0FC", Offset = "0x8BD0FC")]
		[SerializeField]
		private SaveManager saveManager;

		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<ArmamentEntry> Armaments;

		[Token(Token = "0x1400000F")]
		public event Action OnChange
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0xC45EEC", Offset = "0xC45EEC", VA = "0xC45EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7EC", Offset = "0x8DF7EC")]
			add
			{
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0xC45F90", Offset = "0xC45F90", VA = "0xC45F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF7FC", Offset = "0x8DF7FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xC46034", Offset = "0xC46034", VA = "0xC46034")]
		public void GiveAll()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xC460D8", Offset = "0xC460D8", VA = "0xC460D8")]
		public void GiveArmament(ArmamentID armamentID, int level)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xC46314", Offset = "0xC46314", VA = "0xC46314")]
		public void GiveArmament(ArmamentID armamentID)
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xC4631C", Offset = "0xC4631C", VA = "0xC4631C")]
		public bool BuyArmament(ArmamentID armamentID, int level)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xC463DC", Offset = "0xC463DC", VA = "0xC463DC")]
		public int GetLevel(ArmamentID id)
		{
			return default(int);
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xC464D4", Offset = "0xC464D4", VA = "0xC464D4")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xC46594", Offset = "0xC46594", VA = "0xC46594")]
		public void RemoveArmament(ArmamentID armamentID)
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xC46640", Offset = "0xC46640", VA = "0xC46640")]
		public bool Contains(ArmamentID id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xC4665C", Offset = "0xC4665C", VA = "0xC4665C")]
		public bool IsPurchased(ArmamentID id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xC46230", Offset = "0xC46230", VA = "0xC46230")]
		private int IndexOf(ArmamentID id)
		{
			return default(int);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xC46700", Offset = "0xC46700", VA = "0xC46700")]
		public bool IsEquipped(ArmamentID id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xC467EC", Offset = "0xC467EC", VA = "0xC467EC")]
		public bool IsInspected(ArmamentID id)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xC46890", Offset = "0xC46890", VA = "0xC46890")]
		public void SetArmamentInspected(ArmamentID id)
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xC46478", Offset = "0xC46478", VA = "0xC46478")]
		public bool CanBuy(ArmamentID id, int level)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xC46928", Offset = "0xC46928", VA = "0xC46928")]
		public void RequestInstance(ArmamentID arm, Pose pose, Action<Armament> onComplete)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xC469A0", Offset = "0xC469A0", VA = "0xC469A0")]
		public void RefreshAll()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xC469B4", Offset = "0xC469B4", VA = "0xC469B4")]
		private void LevelUp(PlayerHandState hand)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xC46AD0", Offset = "0xC46AD0", VA = "0xC46AD0")]
		public void GiveLevelUp(int handIndex)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xC46AF0", Offset = "0xC46AF0", VA = "0xC46AF0")]
		public ArmamentInventory()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class AssetResolver
	{
		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BD158", Offset = "0x8BD158")]
		private XRPlatformManager <PlatformManager>k__BackingField;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<Type, IGUIDDatabase> databases;

		[Token(Token = "0x170000F2")]
		public XRPlatformManager PlatformManager
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0xC46B6C", Offset = "0xC46B6C", VA = "0xC46B6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF80C", Offset = "0x8DF80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0xC46B74", Offset = "0xC46B74", VA = "0xC46B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DF81C", Offset = "0x8DF81C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xC46B7C", Offset = "0xC46B7C", VA = "0xC46B7C")]
		public void AddResolver(IGUIDDatabase db)
		{
		}

		[Token(Token = "0x6000A05")]
		public T GetAsset<T>(string guid) where T : ScriptableObject
		{
			return null;
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xC46CEC", Offset = "0xC46CEC", VA = "0xC46CEC")]
		public AssetResolver()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public interface IGUIDDatabase
	{
		[Token(Token = "0x6000A07")]
		Type GetObjectType();
	}
	[Token(Token = "0x20001D2")]
	public interface IGUIDDatabase<out T> : IGUIDDatabase where T : ScriptableObject
	{
		[Token(Token = "0x6000A08")]
		T Resolve(string guid);
	}
	[Serializable]
	[Token(Token = "0x20001D3")]
	public class JsonTable
	{
		[Serializable]
		[Token(Token = "0x20004C4")]
		public class Row
		{
			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Key;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string Value;

			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DC6EC", Offset = "0x8DC6EC")]
			public string Name;

			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xC4745C", Offset = "0xC4745C", VA = "0xC4745C")]
			public Row(string key, string value, string name = "")
			{
			}
		}

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public uint SavedVersion;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<Row> data;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<string, Row> rowMap;

		[Token(Token = "0x170000F3")]
		public int RowCount
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xC46D68", Offset = "0xC46D68", VA = "0xC46D68")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xC46DB8", Offset = "0xC46DB8", VA = "0xC46DB8")]
		public Row GetRow(int index)
		{
			return null;
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xC46E30", Offset = "0xC46E30", VA = "0xC46E30")]
		public Row GetRow(string key)
		{
			return null;
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xC46EC4", Offset = "0xC46EC4", VA = "0xC46EC4")]
		public bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xC47014", Offset = "0xC47014", VA = "0xC47014")]
		public int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xC47174", Offset = "0xC47174", VA = "0xC47174")]
		public float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xC472D4", Offset = "0xC472D4", VA = "0xC472D4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xC47348", Offset = "0xC47348", VA = "0xC47348")]
		public void AddRow(Row row)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC473D4", Offset = "0xC473D4", VA = "0xC473D4")]
		public void AddRow(string key, string value, string name = "")
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC474C0", Offset = "0xC474C0", VA = "0xC474C0")]
		public void PopulateRows()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xC475C0", Offset = "0xC475C0", VA = "0xC475C0")]
		public JsonTable()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A26DC", Offset = "0x8A26DC")]
	public class SaveData : ScriptableObject
	{
		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD188", Offset = "0x8BD188")]
		[SerializeField]
		private uint currentVersion;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD1D4", Offset = "0x8BD1D4")]
		[SerializeField]
		private List<SavedElement> playerSettings;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, SavedElement> settingMap;

		[NonSerialized]
		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool IsDirty;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD220", Offset = "0x8BD220")]
		[SerializeField]
		private List<SavedElement> ignoreSaveElements;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JsonTable table;

		[Token(Token = "0x170000F4")]
		public uint CurrentVersion
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0xC47670", Offset = "0xC47670", VA = "0xC47670")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170000F5")]
		public uint SavedVersion
		{
			[Token(Token = "0x6000A15")]
			[Address(RVA = "0xC47678", Offset = "0xC47678", VA = "0xC47678")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC47694", Offset = "0xC47694", VA = "0xC47694")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC47730", Offset = "0xC47730", VA = "0xC47730")]
		public void FinishInitialization()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xC477CC", Offset = "0xC477CC", VA = "0xC477CC")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC47868", Offset = "0xC47868", VA = "0xC47868")]
		public void ApplyDefaultData(AssetResolver resolver, bool onlyApplyIgnoreSavedElements = false)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC479D0", Offset = "0xC479D0", VA = "0xC479D0")]
		public void PrepareSave()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC479F0", Offset = "0xC479F0", VA = "0xC479F0")]
		public JsonTable GetSerializable(bool updateSaveVersion = false)
		{
			return null;
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xC47BFC", Offset = "0xC47BFC", VA = "0xC47BFC")]
		public void SetTable(JsonTable t)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC47C04", Offset = "0xC47C04", VA = "0xC47C04")]
		public void CompleteDeserialize(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xC47A30", Offset = "0xC47A30", VA = "0xC47A30")]
		private void CacheSettingsMap()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xC48290", Offset = "0xC48290", VA = "0xC48290")]
		public SaveData()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	public class SaveEncryption
	{
		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Aes aes;

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xC48394", Offset = "0xC48394", VA = "0xC48394")]
		public SaveEncryption()
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xC48534", Offset = "0xC48534", VA = "0xC48534")]
		public string Encrypt(string input)
		{
			return null;
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xC485E0", Offset = "0xC485E0", VA = "0xC485E0")]
		public byte[] Encrypt(byte[] input)
		{
			return null;
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xC486CC", Offset = "0xC486CC", VA = "0xC486CC")]
		public string Decrypt(string input)
		{
			return null;
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xC48774", Offset = "0xC48774", VA = "0xC48774")]
		public byte[] Decrypt(byte[] input)
		{
			return null;
		}
	}
	[Token(Token = "0x20001D6")]
	public class SaveManager : CustomPlayerLoop
	{
		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF24", Offset = "0x8AAF24")]
		private sealed class <InitDataHandler>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x17000451")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7A")]
				[Address(RVA = "0xC49F44", Offset = "0xC49F44", VA = "0xC49F44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000452")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0xC49FAC", Offset = "0xC49FAC", VA = "0xC49FAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xC4899C", Offset = "0xC4899C", VA = "0xC4899C")]
			[DebuggerHidden]
			public <InitDataHandler>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6001C78")]
			[Address(RVA = "0xC49CF8", Offset = "0xC49CF8", VA = "0xC49CF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xC49CFC", Offset = "0xC49CFC", VA = "0xC49CFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xC49F4C", Offset = "0xC49F4C", VA = "0xC49F4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A82")]
		private const int PROFILE_COUNT = 3;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD26C", Offset = "0x8BD26C")]
		[SerializeField]
		private XRPlatformManager platformManager;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD2B8", Offset = "0x8BD2B8")]
		[SerializeField]
		private EnemyDatabase enemyDatabase;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD304", Offset = "0x8BD304")]
		[SerializeField]
		private ArmamentDatabase armamentDatabase;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD350", Offset = "0x8BD350")]
		[SerializeField]
		private UpgradeDatabase upgradeDatabase;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BD39C", Offset = "0x8BD39C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD39C", Offset = "0x8BD39C")]
		[SerializeField]
		private CampaignDatabase campaignDatabase;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD40C", Offset = "0x8BD40C")]
		[SerializeField]
		private RoomDatabase roomDatabase;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD458", Offset = "0x8BD458")]
		[SerializeField]
		private EncounterDatabase encounterDatabase;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD4A4", Offset = "0x8BD4A4")]
		[SerializeField]
		private SaveData economy;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD4F0", Offset = "0x8BD4F0")]
		[SerializeField]
		private SaveData run;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private SaveData campaign;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD54C", Offset = "0x8BD54C")]
		[SerializeField]
		private SaveData tutorial;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD598", Offset = "0x8BD598")]
		[SerializeField]
		private SaveData settings;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD5E4", Offset = "0x8BD5E4")]
		[SerializeField]
		private SaveData achievements;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD630", Offset = "0x8BD630")]
		[SerializeField]
		private bool readEncrypted;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD67C", Offset = "0x8BD67C")]
		[SerializeField]
		private bool writeEncrypted;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD6C8", Offset = "0x8BD6C8")]
		[SerializeField]
		private bool encryptSaveDataOnStart;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD714", Offset = "0x8BD714")]
		[SerializeField]
		private ErrorMessageGlobalEvent showErrorEvent;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		[SerializeField]
		private LocalizationManager localizationManager;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private AssetResolver resolver;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private readonly SaveEncryption saveEncryption;

		[NonSerialized]
		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int profileIndex;

		[NonSerialized]
		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "InjectedFeatureAttribute", RVA = "0x8BD798", Offset = "0x8BD798")]
		private UserDataHandler dataHandler;

		[NonSerialized]
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool campaignDataShouldClear;

		[Token(Token = "0x170000F6")]
		public UserDataHandler UserDataHandler
		{
			[Token(Token = "0x6000A25")]
			[Address(RVA = "0xC48860", Offset = "0xC48860", VA = "0xC48860")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F7")]
		public int ProfileIndex
		{
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0xC48EF4", Offset = "0xC48EF4", VA = "0xC48EF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000A2E")]
			[Address(RVA = "0xC48EFC", Offset = "0xC48EFC", VA = "0xC48EFC")]
			set
			{
			}
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC48868", Offset = "0xC48868", VA = "0xC48868", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC48920", Offset = "0xC48920", VA = "0xC48920")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DF82C", Offset = "0x8DF82C")]
		private IEnumerator InitDataHandler()
		{
			return null;
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xC489C8", Offset = "0xC489C8", VA = "0xC489C8", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC48A28", Offset = "0xC48A28", VA = "0xC48A28", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xC48A94", Offset = "0xC48A94", VA = "0xC48A94", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC48AB8", Offset = "0xC48AB8", VA = "0xC48AB8")]
		public void UpgradeSaveData()
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC48B14", Offset = "0xC48B14", VA = "0xC48B14")]
		private void EncryptAllData()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xC48F04", Offset = "0xC48F04", VA = "0xC48F04")]
		public int GetMaxProfileCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC48F0C", Offset = "0xC48F0C", VA = "0xC48F0C")]
		public bool DoesProfileExist(int profile)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC48F2C", Offset = "0xC48F2C", VA = "0xC48F2C")]
		public void DeleteProfile(int profile)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC48F4C", Offset = "0xC48F4C", VA = "0xC48F4C")]
		public void DeleteCurrentProfile()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC48F74", Offset = "0xC48F74", VA = "0xC48F74")]
		public void ExportProfile(string groupName)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xC48FA4", Offset = "0xC48FA4", VA = "0xC48FA4")]
		public void ExportScreenshot(byte[] bytes, string groupName, int savesThisGroup)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC48FC4", Offset = "0xC48FC4", VA = "0xC48FC4")]
		public void LoadProfile(int index)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC49308", Offset = "0xC49308", VA = "0xC49308")]
		public void DeleteRunSaveData()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC49380", Offset = "0xC49380", VA = "0xC49380")]
		public void DeleteCampaignSaveData()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xC4938C", Offset = "0xC4938C", VA = "0xC4938C")]
		public void WriteToDisk(SaveData data, int profile)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC49314", Offset = "0xC49314", VA = "0xC49314")]
		public void DeleteFromDisk(SaveData data, int profile)
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xC494F4", Offset = "0xC494F4", VA = "0xC494F4")]
		public void ApplyDefaultSettings()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xC49518", Offset = "0xC49518", VA = "0xC49518")]
		public void LoadDeveloperOption()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xC495C4", Offset = "0xC495C4", VA = "0xC495C4")]
		public void UpgradeSaveVersion(SaveData data, int profile)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xC490E0", Offset = "0xC490E0", VA = "0xC490E0")]
		public void LoadFromDisk(SaveData data, int profile)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xC4981C", Offset = "0xC4981C", VA = "0xC4981C")]
		public void SetEconomyDirty()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xC4983C", Offset = "0xC4983C", VA = "0xC4983C")]
		public void SetRunDirty()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xC4985C", Offset = "0xC4985C", VA = "0xC4985C")]
		public void SetCampaignDirty()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xC4987C", Offset = "0xC4987C", VA = "0xC4987C")]
		public void SetTutorialDirty()
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xC4989C", Offset = "0xC4989C", VA = "0xC4989C")]
		public void SetSettingsDirty()
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xC498BC", Offset = "0xC498BC", VA = "0xC498BC")]
		public void SetAchievementsDirty()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xC498DC", Offset = "0xC498DC", VA = "0xC498DC")]
		public void SaveIfDirty()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xC499AC", Offset = "0xC499AC", VA = "0xC499AC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF890", Offset = "0x8DF890")]
		public void DeleteProfiles()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xC49A10", Offset = "0xC49A10", VA = "0xC49A10")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF8C8", Offset = "0x8DF8C8")]
		public void DeleteProfile0()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xC49A34", Offset = "0xC49A34", VA = "0xC49A34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF900", Offset = "0x8DF900")]
		public void DeleteProfile1()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xC49A58", Offset = "0xC49A58", VA = "0xC49A58")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF938", Offset = "0x8DF938")]
		public void DeleteProfile2()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xC46588", Offset = "0xC46588", VA = "0xC46588")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF970", Offset = "0x8DF970")]
		public void SaveEconomy()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xC49A7C", Offset = "0xC49A7C", VA = "0xC49A7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF9A8", Offset = "0x8DF9A8")]
		public void LoadCurrentEconomy()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xC49A88", Offset = "0xC49A88", VA = "0xC49A88")]
		public void LoadCurrentTutorial()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xC49A94", Offset = "0xC49A94", VA = "0xC49A94")]
		public void LoadEconomy(int profile)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xC49AA4", Offset = "0xC49AA4", VA = "0xC49AA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DF9E0", Offset = "0x8DF9E0")]
		public void ClearEconomy(int profile)
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xC49AB4", Offset = "0xC49AB4", VA = "0xC49AB4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFA18", Offset = "0x8DFA18")]
		public void ClearTutorialData(int profile)
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xC49AC4", Offset = "0xC49AC4", VA = "0xC49AC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFA50", Offset = "0x8DFA50")]
		public void SaveRun()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xC49AD0", Offset = "0xC49AD0", VA = "0xC49AD0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFA88", Offset = "0x8DFA88")]
		public void LoadCurrentRun()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xC49ADC", Offset = "0xC49ADC", VA = "0xC49ADC")]
		public void SaveTutorial()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xC49AE8", Offset = "0xC49AE8", VA = "0xC49AE8")]
		public void LoadRun(int profile)
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xC49AF8", Offset = "0xC49AF8", VA = "0xC49AF8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFAC0", Offset = "0x8DFAC0")]
		public void ClearRun(int profile)
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xC49B08", Offset = "0xC49B08", VA = "0xC49B08")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFAF8", Offset = "0x8DFAF8")]
		public void SaveCampaign()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xC49B14", Offset = "0xC49B14", VA = "0xC49B14")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFB30", Offset = "0x8DFB30")]
		public void LoadCurrentCampaign()
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xC49B20", Offset = "0xC49B20", VA = "0xC49B20")]
		public void LoadCampaign(int profile)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xC49B30", Offset = "0xC49B30", VA = "0xC49B30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFB68", Offset = "0x8DFB68")]
		public void ClearCampaign(int profile)
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xC49B40", Offset = "0xC49B40", VA = "0xC49B40")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFBA0", Offset = "0x8DFBA0")]
		public void SaveSettings()
		{
		}

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xC49B4C", Offset = "0xC49B4C", VA = "0xC49B4C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFBD8", Offset = "0x8DFBD8")]
		public void LoadCurrentSettings()
		{
		}

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xC49B58", Offset = "0xC49B58", VA = "0xC49B58")]
		public void LoadSettings(int profile)
		{
		}

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xC49B68", Offset = "0xC49B68", VA = "0xC49B68")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8DFC10", Offset = "0x8DFC10")]
		public void ClearSettings(int profile)
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xC49B78", Offset = "0xC49B78", VA = "0xC49B78")]
		public void LoadAchievements(int profile)
		{
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xC49B88", Offset = "0xC49B88", VA = "0xC49B88")]
		public void SaveAchievements()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xC49B94", Offset = "0xC49B94", VA = "0xC49B94")]
		public void InvalidateCampaignSaveData()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xC49BA0", Offset = "0xC49BA0", VA = "0xC49BA0")]
		public void ApplyLastSaveSetting()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xC49C28", Offset = "0xC49C28", VA = "0xC49C28")]
		public void ApplyDefaultVolume()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xC49C68", Offset = "0xC49C68", VA = "0xC49C68")]
		public SaveManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class StringList
	{
		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Data;

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xC4C4A4", Offset = "0xC4C4A4", VA = "0xC4C4A4")]
		public StringList(int count)
		{
		}
	}
}
namespace SG.Claymore.SaveSystem.SavedElements
{
	[Token(Token = "0x20001D8")]
	public class SavedAchievementsProgressData : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004C6")]
		public class SerializedAchievementsProgressData
		{
			[Serializable]
			[Token(Token = "0x20005FD")]
			public class AchievementProgressData
			{
				[Token(Token = "0x40023C6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string AchievementGUID;

				[Token(Token = "0x40023C7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int ProgressCounter;

				[Token(Token = "0x40023C8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public bool Unlocked;

				[Token(Token = "0x6002F10")]
				[Address(RVA = "0xC4A574", Offset = "0xC4A574", VA = "0xC4A574")]
				public AchievementProgressData()
				{
				}
			}

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AchievementProgressData> AchievementProgressDataSet;

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xC4A07C", Offset = "0xC4A07C", VA = "0xC4A07C")]
			public SerializedAchievementsProgressData(AchievementDatabase database)
			{
			}
		}

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AchievementDatabase _achievementDatabase;

		[NonSerialized]
		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SerializedAchievementsProgressData _serializedAchievementsProgressData;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xC49FB4", Offset = "0xC49FB4", VA = "0xC49FB4", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xC49FFC", Offset = "0xC49FFC", VA = "0xC49FFC", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC4A260", Offset = "0xC4A260", VA = "0xC4A260", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC4A510", Offset = "0xC4A510", VA = "0xC4A510")]
		public SavedAchievementsProgressData()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class SavedArmamentEquip : SavedElement
	{
		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD7BC", Offset = "0x8BD7BC")]
		[SerializeField]
		protected PlayerHandState hand;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD808", Offset = "0x8BD808")]
		[SerializeField]
		private ArmamentID defaultArmament;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xC4A57C", Offset = "0xC4A57C", VA = "0xC4A57C", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xC4A598", Offset = "0xC4A598", VA = "0xC4A598", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xC4A5C0", Offset = "0xC4A5C0", VA = "0xC4A5C0", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xC4A670", Offset = "0xC4A670", VA = "0xC4A670", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xC4A730", Offset = "0xC4A730", VA = "0xC4A730")]
		public SavedArmamentEquip()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class SavedAudioProperty : SavedFloat
	{
		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected FloatVariable master;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD864", Offset = "0x8BD864")]
		[SerializeField]
		private AnimationCurve mappingCurve;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD8B0", Offset = "0x8BD8B0")]
		[SerializeField]
		private AudioMixer[] mixer;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD8FC", Offset = "0x8BD8FC")]
		[SerializeField]
		private string audioPropertyName;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xC4A734", Offset = "0xC4A734", VA = "0xC4A734", Slot = "6")]
		public override void FinishInitialization()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xC4A840", Offset = "0xC4A840", VA = "0xC4A840", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xC4A8F0", Offset = "0xC4A8F0", VA = "0xC4A8F0", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xC4A9E4", Offset = "0xC4A9E4", VA = "0xC4A9E4")]
		private void OnMasterChange(float newValue)
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xC4AA34", Offset = "0xC4AA34", VA = "0xC4AA34")]
		private void OnSelfChange(float newValue)
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC4A7A0", Offset = "0xC4A7A0", VA = "0xC4A7A0")]
		private void OnChange(float master, float self)
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xC4AA80", Offset = "0xC4AA80", VA = "0xC4AA80")]
		public SavedAudioProperty()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class SavedBool : SavedElement
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected BoolVariable variable;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD958", Offset = "0x8BD958")]
		[SerializeField]
		protected bool defaultValue;

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xC4AACC", Offset = "0xC4AACC", VA = "0xC4AACC", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xC4AAE8", Offset = "0xC4AAE8", VA = "0xC4AAE8", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xC4ACAC", Offset = "0xC4ACAC", VA = "0xC4ACAC", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xC4ACF8", Offset = "0xC4ACF8", VA = "0xC4ACF8", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xC4AD90", Offset = "0xC4AD90", VA = "0xC4AD90")]
		public SavedBool()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class SavedCampaignProgressData : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004C7")]
		public class SerializedCampaignProgressData
		{
			[Serializable]
			[Token(Token = "0x20005FE")]
			public class CampaignProgressData
			{
				[Token(Token = "0x40023C9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string CampaignGUID;

				[Token(Token = "0x40023CA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int MaxDepth;

				[Token(Token = "0x40023CB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int MaxDepthRecognized;

				[Token(Token = "0x40023CC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public int CompletionCounter;

				[Token(Token = "0x40023CD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
				public int RunCounter;

				[Token(Token = "0x40023CE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public int Difficulty;

				[Token(Token = "0x6002F11")]
				[Address(RVA = "0xC4B4C4", Offset = "0xC4B4C4", VA = "0xC4B4C4")]
				public CampaignProgressData()
				{
				}
			}

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<CampaignProgressData> CampaignProgressDataGroup;

			[Token(Token = "0x6001C7E")]
			[Address(RVA = "0xC4AE5C", Offset = "0xC4AE5C", VA = "0xC4AE5C")]
			public SerializedCampaignProgressData(CampaignDatabase campaignDatabase)
			{
			}
		}

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntReference defaultDifficulty;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SerializedCampaignProgressData _campaignProgressData;

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xC4AD94", Offset = "0xC4AD94", VA = "0xC4AD94", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xC4ADDC", Offset = "0xC4ADDC", VA = "0xC4ADDC", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xC4B0B8", Offset = "0xC4B0B8", VA = "0xC4B0B8", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xC4B444", Offset = "0xC4B444", VA = "0xC4B444", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xC4B4C0", Offset = "0xC4B4C0", VA = "0xC4B4C0")]
		public SavedCampaignProgressData()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public abstract class SavedElement : ScriptableObject
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string GUID;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long FileID;

		[Token(Token = "0x6000A7D")]
		public abstract string GetName();

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xC4A9E0", Offset = "0xC4A9E0", VA = "0xC4A9E0", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xC4A79C", Offset = "0xC4A79C", VA = "0xC4A79C", Slot = "6")]
		public virtual void FinishInitialization()
		{
		}

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xC4B4D4", Offset = "0xC4B4D4", VA = "0xC4B4D4", Slot = "7")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xC4A5BC", Offset = "0xC4A5BC", VA = "0xC4A5BC", Slot = "8")]
		public virtual void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A82")]
		public abstract string Serialize();

		[Token(Token = "0x6000A83")]
		public abstract void Deserialize(string input, AssetResolver resolver);

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xC4B4D8", Offset = "0xC4B4D8", VA = "0xC4B4D8", Slot = "11")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xC4A514", Offset = "0xC4A514", VA = "0xC4A514")]
		protected SavedElement()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class SavedEncounterProgressData : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004C8")]
		public class SerializedEncounterProgressData
		{
			[Serializable]
			[Token(Token = "0x20005FF")]
			public class EncounterProgressData
			{
				[Token(Token = "0x40023CF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string EncounterGUID;

				[Token(Token = "0x40023D0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int VictoryCount;

				[Token(Token = "0x40023D1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int DefeatCount;

				[Token(Token = "0x6002F12")]
				[Address(RVA = "0xC4BAC4", Offset = "0xC4BAC4", VA = "0xC4BAC4")]
				public EncounterProgressData()
				{
				}
			}

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<EncounterProgressData> EncounterProgressDataGroup;

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xC4B604", Offset = "0xC4B604", VA = "0xC4B604")]
			public SerializedEncounterProgressData(EncounterDatabase encounterDatabase)
			{
			}
		}

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EncounterDatabase _encounterDatabase;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SerializedEncounterProgressData _serializedEncounterProgressData;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xC4B53C", Offset = "0xC4B53C", VA = "0xC4B53C", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xC4B584", Offset = "0xC4B584", VA = "0xC4B584", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC4B7B4", Offset = "0xC4B7B4", VA = "0xC4B7B4", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC4BA44", Offset = "0xC4BA44", VA = "0xC4BA44", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xC4BAC0", Offset = "0xC4BAC0", VA = "0xC4BAC0")]
		public SavedEncounterProgressData()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class SavedEnemyProgressData : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004C9")]
		public class SerializedEnemyProgressData
		{
			[Serializable]
			[Token(Token = "0x2000600")]
			public class EnemyProgressData
			{
				[Token(Token = "0x40023D2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string EnemyGUID;

				[Token(Token = "0x40023D3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int KillCount;

				[Token(Token = "0x40023D4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public int DeathCount;

				[Token(Token = "0x6002F13")]
				[Address(RVA = "0xC4C054", Offset = "0xC4C054", VA = "0xC4C054")]
				public EnemyProgressData()
				{
				}
			}

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<EnemyProgressData> EnemyProgressDataGroup;

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xC4BB94", Offset = "0xC4BB94", VA = "0xC4BB94")]
			public SerializedEnemyProgressData(EnemyDatabase enemyDatabase)
			{
			}
		}

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyDatabase _enemyDatabase;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SerializedEnemyProgressData _serializedEnemyProgressData;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC4BACC", Offset = "0xC4BACC", VA = "0xC4BACC", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC4BB14", Offset = "0xC4BB14", VA = "0xC4BB14", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC4BD44", Offset = "0xC4BD44", VA = "0xC4BD44", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC4BFD4", Offset = "0xC4BFD4", VA = "0xC4BFD4", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC4C050", Offset = "0xC4C050", VA = "0xC4C050")]
		public SavedEnemyProgressData()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class SavedFloat : SavedElement
	{
		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BD9E4", Offset = "0x8BD9E4")]
		[SerializeField]
		protected FloatVariable variable;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDA30", Offset = "0x8BDA30")]
		[SerializeField]
		protected float defaultValue;

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC4C05C", Offset = "0xC4C05C", VA = "0xC4C05C", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC4A8C4", Offset = "0xC4A8C4", VA = "0xC4A8C4", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC4C078", Offset = "0xC4C078", VA = "0xC4C078", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xC4C11C", Offset = "0xC4C11C", VA = "0xC4C11C", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC4AAC8", Offset = "0xC4AAC8", VA = "0xC4AAC8")]
		public SavedFloat()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class SavedHandState : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004CA")]
		public class State
		{
			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float SuperCharge;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StringList Upgrades;

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xC4C740", Offset = "0xC4C740", VA = "0xC4C740")]
			public State()
			{
			}
		}

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDA7C", Offset = "0x8BDA7C")]
		[SerializeField]
		protected PlayerHandState hand;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDAC8", Offset = "0x8BDAC8")]
		[SerializeField]
		private float defaultSuperCharge;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDB14", Offset = "0x8BDB14")]
		[SerializeField]
		private List<ArmamentAugment> defaultUpgrades;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly State state;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC4C1BC", Offset = "0xC4C1BC", VA = "0xC4C1BC", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC4C1D8", Offset = "0xC4C1D8", VA = "0xC4C1D8", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xC4C30C", Offset = "0xC4C30C", VA = "0xC4C30C", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xC4C51C", Offset = "0xC4C51C", VA = "0xC4C51C", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xC4C69C", Offset = "0xC4C69C", VA = "0xC4C69C")]
		public SavedHandState()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class SavedInt : SavedElement
	{
		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDB60", Offset = "0x8BDB60")]
		[SerializeField]
		protected IntVariable variable;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDBAC", Offset = "0x8BDBAC")]
		[SerializeField]
		protected int defaultValue;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xC4C748", Offset = "0xC4C748", VA = "0xC4C748", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xC4C764", Offset = "0xC4C764", VA = "0xC4C764", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xC4C790", Offset = "0xC4C790", VA = "0xC4C790", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC4C838", Offset = "0xC4C838", VA = "0xC4C838", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC4C8DC", Offset = "0xC4C8DC", VA = "0xC4C8DC")]
		public SavedInt()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class SavedInventory : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004CB")]
		public class SerializedInventory
		{
			[Serializable]
			[Token(Token = "0x2000601")]
			public class Armament
			{
				[Token(Token = "0x40023D5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string GUID;

				[Token(Token = "0x40023D6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int Level;

				[Token(Token = "0x40023D7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public bool IsInspected;

				[Token(Token = "0x6002F14")]
				[Address(RVA = "0xC4CF14", Offset = "0xC4CF14", VA = "0xC4CF14")]
				public Armament()
				{
				}
			}

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Armament[] List;

			[Token(Token = "0x6001C82")]
			[Address(RVA = "0xC4CB64", Offset = "0xC4CB64", VA = "0xC4CB64")]
			public SerializedInventory(int count)
			{
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xC4CBDC", Offset = "0xC4CBDC", VA = "0xC4CBDC")]
			public void Set(int index, string guid, int level, bool isInspected)
			{
			}
		}

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ArmamentInventory list;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ArmamentInventory defaultList;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SerializedInventory guidList;

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xC4C8E0", Offset = "0xC4C8E0", VA = "0xC4C8E0", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xC4C8FC", Offset = "0xC4C8FC", VA = "0xC4C8FC", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xC4C9E0", Offset = "0xC4C9E0", VA = "0xC4C9E0", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xC4CCD4", Offset = "0xC4CCD4", VA = "0xC4CCD4", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xC4CF10", Offset = "0xC4CF10", VA = "0xC4CF10")]
		public SavedInventory()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class SavedRoomCompletion : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		public class RoomState
		{
			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int roomMotes;

			[Token(Token = "0x4001E4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isBossRoom;

			[Token(Token = "0x4001E50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StringList enemyDefGuids;

			[Token(Token = "0x4001E51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string crushedRewardGUID;

			[Token(Token = "0x4001E52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool roomExperienced;

			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string roomName;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string encounterGUID;

			[Token(Token = "0x6001C84")]
			[Address(RVA = "0xC4D270", Offset = "0xC4D270", VA = "0xC4D270")]
			public RoomState()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004CD")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8AAF34", Offset = "0x8AAF34")]
		public class RoomStateList
		{
			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<RoomState> states;

			[Token(Token = "0x17000453")]
			public int Count
			{
				[Token(Token = "0x6001C85")]
				[Address(RVA = "0xC4D6B4", Offset = "0xC4D6B4", VA = "0xC4D6B4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000454")]
			public RoomState Item
			{
				[Token(Token = "0x6001C88")]
				[Address(RVA = "0xC4D63C", Offset = "0xC4D63C", VA = "0xC4D63C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xC4CF7C", Offset = "0xC4CF7C", VA = "0xC4CF7C")]
			public void Clear()
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xC4D278", Offset = "0xC4D278", VA = "0xC4D278")]
			public void Add(RoomState roomState)
			{
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xC4D770", Offset = "0xC4D770", VA = "0xC4D770")]
			public RoomStateList()
			{
			}
		}

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected RoomCompletionHistory history;

		[NonSerialized]
		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RoomStateList state;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xC4CF1C", Offset = "0xC4CF1C", VA = "0xC4CF1C", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xC4CF64", Offset = "0xC4CF64", VA = "0xC4CF64", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xC4CFD4", Offset = "0xC4CFD4", VA = "0xC4CFD4", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xC4D2E0", Offset = "0xC4D2E0", VA = "0xC4D2E0", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0xC4D704", Offset = "0xC4D704", VA = "0xC4D704")]
		public SavedRoomCompletion()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class SavedRoomList : SavedElement
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected LevelSaveGroup group;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private StringList guidList;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xC4D7EC", Offset = "0xC4D7EC", VA = "0xC4D7EC", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xC4D834", Offset = "0xC4D834", VA = "0xC4D834", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xC4D850", Offset = "0xC4D850", VA = "0xC4D850", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xC4D99C", Offset = "0xC4D99C", VA = "0xC4D99C", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xC4DB00", Offset = "0xC4DB00", VA = "0xC4DB00")]
		public SavedRoomList()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class SavedRun : SavedElement
	{
		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDC38", Offset = "0x8BDC38")]
		[SerializeField]
		protected LevelManager levelManager;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDC84", Offset = "0x8BDC84")]
		[SerializeField]
		private Campaign defaultRun;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xC4DB04", Offset = "0xC4DB04", VA = "0xC4DB04", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xC4DB4C", Offset = "0xC4DB4C", VA = "0xC4DB4C", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xC4DB70", Offset = "0xC4DB70", VA = "0xC4DB70", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xC4DC10", Offset = "0xC4DC10", VA = "0xC4DC10", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xC4DCD4", Offset = "0xC4DCD4", VA = "0xC4DCD4")]
		public SavedRun()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class SavedVulpineSettings : SavedElement
	{
		[Serializable]
		[Token(Token = "0x20004CE")]
		public struct Preset
		{
			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int msaa;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int shadowQuality;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int textureQuality;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int effectsQuality;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int shaderQuality;
		}

		[Serializable]
		[Token(Token = "0x20004CF")]
		public struct RendererCapabilities
		{
			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool requiresDepthNormals;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool requiresDistortionTexture;
		}

		[Serializable]
		[Token(Token = "0x20004D0")]
		public struct EffectsSettings
		{
			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RendererCapabilities effectDependencies;
		}

		[Serializable]
		[Token(Token = "0x20004D1")]
		public struct ShadowSettings
		{
			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool softShadows;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float shadowDistance;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int shadowmapResolution;
		}

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable presetSelection;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BDCE0", Offset = "0x8BDCE0")]
		[SerializeField]
		private FloatVariable msaa;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatVariable textureSize;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatVariable shadowQuality;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVariable effectsQuality;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatVariable shaderQuality;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BDD58", Offset = "0x8BDD58")]
		[SerializeField]
		private BoolVariable depthNormalsPass;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVariable renderScale;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVariable bypassPostEffects;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVariable directionalShadows;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ShadowSettings[] shadowSettingsTiers;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private EffectsSettings[] effectsSettingsTiers;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly JsonTable table;

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xC4DCD8", Offset = "0xC4DCD8", VA = "0xC4DCD8", Slot = "4")]
		public override string GetName()
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xC4DD20", Offset = "0xC4DD20", VA = "0xC4DD20", Slot = "8")]
		public override void ApplyDefault(AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xC4DE10", Offset = "0xC4DE10", VA = "0xC4DE10", Slot = "9")]
		public override string Serialize()
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xC4E4AC", Offset = "0xC4E4AC", VA = "0xC4E4AC", Slot = "10")]
		public override void Deserialize(string input, AssetResolver resolver)
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xC4E718", Offset = "0xC4E718", VA = "0xC4E718", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0xC4EAAC", Offset = "0xC4EAAC", VA = "0xC4EAAC")]
		private void PushSettings()
		{
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xC4EC60", Offset = "0xC4EC60", VA = "0xC4EC60")]
		private void OnShadowQualityChange(float value)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xC4EDD8", Offset = "0xC4EDD8", VA = "0xC4EDD8")]
		private void OnEffectsQualityChange(float value)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xC4EF94", Offset = "0xC4EF94", VA = "0xC4EF94")]
		private void OnShaderQualityChange(float value)
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0xC4EF98", Offset = "0xC4EF98", VA = "0xC4EF98")]
		private void OnDirectionalShadows(bool value)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xC4F04C", Offset = "0xC4F04C", VA = "0xC4F04C")]
		private void OnBypassPostEffects(bool value)
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xC4F050", Offset = "0xC4F050", VA = "0xC4F050")]
		private void OnRenderScaleChange(float value)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xC4F054", Offset = "0xC4F054", VA = "0xC4F054")]
		private void OnDepthNormalsChange(bool value)
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0xC4F058", Offset = "0xC4F058", VA = "0xC4F058")]
		private void OnTextureQualityChange(float value)
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xC4EBDC", Offset = "0xC4EBDC", VA = "0xC4EBDC")]
		private void OnMSAAChange(float value)
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xC4F0C8", Offset = "0xC4F0C8", VA = "0xC4F0C8")]
		public SavedVulpineSettings()
		{
		}
	}
}
namespace SG.Claymore.ResourceLoading
{
	[Token(Token = "0x20001E8")]
	public interface IResourceRequestKey
	{
		[Token(Token = "0x170000F8")]
		int CachedIndex
		{
			[Token(Token = "0x6000AC3")]
			get;
			[Token(Token = "0x6000AC4")]
			set;
		}

		[Token(Token = "0x170000F9")]
		string Name
		{
			[Token(Token = "0x6000AC5")]
			get;
		}
	}
	[Token(Token = "0x20001E9")]
	public class ResourceTypeAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Type ExpectedType;

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xC45EB8", Offset = "0xC45EB8", VA = "0xC45EB8")]
		public ResourceTypeAttribute(Type type)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EA")]
	public class ResourceAddress
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDDE0", Offset = "0x8BDDE0")]
		[SerializeField]
		private string path;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDE2C", Offset = "0x8BDE2C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8BDE2C", Offset = "0x8BDE2C")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x170000FA")]
		public string Path
		{
			[Token(Token = "0x6000AC7")]
			[Address(RVA = "0xC43EA0", Offset = "0xC43EA0", VA = "0xC43EA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AC8")]
			[Address(RVA = "0xC43EA8", Offset = "0xC43EA8", VA = "0xC43EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public string GUID
		{
			[Token(Token = "0x6000AC9")]
			[Address(RVA = "0xC43EB0", Offset = "0xC43EB0", VA = "0xC43EB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ACA")]
			[Address(RVA = "0xC43EB8", Offset = "0xC43EB8", VA = "0xC43EB8")]
			set
			{
			}
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xC43EC0", Offset = "0xC43EC0", VA = "0xC43EC0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0xC43E98", Offset = "0xC43E98", VA = "0xC43E98")]
		public ResourceAddress()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001EB")]
	public class AssetAddress : ResourceAddress
	{
		[Token(Token = "0x6000ACD")]
		public static T[] LoadAssetList<T>(AssetAddress[] addresses) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xC43E90", Offset = "0xC43E90", VA = "0xC43E90")]
		public AssetAddress()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A2720", Offset = "0x8A2720")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2720", Offset = "0x8A2720")]
	public class ResourceDatabase : EffectsDatabase
	{
		[Serializable]
		[Token(Token = "0x20004D2")]
		public class ModelEntry
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RequireInterfaceAttribute", RVA = "0x8DC6FC", Offset = "0x8DC6FC")]
			public ScriptableObject key;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ResourceAddress resourceAddress;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int preloadedPool;

			[NonSerialized]
			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<UnityEngine.Object> pool;

			[NonSerialized]
			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int nextPoolIndex;

			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0xC44B44", Offset = "0xC44B44", VA = "0xC44B44")]
			public ModelEntry()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF6C", Offset = "0x8AAF6C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Comparison<ScriptableObject> comparison;

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xC44E0C", Offset = "0xC44E0C", VA = "0xC44E0C")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xC44F00", Offset = "0xC44F00", VA = "0xC44F00")]
			internal int <Sort>b__0(ModelEntry a, ModelEntry b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDE88", Offset = "0x8BDE88")]
		[SerializeField]
		private bool useHQScenes;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDED4", Offset = "0x8BDED4")]
		[SerializeField]
		private List<ModelEntry> _entries;

		[NonSerialized]
		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool initialized;

		[Token(Token = "0x170000FC")]
		public bool UseHQScenes
		{
			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0xC43F18", Offset = "0xC43F18", VA = "0xC43F18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FD")]
		public override Type EntryType
		{
			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0xC43F20", Offset = "0xC43F20", VA = "0xC43F20", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		public override int Count
		{
			[Token(Token = "0x6000AD1")]
			[Address(RVA = "0xC43F90", Offset = "0xC43F90", VA = "0xC43F90", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FF")]
		public override string AssetName
		{
			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0xC43FE0", Offset = "0xC43FE0", VA = "0xC43FE0", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		public override IEffectDatabaseEntry Item
		{
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0xC44A10", Offset = "0xC44A10", VA = "0xC44A10", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0xC44A70", Offset = "0xC44A70", VA = "0xC44A70", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xC43FE8", Offset = "0xC43FE8", VA = "0xC43FE8")]
		public ModelEntry DebugGetEntry(IResourceRequestKey key)
		{
			return null;
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0xC44160", Offset = "0xC44160", VA = "0xC44160")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xC4468C", Offset = "0xC4468C", VA = "0xC4468C")]
		public UnityEngine.Object GetPooled(IResourceRequestKey key)
		{
			return null;
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xC4482C", Offset = "0xC4482C", VA = "0xC4482C")]
		public bool PrePooled(IResourceRequestKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xC44530", Offset = "0xC44530", VA = "0xC44530")]
		public ResourceAddress GetResource(IResourceRequestKey key)
		{
			return null;
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0xC44990", Offset = "0xC44990", VA = "0xC44990", Slot = "13")]
		public override ScriptableObject GetKey(int i)
		{
			return null;
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC44AD0", Offset = "0xC44AD0", VA = "0xC44AD0", Slot = "9")]
		public override void AddNewEntry()
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0xC44BC4", Offset = "0xC44BC4", VA = "0xC44BC4", Slot = "10")]
		public override void AddNewEntry(ScriptableObject key, int index = -1)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xC44D3C", Offset = "0xC44D3C", VA = "0xC44D3C", Slot = "12")]
		public override void Sort(Comparison<ScriptableObject> comparison)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xC44E14", Offset = "0xC44E14", VA = "0xC44E14", Slot = "11")]
		public override void RemoveEntry(int index)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xC44E7C", Offset = "0xC44E7C", VA = "0xC44E7C")]
		public ResourceDatabase()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public interface IResourceLoadHandler
	{
		[Token(Token = "0x6000AE0")]
		void OnResourceLoadComplete(bool success, UnityEngine.Object o);
	}
	[Token(Token = "0x20001EE")]
	public interface IResourceLoadHandler<in T> : IResourceLoadHandler where T : UnityEngine.Object
	{
	}
	[Token(Token = "0x20001EF")]
	public struct ResourceLoadHandler<T> : IResourceLoadHandler where T : UnityEngine.Object
	{
		[Token(Token = "0x14000010")]
		public event Action<bool, T> OnLoadComplete
		{
			[Token(Token = "0x6000AE1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC48", Offset = "0x8DFC48")]
			add
			{
			}
			[Token(Token = "0x6000AE2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC58", Offset = "0x8DFC58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000AE3")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}
	}
	[Token(Token = "0x20001F0")]
	internal struct ResourceLoadRequest
	{
		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ResourceRequest request;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDF30", Offset = "0x8BDF30")]
		private float <AdditionalDelay>k__BackingField;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDF40", Offset = "0x8BDF40")]
		private IResourceLoadHandler <ResourceLoadHandler>k__BackingField;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BDF50", Offset = "0x8BDF50")]
		private bool <Pending>k__BackingField;

		[Token(Token = "0x17000101")]
		public bool IsDone
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0x9678C4", Offset = "0x9678C4", VA = "0x9678C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000102")]
		public float AdditionalDelay
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0x9678CC", Offset = "0x9678CC", VA = "0x9678CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC68", Offset = "0x8DFC68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x9678D4", Offset = "0x9678D4", VA = "0x9678D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC78", Offset = "0x8DFC78")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public IResourceLoadHandler ResourceLoadHandler
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x9678DC", Offset = "0x9678DC", VA = "0x9678DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC88", Offset = "0x8DFC88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x9678E4", Offset = "0x9678E4", VA = "0x9678E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFC98", Offset = "0x8DFC98")]
			private set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public bool Pending
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x9678EC", Offset = "0x9678EC", VA = "0x9678EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCA8", Offset = "0x8DFCA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x9678F4", Offset = "0x9678F4", VA = "0x9678F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFCB8", Offset = "0x8DFCB8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0x967900", Offset = "0x967900", VA = "0x967900")]
		public void Assign(IResourceLoadHandler loadHandler, ResourceRequest op)
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x967944", Offset = "0x967944", VA = "0x967944")]
		public void Complete()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x96794C", Offset = "0x96794C", VA = "0x96794C")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0x967984", Offset = "0x967984", VA = "0x967984")]
		public void UpdateDelay(float dt)
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class ResourceLoadingController : CustomPlayerLoop
	{
		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDF60", Offset = "0x8BDF60")]
		[SerializeField]
		private bool useArtificialLoadDelay;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BDFAC", Offset = "0x8BDFAC")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BDFAC", Offset = "0x8BDFAC")]
		[SerializeField]
		private FloatRange artificialLoadDelay;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE02C", Offset = "0x8BE02C")]
		[SerializeField]
		private IntVariable forcedDatabaseIndex;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE078", Offset = "0x8BE078")]
		[AttributeAttribute(Name = "ResourceTypeAttribute", RVA = "0x8BE078", Offset = "0x8BE078")]
		[SerializeField]
		private AssetAddress[] debugAllDatabases;

		[NonSerialized]
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "InjectedFeatureAttribute", RVA = "0x8BE110", Offset = "0x8BE110")]
		private ResourceDatabase database;

		[NonSerialized]
		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ResourceDatabase originalDatabase;

		[NonSerialized]
		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int requestIndex;

		[NonSerialized]
		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ResourceDatabase[] cachedDatabases;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly ResourceLoadRequest[] requests;

		[Token(Token = "0x17000105")]
		public bool UseHQScenes
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0xC45220", Offset = "0xC45220", VA = "0xC45220")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000106")]
		public ResourceDatabase[] AllDatabases
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0xC45538", Offset = "0xC45538", VA = "0xC45538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xC4523C", Offset = "0xC4523C", VA = "0xC4523C", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xC452A8", Offset = "0xC452A8", VA = "0xC452A8", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xC45398", Offset = "0xC45398", VA = "0xC45398", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xC45478", Offset = "0xC45478", VA = "0xC45478", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xC455AC", Offset = "0xC455AC", VA = "0xC455AC")]
		public void SetForcedDatabaseIndex(int index)
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xC456D0", Offset = "0xC456D0", VA = "0xC456D0")]
		public void ForceDatabase(ResourceDatabase db)
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xC45704", Offset = "0xC45704", VA = "0xC45704")]
		private bool StoreNextIndex()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF8")]
		public void LoadResource<T>(IResourceRequestKey key, IResourceLoadHandler loadHandler) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000AF9")]
		public void LoadResource<T>(IResourceRequestKey key, IResourceLoadHandler<T> loadHandler) where T : UnityEngine.Object
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC45788", Offset = "0xC45788", VA = "0xC45788")]
		public void Cancel(IResourceLoadHandler loadHandler)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xC4582C", Offset = "0xC4582C", VA = "0xC4582C")]
		public ResourceLoadingController()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A27A8", Offset = "0x8A27A8")]
	public class ResourceRequestKey : ScriptableObject, IResourceRequestKey
	{
		[NonSerialized]
		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int cachedIndex;

		[Token(Token = "0x17000107")]
		public int CachedIndex
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xC45924", Offset = "0xC45924", VA = "0xC45924", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xC4592C", Offset = "0xC4592C", VA = "0xC4592C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public string Name
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xC45934", Offset = "0xC45934", VA = "0xC45934", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xC4593C", Offset = "0xC4593C", VA = "0xC4593C")]
		public ResourceRequestKey()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class ResourceSpawner : MonoBehaviour, IResourceLoadHandler
	{
		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceLoadingController loader;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceRequestKey requestKey;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool zeroTransform;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xC4594C", Offset = "0xC4594C", VA = "0xC4594C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC459C0", Offset = "0xC459C0", VA = "0xC459C0", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC45DFC", Offset = "0xC45DFC", VA = "0xC45DFC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xC45EB0", Offset = "0xC45EB0", VA = "0xC45EB0")]
		public ResourceSpawner()
		{
		}
	}
}
namespace SG.Claymore.PlayerLoopControllers
{
	[Token(Token = "0x20001F4")]
	public class CameraSetter : MonoBehaviour
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE154", Offset = "0x8BE154")]
		[SerializeField]
		private ScreenFadeController fader;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScreenFlashController flasher;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE1B0", Offset = "0x8BE1B0")]
		[SerializeField]
		private Camera cachedCamera;

		[NonSerialized]
		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Camera clone;

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xB0F68C", Offset = "0xB0F68C", VA = "0xB0F68C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xB0F770", Offset = "0xB0F770", VA = "0xB0F770")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xB0F7B4", Offset = "0xB0F7B4", VA = "0xB0F7B4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xB0F838", Offset = "0xB0F838", VA = "0xB0F838")]
		public CameraSetter()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public struct RunningShakeRequest
	{
		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Id;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsPersistent;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float CreationTimeStamp;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Duration;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Magnitude;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Radius;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float IterationTime;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 RuntimeDirection;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform Origin;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve DampingCurve;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve FalloffCurve;

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x967838", Offset = "0x967838", VA = "0x967838")]
		public RunningShakeRequest(int id, AnimationCurve dampingCurve, float duration, float magnitude, float iterationTime, Vector3 direction, Transform origin, float radius, AnimationCurve falloffCurve)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xC403B8", Offset = "0xC403B8", VA = "0xC403B8")]
		public static RunningShakeRequest FromDataRequest(int id, CameraShakeRequest request)
		{
			return default(RunningShakeRequest);
		}
	}
	[Token(Token = "0x20001F6")]
	public class CameraShakeController : CustomPlayerLoop
	{
		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TransformVariable _cameraRootTransformVariable;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TransformVariable _subtitleShakeRootTransformVariable;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolVariable _cameraShakeEnabledSetting;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalEvent _cancelAllShakeGlobalEvent;

		[NonSerialized]
		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RunningShakeRequest> _requestList;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int _nextRequestId;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RunningShakeRequest _empty;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Vector3 _originalCameraPos;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool _shaking;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float _currentMoveTime;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 _nextTarget;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _nextMoveLength;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 _moveStartPos;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE23C", Offset = "0x8BE23C")]
		[SerializeField]
		private float _returnIterationTime;

		[Token(Token = "0x17000109")]
		public List<RunningShakeRequest> RequestList
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xB0F8AC", Offset = "0xB0F8AC", VA = "0xB0F8AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xB0F840", Offset = "0xB0F840", VA = "0xB0F840", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xB0F8B4", Offset = "0xB0F8B4", VA = "0xB0F8B4", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xB0F984", Offset = "0xB0F984", VA = "0xB0F984", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xB0FA28", Offset = "0xB0FA28", VA = "0xB0FA28")]
		public void OnCancelAll()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xB0FC34", Offset = "0xB0FC34", VA = "0xB0FC34")]
		public int HandleCameraShakeRequest(CameraShakeRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xB0FD00", Offset = "0xB0FD00", VA = "0xB0FD00")]
		public void CancelRequest(int id)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xB0FDDC", Offset = "0xB0FDDC", VA = "0xB0FDDC")]
		private void ClearExpiredRequests()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xB0FF24", Offset = "0xB0FF24", VA = "0xB0FF24", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xB0FF50", Offset = "0xB0FF50", VA = "0xB0FF50")]
		private void SetCurrentShake()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xB103A8", Offset = "0xB103A8", VA = "0xB103A8")]
		private void UpdateCurrentMove()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xB0FA88", Offset = "0xB0FA88", VA = "0xB0FA88")]
		private void SnapCameraToOriginal()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xB10E64", Offset = "0xB10E64", VA = "0xB10E64")]
		private void RestoreCamera()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xB10920", Offset = "0xB10920", VA = "0xB10920")]
		private bool TryGetHighestMagnitude(out RunningShakeRequest request)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xB10ED0", Offset = "0xB10ED0", VA = "0xB10ED0")]
		public CameraShakeController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class CameraShakeRequest
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE288", Offset = "0x8BE288")]
		public AnimationCurve DampingCurve;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsPersistent;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE2C0", Offset = "0x8BE2C0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BE2C0", Offset = "0x8BE2C0")]
		public float Duration;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE32C", Offset = "0x8BE32C")]
		public float Magnitude;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE364", Offset = "0x8BE364")]
		public float IterationTime;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE39C", Offset = "0x8BE39C")]
		public Vector3 Direction;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BE3D4", Offset = "0x8BE3D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE3D4", Offset = "0x8BE3D4")]
		public float Radius;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE434", Offset = "0x8BE434")]
		public AnimationCurve FalloffCurve;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AnimationCurve defaultFalloffCurve;

		[NonSerialized]
		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform Origin;

		[NonSerialized]
		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 RuntimeDirection;

		[NonSerialized]
		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float CreationTimeStamp;

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xB10F8C", Offset = "0xB10F8C", VA = "0xB10F8C")]
		public CameraShakeRequest()
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xB110B8", Offset = "0xB110B8", VA = "0xB110B8")]
		public CameraShakeRequest(CameraShakeRequest other)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xB11264", Offset = "0xB11264", VA = "0xB11264")]
		public CameraShakeRequest(AnimationCurve dampingCurve, float duration, float magnitude, float iterationTime, Vector3 direction)
		{
		}
	}
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2808", Offset = "0x8A2808")]
	public class CameraShakeRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE46C", Offset = "0x8BE46C")]
		[SerializeField]
		private CameraShakeController controller;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE4B8", Offset = "0x8BE4B8")]
		[SerializeField]
		private CameraShakeRequest request;

		[NonSerialized]
		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentRequestID;

		[Token(Token = "0x1700010A")]
		public CameraShakeRequest CameraShakeRequest
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xB113F8", Offset = "0xB113F8", VA = "0xB113F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public int CurrentRequestID
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0xB11400", Offset = "0xB11400", VA = "0xB11400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xB11408", Offset = "0xB11408", VA = "0xB11408")]
		public void Request(Vector3 direction)
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xB11500", Offset = "0xB11500", VA = "0xB11500")]
		public void Request(Transform origin)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xB07334", Offset = "0xB07334", VA = "0xB07334")]
		public void Request()
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0xB115EC", Offset = "0xB115EC", VA = "0xB115EC")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xB1162C", Offset = "0xB1162C", VA = "0xB1162C")]
		public CameraShakeRequestAsset()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class CritController : CustomPlayerLoop, IResourceLoadHandler<CritRenderer>, IResourceLoadHandler
	{
		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ResourceRequestKey _critPrefabKey;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected IntVariable _critSuppression;

		[NonSerialized]
		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _totalCritCount;

		[NonSerialized]
		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] _fills;

		[NonSerialized]
		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] _rotations;

		[NonSerialized]
		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector4[] _fillColors;

		[NonSerialized]
		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float[] _isDirectionals;

		[NonSerialized]
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float[] _alphaValues;

		[NonSerialized]
		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private CritPointInstanced.CritResults[] _currentCritResults;

		[NonSerialized]
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float[] _timeEnded;

		[NonSerialized]
		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float[] _timeBlockStarted;

		[NonSerialized]
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool[] _isActive;

		[NonSerialized]
		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CritRenderer _critRenderer;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xB1163C", Offset = "0xB1163C", VA = "0xB1163C", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xB1177C", Offset = "0xB1177C", VA = "0xB1177C", Slot = "10")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0xB118B4", Offset = "0xB118B4", VA = "0xB118B4", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xB11958", Offset = "0xB11958", VA = "0xB11958")]
		private void ClearCritMap()
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xB119D4", Offset = "0xB119D4", VA = "0xB119D4", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xB11A40", Offset = "0xB11A40", VA = "0xB11A40", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0xB11AD0", Offset = "0xB11AD0", VA = "0xB11AD0")]
		public CritPointInstanced HandleCritRequest(CritMessage message, Transform lookPoint)
		{
			return null;
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xB11B64", Offset = "0xB11B64", VA = "0xB11B64")]
		public CritController()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public abstract class EnemyAttackHandler : ScriptableObject
	{
		[Token(Token = "0x6000B2B")]
		public abstract void Initialize(Transform root);

		[Token(Token = "0x6000B2C")]
		public abstract void Shutdown();

		[Token(Token = "0x6000B2D")]
		public abstract void Draw();

		[Token(Token = "0x6000B2E")]
		public abstract void OnDidFadeOut();

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xC3E00C", Offset = "0xC3E00C", VA = "0xC3E00C")]
		protected EnemyAttackHandler()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class EnemyAttackController : CustomPlayerLoop
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EnemyAttackHandler[] _enemyAttackHandlers;

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xC3DBDC", Offset = "0xC3DBDC", VA = "0xC3DBDC", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0xC3DC48", Offset = "0xC3DC48", VA = "0xC3DC48", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xC3DDB0", Offset = "0xC3DDB0", VA = "0xC3DDB0", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xC3DEA0", Offset = "0xC3DEA0", VA = "0xC3DEA0")]
		private void OnDidFadeOut()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xC3DF10", Offset = "0xC3DF10", VA = "0xC3DF10", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xC3DF80", Offset = "0xC3DF80", VA = "0xC3DF80")]
		public EnemyAttackController()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class EnvironmentSettingsController : CustomPlayerLoop
	{
		[Token(Token = "0x20004D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF7C", Offset = "0x8AAF7C")]
		private sealed class <RequestCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnvironmentSettingsController <>4__this;

			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EnvironmentSettingsRequest request;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x17000455")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C90")]
				[Address(RVA = "0xC3EF08", Offset = "0xC3EF08", VA = "0xC3EF08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000456")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C92")]
				[Address(RVA = "0xC3EF70", Offset = "0xC3EF70", VA = "0xC3EF70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xC3E8A8", Offset = "0xC3E8A8", VA = "0xC3E8A8")]
			[DebuggerHidden]
			public <RequestCoroutine>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0xC3ED8C", Offset = "0xC3ED8C", VA = "0xC3ED8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xC3ED90", Offset = "0xC3ED90", VA = "0xC3ED90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xC3EF10", Offset = "0xC3EF10", VA = "0xC3EF10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnvironmentSettingsRequestGlobalEvent _environmentSettingsRequestGlobalEvent;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GlobalEvent _clearSettingsGlobalEvent;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _disableOcclusionCullingOnModalUI;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private IntVariable _modalUICount;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EnvironmentSettingsRequest _default;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EnvironmentSettingsRequest _current;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Routine _environmentSettingsCoroutine;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _unscaledTimePropertyParam;

		[Token(Token = "0x1700010C")]
		public int RequestQuality
		{
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xC3E014", Offset = "0xC3E014", VA = "0xC3E014")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xC3E03C", Offset = "0xC3E03C", VA = "0xC3E03C", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xC3E1D8", Offset = "0xC3E1D8", VA = "0xC3E1D8", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xC3E38C", Offset = "0xC3E38C", VA = "0xC3E38C")]
		private void OnModalUIChange(int newValue)
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xC3E448", Offset = "0xC3E448", VA = "0xC3E448")]
		public void OnLoadingPhaseEnter(LevelLoadingPhase phase)
		{
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xC3E44C", Offset = "0xC3E44C", VA = "0xC3E44C")]
		public void DefaultEnvironmentChanged()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xC3E66C", Offset = "0xC3E66C", VA = "0xC3E66C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xC3E674", Offset = "0xC3E674", VA = "0xC3E674")]
		public void HandleRequest(EnvironmentSettingsRequest request)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xC3E810", Offset = "0xC3E810", VA = "0xC3E810")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFCC8", Offset = "0x8DFCC8")]
		private IEnumerator RequestCoroutine(EnvironmentSettingsRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xC3E8D4", Offset = "0xC3E8D4", VA = "0xC3E8D4")]
		private void SetSettings(EnvironmentSettingsRequest request, float normalizedStrength)
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xC3EB60", Offset = "0xC3EB60", VA = "0xC3EB60", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xC3EBCC", Offset = "0xC3EBCC", VA = "0xC3EBCC", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xC3ECB8", Offset = "0xC3ECB8", VA = "0xC3ECB8")]
		public EnvironmentSettingsController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class EnvironmentSettingsRequest
	{
		[Serializable]
		[Token(Token = "0x20004D5")]
		public struct HeightFogSettings
		{
			[Token(Token = "0x4001E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsEnabled;

			[Token(Token = "0x4001E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float Height;

			[Token(Token = "0x4001E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Density;

			[Token(Token = "0x4001E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float StartDistance;
		}

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPersistent;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BE5B4", Offset = "0x8BE5B4")]
		public float Length;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve RampCurve;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RampTime;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool SimpleFog;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float FogDensity;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxDensity;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BE5F8", Offset = "0x8BE5F8")]
		public float SkyboxContribution;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float SkyboxBlend;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color FogColor;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BE63C", Offset = "0x8BE63C")]
		public Color FogTint;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BE680", Offset = "0x8BE680")]
		public HeightFogSettings HeightFog;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xC3E614", Offset = "0xC3E614", VA = "0xC3E614")]
		public EnvironmentSettingsRequest()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xC3E72C", Offset = "0xC3E72C", VA = "0xC3E72C")]
		public EnvironmentSettingsRequest(EnvironmentSettingsRequest other)
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A284C", Offset = "0x8A284C")]
	public class EnvironmentSettingsRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE6C4", Offset = "0x8BE6C4")]
		[SerializeField]
		private EnvironmentSettingsController _controller;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE710", Offset = "0x8BE710")]
		[SerializeField]
		private EnvironmentSettingsRequest[] _requests;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xC3EF78", Offset = "0xC3EF78", VA = "0xC3EF78")]
		public void Request()
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xC3F1B4", Offset = "0xC3F1B4", VA = "0xC3F1B4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xC3F2AC", Offset = "0xC3F2AC", VA = "0xC3F2AC")]
		public EnvironmentSettingsRequestAsset()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class GameOptionsController : CustomPlayerLoop
	{
		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ConditionalVariableInstancerAsset[] _conditionalOptions;

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xC3F318", Offset = "0xC3F318", VA = "0xC3F318", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xC3F38C", Offset = "0xC3F38C", VA = "0xC3F38C", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xC3F400", Offset = "0xC3F400", VA = "0xC3F400", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xC3F46C", Offset = "0xC3F46C", VA = "0xC3F46C", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xC3F470", Offset = "0xC3F470", VA = "0xC3F470")]
		public GameOptionsController()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class PremonitionController : CustomPlayerLoop
	{
		[Token(Token = "0x20004D6")]
		private class PremonitionRendererLoader : IResourceLoadHandler<PremonitionRenderer>, IResourceLoadHandler
		{
			[Token(Token = "0x4001E71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly bool _isBlock;

			[Token(Token = "0x4001E72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly PremonitionController _controller;

			[Token(Token = "0x4001E73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly Transform _root;

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xC3F76C", Offset = "0xC3F76C", VA = "0xC3F76C")]
			public PremonitionRendererLoader(bool isBlock, PremonitionController controller, Transform root)
			{
			}

			[Token(Token = "0x6001C94")]
			[Address(RVA = "0xC40018", Offset = "0xC40018", VA = "0xC40018", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x4000B3B")]
		private const int MAX_ENGAGEMENT_SPACES = 5;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected IntVariable _premonitionSuppression;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ResourceRequestKey _blockPremonitionKey;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ResourceRequestKey _dodgePremonitionKey;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EngagementSpace _engagementSpacePrefab;

		[NonSerialized]
		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PremonitionRenderer _blockRenderer;

		[NonSerialized]
		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PremonitionRenderer _dodgeRenderer;

		[NonSerialized]
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ComponentPool<EngagementSpace> _engagementSpacePool;

		[NonSerialized]
		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly Dictionary<Enemy, EngagementSpace> _activeEngagementSpaces;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xC3F4FC", Offset = "0xC3F4FC", VA = "0xC3F4FC", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xC3F7C8", Offset = "0xC3F7C8", VA = "0xC3F7C8", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xC3F870", Offset = "0xC3F870", VA = "0xC3F870")]
		private void OnLevelReady()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xC3FBC4", Offset = "0xC3FBC4", VA = "0xC3FBC4", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0xC3FC30", Offset = "0xC3FC30", VA = "0xC3FC30", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xC3FD00", Offset = "0xC3FD00", VA = "0xC3FD00")]
		public Premonition HandleBlockRequest(Vector3 blockLocalPosition, Vector3 blockLocalAngle, Transform spaceTransform, float premonitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC3FD1C", Offset = "0xC3FD1C", VA = "0xC3FD1C")]
		public Premonition HandleDodgeRequest(Vector3 dodgePosition, Vector3 dodgeAngleVector, Transform spaceTransform, float premonitionDuration)
		{
			return null;
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC3FD38", Offset = "0xC3FD38", VA = "0xC3FD38")]
		public EngagementSpace GetEngagementSpace(Enemy attacker, Transform playerTransform)
		{
			return null;
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xC3FED4", Offset = "0xC3FED4", VA = "0xC3FED4")]
		public void ReclaimEngagementSpace(Enemy attacker, EngagementSpace space)
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC3FF7C", Offset = "0xC3FF7C", VA = "0xC3FF7C")]
		public PremonitionController()
		{
		}
	}
	[Token(Token = "0x2000201")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2890", Offset = "0x8A2890")]
	public class ScreenFadeConfig : ScriptableObject
	{
		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE7CC", Offset = "0x8BE7CC")]
		[SerializeField]
		private ScreenFadeController controller;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color fadeColor;

		[Token(Token = "0x1700010D")]
		public float FadeDuration
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xC40554", Offset = "0xC40554", VA = "0xC40554")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010E")]
		public float FadeRate
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xC4055C", Offset = "0xC4055C", VA = "0xC4055C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700010F")]
		public Color FadeColor
		{
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xC4056C", Offset = "0xC4056C", VA = "0xC4056C")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC40578", Offset = "0xC40578", VA = "0xC40578")]
		public void Request()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xC405C4", Offset = "0xC405C4", VA = "0xC405C4")]
		public void FadeToClear()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xC4064C", Offset = "0xC4064C", VA = "0xC4064C")]
		public ScreenFadeConfig()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class ScreenFadeController : CustomPlayerLoop
	{
		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BE838", Offset = "0x8BE838")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE838", Offset = "0x8BE838")]
		[SerializeField]
		private float maxDT;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE8A8", Offset = "0x8BE8A8")]
		[SerializeField]
		private ScreenFadeConfig defaultFade;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private XRPlatformManager xrPlatformManager;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private IntVariable modalUI;

		[NonSerialized]
		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color ScreenFadeColor;

		[NonSerialized]
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool wasRendering;

		[NonSerialized]
		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float lastTime;

		[NonSerialized]
		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color destination;

		[NonSerialized]
		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float fadeRate;

		[NonSerialized]
		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector4 fadeRates;

		[NonSerialized]
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FullScreenEffect fade;

		[NonSerialized]
		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Material material;

		[NonSerialized]
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Action fadeCompleteCallback;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE914", Offset = "0x8BE914")]
		private bool <IsTransitioning>k__BackingField;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GlobalEvent FadeOut;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GlobalEvent FadeIn;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int _Color;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int Cull;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int ZWrite;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int ZTest;

		[Token(Token = "0x17000110")]
		public bool IsTransitioning
		{
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xC40688", Offset = "0xC40688", VA = "0xC40688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD2C", Offset = "0x8DFD2C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xC40690", Offset = "0xC40690", VA = "0xC40690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD3C", Offset = "0x8DFD3C")]
			private set
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action OnFadeStart
		{
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xC4069C", Offset = "0xC4069C", VA = "0xC4069C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD4C", Offset = "0x8DFD4C")]
			add
			{
			}
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xC40740", Offset = "0xC40740", VA = "0xC40740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD5C", Offset = "0x8DFD5C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xC407E4", Offset = "0xC407E4", VA = "0xC407E4")]
		public void SetCamera(Camera c)
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xC409F0", Offset = "0xC409F0", VA = "0xC409F0")]
		public void ClearCamera(Camera c)
		{
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xC40A6C", Offset = "0xC40A6C", VA = "0xC40A6C")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xC40A9C", Offset = "0xC40A9C", VA = "0xC40A9C", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xC40BF8", Offset = "0xC40BF8", VA = "0xC40BF8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xC40CAC", Offset = "0xC40CAC", VA = "0xC40CAC")]
		public void FadeToDefault()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xC405DC", Offset = "0xC405DC", VA = "0xC405DC")]
		public void FadeToClear()
		{
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xC40598", Offset = "0xC40598", VA = "0xC40598")]
		public void FadeTo(ScreenFadeConfig config, [Optional] Action onFadeComplete)
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xC40CB8", Offset = "0xC40CB8", VA = "0xC40CB8")]
		public void FadeTo(float rate, Color color, [Optional] Action onFadeComplete)
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xC40E6C", Offset = "0xC40E6C", VA = "0xC40E6C")]
		private void UpdateColor(float dt)
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC41170", Offset = "0xC41170", VA = "0xC41170", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC411DC", Offset = "0xC411DC", VA = "0xC411DC", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC41450", Offset = "0xC41450", VA = "0xC41450", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC415AC", Offset = "0xC415AC", VA = "0xC415AC")]
		public ScreenFadeController()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public struct RunningScreenFlashRequest
	{
		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Color Color;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Duration;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve FadeCurve;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CreationTimeStamp;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Id;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _idTracker;

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x9677F4", Offset = "0x9677F4", VA = "0x9677F4")]
		public RunningScreenFlashRequest(int id, ScreenFlashRequest request)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC40258", Offset = "0xC40258", VA = "0xC40258")]
		public static RunningScreenFlashRequest FromDataRequest(ScreenFlashRequest request)
		{
			return default(RunningScreenFlashRequest);
		}
	}
	[Token(Token = "0x2000204")]
	public class ScreenFlashController : CustomPlayerLoop
	{
		[Token(Token = "0x4000B64")]
		private const float ALPHA_EPSILON = 0.001f;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable _screenFlashEnabled;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _cancelAllScreenFlashGlobalEvent;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScreenFlashRequestGlobalEvent _screenFlashGlobalEvent;

		[NonSerialized]
		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RunningScreenFlashRequest> _requestList;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RunningScreenFlashRequest _currentRequest;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Routine _currentFlashCoroutine;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Routine _screenFlashCoroutine;

		[NonSerialized]
		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color _currentColor;

		[NonSerialized]
		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material _material;

		[NonSerialized]
		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private FullScreenEffect _fade;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool _flashing;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float _currentTime;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Color _startingColor;

		[Token(Token = "0x17000111")]
		public List<RunningScreenFlashRequest> RequestList
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xC416F4", Offset = "0xC416F4", VA = "0xC416F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC416FC", Offset = "0xC416FC", VA = "0xC416FC", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC41768", Offset = "0xC41768", VA = "0xC41768", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0xC41890", Offset = "0xC41890", VA = "0xC41890", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0xC419F4", Offset = "0xC419F4", VA = "0xC419F4")]
		public void SetCamera(Camera cachedCamera)
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC41C54", Offset = "0xC41C54", VA = "0xC41C54")]
		public void ClearCamera(Camera cachedCamera)
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xC41988", Offset = "0xC41988", VA = "0xC41988")]
		public void CancelAll()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xC41CD0", Offset = "0xC41CD0", VA = "0xC41CD0")]
		public void FireScreenFlash(ScreenFlashRequest request)
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xC41D84", Offset = "0xC41D84", VA = "0xC41D84", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xC4227C", Offset = "0xC4227C", VA = "0xC4227C")]
		private void UpdateFlash()
		{
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xC41BC4", Offset = "0xC41BC4", VA = "0xC41BC4")]
		private void UpdateColor()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xC41F60", Offset = "0xC41F60", VA = "0xC41F60")]
		private bool TryGetHighestAlpha(out RunningScreenFlashRequest highest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xC42364", Offset = "0xC42364", VA = "0xC42364")]
		public ScreenFlashController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class ScreenFlashRequest
	{
		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color Color;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Duration;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve FadeCurve;

		[NonSerialized]
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CreationTimeStamp;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xC42400", Offset = "0xC42400", VA = "0xC42400")]
		public ScreenFlashRequest(Color color, float duration, AnimationCurve fadeCurve)
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xC424C0", Offset = "0xC424C0", VA = "0xC424C0")]
		public ScreenFlashRequest(ScreenFlashRequest other)
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A28D4", Offset = "0x8A28D4")]
	public class ScreenFlashRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE964", Offset = "0x8BE964")]
		[SerializeField]
		private ScreenFlashController _controller;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BE9B0", Offset = "0x8BE9B0")]
		[SerializeField]
		private ScreenFlashRequest _request;

		[Token(Token = "0x17000112")]
		public ScreenFlashRequest ScreenFlashRequest
		{
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xC42560", Offset = "0xC42560", VA = "0xC42560")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0xC42568", Offset = "0xC42568", VA = "0xC42568")]
		public void Request()
		{
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0xC4262C", Offset = "0xC4262C", VA = "0xC4262C")]
		public ScreenFlashRequestAsset()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class ScreenFlashTrigger : MonoBehaviour, IEntityComponent, IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent
	{
		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BE9FC", Offset = "0x8BE9FC")]
		private ClaymoreEntity <Entity>k__BackingField;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScreenFlashRequestGlobalEvent _screenFlashGlobalEvent;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEA1C", Offset = "0x8BEA1C")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEA68", Offset = "0x8BEA68")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEAB4", Offset = "0x8BEAB4")]
		[SerializeField]
		private AnimationCurve _fadeCurve;

		[Token(Token = "0x17000113")]
		public ClaymoreEntity Entity
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xC42634", Offset = "0xC42634", VA = "0xC42634", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD6C", Offset = "0x8DFD6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xC4263C", Offset = "0xC4263C", VA = "0xC4263C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFD7C", Offset = "0x8DFD7C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xC42644", Offset = "0xC42644", VA = "0xC42644")]
		public void Trigger()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0xC42704", Offset = "0xC42704", VA = "0xC42704")]
		public void Trigger(ScreenFlashRequest request)
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xC4276C", Offset = "0xC4276C", VA = "0xC4276C")]
		public ScreenFlashTrigger()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public struct RunningTimeRequest
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ID;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsPersistent;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float TimeScale;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float Length;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string StackTrace;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float RampTime;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve RampCurve;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeScaleRequest Request;

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x96787C", Offset = "0x96787C", VA = "0x96787C")]
		public RunningTimeRequest(int id, float timeScale, bool isPersistent, float length, AnimationCurve curve, float rampTime)
		{
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xC404CC", Offset = "0xC404CC", VA = "0xC404CC")]
		public static RunningTimeRequest FromDataRequest(int id, TimeScaleRequest request)
		{
			return default(RunningTimeRequest);
		}
	}
	[Token(Token = "0x2000209")]
	public class TimeScaleController : CustomPlayerLoop
	{
		[Serializable]
		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF8C", Offset = "0x8AAF8C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RunningTimeRequest> <>9__38_0;

			[Token(Token = "0x6001C96")]
			[Address(RVA = "0xC43894", Offset = "0xC43894", VA = "0xC43894")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xC4389C", Offset = "0xC4389C", VA = "0xC4389C")]
			internal int <RequestTimeScale>b__38_0(RunningTimeRequest x, RunningTimeRequest y)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAF9C", Offset = "0x8AAF9C")]
		private sealed class <TimeScaleRampCoroutine>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RunningTimeRequest request;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public TimeScaleController <>4__this;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <initialValue>5__2;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <time>5__3;

			[Token(Token = "0x17000457")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9B")]
				[Address(RVA = "0xC43A50", Offset = "0xC43A50", VA = "0xC43A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000458")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9D")]
				[Address(RVA = "0xC43AB8", Offset = "0xC43AB8", VA = "0xC43AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xC43534", Offset = "0xC43534", VA = "0xC43534")]
			[DebuggerHidden]
			public <TimeScaleRampCoroutine>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xC438AC", Offset = "0xC438AC", VA = "0xC438AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9A")]
			[Address(RVA = "0xC438B0", Offset = "0xC438B0", VA = "0xC438B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9C")]
			[Address(RVA = "0xC43A58", Offset = "0xC43A58", VA = "0xC43A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _defaultTimescale;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEB10", Offset = "0x8BEB10")]
		[SerializeField]
		private GlobalEvent _onFocusFoundGlobalEvent;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent _onFocusLostGlobalEvent;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TimeScaleRequestGlobalEvent _timeScaleRequestGlobalEvent;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalEvent _timeScaleCancelAllGlobalEvent;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEB8C", Offset = "0x8BEB8C")]
		[SerializeField]
		private FloatVariable _playtime;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntVariable _dashIndicatorSuppression;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEBE8", Offset = "0x8BEBE8")]
		[SerializeField]
		private BoolVariable _subtitles;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVariable _toggleTime;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVariable _subtitlesLast;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private LanguageKeyVariable _currentLanguage;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private LanguageKeyVariable _lastLanguage;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatVariable _toggleTimeLast;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private SubtitleLanguageAnalyticsEvent subtitleToggleAnalyticsEvent;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BEC94", Offset = "0x8BEC94")]
		[SerializeField]
		private SFXController sfxController;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private TimeScaleRequest _currentRequest;

		[NonSerialized]
		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool forceDisabled;

		[NonSerialized]
		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly List<RunningTimeRequest> _requestList;

		[NonSerialized]
		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool _isGamePaused;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private int _nextRequestID;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Routine _timeScaleRampCoroutine;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BECCC", Offset = "0x8BECCC")]
		[SerializeField]
		private float _rampUpTime;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private AnimationCurve _rampUpCurve;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private TimeScaleRequest _defaultRequest;

		[Token(Token = "0x17000114")]
		public bool ForceDisabled
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xC42840", Offset = "0xC42840", VA = "0xC42840")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public List<RunningTimeRequest> RequestList
		{
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xC4284C", Offset = "0xC4284C", VA = "0xC4284C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000116")]
		public bool IsGamePaused
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xC42854", Offset = "0xC42854", VA = "0xC42854")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xC427D4", Offset = "0xC427D4", VA = "0xC427D4", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xC4285C", Offset = "0xC4285C", VA = "0xC4285C", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xC42B34", Offset = "0xC42B34", VA = "0xC42B34", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xC42A58", Offset = "0xC42A58", VA = "0xC42A58")]
		private void SetPausedAudioParameter(bool isPaused)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC42CC4", Offset = "0xC42CC4", VA = "0xC42CC4")]
		private void Pause()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xC42D7C", Offset = "0xC42D7C", VA = "0xC42D7C")]
		private void Unpause()
		{
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xC42E78", Offset = "0xC42E78", VA = "0xC42E78")]
		public void CancelAll()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xC42FA8", Offset = "0xC42FA8", VA = "0xC42FA8")]
		public void FireTimeScaleRequest(TimeScaleRequest request)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC42FAC", Offset = "0xC42FAC", VA = "0xC42FAC")]
		public int RequestTimeScale(TimeScaleRequest request)
		{
			return default(int);
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xC4316C", Offset = "0xC4316C", VA = "0xC4316C")]
		public void CancelRequest(int id)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xC4324C", Offset = "0xC4324C", VA = "0xC4324C", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xC42F14", Offset = "0xC42F14", VA = "0xC42F14")]
		private void TimeScaleRamp(RunningTimeRequest request)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xC43490", Offset = "0xC43490", VA = "0xC43490")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFD8C", Offset = "0x8DFD8C")]
		private IEnumerator TimeScaleRampCoroutine(RunningTimeRequest request)
		{
			return null;
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xC43560", Offset = "0xC43560", VA = "0xC43560")]
		public void ReportOnStart()
		{
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xC43640", Offset = "0xC43640", VA = "0xC43640")]
		public void WriteDataOnPause()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xC43700", Offset = "0xC43700", VA = "0xC43700")]
		public void ReportOnUnPause()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xC43618", Offset = "0xC43618", VA = "0xC43618")]
		private void ResetToggleTimer()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xC43748", Offset = "0xC43748", VA = "0xC43748")]
		public TimeScaleController()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class TimeScaleControllerTester : MonoBehaviour
	{
		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeScaleController Controller;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CancelID;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeScaleRequest request;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC43AC0", Offset = "0xC43AC0", VA = "0xC43AC0")]
		public void MakeRequest()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC43AF4", Offset = "0xC43AF4", VA = "0xC43AF4")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC43B14", Offset = "0xC43B14", VA = "0xC43B14")]
		public TimeScaleControllerTester()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020B")]
	public class TimeScaleRequest
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TimeScaleRequest InstantPause;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BED28", Offset = "0x8BED28")]
		public float TimeScale;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsPersistent;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8BED40", Offset = "0x8BED40")]
		public float Length;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve RampCurve;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float RampTime;

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xC43B1C", Offset = "0xC43B1C", VA = "0xC43B1C")]
		public TimeScaleRequest()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC42A78", Offset = "0xC42A78", VA = "0xC42A78")]
		public TimeScaleRequest(float timeScale, bool isPersistent, float length, AnimationCurve rampCurve, float rampTime)
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xC43B78", Offset = "0xC43B78", VA = "0xC43B78")]
		public TimeScaleRequest(TimeScaleRequest original)
		{
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2918", Offset = "0x8A2918")]
	public class TimeScaleRequestAsset : ScriptableObject
	{
		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BED84", Offset = "0x8BED84")]
		[SerializeField]
		private TimeScaleController _controller;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEDD0", Offset = "0x8BEDD0")]
		[SerializeField]
		private TimeScaleRequest _request;

		[NonSerialized]
		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentTicketID;

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xC43CC0", Offset = "0xC43CC0", VA = "0xC43CC0")]
		public void Request()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xC43D8C", Offset = "0xC43D8C", VA = "0xC43D8C")]
		public int RequestID()
		{
			return default(int);
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xC43E50", Offset = "0xC43E50", VA = "0xC43E50")]
		public void Cancel(int ticketID)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xC43E68", Offset = "0xC43E68", VA = "0xC43E68")]
		public void Cancel()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xC43E88", Offset = "0xC43E88", VA = "0xC43E88")]
		public TimeScaleRequestAsset()
		{
		}
	}
}
namespace SG.Claymore.Player
{
	[Token(Token = "0x200020D")]
	public class ClaymoreXRPlayer : XRPlayer
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private readonly RaycastHit[] raycastHitCache;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEE1C", Offset = "0x8BEE1C")]
		[SerializeField]
		private TriggerVolumeRegistry _triggerVolumeRegistry;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private PlayerEntityVariable playerEntity;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEE78", Offset = "0x8BEE78")]
		[SerializeField]
		private LayerMask _triggerVolumeLayer;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private LevelManager _levelManager;

		[NonSerialized]
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private bool _canCheckTriggerVolumes;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private readonly List<TriggerVolume> _currentTriggerVolumes;

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xB098D0", Offset = "0xB098D0", VA = "0xB098D0", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xB09A00", Offset = "0xB09A00", VA = "0xB09A00", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xB09B30", Offset = "0xB09B30", VA = "0xB09B30")]
		private void OnLoadWillStart()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xB09B38", Offset = "0xB09B38", VA = "0xB09B38")]
		private void OnLevelReady()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xB09B44", Offset = "0xB09B44", VA = "0xB09B44", Slot = "23")]
		protected override void ScaleToHeight()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xB09EA0", Offset = "0xB09EA0", VA = "0xB09EA0")]
		private void OnTriggerVolumeAdded(TriggerVolume triggerVolume)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xB0A04C", Offset = "0xB0A04C", VA = "0xB0A04C", Slot = "27")]
		public override void PostTeleport(Transform t)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB0A2D0", Offset = "0xB0A2D0", VA = "0xB0A2D0", Slot = "17")]
		public override Vector3 RequestMove(Vector3 desiredStep)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xB0A454", Offset = "0xB0A454", VA = "0xB0A454", Slot = "8")]
		protected override void OnHeadMove(Pose pose)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xB0A130", Offset = "0xB0A130", VA = "0xB0A130")]
		private void RegisterTriggerVolume(Collider collider)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xB0A628", Offset = "0xB0A628", VA = "0xB0A628")]
		private void DoExitTriggerVolumeCheck()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xB0A7C4", Offset = "0xB0A7C4", VA = "0xB0A7C4")]
		private bool IsPointInsideCollider(Vector3 point, Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xB09F60", Offset = "0xB09F60", VA = "0xB09F60")]
		private bool CheckIsInsideTriggerVolume(TriggerVolume triggerVolume)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xB0A978", Offset = "0xB0A978", VA = "0xB0A978")]
		public ClaymoreXRPlayer()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public abstract class DeathVisualController : ScriptableObject
	{
		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEED4", Offset = "0x8BEED4")]
		private float <DeathsDoorWeight>k__BackingField;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEEE4", Offset = "0x8BEEE4")]
		private float <BGPlayDownWeight>k__BackingField;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BEEF4", Offset = "0x8BEEF4")]
		private float <DeathStateWeight>k__BackingField;

		[Token(Token = "0x17000117")]
		public virtual float PrewarmTime
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xB0AA18", Offset = "0xB0AA18", VA = "0xB0AA18", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000118")]
		public virtual float DeathsDoorWeight
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xB0AA28", Offset = "0xB0AA28", VA = "0xB0AA28", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFDF0", Offset = "0x8DFDF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xB0AA30", Offset = "0xB0AA30", VA = "0xB0AA30", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE00", Offset = "0x8DFE00")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public virtual float BGPlayDownWeight
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xB0AA38", Offset = "0xB0AA38", VA = "0xB0AA38", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE10", Offset = "0x8DFE10")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xB0AA40", Offset = "0xB0AA40", VA = "0xB0AA40", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE20", Offset = "0x8DFE20")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public virtual float DeathStateWeight
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xB0AA48", Offset = "0xB0AA48", VA = "0xB0AA48", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE30", Offset = "0x8DFE30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BC3")]
			[Address(RVA = "0xB0AA50", Offset = "0xB0AA50", VA = "0xB0AA50", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DFE40", Offset = "0x8DFE40")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xB0AA20", Offset = "0xB0AA20", VA = "0xB0AA20", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xB0AA24", Offset = "0xB0AA24", VA = "0xB0AA24", Slot = "6")]
		public virtual void Shutdown(bool isDead)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xB0AA58", Offset = "0xB0AA58", VA = "0xB0AA58", Slot = "13")]
		public virtual void Finish()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xB0AA5C", Offset = "0xB0AA5C", VA = "0xB0AA5C")]
		protected DeathVisualController()
		{
		}
	}
	[Token(Token = "0x200020F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A295C", Offset = "0x8A295C")]
	public class GlobalShaderDeathVisualController : DeathVisualController
	{
		[Serializable]
		[Token(Token = "0x20004D9")]
		public class GlobalColorAdjustment
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float Brightness;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float Contrast;

			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Saturation;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Color Tint;

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xB0AC04", Offset = "0xB0AC04", VA = "0xB0AC04")]
			public Vector4 GetVector(float weight)
			{
				return default(Vector4);
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xB0AAEC", Offset = "0xB0AAEC", VA = "0xB0AAEC")]
			public void CopyFrom(GlobalColorAdjustment other)
			{
			}

			[Token(Token = "0x6001CA0")]
			[Address(RVA = "0xB0ADA0", Offset = "0xB0ADA0", VA = "0xB0ADA0")]
			public GlobalColorAdjustment()
			{
			}
		}

		[Token(Token = "0x20004DA")]
		public enum DebugMode
		{
			[Token(Token = "0x4001E81")]
			Off,
			[Token(Token = "0x4001E82")]
			DebugDeathsDoor,
			[Token(Token = "0x4001E83")]
			DebugDeath
		}

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private DebugMode debugMode;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string colorAdjustProperty;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string colorTintProperty;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string adjustEnableKeyword;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GlobalColorAdjustment deathsDoor;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalColorAdjustment death;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BEF64", Offset = "0x8BEF64")]
		[SerializeField]
		private float prewarmTime;

		[NonSerialized]
		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly GlobalColorAdjustment colorAdjustment;

		[NonSerialized]
		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float deathsDoorWeight;

		[NonSerialized]
		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float playDownWeight;

		[Token(Token = "0x1700011B")]
		public override float PrewarmTime
		{
			[Token(Token = "0x6000BC6")]
			[Address(RVA = "0xB0AA64", Offset = "0xB0AA64", VA = "0xB0AA64", Slot = "4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700011C")]
		public override float DeathsDoorWeight
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xB0AA94", Offset = "0xB0AA94", VA = "0xB0AA94", Slot = "7")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCA")]
			[Address(RVA = "0xB0AA9C", Offset = "0xB0AA9C", VA = "0xB0AA9C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public override float DeathStateWeight
		{
			[Token(Token = "0x6000BCB")]
			[Address(RVA = "0xB0ABAC", Offset = "0xB0ABAC", VA = "0xB0ABAC", Slot = "11")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xB0ABB4", Offset = "0xB0ABB4", VA = "0xB0ABB4", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xB0AA6C", Offset = "0xB0AA6C", VA = "0xB0AA6C", Slot = "13")]
		public override void Finish()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xB0AA80", Offset = "0xB0AA80", VA = "0xB0AA80", Slot = "6")]
		public override void Shutdown(bool isDead)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xB0AB20", Offset = "0xB0AB20", VA = "0xB0AB20")]
		private void Apply(GlobalColorAdjustment adjustment, float weight)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xB0AB78", Offset = "0xB0AB78", VA = "0xB0AB78")]
		private void CheckEnabled()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xB0AC40", Offset = "0xB0AC40", VA = "0xB0AC40")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xB0ACDC", Offset = "0xB0ACDC", VA = "0xB0ACDC")]
		public GlobalShaderDeathVisualController()
		{
		}
	}
	[Token(Token = "0x2000210")]
	public class PlayerControllerToggler : MonoBehaviour
	{
		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable _isControllerVisible;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _model;

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xB0ADA8", Offset = "0xB0ADA8", VA = "0xB0ADA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xB0AE9C", Offset = "0xB0AE9C", VA = "0xB0AE9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xB0AE7C", Offset = "0xB0AE7C", VA = "0xB0AE7C")]
		private void OnIsControllerVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xB0AF38", Offset = "0xB0AF38", VA = "0xB0AF38")]
		public PlayerControllerToggler()
		{
		}
	}
	[Token(Token = "0x2000211")]
	public class PlayerDeathController : MonoBehaviour, IResourceLoadHandler<DeathVisualController>, IResourceLoadHandler
	{
		[Token(Token = "0x20004DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFAC", Offset = "0x8AAFAC")]
		private sealed class <OnExitDeathsDoorCoroutine>d__62 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathController <>4__this;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <fromValue>5__3;

			[Token(Token = "0x17000459")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA4")]
				[Address(RVA = "0xB0C550", Offset = "0xB0C550", VA = "0xB0C550", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA6")]
				[Address(RVA = "0xB0C5B8", Offset = "0xB0C5B8", VA = "0xB0C5B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xB0B7BC", Offset = "0xB0B7BC", VA = "0xB0B7BC")]
			[DebuggerHidden]
			public <OnExitDeathsDoorCoroutine>d__62(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA2")]
			[Address(RVA = "0xB0C3E8", Offset = "0xB0C3E8", VA = "0xB0C3E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xB0C3EC", Offset = "0xB0C3EC", VA = "0xB0C3EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xB0C558", Offset = "0xB0C558", VA = "0xB0C558", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFBC", Offset = "0x8AAFBC")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool fadeComplete;

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xB0BDF0", Offset = "0xB0BDF0", VA = "0xB0BDF0")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0xB0BDF8", Offset = "0xB0BDF8", VA = "0xB0BDF8")]
			internal void <PlayerDeathSequence>b__0()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFCC", Offset = "0x8AAFCC")]
		private sealed class <PlayerDeathSequence>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathController <>4__this;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass63_0 <>8__1;

			[Token(Token = "0x1700045B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAC")]
				[Address(RVA = "0xB0CCF0", Offset = "0xB0CCF0", VA = "0xB0CCF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAE")]
				[Address(RVA = "0xB0CD58", Offset = "0xB0CD58", VA = "0xB0CD58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xB0B864", Offset = "0xB0B864", VA = "0xB0B864")]
			[DebuggerHidden]
			public <PlayerDeathSequence>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xB0C5C0", Offset = "0xB0C5C0", VA = "0xB0C5C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xB0C5C4", Offset = "0xB0C5C4", VA = "0xB0C5C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0xB0CCF8", Offset = "0xB0CCF8", VA = "0xB0CCF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFDC", Offset = "0x8AAFDC")]
		private sealed class <BGPlaydownCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathController <>4__this;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700045D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB2")]
				[Address(RVA = "0xB0BF10", Offset = "0xB0BF10", VA = "0xB0BF10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB4")]
				[Address(RVA = "0xB0BF78", Offset = "0xB0BF78", VA = "0xB0BF78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0xB0B90C", Offset = "0xB0B90C", VA = "0xB0B90C")]
			[DebuggerHidden]
			public <BGPlaydownCoroutine>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xB0BE18", Offset = "0xB0BE18", VA = "0xB0BE18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xB0BE1C", Offset = "0xB0BE1C", VA = "0xB0BE1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xB0BF18", Offset = "0xB0BF18", VA = "0xB0BF18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFEC", Offset = "0x8AAFEC")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool fadeComplete;

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xB0BE04", Offset = "0xB0BE04", VA = "0xB0BE04")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0xB0BE0C", Offset = "0xB0BE0C", VA = "0xB0BE0C")]
			internal void <DebugPostDeathCoroutine>b__0()
			{
			}
		}

		[Token(Token = "0x20004E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AAFFC", Offset = "0x8AAFFC")]
		private sealed class <DebugPostDeathCoroutine>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathController <>4__this;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass66_0 <>8__1;

			[Token(Token = "0x1700045F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBA")]
				[Address(RVA = "0xB0C378", Offset = "0xB0C378", VA = "0xB0C378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000460")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBC")]
				[Address(RVA = "0xB0C3E0", Offset = "0xB0C3E0", VA = "0xB0C3E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xB0BA38", Offset = "0xB0BA38", VA = "0xB0BA38")]
			[DebuggerHidden]
			public <DebugPostDeathCoroutine>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xB0BF80", Offset = "0xB0BF80", VA = "0xB0BF80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xB0BF84", Offset = "0xB0BF84", VA = "0xB0BF84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xB0C380", Offset = "0xB0C380", VA = "0xB0C380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BEFD0", Offset = "0x8BEFD0")]
		[SerializeField]
		private ScreenFadeController _screenFadeController;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TimeScaleController _timeScaleController;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _prewarmDeathsDoor;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF04C", Offset = "0x8BF04C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF04C", Offset = "0x8BF04C")]
		[SerializeField]
		private XRTrackedNode _playerHead;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private XRTrackedNode _playerChest;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF0CC", Offset = "0x8BF0CC")]
		[SerializeField]
		private EncounterDatabase encounterDatabase;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private NPCCombatantDefinitionVariable lastPlayerKillerEnemy;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private EnemyDatabase enemyDatabase;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF138", Offset = "0x8BF138")]
		[SerializeField]
		private PlayerKilledAnalyticsEvent playerKilledAnalyticsEvent;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerKilledArmamentAnalyticsEvent playerKilledArmamentAnalyticsEvent;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ArmamentAnalyticsEvent armamentAnalyticsEvent;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF1A4", Offset = "0x8BF1A4")]
		[SerializeField]
		private IntVariable _playerDeathCounter;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BF200", Offset = "0x8BF200")]
		[SerializeField]
		protected RoomCompletionHistory _roomCompletionHistory;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF24C", Offset = "0x8BF24C")]
		[SerializeField]
		private GlobalEvent _onEnterDeathsDoor;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GlobalEvent _onExitDeathsDoor;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private EnemyGlobalEvent _onPlayerKilled;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private GlobalEvent _playerDeathTransitionComplete;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GlobalEvent _onAvatarDissolveGlobalEvent;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF2D8", Offset = "0x8BF2D8")]
		[SerializeField]
		private AnimationCurve _deathsDoorCurve;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float _deathsDoorSpeed;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TimeScaleRequest _onPlayerKilledTimeScaleRequest;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF344", Offset = "0x8BF344")]
		[SerializeField]
		private NetherSpaceBubble bubble;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GameObject _postDeathUIPrefab;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BoolVariable _playerUIEnabled;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private BoolVariable _playerNotificationUIEnabled;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private BoolVariable _dashTargetingEnabled;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8BF3D0", Offset = "0x8BF3D0")]
		[SerializeField]
		private IntVariable _critSuppression;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private IntVariable _playerMovementSuppression;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private IntVariable _enemyHealthMeterSuppression;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private IntVariable _premonitionSuppression;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private IntVariable _pauseSuppression;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private float _postDeathUIDistanceFromHead;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF458", Offset = "0x8BF458")]
		[SerializeField]
		private AudioMixerSnapshot _onTransitionStartSnapshot;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float _snapshotTransitionTime;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF4B4", Offset = "0x8BF4B4")]
		[SerializeField]
		private float _timeToBGPlaydown;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private AnimationCurve _bgPlaydownCurve;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float _delayAfterDissolveStarts;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float _screenFadeTime;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private float _inBetweenFadeDelay;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onTransitionEnd;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool _isOnDeathsDoor;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		private bool _isDead;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float _elapsedTime;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Coroutine _deathsDoorExitCoroutine;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private int _playerKilledTimeScaleRequestID;

		[NonSerialized]
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float loadingPrewarm;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Coroutine _playerDeathSequenceCoroutine;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Coroutine _debugPostDeathCoroutine;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private ResourceRequestKey deathVisualKey;

		[NonSerialized]
		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private DeathVisualController deathVisuals;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8BF598", Offset = "0x8BF598")]
		[SerializeField]
		private float _cashoutPercentageComplete;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Enemy playerKiller;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xB0AF40", Offset = "0xB0AF40", VA = "0xB0AF40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xB0B050", Offset = "0xB0B050", VA = "0xB0B050")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xB0B18C", Offset = "0xB0B18C", VA = "0xB0B18C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xB0B260", Offset = "0xB0B260", VA = "0xB0B260")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xB0B55C", Offset = "0xB0B55C", VA = "0xB0B55C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xB0B6A4", Offset = "0xB0B6A4", VA = "0xB0B6A4")]
		private void OnEnterDeathsDoor()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xB0B6D8", Offset = "0xB0B6D8", VA = "0xB0B6D8")]
		private void OnExitDeathsDoor()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xB0B740", Offset = "0xB0B740", VA = "0xB0B740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFE50", Offset = "0x8DFE50")]
		private IEnumerator OnExitDeathsDoorCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xB0B7E8", Offset = "0xB0B7E8", VA = "0xB0B7E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFEB4", Offset = "0x8DFEB4")]
		private IEnumerator PlayerDeathSequence()
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xB0B890", Offset = "0xB0B890", VA = "0xB0B890")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFF18", Offset = "0x8DFF18")]
		private IEnumerator BGPlaydownCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xB0B938", Offset = "0xB0B938", VA = "0xB0B938")]
		private void DebugPostDeath()
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xB0B9BC", Offset = "0xB0B9BC", VA = "0xB0B9BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFF7C", Offset = "0x8DFF7C")]
		private IEnumerator DebugPostDeathCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xB0BA64", Offset = "0xB0BA64", VA = "0xB0BA64")]
		private void OnPlayerKilled(Enemy killer)
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xB0BC30", Offset = "0xB0BC30", VA = "0xB0BC30")]
		public void PlaySequence()
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xB0BC38", Offset = "0xB0BC38", VA = "0xB0BC38", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xB0BDA8", Offset = "0xB0BDA8", VA = "0xB0BDA8")]
		public PlayerDeathController()
		{
		}
	}
	[Token(Token = "0x2000212")]
	public class PlayerDeathControllerHub : MonoBehaviour, IResourceLoadHandler<DeathVisualController>, IResourceLoadHandler
	{
		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB00C", Offset = "0x8AB00C")]
		private sealed class <OnExitDeathsDoorCoroutine>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDeathControllerHub <>4__this;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <fromValue>5__3;

			[Token(Token = "0x17000461")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC0")]
				[Address(RVA = "0xB0D620", Offset = "0xB0D620", VA = "0xB0D620", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000462")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC2")]
				[Address(RVA = "0xB0D688", Offset = "0xB0D688", VA = "0xB0D688", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xB0D304", Offset = "0xB0D304", VA = "0xB0D304")]
			[DebuggerHidden]
			public <OnExitDeathsDoorCoroutine>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xB0D4B8", Offset = "0xB0D4B8", VA = "0xB0D4B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xB0D4BC", Offset = "0xB0D4BC", VA = "0xB0D4BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xB0D628", Offset = "0xB0D628", VA = "0xB0D628", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _prewarmDeathsDoor;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF5E8", Offset = "0x8BF5E8")]
		[SerializeField]
		private GlobalEvent _onEnterDeathsDoor;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GlobalEvent _onExitDeathsDoor;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF644", Offset = "0x8BF644")]
		[SerializeField]
		private AnimationCurve _deathsDoorCurve;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _deathsDoorSpeed;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool _isOnDeathsDoor;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		private bool _isDead;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _elapsedTime;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _deathsDoorExitCoroutine;

		[NonSerialized]
		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float loadingPrewarm;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ResourceRequestKey deathVisualKey;

		[NonSerialized]
		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DeathVisualController deathVisuals;

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xB0CD60", Offset = "0xB0CD60", VA = "0xB0CD60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xB0CDC0", Offset = "0xB0CDC0", VA = "0xB0CDC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xB0CEA0", Offset = "0xB0CEA0", VA = "0xB0CEA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xB0CF74", Offset = "0xB0CF74", VA = "0xB0CF74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xB0D0A4", Offset = "0xB0D0A4", VA = "0xB0D0A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xB0D1EC", Offset = "0xB0D1EC", VA = "0xB0D1EC")]
		private void OnEnterDeathsDoor()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xB0D220", Offset = "0xB0D220", VA = "0xB0D220")]
		private void OnExitDeathsDoor()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xB0D288", Offset = "0xB0D288", VA = "0xB0D288")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8DFFE0", Offset = "0x8DFFE0")]
		private IEnumerator OnExitDeathsDoorCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xB0D330", Offset = "0xB0D330", VA = "0xB0D330", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xB0D4A0", Offset = "0xB0D4A0", VA = "0xB0D4A0")]
		public PlayerDeathControllerHub()
		{
		}
	}
	[Token(Token = "0x2000213")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A296C", Offset = "0x8A296C")]
	public class PlayerHandState : ScriptableObject
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerHandState instancedState;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ArmamentID boundArmament;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<ArmamentAugment> upgrades;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float superCharge;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<StatMod> mods;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<StatMod> globalMods;

		[NonSerialized]
		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hasBeenBound;

		[NonSerialized]
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayerHand playerHand;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF720", Offset = "0x8BF720")]
		private bool <IsGrabbing>k__BackingField;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BF730", Offset = "0x8BF730")]
		private bool <IsInstance>k__BackingField;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action<ArmamentID> OnArmBound;

		[Token(Token = "0x1700011E")]
		public PlayerHand PlayerHand
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0xB0D690", Offset = "0xB0D690", VA = "0xB0D690")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public ArmamentID Armament
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xB0D698", Offset = "0xB0D698", VA = "0xB0D698")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public List<ArmamentAugment> Upgrades
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0xB0D700", Offset = "0xB0D700", VA = "0xB0D700")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public float SuperCharge
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xB0D738", Offset = "0xB0D738", VA = "0xB0D738")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0xB0D770", Offset = "0xB0D770", VA = "0xB0D770")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public bool IsGrabbing
		{
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0xB0D7B4", Offset = "0xB0D7B4", VA = "0xB0D7B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1044", Offset = "0x8E1044")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0xB0D7BC", Offset = "0xB0D7BC", VA = "0xB0D7BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1054", Offset = "0x8E1054")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		private bool IsInstance
		{
			[Token(Token = "0x6000BF8")]
			[Address(RVA = "0xB0D8B8", Offset = "0xB0D8B8", VA = "0xB0D8B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1064", Offset = "0x8E1064")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BF9")]
			[Address(RVA = "0xB0D8C0", Offset = "0xB0D8C0", VA = "0xB0D8C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1074", Offset = "0x8E1074")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public bool HasBeenBound
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0xB0D8CC", Offset = "0xB0D8CC", VA = "0xB0D8CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0xB0D8D4", Offset = "0xB0D8D4", VA = "0xB0D8D4")]
			set
			{
			}
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xB0D7C8", Offset = "0xB0D7C8", VA = "0xB0D7C8")]
		public void ApplyUpgrade(ArmamentAugment reward)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xB0D848", Offset = "0xB0D848", VA = "0xB0D848")]
		public void ClearRewards()
		{
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xB0D8E0", Offset = "0xB0D8E0", VA = "0xB0D8E0")]
		public void Initialize(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xB0D8E8", Offset = "0xB0D8E8", VA = "0xB0D8E8")]
		private void InstanceState()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xB0D9C4", Offset = "0xB0D9C4", VA = "0xB0D9C4")]
		public void RemoveStatMod(StatMod mod)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xB0D9E4", Offset = "0xB0D9E4", VA = "0xB0D9E4")]
		public void ResetAllStats()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xB0DA54", Offset = "0xB0DA54", VA = "0xB0DA54")]
		public void SetArmament(ArmamentID newArm)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xB0DB9C", Offset = "0xB0DB9C", VA = "0xB0DB9C")]
		public void ClearArmament()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xB0DBA8", Offset = "0xB0DBA8", VA = "0xB0DBA8")]
		public void ClearInstance()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xB0D6D0", Offset = "0xB0D6D0", VA = "0xB0D6D0")]
		private PlayerHandState GetState()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xB0DC6C", Offset = "0xB0DC6C", VA = "0xB0DC6C")]
		public void AddMod(StatMod mod)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xB0DCEC", Offset = "0xB0DCEC", VA = "0xB0DCEC")]
		public void RemoveMod(StatMod mod)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xB0DD6C", Offset = "0xB0DD6C", VA = "0xB0DD6C")]
		public List<StatMod> GetAllMods()
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xB0DDA4", Offset = "0xB0DDA4", VA = "0xB0DDA4")]
		public void AddGlobalMod(StatMod mod)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xB0DE24", Offset = "0xB0DE24", VA = "0xB0DE24")]
		public void RemoveGlobalMod(StatMod mod)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xB0DEA4", Offset = "0xB0DEA4", VA = "0xB0DEA4")]
		public PlayerHandState()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class PlayerVictoryController : MonoBehaviour, IResourceLoadHandler<DeathVisualController>, IResourceLoadHandler
	{
		[Token(Token = "0x20004E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB01C", Offset = "0x8AB01C")]
		private sealed class <>c__DisplayClass37_0
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool fadeComplete;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool achievementGraphExecuted;

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xB0E6CC", Offset = "0xB0E6CC", VA = "0xB0E6CC")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xB0E6D4", Offset = "0xB0E6D4", VA = "0xB0E6D4")]
			internal void <PlayerVictorySequence>b__0()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xB0E6E0", Offset = "0xB0E6E0", VA = "0xB0E6E0")]
			internal void <PlayerVictorySequence>b__1()
			{
			}
		}

		[Token(Token = "0x20004E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB02C", Offset = "0x8AB02C")]
		private sealed class <PlayerVictorySequence>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerVictoryController <>4__this;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass37_0 <>8__1;

			[Token(Token = "0x17000463")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC9")]
				[Address(RVA = "0xB0F250", Offset = "0xB0F250", VA = "0xB0F250", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000464")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCB")]
				[Address(RVA = "0xB0F2B8", Offset = "0xB0F2B8", VA = "0xB0F2B8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xB0E558", Offset = "0xB0E558", VA = "0xB0E558")]
			[DebuggerHidden]
			public <PlayerVictorySequence>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xB0EB90", Offset = "0xB0EB90", VA = "0xB0EB90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xB0EB94", Offset = "0xB0EB94", VA = "0xB0EB94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xB0F258", Offset = "0xB0F258", VA = "0xB0F258", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB03C", Offset = "0x8AB03C")]
		private sealed class <>c__DisplayClass39_0
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool fadeComplete;

			[Token(Token = "0x6001CCC")]
			[Address(RVA = "0xB0E6EC", Offset = "0xB0E6EC", VA = "0xB0E6EC")]
			public <>c__DisplayClass39_0()
			{
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xB0E6F4", Offset = "0xB0E6F4", VA = "0xB0E6F4")]
			internal void <DebugPostVictoryCoroutine>b__0()
			{
			}
		}

		[Token(Token = "0x20004E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB04C", Offset = "0x8AB04C")]
		private sealed class <DebugPostVictoryCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerVictoryController <>4__this;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass39_0 <>8__1;

			[Token(Token = "0x17000465")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD1")]
				[Address(RVA = "0xB0EB20", Offset = "0xB0EB20", VA = "0xB0EB20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD3")]
				[Address(RVA = "0xB0EB88", Offset = "0xB0EB88", VA = "0xB0EB88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCE")]
			[Address(RVA = "0xB0E678", Offset = "0xB0E678", VA = "0xB0E678")]
			[DebuggerHidden]
			public <DebugPostVictoryCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xB0E700", Offset = "0xB0E700", VA = "0xB0E700", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xB0E704", Offset = "0xB0E704", VA = "0xB0E704", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD2")]
			[Address(RVA = "0xB0EB28", Offset = "0xB0EB28", VA = "0xB0EB28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF740", Offset = "0x8BF740")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScreenFadeController _screenFadeController;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TimeScaleController _timeScaleController;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected RoomCompletionHistory _roomCompletionHistory;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ClaymoreBehaviorTreePlayer _achievementsGraphPlayer;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF7CC", Offset = "0x8BF7CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BF7CC", Offset = "0x8BF7CC")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable _avatarVisible;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GlobalEvent _playerTransitionComplete;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF85C", Offset = "0x8BF85C")]
		[SerializeField]
		private BoolVariable _playerUIEnabled;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVariable _playerNotificationUIEnabled;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVariable _playerMovementSuppression;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private IntVariable _critSuppression;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable _premonitionSuppression;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private IntVariable _pauseSuppression;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BoolVariable _dashTargetingEnabled;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF908", Offset = "0x8BF908")]
		[SerializeField]
		private AudioMixerSnapshot _onTransitionStartSnapshot;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _snapshotTransitionTime;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF964", Offset = "0x8BF964")]
		[SerializeField]
		private NetherSpaceBubble bubble;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float _screenFadeTime;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float _inBetweenFadeDelay;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private TimeScaleRequest _timeScaleRequest;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BF9E0", Offset = "0x8BF9E0")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ResourceRequestKey _deathVisualKey;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFA3C", Offset = "0x8BFA3C")]
		[SerializeField]
		private GameObject _postVictoryUIPrefab;

		[NonSerialized]
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CashOutScreen _cashOutScreen;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GlobalEvent _campaignCompletedGlobalEvent;

		[NonSerialized]
		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private DeathVisualController _deathVisuals;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _UIDistanceFromHead;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int _timeScaleRequestID;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool _playerSequenceRunning;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool _debugSequenceRunning;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool _sequenceStarted;

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xB0DF80", Offset = "0xB0DF80", VA = "0xB0DF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xB0E0C8", Offset = "0xB0E0C8", VA = "0xB0E0C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xB0E160", Offset = "0xB0E160", VA = "0xB0E160")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xB0E344", Offset = "0xB0E344", VA = "0xB0E344", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB0E498", Offset = "0xB0E498", VA = "0xB0E498")]
		public void PlaySequence()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xB0E4DC", Offset = "0xB0E4DC", VA = "0xB0E4DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1084", Offset = "0x8E1084")]
		private IEnumerator PlayerVictorySequence()
		{
			return null;
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xB0E584", Offset = "0xB0E584", VA = "0xB0E584")]
		private void DebugPostVictory()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xB0E5FC", Offset = "0xB0E5FC", VA = "0xB0E5FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E10E8", Offset = "0x8E10E8")]
		private IEnumerator DebugPostVictoryCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xB0E6A4", Offset = "0xB0E6A4", VA = "0xB0E6A4")]
		public PlayerVictoryController()
		{
		}
	}
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A29B0", Offset = "0x8A29B0")]
	public class PostProcessDeathVisualController : DeathVisualController
	{
		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFA98", Offset = "0x8BFA98")]
		[SerializeField]
		private PostProcessControllerVariable _postProcessControllerVariable;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFAE4", Offset = "0x8BFAE4")]
		[SerializeField]
		private PostProcessModifier _ppmDeathsDoorState;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFB30", Offset = "0x8BFB30")]
		[SerializeField]
		private PostProcessModifier _ppmDeathState;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PostProcessModifier _ppmBGPlaydownState;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PostProcessModifier _ppmNetherSpaceState;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PostProcessController.Track _ppcDeathsDoorStateHandle;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PostProcessController.Track _ppcDeathStateHandle;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PostProcessController.Track _ppcBGPlaydownStateHandle;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PostProcessController.Track _ppcNetherSpaceStateHandle;

		[NonSerialized]
		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _postProcessingInitialized;

		[Token(Token = "0x17000125")]
		public override float DeathsDoorWeight
		{
			[Token(Token = "0x6000C16")]
			[Address(RVA = "0xB0F544", Offset = "0xB0F544", VA = "0xB0F544", Slot = "7")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C17")]
			[Address(RVA = "0xB0F570", Offset = "0xB0F570", VA = "0xB0F570", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public override float DeathStateWeight
		{
			[Token(Token = "0x6000C18")]
			[Address(RVA = "0xB0F594", Offset = "0xB0F594", VA = "0xB0F594", Slot = "11")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xB0F5C0", Offset = "0xB0F5C0", VA = "0xB0F5C0", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public override float BGPlayDownWeight
		{
			[Token(Token = "0x6000C1A")]
			[Address(RVA = "0xB0F5E4", Offset = "0xB0F5E4", VA = "0xB0F5E4", Slot = "9")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xB0F610", Offset = "0xB0F610", VA = "0xB0F610", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xB0F2C0", Offset = "0xB0F2C0", VA = "0xB0F2C0", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xB0F364", Offset = "0xB0F364", VA = "0xB0F364", Slot = "6")]
		public override void Shutdown(bool isDead)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xB0F420", Offset = "0xB0F420", VA = "0xB0F420")]
		private void OnPostProcessControllerChange(PostProcessController ppc)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB0F634", Offset = "0xB0F634", VA = "0xB0F634", Slot = "13")]
		public override void Finish()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xB0F684", Offset = "0xB0F684", VA = "0xB0F684")]
		public PostProcessDeathVisualController()
		{
		}
	}
}
namespace SG.Claymore.NPCs
{
	[Token(Token = "0x2000216")]
	public sealed class Enemy : ClaymoreEntity, ITarget, IResourceLoadHandler<EnemyVisuals>, IResourceLoadHandler
	{
		[Serializable]
		[Token(Token = "0x20004E6")]
		public class EnemyVariables
		{
			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CritType OmniCrit;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CritType SlashCrit;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CritType SlashCrit_Interrupt;

			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CritType SlashCrit_Projectile;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private FloatVariable guard;

			[NonSerialized]
			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public FloatVariable Guard;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[SerializeField]
			private FloatVariable maxGuard;

			[NonSerialized]
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public FloatVariable MaxGuard;

			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[SerializeField]
			private FloatVariable minGuard;

			[NonSerialized]
			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public FloatVariable MinGuard;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private FloatVariable ticketSwapGraceTime_2Enemies;

			[NonSerialized]
			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public FloatVariable TicketSwapGraceTime_2Enemies;

			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[SerializeField]
			private FloatVariable ticketSwapGraceTime_3Enemies;

			[NonSerialized]
			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public FloatVariable TicketSwapGraceTime_3Enemies;

			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private FloatVariable ticketSwapGraceTime_4Enemies;

			[NonSerialized]
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public FloatVariable TicketSwapGraceTime_4Enemies;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[SerializeField]
			private FloatVariable ticketSwapGraceTime_5Enemies;

			[NonSerialized]
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public FloatVariable TicketSwapGraceTime_5Enemies;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			[SerializeField]
			private FloatVariable premonitionDuration_Super;

			[NonSerialized]
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public FloatVariable PremonitionDuration_Super;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			[SerializeField]
			private FloatVariable phaseTwo_PremonitionDuration;

			[NonSerialized]
			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public FloatVariable PhaseTwo_PremonitionDuration;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			[SerializeField]
			private FloatVariable superAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public FloatVariable SuperAttackSpeed;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			[SerializeField]
			private FloatVariable phaseTwo_AttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public FloatVariable PhaseTwo_AttackSpeed;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			[SerializeField]
			private FloatVariable premonitionDuration_OffscreenBonus;

			[NonSerialized]
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
			public FloatVariable PremonitionDuration_OffscreenBonus;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
			[SerializeField]
			private FloatVariable attackSpeed;

			[NonSerialized]
			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
			public FloatVariable AttackSpeed;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
			[SerializeField]
			private FloatVariable premonitionDuration;

			[NonSerialized]
			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
			public FloatVariable PremonitionDuration;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
			[SerializeField]
			private TimerVariable staggeredTicketHoldGraceTimer;

			[NonSerialized]
			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
			public TimerVariable StaggeredTicketHoldGraceTimer;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
			[SerializeField]
			private TimerVariable disengageCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
			public TimerVariable DisengageCooldownTimer;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
			[SerializeField]
			private FloatVariable in_GuardRestoreRate;

			[NonSerialized]
			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
			public FloatVariable In_GuardRestoreRate;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
			[SerializeField]
			private IntVariable reviveGroup;

			[NonSerialized]
			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
			public IntVariable ReviveGroup;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
			[SerializeField]
			private BoolVariable reviveOnAggro;

			[NonSerialized]
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
			public BoolVariable ReviveOnAggro;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
			[SerializeField]
			private BoolVariable currentlyRevived;

			[NonSerialized]
			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
			public BoolVariable CurrentlyRevived;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
			[SerializeField]
			private FloatVariable collisionRadius_Standing;

			[NonSerialized]
			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
			public FloatVariable CollisionRadius_Standing;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
			[SerializeField]
			private FloatVariable collisionRadius_Seated;

			[NonSerialized]
			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
			public FloatVariable CollisionRadius_Seated;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
			[SerializeField]
			private FloatVariable phaseTwo_GuardDmg_Blocked_Mult;

			[NonSerialized]
			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
			public FloatVariable PhaseTwo_GuardDmg_Blocked_Mult;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
			[SerializeField]
			private TimerVariable block_LoseTicketTimer;

			[NonSerialized]
			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
			public TimerVariable Block_LoseTicketTimer;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
			[SerializeField]
			private FloatVariable animSpeedMult_Locomotion;

			[NonSerialized]
			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
			public FloatVariable AnimSpeedMult_Locomotion;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
			[SerializeField]
			private FloatVariable phaseTwo_AnimSpeedMult_Locomotion;

			[NonSerialized]
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
			public FloatVariable PhaseTwo_AnimSpeedMult_Locomotion;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
			[SerializeField]
			private FloatVariable staggerGuardRestoreDelay_ComboDropped;

			[NonSerialized]
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
			public FloatVariable StaggerGuardRestoreDelay_ComboDropped;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
			[SerializeField]
			private FloatVariable staggerGuardRestoreDelay_ComboFinished;

			[NonSerialized]
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
			public FloatVariable StaggerGuardRestoreDelay_ComboFinished;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
			[SerializeField]
			private FloatVariable staggerCritDuration_FirstCrit;

			[NonSerialized]
			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
			public FloatVariable StaggerCritDuration_FirstCrit;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
			[SerializeField]
			private FloatVariable block_Guard_SuperArmor;

			[NonSerialized]
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
			public FloatVariable Block_Guard_SuperArmor;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
			[SerializeField]
			private FloatVariable maxBlock_Guard_SuperArmor;

			[NonSerialized]
			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
			public FloatVariable MaxBlock_Guard_SuperArmor;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
			[SerializeField]
			private FloatVariable minBlock_Guard_SuperArmor;

			[NonSerialized]
			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
			public FloatVariable MinBlock_Guard_SuperArmor;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
			[SerializeField]
			private FloatVariable animSpeedMult_StaggerRecovery;

			[NonSerialized]
			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
			public FloatVariable AnimSpeedMult_StaggerRecovery;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
			[SerializeField]
			private FloatVariable hpThreshold_PhaseTwo;

			[NonSerialized]
			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
			public FloatVariable HpThreshold_PhaseTwo;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
			[SerializeField]
			private FloatVariable animSpeedMult_Stagger;

			[NonSerialized]
			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
			public FloatVariable AnimSpeedMult_Stagger;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
			[SerializeField]
			private FloatVariable animSpeedMult_ComboFinish;

			[NonSerialized]
			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
			public FloatVariable AnimSpeedMult_ComboFinish;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
			[SerializeField]
			private BoolVariable isEliteVariant;

			[NonSerialized]
			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
			public BoolVariable IsEliteVariant;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
			[SerializeField]
			private FloatVariable hP;

			[NonSerialized]
			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
			public FloatVariable HP;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
			[SerializeField]
			private FloatVariable maxHP;

			[NonSerialized]
			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
			public FloatVariable MaxHP;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
			[SerializeField]
			private FloatVariable minHP;

			[NonSerialized]
			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
			public FloatVariable MinHP;

			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
			[SerializeField]
			private TimerVariable attackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
			public TimerVariable AttackCooldownTimer;

			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
			[SerializeField]
			private TimerVariable staggerDurationTimer;

			[NonSerialized]
			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
			public TimerVariable StaggerDurationTimer;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
			[SerializeField]
			private FloatVariable staggerComboFinishedTime;

			[NonSerialized]
			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
			public FloatVariable StaggerComboFinishedTime;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
			[SerializeField]
			private FloatVariable attackCooldown_Short;

			[NonSerialized]
			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
			public FloatVariable AttackCooldown_Short;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
			[SerializeField]
			private FloatVariable attackCooldown_Long;

			[NonSerialized]
			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
			public FloatVariable AttackCooldown_Long;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
			[SerializeField]
			private FloatVariable attackCooldown_Med;

			[NonSerialized]
			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
			public FloatVariable AttackCooldown_Med;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
			[SerializeField]
			private FloatVariable interruptCritDuration;

			[NonSerialized]
			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
			public FloatVariable InterruptCritDuration;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
			[SerializeField]
			private TimerVariable dash_DamageReact_CooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
			public TimerVariable Dash_DamageReact_CooldownTimer;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
			[SerializeField]
			private TimerVariable dodgeCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
			public TimerVariable DodgeCooldownTimer;

			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
			[SerializeField]
			private TimerVariable forwardDashCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
			public TimerVariable ForwardDashCooldownTimer;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
			[SerializeField]
			private FloatVariable comboCritDelayTime;

			[NonSerialized]
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
			public FloatVariable ComboCritDelayTime;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
			[SerializeField]
			private FloatVariable meleeAbandonRange;

			[NonSerialized]
			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
			public FloatVariable MeleeAbandonRange;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
			[SerializeField]
			private DistanceThresholdVariable meleeAbandonAngle;

			[NonSerialized]
			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
			public DistanceThresholdVariable MeleeAbandonAngle;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
			[SerializeField]
			private FloatVariable interruptCritAnticipation;

			[NonSerialized]
			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
			public FloatVariable InterruptCritAnticipation;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
			[SerializeField]
			private FloatVariable staggerCritAnticipation;

			[NonSerialized]
			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
			public FloatVariable StaggerCritAnticipation;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
			[SerializeField]
			private TimerVariable fumbleDurationTimer;

			[NonSerialized]
			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
			public TimerVariable FumbleDurationTimer;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
			[SerializeField]
			private TimerVariable fumbleImmunityTimer;

			[NonSerialized]
			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
			public TimerVariable FumbleImmunityTimer;

			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
			[SerializeField]
			private TimerVariable block_CooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
			public TimerVariable Block_CooldownTimer;

			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
			[SerializeField]
			private FloatVariable block_AggressionThreshold;

			[NonSerialized]
			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
			public FloatVariable Block_AggressionThreshold;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
			[SerializeField]
			private HistoryVariable out_HitsTakenHistory;

			[NonSerialized]
			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
			public HistoryVariable Out_HitsTakenHistory;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
			[SerializeField]
			private TimerVariable block_BlockRiposteTimer;

			[NonSerialized]
			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
			public TimerVariable Block_BlockRiposteTimer;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
			[SerializeField]
			private DistanceThresholdVariable onDeckRange;

			[NonSerialized]
			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
			public DistanceThresholdVariable OnDeckRange;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
			[SerializeField]
			private DistanceThresholdVariable startMeleeAttackRange;

			[NonSerialized]
			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
			public DistanceThresholdVariable StartMeleeAttackRange;

			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
			[SerializeField]
			private FloatVariable initialStaggerCritDuration_ComboCrit;

			[NonSerialized]
			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x428")]
			public FloatVariable InitialStaggerCritDuration_ComboCrit;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
			[SerializeField]
			private FloatVariable staggerCritSpeedUp;

			[NonSerialized]
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x438")]
			public FloatVariable StaggerCritSpeedUp;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x440")]
			[SerializeField]
			private FloatVariable staggerCritDuration_ComboCrit;

			[NonSerialized]
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x448")]
			public FloatVariable StaggerCritDuration_ComboCrit;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x450")]
			[SerializeField]
			private FloatVariable minStaggerCritDuration_ComboCrit;

			[NonSerialized]
			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x458")]
			public FloatVariable MinStaggerCritDuration_ComboCrit;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x460")]
			[SerializeField]
			private DistanceThresholdVariable inWaitingRange;

			[NonSerialized]
			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x468")]
			public DistanceThresholdVariable InWaitingRange;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x470")]
			[SerializeField]
			private TimerVariable meleeApproachTimeOut;

			[NonSerialized]
			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x478")]
			public TimerVariable MeleeApproachTimeOut;

			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x480")]
			[SerializeField]
			private TimerVariable ticketPosessionTimer;

			[NonSerialized]
			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x488")]
			public TimerVariable TicketPosessionTimer;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x490")]
			[SerializeField]
			private FloatVariable attackCooldown_TicketGained;

			[NonSerialized]
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x498")]
			public FloatVariable AttackCooldown_TicketGained;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A0")]
			[SerializeField]
			private TimerVariable block_DurationTimer;

			[NonSerialized]
			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4A8")]
			public TimerVariable Block_DurationTimer;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4B0")]
			[SerializeField]
			private TimerVariable ticketSwapGraceTimer;

			[NonSerialized]
			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4B8")]
			public TimerVariable TicketSwapGraceTimer;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C0")]
			[SerializeField]
			private TimerVariable offscreenStrafeWaitTimer;

			[NonSerialized]
			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C8")]
			public TimerVariable OffscreenStrafeWaitTimer;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D0")]
			[SerializeField]
			private FloatVariable guardDmg_Hit_Mult;

			[NonSerialized]
			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4D8")]
			public FloatVariable GuardDmg_Hit_Mult;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4E0")]
			[SerializeField]
			private FloatVariable guardDmg_Blocked_Mult;

			[NonSerialized]
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4E8")]
			public FloatVariable GuardDmg_Blocked_Mult;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4F0")]
			[SerializeField]
			private FloatVariable in_GuardPostHitRestoreDelay;

			[NonSerialized]
			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4F8")]
			public FloatVariable In_GuardPostHitRestoreDelay;

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x500")]
			[SerializeField]
			private TimerVariable engageCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x508")]
			public TimerVariable EngageCooldownTimer;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x510")]
			[SerializeField]
			private TimerVariable shoveTimer;

			[NonSerialized]
			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x518")]
			public TimerVariable ShoveTimer;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x520")]
			[SerializeField]
			private TimerVariable pushBackDurationTimer;

			[NonSerialized]
			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x528")]
			public TimerVariable PushBackDurationTimer;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x530")]
			[SerializeField]
			private TimerVariable mediumAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x538")]
			public TimerVariable MediumAttackCooldownTimer;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x540")]
			[SerializeField]
			private TimerVariable superAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x548")]
			public TimerVariable SuperAttackCooldownTimer;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x550")]
			[SerializeField]
			private TimerVariable strafeWaitTimer;

			[NonSerialized]
			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x558")]
			public TimerVariable StrafeWaitTimer;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x560")]
			[SerializeField]
			private TimerVariable ticketSwapDemotionTimer;

			[NonSerialized]
			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x568")]
			public TimerVariable TicketSwapDemotionTimer;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x570")]
			[SerializeField]
			private TimerVariable attackStartDashVulnerability;

			[NonSerialized]
			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x578")]
			public TimerVariable AttackStartDashVulnerability;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x580")]
			[SerializeField]
			private IntVariable engagementFitnessBonus_AttackReadied;

			[NonSerialized]
			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x588")]
			public IntVariable EngagementFitnessBonus_AttackReadied;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x590")]
			[SerializeField]
			private BoolVariable ticketing_PrioritizedRangedAttacks;

			[NonSerialized]
			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x598")]
			public BoolVariable Ticketing_PrioritizedRangedAttacks;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A0")]
			[SerializeField]
			private IntVariable engagementFitness_High_RangedCornered;

			[NonSerialized]
			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5A8")]
			public IntVariable EngagementFitness_High_RangedCornered;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B0")]
			[SerializeField]
			private IntVariable engagementFitness_High;

			[NonSerialized]
			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5B8")]
			public IntVariable EngagementFitness_High;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C0")]
			[SerializeField]
			private IntVariable engagementFitness_Moderate;

			[NonSerialized]
			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C8")]
			public IntVariable EngagementFitness_Moderate;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D0")]
			[SerializeField]
			private IntVariable engagementFitness_Low;

			[NonSerialized]
			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5D8")]
			public IntVariable EngagementFitness_Low;

			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E0")]
			[SerializeField]
			private FloatVariable rangedAttackCooldown_MultiEnemy;

			[NonSerialized]
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5E8")]
			public FloatVariable RangedAttackCooldown_MultiEnemy;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5F0")]
			[SerializeField]
			private TimerVariable rangedAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5F8")]
			public TimerVariable RangedAttackCooldownTimer;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x600")]
			[SerializeField]
			private DistanceThresholdVariable startRangedAttackRange;

			[NonSerialized]
			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x608")]
			public DistanceThresholdVariable StartRangedAttackRange;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x610")]
			[SerializeField]
			private DistanceThresholdVariable rangedAbandonRange;

			[NonSerialized]
			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x618")]
			public DistanceThresholdVariable RangedAbandonRange;

			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x620")]
			[SerializeField]
			private DistanceThresholdVariable rangedAbandonAngle;

			[NonSerialized]
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x628")]
			public DistanceThresholdVariable RangedAbandonAngle;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x630")]
			[SerializeField]
			private FloatVariable knockback_Shove_CounterDash;

			[NonSerialized]
			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x638")]
			public FloatVariable Knockback_Shove_CounterDash;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x640")]
			[SerializeField]
			private FloatVariable knockback_GroundAttack_Hit;

			[NonSerialized]
			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x648")]
			public FloatVariable Knockback_GroundAttack_Hit;

			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x650")]
			[SerializeField]
			private FloatVariable light_Damage;

			[NonSerialized]
			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x658")]
			public FloatVariable Light_Damage;

			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x660")]
			[SerializeField]
			private FloatVariable standard_Damage;

			[NonSerialized]
			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x668")]
			public FloatVariable Standard_Damage;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x670")]
			[SerializeField]
			private FloatVariable heavy_Damage;

			[NonSerialized]
			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x678")]
			public FloatVariable Heavy_Damage;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x680")]
			[SerializeField]
			private FloatVariable knockback_Hvy_Blocked;

			[NonSerialized]
			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x688")]
			public FloatVariable Knockback_Hvy_Blocked;

			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x690")]
			[SerializeField]
			private FloatVariable knockback_Hvy_Hit;

			[NonSerialized]
			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x698")]
			public FloatVariable Knockback_Hvy_Hit;

			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A0")]
			[SerializeField]
			private FloatVariable knockback_Std_Blocked;

			[NonSerialized]
			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6A8")]
			public FloatVariable Knockback_Std_Blocked;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B0")]
			[SerializeField]
			private FloatVariable knockback_Std_Hit;

			[NonSerialized]
			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6B8")]
			public FloatVariable Knockback_Std_Hit;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C0")]
			[SerializeField]
			private FloatVariable knockback_Shove;

			[NonSerialized]
			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C8")]
			public FloatVariable Knockback_Shove;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6D0")]
			[SerializeField]
			private FloatVariable knockback_Ranged_Blocked;

			[NonSerialized]
			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6D8")]
			public FloatVariable Knockback_Ranged_Blocked;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6E0")]
			[SerializeField]
			private FloatVariable knockback_Ranged_Hit;

			[NonSerialized]
			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6E8")]
			public FloatVariable Knockback_Ranged_Hit;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6F0")]
			[SerializeField]
			private FloatVariable fumbleDuration_Long;

			[NonSerialized]
			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6F8")]
			public FloatVariable FumbleDuration_Long;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x700")]
			[SerializeField]
			private TimerVariable ticketSwapInactivityBonusTimer;

			[NonSerialized]
			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x708")]
			public TimerVariable TicketSwapInactivityBonusTimer;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x710")]
			[SerializeField]
			private FloatVariable dodgeDown_Distance_Standing;

			[NonSerialized]
			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x718")]
			public FloatVariable DodgeDown_Distance_Standing;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x720")]
			[SerializeField]
			private FloatVariable dodgeDown_Distance_Seated;

			[NonSerialized]
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x728")]
			public FloatVariable DodgeDown_Distance_Seated;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x730")]
			[SerializeField]
			private FloatVariable standard_DodgeDown_Distance;

			[NonSerialized]
			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x738")]
			public FloatVariable Standard_DodgeDown_Distance;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x740")]
			[SerializeField]
			private FloatVariable standard_Dodge_Distance;

			[NonSerialized]
			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x748")]
			public FloatVariable Standard_Dodge_Distance;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x750")]
			[SerializeField]
			private FloatVariable staggerComboDroppedTime;

			[NonSerialized]
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x758")]
			public FloatVariable StaggerComboDroppedTime;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x760")]
			[SerializeField]
			private FloatVariable in_GuardFullRechargeDuration;

			[NonSerialized]
			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x768")]
			public FloatVariable In_GuardFullRechargeDuration;

			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x770")]
			[SerializeField]
			private FloatVariable in_GuardFullRechargeDelay;

			[NonSerialized]
			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x778")]
			public FloatVariable In_GuardFullRechargeDelay;

			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x780")]
			[SerializeField]
			private FloatVariable dodgePremonitionScalar;

			[NonSerialized]
			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x788")]
			public FloatVariable DodgePremonitionScalar;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x790")]
			[SerializeField]
			private FloatVariable dynamicDodgeRating;

			[NonSerialized]
			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x798")]
			public FloatVariable DynamicDodgeRating;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7A0")]
			[SerializeField]
			private TimerVariable postForwardDashVulnerabilityTimer;

			[NonSerialized]
			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7A8")]
			public TimerVariable PostForwardDashVulnerabilityTimer;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7B0")]
			[SerializeField]
			private TimerVariable chipDamageJustTaken_CooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7B8")]
			public TimerVariable ChipDamageJustTaken_CooldownTimer;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C0")]
			[SerializeField]
			private FloatVariable staggerFreezeTime;

			[NonSerialized]
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C8")]
			public FloatVariable StaggerFreezeTime;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7D0")]
			[SerializeField]
			private FloatVariable flinchFootPlantDuration;

			[NonSerialized]
			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7D8")]
			public FloatVariable FlinchFootPlantDuration;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7E0")]
			[SerializeField]
			private TimerVariable postCrit_FlinchCooldown;

			[NonSerialized]
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7E8")]
			public TimerVariable PostCrit_FlinchCooldown;

			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7F0")]
			[SerializeField]
			private FloatVariable pushbackDefenseMin;

			[NonSerialized]
			[Token(Token = "0x4001FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7F8")]
			public FloatVariable PushbackDefenseMin;

			[Token(Token = "0x4001FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x800")]
			[SerializeField]
			private FloatVariable pushbackDefenseMinToAnimate;

			[NonSerialized]
			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x808")]
			public FloatVariable PushbackDefenseMinToAnimate;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x810")]
			[SerializeField]
			private FloatVariable pushbackDefenseScale;

			[NonSerialized]
			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x818")]
			public FloatVariable PushbackDefenseScale;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x820")]
			[SerializeField]
			private BoolVariable isInUnCancelableAttack;

			[NonSerialized]
			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x828")]
			public BoolVariable IsInUnCancelableAttack;

			[Token(Token = "0x4001FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x830")]
			[SerializeField]
			private BoolVariable playedReviveAggro;

			[NonSerialized]
			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x838")]
			public BoolVariable PlayedReviveAggro;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x840")]
			[SerializeField]
			private BoolVariable out_InterruptCritTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x848")]
			public BoolVariable Out_InterruptCritTrigger;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x850")]
			[SerializeField]
			private BoolVariable forceHeadlookOn;

			[NonSerialized]
			[Token(Token = "0x4001FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x858")]
			public BoolVariable ForceHeadlookOn;

			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x860")]
			[SerializeField]
			private BoolVariable hasAttackedSinceLastDisengage;

			[NonSerialized]
			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x868")]
			public BoolVariable HasAttackedSinceLastDisengage;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x870")]
			[SerializeField]
			private BoolVariable currentlyShowingHpBar;

			[NonSerialized]
			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x878")]
			public BoolVariable CurrentlyShowingHpBar;

			[Token(Token = "0x4001FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x880")]
			[SerializeField]
			private BoolVariable isTutorialVariant;

			[NonSerialized]
			[Token(Token = "0x4001FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x888")]
			public BoolVariable IsTutorialVariant;

			[Token(Token = "0x4001FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x890")]
			[SerializeField]
			private BoolVariable debugSuppressPhaseTransitions;

			[NonSerialized]
			[Token(Token = "0x4001FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x898")]
			public BoolVariable DebugSuppressPhaseTransitions;

			[Token(Token = "0x4001FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8A0")]
			[SerializeField]
			private BoolVariable isInIntroSequence;

			[NonSerialized]
			[Token(Token = "0x4001FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8A8")]
			public BoolVariable IsInIntroSequence;

			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8B0")]
			[SerializeField]
			private BoolVariable counterDashRipostePending;

			[NonSerialized]
			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8B8")]
			public BoolVariable CounterDashRipostePending;

			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C0")]
			[SerializeField]
			private BoolVariable inPhaseThree;

			[NonSerialized]
			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8C8")]
			public BoolVariable InPhaseThree;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8D0")]
			[SerializeField]
			private BoolVariable inPhaseTwo;

			[NonSerialized]
			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8D8")]
			public BoolVariable InPhaseTwo;

			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8E0")]
			[SerializeField]
			private BoolVariable forceShoveTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8E8")]
			public BoolVariable ForceShoveTrigger;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8F0")]
			[SerializeField]
			private BoolVariable forceBlockingTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8F8")]
			public BoolVariable ForceBlockingTrigger;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x900")]
			[SerializeField]
			private BoolVariable wasInStasis;

			[NonSerialized]
			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x908")]
			public BoolVariable WasInStasis;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x910")]
			[SerializeField]
			private BoolVariable isLungeAttacking;

			[NonSerialized]
			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x918")]
			public BoolVariable IsLungeAttacking;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x920")]
			[SerializeField]
			private BoolVariable hasEngagementTicket;

			[NonSerialized]
			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x928")]
			public BoolVariable HasEngagementTicket;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x930")]
			[SerializeField]
			private BoolVariable outOfPlayerFrame;

			[NonSerialized]
			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x938")]
			public BoolVariable OutOfPlayerFrame;

			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x940")]
			[SerializeField]
			private BoolVariable isRangedAttacking;

			[NonSerialized]
			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x948")]
			public BoolVariable IsRangedAttacking;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x950")]
			[SerializeField]
			private BoolVariable inRangedAttackRange;

			[NonSerialized]
			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x958")]
			public BoolVariable InRangedAttackRange;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x960")]
			[SerializeField]
			private BoolVariable out_HasLineOfAttack;

			[NonSerialized]
			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x968")]
			public BoolVariable Out_HasLineOfAttack;

			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x970")]
			[SerializeField]
			private FloatVariable out_PlayerToEnemyAngle;

			[NonSerialized]
			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x978")]
			public FloatVariable Out_PlayerToEnemyAngle;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x980")]
			[SerializeField]
			private BoolVariable out_HasBeenBlockedTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x988")]
			public BoolVariable Out_HasBeenBlockedTrigger;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x990")]
			[SerializeField]
			private BoolVariable out_BeingKnockedBack;

			[NonSerialized]
			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x998")]
			public BoolVariable Out_BeingKnockedBack;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9A0")]
			[SerializeField]
			private BoolVariable in_AutoDashForwardEnabled;

			[NonSerialized]
			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9A8")]
			public BoolVariable In_AutoDashForwardEnabled;

			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9B0")]
			[SerializeField]
			private BoolVariable in_CanBeKnockedBack;

			[NonSerialized]
			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9B8")]
			public BoolVariable In_CanBeKnockedBack;

			[Token(Token = "0x4001FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C0")]
			[SerializeField]
			private BoolVariable blockInterruptedTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9C8")]
			public BoolVariable BlockInterruptedTrigger;

			[Token(Token = "0x4001FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9D0")]
			[SerializeField]
			private ClaymoreEntityVariable target;

			[NonSerialized]
			[Token(Token = "0x4001FE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9D8")]
			public ClaymoreEntityVariable Target;

			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9E0")]
			[SerializeField]
			private FloatVariable out_DistanceToTarget;

			[NonSerialized]
			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9E8")]
			public FloatVariable Out_DistanceToTarget;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9F0")]
			[SerializeField]
			private FloatVariable out_AngleToTarget;

			[NonSerialized]
			[Token(Token = "0x4001FE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9F8")]
			public FloatVariable Out_AngleToTarget;

			[Token(Token = "0x4001FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA00")]
			[SerializeField]
			private BoolVariable isMeleeAttacking;

			[NonSerialized]
			[Token(Token = "0x4001FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA08")]
			public BoolVariable IsMeleeAttacking;

			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA10")]
			[SerializeField]
			private BoolVariable in_CanTakeGuardDamage;

			[NonSerialized]
			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA18")]
			public BoolVariable In_CanTakeGuardDamage;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA20")]
			[SerializeField]
			private BoolVariable isAggroed;

			[NonSerialized]
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA28")]
			public BoolVariable IsAggroed;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA30")]
			[SerializeField]
			private BoolVariable out_StaggerCritTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA38")]
			public BoolVariable Out_StaggerCritTrigger;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA40")]
			[SerializeField]
			private IntVariable staggerComboCounter;

			[NonSerialized]
			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA48")]
			public IntVariable StaggerComboCounter;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA50")]
			[SerializeField]
			private BoolVariable isStaggered;

			[NonSerialized]
			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA58")]
			public BoolVariable IsStaggered;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA60")]
			[SerializeField]
			private FloatVariable previousGuardValue;

			[NonSerialized]
			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA68")]
			public FloatVariable PreviousGuardValue;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA70")]
			[SerializeField]
			private BoolVariable out_AnyStdCritActive;

			[NonSerialized]
			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA78")]
			public BoolVariable Out_AnyStdCritActive;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA80")]
			[SerializeField]
			private BoolVariable out_HitByDashAttackTrigger;

			[NonSerialized]
			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA88")]
			public BoolVariable Out_HitByDashAttackTrigger;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA90")]
			[SerializeField]
			private BoolVariable inMeleeAttackRange;

			[NonSerialized]
			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA98")]
			public BoolVariable InMeleeAttackRange;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAA0")]
			[SerializeField]
			private BoolVariable out_NotInLockFrame;

			[NonSerialized]
			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAA8")]
			public BoolVariable Out_NotInLockFrame;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAB0")]
			[SerializeField]
			private BoolVariable isBlocking;

			[NonSerialized]
			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAB8")]
			public BoolVariable IsBlocking;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC0")]
			[SerializeField]
			private BoolVariable in_DeflectWeaponOnHit;

			[NonSerialized]
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAC8")]
			public BoolVariable In_DeflectWeaponOnHit;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD0")]
			[SerializeField]
			private BoolVariable bypassAttackCooldownTrigger;

			[NonSerialized]
			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAD8")]
			public BoolVariable BypassAttackCooldownTrigger;

			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAE0")]
			[SerializeField]
			private BoolVariable isInProtectedAttack;

			[NonSerialized]
			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAE8")]
			public BoolVariable IsInProtectedAttack;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAF0")]
			[SerializeField]
			private BoolVariable isInGuardRestore;

			[NonSerialized]
			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xAF8")]
			public BoolVariable IsInGuardRestore;

			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB00")]
			[SerializeField]
			private HistoryVariable out_Guard_IncomingGuardDmgHistory;

			[NonSerialized]
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB08")]
			public HistoryVariable Out_Guard_IncomingGuardDmgHistory;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB10")]
			[SerializeField]
			private IntVariable in_EngagementFitness;

			[NonSerialized]
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB18")]
			public IntVariable In_EngagementFitness;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB20")]
			[SerializeField]
			private BoolVariable out_IsLaunchDeath;

			[NonSerialized]
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB28")]
			public BoolVariable Out_IsLaunchDeath;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB30")]
			[SerializeField]
			private BoolVariable out_HitTakenTrigger;

			[NonSerialized]
			[Token(Token = "0x400200C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB38")]
			public BoolVariable Out_HitTakenTrigger;

			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB40")]
			[SerializeField]
			private BoolVariable in_TicketIsLocked;

			[NonSerialized]
			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB48")]
			public BoolVariable In_TicketIsLocked;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB50")]
			[SerializeField]
			private BoolVariable out_PushBackTrigger;

			[NonSerialized]
			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB58")]
			public BoolVariable Out_PushBackTrigger;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB60")]
			[SerializeField]
			private BoolVariable isSuperAttacking;

			[NonSerialized]
			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB68")]
			public BoolVariable IsSuperAttacking;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB70")]
			[SerializeField]
			private BoolVariable out_HitByFumbleAttackTrigger;

			[NonSerialized]
			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB78")]
			public BoolVariable Out_HitByFumbleAttackTrigger;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB80")]
			[SerializeField]
			private BoolVariable out_InStasis;

			[NonSerialized]
			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB88")]
			public BoolVariable Out_InStasis;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB90")]
			[SerializeField]
			private BoolVariable out_SoulBurnDoTTrigger;

			[NonSerialized]
			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB98")]
			public BoolVariable Out_SoulBurnDoTTrigger;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBA0")]
			[SerializeField]
			private IntVariable out_ProjectilesHoming;

			[NonSerialized]
			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBA8")]
			public IntVariable Out_ProjectilesHoming;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBB0")]
			[SerializeField]
			private BoolVariable out_CanGetToTargetRange;

			[NonSerialized]
			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBB8")]
			public BoolVariable Out_CanGetToTargetRange;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC0")]
			[SerializeField]
			private BoolVariable in_TakeReducedGuardDamage;

			[NonSerialized]
			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBC8")]
			public BoolVariable In_TakeReducedGuardDamage;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBD0")]
			[SerializeField]
			private FloatVariable lastRawGuardDamage;

			[NonSerialized]
			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBD8")]
			public FloatVariable LastRawGuardDamage;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBE0")]
			[SerializeField]
			private FloatVariable blockingChipDamageMult;

			[NonSerialized]
			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBE8")]
			public FloatVariable BlockingChipDamageMult;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBF0")]
			[SerializeField]
			private FloatVariable in_InterruptCritGuardDamageMultiplier;

			[NonSerialized]
			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xBF8")]
			public FloatVariable In_InterruptCritGuardDamageMultiplier;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC00")]
			[SerializeField]
			private FloatVariable fumbleDefensePower;

			[NonSerialized]
			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC08")]
			public FloatVariable FumbleDefensePower;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC10")]
			[SerializeField]
			private FloatVariable animSpeedMult_Engage;

			[NonSerialized]
			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC18")]
			public FloatVariable AnimSpeedMult_Engage;

			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC20")]
			[SerializeField]
			private FloatVariable groundAttackSpeedMultiplier_Basic;

			[NonSerialized]
			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC28")]
			public FloatVariable GroundAttackSpeedMultiplier_Basic;

			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC30")]
			[SerializeField]
			private FloatVariable hpThreshold_PhaseThree;

			[NonSerialized]
			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC38")]
			public FloatVariable HpThreshold_PhaseThree;

			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC40")]
			[SerializeField]
			private TimerVariable aetherAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC48")]
			public TimerVariable AetherAttackCooldownTimer;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC50")]
			[SerializeField]
			private FloatVariable groundAttackPremonitionDuration;

			[NonSerialized]
			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC58")]
			public FloatVariable GroundAttackPremonitionDuration;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC60")]
			[SerializeField]
			private FloatVariable phaseThree_PremonitionDuration;

			[NonSerialized]
			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC68")]
			public FloatVariable PhaseThree_PremonitionDuration;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC70")]
			[SerializeField]
			private FloatVariable phaseThree_AttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC78")]
			public FloatVariable PhaseThree_AttackSpeed;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC80")]
			[SerializeField]
			private FloatVariable phaseThree_GuardRestoreRate;

			[NonSerialized]
			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC88")]
			public FloatVariable PhaseThree_GuardRestoreRate;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC90")]
			[SerializeField]
			private FloatVariable phaseTwo_GuardRestoreRate;

			[NonSerialized]
			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC98")]
			public FloatVariable PhaseTwo_GuardRestoreRate;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA0")]
			[SerializeField]
			private FloatVariable sp_SoulSlamChannelAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCA8")]
			public FloatVariable Sp_SoulSlamChannelAttackSpeed;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB0")]
			[SerializeField]
			private FloatVariable specialAttackCritDuration;

			[NonSerialized]
			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCB8")]
			public FloatVariable SpecialAttackCritDuration;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC0")]
			[SerializeField]
			private IntVariable sp_HpRegenPerTick;

			[NonSerialized]
			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCC8")]
			public IntVariable Sp_HpRegenPerTick;

			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCD0")]
			[SerializeField]
			private BoolVariable sp_Siphon_RightPylonDrained;

			[NonSerialized]
			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCD8")]
			public BoolVariable Sp_Siphon_RightPylonDrained;

			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCE0")]
			[SerializeField]
			private BoolVariable sp_Siphon_LeftPylonDrained;

			[NonSerialized]
			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCE8")]
			public BoolVariable Sp_Siphon_LeftPylonDrained;

			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCF0")]
			[SerializeField]
			private FloatVariable sp_SiphonHealthGainDelay;

			[NonSerialized]
			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xCF8")]
			public FloatVariable Sp_SiphonHealthGainDelay;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD00")]
			[SerializeField]
			private IntVariable sp_CurrentSiphonCritCounter;

			[NonSerialized]
			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD08")]
			public IntVariable Sp_CurrentSiphonCritCounter;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD10")]
			[SerializeField]
			private BoolVariable sp_IsInSoulSlam;

			[NonSerialized]
			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD18")]
			public BoolVariable Sp_IsInSoulSlam;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD20")]
			[SerializeField]
			private IntVariable sp_CritsToEndSiphon;

			[NonSerialized]
			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD28")]
			public IntVariable Sp_CritsToEndSiphon;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD30")]
			[SerializeField]
			private TimerVariable sp_SoulSlamDurationTimer;

			[NonSerialized]
			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD38")]
			public TimerVariable Sp_SoulSlamDurationTimer;

			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD40")]
			[SerializeField]
			private TimerVariable sp_SoulSlamCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD48")]
			public TimerVariable Sp_SoulSlamCooldownTimer;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD50")]
			[SerializeField]
			private TimerVariable heartCrush_ReleaseGraceTime;

			[NonSerialized]
			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD58")]
			public TimerVariable HeartCrush_ReleaseGraceTime;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD60")]
			[SerializeField]
			private BoolVariable heartGrabbed;

			[NonSerialized]
			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD68")]
			public BoolVariable HeartGrabbed;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD70")]
			[SerializeField]
			private IntVariable heartCrush_HpRestore;

			[NonSerialized]
			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD78")]
			public IntVariable HeartCrush_HpRestore;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD80")]
			[SerializeField]
			private TimerVariable heartCrush_HeartExposedTimer;

			[NonSerialized]
			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD88")]
			public TimerVariable HeartCrush_HeartExposedTimer;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD90")]
			[SerializeField]
			private BoolVariable out_HeartCrushed;

			[NonSerialized]
			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD98")]
			public BoolVariable Out_HeartCrushed;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDA0")]
			[SerializeField]
			private BoolVariable out_HeartCrushInProgress;

			[NonSerialized]
			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDA8")]
			public BoolVariable Out_HeartCrushInProgress;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB0")]
			[SerializeField]
			private BoolVariable out_HeartCrushStartedTrigger;

			[NonSerialized]
			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDB8")]
			public BoolVariable Out_HeartCrushStartedTrigger;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC0")]
			[SerializeField]
			private BoolVariable out_HeartGrabbed;

			[NonSerialized]
			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDC8")]
			public BoolVariable Out_HeartGrabbed;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDD0")]
			[SerializeField]
			private BoolVariable out_HeartGrabbedTrigger;

			[NonSerialized]
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDD8")]
			public BoolVariable Out_HeartGrabbedTrigger;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE0")]
			[SerializeField]
			private TimerVariable tutorialUltraAttackTimer;

			[NonSerialized]
			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDE8")]
			public TimerVariable TutorialUltraAttackTimer;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDF0")]
			[SerializeField]
			private FloatVariable powerAttackBlockRating;

			[NonSerialized]
			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xDF8")]
			public FloatVariable PowerAttackBlockRating;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE00")]
			[SerializeField]
			private FloatVariable sp_FrenzyAttack_PremonitionDuration;

			[NonSerialized]
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE08")]
			public FloatVariable Sp_FrenzyAttack_PremonitionDuration;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE10")]
			[SerializeField]
			private FloatVariable sp_FrenzyAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE18")]
			public FloatVariable Sp_FrenzyAttackSpeed;

			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE20")]
			[SerializeField]
			private FloatVariable sp_PlayerFocusedGroundAttackDelay;

			[NonSerialized]
			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE28")]
			public FloatVariable Sp_PlayerFocusedGroundAttackDelay;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE30")]
			[SerializeField]
			private FloatVariable sp_PlayerFocusedGroundAttack_PremonitionDuration;

			[NonSerialized]
			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE38")]
			public FloatVariable Sp_PlayerFocusedGroundAttack_PremonitionDuration;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE40")]
			[SerializeField]
			private FloatVariable sp_PlayerFocusedGroundAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE48")]
			public FloatVariable Sp_PlayerFocusedGroundAttackSpeed;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE50")]
			[SerializeField]
			private FloatVariable phaseTwo_LeapAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE58")]
			public FloatVariable PhaseTwo_LeapAttackSpeed;

			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE60")]
			[SerializeField]
			private FloatVariable leapAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE68")]
			public FloatVariable LeapAttackSpeed;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE70")]
			[SerializeField]
			private FloatVariable phaseTwo_AetherAttackCooldown;

			[NonSerialized]
			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE78")]
			public FloatVariable PhaseTwo_AetherAttackCooldown;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE80")]
			[SerializeField]
			private TimerVariable sp_FrenzyAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE88")]
			public TimerVariable Sp_FrenzyAttackCooldownTimer;

			[Token(Token = "0x4002077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE90")]
			[SerializeField]
			private FloatVariable phaseThree_GuardDmg_Blocked_Mult;

			[NonSerialized]
			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE98")]
			public FloatVariable PhaseThree_GuardDmg_Blocked_Mult;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEA0")]
			[SerializeField]
			private DistanceThresholdVariable aetherAttackRange;

			[NonSerialized]
			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEA8")]
			public DistanceThresholdVariable AetherAttackRange;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEB0")]
			[SerializeField]
			private FloatVariable animSpeedMult_Disengage;

			[NonSerialized]
			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEB8")]
			public FloatVariable AnimSpeedMult_Disengage;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC0")]
			[SerializeField]
			private FloatVariable animSpeedMult_Dodge;

			[NonSerialized]
			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEC8")]
			public FloatVariable AnimSpeedMult_Dodge;

			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xED0")]
			[SerializeField]
			private DistanceThresholdVariable sp_RoarAttackRange;

			[NonSerialized]
			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xED8")]
			public DistanceThresholdVariable Sp_RoarAttackRange;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEE0")]
			[SerializeField]
			private DistanceThresholdVariable engageLeapRange;

			[NonSerialized]
			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEE8")]
			public DistanceThresholdVariable EngageLeapRange;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEF0")]
			[SerializeField]
			private TimerVariable fogSummonCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xEF8")]
			public TimerVariable FogSummonCooldownTimer;

			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF00")]
			[SerializeField]
			private TimerVariable sp_RoarAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF08")]
			public TimerVariable Sp_RoarAttackCooldownTimer;

			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF10")]
			[SerializeField]
			private BoolVariable isInArena;

			[NonSerialized]
			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF18")]
			public BoolVariable IsInArena;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF20")]
			[SerializeField]
			private TimerVariable repositionLeap_CooldownTimer;

			[NonSerialized]
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF28")]
			public TimerVariable RepositionLeap_CooldownTimer;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF30")]
			[SerializeField]
			private FloatVariable phaseTwo_RangedAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF38")]
			public FloatVariable PhaseTwo_RangedAttackSpeed;

			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF40")]
			[SerializeField]
			private FloatVariable rangedAttackSpeed;

			[NonSerialized]
			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF48")]
			public FloatVariable RangedAttackSpeed;

			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF50")]
			[SerializeField]
			private TimerVariable flipCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF58")]
			public TimerVariable FlipCooldownTimer;

			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF60")]
			[SerializeField]
			private FloatVariable animSpeedMult_Vault;

			[NonSerialized]
			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF68")]
			public FloatVariable AnimSpeedMult_Vault;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF70")]
			[SerializeField]
			private FloatVariable evasionThreatRange;

			[NonSerialized]
			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF78")]
			public FloatVariable EvasionThreatRange;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF80")]
			[SerializeField]
			private TimerVariable evasionDelayTimer;

			[NonSerialized]
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF88")]
			public TimerVariable EvasionDelayTimer;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF90")]
			[SerializeField]
			private TimerVariable counterDashRiposte_Cooldown;

			[NonSerialized]
			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF98")]
			public TimerVariable CounterDashRiposte_Cooldown;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFA0")]
			[SerializeField]
			private FloatVariable attackSpeed_DashRiposteShove;

			[NonSerialized]
			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFA8")]
			public FloatVariable AttackSpeed_DashRiposteShove;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFB0")]
			[SerializeField]
			private TimerVariable counterDashRiposteTimer;

			[NonSerialized]
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFB8")]
			public TimerVariable CounterDashRiposteTimer;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC0")]
			[SerializeField]
			private FloatVariable blockRating_Shove;

			[NonSerialized]
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFC8")]
			public FloatVariable BlockRating_Shove;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFD0")]
			[SerializeField]
			private TimerVariable block_PostAttackBlockTimer;

			[NonSerialized]
			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFD8")]
			public TimerVariable Block_PostAttackBlockTimer;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFE0")]
			[SerializeField]
			private TimerVariable lungeAttackCooldownTimer;

			[NonSerialized]
			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFE8")]
			public TimerVariable LungeAttackCooldownTimer;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFF0")]
			[SerializeField]
			private FloatVariable captain_GroundSlamMinDistance;

			[NonSerialized]
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xFF8")]
			public FloatVariable Captain_GroundSlamMinDistance;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1000")]
			[SerializeField]
			private FloatVariable super_CounterCritDuration;

			[NonSerialized]
			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1008")]
			public FloatVariable Super_CounterCritDuration;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1010")]
			[SerializeField]
			private TimerVariable superChannelTimer;

			[NonSerialized]
			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1018")]
			public TimerVariable SuperChannelTimer;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1020")]
			[SerializeField]
			private TimerVariable trainingDummy_HpRegenWaitTime;

			[NonSerialized]
			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1028")]
			public TimerVariable TrainingDummy_HpRegenWaitTime;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1030")]
			[SerializeField]
			private FloatVariable phaseThree_EngageCooldown;

			[NonSerialized]
			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1038")]
			public FloatVariable PhaseThree_EngageCooldown;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1040")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_Locomotion;

			[NonSerialized]
			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1048")]
			public FloatVariable PhaseThree_AnimSpeedMult_Locomotion;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1050")]
			[SerializeField]
			private FloatVariable phaseThree_GuardDmg_Hit_Mult;

			[NonSerialized]
			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1058")]
			public FloatVariable PhaseThree_GuardDmg_Hit_Mult;

			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1060")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_StaggerRecovery;

			[NonSerialized]
			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1068")]
			public FloatVariable PhaseThree_AnimSpeedMult_StaggerRecovery;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1070")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_Engage;

			[NonSerialized]
			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1078")]
			public FloatVariable PhaseThree_AnimSpeedMult_Engage;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1080")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_Dodge;

			[NonSerialized]
			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1088")]
			public FloatVariable PhaseThree_AnimSpeedMult_Dodge;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1090")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_Disengage;

			[NonSerialized]
			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1098")]
			public FloatVariable PhaseThree_AnimSpeedMult_Disengage;

			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10A0")]
			[SerializeField]
			private FloatVariable phaseThree_AnimSpeedMult_ComboFinish;

			[NonSerialized]
			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10A8")]
			public FloatVariable PhaseThree_AnimSpeedMult_ComboFinish;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10B0")]
			[SerializeField]
			private FloatVariable phaseThree_KnockbackShove;

			[NonSerialized]
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10B8")]
			public FloatVariable PhaseThree_KnockbackShove;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C0")]
			[SerializeField]
			private FloatVariable phaseThree_SuperChannelTime;

			[NonSerialized]
			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10C8")]
			public FloatVariable PhaseThree_SuperChannelTime;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10D0")]
			[SerializeField]
			private FloatVariable phaseThree_AttackCooldownLong;

			[NonSerialized]
			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10D8")]
			public FloatVariable PhaseThree_AttackCooldownLong;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10E0")]
			[SerializeField]
			private FloatVariable phaseThree_AttackCooldownMed;

			[NonSerialized]
			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10E8")]
			public FloatVariable PhaseThree_AttackCooldownMed;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10F0")]
			[SerializeField]
			private FloatVariable phaseThree_AttackCooldownShort;

			[NonSerialized]
			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10F8")]
			public FloatVariable PhaseThree_AttackCooldownShort;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1100")]
			[SerializeField]
			private FloatVariable phaseThree_StaggerCritDuration;

			[NonSerialized]
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1108")]
			public FloatVariable PhaseThree_StaggerCritDuration;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1110")]
			[SerializeField]
			private FloatVariable phaseThree_InterruptCritDuration;

			[NonSerialized]
			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1118")]
			public FloatVariable PhaseThree_InterruptCritDuration;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1120")]
			[SerializeField]
			private FloatVariable phaseThree_FumbleDuration;

			[NonSerialized]
			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1128")]
			public FloatVariable PhaseThree_FumbleDuration;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1130")]
			[SerializeField]
			private BoolVariable forceEndComboImmediately;

			[NonSerialized]
			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1138")]
			public BoolVariable ForceEndComboImmediately;

			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xB20018", Offset = "0xB20018", VA = "0xB20018")]
			public void Cache(Enemy e)
			{
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xB23794", Offset = "0xB23794", VA = "0xB23794")]
			public void OnValidate()
			{
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xB25B18", Offset = "0xB25B18", VA = "0xB25B18")]
			public EnemyVariables()
			{
			}
		}

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EnemyVariables Variables;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NullConditionalDrawAttribute", RVA = "0x8BFB9C", Offset = "0x8BFB9C")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NullConditionalDrawAttribute", RVA = "0x8BFBE8", Offset = "0x8BFBE8")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BFC34", Offset = "0x8BFC34")]
		[SerializeField]
		private EntityRegistry _physicsObjectRegistry;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFC80", Offset = "0x8BFC80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFC80", Offset = "0x8BFC80")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8BFC80", Offset = "0x8BFC80")]
		private AIAgent <AIAgent>k__BackingField;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BoolVariable debugEnableAI;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFD08", Offset = "0x8BFD08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BFD08", Offset = "0x8BFD08")]
		[SerializeField]
		private CapsuleCollider _movementCollider;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BFD78", Offset = "0x8BFD78")]
		[SerializeField]
		private CapsuleCollider _losBlocker;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFDC4", Offset = "0x8BFDC4")]
		[SerializeField]
		private EnemyComponent[] enemyComponents;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFE10", Offset = "0x8BFE10")]
		[SerializeField]
		private InstancedIntVariable _projectilesHomingCounter;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private IntVariable _comboCounter;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFE6C", Offset = "0x8BFE6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8BFE6C", Offset = "0x8BFE6C")]
		[SerializeField]
		private EnemyGlobalEvent _onPlayerKilled;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BFEDC", Offset = "0x8BFEDC")]
		[SerializeField]
		private MecanimParameterReference _highlightMaterialParam;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8BFF30", Offset = "0x8BFF30")]
		[SerializeField]
		private MecanimParameterReference _playdownMaterialParam;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8BFF84", Offset = "0x8BFF84")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8BFF84", Offset = "0x8BFF84")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ExposedTransformPoint critExposedTransform;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0004", Offset = "0x8C0004")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C0004", Offset = "0x8C0004")]
		private Targetable <Targetable>k__BackingField;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C004C", Offset = "0x8C004C")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C004C", Offset = "0x8C004C")]
		private EnemyMover <EnemyMover>k__BackingField;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0094", Offset = "0x8C0094")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C0094", Offset = "0x8C0094")]
		private EnemyHitController <EnemyHitController>k__BackingField;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00DC", Offset = "0x8C00DC")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C00DC", Offset = "0x8C00DC")]
		private Animator <NPCAnimator>k__BackingField;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0124", Offset = "0x8C0124")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C0124", Offset = "0x8C0124")]
		private EnemyKillController <KillController>k__BackingField;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C016C", Offset = "0x8C016C")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C016C", Offset = "0x8C016C")]
		private EnemyHealth <EnemyHealth>k__BackingField;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01B4", Offset = "0x8C01B4")]
		[SerializeField]
		[AttributeAttribute(Name = "SerializedPropertyCacheAttribute", RVA = "0x8C01B4", Offset = "0x8C01B4")]
		private PointOfInterest <PointOfInterest>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly List<EnemyProjectile> _currentEnemyProjectiles;

		[NonSerialized]
		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly List<GroundAttack> _currentEnemyGroundAttacks;

		[NonSerialized]
		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int _nextId;

		[NonSerialized]
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private IntVariable _comboCounterInstance;

		[NonSerialized]
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float _initialMovementRadius;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01FC", Offset = "0x8C01FC")]
		private EnemyVisuals <Visuals>k__BackingField;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C020C", Offset = "0x8C020C")]
		private bool <CanBeTargeted>k__BackingField;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C021C", Offset = "0x8C021C")]
		private Transform <CritTransform>k__BackingField;

		[Token(Token = "0x17000128")]
		public AIAgent AIAgent
		{
			[Token(Token = "0x6000C1E")]
			[Address(RVA = "0xB1FE80", Offset = "0xB1FE80", VA = "0xB1FE80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E114C", Offset = "0x8E114C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xB1FE88", Offset = "0xB1FE88", VA = "0xB1FE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E115C", Offset = "0x8E115C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000129")]
		public Targetable Targetable
		{
			[Token(Token = "0x6000C20")]
			[Address(RVA = "0xB1FE90", Offset = "0xB1FE90", VA = "0xB1FE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E116C", Offset = "0x8E116C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xB1FE98", Offset = "0xB1FE98", VA = "0xB1FE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E117C", Offset = "0x8E117C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012A")]
		public EnemyMover EnemyMover
		{
			[Token(Token = "0x6000C22")]
			[Address(RVA = "0xB1FEA0", Offset = "0xB1FEA0", VA = "0xB1FEA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E118C", Offset = "0x8E118C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C23")]
			[Address(RVA = "0xB1FEA8", Offset = "0xB1FEA8", VA = "0xB1FEA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E119C", Offset = "0x8E119C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public EnemyHitController EnemyHitController
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0xB1FEB0", Offset = "0xB1FEB0", VA = "0xB1FEB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11AC", Offset = "0x8E11AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xB1FEB8", Offset = "0xB1FEB8", VA = "0xB1FEB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11BC", Offset = "0x8E11BC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public Animator NPCAnimator
		{
			[Token(Token = "0x6000C26")]
			[Address(RVA = "0xB1FEC8", Offset = "0xB1FEC8", VA = "0xB1FEC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11CC", Offset = "0x8E11CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xB1FED0", Offset = "0xB1FED0", VA = "0xB1FED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11DC", Offset = "0x8E11DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		public EnemyKillController KillController
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0xB1FEE0", Offset = "0xB1FEE0", VA = "0xB1FEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11EC", Offset = "0x8E11EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0xB1FEE8", Offset = "0xB1FEE8", VA = "0xB1FEE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E11FC", Offset = "0x8E11FC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public EnemyHealth EnemyHealth
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0xB1FEF8", Offset = "0xB1FEF8", VA = "0xB1FEF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E120C", Offset = "0x8E120C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xB1FF00", Offset = "0xB1FF00", VA = "0xB1FF00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E121C", Offset = "0x8E121C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public PointOfInterest PointOfInterest
		{
			[Token(Token = "0x6000C2C")]
			[Address(RVA = "0xB1FF10", Offset = "0xB1FF10", VA = "0xB1FF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E122C", Offset = "0x8E122C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xB1FF18", Offset = "0xB1FF18", VA = "0xB1FF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E123C", Offset = "0x8E123C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public CapsuleCollider MovementCollider
		{
			[Token(Token = "0x6000C2E")]
			[Address(RVA = "0xB1FF28", Offset = "0xB1FF28", VA = "0xB1FF28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000131")]
		public CapsuleCollider LoSBlocker
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0xB1FF30", Offset = "0xB1FF30", VA = "0xB1FF30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public EnemyManager EnemyManager
		{
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0xB1FF38", Offset = "0xB1FF38", VA = "0xB1FF38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000133")]
		public PlayerEntityVariable PlayerEntity
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xB1FF40", Offset = "0xB1FF40", VA = "0xB1FF40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000134")]
		public ResourceLoadingController ResourceLoader
		{
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0xB1FF48", Offset = "0xB1FF48", VA = "0xB1FF48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public EnemyVisuals Visuals
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xB1FF50", Offset = "0xB1FF50", VA = "0xB1FF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E124C", Offset = "0x8E124C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0xB1FF58", Offset = "0xB1FF58", VA = "0xB1FF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E125C", Offset = "0x8E125C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public override bool IgnoreWeaponCollision
		{
			[Token(Token = "0x6000C35")]
			[Address(RVA = "0xB1FF68", Offset = "0xB1FF68", VA = "0xB1FF68", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000137")]
		public override float MovementRadius
		{
			[Token(Token = "0x6000C36")]
			[Address(RVA = "0xB1FF70", Offset = "0xB1FF70", VA = "0xB1FF70", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000138")]
		public bool CanBeTargeted
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xB1FF8C", Offset = "0xB1FF8C", VA = "0xB1FF8C", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E126C", Offset = "0x8E126C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xB1FF94", Offset = "0xB1FF94", VA = "0xB1FF94", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E127C", Offset = "0x8E127C")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public Transform CritTransform
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xB1FFA0", Offset = "0xB1FFA0", VA = "0xB1FFA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E128C", Offset = "0x8E128C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xB1FFA8", Offset = "0xB1FFA8", VA = "0xB1FFA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E129C", Offset = "0x8E129C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xB1FFB8", Offset = "0xB1FFB8", VA = "0xB1FFB8", Slot = "22")]
		public override int GetComboIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xB1FFDC", Offset = "0xB1FFDC", VA = "0xB1FFDC", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xB224EC", Offset = "0xB224EC", VA = "0xB224EC", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xB224F0", Offset = "0xB224F0", VA = "0xB224F0", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xB22340", Offset = "0xB22340", VA = "0xB22340")]
		public void LoadVisuals()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xB22B00", Offset = "0xB22B00", VA = "0xB22B00", Slot = "25")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xB2278C", Offset = "0xB2278C", VA = "0xB2278C")]
		private void FinishInitialization()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xB22D88", Offset = "0xB22D88", VA = "0xB22D88")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C43")]
		public T GetEnemyComponent<T>() where T : EnemyComponent
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xB22EE8", Offset = "0xB22EE8", VA = "0xB22EE8")]
		private void OnPlayerKilled(Enemy attacker)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xB22FB8", Offset = "0xB22FB8", VA = "0xB22FB8")]
		public void RestoreMovementRadius()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xB22FDC", Offset = "0xB22FDC", VA = "0xB22FDC")]
		public void SetMovementRadius(float newRadius)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xB22FF8", Offset = "0xB22FF8", VA = "0xB22FF8")]
		public void SetCollisionEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xB23090", Offset = "0xB23090", VA = "0xB23090", Slot = "18")]
		public override HitResult HandleHitCollision(ref HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xB230E8", Offset = "0xB230E8", VA = "0xB230E8")]
		public void KillStart()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xB23104", Offset = "0xB23104", VA = "0xB23104")]
		private void OnKillStart()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xB23174", Offset = "0xB23174", VA = "0xB23174")]
		private void OnBodyDissolveComplete()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xB2324C", Offset = "0xB2324C", VA = "0xB2324C")]
		public void Kill(bool isNonImpactDeath)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xB2326C", Offset = "0xB2326C", VA = "0xB2326C")]
		public int GetNextID()
		{
			return default(int);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xB23280", Offset = "0xB23280", VA = "0xB23280")]
		public void RegisterProjectile(EnemyProjectile projectile)
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xB23350", Offset = "0xB23350", VA = "0xB23350")]
		public void UnregisterProjectile(EnemyProjectile projectile)
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xB23420", Offset = "0xB23420", VA = "0xB23420")]
		public void RegisterGroundAttack(GroundAttack groundAttack)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xB234B8", Offset = "0xB234B8", VA = "0xB234B8")]
		public void UnregisterGroundAttack(GroundAttack groundAttack)
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xB23550", Offset = "0xB23550", VA = "0xB23550")]
		public void CancelProjectileAttacks()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xB235E8", Offset = "0xB235E8", VA = "0xB235E8")]
		public void CancelGroundAttacks()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xB236BC", Offset = "0xB236BC", VA = "0xB236BC")]
		private void EnableAI(bool enable)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xB236DC", Offset = "0xB236DC", VA = "0xB236DC")]
		public Enemy()
		{
		}
	}
	[Token(Token = "0x2000217")]
	public class EnemyComponent : MonoBehaviour
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C022C", Offset = "0x8C022C")]
		public Enemy Enemy;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool isReady;

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xAFC7B4", Offset = "0xAFC7B4", VA = "0xAFC7B4", Slot = "4")]
		public virtual void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xAFC7E4", Offset = "0xAFC7E4", VA = "0xAFC7E4", Slot = "5")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xAFC844", Offset = "0xAFC844", VA = "0xAFC844")]
		public EnemyComponent()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class EnemyHeart : EnemyComponent, IResourceLoadHandler<EnemyHeartRig>, IResourceLoadHandler
	{
		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0264", Offset = "0x8C0264")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ResourceRequestKey _heartRigKey;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _heartRigParent;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CrushableHeart _heart;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable horrorHasRevived;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C02F0", Offset = "0x8C02F0")]
		[SerializeField]
		private BoolVariable _crushStartTrigger;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BoolVariable _grabTrigger;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private BoolVariable _isCrushing;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private BoolVariable _isGrabbing;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private BoolVariable _heartCrushed;

		[NonSerialized]
		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool _isExposed;

		[NonSerialized]
		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _isRegistered;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xAFC84C", Offset = "0xAFC84C", VA = "0xAFC84C", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xAFC928", Offset = "0xAFC928", VA = "0xAFC928")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xAFCADC", Offset = "0xAFCADC", VA = "0xAFCADC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xAFC87C", Offset = "0xAFC87C", VA = "0xAFC87C")]
		public void LoadHeartRig()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xAFCC8C", Offset = "0xAFCC8C", VA = "0xAFCC8C", Slot = "6")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xAFC92C", Offset = "0xAFC92C", VA = "0xAFC92C")]
		private void Register()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xAFCAE0", Offset = "0xAFCAE0", VA = "0xAFCAE0")]
		private void Unregister()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xAFCDE0", Offset = "0xAFCDE0", VA = "0xAFCDE0")]
		public void ExposeHeart()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xAFCE1C", Offset = "0xAFCE1C", VA = "0xAFCE1C")]
		public void RecoverHeart()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xAFCE6C", Offset = "0xAFCE6C", VA = "0xAFCE6C")]
		public void SetBool(BoolVariable variable, bool value)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xAFCEF0", Offset = "0xAFCEF0", VA = "0xAFCEF0")]
		private void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xAFCF84", Offset = "0xAFCF84", VA = "0xAFCF84")]
		private void GrabEnd(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xAFD008", Offset = "0xAFD008", VA = "0xAFD008")]
		private void HeartCrushStart()
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xAFD09C", Offset = "0xAFD09C", VA = "0xAFD09C")]
		private void HeartCrushCancel()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xAFD120", Offset = "0xAFD120", VA = "0xAFD120")]
		private void HeartCrushed()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xAFD1B4", Offset = "0xAFD1B4", VA = "0xAFD1B4", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xAFD23C", Offset = "0xAFD23C", VA = "0xAFD23C")]
		public EnemyHeart()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class EnemyIKLODController : EnemyComponent
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C037C", Offset = "0x8C037C")]
		[SerializeField]
		private NPCHeadLookIK _npcHeadLookIK;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FullBodyBipedIK _fullBodyBipedIK;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LookAtIK _lookAtIK;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C03E8", Offset = "0x8C03E8")]
		[SerializeField]
		private XRTrackedNode _playerHeadNode;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0434", Offset = "0x8C0434")]
		[SerializeField]
		private float _disableDistance;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0480", Offset = "0x8C0480")]
		[SerializeField]
		private BoolVariable _debugIKEnabled;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C04CC", Offset = "0x8C04CC")]
		[SerializeField]
		private bool _isEnabled;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xAFD244", Offset = "0xAFD244", VA = "0xAFD244", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xAFD274", Offset = "0xAFD274", VA = "0xAFD274")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xAFD330", Offset = "0xAFD330", VA = "0xAFD330")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xAFD488", Offset = "0xAFD488", VA = "0xAFD488")]
		private void KillStart()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xAFD494", Offset = "0xAFD494", VA = "0xAFD494")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xAFD414", Offset = "0xAFD414", VA = "0xAFD414")]
		private void SetIKEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xAFD654", Offset = "0xAFD654", VA = "0xAFD654")]
		public EnemyIKLODController()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class EnemyLeapController : EnemyComponent
	{
		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB05C", Offset = "0x8AB05C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool finishedTakeOff;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool finishedLanding;

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xAFD7EC", Offset = "0xAFD7EC", VA = "0xAFD7EC")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6001CD8")]
			[Address(RVA = "0xAFD7F4", Offset = "0xAFD7F4", VA = "0xAFD7F4")]
			internal void <DoLeapCoroutine>b__0(bool success)
			{
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xAFD800", Offset = "0xAFD800", VA = "0xAFD800")]
			internal void <DoLeapCoroutine>b__1(bool success)
			{
			}
		}

		[Token(Token = "0x20004E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB06C", Offset = "0x8AB06C")]
		private sealed class <DoLeapCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EnemyLeapController <>4__this;

			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AttackSequence takeOffSequence;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass5_0 <>8__1;

			[Token(Token = "0x40020D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Transform target;

			[Token(Token = "0x40020D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float moveRate;

			[Token(Token = "0x40020D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public AttackSequence landSequence;

			[Token(Token = "0x40020D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public float collisionRestoreDelay;

			[Token(Token = "0x40020D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public bool enableNavMesh;

			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<bool> onLandFinished;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3 <initialPos>5__2;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private Quaternion <initialRot>5__3;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float <timeToArrive>5__4;

			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private float <time>5__5;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
			private bool <isCollisionEnabled>5__6;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float <landingTime>5__7;

			[Token(Token = "0x17000467")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDD")]
				[Address(RVA = "0xAFDE14", Offset = "0xAFDE14", VA = "0xAFDE14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000468")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDF")]
				[Address(RVA = "0xAFDE7C", Offset = "0xAFDE7C", VA = "0xAFDE7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDA")]
			[Address(RVA = "0xAFD7B8", Offset = "0xAFD7B8", VA = "0xAFD7B8")]
			[DebuggerHidden]
			public <DoLeapCoroutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xAFD80C", Offset = "0xAFD80C", VA = "0xAFD80C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xAFD810", Offset = "0xAFD810", VA = "0xAFD810", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDE")]
			[Address(RVA = "0xAFDE1C", Offset = "0xAFDE1C", VA = "0xAFDE1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AttackTimelinePlayer _attackTimelinePlayer;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyMover _enemyMover;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NavMeshAgent _navMeshAgent;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isLeaping;

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xAFD66C", Offset = "0xAFD66C", VA = "0xAFD66C")]
		public void DoLeap(AttackSequence takeOffSequence, AttackSequence landSequence, Transform target, bool enableNavMesh, float moveRate, float collisionRestoreDelay, [Optional] Action<bool> onLandFinished)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xAFD6B0", Offset = "0xAFD6B0", VA = "0xAFD6B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E12AC", Offset = "0x8E12AC")]
		private IEnumerator DoLeapCoroutine(AttackSequence takeOffSequence, AttackSequence landSequence, Transform target, bool enableNavMesh, float moveRate, float collisionRestoreDelay, [Optional] Action<bool> onLandFinished)
		{
			return null;
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xAFD7E4", Offset = "0xAFD7E4", VA = "0xAFD7E4")]
		public EnemyLeapController()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A29C0", Offset = "0x8A29C0")]
	public class EnemyManager : RuntimeCollection<Enemy>, IResourceLoadHandler<EnemyHealthRendererBase>, IResourceLoadHandler
	{
		[Token(Token = "0x20004E9")]
		private struct EnemyHealthBar
		{
			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsAssigned;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool IsCleaningUp;

			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Enemy Enemy;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EnemyHealthMeterInstanced HealthBar;

			[Token(Token = "0x6001CE0")]
			[Address(RVA = "0x9662FC", Offset = "0x9662FC", VA = "0x9662FC")]
			public void Reset()
			{
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0x966334", Offset = "0x966334", VA = "0x966334")]
			public int CompareTo(EnemyHealthBar other)
			{
				return default(int);
			}
		}

		[Serializable]
		[Token(Token = "0x20004EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB07C", Offset = "0x8AB07C")]
		private sealed class <>c
		{
			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__45_0;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<object> <>9__45_1;

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xAFF73C", Offset = "0xAFF73C", VA = "0xAFF73C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xAFF744", Offset = "0xAFF744", VA = "0xAFF744")]
			internal void <.ctor>b__45_0(object o)
			{
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xAFF7CC", Offset = "0xAFF7CC", VA = "0xAFF7CC")]
			internal void <.ctor>b__45_1(object o)
			{
			}
		}

		[Token(Token = "0x4000C70")]
		private const int PIP_MAX = 500;

		[Token(Token = "0x4000C71")]
		private const int GUARD_BAR_MAX = 5;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyHealthMeterInstanced healthMeterPrefab;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GlobalEvent onLastEnemyKilled;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntVariable enemyCount;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ClaymoreEntityVariable playerEntity;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool UseFlattenedGraphs;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0578", Offset = "0x8C0578")]
		[SerializeField]
		private EncounterDatabase encounterDatabase;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C05C4", Offset = "0x8C05C4")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ResourceRequestKey enemyHealthRendererKey;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0620", Offset = "0x8C0620")]
		[SerializeField]
		private BoolVariable playerSeated;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVariable seatedRadius;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FloatVariable standingRadius;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVariable dodgeDist;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FloatVariable seatedDodgeDist;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatVariable standingDodgeDist;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C06BC", Offset = "0x8C06BC")]
		[SerializeField]
		private PlayerHealthAnalyticsEvent encounterCompleteAnalyticsEvent;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlayerArmamentAnalyticsEvent encounterCompleteArmamentAnalyticsEvent;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C0718", Offset = "0x8C0718")]
		[SerializeField]
		private QuickButton wreckAllFools;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C0750", Offset = "0x8C0750")]
		[SerializeField]
		private QuickButton hurtAllFools;

		[NonSerialized]
		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RendererDrawingData healthDrawingData;

		[NonSerialized]
		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RendererDrawingData guardDrawingData;

		[NonSerialized]
		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private EnemyHealthRendererBase enemyHealthRenderer;

		[NonSerialized]
		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly EnemyHealthBar[] enemyHealthBars;

		[NonSerialized]
		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private MaterialPropertyBlock propertyBlock;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0798", Offset = "0x8C0798")]
		private float <CurrentChallenge>k__BackingField;

		[Token(Token = "0x1700013A")]
		public float CurrentChallenge
		{
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0xAFDFCC", Offset = "0xAFDFCC", VA = "0xAFDFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1330", Offset = "0x8E1330")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C77")]
			[Address(RVA = "0xAFDFD4", Offset = "0xAFDFD4", VA = "0xAFDFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1340", Offset = "0x8E1340")]
			private set
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action OnReady
		{
			[Token(Token = "0x6000C74")]
			[Address(RVA = "0xAFDE84", Offset = "0xAFDE84", VA = "0xAFDE84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1310", Offset = "0x8E1310")]
			add
			{
			}
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0xAFDF28", Offset = "0xAFDF28", VA = "0xAFDF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1320", Offset = "0x8E1320")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xAFDFDC", Offset = "0xAFDFDC", VA = "0xAFDFDC")]
		public void KillAll()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xAFE07C", Offset = "0xAFE07C", VA = "0xAFE07C")]
		public void HurtAll()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xAFE11C", Offset = "0xAFE11C", VA = "0xAFE11C")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xAFE24C", Offset = "0xAFE24C", VA = "0xAFE24C")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xAFE2E8", Offset = "0xAFE2E8", VA = "0xAFE2E8")]
		private void OnPlayerSeatedChanged(bool seated)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xAFE38C", Offset = "0xAFE38C", VA = "0xAFE38C")]
		private void SetPlayerSeated(Enemy enemy, bool seated)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xAFE494", Offset = "0xAFE494", VA = "0xAFE494", Slot = "6")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xAFE67C", Offset = "0xAFE67C", VA = "0xAFE67C")]
		private void SortEnemyHealthBars()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xAFEA20", Offset = "0xAFEA20", VA = "0xAFEA20")]
		public void DrawGuardHealth()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xAFECD0", Offset = "0xAFECD0", VA = "0xAFECD0", Slot = "4")]
		public override void AddItem(Enemy item)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xAFF018", Offset = "0xAFF018", VA = "0xAFF018")]
		private void OnMeterDestroyed(EnemyHealthMeterInstanced destroyedMeter)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xAFF1B8", Offset = "0xAFF1B8", VA = "0xAFF1B8", Slot = "5")]
		public override void RemoveItem(Enemy item)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xAFF4C8", Offset = "0xAFF4C8", VA = "0xAFF4C8")]
		public EnemyManager()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class EnemyMover : EnemyComponent
	{
		[Token(Token = "0x20004EB")]
		private enum ObscureType
		{
			[Token(Token = "0x40020E8")]
			Avoidance,
			[Token(Token = "0x40020E9")]
			LineOfSight
		}

		[Token(Token = "0x20004EC")]
		public enum MoveMode
		{
			[Token(Token = "0x40020EB")]
			Strafing,
			[Token(Token = "0x40020EC")]
			Pathing,
			[Token(Token = "0x40020ED")]
			None
		}

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C07A8", Offset = "0x8C07A8")]
		[SerializeField]
		private NavMeshAgent agent;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private NPCCombatantDefinition combatantDef;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Rigidbody rigidbody;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0824", Offset = "0x8C0824")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C0824", Offset = "0x8C0824")]
		[SerializeField]
		private MecanimParameterReference forwardMoveParam;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C0894", Offset = "0x8C0894")]
		[SerializeField]
		private MecanimParameterReference strafeMoveParam;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C08E0", Offset = "0x8C08E0")]
		[SerializeField]
		private MecanimParameterReference moveMagnitudeParam;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C092C", Offset = "0x8C092C")]
		[SerializeField]
		private MecanimParameterReference ignorePlayerMinDistance;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0978", Offset = "0x8C0978")]
		[SerializeField]
		private DistanceThreshold strafeGoalThreshold;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float strafeDistanceThreshold;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private InstancedIntVariable engagementFitness;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C09E4", Offset = "0x8C09E4")]
		[SerializeField]
		private InstancedBoolVariable ticketIsLocked;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private InstancedFloatVariable playerToEnemyAngle;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private InstancedBoolVariable hasLineOfAttack;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C0A50", Offset = "0x8C0A50")]
		[SerializeField]
		private float moveModeMinDuration;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0A88", Offset = "0x8C0A88")]
		[SerializeField]
		private InstancedBoolVariable beingKnockedBack;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float defaultKnockbackRate;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0AE4", Offset = "0x8C0AE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0AE4", Offset = "0x8C0AE4")]
		public bool SuppressAnimatorMovement;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private InstancedFloatVariable minDistanceFromTarget;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private InstancedBoolVariable canGetToTargetRange;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0B64", Offset = "0x8C0B64")]
		[SerializeField]
		private Collider[] attackBlockingColliders;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private float angleIncrement;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private float maxAbsOffset;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0BD0", Offset = "0x8C0BD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0BD0", Offset = "0x8C0BD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C0BD0", Offset = "0x8C0BD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C0BD0", Offset = "0x8C0BD0")]
		[SerializeField]
		private float locomotionMaxBlendSpeed;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0C88", Offset = "0x8C0C88")]
		[SerializeField]
		private float moveStopDuration;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0CD4", Offset = "0x8C0CD4")]
		[SerializeField]
		private CapsuleCollider avoidanceCapsule;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private LayerMask avoidanceMask;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0D30", Offset = "0x8C0D30")]
		[SerializeField]
		private float avoidanceMag;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0D7C", Offset = "0x8C0D7C")]
		[SerializeField]
		private float engagedAvoidanceMag;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private float avoidanceRadius;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private float engagedAvoidanceRadius;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0DE8", Offset = "0x8C0DE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0DE8", Offset = "0x8C0DE8")]
		[SerializeField]
		private LayerMask physicalMask;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private ExposedTransformPoint lineOfAttackSource;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private float lineOfAttackRadius;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C0E78", Offset = "0x8C0E78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C0E78", Offset = "0x8C0E78")]
		[SerializeField]
		private float lineOfMovementRadius;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0EE8", Offset = "0x8C0EE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0EE8", Offset = "0x8C0EE8")]
		[SerializeField]
		private float maxProgramaticRotationRate;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0F58", Offset = "0x8C0F58")]
		[SerializeField]
		private float slowRotationThreshold;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private AnimationCurve slowRotationCurve;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private InstancedBoolVariable isAutoRotating_out;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C0FC4", Offset = "0x8C0FC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C0FC4", Offset = "0x8C0FC4")]
		[SerializeField]
		private float RotationUnstickDuration;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private AnimationCurve RotationUnstickCurve;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private bool StickAfterAutorotaionDisable;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[SerializeField]
		private float lockFrameExceptionAngle;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1064", Offset = "0x8C1064")]
		public bool showDebugDisplay;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Transform debugDisplayAnchor;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool doDebugLogging;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C109C", Offset = "0x8C109C")]
		private bool <MatchingTargetDistance>k__BackingField;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10AC", Offset = "0x8C10AC")]
		private bool <AtTargetDistance>k__BackingField;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10BC", Offset = "0x8C10BC")]
		private bool <ClearNavPathToGoal>k__BackingField;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10CC", Offset = "0x8C10CC")]
		private bool <IsMoveStopping>k__BackingField;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10DC", Offset = "0x8C10DC")]
		private bool <IsDeltaSuppressed>k__BackingField;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10EC", Offset = "0x8C10EC")]
		private Transform <BoundTransform>k__BackingField;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C10FC", Offset = "0x8C10FC")]
		private Vector3 <LastClearWorldDirection>k__BackingField;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C110C", Offset = "0x8C110C")]
		private PlayerNavMeshSample <PlayerPosition>k__BackingField;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private FightTicket ticket;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Targetable currentTarget;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private DistanceThreshold targetDistance;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private bool requireLoAForMovement;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C5")]
		private bool rotationWhileStoppedSuppressed;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private int currentAvoidanceObjectCount;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private int currentPathAvoidanceObjectCount;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 pendingPushIncrement;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private bool inStasis;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Vector3 worldLocomotionDirection;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float moveStopStartTime;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private Vector3 moveStopInitialLocoBlend;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Vector3 lastLoAConfirmedPosition;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastRequiredLoASuccessTime;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private MoveMode currentMoveMode;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private MoveMode nextMoveMode;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float nextMoveModeChangeTime;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private bool strafeRight;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float lookAtTargetTime;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float stickTime;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Renderer debugBall;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float strafeEndTime;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private Vector3 strafeDest;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private Vector3 debugLoAOrigin;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector3 debugLoADest;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Color debugLoAColor;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private bool drawLoADebug;

		[Token(Token = "0x1700013B")]
		public bool MatchingTargetDistance
		{
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xAFF854", Offset = "0xAFF854", VA = "0xAFF854")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1350", Offset = "0x8E1350")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C86")]
			[Address(RVA = "0xAFF85C", Offset = "0xAFF85C", VA = "0xAFF85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1360", Offset = "0x8E1360")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool AtTargetDistance
		{
			[Token(Token = "0x6000C87")]
			[Address(RVA = "0xAFF868", Offset = "0xAFF868", VA = "0xAFF868")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1370", Offset = "0x8E1370")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C88")]
			[Address(RVA = "0xAFF870", Offset = "0xAFF870", VA = "0xAFF870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1380", Offset = "0x8E1380")]
			private set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public bool IsEngaged
		{
			[Token(Token = "0x6000C89")]
			[Address(RVA = "0xAFF87C", Offset = "0xAFF87C", VA = "0xAFF87C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		public float AvoidanceRadius
		{
			[Token(Token = "0x6000C8A")]
			[Address(RVA = "0xAFF89C", Offset = "0xAFF89C", VA = "0xAFF89C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700013F")]
		public Vector3 AnimLocomotionDir
		{
			[Token(Token = "0x6000C8B")]
			[Address(RVA = "0xAFF8B8", Offset = "0xAFF8B8", VA = "0xAFF8B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000140")]
		public float PlayerToEnemyAngle
		{
			[Token(Token = "0x6000C8C")]
			[Address(RVA = "0xAFF8C4", Offset = "0xAFF8C4", VA = "0xAFF8C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public bool HasLineOfAttack
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xAFF914", Offset = "0xAFF914", VA = "0xAFF914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public FightTicket Ticket
		{
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xAFF97C", Offset = "0xAFF97C", VA = "0xAFF97C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xAFF984", Offset = "0xAFF984", VA = "0xAFF984")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public bool ClearNavPathToGoal
		{
			[Token(Token = "0x6000C90")]
			[Address(RVA = "0xAFF994", Offset = "0xAFF994", VA = "0xAFF994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1390", Offset = "0x8E1390")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C91")]
			[Address(RVA = "0xAFF99C", Offset = "0xAFF99C", VA = "0xAFF99C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13A0", Offset = "0x8E13A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public bool IsMoveStopping
		{
			[Token(Token = "0x6000C92")]
			[Address(RVA = "0xAFF9A8", Offset = "0xAFF9A8", VA = "0xAFF9A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13B0", Offset = "0x8E13B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C93")]
			[Address(RVA = "0xAFF9B0", Offset = "0xAFF9B0", VA = "0xAFF9B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13C0", Offset = "0x8E13C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public bool InStasis
		{
			[Token(Token = "0x6000C94")]
			[Address(RVA = "0xAFF9BC", Offset = "0xAFF9BC", VA = "0xAFF9BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C95")]
			[Address(RVA = "0xAFF9C4", Offset = "0xAFF9C4", VA = "0xAFF9C4")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public bool IsDeltaSuppressed
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xAFF9FC", Offset = "0xAFF9FC", VA = "0xAFF9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13D0", Offset = "0x8E13D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xAFFA04", Offset = "0xAFFA04", VA = "0xAFFA04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13E0", Offset = "0x8E13E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public bool IsStrafing
		{
			[Token(Token = "0x6000C98")]
			[Address(RVA = "0xAFFA10", Offset = "0xAFFA10", VA = "0xAFFA10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000148")]
		public bool RequiresLoAForMove
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0xAFFA40", Offset = "0xAFFA40", VA = "0xAFFA40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000149")]
		public MoveMode CurrentMoveMode
		{
			[Token(Token = "0x6000C9A")]
			[Address(RVA = "0xAFFA48", Offset = "0xAFFA48", VA = "0xAFFA48")]
			get
			{
				return default(MoveMode);
			}
		}

		[Token(Token = "0x1700014A")]
		public DistanceThreshold TargetDistance
		{
			[Token(Token = "0x6000C9B")]
			[Address(RVA = "0xAFFA50", Offset = "0xAFFA50", VA = "0xAFFA50")]
			get
			{
				return default(DistanceThreshold);
			}
		}

		[Token(Token = "0x1700014B")]
		public int CurrentObjectAvoidanceCount
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xAFFA64", Offset = "0xAFFA64", VA = "0xAFFA64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014C")]
		public int CurrentPathAvoidanceCount
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xAFFA6C", Offset = "0xAFFA6C", VA = "0xAFFA6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700014D")]
		public bool CanRotateWhileStopped
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xAFFA74", Offset = "0xAFFA74", VA = "0xAFFA74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014E")]
		public bool DoDebugLogging
		{
			[Token(Token = "0x6000C9F")]
			[Address(RVA = "0xAFFA84", Offset = "0xAFFA84", VA = "0xAFFA84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700014F")]
		public int EngagementFitness
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xAFFA8C", Offset = "0xAFFA8C", VA = "0xAFFA8C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000150")]
		public bool TicketIsLocked
		{
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xAFFACC", Offset = "0xAFFACC", VA = "0xAFFACC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000151")]
		public float DefaultKnockbackRate
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xAFFB0C", Offset = "0xAFFB0C", VA = "0xAFFB0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000152")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xAFFB14", Offset = "0xAFFB14", VA = "0xAFFB14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000153")]
		public NavMeshAgent Agent
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xAFFB1C", Offset = "0xAFFB1C", VA = "0xAFFB1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000154")]
		public Vector3 LastConfirmedPosWithLoA
		{
			[Token(Token = "0x6000CA5")]
			[Address(RVA = "0xAFFB24", Offset = "0xAFFB24", VA = "0xAFFB24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000155")]
		public Transform BoundTransform
		{
			[Token(Token = "0x6000CA6")]
			[Address(RVA = "0xAFFB34", Offset = "0xAFFB34", VA = "0xAFFB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E13F0", Offset = "0x8E13F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xAFFB3C", Offset = "0xAFFB3C", VA = "0xAFFB3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1400", Offset = "0x8E1400")]
			private set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public Vector3 LastClearWorldDirection
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xAFFB4C", Offset = "0xAFFB4C", VA = "0xAFFB4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1410", Offset = "0x8E1410")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000CA9")]
			[Address(RVA = "0xAFFB5C", Offset = "0xAFFB5C", VA = "0xAFFB5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1420", Offset = "0x8E1420")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public PlayerNavMeshSample PlayerPosition
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xAFFB6C", Offset = "0xAFFB6C", VA = "0xAFFB6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1430", Offset = "0x8E1430")]
			get
			{
				return default(PlayerNavMeshSample);
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xAFFB80", Offset = "0xAFFB80", VA = "0xAFFB80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1440", Offset = "0x8E1440")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		private EnemyAnimationData.JumpInfoSet jumpInfos
		{
			[Token(Token = "0x6000CAC")]
			[Address(RVA = "0xAFFB94", Offset = "0xAFFB94", VA = "0xAFFB94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xAFFBBC", Offset = "0xAFFBBC", VA = "0xAFFBBC", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xAFFF0C", Offset = "0xAFFF0C", VA = "0xAFFF0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xAFFFC0", Offset = "0xAFFFC0", VA = "0xAFFFC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xB00008", Offset = "0xB00008", VA = "0xB00008")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xB00028", Offset = "0xB00028", VA = "0xB00028")]
		public void RefreshLineOfAttackStatus()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xB005D8", Offset = "0xB005D8", VA = "0xB005D8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xB00620", Offset = "0xB00620", VA = "0xB00620")]
		public void RefreshClearWorldDirection()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xB01260", Offset = "0xB01260", VA = "0xB01260")]
		public void ProcessMovement()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xB01C84", Offset = "0xB01C84", VA = "0xB01C84")]
		public void RequestPush(Vector3 increment)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xB01C94", Offset = "0xB01C94", VA = "0xB01C94")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xB0236C", Offset = "0xB0236C", VA = "0xB0236C")]
		public void SetTarget(ClaymoreEntity target)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xB02494", Offset = "0xB02494", VA = "0xB02494")]
		public void SetTargetDistance(DistanceThreshold distance, bool requireLoA)
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xB02550", Offset = "0xB02550", VA = "0xB02550")]
		public TicketPriority GetTicketPriority()
		{
			return default(TicketPriority);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xB02568", Offset = "0xB02568", VA = "0xB02568")]
		public void StopMove(bool stopRotation)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xB02578", Offset = "0xB02578", VA = "0xB02578")]
		public void StopAutoRotationForDuration(float duration)
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xB025F4", Offset = "0xB025F4", VA = "0xB025F4")]
		public void SetAutoRotationActive(bool active)
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xB02664", Offset = "0xB02664", VA = "0xB02664")]
		public void StickRotation()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xB0268C", Offset = "0xB0268C", VA = "0xB0268C")]
		public bool StartStrafing(float maxDegrees, float timeout, bool invert)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xB02990", Offset = "0xB02990", VA = "0xB02990")]
		private Vector3 GetStrafeDest(Transform target, bool strafeRight, float maxDegrees)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xB0279C", Offset = "0xB0279C", VA = "0xB0279C")]
		private bool GetStrafeDirection(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xB02EF4", Offset = "0xB02EF4", VA = "0xB02EF4")]
		public bool TryCloseIn()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xB0337C", Offset = "0xB0337C", VA = "0xB0337C")]
		public bool TryLateralDisplacement()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xB03454", Offset = "0xB03454", VA = "0xB03454")]
		public TicketRequest GetNewTicketRequest()
		{
			return default(TicketRequest);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xB034A0", Offset = "0xB034A0", VA = "0xB034A0")]
		public bool TryDodge()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xB035AC", Offset = "0xB035AC", VA = "0xB035AC")]
		public bool CheckValidMoveRange(CheckValidMoveRangeNode.RangeQualifiedVariable range)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xB037C8", Offset = "0xB037C8", VA = "0xB037C8")]
		public bool CheckValidMoveRange(DistanceThreshold range)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xB039AC", Offset = "0xB039AC", VA = "0xB039AC")]
		public bool CheckValidMoveRange(DistanceThresholdVariable range)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xB03BC4", Offset = "0xB03BC4", VA = "0xB03BC4")]
		public bool TryFlipOver()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xB03C30", Offset = "0xB03C30", VA = "0xB03C30")]
		public bool TryDisengage()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xB019B4", Offset = "0xB019B4", VA = "0xB019B4")]
		private void DoRotation()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xB01830", Offset = "0xB01830", VA = "0xB01830")]
		private void DoRotateAndMove()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xB00664", Offset = "0xB00664", VA = "0xB00664")]
		private Vector3 FindClearWorldDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xB03DEC", Offset = "0xB03DEC", VA = "0xB03DEC")]
		public bool GetRangedPointWithLoA(Transform loaTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xB03E9C", Offset = "0xB03E9C", VA = "0xB03E9C")]
		public bool GetRangedPointWithLoA(Vector3 targetPosition, Vector3 initDirection, Vector3 forward)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xB0438C", Offset = "0xB0438C", VA = "0xB0438C")]
		private void SetAttackBlockers(bool enabled)
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xB02E1C", Offset = "0xB02E1C", VA = "0xB02E1C")]
		public Vector3 ClampToNavMesh(Vector3 worldPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB02C10", Offset = "0xB02C10", VA = "0xB02C10")]
		private bool PointIsObscured(Vector3 worldPos, ObscureType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB03DA4", Offset = "0xB03DA4", VA = "0xB03DA4")]
		private bool PosIsInvalidNavmesh(Vector3 worldPos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB00214", Offset = "0xB00214", VA = "0xB00214")]
		public bool LineOfAttackIsObstructed(Vector3 originPos, Vector3 targetPos, float dist, bool drawDebug = false, bool hideBlockers = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB030EC", Offset = "0xB030EC", VA = "0xB030EC")]
		private bool LineOfMovementIsObstructed(Vector3 pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xB03C9C", Offset = "0xB03C9C", VA = "0xB03C9C")]
		private void BlendTowards(Vector3 worldTravelDirection)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xB01678", Offset = "0xB01678", VA = "0xB01678")]
		private void BlendStop()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xB04430", Offset = "0xB04430", VA = "0xB04430")]
		private void UpdateAnimator()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xB044E0", Offset = "0xB044E0", VA = "0xB044E0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xB04C98", Offset = "0xB04C98", VA = "0xB04C98")]
		public EnemyMover()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class EnemyProjectile : ClaymoreEntity, IOffscreenIndicator
	{
		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Enemy _enemyCaster;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ProjectileAttackPlayable _sourcePlayable;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C111C", Offset = "0x8C111C")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private EnemyProjectileRegistry _enemyProjectileRegistry;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EnemyProjectileAsset _currentEnemyProjectileAsset;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1178", Offset = "0x8C1178")]
		[SerializeField]
		private CritType _critType;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ProjectileCritPointInstanced _currentCrit;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C11C4", Offset = "0x8C11C4")]
		[SerializeField]
		private LayerMask _interruptionMask;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float _interruptionSphereRadius;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float _playerHitSphereRadius;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SphereCollider _groundAttackCollider;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1240", Offset = "0x8C1240")]
		[SerializeField]
		private GameObject _projectile;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private VisualKeyData _onDestroyVFXKey;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ParticleSystem[] _projectileVFXs;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private TrailRenderer _trailRenderer;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C12BC", Offset = "0x8C12BC")]
		[SerializeField]
		private ProceduralAudio _proceduralAudio;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private AudioKeyData _onProjectileAwakeSFXKey;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioKeyData _onPlayerHitSFXKey;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioKeyData _onPlayerSuccessSFXKey;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private AudioKeyData _onEnvironmentHitSFXKey;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AudioKeyData _onTimeoutDestroySFXKey;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1358", Offset = "0x8C1358")]
		[SerializeField]
		private AchievementAsset _rangedBlocksAchievement;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C13A4", Offset = "0x8C13A4")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onProjectileHitPlayer;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onPlayerDestroyProjectile;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool _isAlive;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _startTime;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _moveRate;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float _showDistance;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float _strikingDistance;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool _isHoming;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		private bool _isAwake;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _awakeTime;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool _isCritShowing;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		private bool _isAtStrikingDistance;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 _origin;

		[Token(Token = "0x17000159")]
		public bool IsAlive
		{
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xB04DE0", Offset = "0xB04DE0", VA = "0xB04DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015A")]
		private bool SG.Claymore.Combat.IOffscreenIndicator.IsActive
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xB04DE8", Offset = "0xB04DE8", VA = "0xB04DE8", Slot = "23")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015B")]
		private float SG.Claymore.Combat.IOffscreenIndicator.StartTime
		{
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xB04E08", Offset = "0xB04E08", VA = "0xB04E08", Slot = "24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015C")]
		private float SG.Claymore.Combat.IOffscreenIndicator.Duration
		{
			[Token(Token = "0x6000CDD")]
			[Address(RVA = "0xB04E10", Offset = "0xB04E10", VA = "0xB04E10", Slot = "25")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700015D")]
		private Vector3 SG.Claymore.Combat.IOffscreenIndicator.Position
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0xB04EA4", Offset = "0xB04EA4", VA = "0xB04EA4", Slot = "26")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700015E")]
		private bool SG.Claymore.Combat.IOffscreenIndicator.CheckSideAngle
		{
			[Token(Token = "0x6000CDF")]
			[Address(RVA = "0xB04EC8", Offset = "0xB04EC8", VA = "0xB04EC8", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015F")]
		public override bool IgnoreWeaponCollision
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xB04ED0", Offset = "0xB04ED0", VA = "0xB04ED0", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000160")]
		public override float MovementRadius
		{
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xB04ED8", Offset = "0xB04ED8", VA = "0xB04ED8", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xB04EE0", Offset = "0xB04EE0", VA = "0xB04EE0", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xB04F98", Offset = "0xB04F98", VA = "0xB04F98")]
		private void SetCritResult(CritPointInstanced.CritResults result)
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xB050DC", Offset = "0xB050DC", VA = "0xB050DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xB05294", Offset = "0xB05294", VA = "0xB05294")]
		public void RaiseAttack(EnemyProjectileAsset enemyProjectileAsset)
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xB05618", Offset = "0xB05618", VA = "0xB05618")]
		private void OnEnemyCasterKilled()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xB058F4", Offset = "0xB058F4", VA = "0xB058F4")]
		private void StartHoming()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xB05A10", Offset = "0xB05A10", VA = "0xB05A10")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xB06634", Offset = "0xB06634", VA = "0xB06634")]
		private void CheckHomingBehavior()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xB05B50", Offset = "0xB05B50", VA = "0xB05B50")]
		private void DoCritState()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xB062D4", Offset = "0xB062D4", VA = "0xB062D4")]
		private void DoCheckIsStrikingDistance()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xB06454", Offset = "0xB06454", VA = "0xB06454")]
		private void DoBlockCheck()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xB05F58", Offset = "0xB05F58", VA = "0xB05F58")]
		private void DoMoveUpdate()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xB05DB8", Offset = "0xB05DB8", VA = "0xB05DB8")]
		private void DoLifeStateCheck()
		{
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xB069FC", Offset = "0xB069FC", VA = "0xB069FC")]
		private void CheckWorldCollision()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xB06CD4", Offset = "0xB06CD4", VA = "0xB06CD4")]
		private void CheckPlayerCollision()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xB0710C", Offset = "0xB0710C", VA = "0xB0710C")]
		public void TryCancel()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xB05620", Offset = "0xB05620", VA = "0xB05620")]
		public void DestroyItself(CritPointInstanced.CritResults critResult)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xB06E1C", Offset = "0xB06E1C", VA = "0xB06E1C")]
		private void DoPlayerDamage()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xB07400", Offset = "0xB07400", VA = "0xB07400", Slot = "18")]
		public override HitResult HandleHitCollision(ref HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xB067E0", Offset = "0xB067E0", VA = "0xB067E0")]
		private void OnPlayerDestroyProjectile()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xB074B8", Offset = "0xB074B8", VA = "0xB074B8")]
		public EnemyProjectile()
		{
		}
	}
	[Token(Token = "0x200021E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2A04", Offset = "0x8A2A04")]
	public class EnemyProjectileAsset : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectileAttackPlayable Source;

		[NonSerialized]
		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy Enemy;

		[NonSerialized]
		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 Origin;

		[NonSerialized]
		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 InitialDirection;

		[NonSerialized]
		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Damage;

		[NonSerialized]
		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float CritAngle;

		[NonSerialized]
		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float MoveRateMultiplier;

		[NonSerialized]
		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float KnockbackOnCritSucess;

		[NonSerialized]
		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float KnockbackOnCritFail;

		[NonSerialized]
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float PremonitionDuration;

		[NonSerialized]
		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float BlockAngleLeeway;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1438", Offset = "0x8C1438")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1438", Offset = "0x8C1438")]
		[SerializeField]
		private float _moveRate;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C14A8", Offset = "0x8C14A8")]
		[SerializeField]
		private float _lifetime;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _worldCollisionDeadTime;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _playerCollisionDeadTime;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FloatRange _homingPower;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _timeToMaxHomingRate;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1534", Offset = "0x8C1534")]
		[SerializeField]
		private AnimationCurve _rampUpHomingCurve;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float _showDistance;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float _strikingDistance;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float _preCritDuration;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C15B0", Offset = "0x8C15B0")]
		private List<PlayerHitProperty> <PlayerHitProperties>k__BackingField;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C15C0", Offset = "0x8C15C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C15C0", Offset = "0x8C15C0")]
		[SerializeField]
		private EnemyProjectileEntityDefinition _entityDefinition;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private CameraShakeRequestAsset _cameraShakeOnCritSuccess;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private CameraShakeRequestAsset _cameraShakeOnCritFail;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ScreenFlashRequestAsset _screenFlashOnCritSuccess;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ScreenFlashRequestAsset _screenFlashOnCritFail;

		[Token(Token = "0x17000161")]
		public float MoveRate
		{
			[Token(Token = "0x6000CF7")]
			[Address(RVA = "0xB074E4", Offset = "0xB074E4", VA = "0xB074E4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000162")]
		public float Lifetime
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0xB074EC", Offset = "0xB074EC", VA = "0xB074EC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000163")]
		public float WorldCollisionDeadTime
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0xB074F4", Offset = "0xB074F4", VA = "0xB074F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000164")]
		public float PlayerCollisionDeadTime
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0xB074FC", Offset = "0xB074FC", VA = "0xB074FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000165")]
		public FloatRange HomingPower
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xB07504", Offset = "0xB07504", VA = "0xB07504")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000166")]
		public float TimeToMaxHomingRate
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0xB0750C", Offset = "0xB0750C", VA = "0xB0750C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000167")]
		public AnimationCurve RampUpHomingCurve
		{
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0xB07514", Offset = "0xB07514", VA = "0xB07514")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000168")]
		public float ShowDistance
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0xB0751C", Offset = "0xB0751C", VA = "0xB0751C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000169")]
		public float StrikingDistance
		{
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0xB07524", Offset = "0xB07524", VA = "0xB07524")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016A")]
		public float PreCritDuration
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0xB0752C", Offset = "0xB0752C", VA = "0xB0752C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700016B")]
		public List<PlayerHitProperty> PlayerHitProperties
		{
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0xB07534", Offset = "0xB07534", VA = "0xB07534")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1450", Offset = "0x8E1450")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xB0753C", Offset = "0xB0753C", VA = "0xB0753C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1460", Offset = "0x8E1460")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public EnemyProjectileEntityDefinition ProjectileResourceKey
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xB07544", Offset = "0xB07544", VA = "0xB07544")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016D")]
		public CameraShakeRequestAsset CameraShakeOnCritSuccess
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xB0754C", Offset = "0xB0754C", VA = "0xB0754C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016E")]
		public CameraShakeRequestAsset CameraShakeOnCritFail
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xB07554", Offset = "0xB07554", VA = "0xB07554")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700016F")]
		public ScreenFlashRequestAsset ScreenFlashOnCritSuccess
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xB0755C", Offset = "0xB0755C", VA = "0xB0755C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000170")]
		public ScreenFlashRequestAsset ScreenFlashOnCritFail
		{
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xB07564", Offset = "0xB07564", VA = "0xB07564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xB0756C", Offset = "0xB0756C", VA = "0xB0756C")]
		public EnemyProjectileAsset()
		{
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2A64", Offset = "0x8A2A64")]
	public class EnemyProjectileEntityDefinition : ClaymoreEntityDefinition
	{
		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xB07630", Offset = "0xB07630", VA = "0xB07630")]
		public EnemyProjectileEntityDefinition()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public class EnemyProjectilePool : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		private class EnemyProjectileLoader : IResourceLoadHandler<EnemyProjectile>, IResourceLoadHandler
		{
			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly EnemyProjectileEntityDefinition _key;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly EnemyProjectilePool _poolController;

			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0xB078A0", Offset = "0xB078A0", VA = "0xB078A0")]
			public EnemyProjectileLoader(EnemyProjectileEntityDefinition key, EnemyProjectilePool poolController)
			{
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xB07A2C", Offset = "0xB07A2C", VA = "0xB07A2C", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyProjectileAssetGlobalEvent _enemyProjectileAssetGlobalEvent;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyProjectileGlobalEvent _enemyProjectileGlobalEvent;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private EnemyProjectileEntityDefinition[] _enemyProjectileKeys;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<EnemyProjectileEntityDefinition, CircularComponentPool<EnemyProjectile>> _enemyProjectilePool;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xB07638", Offset = "0xB07638", VA = "0xB07638")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xB076DC", Offset = "0xB076DC", VA = "0xB076DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xB07778", Offset = "0xB07778", VA = "0xB07778")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xB078F0", Offset = "0xB078F0", VA = "0xB078F0")]
		private void HandleProjectileRequest(EnemyProjectileAsset projectileAsset)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xB079B8", Offset = "0xB079B8", VA = "0xB079B8")]
		public EnemyProjectilePool()
		{
		}
	}
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2AC4", Offset = "0x8A2AC4")]
	public class EnemyProjectileRegistry : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<EnemyProjectile> _projectiles;

		[Token(Token = "0x17000171")]
		public List<EnemyProjectile> Projectiles
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xB07B7C", Offset = "0xB07B7C", VA = "0xB07B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xB05580", Offset = "0xB05580", VA = "0xB05580")]
		public void AddItem(EnemyProjectile item)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xB051FC", Offset = "0xB051FC", VA = "0xB051FC")]
		public void RemoveItem(EnemyProjectile item)
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xB07B84", Offset = "0xB07B84", VA = "0xB07B84")]
		public EnemyProjectileRegistry()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class EnemyProjectileSpawner : MonoBehaviour
	{
		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EnemyProjectileAssetGlobalEvent _enemyProjectileAssetGlobalEvent;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _shootingInterval;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _rotationLimit;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _damage;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _positionHelper;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EnemyProjectileAsset _projectileAsset;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _initialRotation;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 _endRotation;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _lastTimeSpawn;

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xB07C00", Offset = "0xB07C00", VA = "0xB07C00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xB07C38", Offset = "0xB07C38", VA = "0xB07C38")]
		public void Fire()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xB07CE4", Offset = "0xB07CE4", VA = "0xB07CE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xB07E00", Offset = "0xB07E00", VA = "0xB07E00")]
		public EnemyProjectileSpawner()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public sealed class EnemyVisuals : MonoBehaviour, ITransformMap, IRequiredAnimapperUpdate
	{
		[Serializable]
		[Token(Token = "0x20004EE")]
		public struct RigidbodyWeight
		{
			[Token(Token = "0x40020F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody Rigidbody;

			[Token(Token = "0x40020F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD870", Offset = "0x8DD870")]
			public float Weight;
		}

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1730", Offset = "0x8C1730")]
		[SerializeField]
		public Animapper animapper;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C177C", Offset = "0x8C177C")]
		[SerializeField]
		private ExposedTransformMap transformMap;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C17C8", Offset = "0x8C17C8")]
		[SerializeField]
		private UnityEngine.Avatar avatar;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1814", Offset = "0x8C1814")]
		[SerializeField]
		private LookAtIK lookAtIK;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ImportedBoneTracker[] boneTrackers;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1870", Offset = "0x8C1870")]
		[SerializeField]
		private Transform hitColliderRoot;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C18BC", Offset = "0x8C18BC")]
		[SerializeField]
		private Collider[] hitColliders;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1908", Offset = "0x8C1908")]
		[SerializeField]
		private PuppetMaster puppet;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1954", Offset = "0x8C1954")]
		[SerializeField]
		private Transform ragdollRoot;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C19A0", Offset = "0x8C19A0")]
		[SerializeField]
		private bool applyForceOnDeath;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RigidbodyWeight[] _uppercutBodies;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private RigidbodyWeight[] _hammerfistBodies;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private RigidbodyWeight[] _defaultBodies;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationClip dissolveClip;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float dissolveStartDelay;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float dissolveDuration;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private EnemyWeaponVisuals[] weapons;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ClaymoreProp[] props;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A6C", Offset = "0x8C1A6C")]
		[SerializeField]
		private EnemyKillData enemyKillData;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C1AB8", Offset = "0x8C1AB8")]
		[DebugOnly]
		private List<Component> allColliders;

		[NonSerialized]
		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Enemy enemy;

		[NonSerialized]
		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ClaymorePuppet claymorePuppet;

		[NonSerialized]
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isDying;

		[NonSerialized]
		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float killStartTime;

		[NonSerialized]
		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float deathBlendCompleteTime;

		[NonSerialized]
		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool deathBlendComplete;

		[NonSerialized]
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool hasDissolveClip;

		[Token(Token = "0x17000172")]
		public Transform RagdollRoot
		{
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xB080AC", Offset = "0xB080AC", VA = "0xB080AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000013")]
		public event Action OnDeathBlendComplete
		{
			[Token(Token = "0x6000D17")]
			[Address(RVA = "0xB07E1C", Offset = "0xB07E1C", VA = "0xB07E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1470", Offset = "0x8E1470")]
			add
			{
			}
			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xB07EC0", Offset = "0xB07EC0", VA = "0xB07EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1480", Offset = "0x8E1480")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public event Action OnDeathComplete
		{
			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xB07F64", Offset = "0xB07F64", VA = "0xB07F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1490", Offset = "0x8E1490")]
			add
			{
			}
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xB08008", Offset = "0xB08008", VA = "0xB08008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14A0", Offset = "0x8E14A0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xB080B4", Offset = "0xB080B4", VA = "0xB080B4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xB08140", Offset = "0xB08140", VA = "0xB08140")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xB081CC", Offset = "0xB081CC", VA = "0xB081CC")]
		public void SetOwner(Enemy e)
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xB08368", Offset = "0xB08368", VA = "0xB08368")]
		private void OnAfterBoneUpdate()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xB0844C", Offset = "0xB0844C", VA = "0xB0844C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xB08578", Offset = "0xB08578", VA = "0xB08578")]
		public int[] GetCollisionIDs()
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xB08660", Offset = "0xB08660", VA = "0xB08660", Slot = "4")]
		public Transform GetBoundTransform(ExposedTransformPoint point)
		{
			return null;
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xB0867C", Offset = "0xB0867C", VA = "0xB0867C", Slot = "5")]
		public bool ContainsPoint(ExposedTransformPoint point)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xB08698", Offset = "0xB08698", VA = "0xB08698", Slot = "6")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xB08704", Offset = "0xB08704", VA = "0xB08704")]
		public void PlayDeathAudio()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xB08950", Offset = "0xB08950", VA = "0xB08950")]
		public void Kill()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xB08AEC", Offset = "0xB08AEC", VA = "0xB08AEC")]
		public EnemyKillData.KillForceResult Kill(HitResult hit, Vector3 playerPos)
		{
			return default(EnemyKillData.KillForceResult);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xB089AC", Offset = "0xB089AC", VA = "0xB089AC")]
		private void StartKill()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xB08BB8", Offset = "0xB08BB8", VA = "0xB08BB8")]
		private void Kill(EnemyKillData.KillForceResult killResult)
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xB09020", Offset = "0xB09020", VA = "0xB09020")]
		private void DeathAnimationComplete()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xB09034", Offset = "0xB09034", VA = "0xB09034")]
		private void DeathComplete()
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xB0845C", Offset = "0xB0845C", VA = "0xB0845C")]
		private void DeathUpdate()
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xB09050", Offset = "0xB09050", VA = "0xB09050")]
		public EnemyVisuals()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class EnemyWeaponVisuals : MonoBehaviour
	{
		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B20", Offset = "0x8C1B20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B6C", Offset = "0x8C1B6C")]
		[SerializeField]
		private FloatRange weaponForceScaleRange;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1BB8", Offset = "0x8C1BB8")]
		[SerializeField]
		private float directionRandomness;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1C04", Offset = "0x8C1C04")]
		[SerializeField]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1C50", Offset = "0x8C1C50")]
		[SerializeField]
		private Joint joint;

		[NonSerialized]
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float originalBreakForce;

		[NonSerialized]
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform thisTransform;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xB0916C", Offset = "0xB0916C", VA = "0xB0916C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xB091D4", Offset = "0xB091D4", VA = "0xB091D4")]
		public void Restore()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xB08DE4", Offset = "0xB08DE4", VA = "0xB08DE4")]
		public void Drop()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xB083D0", Offset = "0xB083D0", VA = "0xB083D0")]
		public void UpdateTarget()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xB08E78", Offset = "0xB08E78", VA = "0xB08E78")]
		public void ApplyForce(Vector3 force)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xB09220", Offset = "0xB09220", VA = "0xB09220")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xB092B0", Offset = "0xB092B0", VA = "0xB092B0")]
		public EnemyWeaponVisuals()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class StopAutoRotationPlayable : ClaymoreCustomClip
	{
		[Token(Token = "0x20004EF")]
		public class RuntimeStopAutoRotation : RuntimeClaymoreClip
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xB094C0", Offset = "0xB094C0", VA = "0xB094C0")]
			public RuntimeStopAutoRotation(float startTime, float endTime)
			{
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xB09504", Offset = "0xB09504", VA = "0xB09504", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x17000173")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xB093F8", Offset = "0xB093F8", VA = "0xB093F8", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xB09340", Offset = "0xB09340", VA = "0xB09340", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xB09400", Offset = "0xB09400", VA = "0xB09400", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xB094FC", Offset = "0xB094FC", VA = "0xB094FC")]
		public StopAutoRotationPlayable()
		{
		}
	}
}
namespace SG.Claymore.Movement
{
	[Token(Token = "0x2000226")]
	public class MovementMode : MonoBehaviour
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected PlayerMover playerMover;

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xB1B940", Offset = "0xB1B940", VA = "0xB1B940")]
		public void Initialize(PlayerMover mover)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xB1B948", Offset = "0xB1B948", VA = "0xB1B948", Slot = "4")]
		public virtual float Rotate(float direction)
		{
			return default(float);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xB1B950", Offset = "0xB1B950", VA = "0xB1B950", Slot = "5")]
		public virtual Vector3 Move(Vector3 move)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xB1B9B0", Offset = "0xB1B9B0", VA = "0xB1B9B0", Slot = "6")]
		public virtual void Begin()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xB1B9B4", Offset = "0xB1B9B4", VA = "0xB1B9B4", Slot = "7")]
		public virtual void End()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xB1B9B8", Offset = "0xB1B9B8", VA = "0xB1B9B8")]
		public MovementMode()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class PlaySlowMotion : MonoBehaviour
	{
		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BinaryInputAction _slowMotionInputAction;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _isToggleMode;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C1CBC", Offset = "0x8C1CBC")]
		[SerializeField]
		private bool _isSlowMotioning;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TimeScaleController _timeScaleController;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TimeScaleRequest _timeScaleRequest;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolVariable _isSlowMotionEnabled;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int _currentRequestID;

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xB1B9C0", Offset = "0xB1B9C0", VA = "0xB1B9C0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xB1BA90", Offset = "0xB1BA90", VA = "0xB1BA90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xB1BB8C", Offset = "0xB1BB8C", VA = "0xB1BB8C")]
		private void OnSlowMotionInputDown()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xB1BC20", Offset = "0xB1BC20", VA = "0xB1BC20")]
		private void OnSlowMotionInputUp()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xB1BC7C", Offset = "0xB1BC7C", VA = "0xB1BC7C")]
		public PlaySlowMotion()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class PlayerMover : MonoBehaviour
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRPlatformManager XRPlatformManager;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1D28", Offset = "0x8C1D28")]
		public FloatVariable PlayerSpeedVariable;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1D60", Offset = "0x8C1D60")]
		public FloatVariable PlayerRotationSpeedVariable;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1D98", Offset = "0x8C1D98")]
		public WorldMover WorldMover;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1DD0", Offset = "0x8C1DD0")]
		public PlayerDash PlayerDash;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1E08", Offset = "0x8C1E08")]
		public TargetableGlobalEvent OnTargetChanged;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MovementMode currentMovementMode;

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xB1BC8C", Offset = "0xB1BC8C", VA = "0xB1BC8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xB1BCE0", Offset = "0xB1BCE0", VA = "0xB1BCE0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xB1BD84", Offset = "0xB1BD84", VA = "0xB1BD84")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xB1BE20", Offset = "0xB1BE20", VA = "0xB1BE20")]
		public void SetMode(MovementMode mode)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xB1BEA0", Offset = "0xB1BEA0", VA = "0xB1BEA0")]
		public void TargetChanged(Targetable target)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xB1BF7C", Offset = "0xB1BF7C", VA = "0xB1BF7C")]
		public PlayerMover()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class PlayerSpawnLocation : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB08C", Offset = "0x8AB08C")]
		private sealed class <>c
		{
			[Token(Token = "0x40020F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__10_0;

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xB1C454", Offset = "0xB1C454", VA = "0xB1C454")]
			public <>c()
			{
			}

			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0xB1C45C", Offset = "0xB1C45C", VA = "0xB1C45C")]
			internal void <.ctor>b__10_0(object input)
			{
			}
		}

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager LevelManager;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRPlatformManager Platform;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 position;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 forward;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C1E40", Offset = "0x8C1E40")]
		private QuickButton testSpawn;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TransformGlobalEvent onTeleportGlobalEvent;

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xB1BF84", Offset = "0xB1BF84", VA = "0xB1BF84")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xB1C008", Offset = "0xB1C008", VA = "0xB1C008")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xB1C154", Offset = "0xB1C154", VA = "0xB1C154")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xB1C22C", Offset = "0xB1C22C", VA = "0xB1C22C")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xB1C2CC", Offset = "0xB1C2CC", VA = "0xB1C2CC")]
		public PlayerSpawnLocation()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class PointOfInterest : EnemyComponent, IFindableTarget
	{
		[Token(Token = "0x20004F1")]
		public enum PointOfInterestDisplayToggle
		{
			[Token(Token = "0x40020F5")]
			Always,
			[Token(Token = "0x40020F6")]
			WhenSelected,
			[Token(Token = "0x40020F7")]
			None
		}

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PointOfInterestSet Set;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool OverrideMinDistanceToRotateTo;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C1E88", Offset = "0x8C1E88")]
		public float MinDistanceToRotateTo;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PointOfInterestDisplayToggle Display;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float GizmoScale;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xB1C4E4", Offset = "0xB1C4E4", VA = "0xB1C4E4", Slot = "6")]
		public Transform GetTargetTransform()
		{
			return null;
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xB1C4EC", Offset = "0xB1C4EC", VA = "0xB1C4EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xB1C510", Offset = "0xB1C510", VA = "0xB1C510")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xB1C534", Offset = "0xB1C534", VA = "0xB1C534")]
		private void GizmosDrawBeacon()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xB1C584", Offset = "0xB1C584", VA = "0xB1C584")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xB1C594", Offset = "0xB1C594", VA = "0xB1C594")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xB1C5A8", Offset = "0xB1C5A8", VA = "0xB1C5A8")]
		public PointOfInterest()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class PointOfInterestSet : RuntimeCollection<PointOfInterest>
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xB1C5B8", Offset = "0xB1C5B8", VA = "0xB1C5B8")]
		public PointOfInterestSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022C")]
	public class WalkSpeedConfiguration
	{
		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1EC0", Offset = "0x8C1EC0")]
		public float MaxMoveSpeed;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1EF8", Offset = "0x8C1EF8")]
		public AnimationCurve SpeedScaleByDirection;

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xB1C608", Offset = "0xB1C608", VA = "0xB1C608")]
		public WalkSpeedConfiguration()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class WorldMover : MovementMode
	{
		[Serializable]
		[Token(Token = "0x20004F2")]
		public class GlobalEventToFloat
		{
			[Token(Token = "0x40020F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GlobalEvent Event;

			[Token(Token = "0x40020F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float Value;

			[Token(Token = "0x40020FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<float> Action;

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xB1FE14", Offset = "0xB1FE14", VA = "0xB1FE14")]
			public void Raise()
			{
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xB1C948", Offset = "0xB1C948", VA = "0xB1C948")]
			public void Register(Action<float> action)
			{
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xB1CC5C", Offset = "0xB1CC5C", VA = "0xB1CC5C")]
			public void Unregister()
			{
			}

			[Token(Token = "0x6001CF0")]
			[Address(RVA = "0xB1FE70", Offset = "0xB1FE70", VA = "0xB1FE70")]
			public GlobalEventToFloat()
			{
			}
		}

		[Token(Token = "0x20004F3")]
		private class TargetData
		{
			[Token(Token = "0x40020FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 Point;

			[Token(Token = "0x40020FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float Weight;

			[Token(Token = "0x40020FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float Angle;

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xB1FE78", Offset = "0xB1FE78", VA = "0xB1FE78")]
			public TargetData()
			{
			}
		}

		[Token(Token = "0x20004F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB09C", Offset = "0x8AB09C")]
		private sealed class <UpdateTurn>d__94 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldMover <>4__this;

			[Token(Token = "0x4002101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amount;

			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public PointOfInterest goal;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <sign>5__2;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <rate>5__3;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <lastRemaining>5__4;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <lastKnownGoal>5__5;

			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <elapsed>5__6;

			[Token(Token = "0x17000469")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF5")]
				[Address(RVA = "0xB1FA64", Offset = "0xB1FA64", VA = "0xB1FA64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF7")]
				[Address(RVA = "0xB1FACC", Offset = "0xB1FACC", VA = "0xB1FACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF2")]
			[Address(RVA = "0xB1DD2C", Offset = "0xB1DD2C", VA = "0xB1DD2C")]
			[DebuggerHidden]
			public <UpdateTurn>d__94(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xB1F5D0", Offset = "0xB1F5D0", VA = "0xB1F5D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xB1F5D4", Offset = "0xB1F5D4", VA = "0xB1F5D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF6")]
			[Address(RVA = "0xB1FA6C", Offset = "0xB1FA6C", VA = "0xB1FA6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0AC", Offset = "0x8AB0AC")]
		private sealed class <UpdateTurn>d__95 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WorldMover <>4__this;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float amount;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <total>5__2;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <sign>5__3;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <rate>5__4;

			[Token(Token = "0x1700046B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFB")]
				[Address(RVA = "0xB1FDA4", Offset = "0xB1FDA4", VA = "0xB1FDA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFD")]
				[Address(RVA = "0xB1FE0C", Offset = "0xB1FE0C", VA = "0xB1FE0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0xB1DD58", Offset = "0xB1DD58", VA = "0xB1DD58")]
			[DebuggerHidden]
			public <UpdateTurn>d__95(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xB1FAD4", Offset = "0xB1FAD4", VA = "0xB1FAD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xB1FAD8", Offset = "0xB1FAD8", VA = "0xB1FAD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFC")]
			[Address(RVA = "0xB1FDAC", Offset = "0xB1FDAC", VA = "0xB1FDAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1F30", Offset = "0x8C1F30")]
		public XRTrackedNode HeadNode;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1F68", Offset = "0x8C1F68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1F68", Offset = "0x8C1F68")]
		public LevelManager LevelManager;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1FC8", Offset = "0x8C1FC8")]
		public IntVariable PlayerMovementSuppression;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2000", Offset = "0x8C2000")]
		public IntVariable PlayerWalkSuppression;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2038", Offset = "0x8C2038")]
		public Vector2InputAction MoveAxis;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2070", Offset = "0x8C2070")]
		public float MoveAxisZone;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C20A8", Offset = "0x8C20A8")]
		public BinaryInputAction ResampleAction;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C20E0", Offset = "0x8C20E0")]
		public BoolVariable AlwaysResample;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2118", Offset = "0x8C2118")]
		public float MinMoveSpeed;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2150", Offset = "0x8C2150")]
		public float MaxMoveSpeed;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2188", Offset = "0x8C2188")]
		public IntVariable WalkSpeedSettings;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C21C0", Offset = "0x8C21C0")]
		public WalkSpeedConfiguration[] WalkSpeedConfigurations;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C21F8", Offset = "0x8C21F8")]
		public float DefaultStickSuspendRestoreAngle;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2230", Offset = "0x8C2230")]
		public float SuspendStickMaxTime;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2268", Offset = "0x8C2268")]
		public AnimationCurve SpeedCurve;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C22A0", Offset = "0x8C22A0")]
		public AnimationCurve SpeedScaleByDirection;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C22D8", Offset = "0x8C22D8")]
		public float AccelerationTime;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2310", Offset = "0x8C2310")]
		public AnimationCurve AccelerationCurve;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2348", Offset = "0x8C2348")]
		public float DecelerationTime;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2380", Offset = "0x8C2380")]
		public AnimationCurve DecelerationCurve;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C23B8", Offset = "0x8C23B8")]
		public RechargingFloat CombatSlowing;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C23F0", Offset = "0x8C23F0")]
		public List<GlobalEventToFloat> CombatSlowingEvents;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2428", Offset = "0x8C2428")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2428", Offset = "0x8C2428")]
		public BoolVariable AutoCircleTarget;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2488", Offset = "0x8C2488")]
		public float MinCircleSpeed;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C24C0", Offset = "0x8C24C0")]
		public float MaxCircleSpeed;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C24F8", Offset = "0x8C24F8")]
		public AnimationCurve StrafeBlending;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2530", Offset = "0x8C2530")]
		public float StrafeBlendEndDistance;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2568", Offset = "0x8C2568")]
		public float StrafeBlendStartDistance;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C25A0", Offset = "0x8C25A0")]
		public AnimationCurve StrafeDistanceBlend;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C25D8", Offset = "0x8C25D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C25D8", Offset = "0x8C25D8")]
		public bool DoEnvironmentSlowing;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2638", Offset = "0x8C2638")]
		public float ThrottleMinDistance;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2670", Offset = "0x8C2670")]
		public float ThrottleStartDistance;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C26A8", Offset = "0x8C26A8")]
		public float ThrottleMinSpeed;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C26E0", Offset = "0x8C26E0")]
		public float WallSlowRecoverTime;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2718", Offset = "0x8C2718")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2718", Offset = "0x8C2718")]
		public BoolVariable SmoothTurning;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2778", Offset = "0x8C2778")]
		public IntVariable PlayerRotationSuppression;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C27B0", Offset = "0x8C27B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C27B0", Offset = "0x8C27B0")]
		public float MinRotationThreshold;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2810", Offset = "0x8C2810")]
		public Vector2InputAction RotateAxis;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2848", Offset = "0x8C2848")]
		public AnimationCurve RotationRate;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FloatVariable RotationSpeed;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2880", Offset = "0x8C2880")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2880", Offset = "0x8C2880")]
		public BinaryInputAction RotateLeft;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C28E0", Offset = "0x8C28E0")]
		public BinaryInputAction RotateRight;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2918", Offset = "0x8C2918")]
		public float RotateDuration;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2950", Offset = "0x8C2950")]
		[SerializeField]
		private float recalculateRotateRateDurationThreshold;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C299C", Offset = "0x8C299C")]
		public float RotateAmount;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C29D4", Offset = "0x8C29D4")]
		public bool ResampleAfterRotate;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2A0C", Offset = "0x8C2A0C")]
		public bool SmartRotate;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2A44", Offset = "0x8C2A44")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2A44", Offset = "0x8C2A44")]
		public bool RotateChasing;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2AA4", Offset = "0x8C2AA4")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2AA4", Offset = "0x8C2AA4")]
		public PointOfInterestSet PointsOfInterest;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2B04", Offset = "0x8C2B04")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2B04", Offset = "0x8C2B04")]
		public float MinDistanceForSmartSnap;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2B64", Offset = "0x8C2B64")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2B64", Offset = "0x8C2B64")]
		public float MinAngleForSmartSnap;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2BC4", Offset = "0x8C2BC4")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2BC4", Offset = "0x8C2BC4")]
		public float MaxRotateAmount;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2C24", Offset = "0x8C2C24")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2C24", Offset = "0x8C2C24")]
		public Arc[] SmartSnapRanges;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2C84", Offset = "0x8C2C84")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C2C84", Offset = "0x8C2C84")]
		public LayerMask LOSBlockLayerMask;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Coroutine turnCoroutine;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool isMoving;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Quaternion forwardQuat;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float moveChangeTimestamp;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector2 lastStick;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector2 decel;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Vector2 decelRamp;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool decelerating;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float wallSlowDamp;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Targetable circleTarget;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Targetable target;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool suspendStick;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private Vector3 suspendStickDirection;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float suspendStickStartTime;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float restoreSuspensionAngle;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<TargetData> debugTargets;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2CE4", Offset = "0x8C2CE4")]
		private bool <IsTurning>k__BackingField;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2CF4", Offset = "0x8C2CF4")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000174")]
		public bool IsTurning
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xB1C65C", Offset = "0xB1C65C", VA = "0xB1C65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14B0", Offset = "0x8E14B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xB1C664", Offset = "0xB1C664", VA = "0xB1C664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14C0", Offset = "0x8E14C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public bool IsActive
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xB1C670", Offset = "0xB1C670", VA = "0xB1C670")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14D0", Offset = "0x8E14D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xB1C678", Offset = "0xB1C678", VA = "0xB1C678")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E14E0", Offset = "0x8E14E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public Targetable Target
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xB1DEF0", Offset = "0xB1DEF0", VA = "0xB1DEF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xB1BEB8", Offset = "0xB1BEB8", VA = "0xB1BEB8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xB1C684", Offset = "0xB1C684", VA = "0xB1C684")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xB1C9F4", Offset = "0xB1C9F4", VA = "0xB1C9F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xB1CCEC", Offset = "0xB1CCEC", VA = "0xB1CCEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xB1CCF8", Offset = "0xB1CCF8", VA = "0xB1CCF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xB1CD00", Offset = "0xB1CD00", VA = "0xB1CD00")]
		private void StartTurn(float amount)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xB19800", Offset = "0xB19800", VA = "0xB19800")]
		public float GetAngleToLookAtPoint(Vector3 point, float dir)
		{
			return default(float);
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xB1D3E0", Offset = "0xB1D3E0", VA = "0xB1D3E0")]
		private void OnRotateLeft()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xB1D47C", Offset = "0xB1D47C", VA = "0xB1D47C")]
		private void OnRotateRight()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xB1D514", Offset = "0xB1D514", VA = "0xB1D514")]
		private void OnRotate(Vector2 amount)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xB1D868", Offset = "0xB1D868", VA = "0xB1D868")]
		private void OnWalkSpeedChanged(int newValue)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xB1D8DC", Offset = "0xB1D8DC", VA = "0xB1D8DC")]
		private void OnPlayerWalkSuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xB1D95C", Offset = "0xB1D95C", VA = "0xB1D95C")]
		private void OnPlayerRotateSuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xB1D9DC", Offset = "0xB1D9DC", VA = "0xB1D9DC")]
		private float GetArcScore(Arc arc, Pose origin, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xB1CE90", Offset = "0xB1CE90", VA = "0xB1CE90")]
		private PointOfInterest GetTarget(Arc[] arcs, Pose origin, Transform self, bool negate = false)
		{
			return null;
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xB1D2AC", Offset = "0xB1D2AC", VA = "0xB1D2AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E14F0", Offset = "0x8E14F0")]
		private IEnumerator UpdateTurn(float amount, PointOfInterest goal)
		{
			return null;
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xB1D354", Offset = "0xB1D354", VA = "0xB1D354")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1554", Offset = "0x8E1554")]
		private IEnumerator UpdateTurn(float amount)
		{
			return null;
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xB1DD84", Offset = "0xB1DD84", VA = "0xB1DD84")]
		public void SuspendStickMovement(float restoreAngleThreshold)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xB1B4F0", Offset = "0xB1B4F0", VA = "0xB1B4F0")]
		public void SuspendStickMovement()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xB18FBC", Offset = "0xB18FBC", VA = "0xB18FBC")]
		public void SampleForward()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xB197EC", Offset = "0xB197EC", VA = "0xB197EC")]
		public Vector3 GetMoveNormal(Vector2 stick)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xB1DEF8", Offset = "0xB1DEF8", VA = "0xB1DEF8")]
		public Vector3 GetMoveNormal(Vector2 stick, Quaternion forward)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xB1E00C", Offset = "0xB1E00C", VA = "0xB1E00C")]
		private void HandleMoveCheck(Vector3 move)
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xB1E37C", Offset = "0xB1E37C", VA = "0xB1E37C")]
		private float GetEnvironmentalMoveScale(Vector3 move)
		{
			return default(float);
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xB1E524", Offset = "0xB1E524", VA = "0xB1E524")]
		public void SetCombatSlowing(float m)
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xB1E540", Offset = "0xB1E540", VA = "0xB1E540")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xB1E7C8", Offset = "0xB1E7C8", VA = "0xB1E7C8")]
		private void UpdateMove(Vector2 input, float speedScale)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xB1EF30", Offset = "0xB1EF30", VA = "0xB1EF30")]
		private float GetSpeedScale(Vector2 stick, Vector3 move, float minSpeed, float maxSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xB1F0A0", Offset = "0xB1F0A0", VA = "0xB1F0A0")]
		private void UpdateMove(Vector2 stick)
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xB1F2E8", Offset = "0xB1F2E8", VA = "0xB1F2E8")]
		public WorldMover()
		{
		}
	}
}
namespace SG.Claymore.Movement.Dash
{
	[Serializable]
	[Token(Token = "0x200022E")]
	public class DashImpactDistanceRangeHitProperty
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private FloatRange _distanceRange;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2D14", Offset = "0x8C2D14")]
		[SerializeField]
		private List<HitProperty> _dashTargetHitProperties;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<HitProperty> _dashBlastHitProperties;

		[Token(Token = "0x17000177")]
		public List<HitProperty> DashTargetHitProperties
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xB16A7C", Offset = "0xB16A7C", VA = "0xB16A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000178")]
		public List<HitProperty> DashBlastHitProperties
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xB16A84", Offset = "0xB16A84", VA = "0xB16A84")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xB16A8C", Offset = "0xB16A8C", VA = "0xB16A8C")]
		public bool IsInRange(float distanceTraveled)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xB16AF4", Offset = "0xB16AF4", VA = "0xB16AF4")]
		public DashImpactDistanceRangeHitProperty()
		{
		}
	}
	[Token(Token = "0x200022F")]
	[DisallowMultipleComponent]
	public class DashLandingDistanceOverride : MonoBehaviour
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DashLandingDistanceOverrideRegistry _registry;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _distance;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C2D90", Offset = "0x8C2D90")]
		[SerializeField]
		private Collider[] _allColliders;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] _collisionIDs;

		[Token(Token = "0x17000179")]
		public float Distance
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xB16B9C", Offset = "0xB16B9C", VA = "0xB16B9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xB16BA4", Offset = "0xB16BA4", VA = "0xB16BA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xB16C88", Offset = "0xB16C88", VA = "0xB16C88")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xB16E4C", Offset = "0xB16E4C", VA = "0xB16E4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xB16F60", Offset = "0xB16F60", VA = "0xB16F60")]
		public DashLandingDistanceOverride()
		{
		}
	}
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2B34", Offset = "0x8A2B34")]
	public class DashLandingDistanceOverrideRegistry : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<DashLandingDistanceOverride> _dashOverrides;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, DashLandingDistanceOverride> _registry;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xB16CA8", Offset = "0xB16CA8", VA = "0xB16CA8")]
		public void AddItem(DashLandingDistanceOverride item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xB16E6C", Offset = "0xB16E6C", VA = "0xB16E6C")]
		public void RemoveItem(DashLandingDistanceOverride item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6000D86")]
		public T Get<T>(int id) where T : DashLandingDistanceOverride
		{
			return null;
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xB16FF0", Offset = "0xB16FF0", VA = "0xB16FF0")]
		public DashLandingDistanceOverrideRegistry()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class DashLandingPoint : MonoBehaviour
	{
		[Token(Token = "0x20004F6")]
		public enum DashLandingState
		{
			[Token(Token = "0x4002110")]
			Default,
			[Token(Token = "0x4002111")]
			Disabled,
			[Token(Token = "0x4002112")]
			Attack
		}

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AnimationCurve _alphaCurve;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _animationDuration;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _dashRenderer;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8C2DFC", Offset = "0x8C2DFC")]
		[SerializeField]
		protected MaterialPropertyReference _alphaParam;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8C2E48", Offset = "0x8C2E48")]
		[SerializeField]
		protected MaterialPropertyReference _stateParam;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8C2E94", Offset = "0x8C2E94")]
		[SerializeField]
		protected MaterialPropertyReference _animParam;

		[NonSerialized]
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private DashLandingState _currentState;

		[NonSerialized]
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _currentAlpha;

		[NonSerialized]
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _currentDuration;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xB170A0", Offset = "0xB170A0", VA = "0xB170A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xB171F0", Offset = "0xB171F0", VA = "0xB171F0")]
		public void SetAlphaFactor(float intensity)
		{
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xB17114", Offset = "0xB17114", VA = "0xB17114")]
		public void SetDashLandingState(DashLandingState newState)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xB172EC", Offset = "0xB172EC", VA = "0xB172EC")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xB1739C", Offset = "0xB1739C", VA = "0xB1739C")]
		public DashLandingPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000232")]
	public class DashTargeting
	{
		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2EE0", Offset = "0x8C2EE0")]
		[SerializeField]
		private BinaryInputAction _activateDashTargetingBinaryInput;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _isDashTargetingAlwaysOn;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable _settingsDashTargetingEnabled;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoolVariable _tutorialDashTargetingEnabled;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C2F5C", Offset = "0x8C2F5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2F5C", Offset = "0x8C2F5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2F5C", Offset = "0x8C2F5C")]
		[SerializeField]
		protected float _minDistanceToObstacle;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DashLandingDistanceOverrideRegistry _dashLandingDistanceOverrideRegistry;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2FEC", Offset = "0x8C2FEC")]
		[SerializeField]
		private float _sphereCastHeightOffset;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3038", Offset = "0x8C3038")]
		[SerializeField]
		private float _sphereCastRadius;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3084", Offset = "0x8C3084")]
		[SerializeField]
		private Arc[] _targetArcs;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C30D0", Offset = "0x8C30D0")]
		[SerializeField]
		private TargetSet targets;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Targetable _currentTarget;

		[NonSerialized]
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private LayerMask _dashObstacleLayerMask;

		[Token(Token = "0x4000DD2")]
		private const int MAX_COLLIDERS = 1;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Collider[] _overlappedColliders;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Targetable _lastTarget;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PlayerDash _playerDash;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C311C", Offset = "0x8C311C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C311C", Offset = "0x8C311C")]
		[SerializeField]
		private bool _isLandingTargetVisible;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private IntVariable _dashChargesVariable;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3188", Offset = "0x8C3188")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C3188", Offset = "0x8C3188")]
		[SerializeField]
		private DashLandingPoint _dashLandingTargetPrefab;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private DashLandingPoint _dashLandingTarget;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _isShowingDashPreview;

		[NonSerialized]
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Vector3 SpherecastOrigin;

		[NonSerialized]
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 SphereCastTgt;

		[NonSerialized]
		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Vector3 LandingTgt;

		[NonSerialized]
		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Vector3 DashDir;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ArcTargeter<Targetable> _arcTargeter;

		[Token(Token = "0x1700017A")]
		public float SphereCastRadius
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xB174B8", Offset = "0xB174B8", VA = "0xB174B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017B")]
		public Arc[] TargetArcs
		{
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xB174C0", Offset = "0xB174C0", VA = "0xB174C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public Targetable CurrentTarget
		{
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xB17580", Offset = "0xB17580", VA = "0xB17580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xB174C8", Offset = "0xB174C8", VA = "0xB174C8")]
			set
			{
			}
		}

		[Token(Token = "0x1700017D")]
		private bool DashLandingPointIsVisible
		{
			[Token(Token = "0x6000D91")]
			[Address(RVA = "0xB17588", Offset = "0xB17588", VA = "0xB17588")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xB175F0", Offset = "0xB175F0", VA = "0xB175F0")]
		public void Initialize(PlayerDash playerDash)
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xB17874", Offset = "0xB17874", VA = "0xB17874")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xB17954", Offset = "0xB17954", VA = "0xB17954")]
		private void OnDashTargetingEnableChanged(bool isEnabled)
		{
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xB179A0", Offset = "0xB179A0", VA = "0xB179A0")]
		private void EnableDashTargeting()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xB179AC", Offset = "0xB179AC", VA = "0xB179AC")]
		private void DisableDashTargeting()
		{
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xB179B8", Offset = "0xB179B8", VA = "0xB179B8")]
		public void Update(LayerMask moveMask)
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xB185E0", Offset = "0xB185E0", VA = "0xB185E0")]
		public void CheckBackObstacles()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xB17DDC", Offset = "0xB17DDC", VA = "0xB17DDC")]
		private bool CheckObstacles(Vector3 sweepOrigin, Vector3 normalizedDir, float distance, Targetable dashTarget)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xB183C4", Offset = "0xB183C4", VA = "0xB183C4")]
		private void UpdateLandingTarget(Targetable enemy)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xB18860", Offset = "0xB18860", VA = "0xB18860")]
		public DashTargeting()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class PlayerDash : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0BC", Offset = "0x8AB0BC")]
		private sealed class <LinearDashCoroutine>d__98 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerDash <>4__this;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 destination;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 normalizedDirIntent;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <dir>5__2;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private bool <worldMoverEnabled>5__3;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <lastHeadLocalPos>5__4;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private float <distanceTraveled>5__5;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private float <distanceToTravel>5__6;

			[Token(Token = "0x1700046D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D01")]
				[Address(RVA = "0xB1B4F8", Offset = "0xB1B4F8", VA = "0xB1B4F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700046E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D03")]
				[Address(RVA = "0xB1B560", Offset = "0xB1B560", VA = "0xB1B560", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xB1A448", Offset = "0xB1A448", VA = "0xB1A448")]
			[DebuggerHidden]
			public <LinearDashCoroutine>d__98(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xB1ACF8", Offset = "0xB1ACF8", VA = "0xB1ACF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xB1ACFC", Offset = "0xB1ACFC", VA = "0xB1ACFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D02")]
			[Address(RVA = "0xB1B500", Offset = "0xB1B500", VA = "0xB1B500", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DE0")]
		private const float TARGET_INTENT_ANGLE_THRESHOLD = 15f;

		[Token(Token = "0x4000DE1")]
		private const float DASH_MOVE_BLOCKED_THRESHOLD = 0.0001f;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C31F8", Offset = "0x8C31F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C31F8", Offset = "0x8C31F8")]
		[SerializeField]
		private XRPlatformManager _xRPlatformManager;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EntityRegistry _entityRegistry;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3298", Offset = "0x8C3298")]
		[SerializeField]
		private bool _lockPlayerLocalMovement;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C32E4", Offset = "0x8C32E4")]
		private float _normalizedDistanceRestoreCollision;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3334", Offset = "0x8C3334")]
		[SerializeField]
		private WorldMover _worldMover;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3380", Offset = "0x8C3380")]
		[SerializeField]
		private FloatVariable _playerSpeedVariable;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C33CC", Offset = "0x8C33CC")]
		[SerializeField]
		private bool _isUnscaledDeltaTime;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3418", Offset = "0x8C3418")]
		[SerializeField]
		private DashTargeting _dashTargeting;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private IntVariable _dashIndicatorSuppression;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3474", Offset = "0x8C3474")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3474", Offset = "0x8C3474")]
		[SerializeField]
		private BinaryInputAction _dashBackInputAction;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C34E4", Offset = "0x8C34E4")]
		[SerializeField]
		private BinaryInputAction _dashForwardInputAction;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3530", Offset = "0x8C3530")]
		[SerializeField]
		private Vector2InputAction _playerMovementInputAction;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C357C", Offset = "0x8C357C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C357C", Offset = "0x8C357C")]
		[SerializeField]
		private float _minDashDistance;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C35EC", Offset = "0x8C35EC")]
		[SerializeField]
		private float _dashMoveDistanceForward;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3638", Offset = "0x8C3638")]
		[SerializeField]
		private float _dashMoveDistanceBack;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3684", Offset = "0x8C3684")]
		[SerializeField]
		private float _dashTime;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C36D0", Offset = "0x8C36D0")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C36D0", Offset = "0x8C36D0")]
		[SerializeField]
		private float _advanceRate;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3730", Offset = "0x8C3730")]
		[SerializeField]
		private float _delayBetweenCharges;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C377C", Offset = "0x8C377C")]
		[SerializeField]
		private float _dashRestoreTimeMultiplierWhenNotInCombat;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C37C8", Offset = "0x8C37C8")]
		[SerializeField]
		private LayerMask _dashEnemyLayerMask;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3814", Offset = "0x8C3814")]
		[SerializeField]
		private float _knockbackDistance;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3860", Offset = "0x8C3860")]
		[SerializeField]
		protected float _minDistanceToTargetEnemy;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private FloatVariable _dashBlastPushback;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C38BC", Offset = "0x8C38BC")]
		[SerializeField]
		private List<HitProperty> _dashNudgeHitProperties;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private List<HitProperty> _dashTargetHitProperties;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private List<HitProperty> _dashBlastHitProperties;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3928", Offset = "0x8C3928")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3928", Offset = "0x8C3928")]
		[SerializeField]
		private AnimationCurve _dashImpactCurve;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private FloatReference _minDamageScale;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private FloatReference _maxDamageScale;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private FloatReference _minDistanceScale;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private FloatReference _maxDistanceScale;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private DashImpactDistanceRangeHitProperty[] _dashImpactHitProperties;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C39E8", Offset = "0x8C39E8")]
		[SerializeField]
		private float _sphereCastHeightOffset;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3A34", Offset = "0x8C3A34")]
		[SerializeField]
		private float _sphereCastRadius;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3A80", Offset = "0x8C3A80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3A80", Offset = "0x8C3A80")]
		[SerializeField]
		private IntVariable _playerDashSuppression;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3AF0", Offset = "0x8C3AF0")]
		[SerializeField]
		private IntVariable _playerMovementSuppression;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private IntVariable _dashChargesVariable;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private FloatVariable _dashChargeRestoreTimeVariable;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3B5C", Offset = "0x8C3B5C")]
		[SerializeField]
		private FloatVariable _dashRechargeRateMultiplier;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private FloatVariable _dashDamageVariable;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private FloatVariable _dashDamageMultiplier;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private BoolVariable _enemyHitByDashTrigger;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private BoolVariable _isDashing;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3BE8", Offset = "0x8C3BE8")]
		[SerializeField]
		private FloatVariable _dashDistanceVariable;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3C34", Offset = "0x8C3C34")]
		[SerializeField]
		private HitVFXData _hitVFXData;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private HitData.HitQualityType _hitQualityType;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private CameraShakeRequestAsset _dashInterruptedCameraShakeRequestAsset;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3CA0", Offset = "0x8C3CA0")]
		[SerializeField]
		private AudioKeyData _dashFailedSFXKey;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private AudioKeyData _dashSFXKey;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3CFC", Offset = "0x8C3CFC")]
		[SerializeField]
		private Vector3GlobalEvent _onDashStartGlobalEvent;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private BoolGlobalEvent _onDashEndGlobalEvent;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private GlobalEvent _dashRestoreGlobalEvent;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C3D68", Offset = "0x8C3D68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3D68", Offset = "0x8C3D68")]
		[CollapsingUnityEvent]
		[SerializeField]
		private Vector3UnityEvent _onDashStart;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onDashEnd;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3E0C", Offset = "0x8C3E0C")]
		[CollapsingUnityEvent]
		[SerializeField]
		private Vector3UnityEvent _onDashInterrupted;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Coroutine _dashCoroutine;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Targetable _currentTarget;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private Vector2 _inputDir;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool _isCurrentDashInterrupted;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private float _elapsedDashChargeRestoreTime;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int _lastDashMax;

		[Token(Token = "0x4000E22")]
		private const int NON_ALLOC_BUFFER_SIZE = 100;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private readonly Collider[] _overlappedEnemies;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private readonly RaycastHit[] _allEnemiesRaycastHits;

		[Token(Token = "0x1700017E")]
		public XRPlatformManager XRPlatformManager
		{
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xB18910", Offset = "0xB18910", VA = "0xB18910")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017F")]
		public PlayerEntity PlayerEntity
		{
			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0xB17850", Offset = "0xB17850", VA = "0xB17850")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000180")]
		public float DashMoveDistanceForward
		{
			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xB18918", Offset = "0xB18918", VA = "0xB18918")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public float DashMoveDistanceBack
		{
			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0xB18920", Offset = "0xB18920", VA = "0xB18920")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000182")]
		public float MinDistanceToTargetEnemy
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xB18928", Offset = "0xB18928", VA = "0xB18928")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000183")]
		private float DeltaTime
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xB18930", Offset = "0xB18930", VA = "0xB18930")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000184")]
		public bool IsDashing
		{
			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0xB17DB8", Offset = "0xB17DB8", VA = "0xB17DB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xB18948", Offset = "0xB18948", VA = "0xB18948")]
			set
			{
			}
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xB18970", Offset = "0xB18970", VA = "0xB18970")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xB18A08", Offset = "0xB18A08", VA = "0xB18A08")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xB18BC0", Offset = "0xB18BC0", VA = "0xB18BC0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xB18D90", Offset = "0xB18D90", VA = "0xB18D90")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xB18DAC", Offset = "0xB18DAC", VA = "0xB18DAC")]
		private void OnDashSuppressionChanged(int newValue)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xB18E2C", Offset = "0xB18E2C", VA = "0xB18E2C")]
		private void OnDashFullRestore()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xB18EA0", Offset = "0xB18EA0", VA = "0xB18EA0")]
		private void UpdateMove(Vector2 stick)
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xB18EAC", Offset = "0xB18EAC", VA = "0xB18EAC")]
		private bool CanDash()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xB18F5C", Offset = "0xB18F5C", VA = "0xB18F5C")]
		private void OnDashForward()
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xB1977C", Offset = "0xB1977C", VA = "0xB1977C")]
		private void OnDashBack()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xB190FC", Offset = "0xB190FC", VA = "0xB190FC")]
		private void OnDash(Vector2 inputDir)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xB19FDC", Offset = "0xB19FDC", VA = "0xB19FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xB19A0C", Offset = "0xB19A0C", VA = "0xB19A0C")]
		private void MoveEnemies(Vector3 origin, Vector3 normalizedDir, float dashDistance, Targetable dashTarget)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xB1A228", Offset = "0xB1A228", VA = "0xB1A228")]
		private void NudgeEnemy(Enemy enemy, Vector3 origin)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xB19F24", Offset = "0xB19F24", VA = "0xB19F24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E15B8", Offset = "0x8E15B8")]
		private IEnumerator LinearDashCoroutine(Vector3 destination, Vector3 normalizedDirIntent)
		{
			return null;
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xB1A474", Offset = "0xB1A474", VA = "0xB1A474")]
		private void DoLandingKnockback(float distanceTraveled)
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xB1AA54", Offset = "0xB1AA54", VA = "0xB1AA54")]
		private float GetDistanceDamageScale(float distanceTraveled)
		{
			return default(float);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xB1AB48", Offset = "0xB1AB48", VA = "0xB1AB48")]
		private DashImpactDistanceRangeHitProperty GetDashImpactDistanceData(float distanceTraveled)
		{
			return null;
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xB1ABEC", Offset = "0xB1ABEC", VA = "0xB1ABEC")]
		public PlayerDash()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class PlayerDashEffect : XRNodeTracker
	{
		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C3E68", Offset = "0x8C3E68")]
		[SerializeField]
		private Vector3GlobalEvent _onDashStartGlobalEvent;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolGlobalEvent _onDashEndGlobalEvent;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C3EB0", Offset = "0x8C3EB0")]
		[SerializeField]
		private ParticleSystem _movingFxParticleSystem;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem _landingFxParticleSystem;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem _enemyLandingFxParticleSystem;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioKeyData _dashImpactSfxKey;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _tracerLinesTransform;

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xB1B568", Offset = "0xB1B568", VA = "0xB1B568", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xB1B674", Offset = "0xB1B674", VA = "0xB1B674", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xB1B770", Offset = "0xB1B770", VA = "0xB1B770")]
		private void OnDashStart(Vector3 dashMove)
		{
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xB1B85C", Offset = "0xB1B85C", VA = "0xB1B85C")]
		private void OnDashEnd(bool hitEnemy)
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xB1B938", Offset = "0xB1B938", VA = "0xB1B938")]
		public PlayerDashEffect()
		{
		}
	}
}
namespace SG.Claymore.Level
{
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2B94", Offset = "0x8A2B94")]
	public class Campaign : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x20004F8")]
		public enum RoomQuality
		{
			[Token(Token = "0x400211E")]
			Auto,
			[Token(Token = "0x400211F")]
			LQ,
			[Token(Token = "0x4002120")]
			HQ
		}

		[Token(Token = "0x20004F9")]
		public class RoomSelection
		{
			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Room Room;

			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Encounter Encounter;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoomQuality RoomQuality;

			[Token(Token = "0x6001D04")]
			[Address(RVA = "0xC975D0", Offset = "0xC975D0", VA = "0xC975D0", Slot = "3")]
			public override string ToString()
			{
				return null;
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xC97708", Offset = "0xC97708", VA = "0xC97708")]
			public RoomSelection()
			{
			}
		}

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3F3C", Offset = "0x8C3F3C")]
		[DebugOnly]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int minSaveIndex;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool canBeAborted;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3FC8", Offset = "0x8C3FC8")]
		[SerializeField]
		private List<CampaignTier> tiers;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C4014", Offset = "0x8C4014")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4014", Offset = "0x8C4014")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C4014", Offset = "0x8C4014")]
		[SerializeField]
		private List<Room> allPotentialRooms;

		[NonSerialized]
		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<RoomSelection> generatedList;

		[NonSerialized]
		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastSeed;

		[Token(Token = "0x17000185")]
		public int MinSaveIndex
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xC96E5C", Offset = "0xC96E5C", VA = "0xC96E5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000186")]
		public bool CanBeAborted
		{
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xC96E64", Offset = "0xC96E64", VA = "0xC96E64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000187")]
		public string GUID
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xC96E6C", Offset = "0xC96E6C", VA = "0xC96E6C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public string DeveloperName
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xC96E74", Offset = "0xC96E74", VA = "0xC96E74", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public List<CampaignTier> Tiers
		{
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xC96E7C", Offset = "0xC96E7C", VA = "0xC96E7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xC96E84", Offset = "0xC96E84", VA = "0xC96E84")]
		public List<SceneReference> GetAllScenes(bool useHQ)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xC971D8", Offset = "0xC971D8", VA = "0xC971D8")]
		public List<RoomSelection> GetRooms(int seed)
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xC97254", Offset = "0xC97254", VA = "0xC97254")]
		public void GenerateRoomList(int seed)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xC97480", Offset = "0xC97480", VA = "0xC97480")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xC974E4", Offset = "0xC974E4", VA = "0xC974E4")]
		public Campaign()
		{
		}
	}
	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2BD8", Offset = "0x8A2BD8")]
	public class CampaignDatabase : ObjectDatabase<Campaign>, IGUIDDatabase<Campaign>, IGUIDDatabase
	{
		[Serializable]
		[Token(Token = "0x20004FA")]
		public class RuntimeCampaignProgressData
		{
			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string CampaignGUID;

			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int Difficulty;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int MaxDepth;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int MaxDepthRecognized;

			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int CompletionCounter;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int RunCounter;

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xC97A08", Offset = "0xC97A08", VA = "0xC97A08")]
			public RuntimeCampaignProgressData(string GUID)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0CC", Offset = "0x8AB0CC")]
		private sealed class <>c
		{
			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__18_0;

			[Token(Token = "0x6001D08")]
			[Address(RVA = "0xC984BC", Offset = "0xC984BC", VA = "0xC984BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xC984C4", Offset = "0xC984C4", VA = "0xC984C4")]
			internal void <.ctor>b__18_0(object o)
			{
			}
		}

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntVariable _difficulty;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private QuickButton IncrementVictory;

		[NonSerialized]
		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<RuntimeCampaignProgressData> CampaignProgressDataGroup;

		[Token(Token = "0x1700018A")]
		public int Difficulty
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xC97710", Offset = "0xC97710", VA = "0xC97710")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000015")]
		public event Action OnChange
		{
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xC97734", Offset = "0xC97734", VA = "0xC97734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E161C", Offset = "0x8E161C")]
			add
			{
			}
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xC977D8", Offset = "0xC977D8", VA = "0xC977D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E162C", Offset = "0x8E162C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xC9787C", Offset = "0xC9787C", VA = "0xC9787C")]
		public RuntimeCampaignProgressData GetRuntimeCampaignProgressData(string campaignGUID, int difficulty)
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xC97A44", Offset = "0xC97A44", VA = "0xC97A44")]
		public int GetRunCount(string campaignGUID, int difficulty = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xC97B70", Offset = "0xC97B70", VA = "0xC97B70")]
		public int GetMaxDepth(string campaignGUID, int difficulty = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xC97CCC", Offset = "0xC97CCC", VA = "0xC97CCC")]
		public int GetMaxDifficultyVictory(string campaignGUID)
		{
			return default(int);
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xC97E20", Offset = "0xC97E20", VA = "0xC97E20")]
		public void UpdateCampaignProgressData(RuntimeCampaignProgressData data, int difficulty)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xC98038", Offset = "0xC98038", VA = "0xC98038")]
		public void UnlockAll()
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xC98228", Offset = "0xC98228", VA = "0xC98228")]
		public bool Contains(string guid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xC982DC", Offset = "0xC982DC", VA = "0xC982DC")]
		public void Save()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xC982F8", Offset = "0xC982F8", VA = "0xC982F8")]
		public CampaignDatabase()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class CampaignTier : ScriptableObject
	{
		[Token(Token = "0x20004FC")]
		public class GenerationState
		{
			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly List<Room> usedLevels;

			[Token(Token = "0x1700046F")]
			public int Count
			{
				[Token(Token = "0x6001D0D")]
				[Address(RVA = "0xC99448", Offset = "0xC99448", VA = "0xC99448")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6001D0A")]
			[Address(RVA = "0xC98888", Offset = "0xC98888", VA = "0xC98888")]
			public GenerationState()
			{
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xC98B90", Offset = "0xC98B90", VA = "0xC98B90")]
			public GenerationState(GenerationState other)
			{
			}

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xC993C4", Offset = "0xC993C4", VA = "0xC993C4")]
			public Room Get(int index)
			{
				return null;
			}

			[Token(Token = "0x6001D0E")]
			[Address(RVA = "0xC98CB4", Offset = "0xC98CB4", VA = "0xC98CB4")]
			public void Add(Room level)
			{
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xC99498", Offset = "0xC99498", VA = "0xC99498")]
			public bool Contains(Room level)
			{
				return default(bool);
			}

			[Token(Token = "0x6001D10")]
			[Address(RVA = "0xC99500", Offset = "0xC99500", VA = "0xC99500", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C40D8", Offset = "0x8C40D8")]
		[SerializeField]
		private List<Room> potentialLevels;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4124", Offset = "0x8C4124")]
		[SerializeField]
		private List<LevelDepth> depths;

		[Token(Token = "0x1700018B")]
		public List<Room> PotentialLevels
		{
			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0xC98644", Offset = "0xC98644", VA = "0xC98644")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018C")]
		public List<LevelDepth> Depths
		{
			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xC9864C", Offset = "0xC9864C", VA = "0xC9864C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xC98654", Offset = "0xC98654", VA = "0xC98654")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xC98814", Offset = "0xC98814", VA = "0xC98814")]
		public bool ValidateTier(ref GenerationState failureState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xC98904", Offset = "0xC98904", VA = "0xC98904")]
		private bool ValidateTier(int level, GenerationState state, ref GenerationState failureState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xC9731C", Offset = "0xC9731C", VA = "0xC9731C")]
		public void GenerateRoomList(ref List<Campaign.RoomSelection> list)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xC99314", Offset = "0xC99314", VA = "0xC99314")]
		public CampaignTier()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class DifficultyCompletionToggler : MonoBehaviour
	{
		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject objectToToggle;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CampaignDatabase campaignDatabase;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Campaign campaign;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ComparisonOperator comparison;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntReference difficulty;

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xC99614", Offset = "0xC99614", VA = "0xC99614")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xC996C8", Offset = "0xC996C8", VA = "0xC996C8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xC996FC", Offset = "0xC996FC", VA = "0xC996FC")]
		public bool Evaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xC99858", Offset = "0xC99858", VA = "0xC99858")]
		public DifficultyCompletionToggler()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class Encounter : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<NPCCombatantDefinition> enemies;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public SceneReference Scene;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int EnemyCount;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int ChallengeRating;

		[Token(Token = "0x1700018D")]
		public string GUID
		{
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xC99860", Offset = "0xC99860", VA = "0xC99860", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public string DeveloperName
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xC99868", Offset = "0xC99868", VA = "0xC99868", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xC99870", Offset = "0xC99870", VA = "0xC99870")]
		public bool Validate(ref string error)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xC99B34", Offset = "0xC99B34", VA = "0xC99B34")]
		public void AddEnemy(Enemy enemy)
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xC99C34", Offset = "0xC99C34", VA = "0xC99C34")]
		public void ResetEncounter()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xC99C90", Offset = "0xC99C90", VA = "0xC99C90")]
		public bool SupportsFilter(List<NPCCombatantDefinition> requiredEnemies, List<NPCCombatantDefinition> bannedEnemies)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xC99DC0", Offset = "0xC99DC0", VA = "0xC99DC0")]
		public Encounter()
		{
		}
	}
	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2C38", Offset = "0x8A2C38")]
	public class EncounterDatabase : ObjectDatabase<Encounter>, IGUIDDatabase<Encounter>, IGUIDDatabase
	{
		[Serializable]
		[Token(Token = "0x20004FD")]
		public class RuntimeEncounterProgressData
		{
			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string EncounterGUID;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int VictoryCount;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int DefeatCount;

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xC99F74", Offset = "0xC99F74", VA = "0xC99F74")]
			public RuntimeEncounterProgressData(string GUID)
			{
			}
		}

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<RuntimeEncounterProgressData> EncounterProgressDataGroup;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xC99E3C", Offset = "0xC99E3C", VA = "0xC99E3C")]
		public RuntimeEncounterProgressData GetRuntimeEncounterProgressData(string encounterGUID)
		{
			return null;
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xC99FA8", Offset = "0xC99FA8", VA = "0xC99FA8")]
		public void UpdateEncounterProgressData(RuntimeEncounterProgressData data)
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xC9A0E8", Offset = "0xC9A0E8", VA = "0xC9A0E8")]
		public void IncrementCurrentEncounterVictory()
		{
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xC9A1CC", Offset = "0xC9A1CC", VA = "0xC9A1CC")]
		public void IncrementCurrentEncounterDefeat()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xC9A2B0", Offset = "0xC9A2B0", VA = "0xC9A2B0")]
		public bool Contains(string guid)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xC9A364", Offset = "0xC9A364", VA = "0xC9A364")]
		public void Save()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xC9A380", Offset = "0xC9A380", VA = "0xC9A380")]
		public EncounterDatabase()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class EventLoadingPhaseListener : MonoBehaviour
	{
		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LevelManager LevelManager;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[CollapsingUnityEvent]
		public UnityEvent OnLoadRequested;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[CollapsingUnityEvent]
		public UnityEvent OnLoadWillStart;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[CollapsingUnityEvent]
		public UnityEvent OnWillLoadEnvironment;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[CollapsingUnityEvent]
		public UnityEvent OnDidLoadEnvironment;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[CollapsingUnityEvent]
		public UnityEvent OnWillLoadEnemies;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[CollapsingUnityEvent]
		public UnityEvent OnDidLoadEnemies;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[CollapsingUnityEvent]
		public UnityEvent OnWillLoadPlayer;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[CollapsingUnityEvent]
		public UnityEvent OnDidLoadPlayer;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[CollapsingUnityEvent]
		public UnityEvent OnLevelReady;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[CollapsingUnityEvent]
		public UnityEvent OnFadeInDone;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xC9A404", Offset = "0xC9A404", VA = "0xC9A404")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xC9A81C", Offset = "0xC9A81C", VA = "0xC9A81C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xC9ACC4", Offset = "0xC9ACC4", VA = "0xC9ACC4")]
		private void LoadRequested()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xC9ACD8", Offset = "0xC9ACD8", VA = "0xC9ACD8")]
		private void LoadWillStart()
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xC9ACEC", Offset = "0xC9ACEC", VA = "0xC9ACEC")]
		private void WillLoadEnvironment()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xC9AD00", Offset = "0xC9AD00", VA = "0xC9AD00")]
		private void DidLoadEnvironment()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xC9AD14", Offset = "0xC9AD14", VA = "0xC9AD14")]
		private void WillLoadEnemies()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xC9AD28", Offset = "0xC9AD28", VA = "0xC9AD28")]
		private void DidLoadEnemies()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xC9AD3C", Offset = "0xC9AD3C", VA = "0xC9AD3C")]
		private void WillLoadPlayer()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xC9AD50", Offset = "0xC9AD50", VA = "0xC9AD50")]
		private void DidLoadPlayer()
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xC9AD6C", Offset = "0xC9AD6C", VA = "0xC9AD6C")]
		private void LevelReady()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xC9AD80", Offset = "0xC9AD80", VA = "0xC9AD80")]
		private void FadeInDone()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xC9AD94", Offset = "0xC9AD94", VA = "0xC9AD94")]
		public EventLoadingPhaseListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200023C")]
	public class LevelDepth
	{
		[Token(Token = "0x20004FE")]
		public enum RandomMode
		{
			[Token(Token = "0x4002131")]
			RandomOnce,
			[Token(Token = "0x4002132")]
			Random,
			[Token(Token = "0x4002133")]
			PriorityIfNotCompleted
		}

		[Serializable]
		[Token(Token = "0x20004FF")]
		public class LevelChance
		{
			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DD888", Offset = "0x8DD888")]
			public Room Room;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RandomMode RandomMode;

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xC9B17C", Offset = "0xC9B17C", VA = "0xC9B17C")]
			public LevelChance()
			{
			}
		}

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int payoutAether;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C42D0", Offset = "0x8C42D0")]
		[SerializeField]
		private FloatRange challengeRating;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<NPCCombatantDefinition> requiredEnemies;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<NPCCombatantDefinition> bannedEnemies;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C433C", Offset = "0x8C433C")]
		[SerializeField]
		private List<LevelChance> potentialLevels;

		[NonSerialized]
		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<LevelChance> cachedPool;

		[NonSerialized]
		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly List<LevelChance> cachedPriorityPool;

		[Token(Token = "0x1700018F")]
		public int PayoutAether
		{
			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0xC9AD9C", Offset = "0xC9AD9C", VA = "0xC9AD9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000190")]
		public FloatRange ChallengeRating
		{
			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xC9ADA4", Offset = "0xC9ADA4", VA = "0xC9ADA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public List<NPCCombatantDefinition> RequiredEnemies
		{
			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0xC9ADAC", Offset = "0xC9ADAC", VA = "0xC9ADAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public List<NPCCombatantDefinition> BannedEnemies
		{
			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xC9ADB4", Offset = "0xC9ADB4", VA = "0xC9ADB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public List<LevelChance> PotentialLevels
		{
			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xC9ADBC", Offset = "0xC9ADBC", VA = "0xC9ADBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xC98720", Offset = "0xC98720", VA = "0xC98720")]
		public void Validate(CampaignTier campaignTier)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xC98B68", Offset = "0xC98B68", VA = "0xC98B68")]
		public List<LevelChance> GetLevelPool(CampaignTier.GenerationState state)
		{
			return null;
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xC98D4C", Offset = "0xC98D4C", VA = "0xC98D4C")]
		public Room GenerateLevel(CampaignTier.GenerationState state, bool writeState = true)
		{
			return null;
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xC9B000", Offset = "0xC9B000", VA = "0xC9B000")]
		public bool Contains(Room level)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xC9B0E0", Offset = "0xC9B0E0", VA = "0xC9B0E0")]
		public void Add(Room level)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xC9B184", Offset = "0xC9B184", VA = "0xC9B184")]
		public void Remove(Room level)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xC9B288", Offset = "0xC9B288", VA = "0xC9B288")]
		public LevelChance Get(Room room)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xC9B38C", Offset = "0xC9B38C", VA = "0xC9B38C")]
		public LevelDepth()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class LevelLoadingPhase
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<MonoBehaviour> waitingObjects;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Action onPhaseEnterPersistent;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Action onPhaseEnterOneOff;

		[Token(Token = "0x17000194")]
		public bool CanContinue
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xC9B500", Offset = "0xC9B500", VA = "0xC9B500")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xC9B558", Offset = "0xC9B558", VA = "0xC9B558")]
		public void AddLoadDelay(MonoBehaviour delay)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xC9B5F0", Offset = "0xC9B5F0", VA = "0xC9B5F0")]
		public void ReleaseLoadDelay(MonoBehaviour delay)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xC8DAF8", Offset = "0xC8DAF8", VA = "0xC8DAF8")]
		public void RegisterOneOff(Action action)
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xC9B688", Offset = "0xC9B688", VA = "0xC9B688")]
		public void RegisterPersistent(Action action)
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xC9AC34", Offset = "0xC9AC34", VA = "0xC9AC34")]
		public void UnregisterOneOff(Action action)
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0xC9B718", Offset = "0xC9B718", VA = "0xC9B718")]
		public void UnregisterPersistent(Action action)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xC9B7A8", Offset = "0xC9B7A8", VA = "0xC9B7A8")]
		public void Invoke()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xC9B840", Offset = "0xC9B840", VA = "0xC9B840")]
		public LevelLoadingPhase()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class LevelManager : CustomPlayerLoop
	{
		[Token(Token = "0x2000500")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0DC", Offset = "0x8AB0DC")]
		private sealed class <>c__DisplayClass118_0
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool fadeDone;

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xC9DE50", Offset = "0xC9DE50", VA = "0xC9DE50")]
			public <>c__DisplayClass118_0()
			{
			}

			[Token(Token = "0x6001D14")]
			[Address(RVA = "0xC9DE58", Offset = "0xC9DE58", VA = "0xC9DE58")]
			internal void <LoadRoutine>b__0()
			{
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xC9DE64", Offset = "0xC9DE64", VA = "0xC9DE64")]
			internal void <LoadRoutine>b__1()
			{
			}

			[Token(Token = "0x6001D16")]
			[Address(RVA = "0xC9DE70", Offset = "0xC9DE70", VA = "0xC9DE70")]
			internal void <LoadRoutine>b__2()
			{
			}
		}

		[Token(Token = "0x2000501")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0EC", Offset = "0x8AB0EC")]
		private sealed class <LoadRoutine>d__118 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelManager <>4__this;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Campaign.RoomSelection level;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass118_0 <>8__1;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <loadStartTime>5__2;

			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private ScreenFadeConfig <fadeOut>5__3;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private ScreenFadeConfig <fadeIn>5__4;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private int <timeScaleID>5__5;

			[Token(Token = "0x17000470")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D1A")]
				[Address(RVA = "0xC9F414", Offset = "0xC9F414", VA = "0xC9F414", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000471")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D1C")]
				[Address(RVA = "0xC9F47C", Offset = "0xC9F47C", VA = "0xC9F47C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xC9D16C", Offset = "0xC9D16C", VA = "0xC9D16C")]
			[DebuggerHidden]
			public <LoadRoutine>d__118(int <>1__state)
			{
			}

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xC9DE88", Offset = "0xC9DE88", VA = "0xC9DE88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xC9DE8C", Offset = "0xC9DE8C", VA = "0xC9DE8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xC9F41C", Offset = "0xC9F41C", VA = "0xC9F41C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000502")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB0FC", Offset = "0x8AB0FC")]
		private sealed class <>c__DisplayClass121_0
		{
			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string sceneName;

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xC9D278", Offset = "0xC9D278", VA = "0xC9D278")]
			public <>c__DisplayClass121_0()
			{
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xC9DE7C", Offset = "0xC9DE7C", VA = "0xC9DE7C")]
			internal void <LoadScene>b__0()
			{
			}
		}

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Scene EditorLoadedScene;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4388", Offset = "0x8C4388")]
		[SerializeField]
		private PlayerLoopInitializer loopInitializer;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ResourceLoadingController resourceController;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EncounterDatabase encounterDatabase;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C43F4", Offset = "0x8C43F4")]
		[SerializeField]
		private Campaign defaultCampaign;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C4440", Offset = "0x8C4440")]
		[SerializeField]
		private CampaignDatabase campaignDatabase;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private RoomDatabase roomDatabase;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScreenFadeController fadeController;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C44AC", Offset = "0x8C44AC")]
		[SerializeField]
		private float additionalLoadingDelay;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C44F8", Offset = "0x8C44F8")]
		[SerializeField]
		private BoolVariable tutorialCompleted;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private List<BoolVariable> tutorialTrackVariable;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ArmamentInventory armamentInventory;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Campaign tutorialCampaign;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool skipTutorial;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4584", Offset = "0x8C4584")]
		[SerializeField]
		private Room titleRoom;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Room homeLevel;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private IntVariable homeLevelVisitCounter;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ScreenFadeConfig defaultFadeOut;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ScreenFadeConfig defaultFadeIn;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private IntVariable randomSeed;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private IntVariable levelIndex;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private IntVariable maxDepthLastRun;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private SaveManager saveManager;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private GlobalEvent enemiesCompleteEvent;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private bool logMessages;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private RoomCompletionHistory completionHistory;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private TimeScaleController timeScaleController;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private XRPlatformManager platformManager;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private FloatVariable runPlayTime;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private IntVariable modalUICount;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private BoolGlobalEvent disablePositionalTrackingEvent;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C46D0", Offset = "0x8C46D0")]
		[SerializeField]
		private SceneReference defaultPlayerScene;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private SceneReference defaultNetherSpaceScene;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C472C", Offset = "0x8C472C")]
		[SerializeField]
		private AudioMixer[] levelLoadMixers;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private float fadeToClearAudioTime;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4788", Offset = "0x8C4788")]
		[SerializeField]
		private StandardAnalyticsEvent beginCampaignAnalyticsEvent;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private BeginRunAnalyticsEvent beginRunAnalyticsEvent;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private PlayerArmamentAnalyticsEvent beginRunArmamentAnalyticsEvent;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private PlayerVictoryAnalyticsEvent playerVictoryAnalyticsEvent;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private NewMaxDepthAnalyticsEvent newMaxDepthAnalyticsEvent;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private PlayerHealthAnalyticsEvent encounterStartAnalyticsEvent;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private PlayerArmamentAnalyticsEvent encounterStartArmamentAnalyticsEvent;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[SerializeField]
		private StandardAnalyticsEvent resumeRunAnalyticsEvent;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private StandardAnalyticsEvent applicationQuitAnalyticsEvent;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private ArmamentAnalyticsEvent armamentAnalyticsEvent;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private QuickButton ReloadCurrentLevel;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private QuickButton SkipLevel;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public LevelLoadingPhase OnLoadRequested;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public LevelLoadingPhase OnLoadWillStart;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public LevelLoadingPhase OnDidFadeOut;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public LevelLoadingPhase OnWillLoadEnvironment;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public LevelLoadingPhase OnDidLoadEnvironment;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public LevelLoadingPhase OnWillLoadEnemies;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public LevelLoadingPhase OnDidLoadEnemies;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public LevelLoadingPhase OnWillLoadPlayer;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public LevelLoadingPhase OnDidLoadPlayer;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public LevelLoadingPhase OnLevelReady;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public LevelLoadingPhase OnFadeInDone;

		[NonSerialized]
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool isInError;

		[NonSerialized]
		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private AsyncOperation loading;

		[NonSerialized]
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private AsyncOperation[] secondaryLoading;

		[NonSerialized]
		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Campaign.RoomSelection currentLevel;

		[NonSerialized]
		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private CampaignDatabase.RuntimeCampaignProgressData currentCampaignProgressData;

		[NonSerialized]
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private bool isLoading;

		[NonSerialized]
		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x221")]
		private bool fadeRequestedDuringLoad;

		[NonSerialized]
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private readonly List<string> loadedScenes;

		[Token(Token = "0x4000EA0")]
		private const string EXPOSED_VOLUME_PARAM_NAME = "Volume";

		[Token(Token = "0x4000EA1")]
		private const float MIN_VOLUME = -80f;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private string currentSceneIdentifier;

		[NonSerialized]
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4884", Offset = "0x8C4884")]
		private bool <IsCoreLoading>k__BackingField;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4894", Offset = "0x8C4894")]
		private ScreenFadeConfig <NextFadeConfigOverride>k__BackingField;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C48A4", Offset = "0x8C48A4")]
		private Campaign <Campaign>k__BackingField;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C48B4", Offset = "0x8C48B4")]
		private static CommandLineArgs <CommandLineArgs>k__BackingField;

		[Token(Token = "0x4000EA7")]
		private const string HEADSET_BYPASS_ARG = "bypassheadsetcheck";

		[Token(Token = "0x17000195")]
		public int CurrentSeed
		{
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xC9B8BC", Offset = "0xC9B8BC", VA = "0xC9B8BC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000196")]
		public bool HQScenes
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xC9B8E0", Offset = "0xC9B8E0", VA = "0xC9B8E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000197")]
		public bool IsLoading
		{
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xC9B8FC", Offset = "0xC9B8FC", VA = "0xC9B8FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public bool IsCoreLoading
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xC9B904", Offset = "0xC9B904", VA = "0xC9B904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E163C", Offset = "0x8E163C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xC9B90C", Offset = "0xC9B90C", VA = "0xC9B90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E164C", Offset = "0x8E164C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public ScreenFadeConfig NextFadeConfigOverride
		{
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xC9BC74", Offset = "0xC9BC74", VA = "0xC9BC74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E165C", Offset = "0x8E165C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xC9BC7C", Offset = "0xC9BC7C", VA = "0xC9BC7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E166C", Offset = "0x8E166C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public Campaign Campaign
		{
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xC9BC8C", Offset = "0xC9BC8C", VA = "0xC9BC8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E167C", Offset = "0x8E167C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xC9BC94", Offset = "0xC9BC94", VA = "0xC9BC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E168C", Offset = "0x8E168C")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public Campaign DefaultCampaign
		{
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xC9BCA4", Offset = "0xC9BCA4", VA = "0xC9BCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019C")]
		public Campaign.RoomSelection CurrentLevel
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xC9BCAC", Offset = "0xC9BCAC", VA = "0xC9BCAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public int LevelIndex
		{
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xC9BC1C", Offset = "0xC9BC1C", VA = "0xC9BC1C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xC9BCB4", Offset = "0xC9BCB4", VA = "0xC9BCB4")]
			set
			{
			}
		}

		[Token(Token = "0x1700019E")]
		public static CommandLineArgs CommandLineArgs
		{
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xC9BCD8", Offset = "0xC9BCD8", VA = "0xC9BCD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E169C", Offset = "0x8E169C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xC9BD28", Offset = "0xC9BD28", VA = "0xC9BD28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E16AC", Offset = "0x8E16AC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xC9B918", Offset = "0xC9B918", VA = "0xC9B918")]
		public string GetSceneIdentifier(bool includeIndex = true)
		{
			return null;
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xC9BA08", Offset = "0xC9BA08", VA = "0xC9BA08")]
		public string CreateSceneIdentifier(bool includeIndex = true, bool cleanSpaces = false)
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xC9BC40", Offset = "0xC9BC40", VA = "0xC9BC40")]
		public void CacheSceneIdentifier(bool includeIndex = true)
		{
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xC9BD80", Offset = "0xC9BD80", VA = "0xC9BD80")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xC9BF4C", Offset = "0xC9BF4C", VA = "0xC9BF4C")]
		public void StartRun(Campaign run)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xC9C2E4", Offset = "0xC9C2E4", VA = "0xC9C2E4")]
		public void EndRun()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xC9C33C", Offset = "0xC9C33C", VA = "0xC9C33C")]
		public void StartGame()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xC9C520", Offset = "0xC9C520", VA = "0xC9C520")]
		public void SetNetherSpaceSceneActive()
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xC9C550", Offset = "0xC9C550", VA = "0xC9C550")]
		public void RestoreRun()
		{
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0xC9C634", Offset = "0xC9C634", VA = "0xC9C634")]
		public void LoadNextLevel()
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0xC9C9DC", Offset = "0xC9C9DC", VA = "0xC9C9DC")]
		public void DebugPassTutorial()
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0xC9C7B8", Offset = "0xC9C7B8", VA = "0xC9C7B8")]
		private void UpdateRuntimeCampaignProgressData(bool isCompleted)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0xC9CB50", Offset = "0xC9CB50", VA = "0xC9CB50")]
		public void NewRandomSeed()
		{
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xC9C180", Offset = "0xC9C180", VA = "0xC9C180")]
		public void LoadCurrentLevel()
		{
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xC9CC24", Offset = "0xC9CC24", VA = "0xC9CC24")]
		public void ReloadLevel()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xC9CF08", Offset = "0xC9CF08", VA = "0xC9CF08")]
		public void LoadClaymoreLevel(Room room)
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xC9CB90", Offset = "0xC9CB90", VA = "0xC9CB90")]
		public void LoadClaymoreLevel(Campaign.RoomSelection level)
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xC9D000", Offset = "0xC9D000", VA = "0xC9D000")]
		private void CacheLoadedScenes()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xC9CE10", Offset = "0xC9CE10", VA = "0xC9CE10")]
		private void StartLoad(Campaign.RoomSelection level)
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xC9D0D4", Offset = "0xC9D0D4", VA = "0xC9D0D4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E16BC", Offset = "0x8E16BC")]
		private IEnumerator LoadRoutine(Campaign.RoomSelection level)
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xC9D198", Offset = "0xC9D198", VA = "0xC9D198")]
		private void OnFadeStart()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xC9D1A4", Offset = "0xC9D1A4", VA = "0xC9D1A4")]
		private void LoadPlayerDeathController(Campaign.RoomSelection level)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xC9CD20", Offset = "0xC9CD20", VA = "0xC9CD20")]
		public void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xC9D280", Offset = "0xC9D280", VA = "0xC9D280")]
		private void LoadErrorScene(string sceneName)
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0xC9D2D8", Offset = "0xC9D2D8", VA = "0xC9D2D8")]
		public void DismissLoading()
		{
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0xC9D308", Offset = "0xC9D308", VA = "0xC9D308")]
		public void DebugLoadSceneAsLevel(SceneReference scene)
		{
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0xC9D3E0", Offset = "0xC9D3E0", VA = "0xC9D3E0")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0xC9D4D0", Offset = "0xC9D4D0", VA = "0xC9D4D0", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0xC9D53C", Offset = "0xC9D53C", VA = "0xC9D53C", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0xC9D5F0", Offset = "0xC9D5F0", VA = "0xC9D5F0", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0xC9D738", Offset = "0xC9D738", VA = "0xC9D738")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0xC9D7C4", Offset = "0xC9D7C4", VA = "0xC9D7C4")]
		public void LoadTitleScene()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0xC9D854", Offset = "0xC9D854", VA = "0xC9D854")]
		public void SaveRooms()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0xC9C904", Offset = "0xC9C904", VA = "0xC9C904")]
		public void LoadEndRun(bool isVictory)
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0xC9C438", Offset = "0xC9C438", VA = "0xC9C438")]
		public void LoadHomeScene()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0xC9C518", Offset = "0xC9C518", VA = "0xC9C518")]
		public void LoadIntroTutorial()
		{
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0xC9DA84", Offset = "0xC9DA84", VA = "0xC9DA84")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x200023F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A2C98", Offset = "0x8A2C98")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2C98", Offset = "0x8A2C98")]
	public class LevelSaveGroup : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<Room> rooms;

		[Token(Token = "0x1700019F")]
		public Room Item
		{
			[Token(Token = "0x6000E42")]
			[Address(RVA = "0xC9F484", Offset = "0xC9F484", VA = "0xC9F484")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		public int Count
		{
			[Token(Token = "0x6000E45")]
			[Address(RVA = "0xC9F554", Offset = "0xC9F554", VA = "0xC9F554")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0xC9D9EC", Offset = "0xC9D9EC", VA = "0xC9D9EC")]
		public void Add(Room room)
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0xC9F4FC", Offset = "0xC9F4FC", VA = "0xC9F4FC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0xC9ADC4", Offset = "0xC9ADC4", VA = "0xC9ADC4")]
		public bool Contains(Room room)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0xC9F5A4", Offset = "0xC9F5A4", VA = "0xC9F5A4")]
		public LevelSaveGroup()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class ReorientScreen : MonoBehaviour
	{
		[Token(Token = "0x2000503")]
		protected enum FacingState
		{
			[Token(Token = "0x4002142")]
			Off,
			[Token(Token = "0x4002143")]
			Messaging,
			[Token(Token = "0x4002144")]
			MessagingPending,
			[Token(Token = "0x4002145")]
			Paused,
			[Token(Token = "0x4002146")]
			Forward,
			[Token(Token = "0x4002147")]
			ForwardPending
		}

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C48C4", Offset = "0x8C48C4")]
		[SerializeField]
		protected BoolVariable trackingLossWarning;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4910", Offset = "0x8C4910")]
		[SerializeField]
		protected BoolVariable strictWorldForward;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C495C", Offset = "0x8C495C")]
		[SerializeField]
		protected BoolVariable trackingLossProtection;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C49A8", Offset = "0x8C49A8")]
		[SerializeField]
		protected Vector3Variable calibratedWorldForward;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected XRPlatformManager _XRPlatformManager;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4A04", Offset = "0x8C4A04")]
		[SerializeField]
		protected NetherSpaceBubble bubble;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4A50", Offset = "0x8C4A50")]
		[SerializeField]
		protected Transform contentRoot;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4A9C", Offset = "0x8C4A9C")]
		[SerializeField]
		private float angleTolerance;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4AE8", Offset = "0x8C4AE8")]
		[SerializeField]
		private float timeToTriggerMessage;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4B34", Offset = "0x8C4B34")]
		[SerializeField]
		private float timeToClearMessage;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4B80", Offset = "0x8C4B80")]
		[SerializeField]
		private float timeToPauseGame;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4BCC", Offset = "0x8C4BCC")]
		[SerializeField]
		private FloatVariable headToTrackingAngle;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4C18", Offset = "0x8C4C18")]
		[SerializeField]
		protected Animator animator;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4C64", Offset = "0x8C4C64")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C4C64", Offset = "0x8C4C64")]
		[SerializeField]
		protected MecanimParameterReference onParam;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4CD4", Offset = "0x8C4CD4")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C4CD4", Offset = "0x8C4CD4")]
		[SerializeField]
		private MecanimParameterReference outputOffParam;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4D44", Offset = "0x8C4D44")]
		[SerializeField]
		protected GameObject message;

		[NonSerialized]
		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float timeBackwards;

		[NonSerialized]
		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected float timeForwards;

		[NonSerialized]
		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected FacingState facing;

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0xC9F620", Offset = "0xC9F620", VA = "0xC9F620", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0xC9F624", Offset = "0xC9F624", VA = "0xC9F624", Slot = "5")]
		protected virtual void OnMessageStart()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xC9F66C", Offset = "0xC9F66C", VA = "0xC9F66C", Slot = "6")]
		protected virtual void OnMessageEnd()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xC9F694", Offset = "0xC9F694", VA = "0xC9F694", Slot = "7")]
		protected virtual bool AllowPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0xC9F69C", Offset = "0xC9F69C", VA = "0xC9F69C", Slot = "8")]
		protected virtual void OnPauseStart()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0xC9F6A0", Offset = "0xC9F6A0", VA = "0xC9F6A0")]
		private void FacingBackwardsUpdate()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xC9F778", Offset = "0xC9F778", VA = "0xC9F778")]
		private void FacingForwardsUpdate()
		{
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0xC9F84C", Offset = "0xC9F84C", VA = "0xC9F84C", Slot = "9")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0xC9F9B8", Offset = "0xC9F9B8", VA = "0xC9F9B8")]
		public ReorientScreen()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class ReorientScreenLevelStart : ReorientScreen
	{
		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4D90", Offset = "0x8C4D90")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4DDC", Offset = "0x8C4DDC")]
		[SerializeField]
		private ScreenFadeController fadeController;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4E28", Offset = "0x8C4E28")]
		[SerializeField]
		private float fadeInTime;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4E74", Offset = "0x8C4E74")]
		[SerializeField]
		private float fadeOutTime;

		[NonSerialized]
		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool ready;

		[NonSerialized]
		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool complete;

		[NonSerialized]
		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		private bool isDisplayed;

		[NonSerialized]
		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Color lastColor;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UnityEvent OnReorientStart;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private UnityEvent OnReorientEnd;

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0xC9F9CC", Offset = "0xC9F9CC", VA = "0xC9F9CC", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0xC9FA9C", Offset = "0xC9FA9C", VA = "0xC9FA9C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0xC9FB2C", Offset = "0xC9FB2C", VA = "0xC9FB2C")]
		public void OnDidLoadPlayer()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0xC9FB90", Offset = "0xC9FB90", VA = "0xC9FB90")]
		private void OnFadeOutComplete()
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0xC9FBF4", Offset = "0xC9FBF4", VA = "0xC9FBF4", Slot = "6")]
		protected override void OnMessageEnd()
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0xC9FD04", Offset = "0xC9FD04", VA = "0xC9FD04", Slot = "5")]
		protected override void OnMessageStart()
		{
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0xC9FDD4", Offset = "0xC9FDD4", VA = "0xC9FDD4", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0xC9FDEC", Offset = "0xC9FDEC", VA = "0xC9FDEC")]
		public ReorientScreenLevelStart()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class ReorientScreenPause : ReorientScreen
	{
		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private TimeScaleRequestAsset _pauseTimescaleRequest;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private LevelManager _levelManager;

		[NonSerialized]
		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 _pausedHeading;

		[NonSerialized]
		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int _timeScaleRequestID;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private IntVariable _pauseSuppression;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private IntVariable _modalUI;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private BoolVariable _controllersVisible;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BoolVariable _hasCalibrated;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private GameObject _pausedContent;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private BoolVariable _isPauseScreenDisplayed;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private EnemyGlobalEvent _playerKilledGlobalEvent;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool _pauseCompleted;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		private bool _isPlayerKilled;

		[NonSerialized]
		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x102")]
		private bool _isLevelReady;

		[Token(Token = "0x170001A1")]
		private bool IsValidUpdate
		{
			[Token(Token = "0x6000E59")]
			[Address(RVA = "0xC9FE08", Offset = "0xC9FE08", VA = "0xC9FE08")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0xC9FE84", Offset = "0xC9FE84", VA = "0xC9FE84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0xC9FFF4", Offset = "0xC9FFF4", VA = "0xC9FFF4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0xCA004C", Offset = "0xCA004C", VA = "0xCA004C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0xCA0124", Offset = "0xCA0124", VA = "0xCA0124")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0xCA025C", Offset = "0xCA025C", VA = "0xCA025C", Slot = "7")]
		protected override bool AllowPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xCA02BC", Offset = "0xCA02BC", VA = "0xCA02BC")]
		private void OnTrackingLossWarningToggled(bool newValue)
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xCA02F0", Offset = "0xCA02F0", VA = "0xCA02F0")]
		private void OnPlayerKilled(Enemy playerKiller)
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xCA03A8", Offset = "0xCA03A8", VA = "0xCA03A8")]
		public void OnLevelReady()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xCA03B4", Offset = "0xCA03B4", VA = "0xCA03B4", Slot = "5")]
		protected override void OnMessageStart()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xCA03E8", Offset = "0xCA03E8", VA = "0xCA03E8", Slot = "8")]
		protected override void OnPauseStart()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xCA0540", Offset = "0xCA0540", VA = "0xCA0540")]
		private void PauseComplete()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xCA0594", Offset = "0xCA0594", VA = "0xCA0594")]
		public void UnPause()
		{
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xCA0084", Offset = "0xCA0084", VA = "0xCA0084")]
		private void UnPauseComplete()
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xCA06E0", Offset = "0xCA06E0", VA = "0xCA06E0", Slot = "9")]
		protected override void LateUpdate()
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xCA073C", Offset = "0xCA073C", VA = "0xCA073C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xCA07F0", Offset = "0xCA07F0", VA = "0xCA07F0")]
		public ReorientScreenPause()
		{
		}
	}
	[Token(Token = "0x2000243")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2D04", Offset = "0x8A2D04")]
	public class Room : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x2000504")]
		public class RoomError
		{
			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Error;

			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEngine.Object Source;

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xCA1060", Offset = "0xCA1060", VA = "0xCA1060")]
			public RoomError(string error, UnityEngine.Object source)
			{
			}
		}

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SceneReference environmentHQ;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SceneReference environmentLQ;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Encounter> potentialEncounters;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SceneReference playerScene;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerDeathController playerDeathController;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private LevelSaveGroup saveGroup;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScreenFadeConfig fadeOutConfig;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ScreenFadeConfig fadeInConfig;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool isBossRoom;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool bossIsInRoom;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private WeightedArmamentAugmentSet rewardSet;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private string roomName;

		[NonSerialized]
		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly List<Encounter> cachedEncounters;

		[Token(Token = "0x170001A2")]
		public SceneReference EnvironmentHQ
		{
			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0xCA080C", Offset = "0xCA080C", VA = "0xCA080C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A3")]
		public SceneReference EnvironmentLQ
		{
			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0xCA0814", Offset = "0xCA0814", VA = "0xCA0814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public List<Encounter> PotentialEncounters
		{
			[Token(Token = "0x6000E6C")]
			[Address(RVA = "0xCA081C", Offset = "0xCA081C", VA = "0xCA081C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A5")]
		public SceneReference PlayerScene
		{
			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0xCA0824", Offset = "0xCA0824", VA = "0xCA0824")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public PlayerDeathController PlayerDeathController
		{
			[Token(Token = "0x6000E6E")]
			[Address(RVA = "0xCA082C", Offset = "0xCA082C", VA = "0xCA082C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A7")]
		public LevelSaveGroup SaveGroup
		{
			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0xCA0834", Offset = "0xCA0834", VA = "0xCA0834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A8")]
		public ScreenFadeConfig FadeOutConfig
		{
			[Token(Token = "0x6000E70")]
			[Address(RVA = "0xCA083C", Offset = "0xCA083C", VA = "0xCA083C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public ScreenFadeConfig FadeInConfig
		{
			[Token(Token = "0x6000E71")]
			[Address(RVA = "0xCA0844", Offset = "0xCA0844", VA = "0xCA0844")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public WeightedArmamentAugmentSet RewardSet
		{
			[Token(Token = "0x6000E72")]
			[Address(RVA = "0xCA084C", Offset = "0xCA084C", VA = "0xCA084C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public string GUID
		{
			[Token(Token = "0x6000E73")]
			[Address(RVA = "0xCA0854", Offset = "0xCA0854", VA = "0xCA0854", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public string DeveloperName
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0xCA085C", Offset = "0xCA085C", VA = "0xCA085C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AD")]
		public bool IsBossRoom
		{
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0xCA0864", Offset = "0xCA0864", VA = "0xCA0864")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AE")]
		public bool BossIsInRoom
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0xCA086C", Offset = "0xCA086C", VA = "0xCA086C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AF")]
		public string RoomName
		{
			[Token(Token = "0x6000E77")]
			[Address(RVA = "0xCA0874", Offset = "0xCA0874", VA = "0xCA0874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0xC9D348", Offset = "0xC9D348", VA = "0xC9D348")]
		public static Room CreateDebug(SceneReference primary, SceneReference playerScene)
		{
			return null;
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0xCA087C", Offset = "0xCA087C", VA = "0xCA087C")]
		public bool UsesScene(Scene scene)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0xCA0AE4", Offset = "0xCA0AE4", VA = "0xCA0AE4")]
		public int GetEncounterIndex(Scene scene)
		{
			return default(int);
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0xC99164", Offset = "0xC99164", VA = "0xC99164")]
		public Encounter GetEncounter(LevelDepth depth)
		{
			return null;
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0xC9AEF8", Offset = "0xC9AEF8", VA = "0xC9AEF8")]
		public bool SupportsChallenge(FloatRange challengeRating)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0xC9AE2C", Offset = "0xC9AE2C", VA = "0xC9AE2C")]
		public bool SupportsFilter(List<NPCCombatantDefinition> requiredEnemies, List<NPCCombatantDefinition> bannedEnemies)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0xC97050", Offset = "0xC97050", VA = "0xC97050")]
		public List<SceneReference> GetAllScenes(bool useHQ)
		{
			return null;
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xCA0CC8", Offset = "0xCA0CC8", VA = "0xCA0CC8")]
		public bool Validate(ref RoomError error)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0xCA10B0", Offset = "0xCA10B0", VA = "0xCA10B0")]
		public Room()
		{
		}
	}
	[Token(Token = "0x2000244")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2D48", Offset = "0x8A2D48")]
	public class RoomDatabase : ObjectDatabase<Room>, IGUIDDatabase<Room>, IGUIDDatabase
	{
		[Token(Token = "0x6000E81")]
		[Address(RVA = "0xCA1164", Offset = "0xCA1164", VA = "0xCA1164")]
		public RoomDatabase()
		{
		}
	}
}
namespace SG.Claymore.Interaction
{
	[Token(Token = "0x2000245")]
	public class CritMarkedEntity : ClaymoreEntity
	{
		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CreditsName _creditsName;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Collider _collider;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5070", Offset = "0x8C5070")]
		[SerializeField]
		private CameraShakeRequestAsset _onHitCameraShake;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ScreenFlashRequestAsset _onHitScreenFlash;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C50CC", Offset = "0x8C50CC")]
		[SerializeField]
		private AudioKeyData _onHitSFXKey;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C5118", Offset = "0x8C5118")]
		[SerializeField]
		private VisualKeyData _onHitVFXKey;

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0xC30E14", Offset = "0xC30E14", VA = "0xC30E14", Slot = "18")]
		public override HitResult HandleHitCollision(ref HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0xC31104", Offset = "0xC31104", VA = "0xC31104")]
		public void EnableCollision(string prefix)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0xC31124", Offset = "0xC31124", VA = "0xC31124")]
		public void DisableCollision()
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0xC31144", Offset = "0xC31144", VA = "0xC31144", Slot = "15")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xC31264", Offset = "0xC31264", VA = "0xC31264")]
		public CritMarkedEntity()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class CrushableVisuals : MonoBehaviour
	{
		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C5164", Offset = "0x8C5164")]
		[SerializeField]
		private Renderer[] renderers;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Light crushLight;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C51C0", Offset = "0x8C51C0")]
		[SerializeField]
		private MecanimParameterReference hideAnimTrigger;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C520C", Offset = "0x8C520C")]
		[SerializeField]
		private MecanimParameterReference showAnimTrigger;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool _useLegacyAnimation;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Animation _animation;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationClip _dematerializeAnimationClip;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AnimationClip _materializeAnimationClip;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CrushReactor reactor;

		[Token(Token = "0x170001B0")]
		public Renderer[] Renderers
		{
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xC35F48", Offset = "0xC35F48", VA = "0xC35F48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xC35F50", Offset = "0xC35F50", VA = "0xC35F50")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0xC36094", Offset = "0xC36094", VA = "0xC36094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xC31D58", Offset = "0xC31D58", VA = "0xC31D58")]
		public void StartCrush()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0xC32050", Offset = "0xC32050", VA = "0xC32050")]
		public void FinishCrush(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0xC3223C", Offset = "0xC3223C", VA = "0xC3223C")]
		public void CancelCrush()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0xC314BC", Offset = "0xC314BC", VA = "0xC314BC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0xC324D4", Offset = "0xC324D4", VA = "0xC324D4")]
		public void StartGrab()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0xC3324C", Offset = "0xC3324C", VA = "0xC3324C")]
		public void HandleCrushUpdate(float crushAmount)
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0xC3326C", Offset = "0xC3326C", VA = "0xC3326C")]
		public void SetRamp(float t)
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0xC32864", Offset = "0xC32864", VA = "0xC32864")]
		public void SetShown(bool shown)
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0xC33AD8", Offset = "0xC33AD8", VA = "0xC33AD8")]
		public void CleanUp()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xC36130", Offset = "0xC36130", VA = "0xC36130")]
		public CrushableVisuals()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class DifficultyInteractable : CrushInteractable
	{
		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C52A8", Offset = "0x8C52A8")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private IntVariable _selectedDifficulty;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		private IntVariable _difficultyLevel;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		private UserString _name;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private UserString _description;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5334", Offset = "0x8C5334")]
		[SerializeField]
		private ChangeDifficultyAnalyticsEvent _changeDifficultyAnalyticsEvent;

		[Token(Token = "0x170001B1")]
		public override string DisplayName
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xC3619C", Offset = "0xC3619C", VA = "0xC3619C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public override string DisplayDescription
		{
			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xC361A8", Offset = "0xC361A8", VA = "0xC361A8", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xC361B4", Offset = "0xC361B4", VA = "0xC361B4", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xC36350", Offset = "0xC36350", VA = "0xC36350")]
		public DifficultyInteractable()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class HandInteractable : MonoBehaviour
	{
		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5380", Offset = "0x8C5380")]
		[AttributeAttribute(Name = "NullConditionalDrawAttribute", RVA = "0x8C5380", Offset = "0x8C5380")]
		[SerializeField]
		private Rigidbody rigidBody;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C53F0", Offset = "0x8C53F0")]
		[AttributeAttribute(Name = "NullConditionalDrawAttribute", RVA = "0x8C53F0", Offset = "0x8C53F0")]
		[SerializeField]
		protected InteractableRegistry registry;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5460", Offset = "0x8C5460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5460", Offset = "0x8C5460")]
		[SerializeField]
		private HandPoseData leftHandPose;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C54D0", Offset = "0x8C54D0")]
		[SerializeField]
		private HandPoseData rightHandPose;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C551C", Offset = "0x8C551C")]
		[SerializeField]
		private GameObject hoverIndicator;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData onGrabSFXKey;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioKeyData onReleaseSFXKey;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5588", Offset = "0x8C5588")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5588", Offset = "0x8C5588")]
		[SerializeField]
		private Transform hoverDetectPoint;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform GripTransform;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform LeftGripTransform;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5618", Offset = "0x8C5618")]
		[SerializeField]
		private bool canBeHeld;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C5664", Offset = "0x8C5664")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5664", Offset = "0x8C5664")]
		[SerializeField]
		private bool canBeTwoHanded;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C56DC", Offset = "0x8C56DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C56DC", Offset = "0x8C56DC")]
		[SerializeField]
		protected SpringConfig springConfig;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C5754", Offset = "0x8C5754")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5754", Offset = "0x8C5754")]
		[SerializeField]
		protected SpringConfig twoHandedSpringConfig;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C57CC", Offset = "0x8C57CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C57CC", Offset = "0x8C57CC")]
		[SerializeField]
		protected TwoHandedSecondaryGrip twoHandedSecondaryGrip;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C5844", Offset = "0x8C5844")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5844", Offset = "0x8C5844")]
		[SerializeField]
		protected BoolVariable strongGripPowerActive;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C58BC", Offset = "0x8C58BC")]
		[SerializeField]
		protected Renderer[] renderers;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected bool defaultOccludeOverlay;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C58F8", Offset = "0x8C58F8")]
		private PlayerHand <ActiveHand>k__BackingField;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5908", Offset = "0x8C5908")]
		private bool <InteractionDisabled>k__BackingField;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private readonly List<PlayerHand> hoveredHands;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private SpringConfig originalSpringConfig;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected bool shouldBeOverlay;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		private bool isHeldInTwoHands;

		[Token(Token = "0x170001B3")]
		public Rigidbody RigidBody
		{
			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xC36354", Offset = "0xC36354", VA = "0xC36354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public SpringConfig SpringConfig
		{
			[Token(Token = "0x6000E99")]
			[Address(RVA = "0xC3635C", Offset = "0xC3635C", VA = "0xC3635C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public Transform HandDetectPoint
		{
			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0xC3641C", Offset = "0xC3641C", VA = "0xC3641C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public bool CanBeHeld
		{
			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0xC36424", Offset = "0xC36424", VA = "0xC36424")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B7")]
		public bool CanBeTwoHanded
		{
			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0xC3642C", Offset = "0xC3642C", VA = "0xC3642C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B8")]
		public TwoHandedSecondaryGrip OffHandGrip
		{
			[Token(Token = "0x6000E9D")]
			[Address(RVA = "0xC36434", Offset = "0xC36434", VA = "0xC36434")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public PlayerHand ActiveHand
		{
			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0xC3643C", Offset = "0xC3643C", VA = "0xC3643C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1720", Offset = "0x8E1720")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E9F")]
			[Address(RVA = "0xC36444", Offset = "0xC36444", VA = "0xC36444")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1730", Offset = "0x8E1730")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public HandPoseData LeftHandPose
		{
			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0xC3644C", Offset = "0xC3644C", VA = "0xC3644C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public HandPoseData RightHandPose
		{
			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0xC36454", Offset = "0xC36454", VA = "0xC36454")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BC")]
		public bool InteractionDisabled
		{
			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0xC3645C", Offset = "0xC3645C", VA = "0xC3645C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1740", Offset = "0x8E1740")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA3")]
			[Address(RVA = "0xC36464", Offset = "0xC36464", VA = "0xC36464")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1750", Offset = "0x8E1750")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public bool IsHeldInTwoHands
		{
			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0xC363D8", Offset = "0xC363D8", VA = "0xC363D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EA5")]
			[Address(RVA = "0xC36470", Offset = "0xC36470", VA = "0xC36470")]
			private set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool StrongGripPowerActive
		{
			[Token(Token = "0x6000EA6")]
			[Address(RVA = "0xC3647C", Offset = "0xC3647C", VA = "0xC3647C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BF")]
		public virtual string DisplayName
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0xC36BE0", Offset = "0xC36BE0", VA = "0xC36BE0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C0")]
		public virtual string DisplayDescription
		{
			[Token(Token = "0x6000EBA")]
			[Address(RVA = "0xC36C30", Offset = "0xC36C30", VA = "0xC36C30", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C1")]
		public virtual ResourceRequestKey InspectionPanelKey
		{
			[Token(Token = "0x6000EBB")]
			[Address(RVA = "0xC36C80", Offset = "0xC36C80", VA = "0xC36C80", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xC364A0", Offset = "0xC364A0", VA = "0xC364A0", Slot = "4")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xC31694", Offset = "0xC31694", VA = "0xC31694", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xC31760", Offset = "0xC31760", VA = "0xC31760", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xC35C6C", Offset = "0xC35C6C", VA = "0xC35C6C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xC31834", Offset = "0xC31834", VA = "0xC31834", Slot = "8")]
		public virtual void HoverStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xC31B58", Offset = "0xC31B58", VA = "0xC31B58", Slot = "9")]
		public virtual void HoverEnd(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xC36750", Offset = "0xC36750", VA = "0xC36750", Slot = "10")]
		protected virtual void HoverActivated(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xC367E8", Offset = "0xC367E8", VA = "0xC367E8", Slot = "11")]
		protected virtual void HoverDeactivated(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xC36880", Offset = "0xC36880", VA = "0xC36880", Slot = "12")]
		public virtual void AddTwoHandedGrab()
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xC36894", Offset = "0xC36894", VA = "0xC36894", Slot = "13")]
		public virtual void RemoveTwoHandedGrab()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xC337A0", Offset = "0xC337A0", VA = "0xC337A0")]
		public Transform GetGripTransform(int palmFacing)
		{
			return null;
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xC368A4", Offset = "0xC368A4", VA = "0xC368A4")]
		public void OnNewGrab(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xC32414", Offset = "0xC32414", VA = "0xC32414", Slot = "14")]
		public virtual void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xC32994", Offset = "0xC32994", VA = "0xC32994")]
		public void SetOccludeOverlay(bool overlay)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xC36BC4", Offset = "0xC36BC4", VA = "0xC36BC4")]
		public void RestoreDefaultOccludeOverlay()
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xC326CC", Offset = "0xC326CC", VA = "0xC326CC", Slot = "15")]
		public virtual void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xC36BD8", Offset = "0xC36BD8", VA = "0xC36BD8", Slot = "16")]
		public virtual void UseStart()
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xC36BDC", Offset = "0xC36BDC", VA = "0xC36BDC", Slot = "17")]
		public virtual void UseEnd()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xC36C88", Offset = "0xC36C88", VA = "0xC36C88")]
		public void SetSpringConfig(SpringConfig newSpringConfig)
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xC33B7C", Offset = "0xC33B7C", VA = "0xC33B7C")]
		public void RestoreSpringConfig()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xC34040", Offset = "0xC34040", VA = "0xC34040")]
		public HandInteractable()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class HandSpringRig : MonoBehaviour
	{
		[Token(Token = "0x2000505")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB10C", Offset = "0x8AB10C")]
		private sealed class <DoImpactSpringLerp>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpringImpact impact;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HandSpringRig <>4__this;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <endTime>5__3;

			[Token(Token = "0x17000472")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D23")]
				[Address(RVA = "0xC37F14", Offset = "0xC37F14", VA = "0xC37F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000473")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D25")]
				[Address(RVA = "0xC37F7C", Offset = "0xC37F7C", VA = "0xC37F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D20")]
			[Address(RVA = "0xC37680", Offset = "0xC37680", VA = "0xC37680")]
			[DebuggerHidden]
			public <DoImpactSpringLerp>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xC37C58", Offset = "0xC37C58", VA = "0xC37C58", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D22")]
			[Address(RVA = "0xC37C5C", Offset = "0xC37C5C", VA = "0xC37C5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xC37F1C", Offset = "0xC37F1C", VA = "0xC37F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HelperSpringFollow LinearHandleMotor;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HelperSpringFollow AngularHandleMotor;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HelperSpringFollow WeaponTipMotor;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HistoricalLagFollowAlternate HistoricalShadow;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform SpringRoot;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5918", Offset = "0x8C5918")]
		public Transform HistoryWeaponAnchor;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform GripWeaponAnchor;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5950", Offset = "0x8C5950")]
		public GameObject VisualGameObject;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine impactRoutine;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5988", Offset = "0x8C5988")]
		private Rigidbody <RigidBody>k__BackingField;

		[Token(Token = "0x170001C2")]
		public Rigidbody RigidBody
		{
			[Token(Token = "0x6000EBF")]
			[Address(RVA = "0xC36D28", Offset = "0xC36D28", VA = "0xC36D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1760", Offset = "0x8E1760")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EC0")]
			[Address(RVA = "0xC36D30", Offset = "0xC36D30", VA = "0xC36D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1770", Offset = "0x8E1770")]
			private set
			{
			}
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xC36D38", Offset = "0xC36D38", VA = "0xC36D38")]
		public void ResetAnchorPositions(Rigidbody weapon)
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xC36E54", Offset = "0xC36E54", VA = "0xC36E54")]
		public void Equip(Rigidbody weapon, SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xC36FB8", Offset = "0xC36FB8", VA = "0xC36FB8")]
		public void RefreshSpringConfig(Rigidbody weapon, SpringConfig newConfig)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xC3700C", Offset = "0xC3700C", VA = "0xC3700C")]
		public void Drop(Rigidbody weapon, SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xC371CC", Offset = "0xC371CC", VA = "0xC371CC")]
		public void SetDriveMultipliers(WeaponDrive linearMult, WeaponDrive tipMult, WeaponDrive angularMult)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xC372F0", Offset = "0xC372F0", VA = "0xC372F0")]
		public void SetDriveLimitMults(WeaponLimit linearLimit, WeaponLimit angleLimit, WeaponLimit tipLimit)
		{
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xC3723C", Offset = "0xC3723C", VA = "0xC3723C")]
		public void SetLinearMult(WeaponDrive linearMult)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xC37278", Offset = "0xC37278", VA = "0xC37278")]
		public void SetTipMult(WeaponDrive tipMult)
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xC372B4", Offset = "0xC372B4", VA = "0xC372B4")]
		public void SetAngularMult(WeaponDrive angleMult)
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xC37374", Offset = "0xC37374", VA = "0xC37374")]
		public void DoImpactAtPosition(Vector3 impactVector, Vector3 position, SpringImpact impact)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xC374C0", Offset = "0xC374C0", VA = "0xC374C0")]
		private void SetUpSpringController(SpringImpact impact)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xC375E8", Offset = "0xC375E8", VA = "0xC375E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1780", Offset = "0x8E1780")]
		private IEnumerator DoImpactSpringLerp(SpringImpact impact)
		{
			return null;
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xC376AC", Offset = "0xC376AC", VA = "0xC376AC")]
		public void DoImpact(SpringImpact impact, Vector3 impactVector)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xC36F34", Offset = "0xC36F34", VA = "0xC36F34")]
		private void PushAllData(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xC37790", Offset = "0xC37790", VA = "0xC37790")]
		private void PushCoreStats(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xC37864", Offset = "0xC37864", VA = "0xC37864")]
		private void PushHistoryData(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xC378E0", Offset = "0xC378E0", VA = "0xC378E0")]
		private void PushLinearSpringData(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xC379DC", Offset = "0xC379DC", VA = "0xC379DC")]
		private void PushAngleSpringData(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xC37AC4", Offset = "0xC37AC4", VA = "0xC37AC4")]
		private void PushTipSpringData(SpringConfig CurrentConfig)
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xC37C50", Offset = "0xC37C50", VA = "0xC37C50")]
		public HandSpringRig()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class HubPortal : MonoBehaviour
	{
		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool restoreHealthOnEntry;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C59B8", Offset = "0x8C59B8")]
		[SerializeField]
		private GlobalEvent _activatePortalGlobalEvent;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent _deactivatePortalGlobalEvent;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntVariable _difficultyLevel;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5A24", Offset = "0x8C5A24")]
		[SerializeField]
		private bool _disableOnAwake;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TriggerVolume _exitVolume;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Collider _portalBlockerCollider;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimControllerParameterAttribute", RVA = "0x8C5A90", Offset = "0x8C5A90")]
		private MecanimParameterReference _showParam;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimControllerParameterAttribute", RVA = "0x8C5ADC", Offset = "0x8C5ADC")]
		private MecanimParameterReference _hideParam;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C5B28", Offset = "0x8C5B28")]
		[SerializeField]
		private Animator[] _animators;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5B74", Offset = "0x8C5B74")]
		[SerializeField]
		private AudioKeyData _portalAppearSFX;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioKeyData[] _portalLoopSFX;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EffectRuntime _currentPortalLoop;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private GlobalEvent onPlayerFullHeal;

		[NonSerialized]
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool _isLevelReady;

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xC37F8C", Offset = "0xC37F8C", VA = "0xC37F8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xC38350", Offset = "0xC38350", VA = "0xC38350")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xC38594", Offset = "0xC38594", VA = "0xC38594")]
		private void OnPortalEnter()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xC38664", Offset = "0xC38664", VA = "0xC38664")]
		private void OnDifficultySelected(int newDifficulty)
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xC38878", Offset = "0xC38878", VA = "0xC38878")]
		private void OnLevelReady()
		{
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xC38668", Offset = "0xC38668", VA = "0xC38668")]
		private void ShowPortal(int level)
		{
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xC38A74", Offset = "0xC38A74", VA = "0xC38A74")]
		private void OnPortalLoopSFXCanceled()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xC38A80", Offset = "0xC38A80", VA = "0xC38A80")]
		private void OnPortalLoopSFXPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xC38B58", Offset = "0xC38B58", VA = "0xC38B58")]
		private void OnPortalActivated()
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xC381E4", Offset = "0xC381E4", VA = "0xC381E4")]
		private void OnPortalDeactivated()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xC38CA4", Offset = "0xC38CA4", VA = "0xC38CA4")]
		public HubPortal()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2DA8", Offset = "0x8A2DA8")]
	public class InteractableRegistry : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C5BE0", Offset = "0x8C5BE0")]
		public List<HandInteractable> Items;

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xC36620", Offset = "0xC36620", VA = "0xC36620")]
		public void AddItem(HandInteractable item)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xC366B8", Offset = "0xC366B8", VA = "0xC366B8")]
		public void RemoveItem(HandInteractable item)
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0xC38DA0", Offset = "0xC38DA0", VA = "0xC38DA0")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public class PlayerHand : XRNodeTracker
	{
		[Token(Token = "0x2000506")]
		public enum HoldingStatus
		{
			[Token(Token = "0x4002151")]
			None,
			[Token(Token = "0x4002152")]
			Armament,
			[Token(Token = "0x4002153")]
			Crushable,
			[Token(Token = "0x4002154")]
			TwoHandOffHand
		}

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5BF0", Offset = "0x8C5BF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5BF0", Offset = "0x8C5BF0")]
		[SerializeField]
		private PlayerHandVariable handVariable;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ArmamentInventory inventory;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5C70", Offset = "0x8C5C70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5C70", Offset = "0x8C5C70")]
		[SerializeField]
		private BinaryInputAction grabAction;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable gripIsToggle;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5CF0", Offset = "0x8C5CF0")]
		[SerializeField]
		private BinaryInputAction useAction;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5D3C", Offset = "0x8C5D3C")]
		[SerializeField]
		private FloatInputAction useActivationAction;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5D88", Offset = "0x8C5D88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5D88", Offset = "0x8C5D88")]
		[SerializeField]
		private HandSpringRig handSpringRigPrefab;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5DF8", Offset = "0x8C5DF8")]
		[SerializeField]
		private TransformVariable equipRootTransformVariable;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C5E44", Offset = "0x8C5E44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5E44", Offset = "0x8C5E44")]
		[SerializeField]
		private float grabRadius;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5EB4", Offset = "0x8C5EB4")]
		[SerializeField]
		private InteractableRegistry interactableRegistry;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5F00", Offset = "0x8C5F00")]
		[SerializeField]
		private bool autoBindNewArmaments;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private int palmFacing;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C5F5C", Offset = "0x8C5F5C")]
		[SerializeField]
		private PlayerHandState state;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private IntVariable modalUI;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GlobalEvent onNewWeaponBind;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private IntVariable grabSuppression;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[DebugOnly]
		[SerializeField]
		private new Transform transform;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6020", Offset = "0x8C6020")]
		[SerializeField]
		private PlayerArmamentAnalyticsEvent armamentEquippedAnalyticsEvent;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public PlayerCombatant PlayerCombatant;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C607C", Offset = "0x8C607C")]
		private HoldingStatus <Holding>k__BackingField;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C608C", Offset = "0x8C608C")]
		private Armament <BoundArmament>k__BackingField;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C609C", Offset = "0x8C609C")]
		private HandSpringRig <HandSpringRigInstance>k__BackingField;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C60AC", Offset = "0x8C60AC")]
		private HandInteractable <HoveredInteractable>k__BackingField;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private HandInteractable heldInteractable;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C60BC", Offset = "0x8C60BC")]
		private bool <IsHandOpen>k__BackingField;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Action OnArmamentChanged;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C610C", Offset = "0x8C610C")]
		private CrushInteractable <HeldCrushable>k__BackingField;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C611C", Offset = "0x8C611C")]
		private Armament <HeldArmament>k__BackingField;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C612C", Offset = "0x8C612C")]
		private TwoHandedSecondaryGrip <HeldOffHandGrip>k__BackingField;

		[Token(Token = "0x170001C3")]
		public HoldingStatus Holding
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0xC38F64", Offset = "0xC38F64", VA = "0xC38F64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1804", Offset = "0x8E1804")]
			get
			{
				return default(HoldingStatus);
			}
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xC38F6C", Offset = "0xC38F6C", VA = "0xC38F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1814", Offset = "0x8E1814")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public Armament BoundArmament
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0xC38F74", Offset = "0xC38F74", VA = "0xC38F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1824", Offset = "0x8E1824")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xC38F7C", Offset = "0xC38F7C", VA = "0xC38F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1834", Offset = "0x8E1834")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public HandSpringRig HandSpringRigInstance
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0xC38F84", Offset = "0xC38F84", VA = "0xC38F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1844", Offset = "0x8E1844")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0xC38F8C", Offset = "0xC38F8C", VA = "0xC38F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1854", Offset = "0x8E1854")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public HandInteractable HoveredInteractable
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0xC38F94", Offset = "0xC38F94", VA = "0xC38F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1864", Offset = "0x8E1864")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0xC38F9C", Offset = "0xC38F9C", VA = "0xC38F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1874", Offset = "0x8E1874")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C7")]
		public HandInteractable HeldInteractable
		{
			[Token(Token = "0x6000EED")]
			[Address(RVA = "0xC38FA4", Offset = "0xC38FA4", VA = "0xC38FA4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EEE")]
			[Address(RVA = "0xC38FAC", Offset = "0xC38FAC", VA = "0xC38FAC")]
			private set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public float PalmFacing
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0xC33240", Offset = "0xC33240", VA = "0xC33240")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C9")]
		public PlayerHandState State
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0xC39148", Offset = "0xC39148", VA = "0xC39148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CA")]
		public float UseActivation
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0xC33224", Offset = "0xC33224", VA = "0xC33224")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001CB")]
		public bool IsHandOpen
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0xC39150", Offset = "0xC39150", VA = "0xC39150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1884", Offset = "0x8E1884")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0xC39158", Offset = "0xC39158", VA = "0xC39158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1894", Offset = "0x8E1894")]
			private set
			{
			}
		}

		[Token(Token = "0x170001CC")]
		public bool IsUsePressed
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0xC39164", Offset = "0xC39164", VA = "0xC39164")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public bool IsCrushing
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0xC39180", Offset = "0xC39180", VA = "0xC39180")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CE")]
		public bool IsGrabPressed
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0xC391A4", Offset = "0xC391A4", VA = "0xC391A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CF")]
		private bool grabbing
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0xC391C0", Offset = "0xC391C0", VA = "0xC391C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0xC39258", Offset = "0xC39258", VA = "0xC39258")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public PlayerHand OtherHand
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0xC392F0", Offset = "0xC392F0", VA = "0xC392F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D1")]
		public CrushInteractable HeldCrushable
		{
			[Token(Token = "0x6000F19")]
			[Address(RVA = "0xC3C920", Offset = "0xC3C920", VA = "0xC3C920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1924", Offset = "0x8E1924")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1A")]
			[Address(RVA = "0xC3C928", Offset = "0xC3C928", VA = "0xC3C928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1934", Offset = "0x8E1934")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D2")]
		public Armament HeldArmament
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0xC3C938", Offset = "0xC3C938", VA = "0xC3C938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1944", Offset = "0x8E1944")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1C")]
			[Address(RVA = "0xC3C940", Offset = "0xC3C940", VA = "0xC3C940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1954", Offset = "0x8E1954")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D3")]
		public TwoHandedSecondaryGrip HeldOffHandGrip
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0xC3C950", Offset = "0xC3C950", VA = "0xC3C950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1964", Offset = "0x8E1964")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F1E")]
			[Address(RVA = "0xC3C958", Offset = "0xC3C958", VA = "0xC3C958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1974", Offset = "0x8E1974")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		private bool CanGrab
		{
			[Token(Token = "0x6000F20")]
			[Address(RVA = "0xC3C968", Offset = "0xC3C968", VA = "0xC3C968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000016")]
		public event Action OnDestroyArmament
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0xC38E1C", Offset = "0xC38E1C", VA = "0xC38E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E17E4", Offset = "0x8E17E4")]
			add
			{
			}
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0xC38EC0", Offset = "0xC38EC0", VA = "0xC38EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E17F4", Offset = "0x8E17F4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		private event Action<HandInteractable> OnInteractableSet
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0xC393CC", Offset = "0xC393CC", VA = "0xC393CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18A4", Offset = "0x8E18A4")]
			add
			{
			}
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0xC39474", Offset = "0xC39474", VA = "0xC39474")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18B4", Offset = "0x8E18B4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<Pose> OnPoseUpdateEvent
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0xC3951C", Offset = "0xC3951C", VA = "0xC3951C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18C4", Offset = "0x8E18C4")]
			add
			{
			}
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0xC395C4", Offset = "0xC395C4", VA = "0xC395C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18D4", Offset = "0x8E18D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<Armament> OnArmamentSummoned
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0xC3966C", Offset = "0xC3966C", VA = "0xC3966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18E4", Offset = "0x8E18E4")]
			add
			{
			}
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0xC39714", Offset = "0xC39714", VA = "0xC39714")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E18F4", Offset = "0x8E18F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action OnArmamentUnsummoned
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0xC397BC", Offset = "0xC397BC", VA = "0xC397BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1904", Offset = "0x8E1904")]
			add
			{
			}
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0xC39864", Offset = "0xC39864", VA = "0xC39864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1914", Offset = "0x8E1914")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0xC3990C", Offset = "0xC3990C", VA = "0xC3990C")]
		public void OnModalUIChange(int count)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0xC39D24", Offset = "0xC39D24", VA = "0xC39D24")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0xC3A068", Offset = "0xC3A068", VA = "0xC3A068")]
		private void WillUnload()
		{
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0xC39DC0", Offset = "0xC39DC0", VA = "0xC39DC0")]
		private void InitializeSpring()
		{
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0xC3A22C", Offset = "0xC3A22C", VA = "0xC3A22C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0xC3A2F8", Offset = "0xC3A2F8", VA = "0xC3A2F8", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0xC3AA68", Offset = "0xC3AA68", VA = "0xC3AA68")]
		private void OnEquipRootChange(Transform root)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xC3AB48", Offset = "0xC3AB48", VA = "0xC3AB48", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xC3AE68", Offset = "0xC3AE68", VA = "0xC3AE68")]
		private void OnGrabSuppressionChange(int newValue)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xC3B37C", Offset = "0xC3B37C", VA = "0xC3B37C")]
		public void Unbind(bool grabEnd = true)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xC3B444", Offset = "0xC3B444", VA = "0xC3B444")]
		public void DestroyArmament()
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xC3A7D0", Offset = "0xC3A7D0", VA = "0xC3A7D0")]
		public void Bind(ArmamentID newArm)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xC3B634", Offset = "0xC3B634", VA = "0xC3B634")]
		private void Bind(Armament newArm)
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xC3B870", Offset = "0xC3B870", VA = "0xC3B870")]
		private void Rebind(Armament newArm)
		{
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xC3BE5C", Offset = "0xC3BE5C", VA = "0xC3BE5C", Slot = "6")]
		protected override void OnPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xC3C624", Offset = "0xC3C624", VA = "0xC3C624")]
		private void DoOneHandedUpdate(bool hasGrip, Transform gripTransform)
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xC3C3D0", Offset = "0xC3C3D0", VA = "0xC3C3D0")]
		private void DoTwoHandedWideUpdate(bool hasGrip)
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xC369E0", Offset = "0xC369E0", VA = "0xC369E0")]
		public void HoverCheck()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xC3C73C", Offset = "0xC3C73C", VA = "0xC3C73C")]
		private void SetHovered(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xC3211C", Offset = "0xC3211C", VA = "0xC3211C")]
		public void ForceGrabEnd()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xC32070", Offset = "0xC32070", VA = "0xC32070")]
		public void ForceSummon()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xC3C8E0", Offset = "0xC3C8E0", VA = "0xC3C8E0")]
		public void RefreshSpringConfig(HandInteractable item)
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xC3BAC4", Offset = "0xC3BAC4", VA = "0xC3BAC4")]
		private void PrepareSprings(HandInteractable item)
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xC3AF2C", Offset = "0xC3AF2C", VA = "0xC3AF2C")]
		private void DoGrabStart(HandInteractable grabbable)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xC3CA3C", Offset = "0xC3CA3C", VA = "0xC3CA3C")]
		private void GrabToggle()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xC39A4C", Offset = "0xC39A4C", VA = "0xC39A4C")]
		private void GrabStart()
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xC3A168", Offset = "0xC3A168", VA = "0xC3A168")]
		private void AttemptSpringRelease()
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xC39AFC", Offset = "0xC39AFC", VA = "0xC39AFC")]
		private void DoGrabEnd(bool updateHandState = true)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xC39C78", Offset = "0xC39C78", VA = "0xC39C78")]
		private void GrabEnd()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xC3CAA8", Offset = "0xC3CAA8", VA = "0xC3CAA8")]
		public void RegisterInteractableSet(Action<HandInteractable> callback)
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xC3CB34", Offset = "0xC3CB34", VA = "0xC3CB34")]
		public void UnregisterInteractableSet(Action<HandInteractable> callback)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xC3CB38", Offset = "0xC3CB38", VA = "0xC3CB38")]
		private void UseStart()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xC3CB88", Offset = "0xC3CB88", VA = "0xC3CB88")]
		private void UseEnd()
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xC3CBB8", Offset = "0xC3CBB8", VA = "0xC3CBB8")]
		public PlayerHand()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2DEC", Offset = "0x8A2DEC")]
	public class AetherMoteArmamentAugment : ArmamentAugment
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C613C", Offset = "0x8C613C")]
		[SerializeField]
		private int aetherAmount;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FloatVariable payoutMultiplier;

		[Token(Token = "0x170001D5")]
		public int AetherAmount
		{
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0xC306C8", Offset = "0xC306C8", VA = "0xC306C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xC30728", Offset = "0xC30728", VA = "0xC30728", Slot = "12")]
		public override string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xC307F4", Offset = "0xC307F4", VA = "0xC307F4")]
		public AetherMoteArmamentAugment()
		{
		}
	}
	[Token(Token = "0x200024E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2E30", Offset = "0x8A2E30")]
	public class ArmamentAugment : ScriptableObject, IGUIDProvider, IProvideIconSprite, IResourceRequestKey
	{
		[Serializable]
		[Token(Token = "0x2000507")]
		public enum UsageResult
		{
			[Token(Token = "0x4002156")]
			Valid,
			[Token(Token = "0x4002157")]
			NoSockets,
			[Token(Token = "0x4002158")]
			SuperMaxed,
			[Token(Token = "0x4002159")]
			MaxUsages,
			[Token(Token = "0x400215A")]
			HealthFull,
			[Token(Token = "0x400215B")]
			FloatOutOfRange
		}

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected UserString displayName;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected UserString description;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C61B8", Offset = "0x8C61B8")]
		[SerializeField]
		private string descriptionPreview;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite iconSprite;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StatMod[] oneTimeBuffs;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GlobalEvent onCrushEvent;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6244", Offset = "0x8C6244")]
		[SerializeField]
		private AugmentCrushedAnalyticsEvent augmentCrushedAnalyticsEvent;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6290", Offset = "0x8C6290")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C6290", Offset = "0x8C6290")]
		[SerializeField]
		private ResourceRequestKey altTraitInteractableKey;

		[NonSerialized]
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int cachedIndex;

		[Token(Token = "0x170001D6")]
		public ResourceRequestKey AltResourceKey
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xC30814", Offset = "0xC30814", VA = "0xC30814")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public string Name
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xC3081C", Offset = "0xC3081C", VA = "0xC3081C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public int CachedIndex
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xC30824", Offset = "0xC30824", VA = "0xC30824", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F31")]
			[Address(RVA = "0xC3082C", Offset = "0xC3082C", VA = "0xC3082C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public StatMod[] OneTimeBuffs
		{
			[Token(Token = "0x6000F32")]
			[Address(RVA = "0xC30834", Offset = "0xC30834", VA = "0xC30834")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DA")]
		public string GUID
		{
			[Token(Token = "0x6000F33")]
			[Address(RVA = "0xC3083C", Offset = "0xC3083C", VA = "0xC3083C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		public string DeveloperName
		{
			[Token(Token = "0x6000F34")]
			[Address(RVA = "0xC30844", Offset = "0xC30844", VA = "0xC30844", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DC")]
		public virtual UserString DisplayName
		{
			[Token(Token = "0x6000F35")]
			[Address(RVA = "0xC3084C", Offset = "0xC3084C", VA = "0xC3084C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		public Sprite IconSprite
		{
			[Token(Token = "0x6000F36")]
			[Address(RVA = "0xC30854", Offset = "0xC30854", VA = "0xC30854", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public virtual BaseArmamentTrait Trait
		{
			[Token(Token = "0x6000F37")]
			[Address(RVA = "0xC3085C", Offset = "0xC3085C", VA = "0xC3085C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xC30864", Offset = "0xC30864", VA = "0xC30864", Slot = "12")]
		public virtual string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xC30904", Offset = "0xC30904", VA = "0xC30904", Slot = "13")]
		public virtual void OnCrush(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xC309D4", Offset = "0xC309D4", VA = "0xC309D4", Slot = "14")]
		public virtual void OnCrushComplete(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xC30AA4", Offset = "0xC30AA4", VA = "0xC30AA4", Slot = "15")]
		public virtual UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(UsageResult);
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xC30AAC", Offset = "0xC30AAC", VA = "0xC30AAC", Slot = "16")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xC30804", Offset = "0xC30804", VA = "0xC30804")]
		public ArmamentAugment()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class AvatarForceFieldPositioner : MonoBehaviour
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClaymoreVRIK vrik;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform rightHandForceField;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform leftHandForceField;

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xC30B10", Offset = "0xC30B10", VA = "0xC30B10")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xC30BF8", Offset = "0xC30BF8", VA = "0xC30BF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xC30CD4", Offset = "0xC30CD4", VA = "0xC30CD4")]
		public AvatarForceFieldPositioner()
		{
		}
	}
	[Token(Token = "0x2000250")]
	public class CrushInteractable : HandInteractable, IResourceLoadHandler<CrushableVisuals>, IResourceLoadHandler
	{
		[Token(Token = "0x2000508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB11C", Offset = "0x8AB11C")]
		private sealed class <DelayedRemat>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CrushInteractable <>4__this;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool playDemat;

			[Token(Token = "0x17000474")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D29")]
				[Address(RVA = "0xC344EC", Offset = "0xC344EC", VA = "0xC344EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000475")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2B")]
				[Address(RVA = "0xC34554", Offset = "0xC34554", VA = "0xC34554", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D26")]
			[Address(RVA = "0xC339F0", Offset = "0xC339F0", VA = "0xC339F0")]
			[DebuggerHidden]
			public <DelayedRemat>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xC340E8", Offset = "0xC340E8", VA = "0xC340E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D28")]
			[Address(RVA = "0xC340EC", Offset = "0xC340EC", VA = "0xC340EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xC344F4", Offset = "0xC344F4", VA = "0xC344F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6330", Offset = "0x8C6330")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C6330", Offset = "0x8C6330")]
		[SerializeField]
		private ProceduralAudio movementProceduralAudio;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C63A0", Offset = "0x8C63A0")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private ResourceRequestKey visualRequestKey;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private CrushableVisuals preloadedVisuals;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ResourceRequestKey inspectionPanelKey;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C641C", Offset = "0x8C641C")]
		[SerializeField]
		private XRHapticsObject onCrushedHaptics;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private XRHapticsObject onCrushStartHaptics;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private XRHapticsObject onCrushingHaptics;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private XRHapticsObject onCrushStartFailHaptics;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private XRHapticsObject onHoverStartHaptics;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private XRHapticsObject onGrabHaptics;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private HandPoseGlobalEvent leftHandPoseGlobalEvent;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private HandPoseGlobalEvent rightHandPoseGlobalEvent;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private HandPoseData leftHandCrushingPose;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private HandPoseData rightHandCrushingPose;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private float maxCrushSeconds;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[SerializeField]
		private float maxUncrushSeconds;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		protected UnityEvent onCrushed;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private GlobalEvent onCrushFail;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6538", Offset = "0x8C6538")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C6538", Offset = "0x8C6538")]
		[SerializeField]
		private AudioKeyData crushFailAudioKey;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C65A8", Offset = "0x8C65A8")]
		[SerializeField]
		private AnimationCurve failEmissionCurve;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C65F4", Offset = "0x8C65F4")]
		[SerializeField]
		private float failAnimationDuration;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C6640", Offset = "0x8C6640")]
		[SerializeField]
		private XRHapticsObject failHaptics;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C668C", Offset = "0x8C668C")]
		[SerializeField]
		private HeldShakeDefinition crushShakeDef;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private HeldShakeDefinition crushFailShakeDef;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C66E8", Offset = "0x8C66E8")]
		[SerializeField]
		private PhysicsFloatConfig dropFloatConfig;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private float maxDistanceFromParent;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[SerializeField]
		private bool rematOnCrush;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		[SerializeField]
		private bool summonOnCrush;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		[SerializeField]
		private bool rematOnRelease;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		protected float dematDuration;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[SerializeField]
		protected float hoverDuration;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		protected float rematDuration;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AudioKeyData dematSFXKey;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private AudioKeyData rematSFXKey;

		[NonSerialized]
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private CrushableVisuals visuals;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected Coroutine crushRoutine;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		protected float crushAmount;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		protected bool isCrushing;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		protected Coroutine rematCoroutine;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		protected Vector3 initLocalPos;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		protected Quaternion initLocalRot;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		protected Transform initParent;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		protected bool abortRemat;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
		protected bool isCrushed;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private Vector3 destOffset;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float shakeStepEndTime;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float crushThresh;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private PlayerHand crushingHand;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private PlayerHand nonCrushingHand;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float nextHapticPlay;

		[NonSerialized]
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private bool isPlayingFail;

		[NonSerialized]
		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float failStartTime;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C67C4", Offset = "0x8C67C4")]
		private bool <ReadyForRespawn>k__BackingField;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C67D4", Offset = "0x8C67D4")]
		public Action OnCrushFail;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private bool didPlayFail;

		[Token(Token = "0x170001DF")]
		protected Vector3 InitialPosition
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xC3126C", Offset = "0xC3126C", VA = "0xC3126C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001E0")]
		public override ResourceRequestKey InspectionPanelKey
		{
			[Token(Token = "0x6000F42")]
			[Address(RVA = "0xC31390", Offset = "0xC31390", VA = "0xC31390", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E1")]
		public bool ReadyForRespawn
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xC31398", Offset = "0xC31398", VA = "0xC31398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1984", Offset = "0x8E1984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F44")]
			[Address(RVA = "0xC313A0", Offset = "0xC313A0", VA = "0xC313A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1994", Offset = "0x8E1994")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public virtual bool CanCrush
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0xC313AC", Offset = "0xC313AC", VA = "0xC313AC", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		protected virtual CrushableVisuals Visuals
		{
			[Token(Token = "0x6000F46")]
			[Address(RVA = "0xC313B4", Offset = "0xC313B4", VA = "0xC313B4", Slot = "23")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public virtual IResourceRequestKey RequestKey
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xC313BC", Offset = "0xC313BC", VA = "0xC313BC", Slot = "24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public ResourceLoadingController ResourceLoader
		{
			[Token(Token = "0x6000F48")]
			[Address(RVA = "0xC313C4", Offset = "0xC313C4", VA = "0xC313C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xC313CC", Offset = "0xC313CC", VA = "0xC313CC", Slot = "25")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xC315D4", Offset = "0xC315D4", VA = "0xC315D4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xC3170C", Offset = "0xC3170C", VA = "0xC3170C", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xC3177C", Offset = "0xC3177C", VA = "0xC3177C", Slot = "8")]
		public override void HoverStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xC31AAC", Offset = "0xC31AAC", VA = "0xC31AAC", Slot = "9")]
		public override void HoverEnd(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xC31C50", Offset = "0xC31C50", VA = "0xC31C50", Slot = "26")]
		protected virtual void OnCrushStart()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xC31D78", Offset = "0xC31D78", VA = "0xC31D78", Slot = "27")]
		protected virtual void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xC31E20", Offset = "0xC31E20", VA = "0xC31E20", Slot = "28")]
		protected virtual void FinishCrush()
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xC32164", Offset = "0xC32164", VA = "0xC32164", Slot = "29")]
		protected virtual void OnCancelCrush()
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xC3225C", Offset = "0xC3225C", VA = "0xC3225C", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xC3256C", Offset = "0xC3256C", VA = "0xC3256C", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xC329A8", Offset = "0xC329A8", VA = "0xC329A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xC33530", Offset = "0xC33530", VA = "0xC33530", Slot = "30")]
		protected virtual void OnCrushAttemptFailed()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xC3328C", Offset = "0xC3328C", VA = "0xC3328C")]
		private void Shake(HeldShakeDefinition shakeDef, float shakeProgress)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xC31D7C", Offset = "0xC31D7C", VA = "0xC31D7C")]
		private void EndShake()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xC3155C", Offset = "0xC3155C", VA = "0xC3155C")]
		public void SetPregrabConditions()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xC33960", Offset = "0xC33960", VA = "0xC33960", Slot = "31")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E19A4", Offset = "0x8E19A4")]
		protected virtual IEnumerator DelayedRemat(bool playDemat)
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xC33A1C", Offset = "0xC33A1C", VA = "0xC33A1C", Slot = "32")]
		protected virtual void CleanUpDemat()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xC33B70", Offset = "0xC33B70", VA = "0xC33B70", Slot = "33")]
		protected virtual void CleanupRemat()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xC33C20", Offset = "0xC33C20", VA = "0xC33C20")]
		public void ProxyCrushComplete(bool invokeOnCrushed)
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xC33D20", Offset = "0xC33D20", VA = "0xC33D20")]
		public void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xC33DE0", Offset = "0xC33DE0", VA = "0xC33DE0", Slot = "21")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xC33F78", Offset = "0xC33F78", VA = "0xC33F78")]
		public CrushInteractable()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class CrushReactor : MonoBehaviour
	{
		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C680C", Offset = "0x8C680C")]
		[SerializeField]
		private AnimationCurve crushRamping;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CameraShakeRequestAsset onCrushedShake;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float minLightRange;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Light pLight;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6888", Offset = "0x8C6888")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8C6888", Offset = "0x8C6888")]
		private Color baselineGlow;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8C68EC", Offset = "0x8C68EC")]
		private Color maxEmissiveGlow;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string emissionPropertyName;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Renderer emissiveRenderer;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C694C", Offset = "0x8C694C")]
		[SerializeField]
		private int targetIndex;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6998", Offset = "0x8C6998")]
		[SerializeField]
		private VisualKeyData onCrushCompleteVFXKey;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		[SerializeField]
		private AudioKeyData crushLoopSFXKey;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6A1C", Offset = "0x8C6A1C")]
		[SerializeField]
		private AudioRequest crushLoopSFX;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioKeyData onCrushStartSFXKey;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioKeyData onCrushCompleteSFXKey;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6A88", Offset = "0x8C6A88")]
		[SerializeField]
		private ArmamentAugmentEffectData crushEffectData;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ArmamentAugmentEffectDataGlobalEvent onCrush;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Coroutine crushRoutine;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isInitialized;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float maxLightRange;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AudioRuntime crushSFXLoopRuntime;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MaterialPropertyBlock emissionPropertyBlock;

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xC3455C", Offset = "0xC3455C", VA = "0xC3455C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xC34738", Offset = "0xC34738", VA = "0xC34738", Slot = "4")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xC34778", Offset = "0xC34778", VA = "0xC34778", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xC347E0", Offset = "0xC347E0", VA = "0xC347E0")]
		private void InitPropertyBlock()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xC3486C", Offset = "0xC3486C", VA = "0xC3486C")]
		private void SetEmissionColor(Color color)
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xC34954", Offset = "0xC34954", VA = "0xC34954")]
		public void StartGrab()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC349EC", Offset = "0xC349EC", VA = "0xC349EC", Slot = "6")]
		public virtual void StartCrush()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xC34BF0", Offset = "0xC34BF0", VA = "0xC34BF0", Slot = "7")]
		public virtual void CancelCrush()
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xC34CA4", Offset = "0xC34CA4", VA = "0xC34CA4", Slot = "8")]
		public virtual void HandleCrushUpdate(float crushAmount)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xC34DA8", Offset = "0xC34DA8", VA = "0xC34DA8", Slot = "9")]
		public virtual void SetRamp(float amount)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xC34E90", Offset = "0xC34E90", VA = "0xC34E90", Slot = "10")]
		public virtual void FinishCrush(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xC35178", Offset = "0xC35178", VA = "0xC35178")]
		private void OnEffectPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xC34BF4", Offset = "0xC34BF4", VA = "0xC34BF4")]
		private void DoStopCleanup()
		{
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xC34AF4", Offset = "0xC34AF4", VA = "0xC34AF4")]
		private void PlayCrushSFXLoop()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xC34758", Offset = "0xC34758", VA = "0xC34758")]
		private void StopCrushSFXLoop()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xC35204", Offset = "0xC35204", VA = "0xC35204")]
		public CrushReactor()
		{
		}
	}
	[Token(Token = "0x2000252")]
	public class CrushableHeart : CrushInteractable
	{
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6AE4", Offset = "0x8C6AE4")]
		[SerializeField]
		private GameObject _visuals;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private GameObject _tendril;

		[Token(Token = "0x170001E6")]
		public bool IsVisible
		{
			[Token(Token = "0x6000F7E")]
			[Address(RVA = "0xC35C1C", Offset = "0xC35C1C", VA = "0xC35C1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<PlayerHand> OnHeartGrabStart
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0xC352EC", Offset = "0xC352EC", VA = "0xC352EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A08", Offset = "0x8E1A08")]
			add
			{
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0xC35394", Offset = "0xC35394", VA = "0xC35394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A18", Offset = "0x8E1A18")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<PlayerHand> OnHeartGrabEnd
		{
			[Token(Token = "0x6000F72")]
			[Address(RVA = "0xC3543C", Offset = "0xC3543C", VA = "0xC3543C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A28", Offset = "0x8E1A28")]
			add
			{
			}
			[Token(Token = "0x6000F73")]
			[Address(RVA = "0xC354E4", Offset = "0xC354E4", VA = "0xC354E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A38", Offset = "0x8E1A38")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action OnHeartCrushStart
		{
			[Token(Token = "0x6000F74")]
			[Address(RVA = "0xC3558C", Offset = "0xC3558C", VA = "0xC3558C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A48", Offset = "0x8E1A48")]
			add
			{
			}
			[Token(Token = "0x6000F75")]
			[Address(RVA = "0xC35634", Offset = "0xC35634", VA = "0xC35634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A58", Offset = "0x8E1A58")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action OnHeartCrushCancel
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xC356DC", Offset = "0xC356DC", VA = "0xC356DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A68", Offset = "0x8E1A68")]
			add
			{
			}
			[Token(Token = "0x6000F77")]
			[Address(RVA = "0xC35784", Offset = "0xC35784", VA = "0xC35784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A78", Offset = "0x8E1A78")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action OnHeartCrushed
		{
			[Token(Token = "0x6000F78")]
			[Address(RVA = "0xC3582C", Offset = "0xC3582C", VA = "0xC3582C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A88", Offset = "0x8E1A88")]
			add
			{
			}
			[Token(Token = "0x6000F79")]
			[Address(RVA = "0xC358D4", Offset = "0xC358D4", VA = "0xC358D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1A98", Offset = "0x8E1A98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action OnHeartExposed
		{
			[Token(Token = "0x6000F7A")]
			[Address(RVA = "0xC3597C", Offset = "0xC3597C", VA = "0xC3597C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AA8", Offset = "0x8E1AA8")]
			add
			{
			}
			[Token(Token = "0x6000F7B")]
			[Address(RVA = "0xC35A24", Offset = "0xC35A24", VA = "0xC35A24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AB8", Offset = "0x8E1AB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action OnHeartRecover
		{
			[Token(Token = "0x6000F7C")]
			[Address(RVA = "0xC35ACC", Offset = "0xC35ACC", VA = "0xC35ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AC8", Offset = "0x8E1AC8")]
			add
			{
			}
			[Token(Token = "0x6000F7D")]
			[Address(RVA = "0xC35B74", Offset = "0xC35B74", VA = "0xC35B74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AD8", Offset = "0x8E1AD8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xC35C38", Offset = "0xC35C38", VA = "0xC35C38", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xC35D7C", Offset = "0xC35D7C", VA = "0xC35D7C", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xC35DFC", Offset = "0xC35DFC", VA = "0xC35DFC", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xC35E84", Offset = "0xC35E84", VA = "0xC35E84", Slot = "26")]
		protected override void OnCrushStart()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xC35EBC", Offset = "0xC35EBC", VA = "0xC35EBC", Slot = "29")]
		protected override void OnCancelCrush()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xC35EF4", Offset = "0xC35EF4", VA = "0xC35EF4", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xC35C80", Offset = "0xC35C80", VA = "0xC35C80")]
		public void SetIsVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xC35F44", Offset = "0xC35F44", VA = "0xC35F44")]
		public CrushableHeart()
		{
		}
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2E74", Offset = "0x8A2E74")]
	public class HeldShakeDefinition : ScriptableObject
	{
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frequency;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C6BB0", Offset = "0x8C6BB0")]
		public float minRadius;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxRadius;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve radiusGrowthCurve;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C6BC0", Offset = "0x8C6BC0")]
		public AnimationCurve speedOverTime;

		[Token(Token = "0x170001E7")]
		public float ShakeStepDur
		{
			[Token(Token = "0x6000F87")]
			[Address(RVA = "0xC33884", Offset = "0xC33884", VA = "0xC33884")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xC33894", Offset = "0xC33894", VA = "0xC33894")]
		public Vector3 GetShakeOffset(float normalizedShakeProgress)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xC37F84", Offset = "0xC37F84", VA = "0xC37F84")]
		public HeldShakeDefinition()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class PurchaseInteractable : CrushInteractable
	{
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6BD0", Offset = "0x8C6BD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C6BD0", Offset = "0x8C6BD0")]
		[SerializeField]
		private WeaponRackSlot slot;

		[Token(Token = "0x170001E8")]
		public ArmamentID ArmamentID
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xC8CDB0", Offset = "0xC8CDB0", VA = "0xC8CDB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E9")]
		public int ArmamentLevel
		{
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xC8CDCC", Offset = "0xC8CDCC", VA = "0xC8CDCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EA")]
		public override bool CanCrush
		{
			[Token(Token = "0x6000F8C")]
			[Address(RVA = "0xC8CDE8", Offset = "0xC8CDE8", VA = "0xC8CDE8", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xC8CE04", Offset = "0xC8CE04", VA = "0xC8CE04", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xC8CE80", Offset = "0xC8CE80", VA = "0xC8CE80", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xC8CEB4", Offset = "0xC8CEB4", VA = "0xC8CEB4", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xC8CEF8", Offset = "0xC8CEF8", VA = "0xC8CEF8")]
		public PurchaseInteractable()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public class RewardInteractable : CrushInteractable
	{
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6C40", Offset = "0x8C6C40")]
		[SerializeField]
		protected GlobalEvent onRewardDropped;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C6C8C", Offset = "0x8C6C8C")]
		[SerializeField]
		protected GlobalEvent onRewardGrabbed;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[SerializeField]
		protected GlobalEvent onRewardCrushStart;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		[SerializeField]
		protected GlobalEvent onRewardCrushCancel;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		[SerializeField]
		private ArmamentAugment upgrade;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		[SerializeField]
		private RoomCompletionHistory completionhistory;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		[SerializeField]
		[HideInInspector]
		private Collider[] colliders;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6D50", Offset = "0x8C6D50")]
		[SerializeField]
		private IntVariable singleWeaponTraitTarget;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		[SerializeField]
		private IntVariable bothWeaponsTraitTarget;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		[SerializeField]
		private AchievementAsset traitsOnSingleWeaponAchievement;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		[SerializeField]
		private AchievementAsset traitsOnBothWeaponsAchievement;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float rematerializationTime;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Coroutine releaseRoutine;

		[Token(Token = "0x170001EB")]
		public ArmamentAugment Upgrade
		{
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xC8CF00", Offset = "0xC8CF00", VA = "0xC8CF00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public override string DisplayName
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xC8CF08", Offset = "0xC8CF08", VA = "0xC8CF08", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public override string DisplayDescription
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xC8CF34", Offset = "0xC8CF34", VA = "0xC8CF34", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		public override bool CanCrush
		{
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0xC8CF54", Offset = "0xC8CF54", VA = "0xC8CF54", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xC8CF90", Offset = "0xC8CF90", VA = "0xC8CF90", Slot = "34")]
		public virtual void Initialize(ArmamentAugment augment)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xC8D078", Offset = "0xC8D078", VA = "0xC8D078")]
		public void ForceRender()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xC8D214", Offset = "0xC8D214", VA = "0xC8D214", Slot = "35")]
		public virtual void HandleOtherRewardCrushed()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xC8D2D0", Offset = "0xC8D2D0", VA = "0xC8D2D0", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xC8D564", Offset = "0xC8D564", VA = "0xC8D564", Slot = "26")]
		protected override void OnCrushStart()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xC8D604", Offset = "0xC8D604", VA = "0xC8D604", Slot = "29")]
		protected override void OnCancelCrush()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xC8D6A4", Offset = "0xC8D6A4", VA = "0xC8D6A4", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xC8D758", Offset = "0xC8D758", VA = "0xC8D758", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xC8CFBC", Offset = "0xC8CFBC", VA = "0xC8CFBC")]
		private void ResetReward()
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xC8D814", Offset = "0xC8D814", VA = "0xC8D814")]
		public RewardInteractable()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class RewardSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000509")]
		public class RewardLoader : IResourceLoadHandler<RewardInteractable>, IResourceLoadHandler
		{
			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8C0", Offset = "0x8DD8C0")]
			private RewardInteractable <Reward>k__BackingField;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public RewardSpawner Spawner;

			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int Index;

			[Token(Token = "0x17000476")]
			public RewardInteractable Reward
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xC90400", Offset = "0xC90400", VA = "0xC90400")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E467C", Offset = "0x8E467C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D2D")]
				[Address(RVA = "0xC90408", Offset = "0xC90408", VA = "0xC90408")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E468C", Offset = "0x8E468C")]
				set
				{
				}
			}

			[Token(Token = "0x6001D2E")]
			[Address(RVA = "0xC90410", Offset = "0xC90410", VA = "0xC90410", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xC8FFA4", Offset = "0xC8FFA4", VA = "0xC8FFA4")]
			public RewardLoader()
			{
			}
		}

		[Token(Token = "0x200050A")]
		public class PreloadRewardLoader : IResourceLoadHandler<RewardInteractable>, IResourceLoadHandler
		{
			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8D0", Offset = "0x8DD8D0")]
			private Transform <SpawnAt>k__BackingField;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8E0", Offset = "0x8DD8E0")]
			private RewardInteractable <Reward>k__BackingField;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DD8F0", Offset = "0x8DD8F0")]
			private ArmamentAugment <Upgrade>k__BackingField;

			[Token(Token = "0x17000477")]
			public Transform SpawnAt
			{
				[Token(Token = "0x6001D30")]
				[Address(RVA = "0xC90194", Offset = "0xC90194", VA = "0xC90194")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E469C", Offset = "0x8E469C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D31")]
				[Address(RVA = "0xC9019C", Offset = "0xC9019C", VA = "0xC9019C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E46AC", Offset = "0x8E46AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000478")]
			public RewardInteractable Reward
			{
				[Token(Token = "0x6001D32")]
				[Address(RVA = "0xC901A4", Offset = "0xC901A4", VA = "0xC901A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E46BC", Offset = "0x8E46BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D33")]
				[Address(RVA = "0xC901AC", Offset = "0xC901AC", VA = "0xC901AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E46CC", Offset = "0x8E46CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000479")]
			public ArmamentAugment Upgrade
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0xC901B4", Offset = "0xC901B4", VA = "0xC901B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E46DC", Offset = "0x8E46DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001D35")]
				[Address(RVA = "0xC901BC", Offset = "0xC901BC", VA = "0xC901BC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E46EC", Offset = "0x8E46EC")]
				set
				{
				}
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xC901C4", Offset = "0xC901C4", VA = "0xC901C4", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xC8FE88", Offset = "0xC8FE88", VA = "0xC8FE88")]
			public void Attach(RewardSpawner spawner, int index)
			{
			}

			[Token(Token = "0x6001D38")]
			[Address(RVA = "0xC8E57C", Offset = "0xC8E57C", VA = "0xC8E57C")]
			public PreloadRewardLoader()
			{
			}
		}

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RewardTendrilController rewardTendrilController;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<Transform> spawnPoints;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C6DFC", Offset = "0x8C6DFC")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C6E34", Offset = "0x8C6E34")]
		private WeightedArmamentAugmentSet defaultRewardSet;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayerHandState leftHandState;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayerHandState rightHandState;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool initOnStart;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C6EB0", Offset = "0x8C6EB0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C6EB0", Offset = "0x8C6EB0")]
		[SerializeField]
		private MecanimParameterReference popAnimTrigger;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C6F1C", Offset = "0x8C6F1C")]
		[SerializeField]
		private PlayerEntityVariable playerEntity;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float distFromPlayer;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float minDistance;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C6FA8", Offset = "0x8C6FA8")]
		[SerializeField]
		private float playerMoveThreshold;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float rotationRate;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float maxRepositionSpeed;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private float repoAcceleration;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private float repoDesceleration;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Transform repoPivot;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private WeightedArmamentAugmentSet runtimeRewards;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ArmamentAugment[] selectedSpawnRewards;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private ArmamentAugment[] augments;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RewardInteractable[] instances;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private IResourceLoadHandler<RewardInteractable>[] loaders;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private List<RewardInteractable> held;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isInitialized;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool doRewardRepositioning;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 heading;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 initPos;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Quaternion goalRot;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 goalPos;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 repoVelocity;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float repoSpeed;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<PreloadRewardLoader> preloaders;

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xC8D81C", Offset = "0xC8D81C", VA = "0xC8D81C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xC8D9A8", Offset = "0xC8D9A8", VA = "0xC8D9A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xC8DA68", Offset = "0xC8DA68", VA = "0xC8DA68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xC8DB88", Offset = "0xC8DB88", VA = "0xC8DB88")]
		private void OnLevelFadeOut()
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xC8DDD0", Offset = "0xC8DDD0", VA = "0xC8DDD0")]
		public void PreSpawn(Transform xf)
		{
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xC8D9B8", Offset = "0xC8D9B8", VA = "0xC8D9B8")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xC8E584", Offset = "0xC8E584", VA = "0xC8E584")]
		private void PopulateSpawnRewards()
		{
		}

		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xC8F1C4", Offset = "0xC8F1C4", VA = "0xC8F1C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0xC8FD20", Offset = "0xC8FD20", VA = "0xC8FD20")]
		public void HandleCrush()
		{
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0xC8FE34", Offset = "0xC8FE34", VA = "0xC8FE34")]
		public void HandlePop()
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0xC8F784", Offset = "0xC8F784", VA = "0xC8F784")]
		private void UpdateSealRewardPositions()
		{
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0xC8E7D0", Offset = "0xC8E7D0", VA = "0xC8E7D0")]
		private void SpawnReward(ArmamentAugment reward)
		{
		}

		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xC8F4D0", Offset = "0xC8F4D0", VA = "0xC8F4D0")]
		public void Spawn(int index)
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xC90098", Offset = "0xC90098", VA = "0xC90098")]
		public RewardSpawner()
		{
		}
	}
	[Token(Token = "0x2000257")]
	[ExecuteAlways]
	public class RewardTendrilController : MonoBehaviour
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7044", Offset = "0x8C7044")]
		[SerializeField]
		private FloatRange ampRange;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatRange freqRange;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float scale;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float shiftRate;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve offsetWeight;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C70D0", Offset = "0x8C70D0")]
		[SerializeField]
		private LineRenderer[] tendrils;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int pointsPerTendril;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform[] origins;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform[] targets;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C714C", Offset = "0x8C714C")]
		[SerializeField]
		private Vector3[] offsetsDebug;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3[] positions;

		[Token(Token = "0x170001EF")]
		private int TendrilCount
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xC90624", Offset = "0xC90624", VA = "0xC90624")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0xC906A4", Offset = "0xC906A4", VA = "0xC906A4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0xC907CC", Offset = "0xC907CC", VA = "0xC907CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0xC90908", Offset = "0xC90908", VA = "0xC90908")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0xC90978", Offset = "0xC90978", VA = "0xC90978")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0xC90A48", Offset = "0xC90A48", VA = "0xC90A48")]
		private void ProcessTendril(int tIndex)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0xC90E0C", Offset = "0xC90E0C", VA = "0xC90E0C")]
		public Vector3 SampleOffset(int tendrilIndex, float tOffset)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xC8FFB4", Offset = "0xC8FFB4", VA = "0xC8FFB4")]
		public void SetTendrilEnabled(int index, bool isActive)
		{
		}

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0xC90F28", Offset = "0xC90F28", VA = "0xC90F28")]
		public RewardTendrilController()
		{
		}
	}
	[Token(Token = "0x2000258")]
	public class UpgradeInteractable : CrushInteractable
	{
		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7198", Offset = "0x8C7198")]
		[SerializeField]
		private ArmamentInventory ownedArmaments;

		[Token(Token = "0x170001F0")]
		public override bool CanCrush
		{
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xC96A74", Offset = "0xC96A74", VA = "0xC96A74", Slot = "22")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xC96B9C", Offset = "0xC96B9C", VA = "0xC96B9C")]
		public bool HasNextLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xC96C10", Offset = "0xC96C10", VA = "0xC96C10")]
		public int GetNextLevel()
		{
			return default(int);
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xC96CD4", Offset = "0xC96CD4", VA = "0xC96CD4")]
		private void Buy(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xC96DB8", Offset = "0xC96DB8", VA = "0xC96DB8", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0xC96E10", Offset = "0xC96E10", VA = "0xC96E10", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0xC96E54", Offset = "0xC96E54", VA = "0xC96E54")]
		public UpgradeInteractable()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2EC8", Offset = "0x8A2EC8")]
	public class SpringConfig : ScriptableObject
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool SupressGravityWhenEquipped;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C71E4", Offset = "0x8C71E4")]
		public ClaymoreAnimCurve RestToSwingBlendOverVelocity;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C721C", Offset = "0x8C721C")]
		public HistoricalLagFollowAlternate.XValueType HistoryLagDriver;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MaxHistoryLagInSeconds;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ClaymoreAnimCurve HistoryLagOverVelocity;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7254", Offset = "0x8C7254")]
		public float HistoryCatchup;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float HistoryInterpolationTime;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C728C", Offset = "0x8C728C")]
		public DualWeaponDrive Grip_Spring;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public DualWeaponLimit Grip_Limit;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WeaponDrive Grip_GravitySpring;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C72C4", Offset = "0x8C72C4")]
		public DualWeaponDrive Twist_Spring;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public DualWeaponDrive AngleYZ_Spring;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public DualWeaponLimit AngleY_Limit;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public DualWeaponLimit AngleZ_Limit;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C72FC", Offset = "0x8C72FC")]
		public TipSpringType TipSpringMode;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8C7334", Offset = "0x8C7334")]
		public DualWeaponDrive Tip_Spring_Omni;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8C7374", Offset = "0x8C7374")]
		public DualWeaponDrive Tip_Spring_X;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8C73B4", Offset = "0x8C73B4")]
		public DualWeaponDrive Tip_Spring_Y;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8C73F4", Offset = "0x8C73F4")]
		public DualWeaponDrive Tip_Spring_Z;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public DualWeaponLimit Tip_Limit;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7434", Offset = "0x8C7434")]
		public float ThrowHandVelocityEnvelope;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public float ThrowVelocityMult;

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xC95528", Offset = "0xC95528", VA = "0xC95528")]
		public SpringConfig()
		{
		}
	}
	[Token(Token = "0x200025A")]
	public class SuperChargeInteractable : CrushInteractable
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		[SerializeField]
		private UserString _name;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		[SerializeField]
		private UserString _description;

		[Token(Token = "0x170001F1")]
		public override string DisplayName
		{
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0xC95548", Offset = "0xC95548", VA = "0xC95548", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public override string DisplayDescription
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0xC95554", Offset = "0xC95554", VA = "0xC95554", Slot = "19")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xC95560", Offset = "0xC95560", VA = "0xC95560", Slot = "27")]
		protected override void OnCrushComplete()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xC9567C", Offset = "0xC9567C", VA = "0xC9567C")]
		public SuperChargeInteractable()
		{
		}
	}
	[Token(Token = "0x200025B")]
	public class ChainAlertTriggerVolume : TriggerVolume
	{
		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PlayerEntityVariable _playerEntityVariable;

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xC30CDC", Offset = "0xC30CDC", VA = "0xC30CDC", Slot = "7")]
		public override void OnEnter(int colliderID)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xC30E0C", Offset = "0xC30E0C", VA = "0xC30E0C")]
		public ChainAlertTriggerVolume()
		{
		}
	}
	[Token(Token = "0x200025C")]
	public class TriggerVolume : MonoBehaviour
	{
		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TriggerVolumeRegistry _triggerVolumeRegistry;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C74BC", Offset = "0x8C74BC")]
		[SerializeField]
		private Collider[] _allColliders;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int[] _collisionIDs;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C74F8", Offset = "0x8C74F8")]
		[SerializeField]
		private BoolVariable _isInsideVolume;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7544", Offset = "0x8C7544")]
		[SerializeField]
		private GlobalEvent _onTriggerVolumeEnterGlobalEvent;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GlobalEvent _onTriggerVolumeExitGlobalEvent;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C75A0", Offset = "0x8C75A0")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onTriggerVolumeEnter;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onTriggerVolumeExit;

		[Token(Token = "0x170001F3")]
		public Collider[] AllColliders
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xC95684", Offset = "0xC95684", VA = "0xC95684")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000022")]
		public event Action OnTriggerEnter
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xC9568C", Offset = "0xC9568C", VA = "0xC9568C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AE8", Offset = "0x8E1AE8")]
			add
			{
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xC95730", Offset = "0xC95730", VA = "0xC95730")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1AF8", Offset = "0x8E1AF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event Action OnTriggerExit
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xC957D4", Offset = "0xC957D4", VA = "0xC957D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B08", Offset = "0x8E1B08")]
			add
			{
			}
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xC95878", Offset = "0xC95878", VA = "0xC95878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B18", Offset = "0x8E1B18")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xC9591C", Offset = "0xC9591C", VA = "0xC9591C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xC95A00", Offset = "0xC95A00", VA = "0xC95A00", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xC95BF4", Offset = "0xC95BF4", VA = "0xC95BF4", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xC95D34", Offset = "0xC95D34", VA = "0xC95D34", Slot = "7")]
		public virtual void OnEnter(int colliderID)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xC95E40", Offset = "0xC95E40", VA = "0xC95E40", Slot = "8")]
		public virtual void OnExit()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xC95F4C", Offset = "0xC95F4C", VA = "0xC95F4C")]
		public TriggerVolume()
		{
		}
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2F0C", Offset = "0x8A2F0C")]
	public class TriggerVolumeRegistry : ScriptableObject
	{
		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<TriggerVolume> _triggerVolumes;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, TriggerVolume> registry;

		[Token(Token = "0x170001F4")]
		public List<TriggerVolume> TriggerVolumes
		{
			[Token(Token = "0x6000FCF")]
			[Address(RVA = "0xC95FDC", Offset = "0xC95FDC", VA = "0xC95FDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000024")]
		public event Action<TriggerVolume> OnItemAdded
		{
			[Token(Token = "0x6000FD0")]
			[Address(RVA = "0xC95FE4", Offset = "0xC95FE4", VA = "0xC95FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B28", Offset = "0x8E1B28")]
			add
			{
			}
			[Token(Token = "0x6000FD1")]
			[Address(RVA = "0xC96088", Offset = "0xC96088", VA = "0xC96088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B38", Offset = "0x8E1B38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event Action<TriggerVolume> OnItemRemoved
		{
			[Token(Token = "0x6000FD2")]
			[Address(RVA = "0xC9612C", Offset = "0xC9612C", VA = "0xC9612C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B48", Offset = "0x8E1B48")]
			add
			{
			}
			[Token(Token = "0x6000FD3")]
			[Address(RVA = "0xC961D0", Offset = "0xC961D0", VA = "0xC961D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B58", Offset = "0x8E1B58")]
			remove
			{
			}
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xC95A20", Offset = "0xC95A20", VA = "0xC95A20")]
		public void AddItem(TriggerVolume item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xC95C14", Offset = "0xC95C14", VA = "0xC95C14")]
		public void RemoveItem(TriggerVolume item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6000FD6")]
		public T GetTriggerVolume<T>(int id) where T : TriggerVolume
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xC96274", Offset = "0xC96274", VA = "0xC96274")]
		public TriggerVolumeRegistry()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public enum TwoHandedGripStyle
	{
		[Token(Token = "0x4001021")]
		Close,
		[Token(Token = "0x4001022")]
		Wide
	}
	[Token(Token = "0x200025F")]
	public class TwoHandedSecondaryGrip : HandInteractable
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C7674", Offset = "0x8C7674")]
		[SerializeField]
		private TwoHandedGripStyle _gripStyle;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Armament _armament;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C76BC", Offset = "0x8C76BC")]
		[SerializeField]
		private float _gripBreakLowSpeedDistance;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7708", Offset = "0x8C7708")]
		[SerializeField]
		private float _gripBreakHighSpeedDistance;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7754", Offset = "0x8C7754")]
		[SerializeField]
		private float _speedCurveMax;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C77A0", Offset = "0x8C77A0")]
		[SerializeField]
		private float _gripTooFarTimeToBreak;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private XRHapticsObject _onGrabBeginHaptics;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private XRHapticsObject _onGrabEndHaptics;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C780C", Offset = "0x8C780C")]
		private Vector3 <MainHandToGripOffset>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float _gripBreakLowSpeedDistanceSquared;

		[NonSerialized]
		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float _gripBreakHighSpeedDistanceSquared;

		[NonSerialized]
		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float _speedCurveMaxSquared;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C781C", Offset = "0x8C781C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C781C", Offset = "0x8C781C")]
		[SerializeField]
		private AudioKeyData gripStartAduio;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C788C", Offset = "0x8C788C")]
		[SerializeField]
		private AudioKeyData gripEndAduio;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C78D8", Offset = "0x8C78D8")]
		private float <LastBreakStartTime>k__BackingField;

		[Token(Token = "0x170001F5")]
		public Armament MainHandArmament
		{
			[Token(Token = "0x6000FD8")]
			[Address(RVA = "0xC96324", Offset = "0xC96324", VA = "0xC96324")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		public TwoHandedGripStyle GripStyle
		{
			[Token(Token = "0x6000FD9")]
			[Address(RVA = "0xC9632C", Offset = "0xC9632C", VA = "0xC9632C")]
			get
			{
				return default(TwoHandedGripStyle);
			}
		}

		[Token(Token = "0x170001F7")]
		public Vector3 MainHandToGripOffset
		{
			[Token(Token = "0x6000FDA")]
			[Address(RVA = "0xC96334", Offset = "0xC96334", VA = "0xC96334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B68", Offset = "0x8E1B68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xC96340", Offset = "0xC96340", VA = "0xC96340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B78", Offset = "0x8E1B78")]
			private set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public float GripTooFarTimeToBreak
		{
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xC9634C", Offset = "0xC9634C", VA = "0xC9634C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001F9")]
		public bool IsBreakClockActive
		{
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xC969FC", Offset = "0xC969FC", VA = "0xC969FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001FA")]
		public float LastBreakStartTime
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xC96A14", Offset = "0xC96A14", VA = "0xC96A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B88", Offset = "0x8E1B88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xC96A1C", Offset = "0xC96A1C", VA = "0xC96A1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1B98", Offset = "0x8E1B98")]
			private set
			{
			}
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0xC96354", Offset = "0xC96354", VA = "0xC96354", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0xC96390", Offset = "0xC96390", VA = "0xC96390", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xC96430", Offset = "0xC96430", VA = "0xC96430", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xC964D0", Offset = "0xC964D0", VA = "0xC964D0")]
		private void OnArmamentSummonChanged(bool isSummoned)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xC96654", Offset = "0xC96654", VA = "0xC96654", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xC967D0", Offset = "0xC967D0", VA = "0xC967D0", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xC96964", Offset = "0xC96964", VA = "0xC96964")]
		public float GetGripBreakDistanceSquared(float handVelocitySqrMag)
		{
			return default(float);
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xC96A24", Offset = "0xC96A24", VA = "0xC96A24")]
		public void StartBreakClock()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xC96A4C", Offset = "0xC96A4C", VA = "0xC96A4C")]
		public void CancelBreakClock()
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xC96A58", Offset = "0xC96A58", VA = "0xC96A58")]
		public TwoHandedSecondaryGrip()
		{
		}
	}
}
namespace SG.Claymore.Interaction.Rewards
{
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2F50", Offset = "0x8A2F50")]
	public class ArmamentAugmentBuild : ScriptableObject
	{
		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ArmamentAugment> _armamentAugments;

		[Token(Token = "0x170001FB")]
		public List<ArmamentAugment> ArmamentAugments
		{
			[Token(Token = "0x6000FEA")]
			[Address(RVA = "0xC90F38", Offset = "0xC90F38", VA = "0xC90F38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xC90F40", Offset = "0xC90F40", VA = "0xC90F40")]
		public ArmamentAugmentBuild()
		{
		}
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2FB0", Offset = "0x8A2FB0")]
	public class ArmamentAugmentEffectData : ScriptableObject
	{
		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VisualKeyData VFXKey;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem weaponMeshParticlePrefab;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int animatorIndex;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C78F8", Offset = "0x8C78F8")]
		private bool <IsLeftHand>k__BackingField;

		[Token(Token = "0x170001FC")]
		public bool IsLeftHand
		{
			[Token(Token = "0x6000FEC")]
			[Address(RVA = "0xC90FC4", Offset = "0xC90FC4", VA = "0xC90FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BA8", Offset = "0x8E1BA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FED")]
			[Address(RVA = "0xC90FCC", Offset = "0xC90FCC", VA = "0xC90FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BB8", Offset = "0x8E1BB8")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xC90FD8", Offset = "0xC90FD8", VA = "0xC90FD8")]
		public ArmamentAugmentEffectData()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public class ArmamentAugmentEffectPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer weaponMeshRenderer;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator weaponAnimator;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string augmentIndexParam;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Armament arm;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform parent;

		[NonSerialized]
		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ManualParticleEffectRuntime weaponEffectRuntime;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool initialized;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool shouldHandleUnsummon;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ArmamentAugmentEffectData data;

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xC90FE0", Offset = "0xC90FE0", VA = "0xC90FE0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0xC91264", Offset = "0xC91264", VA = "0xC91264")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0xC9131C", Offset = "0xC9131C", VA = "0xC9131C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0xC91368", Offset = "0xC91368", VA = "0xC91368")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0xC9132C", Offset = "0xC9132C", VA = "0xC9132C")]
		private void HandleUnsummon()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0xC914C4", Offset = "0xC914C4", VA = "0xC914C4")]
		public void LoadData(ArmamentAugmentEffectData data)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0xC918CC", Offset = "0xC918CC", VA = "0xC918CC")]
		private void OnEffectPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0xC913BC", Offset = "0xC913BC", VA = "0xC913BC")]
		private void UpdateParentPos()
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0xC91A58", Offset = "0xC91A58", VA = "0xC91A58")]
		public ArmamentAugmentEffectPlayer()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class BossHeartLightPulseSequence : MonoBehaviour
	{
		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Light _pointLight;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7968", Offset = "0x8C7968")]
		private Gradient _colorRamp;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _maxIntensity;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float _playbackTimeInSeconds;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _automaticallyStart;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _disableLightAfterSequence;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _executing;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _currentTime;

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0xC92B94", Offset = "0xC92B94", VA = "0xC92B94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0xC92BA4", Offset = "0xC92BA4", VA = "0xC92BA4")]
		public void Execute()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0xC92BF0", Offset = "0xC92BF0", VA = "0xC92BF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0xC92CE8", Offset = "0xC92CE8", VA = "0xC92CE8")]
		public BossHeartLightPulseSequence()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class BossHeartPulse : MonoBehaviour
	{
		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C79F4", Offset = "0x8C79F4")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CrushableHeart _heart;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioRequest _sfxHeartBeatLoop;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7A60", Offset = "0x8C7A60")]
		[SerializeField]
		private AnimationCurve _animationCurve;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _scaleMultiplier;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7ACC", Offset = "0x8C7ACC")]
		[SerializeField]
		private float _currentSpeed;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7B18", Offset = "0x8C7B18")]
		[SerializeField]
		private float _onGrabSpeed;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7B64", Offset = "0x8C7B64")]
		[SerializeField]
		private float _onCrushSpeed;

		[NonSerialized]
		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _baselineScale;

		[NonSerialized]
		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _currentTime;

		[NonSerialized]
		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _originalSpeed;

		[NonSerialized]
		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private XRTrackedNode _grabbingHandNode;

		[NonSerialized]
		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private XRTrackedNode _rightHandNode;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool _isHeartExposed;

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0xC92D00", Offset = "0xC92D00", VA = "0xC92D00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xC92F28", Offset = "0xC92F28", VA = "0xC92F28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xC93190", Offset = "0xC93190", VA = "0xC93190")]
		private void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xC931B4", Offset = "0xC931B4", VA = "0xC931B4")]
		private void GrabEnd(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xC9320C", Offset = "0xC9320C", VA = "0xC9320C")]
		private void HeartCrushStart()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0xC93218", Offset = "0xC93218", VA = "0xC93218")]
		private void HeartCrushCancel()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xC93224", Offset = "0xC93224", VA = "0xC93224")]
		private void Update()
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0xC933EC", Offset = "0xC933EC", VA = "0xC933EC")]
		public void HeartExposed()
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0xC934A0", Offset = "0xC934A0", VA = "0xC934A0")]
		public void HeartRecover()
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0xC934D8", Offset = "0xC934D8", VA = "0xC934D8")]
		private void HeartCrushed()
		{
		}

		[Token(Token = "0x6001006")]
		[Address(RVA = "0xC93510", Offset = "0xC93510", VA = "0xC93510")]
		private void SetSpeed(float newSpeed)
		{
		}

		[Token(Token = "0x6001007")]
		[Address(RVA = "0xC93200", Offset = "0xC93200", VA = "0xC93200")]
		private void RestoreSpeed()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0xC93518", Offset = "0xC93518", VA = "0xC93518")]
		public BossHeartPulse()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class ChargeSuperAugment : ArmamentAugment
	{
		[Token(Token = "0x6001009")]
		[Address(RVA = "0xC93598", Offset = "0xC93598", VA = "0xC93598", Slot = "13")]
		public override void OnCrush(PlayerHand hand)
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0xC93690", Offset = "0xC93690", VA = "0xC93690")]
		public ChargeSuperAugment()
		{
		}
	}
	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A2FF4", Offset = "0x8A2FF4")]
	public class EmbeddedTraitAugment : ArmamentAugment
	{
		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private EmbeddedTrait trait;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7BC0", Offset = "0x8C7BC0")]
		[SerializeField]
		private FloatReferenceConstraint[] constraints;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private QuickButton createTrait;

		[Token(Token = "0x170001FD")]
		public override UserString DisplayName
		{
			[Token(Token = "0x600100B")]
			[Address(RVA = "0xC93698", Offset = "0xC93698", VA = "0xC93698", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		public override BaseArmamentTrait Trait
		{
			[Token(Token = "0x600100D")]
			[Address(RVA = "0xC9385C", Offset = "0xC9385C", VA = "0xC9385C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xC93700", Offset = "0xC93700", VA = "0xC93700", Slot = "12")]
		public override string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xC93878", Offset = "0xC93878", VA = "0xC93878")]
		public void Apply(PlayerHand hand)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xC938AC", Offset = "0xC938AC", VA = "0xC938AC")]
		public void Remove(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xC938E0", Offset = "0xC938E0", VA = "0xC938E0", Slot = "15")]
		public override UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(UsageResult);
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xC93C8C", Offset = "0xC93C8C", VA = "0xC93C8C", Slot = "16")]
		public override void OnValidate()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xC93D14", Offset = "0xC93D14", VA = "0xC93D14")]
		private void CreateTrait()
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xC93D18", Offset = "0xC93D18", VA = "0xC93D18")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xC93D1C", Offset = "0xC93D1C", VA = "0xC93D1C")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xC93D20", Offset = "0xC93D20", VA = "0xC93D20")]
		public EmbeddedTraitAugment()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class EnemyHeartRig : MonoBehaviour
	{
		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CrushableHeart CrushableHeart;

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xC93E64", Offset = "0xC93E64", VA = "0xC93E64")]
		public EnemyHeartRig()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class RestoreHealthAugment : ArmamentAugment
	{
		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private int healthRestoreAmount;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool failOnFullHealth;

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xC93E6C", Offset = "0xC93E6C", VA = "0xC93E6C", Slot = "15")]
		public override UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(UsageResult);
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xC93F50", Offset = "0xC93F50", VA = "0xC93F50", Slot = "13")]
		public override void OnCrush(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xC94018", Offset = "0xC94018", VA = "0xC94018")]
		public RestoreHealthAugment()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class RewardMomentController : MonoBehaviour
	{
		[Token(Token = "0x200050B")]
		private enum State
		{
			[Token(Token = "0x4002167")]
			Standby,
			[Token(Token = "0x4002168")]
			ReadyToPop,
			[Token(Token = "0x4002169")]
			Suspense,
			[Token(Token = "0x400216A")]
			ReadyForCrush,
			[Token(Token = "0x400216B")]
			Done
		}

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerEntityVariable playerEntity;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C7C4C", Offset = "0x8C7C4C")]
		[SerializeField]
		private float popDistThreshold;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioKeyData sfxPoppableKey;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator bloomAnimator;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7CA4", Offset = "0x8C7CA4")]
		[SerializeField]
		private Transform sparkLoopTransform;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C7CF0", Offset = "0x8C7CF0")]
		[SerializeField]
		private AudioKeyData sparkLoopSfxKey;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7D3C", Offset = "0x8C7D3C")]
		[SerializeField]
		private AudioKeyData sfxOnSuspenseStartKey;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ParticleSystem aethermotes;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float suspenseDuration;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve suspenseMoteRateCurve;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float maxMoteRate;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float minMoteRate;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ParticleSystem[] suspenseStartParticlesToPlay;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject[] suspenseStartDeactivate;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject[] suspenseStartActivate;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private UnityEvent onSuspenseStart;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7E18", Offset = "0x8C7E18")]
		[SerializeField]
		private RewardTendrilController tendrils;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C7E64", Offset = "0x8C7E64")]
		[SerializeField]
		private MecanimParameterReference bloomAnimatorPopTrigger;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private RewardSpawner rewardSpawner;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioKeyData sfxOnPopKey;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GlobalEvent onRewardPop;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ParticleSystem[] popParticlesToPlay;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GameObject[] popDeactivate;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private GameObject[] popActivate;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private UnityEvent onPop;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool preloadRewards;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C7F30", Offset = "0x8C7F30")]
		[SerializeField]
		private AudioKeyData sfxOnCrushKey;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C7F7C", Offset = "0x8C7F7C")]
		[SerializeField]
		private MecanimParameterReference bloomAnimatorCrushTrigger;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private ParticleSystem[] crushParticlesToPlay;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private ParticleSystem[] crushParticlesToStop;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private GameObject[] crushDeactivate;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private GameObject[] crushActivate;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private UnityEvent onCrush;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private State currentState;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float suspenseEndTime;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AudioRuntime sparkLoopRuntime;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool isSparkLoopPlaying;

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xC94020", Offset = "0xC94020", VA = "0xC94020")]
		private void Start()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xC940E0", Offset = "0xC940E0", VA = "0xC940E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xC94190", Offset = "0xC94190", VA = "0xC94190")]
		private void StartSparkSFXLoop()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xC940E4", Offset = "0xC940E4", VA = "0xC940E4")]
		private void StopSparkSFXLoop()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xC94358", Offset = "0xC94358", VA = "0xC94358")]
		private void OnSparkBeginPlay(EffectRuntime runtime)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xC94410", Offset = "0xC94410", VA = "0xC94410")]
		private void OnSparkEndPlay()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xC94440", Offset = "0xC94440", VA = "0xC94440")]
		private void Update()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xC94CC0", Offset = "0xC94CC0", VA = "0xC94CC0")]
		public void HandleLastEnemyDied()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xC94DD8", Offset = "0xC94DD8", VA = "0xC94DD8")]
		public void HandleLoadFromSave()
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xC94620", Offset = "0xC94620", VA = "0xC94620")]
		private void StartSuspense()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xC94BB0", Offset = "0xC94BB0", VA = "0xC94BB0")]
		private void UpdateSuspense()
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xC94E8C", Offset = "0xC94E8C", VA = "0xC94E8C")]
		public void HandleRewardPicked()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xC94870", Offset = "0xC94870", VA = "0xC94870")]
		private void DoPop()
		{
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xC94E90", Offset = "0xC94E90", VA = "0xC94E90")]
		private void DoCrush()
		{
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0xC950F8", Offset = "0xC950F8", VA = "0xC950F8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xC951D0", Offset = "0xC951D0", VA = "0xC951D0")]
		public RewardMomentController()
		{
		}
	}
	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3038", Offset = "0x8A3038")]
	public class TraitAugment : ArmamentAugment
	{
		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected BaseArmamentTrait trait;

		[Token(Token = "0x170001FF")]
		public override BaseArmamentTrait Trait
		{
			[Token(Token = "0x600102A")]
			[Address(RVA = "0xC951D8", Offset = "0xC951D8", VA = "0xC951D8", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		public override UserString DisplayName
		{
			[Token(Token = "0x600102B")]
			[Address(RVA = "0xC951E0", Offset = "0xC951E0", VA = "0xC951E0", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xC951FC", Offset = "0xC951FC", VA = "0xC951FC", Slot = "12")]
		public override string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xC9521C", Offset = "0xC9521C", VA = "0xC9521C", Slot = "15")]
		public override UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(UsageResult);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xC95260", Offset = "0xC95260", VA = "0xC95260")]
		public TraitAugment()
		{
		}
	}
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A307C", Offset = "0x8A307C")]
	public class WeightedArmamentAugmentSet : ScriptableObject
	{
		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool AllowMultiple;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AugmentUpgradeWeightedRandomSet Set;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xC95268", Offset = "0xC95268", VA = "0xC95268")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xC8E164", Offset = "0xC8E164", VA = "0xC8E164")]
		public static ISet<ArmamentAugment> GetAllPossible(WeightedArmamentAugmentSet set)
		{
			return null;
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xC95318", Offset = "0xC95318", VA = "0xC95318")]
		private static void BuildMetaData(WeightedArmamentAugmentSet element, [Optional] WeightedArmamentAugmentSet parent)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xC95508", Offset = "0xC95508", VA = "0xC95508")]
		public static implicit operator AugmentUpgradeWeightedRandomSet(WeightedArmamentAugmentSet arg)
		{
			return null;
		}

		[Token(Token = "0x6001033")]
		[Address(RVA = "0xC8E9F8", Offset = "0xC8E9F8", VA = "0xC8E9F8")]
		public static WeightedArmamentAugmentSet DeepCopy(WeightedArmamentAugmentSet element, [Optional] WeightedArmamentAugmentSet parent, int index = -1)
		{
			return null;
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0xC95520", Offset = "0xC95520", VA = "0xC95520")]
		public WeightedArmamentAugmentSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class ArmamentAugmentDataSet
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WeightedArmamentAugmentSet ParentSet;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsSet;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ArmamentAugment ArmamentAugment;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WeightedArmamentAugmentSet WeightedArmamentAugmentSet;

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xC90FBC", Offset = "0xC90FBC", VA = "0xC90FBC")]
		public ArmamentAugmentDataSet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026D")]
	public class AugmentUpgradeWeightedRandomSet : WeightedRandomSet<ArmamentAugmentDataSet>
	{
		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Name;

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<int> MaxUses;

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xC91AB8", Offset = "0xC91AB8", VA = "0xC91AB8")]
		public AugmentUpgradeWeightedRandomSet()
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xC91B70", Offset = "0xC91B70", VA = "0xC91B70")]
		public AugmentUpgradeWeightedRandomSet(AugmentUpgradeWeightedRandomSet copy)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xC91CFC", Offset = "0xC91CFC", VA = "0xC91CFC", Slot = "6")]
		public override void Cache()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xC8EB8C", Offset = "0xC8EB8C", VA = "0xC8EB8C")]
		public void RemoveElementsByUsage(List<ArmamentAugment> usedUpgrades)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xC8EDA4", Offset = "0xC8EDA4", VA = "0xC8EDA4")]
		public void RemoveInvalidElements(AugmentUpgradeWeightedRandomSet set, PlayerHand leftHand, PlayerHand rightHand)
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xC91FE4", Offset = "0xC91FE4", VA = "0xC91FE4")]
		private void RemoveInvalidElementsRecursive(AugmentUpgradeWeightedRandomSet set, PlayerHand leftHand, PlayerHand rightHand)
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xC91DC8", Offset = "0xC91DC8", VA = "0xC91DC8")]
		private void RemoveElementsByUsageRecursive(AugmentUpgradeWeightedRandomSet set, ArmamentAugment element, int useCounter, [Optional] AugmentUpgradeWeightedRandomSet parent)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xC924A0", Offset = "0xC924A0", VA = "0xC924A0")]
		public void RemoveElementsByType(AugmentUpgradeWeightedRandomSet set, Type type)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xC924A4", Offset = "0xC924A4", VA = "0xC924A4")]
		private void RemoveElementsByTypeRecursive(AugmentUpgradeWeightedRandomSet set, Type type)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xC8EDA8", Offset = "0xC8EDA8", VA = "0xC8EDA8")]
		public ArmamentAugment GetRandomElement(AugmentUpgradeWeightedRandomSet set)
		{
			return null;
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xC9285C", Offset = "0xC9285C", VA = "0xC9285C")]
		private void RemoveEmptyNodes(AugmentUpgradeWeightedRandomSet set)
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xC929FC", Offset = "0xC929FC", VA = "0xC929FC")]
		private void RemoveSetNonRecursive(AugmentUpgradeWeightedRandomSet set)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xC8EEB4", Offset = "0xC8EEB4", VA = "0xC8EEB4")]
		public void RemoveElement(WeightedArmamentAugmentSet set, ArmamentAugment element, [Optional] WeightedArmamentAugmentSet parent)
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xC923D4", Offset = "0xC923D4", VA = "0xC923D4")]
		private void RemoveElementByIndex(int index)
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xC92AF4", Offset = "0xC92AF4", VA = "0xC92AF4")]
		private void RemoveAllElements()
		{
		}
	}
}
namespace SG.Claymore.HitSystem
{
	[Token(Token = "0x200026E")]
	public class EnemyHitController : EnemyComponent
	{
		[Serializable]
		[Token(Token = "0x200050C")]
		public class DirectionalAnimationData
		{
			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8DD900", Offset = "0x8DD900")]
			public MecanimParameterReference StaggerTrigger;

			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8DD938", Offset = "0x8DD938")]
			public MecanimParameterReference FlinchTrigger;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 Vector;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Color DebugColor;

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xC2D67C", Offset = "0xC2D67C", VA = "0xC2D67C")]
			public DirectionalAnimationData()
			{
			}
		}

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8028", Offset = "0x8C8028")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8028", Offset = "0x8C8028")]
		[SerializeField]
		private ClaymoreEntityVariable _playerEntityVariable;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8098", Offset = "0x8C8098")]
		[SerializeField]
		private EnemyHitQualityVFXData _enemyHitQualityVFXData;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C80E4", Offset = "0x8C80E4")]
		[SerializeField]
		private EnemyKillData _enemyKillData;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _hitCollisionRoot;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8140", Offset = "0x8C8140")]
		private Collider[] <HitColliders>k__BackingField;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8150", Offset = "0x8C8150")]
		[SerializeField]
		[DebugOnly]
		private Animator _animator;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C81AC", Offset = "0x8C81AC")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C81AC", Offset = "0x8C81AC")]
		private MecanimParameterReference _blockX;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C821C", Offset = "0x8C821C")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C821C", Offset = "0x8C821C")]
		private MecanimParameterReference _blockY;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C828C", Offset = "0x8C828C")]
		[SerializeField]
		private Vector2 _minBlockPositions;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C82D8", Offset = "0x8C82D8")]
		[SerializeField]
		private Vector2 _maxBlockPositions;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8324", Offset = "0x8C8324")]
		[SerializeField]
		private InstancedBoolVariable _deflectWeaponBoolVariable;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8370", Offset = "0x8C8370")]
		[SerializeField]
		private InstancedBoolVariable _hitTakenBoolVariable;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C83BC", Offset = "0x8C83BC")]
		[SerializeField]
		private InstancedFloatVariable _lastRawGuardDamage;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8408", Offset = "0x8C8408")]
		[SerializeField]
		private HistoryVariable _hitsTakenHistoryVariable;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HistoryVariable _hitsTakenHistoryInstance;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8454", Offset = "0x8C8454")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8C8454", Offset = "0x8C8454")]
		[SerializeField]
		public InstancedBoolVariable _canTakeGuardDamage;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C84C4", Offset = "0x8C84C4")]
		[SerializeField]
		public InstancedBoolVariable _takeReducedGuardDamage;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8510", Offset = "0x8C8510")]
		[SerializeField]
		public InstancedFloatVariable _reducedDamageMultiplier;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C855C", Offset = "0x8C855C")]
		[SerializeField]
		private InstancedBoolVariable _wasBlocked;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C85A8", Offset = "0x8C85A8")]
		[SerializeField]
		private InstancedBoolVariable _isLaunchDeathVariable;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private EnemyHealth _enemyHealth;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8604", Offset = "0x8C8604")]
		[SerializeField]
		private InstancedFloatVariable _guardDamageHitMultiplier;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8650", Offset = "0x8C8650")]
		[SerializeField]
		private InstancedFloatVariable _guardDamageBlockMultiplier;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C869C", Offset = "0x8C869C")]
		[SerializeField]
		private InstancedFloatVariable _fumbleDefensePower;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C86E8", Offset = "0x8C86E8")]
		[SerializeField]
		private InstancedBoolVariable _hitByFumble;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8734", Offset = "0x8C8734")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8734", Offset = "0x8C8734")]
		[SerializeField]
		private PlantFeet _footPlanter;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C87A4", Offset = "0x8C87A4")]
		[SerializeField]
		private InstancedFloatVariable _footPlantDurationFloatVariable;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C87F0", Offset = "0x8C87F0")]
		private MecanimParameterReference _knockbackRightTrigger;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8C883C", Offset = "0x8C883C")]
		private MecanimParameterReference _knockbackLeftTrigger;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private DirectionalAnimationData[] _directionalAnimations;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8898", Offset = "0x8C8898")]
		[SerializeField]
		private bool _showDebugHits;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C88E4", Offset = "0x8C88E4")]
		[SerializeField]
		private GameObject _hitDirectionDebugPrefab;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C8930", Offset = "0x8C8930")]
		[SerializeField]
		private Transform _puppetChest;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private BoolVariable _globalShowDebugHitQuality;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private bool _showDebugHitQuality;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C899C", Offset = "0x8C899C")]
		[SerializeField]
		private DebugHitQuality _hitQualityDebugPrefab;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private bool _debugReaction;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8C89F8", Offset = "0x8C89F8")]
		[SerializeField]
		private TriggerHitReactionNode.HitReactionType _hitReactionDebug;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _animatorRestartTime;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private GameObject _audioLocation;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private HitQualityVFXData _lastHitData;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool _isManualAnimatorSpeedControl;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private HitResult _lastValidEnemyHitResult;

		[Token(Token = "0x17000201")]
		public Collider[] HitColliders
		{
			[Token(Token = "0x6001045")]
			[Address(RVA = "0xC2B13C", Offset = "0xC2B13C", VA = "0xC2B13C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BC8", Offset = "0x8E1BC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001046")]
			[Address(RVA = "0xC2B144", Offset = "0xC2B144", VA = "0xC2B144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BD8", Offset = "0x8E1BD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float _guardDamageBlockMultiplierValue
		{
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xC2B14C", Offset = "0xC2B14C", VA = "0xC2B14C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000203")]
		public PlantFeet FootPlanter
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xC2B174", Offset = "0xC2B174", VA = "0xC2B174")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		public HitResult LastValidEnemyHitResult
		{
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xC2B17C", Offset = "0xC2B17C", VA = "0xC2B17C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xC2B184", Offset = "0xC2B184", VA = "0xC2B184", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xC2B278", Offset = "0xC2B278", VA = "0xC2B278")]
		public void UnplantFeet(bool forceUnplant)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xC2B330", Offset = "0xC2B330", VA = "0xC2B330")]
		public HitResult OnHit(HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xC2CEA0", Offset = "0xC2CEA0", VA = "0xC2CEA0")]
		public void SetAnimatorSpeedManual(bool isManual)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xC2C564", Offset = "0xC2C564", VA = "0xC2C564")]
		private void PlayEffects(HitData enemyHitData, HitQualityVFXData hitEffectData, bool isBlock)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xC2CFE0", Offset = "0xC2CFE0", VA = "0xC2CFE0")]
		public void HandleAttackBlocked(AttackBlocker blocker, Vector3 impactVector)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xC2BAF0", Offset = "0xC2BAF0", VA = "0xC2BAF0")]
		private void GetHitQuality(HitData.HitQualityType hitQualityType, HitVFXData weaponHitQualityVFX, ref HitQualityVFXData gradedHitData)
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xC2C414", Offset = "0xC2C414", VA = "0xC2C414")]
		private bool CheckBlock(HitData enemyHitData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xC2C088", Offset = "0xC2C088", VA = "0xC2C088")]
		public void ApplyEnemyDamage(HitData hitData, ref HitResult hitResult)
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xC2BE64", Offset = "0xC2BE64", VA = "0xC2BE64")]
		public void HandleHit(Vector3 hitDirection)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xC2D144", Offset = "0xC2D144", VA = "0xC2D144")]
		public void TriggerHitReaction(TriggerHitReactionNode.HitReactionType hitReactionType)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xC2D4A4", Offset = "0xC2D4A4", VA = "0xC2D4A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xC2CEAC", Offset = "0xC2CEAC", VA = "0xC2CEAC")]
		private Vector3 ProjectOnPESpace(Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xC2D5B4", Offset = "0xC2D5B4", VA = "0xC2D5B4")]
		public EnemyHitController()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A30DC", Offset = "0x8A30DC")]
	public class EnemyHitQualityVFXData : ScriptableObject
	{
		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8A44", Offset = "0x8C8A44")]
		[SerializeField]
		private EffectKeyData _deflectEffectKey;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioKeyData _deflectSFXKey;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8AA0", Offset = "0x8C8AA0")]
		[SerializeField]
		private AudioKeyData _underHitSFXKey;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8AEC", Offset = "0x8C8AEC")]
		[SerializeField]
		private AudioKeyData _standardHitSFXKey;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8B38", Offset = "0x8C8B38")]
		[SerializeField]
		private AudioKeyData _bigHitSFXKey;

		[Token(Token = "0x17000205")]
		public EffectKeyData DeflectEffectKey
		{
			[Token(Token = "0x6001058")]
			[Address(RVA = "0xC2D704", Offset = "0xC2D704", VA = "0xC2D704")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000206")]
		public AudioKeyData DeflectSFX
		{
			[Token(Token = "0x6001059")]
			[Address(RVA = "0xC2D70C", Offset = "0xC2D70C", VA = "0xC2D70C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000207")]
		public AudioKeyData UnderHitSFX
		{
			[Token(Token = "0x600105A")]
			[Address(RVA = "0xC2D714", Offset = "0xC2D714", VA = "0xC2D714")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public AudioKeyData StandardHitSFX
		{
			[Token(Token = "0x600105B")]
			[Address(RVA = "0xC2D71C", Offset = "0xC2D71C", VA = "0xC2D71C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public AudioKeyData BigHitSFX
		{
			[Token(Token = "0x600105C")]
			[Address(RVA = "0xC2D724", Offset = "0xC2D724", VA = "0xC2D724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xC2D72C", Offset = "0xC2D72C", VA = "0xC2D72C")]
		public EnemyHitQualityVFXData()
		{
		}
	}
	[Token(Token = "0x2000270")]
	public class HitResult
	{
		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int HealthDamageDealt;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float GuardDamageDealt;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool KilledEnemy;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitQualityVFXData HitQualityVFXData;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public HitData EnemyHitData;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Collider[] AffectedColliders;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float ForceRating;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public Vector3 Velocity;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Vector3 PlayerPos;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Enemy Enemy;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public EnemyProjectile EnemyProj;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public int ComboIndex;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xC2BA04", Offset = "0xC2BA04", VA = "0xC2BA04")]
		public void Reset()
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xC2B9FC", Offset = "0xC2B9FC", VA = "0xC2B9FC")]
		public HitResult()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public class EnemyKillController : EnemyComponent
	{
		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ClaymoreProp[] _claymoreProps;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8BA4", Offset = "0x8C8BA4")]
		[SerializeField]
		private EnemyHitController _enemyHitController;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8BF0", Offset = "0x8C8BF0")]
		[SerializeField]
		private EnemyGlobalEvent _onEnemyDied;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8C3C", Offset = "0x8C8C3C")]
		[SerializeField]
		private RoomCompletionHistory _completionHistory;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8C88", Offset = "0x8C8C88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C8C88", Offset = "0x8C8C88")]
		[CollapsingUnityEvent]
		[SerializeField]
		private UnityEvent _onDeathEvent;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8D08", Offset = "0x8C8D08")]
		[SerializeField]
		private AchievementAsset[] _onEnemyKilledAchievements;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AchievementAsset _ragdollDistanceAchievement;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AchievementAsset _ragdollDistance2Achievement;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private IntVariable _ragdollDistanceTarget;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable _ragdollDistance2Target;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8D94", Offset = "0x8C8D94")]
		[SerializeField]
		private EnemyKilledAnalyticsEvent _enemyKilledAnalyticsEvent;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private EnemyDatabase _enemyDatabase;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8DF0", Offset = "0x8C8DF0")]
		[SerializeField]
		private bool _printDeathDistanceTravelled;

		[NonSerialized]
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float _currentMaxDeathDistanceTravelled;

		[NonSerialized]
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool _isDying;

		[NonSerialized]
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool _killingStarted;

		[NonSerialized]
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		private bool _isTrackingLaunchDeath;

		[NonSerialized]
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector3 _deathStartPosition;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private FloatVariable _enemyMaxHeight;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private FloatVariable _distanceFlew;

		[Token(Token = "0x14000026")]
		public event Action OnKillStart
		{
			[Token(Token = "0x6001060")]
			[Address(RVA = "0xC2D734", Offset = "0xC2D734", VA = "0xC2D734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BE8", Offset = "0x8E1BE8")]
			add
			{
			}
			[Token(Token = "0x6001061")]
			[Address(RVA = "0xC2D7D8", Offset = "0xC2D7D8", VA = "0xC2D7D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1BF8", Offset = "0x8E1BF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action OnBodyDissolveComplete
		{
			[Token(Token = "0x6001062")]
			[Address(RVA = "0xC2D87C", Offset = "0xC2D87C", VA = "0xC2D87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C08", Offset = "0x8E1C08")]
			add
			{
			}
			[Token(Token = "0x6001063")]
			[Address(RVA = "0xC2D920", Offset = "0xC2D920", VA = "0xC2D920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C18", Offset = "0x8E1C18")]
			remove
			{
			}
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xC2D9C4", Offset = "0xC2D9C4", VA = "0xC2D9C4", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xC2DAAC", Offset = "0xC2DAAC", VA = "0xC2DAAC")]
		public void KillStart()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0xC2DB30", Offset = "0xC2DB30", VA = "0xC2DB30")]
		public void Kill(bool isNonImpactDeath)
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xC2DE14", Offset = "0xC2DE14", VA = "0xC2DE14")]
		private void Update()
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0xC2E230", Offset = "0xC2E230", VA = "0xC2E230")]
		private void DeathComplete()
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xC2E26C", Offset = "0xC2E26C", VA = "0xC2E26C")]
		private void DeathBlendComplete()
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xC2E2B8", Offset = "0xC2E2B8", VA = "0xC2E2B8")]
		public EnemyKillController()
		{
		}
	}
	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A313C", Offset = "0x8A313C")]
	public class EnemyKillData : ScriptableObject
	{
		[Token(Token = "0x200050D")]
		public enum KillForceBoost
		{
			[Token(Token = "0x4002171")]
			None,
			[Token(Token = "0x4002172")]
			Up,
			[Token(Token = "0x4002173")]
			Down
		}

		[Token(Token = "0x200050E")]
		public struct KillForceResult
		{
			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsLaunchDeath;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float Rating;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float DeathBlendDuration;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float LaunchForce;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public KillForceBoost KillForceBoost;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 HitDirection;
		}

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _forceRatingMultiplier;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _forceRatingLaunchThreshold;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxDeathBlendTime;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _defaultForceRating;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _defaultForce;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C8ECC", Offset = "0x8C8ECC")]
		[SerializeField]
		private ExposedTransformPoint _sfxOrigin;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioKeyData _deathSFXKey;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData _deathVoSFXKey;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C8F38", Offset = "0x8C8F38")]
		[SerializeField]
		private float _maxEnemyKillAngle;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C8F7C", Offset = "0x8C8F7C")]
		[SerializeField]
		private float _blendTowardsFront;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C8FBC", Offset = "0x8C8FBC")]
		[SerializeField]
		private float _blendTowardsUp;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float _uppercutAngleThreshold;

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C900C", Offset = "0x8C900C")]
		[SerializeField]
		private float _uppercutBlend;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C904C", Offset = "0x8C904C")]
		[SerializeField]
		private float _hammerfistAngleThreshold;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C9098", Offset = "0x8C9098")]
		[SerializeField]
		private float _hammerfistBlend;

		[Token(Token = "0x1700020A")]
		public float MaxDeathBlendTime
		{
			[Token(Token = "0x600106B")]
			[Address(RVA = "0xC2E348", Offset = "0xC2E348", VA = "0xC2E348")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020B")]
		public ExposedTransformPoint SFXOrigin
		{
			[Token(Token = "0x600106C")]
			[Address(RVA = "0xC2E350", Offset = "0xC2E350", VA = "0xC2E350")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public AudioKeyData DeathSFX
		{
			[Token(Token = "0x600106D")]
			[Address(RVA = "0xC2E358", Offset = "0xC2E358", VA = "0xC2E358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020D")]
		public AudioKeyData DeathVoSFX
		{
			[Token(Token = "0x600106E")]
			[Address(RVA = "0xC2E360", Offset = "0xC2E360", VA = "0xC2E360")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xC2D11C", Offset = "0xC2D11C", VA = "0xC2D11C")]
		public bool IsLaunch(HitResult hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xC2E368", Offset = "0xC2E368", VA = "0xC2E368")]
		public KillForceResult GetKill(HitResult hit, Vector3 playerPos, Vector3 enemyPos)
		{
			return default(KillForceResult);
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xC2E7C4", Offset = "0xC2E7C4", VA = "0xC2E7C4")]
		private float InverseLerpUnclamped(float a, float b, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xC2E860", Offset = "0xC2E860", VA = "0xC2E860")]
		public EnemyKillData()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public struct HitData
	{
		[Token(Token = "0x200050F")]
		public enum HitQualityType
		{
			[Token(Token = "0x400217B")]
			Illegal,
			[Token(Token = "0x400217C")]
			UnderHit,
			[Token(Token = "0x400217D")]
			StandardHit,
			[Token(Token = "0x400217E")]
			BigHit
		}

		[Token(Token = "0x2000510")]
		public enum HitStyleType
		{
			[Token(Token = "0x4002180")]
			Stab,
			[Token(Token = "0x4002181")]
			Swing,
			[Token(Token = "0x4002182")]
			Other
		}

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 CollisionPoint;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HitVFXData WeaponHitQualityVFXData;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 HitDirection;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HitStyleType HitType;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HitQualityType HitQuality;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float FumbleAttackPower;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ForceRating;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Armament OriginatingArmament;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool ReportArmamentEvents;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int HealthDamage;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float GuardDamage;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IVariableResolver VariableResolver;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool IgnoreBlock;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public PlayerCombatant Player;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<HitProperty> HitProperties;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolVariable[] EnemyTriggers;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IGUIDProvider GUIDProvider;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool DamageHealthThroughGuard;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool CanDamageHealth;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float DistanceTraveled;

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x967744", Offset = "0x967744", VA = "0x967744")]
		public HitData(PlayerCombatant attacker, Vector3 collisionPoint, Vector3 hitDirection, HitStyleType hitType, HitQualityType hitQualityType, HitVFXData hitQualityVFXData, int healthDamage, float guardDamage, BoolVariable[] enemyTriggers)
		{
		}
	}
	[Token(Token = "0x2000274")]
	public struct HitQualityVFXData
	{
		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HitData.HitQualityType HitQuality;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsCrit;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioKeyData EnemySoundEffect;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EffectKeyData WeaponHitGuardEffectKey;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioKeyData WeaponSoundEffect;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EffectKeyData WeaponHitCritEffectKey;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioKeyData WeaponSoundCritEffect;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CameraShakeRequestAsset GuardHitCameraShake;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CameraShakeRequestAsset CritHitCameraShake;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ScreenFlashRequestAsset GuardHitScreenFlash;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ScreenFlashRequestAsset CritHitScreenFlash;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float AnimatorGuardPauseTime;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float AnimatorCritPauseTime;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public EnemyHitController.DirectionalAnimationData DirectionalAnimationData;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MecanimParameterReference KnockbackAnimationParameter;
	}
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A319C", Offset = "0x8A319C")]
	public class HitVFXData : ScriptableObject
	{
		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C90D8", Offset = "0x8C90D8")]
		[SerializeField]
		private float _underHitGuardAnimatorPauseTime;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _underHitCritAnimatorPauseTime;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CameraShakeRequestAsset _underHitGuardCameraShake;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CameraShakeRequestAsset _underHitCritCameraShake;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScreenFlashRequestAsset _underHitGuardScreenFlash;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScreenFlashRequestAsset _underHitCritScreenFlash;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EffectKeyData _underHitGuardEffectKey;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EffectKeyData _underHitCritEffectKey;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioKeyData _underHitSFXKey;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioKeyData _underHitCritSFXKey;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C91B4", Offset = "0x8C91B4")]
		[SerializeField]
		private float _standardHitGuardAnimatorPauseTime;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float _standardHitCritAnimatorPauseTime;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CameraShakeRequestAsset _standardHitGuardCameraShake;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CameraShakeRequestAsset _standardHitCritCameraShake;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ScreenFlashRequestAsset _standardHitGuardScreenFlash;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ScreenFlashRequestAsset _standardHitCritScreenFlash;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private EffectKeyData _standardHitGuardEffectKey;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private EffectKeyData _standardHitCritEffectKey;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioKeyData _standardHitSFXKey;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioKeyData _standardHitCritSFXKey;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9290", Offset = "0x8C9290")]
		[SerializeField]
		private float _bigHitGuardAnimatorPauseTime;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private float _bigHitCritAnimatorPauseTime;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private CameraShakeRequestAsset _bigHitGuardCameraShake;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private CameraShakeRequestAsset _bigHitCritCameraShake;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ScreenFlashRequestAsset _bigHitGuardScreenFlash;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ScreenFlashRequestAsset _bigHitCritScreenFlash;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private EffectKeyData _bigHitGuardEffectKey;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private EffectKeyData _bigHitCritEffectKey;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private AudioKeyData _bigHitSFXKey;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private AudioKeyData _bigHitCritSFXKey;

		[Token(Token = "0x1700020E")]
		public float UnderHitGuardAnimatorPauseTime
		{
			[Token(Token = "0x6001074")]
			[Address(RVA = "0xC2EA18", Offset = "0xC2EA18", VA = "0xC2EA18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700020F")]
		public float UnderHitCritAnimatorPauseTime
		{
			[Token(Token = "0x6001075")]
			[Address(RVA = "0xC2EA20", Offset = "0xC2EA20", VA = "0xC2EA20")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000210")]
		public EffectKeyData UnderHitGuardEffectKey
		{
			[Token(Token = "0x6001076")]
			[Address(RVA = "0xC2EA28", Offset = "0xC2EA28", VA = "0xC2EA28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000211")]
		public EffectKeyData UnderHitCritEffectKey
		{
			[Token(Token = "0x6001077")]
			[Address(RVA = "0xC2EA30", Offset = "0xC2EA30", VA = "0xC2EA30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		public AudioKeyData UnderHitSFX
		{
			[Token(Token = "0x6001078")]
			[Address(RVA = "0xC2EA38", Offset = "0xC2EA38", VA = "0xC2EA38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000213")]
		public AudioKeyData UnderHitCritSFX
		{
			[Token(Token = "0x6001079")]
			[Address(RVA = "0xC2EA40", Offset = "0xC2EA40", VA = "0xC2EA40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		public float StandardHitGuardAnimatorPauseTime
		{
			[Token(Token = "0x600107A")]
			[Address(RVA = "0xC2EA48", Offset = "0xC2EA48", VA = "0xC2EA48")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000215")]
		public float StandardHitCritAnimatorPauseTime
		{
			[Token(Token = "0x600107B")]
			[Address(RVA = "0xC2EA50", Offset = "0xC2EA50", VA = "0xC2EA50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000216")]
		public EffectKeyData StandardHitGuardEffectKey
		{
			[Token(Token = "0x600107C")]
			[Address(RVA = "0xC2EA58", Offset = "0xC2EA58", VA = "0xC2EA58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		public EffectKeyData StandardHitCritEffectKey
		{
			[Token(Token = "0x600107D")]
			[Address(RVA = "0xC2EA60", Offset = "0xC2EA60", VA = "0xC2EA60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		public AudioKeyData StandardHitSFX
		{
			[Token(Token = "0x600107E")]
			[Address(RVA = "0xC2EA68", Offset = "0xC2EA68", VA = "0xC2EA68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000219")]
		public AudioKeyData StandardHitCritSFX
		{
			[Token(Token = "0x600107F")]
			[Address(RVA = "0xC2EA70", Offset = "0xC2EA70", VA = "0xC2EA70")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		public float BigHitGuardAnimatorPauseTime
		{
			[Token(Token = "0x6001080")]
			[Address(RVA = "0xC2EA78", Offset = "0xC2EA78", VA = "0xC2EA78")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021B")]
		public float BigHitCritAnimatorPauseTime
		{
			[Token(Token = "0x6001081")]
			[Address(RVA = "0xC2EA80", Offset = "0xC2EA80", VA = "0xC2EA80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700021C")]
		public EffectKeyData BigHitGuardEffectKey
		{
			[Token(Token = "0x6001082")]
			[Address(RVA = "0xC2EA88", Offset = "0xC2EA88", VA = "0xC2EA88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		public EffectKeyData BigHitCritEffectKey
		{
			[Token(Token = "0x6001083")]
			[Address(RVA = "0xC2EA90", Offset = "0xC2EA90", VA = "0xC2EA90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		public AudioKeyData BigHitSFX
		{
			[Token(Token = "0x6001084")]
			[Address(RVA = "0xC2EA98", Offset = "0xC2EA98", VA = "0xC2EA98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021F")]
		public AudioKeyData BigHitCritSFX
		{
			[Token(Token = "0x6001085")]
			[Address(RVA = "0xC2EAA0", Offset = "0xC2EAA0", VA = "0xC2EAA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		public CameraShakeRequestAsset UnderHitGuardCameraShake
		{
			[Token(Token = "0x6001086")]
			[Address(RVA = "0xC2EAA8", Offset = "0xC2EAA8", VA = "0xC2EAA8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000221")]
		public CameraShakeRequestAsset UnderHitCritCameraShake
		{
			[Token(Token = "0x6001087")]
			[Address(RVA = "0xC2EAB0", Offset = "0xC2EAB0", VA = "0xC2EAB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		public ScreenFlashRequestAsset UnderHitGuardScreenFlash
		{
			[Token(Token = "0x6001088")]
			[Address(RVA = "0xC2EAB8", Offset = "0xC2EAB8", VA = "0xC2EAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000223")]
		public ScreenFlashRequestAsset UnderHitCritScreenFlash
		{
			[Token(Token = "0x6001089")]
			[Address(RVA = "0xC2EAC0", Offset = "0xC2EAC0", VA = "0xC2EAC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public CameraShakeRequestAsset StandardHitGuardCameraShake
		{
			[Token(Token = "0x600108A")]
			[Address(RVA = "0xC2EAC8", Offset = "0xC2EAC8", VA = "0xC2EAC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000225")]
		public CameraShakeRequestAsset StandardHitCritCameraShake
		{
			[Token(Token = "0x600108B")]
			[Address(RVA = "0xC2EAD0", Offset = "0xC2EAD0", VA = "0xC2EAD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public ScreenFlashRequestAsset StandardHitGuardScreenFlash
		{
			[Token(Token = "0x600108C")]
			[Address(RVA = "0xC2EAD8", Offset = "0xC2EAD8", VA = "0xC2EAD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000227")]
		public ScreenFlashRequestAsset StandardHitCritScreenFlash
		{
			[Token(Token = "0x600108D")]
			[Address(RVA = "0xC2EAE0", Offset = "0xC2EAE0", VA = "0xC2EAE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000228")]
		public CameraShakeRequestAsset BigHitGuardCameraShake
		{
			[Token(Token = "0x600108E")]
			[Address(RVA = "0xC2EAE8", Offset = "0xC2EAE8", VA = "0xC2EAE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000229")]
		public CameraShakeRequestAsset BigHitCritCameraShake
		{
			[Token(Token = "0x600108F")]
			[Address(RVA = "0xC2EAF0", Offset = "0xC2EAF0", VA = "0xC2EAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		public ScreenFlashRequestAsset BigHitGuardScreenFlash
		{
			[Token(Token = "0x6001090")]
			[Address(RVA = "0xC2EAF8", Offset = "0xC2EAF8", VA = "0xC2EAF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022B")]
		public ScreenFlashRequestAsset BigHitCritScreenFlash
		{
			[Token(Token = "0x6001091")]
			[Address(RVA = "0xC2EB00", Offset = "0xC2EB00", VA = "0xC2EB00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xC2EB08", Offset = "0xC2EB08", VA = "0xC2EB08")]
		public HitVFXData()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class WeaponHitController : MonoBehaviour
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0xC2EB28", Offset = "0xC2EB28", VA = "0xC2EB28")]
		public WeaponHitController()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public class WeaponHitTracker : MonoBehaviour
	{
		[Token(Token = "0x2000511")]
		private struct VelocityData
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly float Time;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly Vector3 Velocity;

			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x967794", Offset = "0x967794", VA = "0x967794")]
			public VelocityData(float time, Vector3 velocity)
			{
			}
		}

		[Token(Token = "0x2000512")]
		private struct MotionData
		{
			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly float Time;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly Vector3 Direction;

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x967788", Offset = "0x967788", VA = "0x967788")]
			public MotionData(float time, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x400112F")]
		private const int MAX_TRACKED_DATA = 200;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeleeWeapon _meleeWeapon;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _speedTrackTransform;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _positionTrackTransform;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _motionTrackTransform;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C93AC", Offset = "0x8C93AC")]
		[SerializeField]
		private float _minimumStabMotionSimilarity;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _stabEnergyDecay;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _peakStabEnergyGain;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _stabThreshold;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _isBackStabProtectionEnabled;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float _backStabTimeDelay;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9448", Offset = "0x8C9448")]
		[SerializeField]
		private FloatVariable _bigHitDistanceStabMultiplier;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatVariable _bigHitDistanceSwingMultiplier;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private FloatVariable _minLegalStabEnvelopeMultiplier;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FloatVariable _minLegalSwingEnvelopeMultiplier;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FloatVariable _minLegalStabSpeedMultiplier;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatVariable _minLegalSwingSpeedMultiplier;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FloatVariable _standardHitDistanceStabMultiplier;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatVariable _standardHitDistanceSwingMultiplier;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9504", Offset = "0x8C9504")]
		[SerializeField]
		private GameObject _stabCubeDebug;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool _updateDebugTracking;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9560", Offset = "0x8C9560")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9560", Offset = "0x8C9560")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C9560", Offset = "0x8C9560")]
		[SerializeField]
		private string _weaponStabTraveledDistance;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C95D0", Offset = "0x8C95D0")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C95D0", Offset = "0x8C95D0")]
		[SerializeField]
		private string _weaponStabAverageSpeed;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C961C", Offset = "0x8C961C")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C961C", Offset = "0x8C961C")]
		[SerializeField]
		private string _weaponSwingTraveledDistance;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9668", Offset = "0x8C9668")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C9668", Offset = "0x8C9668")]
		[SerializeField]
		private string _weaponSwingAverageSpeed;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C96B4", Offset = "0x8C96B4")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8C96B4", Offset = "0x8C96B4")]
		[SerializeField]
		private string _weaponMotionAverageSpeed;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 _lastMotionPos;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private Vector3 _lastSpeedPos;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 _lastVelocity;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 _lastAcceleration;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 _lastAverageStabVelocity;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 _lastAverageSwingVelocity;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float _currentStabEnergy;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float _currentBackStabEnergy;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _lastValidHitTime;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _lastRechargeTime;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private readonly List<VelocityData> _swingVelocityHistory;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly List<VelocityData> _stabVelocityHistory;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private readonly List<MotionData> _motionHistory;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private readonly List<MotionData> _velocityHistory;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private readonly List<MotionData> _accelerationHistory;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 _currentStoredStabPos;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 _currentStoredSwingPos;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 _lastTipPosition;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool _isValidStabHit;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16D")]
		private bool _isValidSwingHit;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16E")]
		private bool _isStabMotion;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16F")]
		private bool _isBackStabMotion;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float _lastStabHitTime;

		[Token(Token = "0x1700022C")]
		public Vector3 SwingVelocityAverage
		{
			[Token(Token = "0x6001094")]
			[Address(RVA = "0xC2EB30", Offset = "0xC2EB30", VA = "0xC2EB30")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700022D")]
		public Vector3 StabVelocityAverage
		{
			[Token(Token = "0x6001095")]
			[Address(RVA = "0xC2ED24", Offset = "0xC2ED24", VA = "0xC2ED24")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700022E")]
		public float TraveledStabDistance
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xC2EF18", Offset = "0xC2EF18", VA = "0xC2EF18")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700022F")]
		public float TraveledSwingDistance
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xC2F000", Offset = "0xC2F000", VA = "0xC2F000")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000230")]
		public Vector3 WeaponMotionAverage
		{
			[Token(Token = "0x6001098")]
			[Address(RVA = "0xC2F0E8", Offset = "0xC2F0E8", VA = "0xC2F0E8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000231")]
		public bool IsValidHit
		{
			[Token(Token = "0x6001099")]
			[Address(RVA = "0xC2F2DC", Offset = "0xC2F2DC", VA = "0xC2F2DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000232")]
		public bool IsValidStabHit
		{
			[Token(Token = "0x600109A")]
			[Address(RVA = "0xC2F2FC", Offset = "0xC2F2FC", VA = "0xC2F2FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000233")]
		public bool IsStabMotion
		{
			[Token(Token = "0x600109B")]
			[Address(RVA = "0xC2F304", Offset = "0xC2F304", VA = "0xC2F304")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xC2F30C", Offset = "0xC2F30C", VA = "0xC2F30C")]
		private void Start()
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xC2F344", Offset = "0xC2F344", VA = "0xC2F344")]
		private void Update()
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xC2FAC0", Offset = "0xC2FAC0", VA = "0xC2FAC0")]
		private void CheckIsStabMotion()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xC2F59C", Offset = "0xC2F59C", VA = "0xC2F59C")]
		private void UpdateMotionHistory()
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xC2FDD0", Offset = "0xC2FDD0", VA = "0xC2FDD0")]
		private void UpdateStabCheck()
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xC2FF94", Offset = "0xC2FF94", VA = "0xC2FF94")]
		private void UpdateSwingCheck()
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xC30244", Offset = "0xC30244", VA = "0xC30244")]
		public void OnValidHit()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0xC302BC", Offset = "0xC302BC", VA = "0xC302BC")]
		public void OnInvalidHit()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xC30278", Offset = "0xC30278", VA = "0xC30278")]
		private void CheckHitCharge()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xC30190", Offset = "0xC30190", VA = "0xC30190")]
		private void UpdateHitCharge()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xC302F0", Offset = "0xC302F0", VA = "0xC302F0")]
		private void ClearData()
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xC303E0", Offset = "0xC303E0", VA = "0xC303E0")]
		public HitData.HitQualityType GetHitQuality(MeleeWeapon meleeWeapon)
		{
			return default(HitData.HitQualityType);
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xC30588", Offset = "0xC30588", VA = "0xC30588")]
		public WeaponHitTracker()
		{
		}
	}
}
namespace SG.Claymore.Graphics
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A31FC", Offset = "0x8A31FC")]
	public class CameraFullScreenFade : MonoBehaviour
	{
		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FullScreenEffect fade;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera camera;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color color;

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xBBA858", Offset = "0xBBA858", VA = "0xBBA858")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xBBAA2C", Offset = "0xBBAA2C", VA = "0xBBAA2C")]
		private void Update()
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xBBAAB0", Offset = "0xBBAAB0", VA = "0xBBAAB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xBBAB20", Offset = "0xBBAB20", VA = "0xBBAB20")]
		public CameraFullScreenFade()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class ClaymorePostProcessController : PostProcessController
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9700", Offset = "0x8C9700")]
		[SerializeField]
		private PostProcessControllerVariable variable;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C974C", Offset = "0x8C974C")]
		[SerializeField]
		private BoolVariable postProcessingEnabled;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9798", Offset = "0x8C9798")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xBBAB78", Offset = "0xBBAB78", VA = "0xBBAB78")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBBACC8", Offset = "0xBBACC8", VA = "0xBBACC8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBBADF4", Offset = "0xBBADF4", VA = "0xBBADF4", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBBADF8", Offset = "0xBBADF8", VA = "0xBBADF8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xBBADFC", Offset = "0xBBADFC", VA = "0xBBADFC", Slot = "6")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xBBAEA8", Offset = "0xBBAEA8", VA = "0xBBAEA8")]
		public ClaymorePostProcessController()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class ClaymoreTunnelingVignette : TunnelingVignette
	{
		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C97E4", Offset = "0x8C97E4")]
		[SerializeField]
		private BoolVariable isSmoothTurnEnabled;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private FloatVariable smoothTurnSpeed;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private VignetteSpeedConfiguration smoothTurnConfig;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9850", Offset = "0x8C9850")]
		[SerializeField]
		private DrawRenderersInjector irisPrimeInjector;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private DrawRenderersDirectData standardIrisOpaqueData;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private DrawRenderersInjector gridInjector;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private DrawRenderersDirectData standardGridData;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private DrawRenderersInjector irisAlphaInjector;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private DrawRenderersDirectData standardIrisAlphaData;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C98EC", Offset = "0x8C98EC")]
		[SerializeField]
		private int renderLayer;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private IntVariable vignettingLayer;

		[NonSerialized]
		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private int defaultIrisPriority;

		[NonSerialized]
		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private int defaultCagePriority;

		[NonSerialized]
		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private int originalLayer;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBBAEB0", Offset = "0xBBAEB0", VA = "0xBBAEB0", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xBBAF3C", Offset = "0xBBAF3C", VA = "0xBBAF3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xBBB044", Offset = "0xBBB044", VA = "0xBBB044")]
		private void SetLayer(int layer)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0xBBB0CC", Offset = "0xBBB0CC", VA = "0xBBB0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xBBB21C", Offset = "0xBBB21C", VA = "0xBBB21C", Slot = "4")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xBBB3A4", Offset = "0xBBB3A4", VA = "0xBBB3A4", Slot = "8")]
		protected override void UpdateVignettingScale()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xBBB5BC", Offset = "0xBBB5BC", VA = "0xBBB5BC")]
		private void SmoothTurnValue()
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xBBB6B8", Offset = "0xBBB6B8", VA = "0xBBB6B8")]
		private float FindNewValue(float walkValue)
		{
			return default(float);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xBBB664", Offset = "0xBBB664", VA = "0xBBB664")]
		private float FindNewValueInTime(float walkValue)
		{
			return default(float);
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xBBB70C", Offset = "0xBBB70C", VA = "0xBBB70C")]
		public ClaymoreTunnelingVignette()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200027B")]
	public class DrawRendererInjection : IInjectPostFullScreenEffect
	{
		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Renderer renderer;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material material;

		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int subMeshID;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int shaderPass;

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xC28BDC", Offset = "0xC28BDC", VA = "0xC28BDC", Slot = "4")]
		public void Inject(ref CommandBuffer cmd)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xC28B14", Offset = "0xC28B14", VA = "0xC28B14")]
		public DrawRendererInjection(Renderer _renderer)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class DrawPostFullScreenEffect : MonoBehaviour
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PostFullScreenEffectInjector injector;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<DrawRendererInjection> drawRenderers;

		[Token(Token = "0x17000234")]
		public int DrawRenderersCount
		{
			[Token(Token = "0x60010BF")]
			[Address(RVA = "0xC287A8", Offset = "0xC287A8", VA = "0xC287A8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xC287F8", Offset = "0xC287F8", VA = "0xC287F8")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xC28910", Offset = "0xC28910", VA = "0xC28910")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xC289B4", Offset = "0xC289B4", VA = "0xC289B4")]
		private bool HasRenderer(Renderer _renderer)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0xC28A70", Offset = "0xC28A70", VA = "0xC28A70")]
		public void InsertToDrawRendererQueue(Renderer _renderer)
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xC28B60", Offset = "0xC28B60", VA = "0xC28B60")]
		public DrawPostFullScreenEffect()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[ExecuteAlways]
	public class DrawRenderersInjection : MonoBehaviour
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DrawRenderersInjector injector;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DrawRenderersDirectData[] data;

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xC28CC8", Offset = "0xC28CC8", VA = "0xC28CC8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xC28D78", Offset = "0xC28D78", VA = "0xC28D78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0xC28EC8", Offset = "0xC28EC8", VA = "0xC28EC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xC29024", Offset = "0xC29024", VA = "0xC29024")]
		public DrawRenderersInjection()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class MaterialFloatPropertyAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB12C", Offset = "0x8AB12C")]
		private sealed class <AnimationCoroutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MaterialFloatPropertyAnimator <>4__this;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700047A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3F")]
				[Address(RVA = "0xC29478", Offset = "0xC29478", VA = "0xC29478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D41")]
				[Address(RVA = "0xC294E0", Offset = "0xC294E0", VA = "0xC294E0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xC29168", Offset = "0xC29168", VA = "0xC29168")]
			[DebuggerHidden]
			public <AnimationCoroutine>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xC2924C", Offset = "0xC2924C", VA = "0xC2924C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3E")]
			[Address(RVA = "0xC29250", Offset = "0xC29250", VA = "0xC29250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D40")]
			[Address(RVA = "0xC29480", Offset = "0xC29480", VA = "0xC29480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C9968", Offset = "0x8C9968")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8C99B4", Offset = "0x8C99B4")]
		[SerializeField]
		private MaterialPropertyReference _param;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _animationCurve;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _time;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatRange _fromToRange;

		[NonSerialized]
		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine _animationCoroutine;

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xC2902C", Offset = "0xC2902C", VA = "0xC2902C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0xC29094", Offset = "0xC29094", VA = "0xC29094")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010CB")]
		[Address(RVA = "0xC290EC", Offset = "0xC290EC", VA = "0xC290EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E1C28", Offset = "0x8E1C28")]
		private IEnumerator AnimationCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xC29194", Offset = "0xC29194", VA = "0xC29194")]
		public MaterialFloatPropertyAnimator()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public class NetherSpaceBubble : MonoBehaviour
	{
		[Token(Token = "0x4001185")]
		private const float EPSILON = 1E-05f;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9A30", Offset = "0x8C9A30")]
		[SerializeField]
		private Renderer bubbleRenderer;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9A7C", Offset = "0x8C9A7C")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8C9A7C", Offset = "0x8C9A7C")]
		[SerializeField]
		private MaterialPropertyReference alphaParam;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9AEC", Offset = "0x8C9AEC")]
		[SerializeField]
		private float fadeDuration;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9B38", Offset = "0x8C9B38")]
		[SerializeField]
		private AnimationCurve fadeCurve;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9B84", Offset = "0x8C9B84")]
		[SerializeField]
		private int transitionQueue;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9BD0", Offset = "0x8C9BD0")]
		[SerializeField]
		private Layer defaultLayer;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9C1C", Offset = "0x8C9C1C")]
		[SerializeField]
		private Layer bubbleLayer;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9C68", Offset = "0x8C9C68")]
		[SerializeField]
		private BoolVariable postProcessingEnabled;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9CB4", Offset = "0x8C9CB4")]
		private QuickButton fadeIn;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9CEC", Offset = "0x8C9CEC")]
		private QuickButton fadeOut;

		[NonSerialized]
		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int fadeDirection;

		[NonSerialized]
		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float current;

		[NonSerialized]
		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock bubble;

		[NonSerialized]
		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int originalQueue;

		[NonSerialized]
		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isMaskEnabled;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Action completeCallback;

		[Token(Token = "0x17000235")]
		public Layer BubbleLayer
		{
			[Token(Token = "0x60010CD")]
			[Address(RVA = "0xC294E8", Offset = "0xC294E8", VA = "0xC294E8")]
			get
			{
				return default(Layer);
			}
		}

		[Token(Token = "0x17000236")]
		public float Duration
		{
			[Token(Token = "0x60010CE")]
			[Address(RVA = "0xC294F0", Offset = "0xC294F0", VA = "0xC294F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xC294F8", Offset = "0xC294F8", VA = "0xC294F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xC29620", Offset = "0xC29620", VA = "0xC29620")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xC29624", Offset = "0xC29624", VA = "0xC29624")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0xC296A4", Offset = "0xC296A4", VA = "0xC296A4")]
		public void FadeOut()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xC296AC", Offset = "0xC296AC", VA = "0xC296AC")]
		public void FadeOutWithCallback(Action onComplete)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xC2962C", Offset = "0xC2962C", VA = "0xC2962C")]
		public void FadeInWithCallback(Action onComplete)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xC299A0", Offset = "0xC299A0", VA = "0xC299A0")]
		public void ForceOn()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xC295AC", Offset = "0xC295AC", VA = "0xC295AC")]
		public void ForceOff()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xC29A18", Offset = "0xC29A18", VA = "0xC29A18")]
		private void SetAlpha(float alpha)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xC2972C", Offset = "0xC2972C", VA = "0xC2972C")]
		private void SetBubbleMask(bool maskEnabled)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xC29AF4", Offset = "0xC29AF4", VA = "0xC29AF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0xC29C2C", Offset = "0xC29C2C", VA = "0xC29C2C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0xC29CAC", Offset = "0xC29CAC", VA = "0xC29CAC")]
		public NetherSpaceBubble()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class OverlayRenderer : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB13C", Offset = "0x8AB13C")]
		private sealed class <>c
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__11_0;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<object> <>9__11_1;

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xC2A448", Offset = "0xC2A448", VA = "0xC2A448")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D44")]
			[Address(RVA = "0xC2A450", Offset = "0xC2A450", VA = "0xC2A450")]
			internal void <.ctor>b__11_0(object o)
			{
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xC2A4DC", Offset = "0xC2A4DC", VA = "0xC2A4DC")]
			internal void <.ctor>b__11_1(object o)
			{
			}
		}

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _isOverlayByDefault;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer[] _renderers;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool useToggleVariable;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable toggleVariable;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private QuickButton EnableOverlay;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private QuickButton DisableOverlay;

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0xC29ED4", Offset = "0xC29ED4", VA = "0xC29ED4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0xC29FA8", Offset = "0xC29FA8", VA = "0xC29FA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0xC29F9C", Offset = "0xC29F9C", VA = "0xC29F9C")]
		public void SetOverlay(bool isOverlay)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0xC2A05C", Offset = "0xC2A05C", VA = "0xC2A05C")]
		public static void SetOverlay(Renderer[] renderers, bool isOverlay)
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xC2A0D4", Offset = "0xC2A0D4", VA = "0xC2A0D4")]
		public static void SetOverlay(Renderer renderer, bool isOverlay)
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0xC2A1DC", Offset = "0xC2A1DC", VA = "0xC2A1DC")]
		public OverlayRenderer()
		{
		}
	}
	[Token(Token = "0x2000281")]
	public class PSVRAnimatedLoadingUI : AnimatedLoadingUI
	{
		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private DrawRenderersInjector injector;

		[NonSerialized]
		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private DrawRenderersDirectData drawRenderersData;

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xC2A568", Offset = "0xC2A568", VA = "0xC2A568", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xC2A60C", Offset = "0xC2A60C", VA = "0xC2A60C", Slot = "5")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xC2A664", Offset = "0xC2A664", VA = "0xC2A664", Slot = "6")]
		public override void Show()
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xC2A6BC", Offset = "0xC2A6BC", VA = "0xC2A6BC", Slot = "7")]
		public override void Hide()
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xC2A668", Offset = "0xC2A668", VA = "0xC2A668")]
		public void AddRenderer()
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0xC2A610", Offset = "0xC2A610", VA = "0xC2A610")]
		public void RemoveRenderer()
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0xC2A6C0", Offset = "0xC2A6C0", VA = "0xC2A6C0")]
		public PSVRAnimatedLoadingUI()
		{
		}
	}
	[Token(Token = "0x2000282")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3270", Offset = "0x8A3270")]
	public class PSVRPostReprojectionPassData : CustomRenderPassData
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DrawRenderersInjector injector;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0xC2AA30", Offset = "0xC2AA30", VA = "0xC2AA30", Slot = "4")]
		public override RenderPass GetRenderPass()
		{
			return null;
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0xC2AA94", Offset = "0xC2AA94", VA = "0xC2AA94")]
		public PSVRPostReprojectionPassData()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public class PSVRPostReprojectionPass : CustomRenderPass
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private RenderTexture renderTexture;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private RenderTargetIdentifier renderTarget;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private DrawRenderersInjector injector;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private DrawRenderersDirectAction drawRenderers;

		[Token(Token = "0x40011A3")]
		private const string TAG = "Render PostReprojection Layer Geometry";

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xC2A6C8", Offset = "0xC2A6C8", VA = "0xC2A6C8")]
		public PSVRPostReprojectionPass(DrawRenderersInjector injector)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xC2A864", Offset = "0xC2A864", VA = "0xC2A864", Slot = "4")]
		protected override void Configure(ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xC2A8A4", Offset = "0xC2A8A4", VA = "0xC2A8A4", Slot = "7")]
		protected override void CustomExecute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public abstract class RendererDrawingData
	{
		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int LastUsedIndex;

		[Token(Token = "0x60010EE")]
		public abstract void Append(RendererDrawingData other, int count);

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xC2AA9C", Offset = "0xC2AA9C", VA = "0xC2AA9C")]
		protected RendererDrawingData()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class SubMeshMaterialSetter : MonoBehaviour
	{
		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SubmeshID;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MeshRenderer LinkedRenderer;

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xC2AAA4", Offset = "0xC2AAA4", VA = "0xC2AAA4")]
		public void SetMaterialAtDefaultIndex(Material newMaterial)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xC2AC18", Offset = "0xC2AC18", VA = "0xC2AC18")]
		public SubMeshMaterialSetter()
		{
		}
	}
	[Token(Token = "0x2000286")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A32D0", Offset = "0x8A32D0")]
	public class TextMeshRendererPassData : CustomRenderPassData
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DrawRenderersInjector _injector;

		[NonSerialized]
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshRendererPass _cachedTextMeshRendererPass;

		[Token(Token = "0x17000237")]
		public DrawRenderersInjector Injector
		{
			[Token(Token = "0x60010F2")]
			[Address(RVA = "0xC2B0A4", Offset = "0xC2B0A4", VA = "0xC2B0A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xC2B0AC", Offset = "0xC2B0AC", VA = "0xC2B0AC", Slot = "4")]
		public override RenderPass GetRenderPass()
		{
			return null;
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xC2B134", Offset = "0xC2B134", VA = "0xC2B134")]
		public TextMeshRendererPassData()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class TextMeshRendererPass : CustomRenderPass
	{
		[Token(Token = "0x40011A9")]
		private const string TAG = "Render TextMesh Geometry";

		[NonSerialized]
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly DrawRenderersInjector _injector;

		[NonSerialized]
		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly DrawRenderersDirectAction _drawRenderers;

		[NonSerialized]
		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTargetIdentifier _renderTargetIdentifier;

		[NonSerialized]
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Matrix4x4 _viewMatrix;

		[NonSerialized]
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Matrix4x4 _projectionMatrix;

		[NonSerialized]
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Action _onPreExecuteCallback;

		[NonSerialized]
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Action _onPostExecuteCallback;

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xC2AC20", Offset = "0xC2AC20", VA = "0xC2AC20")]
		public TextMeshRendererPass(DrawRenderersInjector injector)
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xC2AD88", Offset = "0xC2AD88", VA = "0xC2AD88")]
		public void Activate(RenderTexture target, Matrix4x4 viewMatrix, Matrix4x4 projectionMatrix, Action onPreExecuteCallback, Action onPostExecuteCallback)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xC2AE5C", Offset = "0xC2AE5C", VA = "0xC2AE5C", Slot = "4")]
		protected override void Configure(ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xC2AE9C", Offset = "0xC2AE9C", VA = "0xC2AE9C", Slot = "7")]
		protected override void CustomExecute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}
	}
}
namespace SG.Claymore.Entities
{
	[Token(Token = "0x2000288")]
	public class AchievementJackStyle : MonoBehaviour
	{
		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool jackStyle;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyHealth bossV0Health;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EnemyHealth bossV1Health;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerHandState leftHandArmament;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlayerHandState rightHandArmament;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ArmamentID hammerID;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AchievementAsset achievementAsset;

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0xBB4458", Offset = "0xBB4458", VA = "0xBB4458")]
		public void BossKilled()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0xBB4688", Offset = "0xBB4688", VA = "0xBB4688")]
		public void CheckAchievement()
		{
		}

		[Token(Token = "0x60010FB")]
		[Address(RVA = "0xBB46B4", Offset = "0xBB46B4", VA = "0xBB46B4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xBB4794", Offset = "0xBB4794", VA = "0xBB4794")]
		public AchievementJackStyle()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[DisallowMultipleComponent]
	public class ClaymoreEntity : MonoBehaviour, ISerializationCallbackReceiver, IVariableResolver, ITransformMap
	{
		[Serializable]
		[Token(Token = "0x2000515")]
		public class EntityCache : EntityComponentCache<IEntityComponent, ClaymoreEntity>
		{
			[Token(Token = "0x6001D46")]
			[Address(RVA = "0xBB5244", Offset = "0xBB5244", VA = "0xBB5244")]
			public EntityCache()
			{
			}
		}

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClaymoreEntityDefinition EntityDefinition;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9E24", Offset = "0x8C9E24")]
		[AttributeAttribute(Name = "NullConditionalDrawAttribute", RVA = "0x8C9E24", Offset = "0x8C9E24")]
		protected EntityRegistry entityRegistry;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Instancer LocalVariables;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExposedTransformMap TransformMap;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ClaymoreEntityVariable EntityVariable;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9E80", Offset = "0x8C9E80")]
		[DebugOnly]
		private List<Component> allColliders;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool IgnoreRaycastTimeCheck;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected int[] collisionIDs;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[DebugOnly]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8C9EC8", Offset = "0x8C9EC8")]
		protected EntityCache entitycache;

		[Token(Token = "0x17000238")]
		public virtual bool IgnoreWeaponCollision
		{
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xBB515C", Offset = "0xBB515C", VA = "0xBB515C", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000239")]
		public virtual float MovementRadius
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xBB5164", Offset = "0xBB5164", VA = "0xBB5164", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60010FD")]
		public T GetEntityComponent<T>() where T : MonoBehaviour, IEntityComponent
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0xBB479C", Offset = "0xBB479C", VA = "0xBB479C", Slot = "13")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60010FF")]
		[Address(RVA = "0xBB4948", Offset = "0xBB4948", VA = "0xBB4948", Slot = "14")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001100")]
		[Address(RVA = "0xBB4B48", Offset = "0xBB4B48", VA = "0xBB4B48", Slot = "15")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0xBB4D54", Offset = "0xBB4D54", VA = "0xBB4D54", Slot = "16")]
		protected virtual void CacheAndMessageComponents()
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0xBB4DB0", Offset = "0xBB4DB0", VA = "0xBB4DB0", Slot = "17")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0xBB4F14", Offset = "0xBB4F14", VA = "0xBB4F14")]
		public static ClaymoreEntity FindEntity(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0xBB4FF8", Offset = "0xBB4FF8", VA = "0xBB4FF8")]
		public static ClaymoreEntity FindEntity(GameObject gameObject)
		{
			return null;
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0xBB5090", Offset = "0xBB5090", VA = "0xBB5090", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0xBB5094", Offset = "0xBB5094", VA = "0xBB5094", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0xBB50A4", Offset = "0xBB50A4", VA = "0xBB50A4", Slot = "6")]
		public Variable GetVariable(Variable variable)
		{
			return null;
		}

		[Token(Token = "0x6001108")]
		public T GetVariable<T>(T input) where T : Variable
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0xBB50C0", Offset = "0xBB50C0", VA = "0xBB50C0", Slot = "8")]
		public bool HasVariable(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x600110A")]
		[Address(RVA = "0xBB50DC", Offset = "0xBB50DC", VA = "0xBB50DC", Slot = "9")]
		public void AddVariable(Variable source, [Optional] Variable value)
		{
		}

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xBB50F8", Offset = "0xBB50F8", VA = "0xBB50F8", Slot = "10")]
		public List<Variable> GetAll()
		{
			return null;
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xBB5114", Offset = "0xBB5114", VA = "0xBB5114", Slot = "18")]
		public virtual HitResult HandleHitCollision(ref HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xBB511C", Offset = "0xBB511C", VA = "0xBB511C", Slot = "19")]
		public virtual bool IsHitDirectionValid(Vector3 direction, HitData.HitStyleType hitType, bool isTwoHanded = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xBB5124", Offset = "0xBB5124", VA = "0xBB5124", Slot = "11")]
		public Transform GetBoundTransform(ExposedTransformPoint point)
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xBB5140", Offset = "0xBB5140", VA = "0xBB5140", Slot = "12")]
		public bool ContainsPoint(ExposedTransformPoint point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001112")]
		[Address(RVA = "0xBB516C", Offset = "0xBB516C", VA = "0xBB516C", Slot = "22")]
		public virtual int GetComboIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0xBB5174", Offset = "0xBB5174", VA = "0xBB5174")]
		public ClaymoreEntity()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public abstract class ClaymoreEntityDefinition : ScriptableObject, IResourceRequestKey
	{
		[NonSerialized]
		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int cachedIndex;

		[Token(Token = "0x1700023A")]
		public string Name
		{
			[Token(Token = "0x6001114")]
			[Address(RVA = "0xBB5294", Offset = "0xBB5294", VA = "0xBB5294", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700023B")]
		public int CachedIndex
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xBB529C", Offset = "0xBB529C", VA = "0xBB529C", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0xBB52A4", Offset = "0xBB52A4", VA = "0xBB52A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0xBB52AC", Offset = "0xBB52AC", VA = "0xBB52AC")]
		protected ClaymoreEntityDefinition()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3340", Offset = "0x8A3340")]
	public class EnemyDatabase : ObjectDatabase<NPCCombatantDefinition>, IGUIDDatabase<NPCCombatantDefinition>, IGUIDDatabase
	{
		[Serializable]
		[Token(Token = "0x2000516")]
		public class RuntimeEnemyProgressData
		{
			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string EnemyGUID;

			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int KillCount;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int DeathCount;

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xBB53F4", Offset = "0xBB53F4", VA = "0xBB53F4")]
			public RuntimeEnemyProgressData(string GUID)
			{
			}
		}

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<RuntimeEnemyProgressData> EnemyProgressDataGroup;

		[Token(Token = "0x6001118")]
		[Address(RVA = "0xBB52BC", Offset = "0xBB52BC", VA = "0xBB52BC")]
		public RuntimeEnemyProgressData GetRuntimeEnemyProgressData(string enemyDefinitionGUID)
		{
			return null;
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xBB5428", Offset = "0xBB5428", VA = "0xBB5428")]
		public void UpdateEncounterProgressData(RuntimeEnemyProgressData data)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xBB5568", Offset = "0xBB5568", VA = "0xBB5568")]
		public bool Contains(string guid)
		{
			return default(bool);
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xBB561C", Offset = "0xBB561C", VA = "0xBB561C")]
		public void Save()
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xBB5638", Offset = "0xBB5638", VA = "0xBB5638")]
		public void IncrementKillCount(string enemyDefinitionGUID)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xBB5674", Offset = "0xBB5674", VA = "0xBB5674")]
		public void IncrementDeathCount(string enemyDefinitionGUID)
		{
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0xBB56B0", Offset = "0xBB56B0", VA = "0xBB56B0")]
		public EnemyDatabase()
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class EnemyHealth : EnemyComponent
	{
		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9F20", Offset = "0x8C9F20")]
		[SerializeField]
		private InstancedFloatVariable healthVariable;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9F6C", Offset = "0x8C9F6C")]
		[SerializeField]
		private InstancedFloatVariable guardVariable;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C9FB8", Offset = "0x8C9FB8")]
		[SerializeField]
		private InstancedBoolVariable canDamageGuardVariable;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA004", Offset = "0x8CA004")]
		[SerializeField]
		private bool selfManaged;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8CA050", Offset = "0x8CA050")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA050", Offset = "0x8CA050")]
		[SerializeField]
		private float guardInvulnerableDuration;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA0C8", Offset = "0x8CA0C8")]
		[SerializeField]
		private InstancedFloatVariable guardFullRestoreDelay;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA114", Offset = "0x8CA114")]
		[SerializeField]
		private InstancedFloatVariable guardFullRestoreTime;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA160", Offset = "0x8CA160")]
		[SerializeField]
		private InstancedFloatVariable guardRestoreRate;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA1AC", Offset = "0x8CA1AC")]
		[SerializeField]
		private InstancedFloatVariable postHitGuardRestoreDelay;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA1F8", Offset = "0x8CA1F8")]
		[SerializeField]
		private bool autoBreakGuard;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA244", Offset = "0x8CA244")]
		[SerializeField]
		private AchievementAsset guardBreaksAchievement;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AchievementAsset powerhouseAchievement;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float lastGuardHitTime;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float lastGuardBreakTime;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float guardFullChargeTime;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool guardRechargeRaised;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool resettingGuardRestore;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool requestStatusClear;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private NPCCombatantDefinition knightCombatant;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private NPCCombatantDefinition eliteKnightCombatant;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool isTrackingHitsNum;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int hitsNum;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA330", Offset = "0x8CA330")]
		private bool <IsGuardBroken>k__BackingField;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA340", Offset = "0x8CA340")]
		private bool <CanDamageGuard>k__BackingField;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA350", Offset = "0x8CA350")]
		private bool <IsGuardDoingFullRestore>k__BackingField;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA360", Offset = "0x8CA360")]
		private readonly List<StatusEffect> <StatusEffects>k__BackingField;

		[Token(Token = "0x1700023C")]
		public float CurrentHealth
		{
			[Token(Token = "0x6001131")]
			[Address(RVA = "0xBB4600", Offset = "0xBB4600", VA = "0xBB4600")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023D")]
		public float MaxHealth
		{
			[Token(Token = "0x6001132")]
			[Address(RVA = "0xBB4640", Offset = "0xBB4640", VA = "0xBB4640")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023E")]
		public float CurrentGuard
		{
			[Token(Token = "0x6001133")]
			[Address(RVA = "0xBB62BC", Offset = "0xBB62BC", VA = "0xBB62BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700023F")]
		public float MaxGuard
		{
			[Token(Token = "0x6001134")]
			[Address(RVA = "0xBB62FC", Offset = "0xBB62FC", VA = "0xBB62FC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000240")]
		public bool IsGuardBroken
		{
			[Token(Token = "0x6001135")]
			[Address(RVA = "0xBB6344", Offset = "0xBB6344", VA = "0xBB6344")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DAC", Offset = "0x8E1DAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001136")]
			[Address(RVA = "0xBB634C", Offset = "0xBB634C", VA = "0xBB634C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DBC", Offset = "0x8E1DBC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public bool CanDamageGuard
		{
			[Token(Token = "0x6001137")]
			[Address(RVA = "0xBB6358", Offset = "0xBB6358", VA = "0xBB6358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DCC", Offset = "0x8E1DCC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001138")]
			[Address(RVA = "0xBB6360", Offset = "0xBB6360", VA = "0xBB6360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DDC", Offset = "0x8E1DDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public bool IsGuardDoingFullRestore
		{
			[Token(Token = "0x6001139")]
			[Address(RVA = "0xBB636C", Offset = "0xBB636C", VA = "0xBB636C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DEC", Offset = "0x8E1DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600113A")]
			[Address(RVA = "0xBB6374", Offset = "0xBB6374", VA = "0xBB6374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1DFC", Offset = "0x8E1DFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public List<StatusEffect> StatusEffects
		{
			[Token(Token = "0x600113B")]
			[Address(RVA = "0xBB6380", Offset = "0xBB6380", VA = "0xBB6380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E0C", Offset = "0x8E1E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000028")]
		public event Action<int> OnHealthDamage
		{
			[Token(Token = "0x600111F")]
			[Address(RVA = "0xBB5734", Offset = "0xBB5734", VA = "0xBB5734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C8C", Offset = "0x8E1C8C")]
			add
			{
			}
			[Token(Token = "0x6001120")]
			[Address(RVA = "0xBB57D8", Offset = "0xBB57D8", VA = "0xBB57D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1C9C", Offset = "0x8E1C9C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<int> OnHealthRestore
		{
			[Token(Token = "0x6001121")]
			[Address(RVA = "0xBB587C", Offset = "0xBB587C", VA = "0xBB587C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CAC", Offset = "0x8E1CAC")]
			add
			{
			}
			[Token(Token = "0x6001122")]
			[Address(RVA = "0xBB5920", Offset = "0xBB5920", VA = "0xBB5920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CBC", Offset = "0x8E1CBC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action OnHealthDepleted
		{
			[Token(Token = "0x6001123")]
			[Address(RVA = "0xBB59C4", Offset = "0xBB59C4", VA = "0xBB59C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CCC", Offset = "0x8E1CCC")]
			add
			{
			}
			[Token(Token = "0x6001124")]
			[Address(RVA = "0xBB5A68", Offset = "0xBB5A68", VA = "0xBB5A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CDC", Offset = "0x8E1CDC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<float> OnGuardDamage
		{
			[Token(Token = "0x6001125")]
			[Address(RVA = "0xBB5B0C", Offset = "0xBB5B0C", VA = "0xBB5B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CEC", Offset = "0x8E1CEC")]
			add
			{
			}
			[Token(Token = "0x6001126")]
			[Address(RVA = "0xBB5BB0", Offset = "0xBB5BB0", VA = "0xBB5BB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1CFC", Offset = "0x8E1CFC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<float> OnGuardRestore
		{
			[Token(Token = "0x6001127")]
			[Address(RVA = "0xBB5C54", Offset = "0xBB5C54", VA = "0xBB5C54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D0C", Offset = "0x8E1D0C")]
			add
			{
			}
			[Token(Token = "0x6001128")]
			[Address(RVA = "0xBB5CF8", Offset = "0xBB5CF8", VA = "0xBB5CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D1C", Offset = "0x8E1D1C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action OnGuardDepleted
		{
			[Token(Token = "0x6001129")]
			[Address(RVA = "0xBB5D9C", Offset = "0xBB5D9C", VA = "0xBB5D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D2C", Offset = "0x8E1D2C")]
			add
			{
			}
			[Token(Token = "0x600112A")]
			[Address(RVA = "0xBB5E40", Offset = "0xBB5E40", VA = "0xBB5E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D3C", Offset = "0x8E1D3C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action OnFullGuardRestoreStart
		{
			[Token(Token = "0x600112B")]
			[Address(RVA = "0xBB5EE4", Offset = "0xBB5EE4", VA = "0xBB5EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D4C", Offset = "0x8E1D4C")]
			add
			{
			}
			[Token(Token = "0x600112C")]
			[Address(RVA = "0xBB5F88", Offset = "0xBB5F88", VA = "0xBB5F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D5C", Offset = "0x8E1D5C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<bool> OnCanDamageGuardChange
		{
			[Token(Token = "0x600112D")]
			[Address(RVA = "0xBB602C", Offset = "0xBB602C", VA = "0xBB602C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D6C", Offset = "0x8E1D6C")]
			add
			{
			}
			[Token(Token = "0x600112E")]
			[Address(RVA = "0xBB60D0", Offset = "0xBB60D0", VA = "0xBB60D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D7C", Offset = "0x8E1D7C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<bool> OnSetVisible
		{
			[Token(Token = "0x600112F")]
			[Address(RVA = "0xBB6174", Offset = "0xBB6174", VA = "0xBB6174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D8C", Offset = "0x8E1D8C")]
			add
			{
			}
			[Token(Token = "0x6001130")]
			[Address(RVA = "0xBB6218", Offset = "0xBB6218", VA = "0xBB6218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1D9C", Offset = "0x8E1D9C")]
			remove
			{
			}
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xBB6388", Offset = "0xBB6388", VA = "0xBB6388")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xBB6460", Offset = "0xBB6460", VA = "0xBB6460", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xBB6544", Offset = "0xBB6544", VA = "0xBB6544", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBB656C", Offset = "0xBB656C", VA = "0xBB656C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xBB663C", Offset = "0xBB663C", VA = "0xBB663C")]
		public void ResetHealth()
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xBB674C", Offset = "0xBB674C", VA = "0xBB674C")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xBB67C0", Offset = "0xBB67C0", VA = "0xBB67C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xBB6E10", Offset = "0xBB6E10", VA = "0xBB6E10")]
		public void ProcessHitProperties(HitData hit)
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xBB6F5C", Offset = "0xBB6F5C", VA = "0xBB6F5C")]
		public void ApplyStatus(HitProperty property, HitData hit)
		{
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xBB7038", Offset = "0xBB7038", VA = "0xBB7038")]
		public void RequestStatusClear()
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xBB6BD8", Offset = "0xBB6BD8", VA = "0xBB6BD8")]
		private void ClearAllStatus()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xBB7044", Offset = "0xBB7044", VA = "0xBB7044")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xBB70F0", Offset = "0xBB70F0", VA = "0xBB70F0")]
		public bool DamageHealth(int amount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xBB7388", Offset = "0xBB7388", VA = "0xBB7388")]
		public void RestoreHealth(int amount)
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xBB74AC", Offset = "0xBB74AC", VA = "0xBB74AC")]
		public void Kill()
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xBB7534", Offset = "0xBB7534", VA = "0xBB7534")]
		public void BringToNearDeath()
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBB7720", Offset = "0xBB7720", VA = "0xBB7720")]
		public void HealthDepleted()
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xBB7734", Offset = "0xBB7734", VA = "0xBB7734")]
		public void DamageGuard(float amount, HitData hitData)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xBB75FC", Offset = "0xBB75FC", VA = "0xBB75FC")]
		public void DamageGuard(float amount)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xBB6C84", Offset = "0xBB6C84", VA = "0xBB6C84")]
		public void RestoreGuard(float amount)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xBB77F4", Offset = "0xBB77F4", VA = "0xBB77F4")]
		public void BreakGuard()
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xBB6D98", Offset = "0xBB6D98", VA = "0xBB6D98")]
		public void StartFullGuardRestore()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xBB7878", Offset = "0xBB7878", VA = "0xBB7878")]
		public void ForceCanDamageGuardChange(bool value)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xBB78C8", Offset = "0xBB78C8", VA = "0xBB78C8")]
		private void CanDamageGuardChange(bool newValue)
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xBB7954", Offset = "0xBB7954", VA = "0xBB7954")]
		public EnemyHealth()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200028D")]
	public class EntityComponentCache<TEntityInterface, TEntity> where TEntityInterface : class, IBaseEntityComponent<TEntity>
	{
		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CA370", Offset = "0x8CA370")]
		private List<MonoBehaviour> mbs;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private TEntityInterface[] entityComponents;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Dictionary<Type, List<TEntityInterface>> typeMapping;

		[Token(Token = "0x6001155")]
		public void OnValidate(GameObject go)
		{
		}

		[Token(Token = "0x6001156")]
		public T GetEntityComponent<T>() where T : MonoBehaviour, TEntityInterface
		{
			return null;
		}

		[Token(Token = "0x6001157")]
		public void CacheAndMessageComponents(TEntity source)
		{
		}

		[Token(Token = "0x6001158")]
		public EntityComponentCache()
		{
		}
	}
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A33A0", Offset = "0x8A33A0")]
	public class EntityRegistry : ScriptableObject
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClaymoreEntityVariable SelfEntity;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool debugAddRemove;

		[NonSerialized]
		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CA3A8", Offset = "0x8CA3A8")]
		public List<ClaymoreEntity> Items;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<int, ClaymoreEntity> entities;

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBB4850", Offset = "0xBB4850", VA = "0xBB4850")]
		public void AddItem(ClaymoreEntity item, int[] hashIDs)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xBB4A54", Offset = "0xBB4A54", VA = "0xBB4A54")]
		public void RemoveItem(ClaymoreEntity item, int[] hashIDs)
		{
		}

		[Token(Token = "0x600115B")]
		public T GetEntity<T>(int id) where T : ClaymoreEntity
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xBB79E4", Offset = "0xBB79E4", VA = "0xBB79E4")]
		public EntityRegistry()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A33E4", Offset = "0x8A33E4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A33E4", Offset = "0x8A33E4")]
	public class GuardBreakNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000517")]
		public class GuardBreakNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xBB7B44", Offset = "0xBB7B44", VA = "0xBB7B44")]
			public GuardBreakNodeRuntime(GuardBreakNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xBB7BB4", Offset = "0xBB7BB4", VA = "0xBB7BB4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xBB7A94", Offset = "0xBB7A94", VA = "0xBB7A94", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xBB7BAC", Offset = "0xBB7BAC", VA = "0xBB7BAC")]
		public GuardBreakNode()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public interface IEntityComponent : IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent
	{
	}
	[Token(Token = "0x2000291")]
	public interface IBaseEntityComponent<T> : IBaseEntityComponent
	{
		[Token(Token = "0x17000244")]
		T Entity
		{
			[Token(Token = "0x600115F")]
			get;
			[Token(Token = "0x6001160")]
			set;
		}
	}
	[Token(Token = "0x2000292")]
	public interface IBaseEntityComponent
	{
	}
	[Token(Token = "0x2000293")]
	public class PlayerEntity : ClaymoreEntity
	{
		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CA3B8", Offset = "0x8CA3B8")]
		[SerializeField]
		private PlayerHealth _health;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerEntityVariable _playerEntityVariable;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private PlayerCombatant _playerCombatant;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Targetable _targetable;

		[Token(Token = "0x17000245")]
		public PlayerHealth PlayerHealth
		{
			[Token(Token = "0x6001161")]
			[Address(RVA = "0xBB7C6C", Offset = "0xBB7C6C", VA = "0xBB7C6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public PlayerCombatant PlayerCombatant
		{
			[Token(Token = "0x6001162")]
			[Address(RVA = "0xBB7C74", Offset = "0xBB7C74", VA = "0xBB7C74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public PlayerDefense PlayerDefense
		{
			[Token(Token = "0x6001163")]
			[Address(RVA = "0xBB7C7C", Offset = "0xBB7C7C", VA = "0xBB7C7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000248")]
		public Targetable Targetable
		{
			[Token(Token = "0x6001164")]
			[Address(RVA = "0xBB7C98", Offset = "0xBB7C98", VA = "0xBB7C98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xBB7CA0", Offset = "0xBB7CA0", VA = "0xBB7CA0", Slot = "17")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xBB7CDC", Offset = "0xBB7CDC", VA = "0xBB7CDC", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xBB7EA4", Offset = "0xBB7EA4", VA = "0xBB7EA4", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xBB806C", Offset = "0xBB806C", VA = "0xBB806C", Slot = "15")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xBB8154", Offset = "0xBB8154", VA = "0xBB8154")]
		public PlayerEntity()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class PlayerHealth : MonoBehaviour, IEntityComponent, IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA434", Offset = "0x8CA434")]
		private ClaymoreEntity <Entity>k__BackingField;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InstancedFloatVariable health;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable savedPlayerHealth;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolReference resetHealthEachScene;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatVariable damageScalar;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatVariable playerHealthRestoreAmount;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatVariable emptyPlayerHealthCrystals;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatVariable playerHitsTakenThisRoom;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float startingHealth;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AchievementAsset toppedUpAchievement;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA4D4", Offset = "0x8CA4D4")]
		[SerializeField]
		private PlayerTakeDamageAnalyticsEvent playerTakeDmgAnalyticsEvent;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA540", Offset = "0x8CA540")]
		[SerializeField]
		private FloatVariable deathsDoorThreshold;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float deathsDoorInvulnerabilityTime;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private bool isAutoRegenEnabled;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA5AC", Offset = "0x8CA5AC")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8CA5AC", Offset = "0x8CA5AC")]
		[SerializeField]
		private float regenCountdownTime;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioKeyData _playerDeathSFX;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float timeLastHit;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float timeEnteredInvulnerability;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA62C", Offset = "0x8CA62C")]
		[SerializeField]
		private GlobalEvent onLastEnemyKilledGlobalEvent;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GlobalEvent onEnterDeathsDoorGlobalEvent;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private GlobalEvent onExitDeathsDoorGlobalEvent;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private EnemyGlobalEvent onPlayerKilledGlobalEvent;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GlobalEvent onPlayerFullHeal;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA6B8", Offset = "0x8CA6B8")]
		[SerializeField]
		private GlobalEvent killPlayerGlobalEvent;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private GlobalEvent dealMassiveDamageGlobalEvent;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA714", Offset = "0x8CA714")]
		private bool <IsOnDeathsDoor>k__BackingField;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA724", Offset = "0x8CA724")]
		private bool <IsDead>k__BackingField;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA734", Offset = "0x8CA734")]
		private bool <IsInvulnerable>k__BackingField;

		[Token(Token = "0x17000249")]
		public ClaymoreEntity Entity
		{
			[Token(Token = "0x600116A")]
			[Address(RVA = "0xBB8158", Offset = "0xBB8158", VA = "0xBB8158", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E1C", Offset = "0x8E1E1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600116B")]
			[Address(RVA = "0xBB8160", Offset = "0xBB8160", VA = "0xBB8160", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E2C", Offset = "0x8E1E2C")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public float DeathsDoorThreshold
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xBB82B0", Offset = "0xBB82B0", VA = "0xBB82B0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024B")]
		public float CurrentHealth
		{
			[Token(Token = "0x6001171")]
			[Address(RVA = "0xBB82D4", Offset = "0xBB82D4", VA = "0xBB82D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024C")]
		public float MaxHealth
		{
			[Token(Token = "0x6001172")]
			[Address(RVA = "0xBB8314", Offset = "0xBB8314", VA = "0xBB8314")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700024D")]
		public bool IsOnDeathsDoor
		{
			[Token(Token = "0x6001173")]
			[Address(RVA = "0xBB8384", Offset = "0xBB8384", VA = "0xBB8384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E7C", Offset = "0x8E1E7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001174")]
			[Address(RVA = "0xBB838C", Offset = "0xBB838C", VA = "0xBB838C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E8C", Offset = "0x8E1E8C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public bool IsDead
		{
			[Token(Token = "0x6001175")]
			[Address(RVA = "0xBB8398", Offset = "0xBB8398", VA = "0xBB8398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E9C", Offset = "0x8E1E9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001176")]
			[Address(RVA = "0xBB83A0", Offset = "0xBB83A0", VA = "0xBB83A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EAC", Offset = "0x8E1EAC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool IsInvulnerable
		{
			[Token(Token = "0x6001177")]
			[Address(RVA = "0xBB83AC", Offset = "0xBB83AC", VA = "0xBB83AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1EBC", Offset = "0x8E1EBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001178")]
			[Address(RVA = "0xBB83B4", Offset = "0xBB83B4", VA = "0xBB83B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1ECC", Offset = "0x8E1ECC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<float> OnDamage
		{
			[Token(Token = "0x600116C")]
			[Address(RVA = "0xBB8168", Offset = "0xBB8168", VA = "0xBB8168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E3C", Offset = "0x8E1E3C")]
			add
			{
			}
			[Token(Token = "0x600116D")]
			[Address(RVA = "0xBB820C", Offset = "0xBB820C", VA = "0xBB820C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E4C", Offset = "0x8E1E4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnHealthDepleted
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xBB7E00", Offset = "0xBB7E00", VA = "0xBB7E00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E5C", Offset = "0x8E1E5C")]
			add
			{
			}
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xBB7FC8", Offset = "0xBB7FC8", VA = "0xBB7FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1E6C", Offset = "0x8E1E6C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xBB83C0", Offset = "0xBB83C0", VA = "0xBB83C0")]
		private void Start()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0xBB874C", Offset = "0xBB874C", VA = "0xBB874C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xBB89FC", Offset = "0xBB89FC", VA = "0xBB89FC")]
		private void OnPlayerFullHeal()
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xBB8A8C", Offset = "0xBB8A8C", VA = "0xBB8A8C")]
		private void OnMaxHealthChanged(float max)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xBB8A90", Offset = "0xBB8A90", VA = "0xBB8A90")]
		private void OnHealthChanged(float hp)
		{
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBB8BE0", Offset = "0xBB8BE0", VA = "0xBB8BE0")]
		private void OnLastEnemyKilled()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0xBB8D74", Offset = "0xBB8D74", VA = "0xBB8D74")]
		private void CheckHealthGain()
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xBB8DC8", Offset = "0xBB8DC8", VA = "0xBB8DC8")]
		public float Damage(Enemy attacker, float amount)
		{
			return default(float);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xBB9280", Offset = "0xBB9280", VA = "0xBB9280")]
		public bool PayHealth(float amount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xBB94A0", Offset = "0xBB94A0", VA = "0xBB94A0")]
		public bool CanAffordHealthActivationCost(float amount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xBB94F8", Offset = "0xBB94F8", VA = "0xBB94F8")]
		public void ProcessHitProperties(List<PlayerHitProperty> hitProperties)
		{
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xBB958C", Offset = "0xBB958C", VA = "0xBB958C")]
		public void ApplyStatus(PlayerHitProperty property)
		{
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xBB95AC", Offset = "0xBB95AC", VA = "0xBB95AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xBB95B0", Offset = "0xBB95B0", VA = "0xBB95B0")]
		private void DoDeathsDoorUpdate()
		{
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xBB8990", Offset = "0xBB8990", VA = "0xBB8990")]
		public void ExitDeathsDoor()
		{
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xBB8B78", Offset = "0xBB8B78", VA = "0xBB8B78")]
		public void ExitDeathsDoor(float amount)
		{
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xBB96B4", Offset = "0xBB96B4", VA = "0xBB96B4")]
		private void KillPlayer()
		{
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xBB97B4", Offset = "0xBB97B4", VA = "0xBB97B4")]
		private void DealMassiveDamage()
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xBB917C", Offset = "0xBB917C", VA = "0xBB917C")]
		public void KillEntity(Enemy attacker)
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xBB9664", Offset = "0xBB9664", VA = "0xBB9664")]
		public void Set(float value)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0xBB8C68", Offset = "0xBB8C68", VA = "0xBB8C68")]
		public void Restore(float amount)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xBB98EC", Offset = "0xBB98EC", VA = "0xBB98EC")]
		public void RestoreDeathsDoorAmount(float amount)
		{
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xBB86C4", Offset = "0xBB86C4", VA = "0xBB86C4")]
		public void ResetHealth()
		{
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xBB99FC", Offset = "0xBB99FC", VA = "0xBB99FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E1EDC", Offset = "0x8E1EDC")]
		public void DebugIncHealthByOne()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xBB9A00", Offset = "0xBB9A00", VA = "0xBB9A00")]
		public PlayerHealth()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A348C", Offset = "0x8A348C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A348C", Offset = "0x8A348C")]
	public class StartGuardFullRestoreNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000518")]
		public class StartGuardFullRestoreNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001D4A")]
			[Address(RVA = "0xBB9B20", Offset = "0xBB9B20", VA = "0xBB9B20")]
			public StartGuardFullRestoreNodeRuntime(StartGuardFullRestoreNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xBB9B90", Offset = "0xBB9B90", VA = "0xBB9B90", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x17000250")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001192")]
			[Address(RVA = "0xBB9A18", Offset = "0xBB9A18", VA = "0xBB9A18", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000251")]
		public override bool UseInline
		{
			[Token(Token = "0x6001193")]
			[Address(RVA = "0xBB9A20", Offset = "0xBB9A20", VA = "0xBB9A20", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xBB9A28", Offset = "0xBB9A28", VA = "0xBB9A28", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xBB9A70", Offset = "0xBB9A70", VA = "0xBB9A70", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xBB9B88", Offset = "0xBB9B88", VA = "0xBB9B88")]
		public StartGuardFullRestoreNode()
		{
		}
	}
}
namespace SG.Claymore.Effects
{
	[Token(Token = "0x2000296")]
	public class AudioPulsingEffect : MonoBehaviour
	{
		[Token(Token = "0x4001210")]
		private const int SAMPLE_DATA_LENGTH = 1024;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioRuntimeGlobalEvent _audioRuntimeGlobalEvent;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer _renderer;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA764", Offset = "0x8CA764")]
		[SerializeField]
		private float _rampSpeed;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA7B0", Offset = "0x8CA7B0")]
		[SerializeField]
		private bool _updateMaterial;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CA7FC", Offset = "0x8CA7FC")]
		[SerializeField]
		private MaterialPropertyReference _propertyName;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatRange _emissionMultiplierRange;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA858", Offset = "0x8CA858")]
		[SerializeField]
		private bool _updateLight;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Light _light;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatRange _lightIntensityRange;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource _currentAudioSource;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly float[] _clipSampleData;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _loudest;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _currentClipIntensity;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentTgt;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _lastTgt;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xBAF38C", Offset = "0xBAF38C", VA = "0xBAF38C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xBAF430", Offset = "0xBAF430", VA = "0xBAF430")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBAF4CC", Offset = "0xBAF4CC", VA = "0xBAF4CC")]
		private void OnNewAudioPlay(AudioRuntime newRef)
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xBAF58C", Offset = "0xBAF58C", VA = "0xBAF58C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xBAF600", Offset = "0xBAF600", VA = "0xBAF600")]
		private void SampleLoudest()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xBAF7E8", Offset = "0xBAF7E8", VA = "0xBAF7E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0xBAFA58", Offset = "0xBAFA58", VA = "0xBAFA58")]
		private void UpdateEffect(float intensity)
		{
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xBAFBB8", Offset = "0xBAFBB8", VA = "0xBAFBB8")]
		public AudioPulsingEffect()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class CreateNewAssetAttribute : PropertyAttribute
	{
		[Token(Token = "0x600119F")]
		[Address(RVA = "0xBAFCA4", Offset = "0xBAFCA4", VA = "0xBAFCA4")]
		public CreateNewAssetAttribute()
		{
		}
	}
	[Token(Token = "0x2000298")]
	public abstract class EffectKeyData : EffectsAsset
	{
		[NonSerialized]
		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int CachedIndex;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected EffectsController _effectsController;

		[NonSerialized]
		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int CachedPriority;

		[NonSerialized]
		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float CachedCoolDownEndTime;

		[Token(Token = "0x17000252")]
		protected abstract string DefaultControllerGuid
		{
			[Token(Token = "0x60011A0")]
			get;
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xBB16DC", Offset = "0xBB16DC", VA = "0xBB16DC")]
		public bool Request(EffectRequestPayload payload, [Optional] Action<EffectRuntime> onBeginCallback, [Optional] Action onEndCallback, [Optional] Action onCanceledCallback, [Optional] Action onTimeOutCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xBB1A9C", Offset = "0xBB1A9C", VA = "0xBB1A9C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8E1F14", Offset = "0x8E1F14")]
		public void Request(Transform transform)
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBB1B7C", Offset = "0xBB1B7C", VA = "0xBB1B7C")]
		public void Cancel(uint requestId)
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBB1C38", Offset = "0xBB1C38", VA = "0xBB1C38")]
		public void Cancel(EffectRequestState requestState)
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xBB1C70", Offset = "0xBB1C70", VA = "0xBB1C70")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8E1F24", Offset = "0x8E1F24")]
		public void RequestDebug()
		{
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0xBB1CB4", Offset = "0xBB1CB4", VA = "0xBB1CB4")]
		protected EffectKeyData()
		{
		}
	}
	[Token(Token = "0x2000299")]
	public class EffectRequestDebug : MonoBehaviour
	{
		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private EffectKeyData _effect;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _followTransform;

		[NonSerialized]
		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleEffectRuntime _runtime;

		[NonSerialized]
		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private uint _requestID;

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0xBB1CCC", Offset = "0xBB1CCC", VA = "0xBB1CCC")]
		public void RaiseEffect()
		{
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xBB1E40", Offset = "0xBB1E40", VA = "0xBB1E40")]
		private void CancelEffect()
		{
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0xBB1E74", Offset = "0xBB1E74", VA = "0xBB1E74")]
		private void OnBegin(EffectRuntime runtime)
		{
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xBB1F28", Offset = "0xBB1F28", VA = "0xBB1F28")]
		private void OnEnd()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xBB1F30", Offset = "0xBB1F30", VA = "0xBB1F30")]
		private void OnCanceled()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xBB1F38", Offset = "0xBB1F38", VA = "0xBB1F38")]
		public EffectRequestDebug()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class EffectRequestState
	{
		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool CanPlay;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint RequestID;

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xBB21C8", Offset = "0xBB21C8", VA = "0xBB21C8")]
		public EffectRequestState()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200029B")]
	public struct EffectRequestPayload
	{
		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 InitialPosition;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion InitialRotation;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA8F4", Offset = "0x8CA8F4")]
		public Transform Target;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool UpdatePosition;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UpdateRotation;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool IgnoreTimeout;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool ApplyOffset;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EffectRequestState RequestState;

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x966C90", Offset = "0x966C90", VA = "0x966C90")]
		public EffectRequestPayload(Vector3 position, Quaternion rotation, bool ignoreTimeout = false)
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x966C9C", Offset = "0x966C9C", VA = "0x966C9C")]
		public EffectRequestPayload(Transform target, bool follow = true, bool ignoreTimeout = false)
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x966CB0", Offset = "0x966CB0", VA = "0x966CB0")]
		public EffectRequestPayload(Transform target, bool followPosition, bool followRotation, bool ignoreTimeout)
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x966CC4", Offset = "0x966CC4", VA = "0x966CC4")]
		public EffectRequestPayload(Transform target, Quaternion rotation, bool ignoreTimeout = false)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x966CD0", Offset = "0x966CD0", VA = "0x966CD0")]
		public EffectRequestPayload(Transform target, Vector3 position, bool ignoreTimeout = false)
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x966CDC", Offset = "0x966CDC", VA = "0x966CDC")]
		public EffectRequestPayload(Transform target, Vector3 offsetPosition, Quaternion offsetRotation, bool ignoreTimeout = false)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public abstract class EffectRuntime : MonoBehaviour
	{
		[NonSerialized]
		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint CachedID;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CA92C", Offset = "0x8CA92C")]
		private Transform <Target>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform _defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool quitting;

		[Token(Token = "0x17000253")]
		public Transform Target
		{
			[Token(Token = "0x60011B4")]
			[Address(RVA = "0xBB21D8", Offset = "0xBB21D8", VA = "0xBB21D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1F34", Offset = "0x8E1F34")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011B5")]
			[Address(RVA = "0xBB21E0", Offset = "0xBB21E0", VA = "0xBB21E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E1F44", Offset = "0x8E1F44")]
			internal set
			{
			}
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xBB21E8", Offset = "0xBB21E8", VA = "0xBB21E8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xBB21F4", Offset = "0xBB21F4", VA = "0xBB21F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xBB22B0", Offset = "0xBB22B0", VA = "0xBB22B0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xBB22F0", Offset = "0xBB22F0", VA = "0xBB22F0", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xBB23BC", Offset = "0xBB23BC", VA = "0xBB23BC", Slot = "6")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x60011BB")]
		public abstract void OnEnd();

		[Token(Token = "0x60011BC")]
		public abstract void OnCancel();

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xBB23C0", Offset = "0xBB23C0", VA = "0xBB23C0")]
		protected EffectRuntime()
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class EffectsAsset : ScriptableObject
	{
		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private string _assetGuidString;

		[Token(Token = "0x17000254")]
		public string AssetGuidString
		{
			[Token(Token = "0x60011BE")]
			[Address(RVA = "0xBB23C8", Offset = "0xBB23C8", VA = "0xBB23C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xBB1CC4", Offset = "0xBB1CC4", VA = "0xBB1CC4")]
		public EffectsAsset()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public abstract class EffectsController : CustomPlayerLoop
	{
		[Token(Token = "0x2000519")]
		protected abstract class PoolMap
		{
			[Token(Token = "0x6001D4C")]
			public abstract void ResetParent();

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xBB41B0", Offset = "0xBB41B0", VA = "0xBB41B0")]
			protected PoolMap()
			{
			}
		}

		[Token(Token = "0x200051A")]
		private struct EffectRequest
		{
			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint ID;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int Priority;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float RequestTime;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EffectKeyData Request;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EffectRuntime Instance;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EffectRequestPayload Payload;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<EffectRuntime> OnBeginCallback;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action OnEndCallback;

			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Action OnCanceledCallback;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Action OnTimeOutCallback;

			[Token(Token = "0x1700047C")]
			public bool CanPlay
			{
				[Token(Token = "0x6001D4E")]
				[Address(RVA = "0x966D24", Offset = "0x966D24", VA = "0x966D24")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x966D44", Offset = "0x966D44", VA = "0x966D44")]
			private Vector3 GetOffsetPosition()
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x966D4C", Offset = "0x966D4C", VA = "0x966D4C")]
			private Quaternion GetOffsetRotation()
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x966D54", Offset = "0x966D54", VA = "0x966D54")]
			public void ProcessInitialPositionAndRotation()
			{
			}

			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x966D5C", Offset = "0x966D5C", VA = "0x966D5C")]
			public void ProcessPayload()
			{
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x966D64", Offset = "0x966D64", VA = "0x966D64")]
			public void Remove()
			{
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x966D6C", Offset = "0x966D6C", VA = "0x966D6C")]
			public void Cancel(bool resetInstance = true)
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0x966D78", Offset = "0x966D78", VA = "0x966D78")]
			public void TimeOut()
			{
			}
		}

		[Token(Token = "0x4001238")]
		public const int MAX_PRIORITIES = 10;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _timeOutAddRequest;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA994", Offset = "0x8CA994")]
		[SerializeField]
		protected IntVariable forcedDatabaseIndex;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CA9E0", Offset = "0x8CA9E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CA9E0", Offset = "0x8CA9E0")]
		[SerializeField]
		private bool _debugIgnoreTimeouts;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAA50", Offset = "0x8CAA50")]
		[SerializeField]
		private bool _debugSlowQueueProcessing;

		[NonSerialized]
		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EffectRequest[] _runningRequests;

		[NonSerialized]
		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private uint _nextRequestID;

		[NonSerialized]
		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Queue<EffectRequest>[] _transactionAddRequests;

		[NonSerialized]
		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly Queue<EffectRequest> _transactionRemoveRequests;

		[NonSerialized]
		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly List<PoolMap> _runtimePoolMap;

		[NonSerialized]
		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int _freeSlotsCount;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private EffectRequest _nextToBeRemoved;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private EffectsDebuggerClient _remoteDebugger;

		[Token(Token = "0x17000255")]
		protected int MaxActiveEffects
		{
			[Token(Token = "0x60011C0")]
			[Address(RVA = "0xBB23D0", Offset = "0xBB23D0", VA = "0xBB23D0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000256")]
		public abstract EffectsDatabase Database
		{
			[Token(Token = "0x60011C1")]
			get;
		}

		[Token(Token = "0x17000257")]
		public int FreeSlotsCount
		{
			[Token(Token = "0x60011C2")]
			[Address(RVA = "0xBB23F8", Offset = "0xBB23F8", VA = "0xBB23F8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000258")]
		public int TransactionAddRequests
		{
			[Token(Token = "0x60011C3")]
			[Address(RVA = "0xBB2400", Offset = "0xBB2400", VA = "0xBB2400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000259")]
		public int TransactionRemoveRequests
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xBB24A0", Offset = "0xBB24A0", VA = "0xBB24A0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025A")]
		public int RunningCount
		{
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xBB24F0", Offset = "0xBB24F0", VA = "0xBB24F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700025B")]
		public abstract RemoteDebuggerConfiguration DebuggerConfiguration
		{
			[Token(Token = "0x60011C6")]
			get;
		}

		[Token(Token = "0x1700025C")]
		protected EffectsDebuggerClient RemoteDebugger
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xBB252C", Offset = "0xBB252C", VA = "0xBB252C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025D")]
		private bool HasAddRequests
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xBB2D10", Offset = "0xBB2D10", VA = "0xBB2D10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xBB1774", Offset = "0xBB1774", VA = "0xBB1774")]
		public bool HandleRequest(EffectKeyData request, in EffectRequestPayload payload, [Optional] Action<EffectRuntime> onBeginCallback, [Optional] Action onEndCallback, [Optional] Action onCanceledCallback, [Optional] Action onTimeOutCallback)
		{
			return default(bool);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xBB2534", Offset = "0xBB2534", VA = "0xBB2534", Slot = "12")]
		public virtual bool CanHandleRequest(EffectKeyData key)
		{
			return default(bool);
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xBB1B94", Offset = "0xBB1B94", VA = "0xBB1B94")]
		public void CancelRequest(uint ID)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xBB2844", Offset = "0xBB2844", VA = "0xBB2844")]
		private uint GetNextID()
		{
			return default(uint);
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xBB2860", Offset = "0xBB2860", VA = "0xBB2860")]
		private void PlayRequest(ref EffectRequest request)
		{
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xBB2404", Offset = "0xBB2404", VA = "0xBB2404")]
		private int GetTotalAddRequests()
		{
			return default(int);
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xBB2DB0", Offset = "0xBB2DB0", VA = "0xBB2DB0")]
		private EffectRequest PeekNextToAdd()
		{
			return default(EffectRequest);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xBB2E90", Offset = "0xBB2E90", VA = "0xBB2E90")]
		private EffectRequest DequeueNextToAdd()
		{
			return default(EffectRequest);
		}

		[Token(Token = "0x60011D1")]
		[Address(RVA = "0xBB2F70", Offset = "0xBB2F70", VA = "0xBB2F70")]
		private void ResetParents()
		{
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xBB300C", Offset = "0xBB300C", VA = "0xBB300C", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x60011D3")]
		protected abstract void CreatePool(Transform root);

		[Token(Token = "0x60011D4")]
		protected abstract EffectRuntime GetEffect(EffectKeyData request);

		[Token(Token = "0x60011D5")]
		protected abstract bool CheckIsEnabled(EffectKeyData keyData);

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xBB3238", Offset = "0xBB3238", VA = "0xBB3238", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xBB332C", Offset = "0xBB332C", VA = "0xBB332C", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xBB3398", Offset = "0xBB3398", VA = "0xBB3398")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E1F54", Offset = "0x8E1F54")]
		private void DebugValidateRunningRequests()
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0xBB3528", Offset = "0xBB3528", VA = "0xBB3528", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xBB3F20", Offset = "0xBB3F20", VA = "0xBB3F20", Slot = "16")]
		protected virtual void OnProcessRunningRequest(uint id, int priority, EffectKeyData request, EffectRuntime instance)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xBB3F24", Offset = "0xBB3F24", VA = "0xBB3F24")]
		protected EffectsController()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public interface IEffectDatabaseEntry
	{
		[Token(Token = "0x1700025E")]
		EffectKeyData Key
		{
			[Token(Token = "0x60011DC")]
			get;
			[Token(Token = "0x60011DD")]
			set;
		}

		[Token(Token = "0x1700025F")]
		int Priority
		{
			[Token(Token = "0x60011DE")]
			get;
			[Token(Token = "0x60011DF")]
			set;
		}

		[Token(Token = "0x17000260")]
		int Instances
		{
			[Token(Token = "0x60011E0")]
			get;
			[Token(Token = "0x60011E1")]
			set;
		}

		[Token(Token = "0x17000261")]
		int PlaybackChance
		{
			[Token(Token = "0x60011E2")]
			get;
			[Token(Token = "0x60011E3")]
			set;
		}

		[Token(Token = "0x17000262")]
		FloatRange CooldownDelay
		{
			[Token(Token = "0x60011E4")]
			get;
			[Token(Token = "0x60011E5")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class EffectDatabaseEntry<TKeyData> : IEffectDatabaseEntry where TKeyData : EffectKeyData
	{
		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[CreateNewAsset]
		public TKeyData Key;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CAAAC", Offset = "0x8CAAAC")]
		public int Priority;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Instances;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CAAC4", Offset = "0x8CAAC4")]
		public int PlaybackChance;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FloatRange CooldownDelay;

		[Token(Token = "0x17000263")]
		private EffectKeyData SG.Claymore.Effects.IEffectDatabaseEntry.Key
		{
			[Token(Token = "0x60011E6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011E7")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		private int SG.Claymore.Effects.IEffectDatabaseEntry.Priority
		{
			[Token(Token = "0x60011E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011E9")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		private int SG.Claymore.Effects.IEffectDatabaseEntry.Instances
		{
			[Token(Token = "0x60011EA")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011EB")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		private int SG.Claymore.Effects.IEffectDatabaseEntry.PlaybackChance
		{
			[Token(Token = "0x60011EC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011ED")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		private FloatRange SG.Claymore.Effects.IEffectDatabaseEntry.CooldownDelay
		{
			[Token(Token = "0x60011EE")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011EF")]
			set
			{
			}
		}

		[Token(Token = "0x60011F0")]
		public EffectDatabaseEntry()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A3534", Offset = "0x8A3534")]
	public abstract class EffectsDatabase : EffectsAsset
	{
		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected UnityEngine.Object[] assetFolderRoots;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CAAF0", Offset = "0x8CAAF0")]
		[SerializeField]
		private int _maxActiveEffects;

		[Token(Token = "0x17000268")]
		public UnityEngine.Object[] AssetFolderRoots
		{
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0xBB41B8", Offset = "0xBB41B8", VA = "0xBB41B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public int MaxActiveEffects
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0xBB41C0", Offset = "0xBB41C0", VA = "0xBB41C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026A")]
		public abstract IEffectDatabaseEntry Item
		{
			[Token(Token = "0x60011F3")]
			get;
			[Token(Token = "0x60011F4")]
			set;
		}

		[Token(Token = "0x1700026B")]
		public abstract Type EntryType
		{
			[Token(Token = "0x60011F5")]
			get;
		}

		[Token(Token = "0x1700026C")]
		public abstract int Count
		{
			[Token(Token = "0x60011F6")]
			get;
		}

		[Token(Token = "0x1700026D")]
		public abstract string AssetName
		{
			[Token(Token = "0x60011F7")]
			get;
		}

		[Token(Token = "0x60011F8")]
		public abstract void AddNewEntry();

		[Token(Token = "0x60011F9")]
		public abstract void AddNewEntry(ScriptableObject key, int index = -1);

		[Token(Token = "0x60011FA")]
		public abstract void RemoveEntry(int index);

		[Token(Token = "0x60011FB")]
		public abstract void Sort(Comparison<ScriptableObject> comparison);

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xBB41C8", Offset = "0xBB41C8", VA = "0xBB41C8", Slot = "13")]
		public virtual ScriptableObject GetKey(int i)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xBB4298", Offset = "0xBB4298", VA = "0xBB4298")]
		protected EffectsDatabase()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8A356C", Offset = "0x8A356C")]
	public abstract class EffectsDatabase<TEntryType> : EffectsDatabase where TEntryType : IEffectDatabaseEntry
	{
		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB14C", Offset = "0x8AB14C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Comparison<ScriptableObject> comparison;

			[Token(Token = "0x6001D56")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6001D57")]
			internal int <Sort>b__0(TEntryType a, TEntryType b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public List<TEntryType> _entries;

		[Token(Token = "0x1700026E")]
		public override int Count
		{
			[Token(Token = "0x60011FE")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700026F")]
		public override string AssetName
		{
			[Token(Token = "0x60011FF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public override Type EntryType
		{
			[Token(Token = "0x6001200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000271")]
		public override IEffectDatabaseEntry Item
		{
			[Token(Token = "0x6001206")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001207")]
			set
			{
			}
		}

		[Token(Token = "0x6001201")]
		protected TEntryType CreateEntry()
		{
			return (TEntryType)null;
		}

		[Token(Token = "0x6001202")]
		public override void Sort(Comparison<ScriptableObject> comparison)
		{
		}

		[Token(Token = "0x6001203")]
		public override void AddNewEntry()
		{
		}

		[Token(Token = "0x6001204")]
		public override void AddNewEntry(ScriptableObject key, int index = -1)
		{
		}

		[Token(Token = "0x6001205")]
		public override void RemoveEntry(int index)
		{
		}

		[Token(Token = "0x6001208")]
		protected EffectsDatabase()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class EffectsException : Exception
	{
		[Token(Token = "0x6001209")]
		[Address(RVA = "0xBB430C", Offset = "0xBB430C", VA = "0xBB430C")]
		public EffectsException()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xBB27CC", Offset = "0xBB27CC", VA = "0xBB27CC")]
		public EffectsException(string message)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xBB4374", Offset = "0xBB4374", VA = "0xBB4374")]
		public EffectsException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class PostProcessVolumeSetter : MonoBehaviour
	{
		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PostProcessVolumeVariable _postProcessVolumeVariable;

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xBB43DC", Offset = "0xBB43DC", VA = "0xBB43DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xBB4450", Offset = "0xBB4450", VA = "0xBB4450")]
		public PostProcessVolumeSetter()
		{
		}
	}
}
namespace SG.Claymore.Effects.Diagnostics
{
	[Token(Token = "0x20002A5")]
	public enum TextColor
	{
		[Token(Token = "0x4001250")]
		White,
		[Token(Token = "0x4001251")]
		Red,
		[Token(Token = "0x4001252")]
		Yellow,
		[Token(Token = "0x4001253")]
		Green,
		[Token(Token = "0x4001254")]
		Blue
	}
	[Token(Token = "0x20002A6")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8A35A4", Offset = "0x8A35A4")]
	public class TextColorAttribute : Attribute
	{
		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextColor _color;

		[Token(Token = "0x17000272")]
		public Color DisplayColor
		{
			[Token(Token = "0x600120F")]
			[Address(RVA = "0xBB1564", Offset = "0xBB1564", VA = "0xBB1564")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xBB1538", Offset = "0xBB1538", VA = "0xBB1538")]
		public TextColorAttribute(TextColor color)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class EffectsDebuggerClient : RemoteDebuggerClient<EffectsDebuggerSettings>
	{
		[Token(Token = "0x200051C")]
		private class CachedTimeOutOp
		{
			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TimeOutOperation LastOp;

			[Token(Token = "0x6001D58")]
			[Address(RVA = "0xBB0668", Offset = "0xBB0668", VA = "0xBB0668")]
			public void Update(TimeOutOperation op)
			{
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xBB0660", Offset = "0xBB0660", VA = "0xBB0660")]
			public CachedTimeOutOp()
			{
			}
		}

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkWriter _requestWriter;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NetworkWriter _timeOutWriter;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private NetworkWriter _settingsWriter;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private NetworkWriter _interruptWriter;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RequestOperation[] _activeRequests;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, CachedTimeOutOp> _timeOutLookup;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private BasicLinkedList<InterruptedOperation>[] _interrupedRequests;

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xBAFCAC", Offset = "0xBAFCAC", VA = "0xBAFCAC", Slot = "4")]
		protected override void OnInitialize()
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xBAFF70", Offset = "0xBAFF70", VA = "0xBAFF70")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E1F8C", Offset = "0x8E1F8C")]
		public void SendRequestOperation(RequestOperation operation)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xBB0518", Offset = "0xBB0518", VA = "0xBB0518")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E1FC4", Offset = "0x8E1FC4")]
		public void SendTimeOutOperation(TimeOutOperation operation)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xBB0728", Offset = "0xBB0728", VA = "0xBB0728")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E1FFC", Offset = "0x8E1FFC")]
		public void SendInterruptedOperation(InterruptedOperation operation)
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xBB0A64", Offset = "0xBB0A64", VA = "0xBB0A64")]
		private void SendSettings(in EffectsDebuggerSettings settings)
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xBB0B44", Offset = "0xBB0B44", VA = "0xBB0B44", Slot = "5")]
		protected override void OnConnect(ConnectionType connectionType, int playerID)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xBB0F80", Offset = "0xBB0F80", VA = "0xBB0F80", Slot = "6")]
		protected override void OnDisconnect(ConnectionType connectionType, int playerId)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xBB0FE8", Offset = "0xBB0FE8", VA = "0xBB0FE8", Slot = "7")]
		protected override void OnMessageReceived(ConnectionType connectionType, MessageEventArgs args)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xBB0BB4", Offset = "0xBB0BB4", VA = "0xBB0BB4")]
		private void SendState()
		{
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xBB1094", Offset = "0xBB1094", VA = "0xBB1094")]
		public EffectsDebuggerClient()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public enum ClientMessageType : byte
	{
		[Token(Token = "0x400125E")]
		Settings,
		[Token(Token = "0x400125F")]
		RequestOperation,
		[Token(Token = "0x4001260")]
		TimeOut,
		[Token(Token = "0x4001261")]
		Interrupt
	}
	[Token(Token = "0x20002A9")]
	public enum ServerMessageType
	{
		[Token(Token = "0x4001263")]
		Refresh
	}
	[Token(Token = "0x20002AA")]
	public static class SerializationSettings
	{
		[Token(Token = "0x4001264")]
		public const int GuidStringLength = 32;
	}
	[Token(Token = "0x20002AB")]
	public struct EffectsDebuggerSettings
	{
		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int MaxActiveEffects;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string DatabaseGuid;

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x966980", Offset = "0x966980", VA = "0x966980")]
		public EffectsDebuggerSettings(EffectsDatabase database)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public static class EffectsDebuggerSettingsSerializer
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0xBB0B00", Offset = "0xBB0B00", VA = "0xBB0B00")]
		public static void Write(this NetworkWriter writer, in EffectsDebuggerSettings value)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xBB113C", Offset = "0xBB113C", VA = "0xBB113C")]
		public static EffectsDebuggerSettings ReadEffectsDebuggerSettings(this NetworkReader reader)
		{
			return default(EffectsDebuggerSettings);
		}
	}
	[Token(Token = "0x20002AD")]
	public enum RequestOperationType : byte
	{
		[Token(Token = "0x4001268")]
		[AttributeAttribute(Name = "TextColorAttribute", RVA = "0x8CAB4C", Offset = "0x8CAB4C")]
		Inactive,
		[Token(Token = "0x4001269")]
		[AttributeAttribute(Name = "TextColorAttribute", RVA = "0x8CAB60", Offset = "0x8CAB60")]
		Playing,
		[Token(Token = "0x400126A")]
		[AttributeAttribute(Name = "TextColorAttribute", RVA = "0x8CAB74", Offset = "0x8CAB74")]
		Canceled,
		[Token(Token = "0x400126B")]
		[AttributeAttribute(Name = "TextColorAttribute", RVA = "0x8CAB88", Offset = "0x8CAB88")]
		Stopped
	}
	[Token(Token = "0x20002AE")]
	public struct RequestOperation
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RequestOperationType Type;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Frame;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Time;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string RequestKeyGuid;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint RequestID;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Index;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int Priority;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool HasRuntimeInstance;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int RuntimeInstanceID;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool IsEditor;

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x966B70", Offset = "0x966B70", VA = "0x966B70")]
		public RequestOperation(RequestOperationType type, int index, uint requestID, string requestKeyGuid, int priority, UnityEngine.Object runtimeInstance)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x966B78", Offset = "0x966B78", VA = "0x966B78")]
		public RequestOperation(RequestOperationType type, int index, uint requestID, EffectKeyData key, UnityEngine.Object runtimeInstance)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x966B80", Offset = "0x966B80", VA = "0x966B80", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002AF")]
	public static class RequestOperationSerializer
	{
		[Token(Token = "0x6001220")]
		[Address(RVA = "0xBB01DC", Offset = "0xBB01DC", VA = "0xBB01DC")]
		public static void Write(this NetworkWriter writer, in RequestOperation value)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xBB1434", Offset = "0xBB1434", VA = "0xBB1434")]
		public static RequestOperation ReadRequestOperation(this NetworkReader reader)
		{
			return default(RequestOperation);
		}
	}
	[Token(Token = "0x20002B0")]
	public struct TimeOutOperation
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string RequestKeyGuid;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Priority;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int CachedCount;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Frame;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Time;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsEditor;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0x966C44", Offset = "0x966C44", VA = "0x966C44")]
		public TimeOutOperation(string requestKeyGuid, int priority)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0x966C4C", Offset = "0x966C4C", VA = "0x966C4C")]
		public TimeOutOperation(EffectKeyData key)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public static class TimeOutOperationSerializer
	{
		[Token(Token = "0x6001224")]
		[Address(RVA = "0xBB06A4", Offset = "0xBB06A4", VA = "0xBB06A4")]
		public static void Write(this NetworkWriter writer, in TimeOutOperation value)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xBB162C", Offset = "0xBB162C", VA = "0xBB162C")]
		public static TimeOutOperation ReadTimeOutOperation(this NetworkReader reader)
		{
			return default(TimeOutOperation);
		}
	}
	[Token(Token = "0x20002B2")]
	public enum InterruptedType : byte
	{
		[Token(Token = "0x400127D")]
		Enqueue,
		[Token(Token = "0x400127E")]
		Dequeue,
		[Token(Token = "0x400127F")]
		Cancel
	}
	[Token(Token = "0x20002B3")]
	public struct InterruptedOperation
	{
		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InterruptedType Type;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string RequestKeyGuid;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Priority;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Index;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Frame;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Time;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool IsEditor;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0x966A54", Offset = "0x966A54", VA = "0x966A54")]
		public InterruptedOperation(InterruptedType type, int index, string requestKeyGuid, int priority)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0x966A5C", Offset = "0x966A5C", VA = "0x966A5C")]
		public InterruptedOperation(InterruptedType type, int index, EffectKeyData key)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public static class InterruptedOperationSerializer
	{
		[Token(Token = "0x6001228")]
		[Address(RVA = "0xBB09D0", Offset = "0xBB09D0", VA = "0xBB09D0")]
		public static void Write(this NetworkWriter writer, in InterruptedOperation value)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xBB1228", Offset = "0xBB1228", VA = "0xBB1228")]
		public static InterruptedOperation ReadInterruptedOperation(this NetworkReader reader)
		{
			return default(InterruptedOperation);
		}
	}
}
namespace SG.Claymore.Diagnostics
{
	[Token(Token = "0x20002B5")]
	public class NetworkReader
	{
		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _buffer;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _position;

		[Token(Token = "0x17000273")]
		public byte[] Buffer
		{
			[Token(Token = "0x600122A")]
			[Address(RVA = "0xCCA660", Offset = "0xCCA660", VA = "0xCCA660")]
			get
			{
				return null;
			}
			[Token(Token = "0x600122B")]
			[Address(RVA = "0xCCA668", Offset = "0xCCA668", VA = "0xCCA668")]
			set
			{
			}
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xCCA69C", Offset = "0xCCA69C", VA = "0xCCA69C")]
		public NetworkReader()
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xCCA694", Offset = "0xCCA694", VA = "0xCCA694")]
		public void Reset()
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xCCA6C4", Offset = "0xCCA6C4", VA = "0xCCA6C4")]
		public bool ReadBool()
		{
			return default(bool);
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xCCA6E0", Offset = "0xCCA6E0", VA = "0xCCA6E0")]
		public byte ReadByte()
		{
			return default(byte);
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xCCA89C", Offset = "0xCCA89C", VA = "0xCCA89C")]
		public int ReadInt32()
		{
			return default(int);
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xCCA93C", Offset = "0xCCA93C", VA = "0xCCA93C")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xCCA940", Offset = "0xCCA940", VA = "0xCCA940")]
		public float ReadSingle()
		{
			return default(float);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xCCA9E4", Offset = "0xCCA9E4", VA = "0xCCA9E4")]
		public string ReadString(int count)
		{
			return null;
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xCCA73C", Offset = "0xCCA73C", VA = "0xCCA73C")]
		private void ValidateMemory(int byteCount)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class NetworkWriter
	{
		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] _buffer;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _position;

		[Token(Token = "0x17000274")]
		public byte[] Buffer
		{
			[Token(Token = "0x6001235")]
			[Address(RVA = "0xCCAAEC", Offset = "0xCCAAEC", VA = "0xCCAAEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001236")]
			[Address(RVA = "0xCCAAF4", Offset = "0xCCAAF4", VA = "0xCCAAF4")]
			set
			{
			}
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xCCAB28", Offset = "0xCCAB28", VA = "0xCCAB28")]
		public NetworkWriter(int bufferSize)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xCCABAC", Offset = "0xCCABAC", VA = "0xCCABAC")]
		public NetworkWriter()
		{
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xCCAB20", Offset = "0xCCAB20", VA = "0xCCAB20")]
		public void Reset()
		{
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xCCABD4", Offset = "0xCCABD4", VA = "0xCCABD4")]
		public void Write(bool value)
		{
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xCCABDC", Offset = "0xCCABDC", VA = "0xCCABDC")]
		public void Write(byte value)
		{
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xCCADA0", Offset = "0xCCADA0", VA = "0xCCADA0")]
		public void Write(int value)
		{
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xCCAE7C", Offset = "0xCCAE7C", VA = "0xCCAE7C")]
		public void Write(uint value)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xCCAF58", Offset = "0xCCAF58", VA = "0xCCAF58")]
		public void Write(float value)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xCCB040", Offset = "0xCCB040", VA = "0xCCB040")]
		public void Write(string value, int count)
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xCCAC40", Offset = "0xCCAC40", VA = "0xCCAC40")]
		private void ValidateMemory(int byteCount)
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public static class PlayerConnectionExtensionMethods
	{
		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FieldInfo m_connectedPlayers;

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xCCB104", Offset = "0xCCB104", VA = "0xCCB104")]
		static PlayerConnectionExtensionMethods()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xCCB1BC", Offset = "0xCCB1BC", VA = "0xCCB1BC")]
		public static List<int> GetConnectedPlayers(this PlayerConnection instance)
		{
			return null;
		}
	}
	[Token(Token = "0x20002B8")]
	public enum ConnectionType
	{
		[Token(Token = "0x400128D")]
		Editor,
		[Token(Token = "0x400128E")]
		Remote
	}
	[Token(Token = "0x20002B9")]
	public class RemoteDebuggerClient<SettingsType> : ScriptableObject
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CAB9C", Offset = "0x8CAB9C")]
		private RemoteDebuggerConfiguration <Configuration>k__BackingField;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CABAC", Offset = "0x8CABAC")]
		private SettingsType <Settings>k__BackingField;

		[Token(Token = "0x17000275")]
		public RemoteDebuggerConfiguration Configuration
		{
			[Token(Token = "0x6001243")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20C4", Offset = "0x8E20C4")]
			get
			{
				return default(RemoteDebuggerConfiguration);
			}
			[Token(Token = "0x6001244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20D4", Offset = "0x8E20D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000276")]
		public SettingsType Settings
		{
			[Token(Token = "0x6001245")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20E4", Offset = "0x8E20E4")]
			get
			{
				return (SettingsType)null;
			}
			[Token(Token = "0x6001246")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E20F4", Offset = "0x8E20F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001247")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2104", Offset = "0x8E2104")]
		public static void Initialize<InstanceType>(RemoteDebuggerConfiguration configuration, SettingsType settings, ref InstanceType instance) where InstanceType : RemoteDebuggerClient<SettingsType>
		{
		}

		[Token(Token = "0x6001248")]
		protected virtual void OnInitialize()
		{
		}

		[Token(Token = "0x6001249")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E213C", Offset = "0x8E213C")]
		public void ShutDown()
		{
		}

		[Token(Token = "0x600124A")]
		protected void SendToServer(byte[] data)
		{
		}

		[Token(Token = "0x600124B")]
		private void OnSimulatedConnect(Guid messageId, int playerId)
		{
		}

		[Token(Token = "0x600124C")]
		private void OnSimulatedAcknowledgement(Guid messageId, int playerId)
		{
		}

		[Token(Token = "0x600124D")]
		private void OnSimulatedDisconnect(Guid messageId, int playerId)
		{
		}

		[Token(Token = "0x600124E")]
		private void OnSimulatedMessage(MessageEventArgs args)
		{
		}

		[Token(Token = "0x600124F")]
		private void OnPlayerConnect(int playerId)
		{
		}

		[Token(Token = "0x6001250")]
		private void OnPlayerDisconnect(int playerId)
		{
		}

		[Token(Token = "0x6001251")]
		private void OnPlayerMessage(MessageEventArgs args)
		{
		}

		[Token(Token = "0x6001252")]
		protected virtual void OnConnect(ConnectionType connectionType, int playerID)
		{
		}

		[Token(Token = "0x6001253")]
		protected virtual void OnDisconnect(ConnectionType connectionType, int playerId)
		{
		}

		[Token(Token = "0x6001254")]
		protected virtual void OnMessageReceived(ConnectionType connectionType, MessageEventArgs args)
		{
		}

		[Token(Token = "0x6001255")]
		public RemoteDebuggerClient()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002BA")]
	public struct RemoteDebuggerConfiguration
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Guid ClientID;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Guid ServerID;

		[Token(Token = "0x17000277")]
		public bool IsValid
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0x9680C8", Offset = "0x9680C8", VA = "0x9680C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0x9680B4", Offset = "0x9680B4", VA = "0x9680B4")]
		public RemoteDebuggerConfiguration(Guid client, Guid server)
		{
		}

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x9680C0", Offset = "0x9680C0", VA = "0x9680C0")]
		public RemoteDebuggerConfiguration(string client, string server)
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class SimulatedConnection : ScriptableObject
	{
		[Token(Token = "0x4001293")]
		public const int EditorID = 1;

		[Token(Token = "0x4001294")]
		public const int PlayerID = int.MaxValue;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SimulatedConnection _instance;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Guid, List<UnityAction<MessageEventArgs>>> _messageSubscribers;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<Guid, List<UnityAction<Guid, int>>> _connectionSubscribers;

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<Guid, List<UnityAction<Guid, int>>> _acknowledgeSubscribers;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<Guid, List<UnityAction<Guid, int>>> _disconnectSubscribers;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MessageEventArgs _cachedArgs;

		[Token(Token = "0x17000278")]
		public static SimulatedConnection instance
		{
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xCCB3C4", Offset = "0xCCB3C4", VA = "0xCCB3C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xCCB49C", Offset = "0xCCB49C", VA = "0xCCB49C")]
		public void Register(Guid messageId, UnityAction<MessageEventArgs> callback)
		{
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xCCB5D0", Offset = "0xCCB5D0", VA = "0xCCB5D0")]
		public void Unregister(Guid messageId, UnityAction<MessageEventArgs> callback)
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xCCB6AC", Offset = "0xCCB6AC", VA = "0xCCB6AC")]
		public void Send(Guid messageId, byte[] data)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xCCB7B0", Offset = "0xCCB7B0", VA = "0xCCB7B0")]
		public void RegisterConnection(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xCCB8E4", Offset = "0xCCB8E4", VA = "0xCCB8E4")]
		public void UnregisterConnection(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xCCB9C0", Offset = "0xCCB9C0", VA = "0xCCB9C0")]
		public void Connect(Guid senderID, Guid receiverID, int playerID)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xCCBABC", Offset = "0xCCBABC", VA = "0xCCBABC")]
		public void RegisterAcknowledgement(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xCCBBF0", Offset = "0xCCBBF0", VA = "0xCCBBF0")]
		public void UnregisterAcknowledgement(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xCCBCCC", Offset = "0xCCBCCC", VA = "0xCCBCCC")]
		public void AcknowledgeConnection(Guid senderID, Guid receiverID, int playerID)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xCCBDC8", Offset = "0xCCBDC8", VA = "0xCCBDC8")]
		public void RegisterDisconnection(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xCCBEFC", Offset = "0xCCBEFC", VA = "0xCCBEFC")]
		public void UnregisterDisconnection(Guid messageId, UnityAction<Guid, int> callback)
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xCCBFD8", Offset = "0xCCBFD8", VA = "0xCCBFD8")]
		public void Disconnect(Guid senderID, Guid receiverID, int playerID)
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xCCC0D4", Offset = "0xCCC0D4", VA = "0xCCC0D4")]
		public SimulatedConnection()
		{
		}
	}
}
namespace SG.Claymore.Debugging
{
	[Token(Token = "0x20002BC")]
	public class DebugAchievementButton : Button
	{
		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private FloatVariable _debugIncrementStep;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private Text _titleText;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Image _unlockedIcon;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Text _counter;

		[NonSerialized]
		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private AchievementAsset _achievement;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xCC8558", Offset = "0xCC8558", VA = "0xCC8558", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xCC86F8", Offset = "0xCC86F8", VA = "0xCC86F8")]
		public void Configure(AchievementAsset achievementAsset)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xCC85B4", Offset = "0xCC85B4", VA = "0xCC85B4")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xCC8724", Offset = "0xCC8724", VA = "0xCC8724")]
		public DebugAchievementButton()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class DebugAchievementPanel : MonoBehaviour
	{
		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AchievementDatabase _achievementDatabase;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DebugAchievementButton _template;

		[NonSerialized]
		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<DebugAchievementButton> _debugButtons;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _userIDText;

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xCC872C", Offset = "0xCC872C", VA = "0xCC872C")]
		private void Start()
		{
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xCC8958", Offset = "0xCC8958", VA = "0xCC8958")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xCC8730", Offset = "0xCC8730", VA = "0xCC8730")]
		private void Initialize()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xCC895C", Offset = "0xCC895C", VA = "0xCC895C")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xCC89F0", Offset = "0xCC89F0", VA = "0xCC89F0")]
		public DebugAchievementPanel()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class DebugCommandListener : MonoBehaviour
	{
		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BinaryInputAction PauseAction;

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xCC8A6C", Offset = "0xCC8A6C", VA = "0xCC8A6C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xCC8B40", Offset = "0xCC8B40", VA = "0xCC8B40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xCC8C14", Offset = "0xCC8C14", VA = "0xCC8C14")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xCC8C74", Offset = "0xCC8C74", VA = "0xCC8C74")]
		public DebugCommandListener()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class DebugDistanceFlew : MonoBehaviour
	{
		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text textField;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxHeight;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable _enemyMax;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable _distanceFlew;

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xCC8C7C", Offset = "0xCC8C7C", VA = "0xCC8C7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xCC8F50", Offset = "0xCC8F50", VA = "0xCC8F50")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xCC8FF0", Offset = "0xCC8FF0", VA = "0xCC8FF0")]
		public DebugDistanceFlew()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class DebugSaveData : MonoBehaviour
	{
		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text _savePathText;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _legacySaveText;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text _newSaveText;

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xCC8FF8", Offset = "0xCC8FF8", VA = "0xCC8FF8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xCC8FFC", Offset = "0xCC8FFC", VA = "0xCC8FFC")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xCC9718", Offset = "0xCC9718", VA = "0xCC9718")]
		public void ClearCurrentSavePath()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xCC974C", Offset = "0xCC974C", VA = "0xCC974C")]
		public void UpgradeSave()
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xCC982C", Offset = "0xCC982C", VA = "0xCC982C")]
		public DebugSaveData()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class DebugSpawner : MonoBehaviour
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] ObjectsToSpawn;

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xCC9834", Offset = "0xCC9834", VA = "0xCC9834")]
		private void Start()
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xCC992C", Offset = "0xCC992C", VA = "0xCC992C")]
		public DebugSpawner()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class DebugVFXButtons : MonoBehaviour
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VFXController _vfxController;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DebugVFXToggleButton _template;

		[NonSerialized]
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly List<DebugVFXToggleButton> _vfxButtons;

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xCC9998", Offset = "0xCC9998", VA = "0xCC9998")]
		private void Start()
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xCC999C", Offset = "0xCC999C", VA = "0xCC999C")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xCC9D68", Offset = "0xCC9D68", VA = "0xCC9D68")]
		public DebugVFXButtons()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class DebugVFXToggleButton : Toggle
	{
		[NonSerialized]
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public VisualKeyData VisualKeyData;

		[NonSerialized]
		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private VisualRuntime _currentRuntime;

		[NonSerialized]
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private ParticleSystem[] _currentRuntimeParticleSystems;

		[NonSerialized]
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool[] _originalLoopingStates;

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xCC9DE4", Offset = "0xCC9DE4", VA = "0xCC9DE4", Slot = "49")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xCC9E10", Offset = "0xCC9E10", VA = "0xCC9E10")]
		private void SetEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xCCA038", Offset = "0xCCA038", VA = "0xCCA038")]
		private void RestoreLoops()
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xCCA138", Offset = "0xCCA138", VA = "0xCCA138")]
		private void OnEffectPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xCCA36C", Offset = "0xCCA36C", VA = "0xCCA36C")]
		public DebugVFXToggleButton()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class VFXParticleDebugging : MonoBehaviour
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable _visibleControl;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem[] _particleSystems;

		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] _allCachedParticleSystems;

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xCCA3FC", Offset = "0xCCA3FC", VA = "0xCCA3FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xCCA488", Offset = "0xCCA488", VA = "0xCCA488")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xCCA52C", Offset = "0xCCA52C", VA = "0xCCA52C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xCCA5C8", Offset = "0xCCA5C8", VA = "0xCCA5C8")]
		private void OnVisibilityChanged(bool isVisible)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xCCA658", Offset = "0xCCA658", VA = "0xCCA658")]
		public VFXParticleDebugging()
		{
		}
	}
}
namespace SG.Claymore.Credits
{
	[Token(Token = "0x20002C5")]
	public class CreditsName : MonoBehaviour
	{
		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB15C", Offset = "0x8AB15C")]
		private sealed class <Transition>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CreditsName <>4__this;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool postStatus;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Transform target;

			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool doPosition;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__2;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startScale>5__3;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <endScale>5__4;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startZ>5__5;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <endZ>5__6;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Vector3 <p>5__7;

			[Token(Token = "0x1700047D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5D")]
				[Address(RVA = "0xCC84E8", Offset = "0xCC84E8", VA = "0xCC84E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700047E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5F")]
				[Address(RVA = "0xCC8550", Offset = "0xCC8550", VA = "0xCC8550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xCC7E30", Offset = "0xCC7E30", VA = "0xCC7E30")]
			[DebuggerHidden]
			public <Transition>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xCC8218", Offset = "0xCC8218", VA = "0xCC8218", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xCC821C", Offset = "0xCC821C", VA = "0xCC821C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0xCC84F0", Offset = "0xCC84F0", VA = "0xCC84F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VTextInterface nameText;

		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float explosionRadius;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float explosionForce;

		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CritMarkedEntity critEntity;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float directionOffsetMultiplier;

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float lengthMulti;

		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float randomOffsetMaxRadius;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float initZ;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[HideInInspector]
		private bool isInitialized;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private GameObject nameTextGO;

		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string cName;

		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float scaleInDuration;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private Rigidbody[] letterBodies;

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CritPointInstanced crit;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool hit;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Action _hitCallback;

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xCC7864", Offset = "0xCC7864", VA = "0xCC7864")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xCC7A50", Offset = "0xCC7A50", VA = "0xCC7A50")]
		public MeshFilter[] Initialize(string name)
		{
			return null;
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xCC7C68", Offset = "0xCC7C68", VA = "0xCC7C68")]
		public void Play(Action hitCallback)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xCC7D78", Offset = "0xCC7D78", VA = "0xCC7D78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2174", Offset = "0x8E2174")]
		private IEnumerator Transition(Transform target, bool postStatus, bool doPosition)
		{
			return null;
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xCC7E5C", Offset = "0xCC7E5C", VA = "0xCC7E5C")]
		public void HandleChildHit(HitData hitData)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xCC8094", Offset = "0xCC8094", VA = "0xCC8094")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xCC8104", Offset = "0xCC8104", VA = "0xCC8104")]
		public void End()
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xCC81F4", Offset = "0xCC81F4", VA = "0xCC81F4")]
		public CreditsName()
		{
		}
	}
}
namespace SG.Claymore.Localization
{
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3628", Offset = "0x8A3628")]
	public class CreditsListData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200051E")]
		public struct CreditsEle
		{
			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string eleName;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<string> eleContent1;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> eleContent2;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<string> eleContent3;
		}

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<CreditsEle> groups;

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xB12DC4", Offset = "0xB12DC4", VA = "0xB12DC4")]
		public CreditsListData()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	public class ClosedCaptionUIRoot : MonoBehaviour, IResourceLoadHandler<ClosedCaptionUI>, IResourceLoadHandler
	{
		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ResourceRequestKey _ccUIKey;

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB12BCC", Offset = "0xB12BCC", VA = "0xB12BCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB12CB4", Offset = "0xB12CB4", VA = "0xB12CB4", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB12DBC", Offset = "0xB12DBC", VA = "0xB12DBC")]
		public ClosedCaptionUIRoot()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class AudioDebugger : MonoBehaviour
	{
		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClosedCaptionDatabase _closedCaptionDatabase;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ClosedCaptionManager _closedCaptionManager;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int curIndex;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text debuggerIndexMessage;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Text debuggerMessage;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioDatabase _audioDataBase;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _audio;

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xCA11B4", Offset = "0xCA11B4", VA = "0xCA11B4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xCA11C0", Offset = "0xCA11C0", VA = "0xCA11C0")]
		private AudioClip GetClipFromDatabase(int _index)
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xCA1248", Offset = "0xCA1248", VA = "0xCA1248")]
		private void PlayAudio(int _index)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xCA12CC", Offset = "0xCA12CC", VA = "0xCA12CC")]
		private int GetNext(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xCA133C", Offset = "0xCA133C", VA = "0xCA133C")]
		private int GetPrev(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xCA13AC", Offset = "0xCA13AC", VA = "0xCA13AC")]
		public void PlayNextAudio()
		{
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xCA1460", Offset = "0xCA1460", VA = "0xCA1460")]
		public void PlayPrevAudio()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xCA1514", Offset = "0xCA1514", VA = "0xCA1514")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xCA1654", Offset = "0xCA1654", VA = "0xCA1654")]
		public AudioDebugger()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class BattleTipDebuggerManager : MonoBehaviour
	{
		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<PopupUIRandomDisplay> battleTipUIPool;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRTrackedNode hmdNode;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GlobalEvent ShowNextBattleTipEvent;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GlobalEvent ShowPrevBattleTipEvent;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent hideBattleTipEvent;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private StringGlobalEvent debuggerMessage;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntGlobalEvent debuggerIndexMessage;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PopupUIRandomDisplay curBattleTipUI;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int curPoolIndex;

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xCA165C", Offset = "0xCA165C", VA = "0xCA165C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xCA1888", Offset = "0xCA1888", VA = "0xCA1888")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xCA1998", Offset = "0xCA1998", VA = "0xCA1998")]
		public void ShowNextBattleTip()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xCA1B24", Offset = "0xCA1B24", VA = "0xCA1B24")]
		private int GetNextPoolIndex(int _curIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xCA1B8C", Offset = "0xCA1B8C", VA = "0xCA1B8C")]
		public void ShowPrevBattleTip()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xCA1D18", Offset = "0xCA1D18", VA = "0xCA1D18")]
		private int GetPrevPoolIndex(int _curIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xCA1D80", Offset = "0xCA1D80", VA = "0xCA1D80")]
		private void HideBattleTip()
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xCA1E14", Offset = "0xCA1E14", VA = "0xCA1E14")]
		public BattleTipDebuggerManager()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class DisplayDamageDebugger : MonoBehaviour
	{
		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TraitAugment displayDamageTrait;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandVariable playerHand;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand hand;

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xB12E40", Offset = "0xB12E40", VA = "0xB12E40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xB12E84", Offset = "0xB12E84", VA = "0xB12E84")]
		public void AddTrait()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xB12F00", Offset = "0xB12F00", VA = "0xB12F00")]
		public void RemoveTrait()
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xB12F60", Offset = "0xB12F60", VA = "0xB12F60")]
		public DisplayDamageDebugger()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A3688", Offset = "0x8A3688")]
	public class LocalDebugMessage : MonoBehaviour
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text text;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text indexText;

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xB13ECC", Offset = "0xB13ECC", VA = "0xB13ECC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xB13F2C", Offset = "0xB13F2C", VA = "0xB13F2C")]
		public void MessageUpdate(PopupUIAsset data)
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xB13F74", Offset = "0xB13F74", VA = "0xB13F74")]
		public void MessageUpdate(string dataName)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xB13F98", Offset = "0xB13F98", VA = "0xB13F98")]
		public void ClearLog()
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xB14018", Offset = "0xB14018", VA = "0xB14018")]
		public void IndexMessageUpdate(int _index)
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xB140B0", Offset = "0xB140B0", VA = "0xB140B0")]
		public LocalDebugMessage()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class RewardDebuggerManager : MonoBehaviour, IResourceLoadHandler<RewardInteractable>, IResourceLoadHandler
	{
		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ArmamentAugment> rewardPool;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RewardInteractable curReward;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ResourceLoadingController resourceLoadingController;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform rewardParent;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent ShowNextRewardEvent;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GlobalEvent ShowPrevRewardEvent;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GlobalEvent HideRewardEvent;

		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private StringGlobalEvent debuggerMessage;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private IntGlobalEvent debuggerIndexMessage;

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rewardIndex;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ArmamentAugment curAugment;

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xB14C18", Offset = "0xB14C18", VA = "0xB14C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xB14E14", Offset = "0xB14E14", VA = "0xB14E14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xB14F24", Offset = "0xB14F24", VA = "0xB14F24")]
		private void ShowNextReward()
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xB150B8", Offset = "0xB150B8", VA = "0xB150B8")]
		private void ShowPrevReward()
		{
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xB1524C", Offset = "0xB1524C", VA = "0xB1524C")]
		private void HideReward()
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xB15050", Offset = "0xB15050", VA = "0xB15050")]
		private int GetNextIndex(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xB151E4", Offset = "0xB151E4", VA = "0xB151E4")]
		private int GetPrevIndex(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xB15328", Offset = "0xB15328", VA = "0xB15328", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xB15584", Offset = "0xB15584", VA = "0xB15584")]
		public RewardDebuggerManager()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class TutorialDebugger : MonoBehaviour
	{
		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAF64", Offset = "0x8CAF64")]
		[SerializeField]
		private PopupUIAssetGlobalEvent popupUIAssetEvent;

		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAFB0", Offset = "0x8CAFB0")]
		[SerializeField]
		private PopupUIAssetGlobalEvent hidePopupUIAssetEvent;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CAFFC", Offset = "0x8CAFFC")]
		[SerializeField]
		private List<PopupUIAsset> UIEleList;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text debuggerIndexMessage;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TutorialDebuggerManager _parent;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int curIndex;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isShowing;

		[Token(Token = "0x17000279")]
		public bool IsShowing
		{
			[Token(Token = "0x60012BB")]
			[Address(RVA = "0xB15608", Offset = "0xB15608", VA = "0xB15608")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xB15610", Offset = "0xB15610", VA = "0xB15610")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xB15694", Offset = "0xB15694", VA = "0xB15694")]
		private int GetNext(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xB156FC", Offset = "0xB156FC", VA = "0xB156FC")]
		private int GetPrev(int _index)
		{
			return default(int);
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xB15764", Offset = "0xB15764", VA = "0xB15764")]
		public void ShowNextUI()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xB1596C", Offset = "0xB1596C", VA = "0xB1596C")]
		public void ShowPrevUI()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xB15AD4", Offset = "0xB15AD4", VA = "0xB15AD4")]
		public void DisableUI()
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xB158CC", Offset = "0xB158CC", VA = "0xB158CC")]
		private void UpdateParent()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xB15C44", Offset = "0xB15C44", VA = "0xB15C44")]
		public TutorialDebugger()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class TutorialDebuggerManager : MonoBehaviour
	{
		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<TutorialDebugger> debuggers;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TutorialDebugger activeDebugger;

		[Token(Token = "0x1700027A")]
		public TutorialDebugger ActiveDebugger
		{
			[Token(Token = "0x60012C4")]
			[Address(RVA = "0xB15CC0", Offset = "0xB15CC0", VA = "0xB15CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xB15BA4", Offset = "0xB15BA4", VA = "0xB15BA4")]
		public void CloseActive()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xB15CC8", Offset = "0xB15CC8", VA = "0xB15CC8")]
		public void UpdateActive(TutorialDebugger childDebugger)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xB15CD0", Offset = "0xB15CD0", VA = "0xB15CD0")]
		public TutorialDebuggerManager()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class LanguageSelectController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		private struct ToggleToBools
		{
			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_Text languageName;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public BoolVariableToggle languageToggle;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BoolVariable variable;

			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LanguageKey languageKey;
		}

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LanguageKeyVariable _currentLanguage;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariableToggle subtitleToggle;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool isFTUE;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ToggleToBools[] _toggleToBools;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject subtitlePreview;

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xB12F68", Offset = "0xB12F68", VA = "0xB12F68")]
		private void Start()
		{
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xB12FF0", Offset = "0xB12FF0", VA = "0xB12FF0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xB131B4", Offset = "0xB131B4", VA = "0xB131B4")]
		public void SubtitleToggle(bool enable)
		{
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xB131D4", Offset = "0xB131D4", VA = "0xB131D4")]
		public void MakeLanguageGuess()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xB132E0", Offset = "0xB132E0", VA = "0xB132E0")]
		public void SetEnglish(bool enable)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xB133B0", Offset = "0xB133B0", VA = "0xB133B0")]
		public void SetSpanish(bool enable)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xB13488", Offset = "0xB13488", VA = "0xB13488")]
		public void SetFrench(bool enable)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xB13560", Offset = "0xB13560", VA = "0xB13560")]
		public void SetGerman(bool enable)
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xB13638", Offset = "0xB13638", VA = "0xB13638")]
		public void SetItalian(bool enable)
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xB13710", Offset = "0xB13710", VA = "0xB13710")]
		public void SetJapanese(bool enable)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xB137E8", Offset = "0xB137E8", VA = "0xB137E8")]
		public void SetKorean(bool enable)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xB138C0", Offset = "0xB138C0", VA = "0xB138C0")]
		public void SetChineseS(bool enable)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xB13998", Offset = "0xB13998", VA = "0xB13998")]
		public void SetChineseT(bool enable)
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xB13C08", Offset = "0xB13C08", VA = "0xB13C08")]
		public void SetLoremIpsum(bool enable)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xB13B34", Offset = "0xB13B34", VA = "0xB13B34")]
		private void TurnOffLanguages(int indexToLeaveOn)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xB13000", Offset = "0xB13000", VA = "0xB13000")]
		private void SetStartingLanguage()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xB13CFC", Offset = "0xB13CFC", VA = "0xB13CFC")]
		private LanguageKey GetCurrentLanguage()
		{
			return null;
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xB13A70", Offset = "0xB13A70", VA = "0xB13A70")]
		private void SwitchCurrentLanguage(LanguageKey newLanguage)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xB13DB8", Offset = "0xB13DB8", VA = "0xB13DB8")]
		public void UpdateCurrentLanguage()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xB13D20", Offset = "0xB13D20", VA = "0xB13D20")]
		private void DisablePreview()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xB13E60", Offset = "0xB13E60", VA = "0xB13E60")]
		public LanguageSelectController()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A36EC", Offset = "0x8A36EC")]
	public class LocalizedTextFormatKeyMap : TextFormatKeyMap
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public struct UserStringKeyPair
		{
			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TextFormatKey TextFormatKey;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public UserString Text;
		}

		[Serializable]
		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB16C", Offset = "0x8AB16C")]
		private sealed class <>c
		{
			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__5_0;

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xB14B88", Offset = "0xB14B88", VA = "0xB14B88")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D62")]
			[Address(RVA = "0xB14B90", Offset = "0xB14B90", VA = "0xB14B90")]
			internal void <.ctor>b__5_0(object input)
			{
			}
		}

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private QuickButton _convertData;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected UserStringKeyPair[] _localizedKeyMap;

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xB14390", Offset = "0xB14390", VA = "0xB14390")]
		private void DoConvertData()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xB14584", Offset = "0xB14584", VA = "0xB14584", Slot = "4")]
		public override string[] GetKeys(TextFormatKey[] keys)
		{
			return null;
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xB149DC", Offset = "0xB149DC", VA = "0xB149DC")]
		public LocalizedTextFormatKeyMap()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	public abstract class UserStringComponent : MonoBehaviour
	{
		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected UserString content;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool ignoreTextSizeOverwrite;

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xB15D4C", Offset = "0xB15D4C", VA = "0xB15D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xB15E3C", Offset = "0xB15E3C", VA = "0xB15E3C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xB15F1C", Offset = "0xB15F1C", VA = "0xB15F1C", Slot = "4")]
		protected virtual void RefreshText()
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xB160F8", Offset = "0xB160F8", VA = "0xB160F8")]
		public void AssignTextKey(TextKey key)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xB16114", Offset = "0xB16114", VA = "0xB16114", Slot = "5")]
		protected virtual string RemoveSizeTags(string text)
		{
			return null;
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xB161CC", Offset = "0xB161CC", VA = "0xB161CC")]
		protected UserStringComponent()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A374C", Offset = "0x8A374C")]
	public class UserStringComponent_TM : UserStringComponent
	{
		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMesh _textMesh;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextAlignment defaultTextAlignment;

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xB161D4", Offset = "0xB161D4", VA = "0xB161D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xB16250", Offset = "0xB16250", VA = "0xB16250")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xB16304", Offset = "0xB16304", VA = "0xB16304", Slot = "4")]
		protected override void RefreshText()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xB163BC", Offset = "0xB163BC", VA = "0xB163BC")]
		public UserStringComponent_TM()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A37B0", Offset = "0x8A37B0")]
	public class UserStringComponent_TMP : UserStringComponent
	{
		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro _textMeshPro;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_FontAsset defaultFont;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextAlignmentOptions defaultTextAlignment;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material defaultMaterial;

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xB163C4", Offset = "0xB163C4", VA = "0xB163C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xB16474", Offset = "0xB16474", VA = "0xB16474")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xB1651C", Offset = "0xB1651C", VA = "0xB1651C", Slot = "4")]
		protected override void RefreshText()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xB166F4", Offset = "0xB166F4", VA = "0xB166F4")]
		public UserStringComponent_TMP()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A3814", Offset = "0x8A3814")]
	public class UserStringComponent_TMPUgui : UserStringComponent
	{
		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI _textMeshProUgui;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TMP_FontAsset defaultFont;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextAlignmentOptions defaultTextAlignment;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material defaultMaterial;

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xB166FC", Offset = "0xB166FC", VA = "0xB166FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xB167AC", Offset = "0xB167AC", VA = "0xB167AC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xB16854", Offset = "0xB16854", VA = "0xB16854", Slot = "4")]
		protected override void RefreshText()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xB16A74", Offset = "0xB16A74", VA = "0xB16A74")]
		public UserStringComponent_TMPUgui()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class LocalizeHelper : MonoBehaviour
	{
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool StartHelp;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool Enable;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Transform> testList;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xB140B8", Offset = "0xB140B8", VA = "0xB140B8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xB14158", Offset = "0xB14158", VA = "0xB14158")]
		private void FindChildWithTMP(Transform parent)
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xB14314", Offset = "0xB14314", VA = "0xB14314")]
		public LocalizeHelper()
		{
		}
	}
}
namespace SG.Claymore.Combat
{
	[Token(Token = "0x20002D6")]
	public class AttackTimelinePlayer : EnemyComponent
	{
		[Token(Token = "0x2000522")]
		private class RuntimeStartAnimation : RuntimeClaymoreClip
		{
			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Animator animator;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int triggerHash;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float animationSpeed;

			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xB78100", Offset = "0xB78100", VA = "0xB78100")]
			public RuntimeStartAnimation(Animator animator, int triggerHash, float executionTime, float animationSpeed)
			{
			}

			[Token(Token = "0x6001D64")]
			[Address(RVA = "0xB78614", Offset = "0xB78614", VA = "0xB78614", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x2000523")]
		private class RuntimeSequenceCompleted : RuntimeClaymoreClip
		{
			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AttackSequence attack;

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xB78164", Offset = "0xB78164", VA = "0xB78164")]
			public RuntimeSequenceCompleted(AttackSequence attack, float executionTime, Targetable target)
			{
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xB78560", Offset = "0xB78560", VA = "0xB78560", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB17C", Offset = "0x8AB17C")]
		private sealed class <>c__DisplayClass22_0
		{
			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float additionalTime;

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xB77F78", Offset = "0xB77F78", VA = "0xB77F78")]
			public <>c__DisplayClass22_0()
			{
			}

			[Token(Token = "0x6001D68")]
			[Address(RVA = "0xB7853C", Offset = "0xB7853C", VA = "0xB7853C")]
			internal void <PlayAttackSequence>b__0(RuntimeClaymoreClip rcc)
			{
			}
		}

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RandomTimeBoxVariable GlobalCritCooldown;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EnemyGlobalEvent OnEnemyStartAttackSequence;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool HideCrits;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<CritCooldownBinding> CritCooldowns;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<RuntimeClaymoreClip> runningClips;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RuntimeClaymoreClip> newClips;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int attackSpeedParameterHash;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<AttackSequence, Action<bool>> onAttackFinishedMap;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastCooldownCheckTime;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Dictionary<CritType, bool> critOffCooldown;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RandomTimeBoxVariable instancedGlobalCritCooldown;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Targetable currentTarget;

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xB770D0", Offset = "0xB770D0", VA = "0xB770D0", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xB771D4", Offset = "0xB771D4", VA = "0xB771D4", Slot = "4")]
		public override void OnEnemyReady(Enemy enemy)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xB774E4", Offset = "0xB774E4", VA = "0xB774E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xB775E0", Offset = "0xB775E0", VA = "0xB775E0")]
		private void OnTargetChanged(Targetable newTarget)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xB775E8", Offset = "0xB775E8", VA = "0xB775E8")]
		public float GetInstancedValue(FloatReference reference)
		{
			return default(float);
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xB776A0", Offset = "0xB776A0", VA = "0xB776A0")]
		public float GetInstancedValue(FloatVariable variable)
		{
			return default(float);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xB7771C", Offset = "0xB7771C", VA = "0xB7771C")]
		public bool CritTypeOffCooldown(CritType type, float currentTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xB7789C", Offset = "0xB7789C", VA = "0xB7789C")]
		public void ResetCritCooldowns(CritType spawnedCrit)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xB77B30", Offset = "0xB77B30", VA = "0xB77B30")]
		public void PlayAttackSequence(AttackSequence attackSequence, [Optional] Action<bool> onAttackFinished)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xB781B0", Offset = "0xB781B0", VA = "0xB781B0")]
		public void CancelRunningAttacks()
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xB783F0", Offset = "0xB783F0", VA = "0xB783F0")]
		public AttackTimelinePlayer()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public class EngagementSpace : MonoBehaviour
	{
		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform PlayerTransform;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform EnemyTransform;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string EnemyName;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int ActivePremonitions;

		[Token(Token = "0x1700027B")]
		public Vector3 Forward
		{
			[Token(Token = "0x6001300")]
			[Address(RVA = "0xCBF848", Offset = "0xCBF848", VA = "0xCBF848")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xCBF86C", Offset = "0xCBF86C", VA = "0xCBF86C")]
		public void ForceUpdate()
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xCBF870", Offset = "0xCBF870", VA = "0xCBF870")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xCBFAB8", Offset = "0xCBFAB8", VA = "0xCBFAB8")]
		public EngagementSpace()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class GroundAttackPremonitionDrawingData : RendererDrawingData
	{
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Matrix4x4[] Matrices;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float[] Alpha;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly float[] Scale;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float[] FillScale;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly Vector4[] FillColor;

		[NonSerialized]
		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int _maxInstances;

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xCC178C", Offset = "0xCC178C", VA = "0xCC178C")]
		public GroundAttackPremonitionDrawingData(int MAX)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xCC48F8", Offset = "0xCC48F8", VA = "0xCC48F8", Slot = "4")]
		public override void Append(RendererDrawingData other, int count)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	public abstract class GroundPremonitionRenderer : ScriptableObject
	{
		[Token(Token = "0x6001306")]
		public abstract void AppendDrawingData(ref RendererDrawingData rendererDrawingData, GroundAttackGroup groundAttackGroup);

		[Token(Token = "0x6001307")]
		public abstract void Draw(RendererDrawingData rendererDrawingData, MaterialPropertyBlock propertyBlock);

		[Token(Token = "0x6001308")]
		public abstract RendererDrawingData GetDrawingData(int instanceCount);

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xCC4B7C", Offset = "0xCC4B7C", VA = "0xCC4B7C")]
		protected GroundPremonitionRenderer()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3878", Offset = "0x8A3878")]
	public class GroundPremonitionRendererHQ : GroundPremonitionRenderer
	{
		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB168", Offset = "0x8CB168")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB1C4", Offset = "0x8CB1C4")]
		[SerializeField]
		private MaterialPropertyReference _alphaParam;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB210", Offset = "0x8CB210")]
		[SerializeField]
		private MaterialPropertyReference _scaleParam;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB25C", Offset = "0x8CB25C")]
		[SerializeField]
		private MaterialPropertyReference _fillScaleParam;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB2A8", Offset = "0x8CB2A8")]
		[SerializeField]
		private MaterialPropertyReference _fillColorParam;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB2F4", Offset = "0x8CB2F4")]
		[SerializeField]
		private AnimationCurve _alphaCurveShow;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Gradient _fillColorShow;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB350", Offset = "0x8CB350")]
		[SerializeField]
		private float _hideAnimationDuration;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _alphaCurveHide;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Gradient _fillColorHide;

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xCC4B84", Offset = "0xCC4B84", VA = "0xCC4B84", Slot = "4")]
		public override void AppendDrawingData(ref RendererDrawingData rendererDrawingData, GroundAttackGroup groundAttackGroup)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xCC5080", Offset = "0xCC5080", VA = "0xCC5080", Slot = "5")]
		public override void Draw(RendererDrawingData rendererDrawingData, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xCC51EC", Offset = "0xCC51EC", VA = "0xCC51EC", Slot = "6")]
		public override RendererDrawingData GetDrawingData(int instanceCount)
		{
			return null;
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xCC524C", Offset = "0xCC524C", VA = "0xCC524C")]
		public GroundPremonitionRendererHQ()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A38D8", Offset = "0x8A38D8")]
	public class GroundPremonitionRendererLQ : GroundPremonitionRenderer
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB3BC", Offset = "0x8CB3BC")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB418", Offset = "0x8CB418")]
		[SerializeField]
		private MaterialPropertyReference _alphaParam;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB464", Offset = "0x8CB464")]
		[SerializeField]
		private MaterialPropertyReference _scaleParam;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB4B0", Offset = "0x8CB4B0")]
		[SerializeField]
		private MaterialPropertyReference _fillScaleParam;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CB4FC", Offset = "0x8CB4FC")]
		[SerializeField]
		private MaterialPropertyReference _fillColorParam;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB548", Offset = "0x8CB548")]
		[SerializeField]
		private AnimationCurve _alphaCurveShow;

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Gradient _fillColorShow;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB5A4", Offset = "0x8CB5A4")]
		[SerializeField]
		private float _hideAnimationDuration;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _alphaCurveHide;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Gradient _fillColorHide;

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xCC53C4", Offset = "0xCC53C4", VA = "0xCC53C4", Slot = "4")]
		public override void AppendDrawingData(ref RendererDrawingData rendererDrawingData, GroundAttackGroup groundAttackGroup)
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xCC589C", Offset = "0xCC589C", VA = "0xCC589C", Slot = "5")]
		public override void Draw(RendererDrawingData rendererDrawingData, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xCC5A08", Offset = "0xCC5A08", VA = "0xCC5A08", Slot = "6")]
		public override RendererDrawingData GetDrawingData(int instanceCount)
		{
			return null;
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xCC5A68", Offset = "0xCC5A68", VA = "0xCC5A68")]
		public GroundPremonitionRendererLQ()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class GroundSpikeDrawingData : RendererDrawingData
	{
		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly Matrix4x4[] Matrices;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float[] GlowRange;

		[NonSerialized]
		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int _maxInstances;

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xCC188C", Offset = "0xCC188C", VA = "0xCC188C")]
		public GroundSpikeDrawingData(int MAX)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xCC5BE0", Offset = "0xCC5BE0", VA = "0xCC5BE0", Slot = "4")]
		public override void Append(RendererDrawingData other, int count)
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public interface IOffscreenIndicator
	{
		[Token(Token = "0x1700027C")]
		bool IsActive
		{
			[Token(Token = "0x6001314")]
			get;
		}

		[Token(Token = "0x1700027D")]
		float StartTime
		{
			[Token(Token = "0x6001315")]
			get;
		}

		[Token(Token = "0x1700027E")]
		float Duration
		{
			[Token(Token = "0x6001316")]
			get;
		}

		[Token(Token = "0x1700027F")]
		Vector3 Position
		{
			[Token(Token = "0x6001317")]
			get;
		}

		[Token(Token = "0x17000280")]
		bool CheckSideAngle
		{
			[Token(Token = "0x6001318")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x20002DE")]
	public struct RandomTimeBox
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x6001319")]
		[Address(RVA = "0x968018", Offset = "0x968018", VA = "0x968018")]
		public RandomTimeBox(float min, float max)
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0x968020", Offset = "0x968020", VA = "0x968020")]
		public float GetRandomValue()
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x20002DF")]
	public class TargetAngle
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Angle;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Leeway;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float GenerousLeeway;

		[Token(Token = "0x17000281")]
		public float MinAngle
		{
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xCC5E04", Offset = "0xCC5E04", VA = "0xCC5E04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000282")]
		public float MaxAngle
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xCC5E10", Offset = "0xCC5E10", VA = "0xCC5E10")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xCBB2B4", Offset = "0xCBB2B4", VA = "0xCBB2B4")]
		public TargetAngle(float angle = 0f, float leeway = 20f)
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xCC5E1C", Offset = "0xCC5E1C", VA = "0xCC5E1C")]
		public bool IsValidAngle(float a)
		{
			return default(bool);
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xCC5E70", Offset = "0xCC5E70", VA = "0xCC5E70")]
		private bool CheckValidity(float a)
		{
			return default(bool);
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xCC5F08", Offset = "0xCC5F08", VA = "0xCC5F08")]
		public Vector3 ToVector([Optional] Transform relativeTo, bool invert = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xCC5F1C", Offset = "0xCC5F1C", VA = "0xCC5F1C")]
		public static Vector3 GetAngleVector(float angle, [Optional] Transform relativeTo, bool invert = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xCC6048", Offset = "0xCC6048", VA = "0xCC6048", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	public static class TargetAngleExtensions
	{
		[Token(Token = "0x6001323")]
		[Address(RVA = "0xCBCE74", Offset = "0xCBCE74", VA = "0xCBCE74")]
		public static float Normalize180(this float angle)
		{
			return default(float);
		}
	}
}
namespace SG.Claymore.Combat.Timeline
{
	[Serializable]
	[Token(Token = "0x20002E1")]
	public class AnimationAttackBinding
	{
		[Token(Token = "0x4001340")]
		public const string TRIGGER_PREFIX = "~attack_";

		[Token(Token = "0x4001341")]
		public const string SPEED_PARAMETER = "~animation_speed";

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationClip Clip;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AttackTimeline Timeline;

		[Token(Token = "0x17000283")]
		public string TriggerParameter
		{
			[Token(Token = "0x6001324")]
			[Address(RVA = "0xCC60E4", Offset = "0xCC60E4", VA = "0xCC60E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xCC6164", Offset = "0xCC6164", VA = "0xCC6164")]
		public AnimationAttackBinding(AnimationClip clip, AttackTimeline timeline)
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xCC60EC", Offset = "0xCC60EC", VA = "0xCC60EC")]
		public static string GetTriggerName(AnimationClip clip)
		{
			return null;
		}
	}
	[Token(Token = "0x20002E2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3948", Offset = "0x8A3948")]
	public class AttackTimeline : TimelineAsset
	{
		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string AnimationTriggerName;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public int AnimationTriggerHash;

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xCC61B4", Offset = "0xCC61B4", VA = "0xCC61B4")]
		public void Initialize(AnimationClip clip, PlayableDirector director, Animator animator)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xCC6328", Offset = "0xCC6328", VA = "0xCC6328")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xCC63B8", Offset = "0xCC63B8", VA = "0xCC63B8")]
		public bool AttackContainsPoint(Vector3 point, Vector3 forward, Vector3 arcCenter)
		{
			return default(bool);
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xCC6928", Offset = "0xCC6928", VA = "0xCC6928")]
		public float AddRuntimeClips(AttackTimelinePlayer timelinePlayer, List<RuntimeClaymoreClip> runtimeClips, float timeOffset, float speedScalar, float scaledPremonitionDuration)
		{
			return default(float);
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xCC6DD8", Offset = "0xCC6DD8", VA = "0xCC6DD8")]
		public AttackTimeline()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public static class TimelineHelpers
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0xCC76A8", Offset = "0xCC76A8", VA = "0xCC76A8")]
		public static List<AnimationTrack> GetAnimationTracks(this TimelineAsset timeline)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		public static T GetTrack<T>(this TimelineAsset timeline) where T : TrackAsset
		{
			return null;
		}
	}
	[Token(Token = "0x20002E4")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8A39B8", Offset = "0x8A39B8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A39B8", Offset = "0x8A39B8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A39B8", Offset = "0x8A39B8")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A39B8", Offset = "0x8A39B8")]
	public class AttackTrack : ClaymoreCustomTrack
	{
		[Token(Token = "0x600132E")]
		[Address(RVA = "0xCC6DE0", Offset = "0xCC6DE0", VA = "0xCC6DE0")]
		public AttackTrack()
		{
		}
	}
	[Token(Token = "0x20002E5")]
	public abstract class ClaymoreCustomClip : PlayableAsset
	{
		[Token(Token = "0x17000284")]
		public abstract int NumRuntimeClips
		{
			[Token(Token = "0x6001331")]
			get;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xCC6E4C", Offset = "0xCC6E4C", VA = "0xCC6E4C", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x6001330")]
		public abstract string GetStringRepresentation(ClipBindingInfo clipInfo);

		[Token(Token = "0x6001332")]
		public abstract RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex);

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xCC6EC8", Offset = "0xCC6EC8", VA = "0xCC6EC8", Slot = "12")]
		public virtual void OnAfterInsert()
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xCBBF34", Offset = "0xCBBF34", VA = "0xCBBF34")]
		protected ClaymoreCustomClip()
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public struct RuntimeContext
	{
		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float SpeedScalar;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ScaledStartTime;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ScaledEndTime;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ScaledDuration;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ScaledPremonitionDuration;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AttackTimelinePlayer TimelinePlayer;

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x96809C", Offset = "0x96809C", VA = "0x96809C")]
		public RuntimeContext(float speedScalar, float scaledStartTime, float scaledEndTime, float scaledPremonitionDuration, AttackTimelinePlayer timelinePlayer)
		{
		}
	}
	[Token(Token = "0x20002E7")]
	public abstract class RuntimeClaymoreClip
	{
		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ContextStartTime;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ContextEndTime;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float ExecutionTime;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Duration;

		[Token(Token = "0x17000285")]
		public float EndTime
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xCC7574", Offset = "0xCC7574", VA = "0xCC7574")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001337")]
		public abstract void Execute(AttackTimelinePlayer timelinePlayer);

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xCC7580", Offset = "0xCC7580", VA = "0xCC7580")]
		public static int CompareTime(RuntimeClaymoreClip lhs, RuntimeClaymoreClip rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xCBC0D0", Offset = "0xCBC0D0", VA = "0xCBC0D0")]
		protected RuntimeClaymoreClip()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class RuntimeClipIndexException : Exception
	{
		[Token(Token = "0x600133A")]
		[Address(RVA = "0xCC75BC", Offset = "0xCC75BC", VA = "0xCC75BC")]
		public RuntimeClipIndexException()
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xCBBD5C", Offset = "0xCBBD5C", VA = "0xCBBD5C")]
		public RuntimeClipIndexException(string message)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xCC7624", Offset = "0xCC7624", VA = "0xCC7624")]
		public RuntimeClipIndexException(string message, Exception inner)
		{
		}
	}
	[Token(Token = "0x20002E9")]
	public abstract class ClaymoreCustomTrack : TrackAsset
	{
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB18C", Offset = "0x8AB18C")]
		private sealed class <GetClipBindings>d__0 : IEnumerable<ClipBindingInfo>, IEnumerable, IEnumerator<ClipBindingInfo>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ClipBindingInfo <>2__current;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ClaymoreCustomTrack <>4__this;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<TimelineClip> <>7__wrap1;

			[Token(Token = "0x1700047F")]
			private ClipBindingInfo System.Collections.Generic.IEnumerator<SG.Claymore.Combat.Timeline.ClipBindingInfo>.Current
			{
				[Token(Token = "0x6001D6D")]
				[Address(RVA = "0xCC73D8", Offset = "0xCC73D8", VA = "0xCC73D8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000480")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6F")]
				[Address(RVA = "0xCC7440", Offset = "0xCC7440", VA = "0xCC7440", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xCC6F58", Offset = "0xCC6F58", VA = "0xCC6F58")]
			[DebuggerHidden]
			public <GetClipBindings>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6A")]
			[Address(RVA = "0xCC6F90", Offset = "0xCC6F90", VA = "0xCC6F90", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xCC706C", Offset = "0xCC706C", VA = "0xCC706C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xCC6FAC", Offset = "0xCC6FAC", VA = "0xCC6FAC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xCC73E0", Offset = "0xCC73E0", VA = "0xCC73E0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6001D70")]
			[Address(RVA = "0xCC7448", Offset = "0xCC7448", VA = "0xCC7448", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<ClipBindingInfo> System.Collections.Generic.IEnumerable<SG.Claymore.Combat.Timeline.ClipBindingInfo>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xCC74FC", Offset = "0xCC74FC", VA = "0xCC74FC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xCC6ECC", Offset = "0xCC6ECC", VA = "0xCC6ECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2208", Offset = "0x8E2208")]
		public IEnumerable<ClipBindingInfo> GetClipBindings()
		{
			return null;
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xCC6DE4", Offset = "0xCC6DE4", VA = "0xCC6DE4")]
		protected ClaymoreCustomTrack()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public class ClipBindingInfo
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly double StartTime;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly double EndTime;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly ClaymoreCustomClip ClipAsset;

		[Token(Token = "0x17000286")]
		public double Duration
		{
			[Token(Token = "0x600133F")]
			[Address(RVA = "0xCC7500", Offset = "0xCC7500", VA = "0xCC7500")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xCC7378", Offset = "0xCC7378", VA = "0xCC7378")]
		public ClipBindingInfo(ClaymoreCustomClip clipAsset, TimelineClip clip)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xCC750C", Offset = "0xCC750C", VA = "0xCC750C")]
		public static int CompareTime(ClipBindingInfo lhs, ClipBindingInfo rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xCC7548", Offset = "0xCC7548", VA = "0xCC7548", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8A3A94", Offset = "0x8A3A94")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A3A94", Offset = "0x8A3A94")]
	public class CritPointTrack : ClaymoreCustomTrack
	{
		[Token(Token = "0x6001343")]
		[Address(RVA = "0xCC756C", Offset = "0xCC756C", VA = "0xCC756C")]
		public CritPointTrack()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8A3B20", Offset = "0x8A3B20")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A3B20", Offset = "0x8A3B20")]
	public class MotionControlTrack : ClaymoreCustomTrack
	{
		[Token(Token = "0x6001344")]
		[Address(RVA = "0xCC7570", Offset = "0xCC7570", VA = "0xCC7570")]
		public MotionControlTrack()
		{
		}
	}
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8A3BAC", Offset = "0x8A3BAC")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8A3BAC", Offset = "0x8A3BAC")]
	public class SampleDodgeTrack : ClaymoreCustomTrack
	{
		[Token(Token = "0x6001345")]
		[Address(RVA = "0xCC76A4", Offset = "0xCC76A4", VA = "0xCC76A4")]
		public SampleDodgeTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002EE")]
	public class TransitionSettings
	{
		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasExitTime;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ExitTime;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool FixedDuration;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float TransitionDuration;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int InterruptionSource;

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xCC7800", Offset = "0xCC7800", VA = "0xCC7800")]
		public TransitionSettings(bool hasExitTime)
		{
		}
	}
}
namespace SG.Claymore.Combat.GroundAttack
{
	[Token(Token = "0x20002EF")]
	public class GroundAttack : MonoBehaviour, IOffscreenIndicator
	{
		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CB640", Offset = "0x8CB640")]
		[SerializeField]
		private float _telegraphTime;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB68C", Offset = "0x8CB68C")]
		[SerializeField]
		private AudioKeyData _onSpawnSFXKey;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioKeyData _onSpikeSpawnSFXKey;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData _onPremonitionShowSFXKey;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioKeyData _onPlayerHitSFXKey;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB708", Offset = "0x8CB708")]
		[SerializeField]
		private VisualKeyData _hitVFXKey;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private VisualKeyData _premonitionSparkleVFXKey;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB764", Offset = "0x8CB764")]
		[SerializeField]
		private CameraShakeRequestAsset _onPlayerHitCameraShake;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ScreenFlashRequestAsset _onPlayerHitScreenFlash;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CameraShakeRequestAsset _premonitionCameraShake;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB7D0", Offset = "0x8CB7D0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CB7D0", Offset = "0x8CB7D0")]
		[SerializeField]
		private AnimationCurve _premonitionHapticsStrength;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _hapticsSpeed;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private GroundAttackDefinition _currentDefinition;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _checkedPlayerHit;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float _elapsedTime;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private bool _isActive;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
		private bool _isShowingPremonition;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float _timePremonitionStarted;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _timePremonitionEnded;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _premonitionDuration;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float _hitTime;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private bool _isHittingPlayer;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x125")]
		private bool _isHittingPlayerLast;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x126")]
		private bool _spikesInitialized;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private float _startTime;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float _hapticsCounterTime;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _startDelay;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool _hapticsStopped;

		[NonSerialized]
		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private ManualParticleEffectRuntime _premonitionSparkleRuntime;

		[NonSerialized]
		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private GroundAttackGroup _currentGroup;

		[Token(Token = "0x17000287")]
		public bool IsShowingPremonition
		{
			[Token(Token = "0x6001347")]
			[Address(RVA = "0xCBFB24", Offset = "0xCBFB24", VA = "0xCBFB24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000288")]
		public float TimePremonitionStarted
		{
			[Token(Token = "0x6001348")]
			[Address(RVA = "0xCBFB2C", Offset = "0xCBFB2C", VA = "0xCBFB2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000289")]
		public float TimePremonitionEnded
		{
			[Token(Token = "0x6001349")]
			[Address(RVA = "0xCBFB34", Offset = "0xCBFB34", VA = "0xCBFB34")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028A")]
		public float PremonitionDuration
		{
			[Token(Token = "0x600134A")]
			[Address(RVA = "0xCBFB3C", Offset = "0xCBFB3C", VA = "0xCBFB3C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028B")]
		public GroundAttackGroup CurrentGroup
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0xCBFB4C", Offset = "0xCBFB4C", VA = "0xCBFB4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		public bool IsActive
		{
			[Token(Token = "0x600134C")]
			[Address(RVA = "0xCBFB54", Offset = "0xCBFB54", VA = "0xCBFB54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028D")]
		private bool SG.Claymore.Combat.IOffscreenIndicator.IsActive
		{
			[Token(Token = "0x600134D")]
			[Address(RVA = "0xCBFB5C", Offset = "0xCBFB5C", VA = "0xCBFB5C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028E")]
		private float SG.Claymore.Combat.IOffscreenIndicator.StartTime
		{
			[Token(Token = "0x600134E")]
			[Address(RVA = "0xCBFB84", Offset = "0xCBFB84", VA = "0xCBFB84", Slot = "5")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028F")]
		private float SG.Claymore.Combat.IOffscreenIndicator.Duration
		{
			[Token(Token = "0x600134F")]
			[Address(RVA = "0xCBFB94", Offset = "0xCBFB94", VA = "0xCBFB94", Slot = "6")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000290")]
		private Vector3 SG.Claymore.Combat.IOffscreenIndicator.Position
		{
			[Token(Token = "0x6001350")]
			[Address(RVA = "0xCBFB9C", Offset = "0xCBFB9C", VA = "0xCBFB9C", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000291")]
		private bool SG.Claymore.Combat.IOffscreenIndicator.CheckSideAngle
		{
			[Token(Token = "0x6001351")]
			[Address(RVA = "0xCBFBC0", Offset = "0xCBFBC0", VA = "0xCBFBC0", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xCBFBC8", Offset = "0xCBFBC8", VA = "0xCBFBC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xCBFBD0", Offset = "0xCBFBD0", VA = "0xCBFBD0")]
		public void Initialize(GroundAttackDefinition definition)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xCC0000", Offset = "0xCC0000", VA = "0xCC0000")]
		public void DoUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xCC10B8", Offset = "0xCC10B8", VA = "0xCC10B8")]
		private void OnHitVFXPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xCC11EC", Offset = "0xCC11EC", VA = "0xCC11EC")]
		private void OnSparkleVFXPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xCC08C4", Offset = "0xCC08C4", VA = "0xCC08C4")]
		private void DoPremonitionHaptics(bool active, float elapsedTime)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xCC09A0", Offset = "0xCC09A0", VA = "0xCC09A0")]
		private void DoCameraShakePremonition(bool active)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xCC0740", Offset = "0xCC0740", VA = "0xCC0740")]
		private bool CheckPlayerHit()
		{
			return default(bool);
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xCC0BC0", Offset = "0xCC0BC0", VA = "0xCC0BC0")]
		private void DoPlayerDamage()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xCC12A0", Offset = "0xCC12A0", VA = "0xCC12A0")]
		private void DestroyItself()
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xCC143C", Offset = "0xCC143C", VA = "0xCC143C")]
		public void Recycle()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xCC1464", Offset = "0xCC1464", VA = "0xCC1464")]
		public bool TryCancel()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xCC0F8C", Offset = "0xCC0F8C", VA = "0xCC0F8C")]
		private void Deactivate(bool unregister)
		{
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xCC1490", Offset = "0xCC1490", VA = "0xCC1490")]
		public GroundAttack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F0")]
	public struct GroundAttackDefinition
	{
		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Enemy EnemyCaster;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Position;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion Rotation;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float Damage;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Knockback;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float PremonitionDuration;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float StartDelay;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GroundAttackGroup GroundAttackGroup;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GroundAttackPlayable GroundAttackPlayable;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GroundAttackGroup.AttackData AttackData;
	}
	[Token(Token = "0x20002F1")]
	public class GroundAttackGroup : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000526")]
		public struct AttackData
		{
			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DD970", Offset = "0x8DD970")]
			public float NormalizedTime;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform SpawnPoint;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GroundAttackSpike[] Spikes;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3[] SpikeOffsets;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3[] SpikeUpDirections;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GroundAttack GroundAttack;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float Radius;
		}

		[Token(Token = "0x4001382")]
		private const float SQRT_12 = 3.4641016f;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Transform> _spawnPoints;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CB850", Offset = "0x8CB850")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CB850", Offset = "0x8CB850")]
		[SerializeField]
		private int _totalSpikes;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _spikeRadius;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _maxSpikeInclination;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AttackData[] _attackDatas;

		[NonSerialized]
		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _isActive;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB8CC", Offset = "0x8CB8CC")]
		[SerializeField]
		private float _maxDistance;

		[NonSerialized]
		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GroundAttackPremonitionDrawingData _premonitionDrawingData;

		[NonSerialized]
		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GroundSpikeDrawingData _spikeDrawingData;

		[NonSerialized]
		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool DrawGizmos;

		[Token(Token = "0x17000292")]
		public AttackData[] AttackDatas
		{
			[Token(Token = "0x6001360")]
			[Address(RVA = "0xCC14AC", Offset = "0xCC14AC", VA = "0xCC14AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		public bool IsActive
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0xCC14B4", Offset = "0xCC14B4", VA = "0xCC14B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000294")]
		public GroundAttackPremonitionDrawingData PremonitionDrawingData
		{
			[Token(Token = "0x6001362")]
			[Address(RVA = "0xCC14BC", Offset = "0xCC14BC", VA = "0xCC14BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		public GroundSpikeDrawingData SpikeDrawingData
		{
			[Token(Token = "0x6001363")]
			[Address(RVA = "0xCC14C4", Offset = "0xCC14C4", VA = "0xCC14C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xCC14CC", Offset = "0xCC14CC", VA = "0xCC14CC")]
		public void Initialize(GroundAttackGroupDefinition groupDefinition)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xCC1930", Offset = "0xCC1930", VA = "0xCC1930")]
		public void DoUpdate()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xCC1A84", Offset = "0xCC1A84", VA = "0xCC1A84")]
		private bool CheckGroupIsActive()
		{
			return default(bool);
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xCC1BCC", Offset = "0xCC1BCC", VA = "0xCC1BCC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E226C", Offset = "0x8E226C")]
		public void CalculateMaxDistance()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xCC1D24", Offset = "0xCC1D24", VA = "0xCC1D24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E22A4", Offset = "0x8E22A4")]
		public void GenerateNormalizedTimeByDistance()
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xCC1EBC", Offset = "0xCC1EBC", VA = "0xCC1EBC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E22DC", Offset = "0x8E22DC")]
		public void GenerateNormalizedTimeByOrder()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xCC1F5C", Offset = "0xCC1F5C", VA = "0xCC1F5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E2314", Offset = "0x8E2314")]
		public void RandomizeSpikes()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xCC1FD8", Offset = "0xCC1FD8", VA = "0xCC1FD8")]
		private void GenerateOffsetData(ref AttackData data)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xCC23D8", Offset = "0xCC23D8", VA = "0xCC23D8")]
		public GroundAttackGroup()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3C38", Offset = "0x8A3C38")]
	public class GroundAttackGroupDefinition : ScriptableObject
	{
		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GroundAttackGroup GroupPrefab;

		[NonSerialized]
		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Enemy EnemyCaster;

		[NonSerialized]
		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float Duration;

		[NonSerialized]
		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float Knockback;

		[NonSerialized]
		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float PremonitionDuration;

		[NonSerialized]
		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float Damage;

		[NonSerialized]
		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 Position;

		[NonSerialized]
		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion Rotation;

		[NonSerialized]
		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GroundAttackPlayable Source;

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xCC2484", Offset = "0xCC2484", VA = "0xCC2484")]
		public GroundAttackGroupDefinition()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3C7C", Offset = "0x8A3C7C")]
	public class GroundAttackHandler : EnemyAttackHandler
	{
		[Token(Token = "0x2000527")]
		private class GroundAttackLoader : IResourceLoadHandler<GroundAttack>, IResourceLoadHandler
		{
			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly GroundAttackHandler _controller;

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xCC2958", Offset = "0xCC2958", VA = "0xCC2958")]
			public GroundAttackLoader(GroundAttackHandler controller)
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xCC36D4", Offset = "0xCC36D4", VA = "0xCC36D4", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x2000528")]
		private class GroundSpikeLoader : IResourceLoadHandler<GroundAttackSpike>, IResourceLoadHandler
		{
			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly GroundAttackHandler _controller;

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xCC298C", Offset = "0xCC298C", VA = "0xCC298C")]
			public GroundSpikeLoader(GroundAttackHandler controller)
			{
			}

			[Token(Token = "0x6001D75")]
			[Address(RVA = "0xCC389C", Offset = "0xCC389C", VA = "0xCC389C", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x2000529")]
		private class GroundPremonitionLoader : IResourceLoadHandler<GroundPremonitionRenderer>, IResourceLoadHandler
		{
			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly GroundAttackHandler _controller;

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xCC29C0", Offset = "0xCC29C0", VA = "0xCC29C0")]
			public GroundPremonitionLoader(GroundAttackHandler controller)
			{
			}

			[Token(Token = "0x6001D77")]
			[Address(RVA = "0xCC37B8", Offset = "0xCC37B8", VA = "0xCC37B8", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x200052A")]
		private class GroundSpikeRendererLoader : IResourceLoadHandler<GroundSpikeRenderer>, IResourceLoadHandler
		{
			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly GroundAttackHandler _controller;

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xCC29F4", Offset = "0xCC29F4", VA = "0xCC29F4")]
			public GroundSpikeRendererLoader(GroundAttackHandler controller)
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xCC3980", Offset = "0xCC3980", VA = "0xCC3980", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x200052B")]
		[Flags]
		private enum LoadedResourcesFlag
		{
			[Token(Token = "0x40021CB")]
			None = 0,
			[Token(Token = "0x40021CC")]
			GroundAttack = 1,
			[Token(Token = "0x40021CD")]
			GroundSpike = 2,
			[Token(Token = "0x40021CE")]
			GroundPremonitionRenderer = 3,
			[Token(Token = "0x40021CF")]
			GroundSpikeRenderer = 4
		}

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB918", Offset = "0x8CB918")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GroundAttackGroupDefinition[] _groupDefinitions;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB974", Offset = "0x8CB974")]
		[SerializeField]
		private int _groundAttackPoolSize;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _spikePoolSize;

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _groupPoolSize;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CB9E0", Offset = "0x8CB9E0")]
		[SerializeField]
		private ResourceRequestKey _groundAttackKey;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ResourceRequestKey _groundSpikeKey;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ResourceRequestKey _groundPremonitionKey;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ResourceRequestKey _groundSpikeRendererKey;

		[NonSerialized]
		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _root;

		[NonSerialized]
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RendererDrawingData _premonitionDrawingData;

		[NonSerialized]
		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RendererDrawingData _spikeDrawingData;

		[NonSerialized]
		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GroundPremonitionRenderer _groundPremonitionRenderer;

		[NonSerialized]
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GroundSpikeRenderer _groundSpikeRenderer;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBA6C", Offset = "0x8CBA6C")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CBA6C", Offset = "0x8CBA6C")]
		[SerializeField]
		private bool _drawGizmos;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float _attackDuration;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float _premonitionDuration;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private GroundAttackGroupDefinition _groundAttackGroupDefinition;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private readonly Dictionary<GroundAttackGroupDefinition, CircularComponentPool<GroundAttackGroup>> _groupPool;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CircularComponentPool<GroundAttack> _groundAttackPool;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private CircularComponentPool<GroundAttackSpike> _spikePool;

		[NonSerialized]
		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private readonly List<GroundAttackGroup> _activeGroups;

		[NonSerialized]
		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private LoadedResourcesFlag _currentLoadedResources;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private readonly LoadedResourcesFlag _allLoadedResourcesCheck;

		[Token(Token = "0x14000033")]
		public event Action<GroundAttackGroup> OnGroundAttackFired
		{
			[Token(Token = "0x600136E")]
			[Address(RVA = "0xCC249C", Offset = "0xCC249C", VA = "0xCC249C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E234C", Offset = "0x8E234C")]
			add
			{
			}
			[Token(Token = "0x600136F")]
			[Address(RVA = "0xCC2540", Offset = "0xCC2540", VA = "0xCC2540")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E235C", Offset = "0x8E235C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xCC25E4", Offset = "0xCC25E4", VA = "0xCC25E4", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xCC2954", Offset = "0xCC2954", VA = "0xCC2954", Slot = "5")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xCC278C", Offset = "0xCC278C", VA = "0xCC278C")]
		private void LoadResources()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xCC2A28", Offset = "0xCC2A28", VA = "0xCC2A28")]
		private void OnGroundAttackLoaded(GroundAttack groundAttack)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xCC2B34", Offset = "0xCC2B34", VA = "0xCC2B34")]
		private void OnGroundSpikeLoaded(GroundAttackSpike groundSpike)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xCC2C3C", Offset = "0xCC2C3C", VA = "0xCC2C3C")]
		private void OnGroundPremonitionLoaded(GroundPremonitionRenderer groundPremonitionRenderer)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xCC2CA0", Offset = "0xCC2CA0", VA = "0xCC2CA0")]
		private void OnGroundSpikeRendererLoaded(GroundSpikeRenderer groundSpikeRenderer)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xCC2D5C", Offset = "0xCC2D5C", VA = "0xCC2D5C", Slot = "6")]
		public override void Draw()
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xCC346C", Offset = "0xCC346C", VA = "0xCC346C", Slot = "7")]
		public override void OnDidFadeOut()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xCBE8A8", Offset = "0xCBE8A8", VA = "0xCBE8A8")]
		public void HandleGroundAttack(GroundAttackGroupDefinition groupDefinition)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xCC35D8", Offset = "0xCC35D8", VA = "0xCC35D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E236C", Offset = "0x8E236C")]
		public void DebugAttack()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xCC3470", Offset = "0xCC3470", VA = "0xCC3470")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E23A4", Offset = "0x8E23A4")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xCC35DC", Offset = "0xCC35DC", VA = "0xCC35DC")]
		public GroundAttackHandler()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class GroundAttackPremonition : MonoBehaviour
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem _mainRing;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem _fillRing;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem[] _particleSystems;

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xCC3A64", Offset = "0xCC3A64", VA = "0xCC3A64")]
		public void SetRadius(float attackRadius, float premonitionDuration)
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xCC3BC0", Offset = "0xCC3BC0", VA = "0xCC3BC0")]
		public void Show(bool isVisible)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xCC3C7C", Offset = "0xCC3C7C", VA = "0xCC3C7C")]
		public GroundAttackPremonition()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public class GroundAttackSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001380")]
		[Address(RVA = "0xCC3C84", Offset = "0xCC3C84", VA = "0xCC3C84")]
		public GroundAttackSpawner()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class GroundAttackSpike : MonoBehaviour
	{
		[Token(Token = "0x40013B3")]
		private const int COLLISION_SIZE = 100;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBB2C", Offset = "0x8CBB2C")]
		[SerializeField]
		private GroundAttackSpikeRegistry _registry;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _visuals;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatRange _scaleRange;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatRange _heightMoveRange;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _moveTime;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatRange _timeoutRange;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CBBC8", Offset = "0x8CBBC8")]
		[SerializeField]
		private Vector3 _inactivePos;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CBC04", Offset = "0x8CBC04")]
		[SerializeField]
		private Vector3 _activePos;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBC40", Offset = "0x8CBC40")]
		[SerializeField]
		private LayerMask _placementCheckLayerMask;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private LayerMask _obstacleLayerMask;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _pointA;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _pointB;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _radius;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CapsuleCollider _collider;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBCDC", Offset = "0x8CBCDC")]
		[SerializeField]
		private float _shardRecycleTime;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBD28", Offset = "0x8CBD28")]
		[SerializeField]
		private VisualKeyData _onDestroyVFXKey;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private VisualKeyData _onAppearVFXKey;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBD84", Offset = "0x8CBD84")]
		[SerializeField]
		private AudioKeyData _onDestroySFXKey;

		[NonSerialized]
		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private GroundAttack _currentGroundAttack;

		[NonSerialized]
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isMoving;

		[NonSerialized]
		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float _elapsedMovingTime;

		[NonSerialized]
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float _activationTime;

		[NonSerialized]
		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _isActive;

		[NonSerialized]
		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		private bool _isVisible;

		[NonSerialized]
		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float _timeOutDelay;

		[NonSerialized]
		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float _timeShardsCreated;

		[NonSerialized]
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool _hasExploded;

		[NonSerialized]
		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int[] _collisionIDs;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly Collider[] _placementColliders;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBDD0", Offset = "0x8CBDD0")]
		public bool DrawGizmos;

		[Token(Token = "0x17000296")]
		public Transform Visuals
		{
			[Token(Token = "0x6001381")]
			[Address(RVA = "0xCC3C8C", Offset = "0xCC3C8C", VA = "0xCC3C8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		public GroundAttack CurrentGroundAttack
		{
			[Token(Token = "0x6001382")]
			[Address(RVA = "0xCC3C94", Offset = "0xCC3C94", VA = "0xCC3C94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000298")]
		public float ActivationTime
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xCC3C9C", Offset = "0xCC3C9C", VA = "0xCC3C9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000299")]
		public bool IsActive
		{
			[Token(Token = "0x6001384")]
			[Address(RVA = "0xCC3CA4", Offset = "0xCC3CA4", VA = "0xCC3CA4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700029A")]
		public bool IsVisible
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xCC3CAC", Offset = "0xCC3CAC", VA = "0xCC3CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xCC3CB4", Offset = "0xCC3CB4", VA = "0xCC3CB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xCC3E10", Offset = "0xCC3E10", VA = "0xCC3E10")]
		private void ResetShards()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xCC3E18", Offset = "0xCC3E18", VA = "0xCC3E18")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E23DC", Offset = "0x8E23DC")]
		private void ExplodeShards()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xCBFF48", Offset = "0xCBFF48", VA = "0xCBFF48")]
		public void Initialize(GroundAttack groundAttack, Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xCC09EC", Offset = "0xCC09EC", VA = "0xCC09EC")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xCC3E48", Offset = "0xCC3E48", VA = "0xCC3E48")]
		private void EnableSpike()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xCC3F50", Offset = "0xCC3F50", VA = "0xCC3F50")]
		private void DisableSpike()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xCC4190", Offset = "0xCC4190", VA = "0xCC4190")]
		private bool CheckOverlap()
		{
			return default(bool);
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xCC0A3C", Offset = "0xCC0A3C", VA = "0xCC0A3C")]
		public bool DoUpdate(float deltaTime)
		{
			return default(bool);
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xCC462C", Offset = "0xCC462C", VA = "0xCC462C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xCC4490", Offset = "0xCC4490", VA = "0xCC4490")]
		public void DestroyItself()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xCC1404", Offset = "0xCC1404", VA = "0xCC1404")]
		public void Recycle()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xCC46A4", Offset = "0xCC46A4", VA = "0xCC46A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xCC46C4", Offset = "0xCC46C4", VA = "0xCC46C4")]
		public GroundAttackSpike()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3CDC", Offset = "0x8A3CDC")]
	public class GroundAttackSpikeRegistry : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<GroundAttackSpike> _spikes;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<int, GroundAttackSpike> _registry;

		[Token(Token = "0x1700029B")]
		public List<GroundAttackSpike> Spikes
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xCC47E8", Offset = "0xCC47E8", VA = "0xCC47E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xCC3FA4", Offset = "0xCC3FA4", VA = "0xCC3FA4")]
		public void AddItem(GroundAttackSpike item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xCC409C", Offset = "0xCC409C", VA = "0xCC409C")]
		public void RemoveItem(GroundAttackSpike item, int[] hashIDs)
		{
		}

		[Token(Token = "0x6001397")]
		public T GetSpike<T>(int id) where T : GroundAttackSpike
		{
			return null;
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xCC47F0", Offset = "0xCC47F0", VA = "0xCC47F0")]
		public GroundAttackSpikeRegistry()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3D20", Offset = "0x8A3D20")]
	public class GroundSpikeRenderer : ScriptableObject
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBE08", Offset = "0x8CBE08")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CBE64", Offset = "0x8CBE64")]
		[SerializeField]
		private MaterialPropertyReference _glowMaterialParam;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _colorTransitionDuration;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve _colorTransitionCurve;

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xCC2F7C", Offset = "0xCC2F7C", VA = "0xCC2F7C")]
		public void AppendDrawingData(ref RendererDrawingData spikeDrawingData, GroundAttackGroup groundAttackGroup)
		{
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xCC3360", Offset = "0xCC3360", VA = "0xCC3360")]
		public void Draw(RendererDrawingData spikeDrawingData, MaterialPropertyBlock propertyBlock)
		{
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xCC2CFC", Offset = "0xCC2CFC", VA = "0xCC2CFC")]
		public RendererDrawingData GetDrawingData(int instanceCount)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xCC48A4", Offset = "0xCC48A4", VA = "0xCC48A4")]
		public GroundSpikeRenderer()
		{
		}
	}
}
namespace SG.Claymore.Combat.EnemyAttacks
{
	[Token(Token = "0x20002F9")]
	public struct AttackMessage
	{
		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly BaseAttackPlayable AttackPlayable;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Enemy Enemy;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int ID;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float StartTime;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float EndTime;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public readonly float HitTime;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly float PremonitionScalar;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly float Damage;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly float BlockedKnockback;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public readonly float UnblockedKnockback;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public readonly float AttackDuration;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public readonly float AttackAngle;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public readonly TargetAngle BlockAngle;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public readonly float DodgeAngle;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public readonly float DodgeMagnitude;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public readonly float BlockRating;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public readonly List<DamageSector> DamageSectors;

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x967F28", Offset = "0x967F28", VA = "0x967F28")]
		public AttackMessage(Enemy enemy, int id, float startTime, float endTime, float hitTime, float premonitionScalar, float damage, float blockedKnockback, float unblockedKnockback, float attackDuration, float attackAngle, TargetAngle blockAngle, float dodgeAngle, float dodgeMagnitude, float blockRating, List<DamageSector> damageSectors, BaseAttackPlayable attack)
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x967F50", Offset = "0x967F50", VA = "0x967F50", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002FA")]
	public class AttackPlayable : BaseAttackPlayable
	{
		[Token(Token = "0x200052C")]
		public enum AttackDir
		{
			[Token(Token = "0x40021D1")]
			LeftToRight,
			[Token(Token = "0x40021D2")]
			RightToLeft,
			[Token(Token = "0x40021D3")]
			Outward,
			[Token(Token = "0x40021D4")]
			Inward
		}

		[Token(Token = "0x200052D")]
		public class RuntimeAttackClip : RuntimeClaymoreClip
		{
			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float damage;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float blockedKnockback;

			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float unblockedKnockback;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float premonitionDuration;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float premonitionScalar;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float attackAngle;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TargetAngle blockAngle;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float dodgeAngle;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float dodgeMagnitude;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float blockRating;

			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<DamageSector> damageSectors;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private readonly AttackPlayable source;

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xCBD450", Offset = "0xCBD450", VA = "0xCBD450")]
			public RuntimeAttackClip(RuntimeContext context, AttackPlayable attack)
			{
			}

			[Token(Token = "0x6001D7B")]
			[Address(RVA = "0xCBD7AC", Offset = "0xCBD7AC", VA = "0xCBD7AC", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBED0", Offset = "0x8CBED0")]
		public float WeaponColliderDisableBuffer;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBF08", Offset = "0x8CBF08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBF08", Offset = "0x8CBF08")]
		public FloatReference BlockedKnockback;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CBF68", Offset = "0x8CBF68")]
		public FloatReference UnblockedKnockback;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBFA0", Offset = "0x8CBFA0")]
		public float AttackAngle;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TargetAngle BlockAngle;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float DodgeAngle;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FloatReference DodgeMagnitude;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FloatReference BlockRating;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CBFD8", Offset = "0x8CBFD8")]
		public FloatReference PremonitionScalar;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC010", Offset = "0x8CC010")]
		public float ArcMinAngle;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float ArcMaxAngle;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float ArcMinDistance;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float ArcMaxDistance;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC048", Offset = "0x8CC048")]
		public float ArcMinAngleEnd;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float ArcMaxAngleEnd;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float ArcMinDistanceEnd;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float ArcMaxDistanceEnd;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CC080", Offset = "0x8CC080")]
		public AttackDir AttackDirection;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public int NumDamageSectors;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		[SerializeField]
		private List<DamageSector> sectorCache;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AttackPlayable LastSelectedAttack;

		[Token(Token = "0x1700029C")]
		public List<DamageSector> DamageSectors
		{
			[Token(Token = "0x600139F")]
			[Address(RVA = "0xCBC780", Offset = "0xCBC780", VA = "0xCBC780")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xCBD388", Offset = "0xCBD388", VA = "0xCBD388", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xCBC7B4", Offset = "0xCBC7B4", VA = "0xCBC7B4")]
		private void RefreshSectorCache(float normalizedTime = 0f)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xCBD000", Offset = "0xCBD000", VA = "0xCBD000")]
		public void AlignBlockToAttack()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xCBD0A4", Offset = "0xCBD0A4", VA = "0xCBD0A4")]
		private void Reset()
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xCBD0D0", Offset = "0xCBD0D0", VA = "0xCBD0D0", Slot = "12")]
		public override void OnAfterInsert()
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xCBD2C8", Offset = "0xCBD2C8", VA = "0xCBD2C8", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xCBD390", Offset = "0xCBD390", VA = "0xCBD390", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xCBD5C0", Offset = "0xCBD5C0", VA = "0xCBD5C0")]
		public AttackPlayable()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3D80", Offset = "0x8A3D80")]
	public class AttackSequence : TimelineAsset
	{
		[Serializable]
		[Token(Token = "0x200052E")]
		public class AttackSegment
		{
			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD988", Offset = "0x8DD988")]
			public FloatReference SegmentSpeedScalar;

			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD9C0", Offset = "0x8DD9C0")]
			public bool HideCrits;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DD9F8", Offset = "0x8DD9F8")]
			public float PostAttackBuffer;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA30", Offset = "0x8DDA30")]
			public bool RandomAttack;

			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDA68", Offset = "0x8DDA68")]
			public AttackTimeline SingleAttack;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDAB4", Offset = "0x8DDAB4")]
			public AttackTimeline[] PossibleAttacks;

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xCBDDBC", Offset = "0xCBDDBC", VA = "0xCBDDBC")]
			public AttackTimeline GetAttack()
			{
				return null;
			}

			[Token(Token = "0x6001D7D")]
			[Address(RVA = "0xCBDE24", Offset = "0xCBDE24", VA = "0xCBDE24")]
			public float GetSegmentSpeedScalar(ClaymoreEntity entity)
			{
				return default(float);
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xCBDF04", Offset = "0xCBDF04", VA = "0xCBDF04")]
			public AttackSegment()
			{
			}
		}

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC0C8", Offset = "0x8CC0C8")]
		public FloatReference BaseSpeedScalar;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC100", Offset = "0x8CC100")]
		public FloatReference BasePremonitionDuration;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC138", Offset = "0x8CC138")]
		public double PreviewCrossfadeTime;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CC170", Offset = "0x8CC170")]
		public AttackSegment[] Segments;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool SegmentsValid;

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xCBD970", Offset = "0xCBD970", VA = "0xCBD970")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xCBDB14", Offset = "0xCBDB14", VA = "0xCBDB14")]
		public float GetBaseSpeedScalar(ClaymoreEntity entity)
		{
			return default(float);
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xCBDBF4", Offset = "0xCBDBF4", VA = "0xCBDBF4")]
		public float GetBasePremonitionDuration(ClaymoreEntity entity)
		{
			return default(float);
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xCBDCD4", Offset = "0xCBDCD4", VA = "0xCBDCD4")]
		public AttackSequence()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public abstract class BaseAttackPlayable : ClaymoreCustomClip
	{
		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC180", Offset = "0x8CC180")]
		public bool UseDynamicAttackZone;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve AttackZoneCurve;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatGlobalEvent HitByAttackEvent;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CC1B8", Offset = "0x8CC1B8")]
		public FloatReference Damage;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<PlayerHitProperty> PlayerHitProperties;

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xCBDFA8", Offset = "0xCBDFA8", VA = "0xCBDFA8", Slot = "13")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xCBD75C", Offset = "0xCBD75C", VA = "0xCBD75C")]
		protected BaseAttackPlayable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002FD")]
	public struct DamageSector
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float MinAngle;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float MaxAngle;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float MinDist;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float MaxDist;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float MinAngleEnd;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MaxAngleEnd;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinDistEnd;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MaxDistEnd;

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x967F58", Offset = "0x967F58", VA = "0x967F58")]
		public float GetAngleAmount(float normalizedTime)
		{
			return default(float);
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x967F60", Offset = "0x967F60", VA = "0x967F60")]
		public DamageSector(float minAngle, float maxAngle, float minDist, float maxDist, float minAngleEnd, float maxAngleEnd, float minDistEnd, float maxDistEnd)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x967F68", Offset = "0x967F68", VA = "0x967F68", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x967F70", Offset = "0x967F70", VA = "0x967F70")]
		public Vector3 GetMinAngleVector(Vector3 forward, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x967F78", Offset = "0x967F78", VA = "0x967F78")]
		public Vector3 GetMaxAngleVector(Vector3 forward, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x967F80", Offset = "0x967F80", VA = "0x967F80")]
		public bool SectorContainsPoint(Vector3 point, Vector3 forward, Vector3 arcCenter, float normalizedTime)
		{
			return default(bool);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xCBE6B4", Offset = "0xCBE6B4", VA = "0xCBE6B4")]
		public static int CompareAngleAscending(DamageSector lhs, DamageSector rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xCBE6D4", Offset = "0xCBE6D4", VA = "0xCBE6D4")]
		public static int CompareAngleDescending(DamageSector lhs, DamageSector rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xCBE6F4", Offset = "0xCBE6F4", VA = "0xCBE6F4")]
		public static int CompareDistanceAscending(DamageSector lhs, DamageSector rhs)
		{
			return default(int);
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xCBE714", Offset = "0xCBE714", VA = "0xCBE714")]
		public static int CompareDistanceDescending(DamageSector lhs, DamageSector rhs)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002FE")]
	public class GroundAttackPlayable : BaseAttackPlayable
	{
		[Token(Token = "0x200052F")]
		public class RuntimeGroundAttackClip : RuntimeClaymoreClip
		{
			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GroundAttackPlayable _groundAttackPlayable;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform _attackSource;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float _damage;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float _premonitionDuration;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float _knockback;

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xCBEC5C", Offset = "0xCBEC5C", VA = "0xCBEC5C")]
			public RuntimeGroundAttackClip(RuntimeContext context, GroundAttackPlayable groundAttackPlayable)
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xCBEF90", Offset = "0xCBEF90", VA = "0xCBEF90", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC1F0", Offset = "0x8CC1F0")]
		[SerializeField]
		private GroundAttackHandler _groundAttackHandler;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ClaymoreEntityVariable _attackSource;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GroundAttackGroupDefinition _groundAttackDefinition;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC26C", Offset = "0x8CC26C")]
		[SerializeField]
		private FloatReference _premonitionScalar;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC2B8", Offset = "0x8CC2B8")]
		[SerializeField]
		private FloatReference _knockback;

		[Token(Token = "0x1700029E")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x60013BB")]
			[Address(RVA = "0xCBEB94", Offset = "0xCBEB94", VA = "0xCBEB94", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xCBE734", Offset = "0xCBE734", VA = "0xCBE734", Slot = "13")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xCBE7BC", Offset = "0xCBE7BC", VA = "0xCBE7BC")]
		public void Raise(Enemy caster, Transform origin, float dmg, float knockback, float premonitionDuration, GroundAttackPlayable sourcePlayable)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xCBEB9C", Offset = "0xCBEB9C", VA = "0xCBEB9C", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xCBEE54", Offset = "0xCBEE54", VA = "0xCBEE54", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xCBEEE4", Offset = "0xCBEEE4", VA = "0xCBEEE4")]
		public GroundAttackPlayable()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class ProjectileAttackPlayable : BaseAttackPlayable
	{
		[Token(Token = "0x2000530")]
		public class RuntimeProjectileAttackClip : RuntimeClaymoreClip
		{
			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float _damage;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float _onCritSuccessKnockback;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float _onCritFailKnockback;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float _premonitionDuration;

			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform _projectileSource;

			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ProjectileAttackPlayable _projectileAttackPlayable;

			[Token(Token = "0x6001D81")]
			[Address(RVA = "0xCBF248", Offset = "0xCBF248", VA = "0xCBF248")]
			public RuntimeProjectileAttackClip(RuntimeContext context, ProjectileAttackPlayable projectileAttackPlayable)
			{
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xCBF51C", Offset = "0xCBF51C", VA = "0xCBF51C", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC304", Offset = "0x8CC304")]
		[SerializeField]
		private EnemyProjectileAssetGlobalEvent _enemyProjectileAssetGlobalEvent;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC350", Offset = "0x8CC350")]
		[SerializeField]
		private FloatReference _premonitionScalar;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC39C", Offset = "0x8CC39C")]
		[SerializeField]
		private FloatReference _moveRateMultiplier;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC3E8", Offset = "0x8CC3E8")]
		[SerializeField]
		private FloatRange _critAngle;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _blockAngleLeeway;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC444", Offset = "0x8CC444")]
		[SerializeField]
		private FloatReference _onCritSuccessKnockback;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC490", Offset = "0x8CC490")]
		[SerializeField]
		private FloatReference _onCritFailKnockback;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC4DC", Offset = "0x8CC4DC")]
		[SerializeField]
		private ExposedTransformPoint _projectileSource;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC528", Offset = "0x8CC528")]
		[SerializeField]
		private EnemyProjectileAsset _projectileAsset;

		[Token(Token = "0x1700029F")]
		public EnemyProjectileAssetGlobalEvent EnemyProjectileAssetGlobalEvent
		{
			[Token(Token = "0x60013BF")]
			[Address(RVA = "0xCBEFC8", Offset = "0xCBEFC8", VA = "0xCBEFC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A0")]
		public FloatReference PremonitionScalar
		{
			[Token(Token = "0x60013C0")]
			[Address(RVA = "0xCBEFD0", Offset = "0xCBEFD0", VA = "0xCBEFD0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		public FloatReference OnCritSuccessKnockback
		{
			[Token(Token = "0x60013C1")]
			[Address(RVA = "0xCBEFD8", Offset = "0xCBEFD8", VA = "0xCBEFD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A2")]
		public FloatReference OnCritFailKnockback
		{
			[Token(Token = "0x60013C2")]
			[Address(RVA = "0xCBEFE0", Offset = "0xCBEFE0", VA = "0xCBEFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		public ExposedTransformPoint ProjectileSource
		{
			[Token(Token = "0x60013C3")]
			[Address(RVA = "0xCBEFE8", Offset = "0xCBEFE8", VA = "0xCBEFE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x60013C5")]
			[Address(RVA = "0xCBF180", Offset = "0xCBF180", VA = "0xCBF180", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xCBEFF0", Offset = "0xCBEFF0", VA = "0xCBEFF0")]
		public void Raise(float premonitionDuration, Vector3 origin, Vector3 initialDirection, float damage, float onCritSuccessKnockback, float onCritFailKnockback, Enemy enemyCaster)
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xCBF188", Offset = "0xCBF188", VA = "0xCBF188", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xCBF34C", Offset = "0xCBF34C", VA = "0xCBF34C", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xCBF3DC", Offset = "0xCBF3DC", VA = "0xCBF3DC")]
		public ProjectileAttackPlayable()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public class SampleDodgePositionPlayable : ClaymoreCustomClip
	{
		[Token(Token = "0x2000531")]
		private class RuntimeSampleDodgePositionClip : RuntimeClaymoreClip
		{
			[Token(Token = "0x6001D83")]
			[Address(RVA = "0xCBF720", Offset = "0xCBF720", VA = "0xCBF720")]
			public RuntimeSampleDodgePositionClip(RuntimeContext context, SampleDodgePositionPlayable groundAttackPlayable)
			{
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xCBF760", Offset = "0xCBF760", VA = "0xCBF760", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x170002A5")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x60013C9")]
			[Address(RVA = "0xCBF5D4", Offset = "0xCBF5D4", VA = "0xCBF5D4", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xCBF5DC", Offset = "0xCBF5DC", VA = "0xCBF5DC", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xCBF664", Offset = "0xCBF664", VA = "0xCBF664", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xCBF758", Offset = "0xCBF758", VA = "0xCBF758")]
		public SampleDodgePositionPlayable()
		{
		}
	}
}
namespace SG.Claymore.Combat.CritPoints
{
	[Serializable]
	[Token(Token = "0x2000301")]
	public class CritCooldownBinding
	{
		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CritType Type;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RandomTimeBoxVariable CooldownVariable;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TimerVariable Timer;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RandomTimeBoxVariable InstancedCooldown;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TimerVariable InstancedTimer;

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xB77444", Offset = "0xB77444", VA = "0xB77444")]
		public void SetInstanceVariables(Enemy npc)
		{
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xB8380C", Offset = "0xB8380C", VA = "0xB8380C")]
		public CritCooldownBinding()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000302")]
	public struct CritMessage
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ClaymoreEntity TargetEntity;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int ID;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ActivationTime;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Duration;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Angle;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Location;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CritType CritType;

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x9667D4", Offset = "0x9667D4", VA = "0x9667D4")]
		public CritMessage(ClaymoreEntity targetEntity, int id, float activationTime, float duration, float angle, Transform location, CritType type)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x9667DC", Offset = "0x9667DC", VA = "0x9667DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000303")]
	public class CritPointInstanced : ClaymoreEntity
	{
		[Token(Token = "0x2000532")]
		public enum CritResults
		{
			[Token(Token = "0x40021F3")]
			None,
			[Token(Token = "0x40021F4")]
			Success,
			[Token(Token = "0x40021F5")]
			Failure,
			[Token(Token = "0x40021F6")]
			Timeout,
			[Token(Token = "0x40021F7")]
			Cancel
		}

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		protected Transform _visuals;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool _isDirectional;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool _isProjectile;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool _isGrayscale;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		protected Collider _collider;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected CritType _critType;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected FloatReference _leeway;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected FloatReference _generousLeeway;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		protected BoolVariable _anyCritActive;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected IntVariable _critSuppression;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		protected Layer _activeLayer;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		protected Layer _inactiveLayer;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CC624", Offset = "0x8CC624")]
		[SerializeField]
		private List<GameObject> _subObjects;

		[NonSerialized]
		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CritResults _currentCritResult;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ClaymoreEntity _targetEntity;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Transform _lookPoint;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Transform _critLocation;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool _critActivated;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Dictionary<ClaymoreEntity, List<CritPointInstanced>> _activeCritPoints;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC660", Offset = "0x8CC660")]
		[SerializeField]
		protected BoolVariable[] _enemyTriggers;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC6AC", Offset = "0x8CC6AC")]
		[SerializeField]
		protected FloatReference _guardDamageMultiplier;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC6F8", Offset = "0x8CC6F8")]
		private int <ComboIndex>k__BackingField;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC708", Offset = "0x8CC708")]
		private float <StartTime>k__BackingField;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC718", Offset = "0x8CC718")]
		private float <ActivatedTime>k__BackingField;

		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CC728", Offset = "0x8CC728")]
		private float <CritEndTime>k__BackingField;

		[Token(Token = "0x170002A6")]
		public Transform Visuals
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xB83B44", Offset = "0xB83B44", VA = "0xB83B44")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public bool IsDirectional
		{
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xB83B4C", Offset = "0xB83B4C", VA = "0xB83B4C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A8")]
		public bool IsProjectile
		{
			[Token(Token = "0x60013D3")]
			[Address(RVA = "0xB83B54", Offset = "0xB83B54", VA = "0xB83B54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002A9")]
		public bool IsGrayscale
		{
			[Token(Token = "0x60013D4")]
			[Address(RVA = "0xB83B5C", Offset = "0xB83B5C", VA = "0xB83B5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AA")]
		public CritType CritType
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xB83B64", Offset = "0xB83B64", VA = "0xB83B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		public CritResults CurrentCritResult
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xB83B6C", Offset = "0xB83B6C", VA = "0xB83B6C")]
			get
			{
				return default(CritResults);
			}
		}

		[Token(Token = "0x170002AC")]
		public bool IsActive
		{
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xB83B74", Offset = "0xB83B74", VA = "0xB83B74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002AD")]
		public int ComboIndex
		{
			[Token(Token = "0x60013D9")]
			[Address(RVA = "0xB83C70", Offset = "0xB83C70", VA = "0xB83C70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2414", Offset = "0x8E2414")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013DA")]
			[Address(RVA = "0xB83C78", Offset = "0xB83C78", VA = "0xB83C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2424", Offset = "0x8E2424")]
			set
			{
			}
		}

		[Token(Token = "0x170002AE")]
		public float StartTime
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xB83C80", Offset = "0xB83C80", VA = "0xB83C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2434", Offset = "0x8E2434")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DC")]
			[Address(RVA = "0xB83C88", Offset = "0xB83C88", VA = "0xB83C88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2444", Offset = "0x8E2444")]
			private set
			{
			}
		}

		[Token(Token = "0x170002AF")]
		public float ActivatedTime
		{
			[Token(Token = "0x60013DD")]
			[Address(RVA = "0xB83C90", Offset = "0xB83C90", VA = "0xB83C90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2454", Offset = "0x8E2454")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013DE")]
			[Address(RVA = "0xB83C98", Offset = "0xB83C98", VA = "0xB83C98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2464", Offset = "0x8E2464")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B0")]
		public float CritEndTime
		{
			[Token(Token = "0x60013DF")]
			[Address(RVA = "0xB83CA0", Offset = "0xB83CA0", VA = "0xB83CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2474", Offset = "0x8E2474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013E0")]
			[Address(RVA = "0xB83CA8", Offset = "0xB83CA8", VA = "0xB83CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2484", Offset = "0x8E2484")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B1")]
		public ClaymoreEntity TargetEntity
		{
			[Token(Token = "0x60013E1")]
			[Address(RVA = "0xB83CB0", Offset = "0xB83CB0", VA = "0xB83CB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xB83B7C", Offset = "0xB83B7C", VA = "0xB83B7C")]
		private void SetEnabled(bool enable)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xB83CB8", Offset = "0xB83CB8", VA = "0xB83CB8", Slot = "13")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xB83D68", Offset = "0xB83D68", VA = "0xB83D68", Slot = "14")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xB83E10", Offset = "0xB83E10", VA = "0xB83E10", Slot = "23")]
		protected virtual void OnSuppressionValueChanged(int newValue)
		{
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xB83E14", Offset = "0xB83E14", VA = "0xB83E14", Slot = "24")]
		public virtual void SpawnCritPoint(Transform location, Transform lookPoint, float activationTime, float duration, float angle, ClaymoreEntity targetEntity)
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xB84050", Offset = "0xB84050", VA = "0xB84050", Slot = "25")]
		public virtual void IndicateCritResults(CritResults result, bool remove = true)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xB8420C", Offset = "0xB8420C", VA = "0xB8420C", Slot = "26")]
		protected virtual bool SwingIsValid(ref HitData hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xB8421C", Offset = "0xB8421C", VA = "0xB8421C", Slot = "18")]
		public override HitResult HandleHitCollision(ref HitData hitData)
		{
			return null;
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xB843C8", Offset = "0xB843C8", VA = "0xB843C8", Slot = "27")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xB84598", Offset = "0xB84598", VA = "0xB84598")]
		public static void CancelCritsForEntity(ClaymoreEntity entity)
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xB84804", Offset = "0xB84804", VA = "0xB84804")]
		public CritPointInstanced()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3DE0", Offset = "0x8A3DE0")]
	public class CritRenderer : ScriptableObject
	{
		[Token(Token = "0x2000533")]
		protected class CritMap
		{
			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _currentIndex;

			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly CritPointInstanced[] _critPointInstances;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDB00", Offset = "0x8DDB00")]
			private readonly CritType <CritType>k__BackingField;

			[Token(Token = "0x17000481")]
			public CritPointInstanced[] CritPointInstances
			{
				[Token(Token = "0x6001D85")]
				[Address(RVA = "0xCB8964", Offset = "0xCB8964", VA = "0xCB8964")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000482")]
			public CritType CritType
			{
				[Token(Token = "0x6001D86")]
				[Address(RVA = "0xCB896C", Offset = "0xCB896C", VA = "0xCB896C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E480C", Offset = "0x8E480C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D87")]
			[Address(RVA = "0xCB856C", Offset = "0xCB856C", VA = "0xCB856C")]
			public CritMap(CritPointInstanced prefab, Transform root)
			{
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xCB8850", Offset = "0xCB8850", VA = "0xCB8850")]
			public CritPointInstanced GetNext()
			{
				return null;
			}
		}

		[Token(Token = "0x4001445")]
		protected const int MAX_INSTANCED_CRITS_PER_TYPE = 6;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected CritPointInstanced[] _critPrefabs;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Mesh _mesh;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC768", Offset = "0x8CC768")]
		[SerializeField]
		protected MaterialPropertyReference _rotationParam;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC7B4", Offset = "0x8CC7B4")]
		[SerializeField]
		protected MaterialPropertyReference _fillParam;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC800", Offset = "0x8CC800")]
		[SerializeField]
		protected MaterialPropertyReference _alphaParam;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC84C", Offset = "0x8CC84C")]
		[SerializeField]
		protected MaterialPropertyReference _isDirectionalParam;

		[NonSerialized]
		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected readonly List<CritPointInstanced> _allCrits;

		[NonSerialized]
		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected CritMap[] _critMaps;

		[NonSerialized]
		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected int _totalCritCount;

		[NonSerialized]
		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected float[] _fills;

		[NonSerialized]
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected float[] _rotations;

		[NonSerialized]
		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected float[] _isDirectionals;

		[NonSerialized]
		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected float[] _alphaValues;

		[NonSerialized]
		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		protected MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		protected CritPointInstanced.CritResults[] _currentCritResults;

		[NonSerialized]
		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float[] _timeEnded;

		[NonSerialized]
		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool[] _isActive;

		[Token(Token = "0x170002B2")]
		protected bool IsAnyActive
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xCB86E4", Offset = "0xCB86E4", VA = "0xCB86E4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xCB8294", Offset = "0xCB8294", VA = "0xCB8294", Slot = "4")]
		public virtual void Initialize(Transform root)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xCB86D8", Offset = "0xCB86D8", VA = "0xCB86D8", Slot = "5")]
		public virtual void UpdateLifecycle()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xCB86DC", Offset = "0xCB86DC", VA = "0xCB86DC", Slot = "6")]
		public virtual void UpdateAnimation()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xCB86E0", Offset = "0xCB86E0", VA = "0xCB86E0", Slot = "7")]
		public virtual void Draw()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xCB8748", Offset = "0xCB8748", VA = "0xCB8748")]
		public CritPointInstanced GetCrit(CritType type)
		{
			return null;
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xCB88A0", Offset = "0xCB88A0", VA = "0xCB88A0")]
		public CritRenderer()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class CritRendererHQ : CritRenderer
	{
		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CC898", Offset = "0x8CC898")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CC898", Offset = "0x8CC898")]
		[SerializeField]
		private bool _useEasingFunctions;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC908", Offset = "0x8CC908")]
		[SerializeField]
		private MaterialPropertyReference _isProjectileParam;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC954", Offset = "0x8CC954")]
		[SerializeField]
		private MaterialPropertyReference _isGrayscaleParam;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC9A0", Offset = "0x8CC9A0")]
		[SerializeField]
		private MaterialPropertyReference _iconColorParam;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CC9EC", Offset = "0x8CC9EC")]
		[SerializeField]
		private MaterialPropertyReference _ringColorParam;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCA38", Offset = "0x8CCA38")]
		[SerializeField]
		private MaterialPropertyReference _shieldEffectColorParam;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCA84", Offset = "0x8CCA84")]
		[SerializeField]
		private MaterialPropertyReference _ringStretchAmountParam;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCAD0", Offset = "0x8CCAD0")]
		[SerializeField]
		private MaterialPropertyReference _shieldEffectStretchAmountParam;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCB1C", Offset = "0x8CCB1C")]
		[SerializeField]
		private MaterialPropertyReference _iconStretchAmountParam;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCB68", Offset = "0x8CCB68")]
		[SerializeField]
		private MaterialPropertyReference _baseAlphaParam;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCBB4", Offset = "0x8CCBB4")]
		[SerializeField]
		private MaterialPropertyReference _iconAlphaParam;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCC00", Offset = "0x8CCC00")]
		[SerializeField]
		protected FloatRange _showTimeRange;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[SerializeField]
		private FloatRange _critDurationRange;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private AnimationCurve _iconColorShowCurve;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private AnimationCurve _ringColorShowCurve;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[SerializeField]
		private AnimationCurve _shieldEffectColorShowCurve;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AnimationCurve _ringStretchShowCurve;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AnimationCurve _shieldEffectStretchShowCurve;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCCAC", Offset = "0x8CCCAC")]
		[SerializeField]
		protected float _successTime;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AnimationCurve _baseAlphaSuccessCurve;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AnimationCurve _iconAlphaSuccessCurve;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AnimationCurve _shieldEffectColorSuccessCurve;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[SerializeField]
		private AnimationCurve _shieldEffectStretchSuccessCurve;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private AnimationCurve _iconStretchSuccessCurve;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCD48", Offset = "0x8CCD48")]
		[SerializeField]
		protected float _timeoutTime;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AnimationCurve _baseAlphaTimeoutCurve;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private AnimationCurve _iconAlphaTimeoutCurve;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AnimationCurve _iconColorTimeoutCurve;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private AnimationCurve _shieldEffectStretchTimeoutCurve;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCDD4", Offset = "0x8CCDD4")]
		[SerializeField]
		protected float _cancelTime;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		private AnimationCurve _masterAlphaCancelCurve;

		[NonSerialized]
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float[] _currentEndDurations;

		[NonSerialized]
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float[] _isProjectile;

		[NonSerialized]
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float[] _isGrayscale;

		[NonSerialized]
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float[] _iconColors;

		[NonSerialized]
		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float[] _ringColors;

		[NonSerialized]
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float[] _shieldEffectColors;

		[NonSerialized]
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float[] _ringStretches;

		[NonSerialized]
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float[] _shieldEffectStretches;

		[NonSerialized]
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private float[] _iconStretches;

		[NonSerialized]
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float[] _baseAlpha;

		[NonSerialized]
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private float[] _iconAlpha;

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xCB8974", Offset = "0xCB8974", VA = "0xCB8974", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xCB8CCC", Offset = "0xCB8CCC", VA = "0xCB8CCC", Slot = "5")]
		public override void UpdateLifecycle()
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xCB8FC8", Offset = "0xCB8FC8", VA = "0xCB8FC8", Slot = "6")]
		public override void UpdateAnimation()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xCB9638", Offset = "0xCB9638", VA = "0xCB9638")]
		private void UpdateState(int i, float normalizedTime)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xCB8B34", Offset = "0xCB8B34", VA = "0xCB8B34")]
		private void ResetParams(int i)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xCB9F50", Offset = "0xCB9F50", VA = "0xCB9F50", Slot = "7")]
		public override void Draw()
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xCBA240", Offset = "0xCBA240", VA = "0xCBA240")]
		public CritRendererHQ()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class CritRendererLQ : CritRenderer
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CCE30", Offset = "0x8CCE30")]
		[SerializeField]
		private MaterialPropertyReference _fillColorParam;

		[NonSerialized]
		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector4[] _fillColors;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCE7C", Offset = "0x8CCE7C")]
		[SerializeField]
		protected float _startAnimationDuration;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		protected float _endAnimationDuration;

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xCBA758", Offset = "0xCBA758", VA = "0xCBA758", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xCBA7D0", Offset = "0xCBA7D0", VA = "0xCBA7D0", Slot = "5")]
		public override void UpdateLifecycle()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xCBA9F4", Offset = "0xCBA9F4", VA = "0xCBA9F4", Slot = "6")]
		public override void UpdateAnimation()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xCBAF34", Offset = "0xCBAF34", VA = "0xCBAF34", Slot = "7")]
		public override void Draw()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xCBB0BC", Offset = "0xCBB0BC", VA = "0xCBB0BC")]
		public CritRendererLQ()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3E40", Offset = "0x8A3E40")]
	public class CritType : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000534")]
		public class RandomSet : WeightedRandomSet<CritType>
		{
			[Token(Token = "0x6001D89")]
			[Address(RVA = "0xCBB0D8", Offset = "0xCBB0D8", VA = "0xCBB0D8")]
			public RandomSet()
			{
			}
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xCBB0D0", Offset = "0xCBB0D0", VA = "0xCBB0D0")]
		public CritType()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class DirectionalCritPointInstanced : CritPointInstanced
	{
		[Token(Token = "0x2000535")]
		private struct IsValidDirectionResult
		{
			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool IsValid;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 CritDirection;

			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 ProjectionDirection;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float Angle;
		}

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TargetAngle _targetAngle;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCED8", Offset = "0x8CCED8")]
		[SerializeField]
		private bool _debugMaxDuration;

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xCBB128", Offset = "0xCBB128", VA = "0xCBB128", Slot = "24")]
		public override void SpawnCritPoint(Transform location, Transform lookPoint, float preCritDuration, float duration, float angle, ClaymoreEntity spawningEntity)
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xCBB2F8", Offset = "0xCBB2F8", VA = "0xCBB2F8")]
		private IsValidDirectionResult CheckIsValidDirection(Vector3 direction, bool generous)
		{
			return default(IsValidDirectionResult);
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xCBB508", Offset = "0xCBB508", VA = "0xCBB508", Slot = "19")]
		public override bool IsHitDirectionValid(Vector3 direction, HitData.HitStyleType hitType, bool isTwoHanded = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xCBB548", Offset = "0xCBB548", VA = "0xCBB548", Slot = "26")]
		protected override bool SwingIsValid(ref HitData hit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xCBB5F0", Offset = "0xCBB5F0", VA = "0xCBB5F0")]
		public DirectionalCritPointInstanced()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ProjectileCritPointInstanced : DirectionalCritPointInstanced, IBlockable
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CCF24", Offset = "0x8CCF24")]
		[SerializeField]
		private Transform[] _blockPoints;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private float _baseBlockDistanceXYPlane;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[SerializeField]
		private float _baseBlockDistanceXZPlane;

		[Token(Token = "0x170002B3")]
		private Transform[] SG.Claymore.Combat.Blocking.IBlockable.BlockPoints
		{
			[Token(Token = "0x6001406")]
			[Address(RVA = "0xCBB658", Offset = "0xCBB658", VA = "0xCBB658", Slot = "28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B4")]
		private float SG.Claymore.Combat.Blocking.IBlockable.BaseBlockDistanceXYPlane
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xCBB660", Offset = "0xCBB660", VA = "0xCBB660", Slot = "29")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B5")]
		private float SG.Claymore.Combat.Blocking.IBlockable.BaseBlockDistanceXZPlane
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xCBB668", Offset = "0xCBB668", VA = "0xCBB668", Slot = "30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B6")]
		private Vector3 SG.Claymore.Combat.Blocking.IBlockable.BlockDirection
		{
			[Token(Token = "0x6001409")]
			[Address(RVA = "0xCBB670", Offset = "0xCBB670", VA = "0xCBB670", Slot = "31")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002B7")]
		private Vector3 SG.Claymore.Combat.Blocking.IBlockable.PlaneDirection
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xCBB68C", Offset = "0xCBB68C", VA = "0xCBB68C", Slot = "32")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xCBB6A8", Offset = "0xCBB6A8", VA = "0xCBB6A8")]
		public void SetIsGrayscale(bool isGrayscale)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xCBB6B4", Offset = "0xCBB6B4", VA = "0xCBB6B4", Slot = "25")]
		public override void IndicateCritResults(CritResults result, bool remove = true)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xCBB75C", Offset = "0xCBB75C", VA = "0xCBB75C")]
		public ProjectileCritPointInstanced()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public class SpawnCritPlayable : ClaymoreCustomClip
	{
		[Serializable]
		[Token(Token = "0x2000536")]
		public class CritLocationInfo
		{
			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB10", Offset = "0x8DDB10")]
			public ExposedTransformPoint Location;

			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB20", Offset = "0x8DDB20")]
			public List<CritTypeInfo> PossibleCritTypes;

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xCBBF3C", Offset = "0xCBBF3C", VA = "0xCBBF3C")]
			public CritLocationInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000537")]
		public class CritTypeInfo
		{
			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB30", Offset = "0x8DDB30")]
			public CritType CritType;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB40", Offset = "0x8DDB40")]
			public FloatVariable CritDuration;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB50", Offset = "0x8DDB50")]
			public bool UseRandomAngle;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8DDB60", Offset = "0x8DDB60")]
			public float Angle;

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xCBC0C8", Offset = "0xCBC0C8", VA = "0xCBC0C8")]
			public CritTypeInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000538")]
		private class CritLocationTypeInfo
		{
			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ExposedTransformPoint Location;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CritType CritType;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FloatVariable CritDuration;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool UseRandomAngle;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float Angle;

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xCBBA4C", Offset = "0xCBBA4C", VA = "0xCBBA4C")]
			public CritLocationTypeInfo(ExposedTransformPoint location, CritTypeInfo typeInfo)
			{
			}

			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0xCBBFBC", Offset = "0xCBBFBC", VA = "0xCBBFBC")]
			public float GetInstancedDuration(AttackTimelinePlayer timelinePlayer)
			{
				return default(float);
			}
		}

		[Token(Token = "0x2000539")]
		public class RuntimeCritClip : RuntimeClaymoreClip
		{
			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private List<CritLocationTypeInfo> critLocationTypes;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float preCritDuration;

			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool hideCrits;

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xCBBDD4", Offset = "0xCBBDD4", VA = "0xCBBDD4")]
			public RuntimeCritClip(float startTime, float endTime, SpawnCritPlayable critSpawn, AttackTimelinePlayer timelinePlayer)
			{
			}

			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0xCBC0D8", Offset = "0xCBC0D8", VA = "0xCBC0D8", Slot = "4")]
			public override void Execute(AttackTimelinePlayer timelinePlayer)
			{
			}
		}

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FloatReference PreCritDuration;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CritLocationInfo> CritLocations;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private List<CritLocationTypeInfo> critLocationTypes;

		[Token(Token = "0x170002B8")]
		public override int NumRuntimeClips
		{
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xCBBC90", Offset = "0xCBBC90", VA = "0xCBBC90", Slot = "10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xCBB76C", Offset = "0xCBB76C", VA = "0xCBB76C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xCBBAC8", Offset = "0xCBBAC8", VA = "0xCBBAC8", Slot = "9")]
		public override string GetStringRepresentation(ClipBindingInfo clipInfo)
		{
			return null;
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xCBBB50", Offset = "0xCBBB50", VA = "0xCBBB50")]
		public float GetInstancedPreCritDuration(AttackTimelinePlayer timelinePlayer)
		{
			return default(float);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xCBBC98", Offset = "0xCBBC98", VA = "0xCBBC98", Slot = "11")]
		public override RuntimeClaymoreClip GetRuntimeClip(RuntimeContext context, int clipIndex)
		{
			return null;
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xCBBE54", Offset = "0xCBBE54", VA = "0xCBBE54")]
		public SpawnCritPlayable()
		{
		}
	}
}
namespace SG.Claymore.Combat.Combatants
{
	[Token(Token = "0x200030B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3EA0", Offset = "0x8A3EA0")]
	public class EnemyAnimationData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200053A")]
		public class JumpInfoSet
		{
			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NPCJumpInfo Forward;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public NPCJumpInfo Back;

			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public NPCJumpInfo Left;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public NPCJumpInfo Right;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public NPCJumpInfo FlipOver;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public NPCJumpInfo DisplaceLeft;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public NPCJumpInfo DisplaceRight;

			[Token(Token = "0x6001D90")]
			[Address(RVA = "0xB819AC", Offset = "0xB819AC", VA = "0xB819AC")]
			public JumpInfoSet()
			{
			}
		}

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CCFC8", Offset = "0x8CCFC8")]
		public List<AnimationAttackBinding> attackBindings;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransitionSettings InTransitionSettings;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransitionSettings OutTransitionSettings;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CCFDC", Offset = "0x8CCFDC")]
		public JumpInfoSet JumpInfos;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CCFF0", Offset = "0x8CCFF0")]
		public Vector3 AttackGizmoOffset;

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xB81728", Offset = "0xB81728", VA = "0xB81728")]
		public AttackTimeline GetBoundAttack(AnimationClip clip)
		{
			return null;
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xB81874", Offset = "0xB81874", VA = "0xB81874")]
		public EnemyAnimationData()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3EE4", Offset = "0x8A3EE4")]
	public class NPCCombatantDefinition : ClaymoreEntityDefinition, IGUIDProvider, IProvideIconSprite
	{
		[Serializable]
		[Token(Token = "0x200053B")]
		private struct HealthMeterDifficultyLevel
		{
			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IntVariable DifficultyLevel;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public EnemyHealthMeterInstanced HealthMeterOverride;
		}

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[DebugOnly]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CD04C", Offset = "0x8CD04C")]
		[SerializeField]
		private int challengeRating;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int victoryPayout;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite iconSprite;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public EnemyAnimationData AnimationData;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVariable difficultyLevel;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD0C8", Offset = "0x8CD0C8")]
		[SerializeField]
		private EnemyHealthMeterInstanced overrideHealthMeterPrefab;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private HealthMeterDifficultyLevel[] difficultyHealthMeterOverrides;

		[Token(Token = "0x170002B9")]
		public EnemyHealthMeterInstanced EnemyHealthMeterPrefab
		{
			[Token(Token = "0x6001416")]
			[Address(RVA = "0xB81B5C", Offset = "0xB81B5C", VA = "0xB81B5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BA")]
		public int VictoryPayout
		{
			[Token(Token = "0x6001417")]
			[Address(RVA = "0xB81E10", Offset = "0xB81E10", VA = "0xB81E10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BB")]
		public int ChallengeRating
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xB81E18", Offset = "0xB81E18", VA = "0xB81E18")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002BC")]
		public string GUID
		{
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xB81E20", Offset = "0xB81E20", VA = "0xB81E20", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		public string DeveloperName
		{
			[Token(Token = "0x600141A")]
			[Address(RVA = "0xB81E28", Offset = "0xB81E28", VA = "0xB81E28", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BE")]
		public Sprite IconSprite
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xB81E30", Offset = "0xB81E30", VA = "0xB81E30", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xB81E38", Offset = "0xB81E38", VA = "0xB81E38")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xB81EFC", Offset = "0xB81EFC", VA = "0xB81EFC")]
		public NPCCombatantDefinition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200030D")]
	public class NPCJumpInfo
	{
		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AnimationClip clip;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector3 displacement;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MecanimParameterReference MecanimParameter;

		[Token(Token = "0x170002BF")]
		public AnimationClip Clip
		{
			[Token(Token = "0x600141E")]
			[Address(RVA = "0xB81F70", Offset = "0xB81F70", VA = "0xB81F70")]
			get
			{
				return null;
			}
			[Token(Token = "0x600141F")]
			[Address(RVA = "0xB81F78", Offset = "0xB81F78", VA = "0xB81F78")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public Vector3 Displacement
		{
			[Token(Token = "0x6001420")]
			[Address(RVA = "0xB82018", Offset = "0xB82018", VA = "0xB82018")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xB82024", Offset = "0xB82024", VA = "0xB82024")]
		private float GetLargestValue(AnimationCurve curve)
		{
			return default(float);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xB82190", Offset = "0xB82190", VA = "0xB82190")]
		public bool AgentCanDoJump(NavMeshAgent agent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xB822DC", Offset = "0xB822DC", VA = "0xB822DC")]
		public void ExecuteJump(Animator animator)
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xB81AE4", Offset = "0xB81AE4", VA = "0xB81AE4")]
		public NPCJumpInfo()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class PlayerCombatant : MonoBehaviour, IEntityComponent, IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent
	{
		[Token(Token = "0x200053C")]
		public delegate void BeforePlayerDamagedDelegate(ref PlayerDefense.HitDamageHandle handle);

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CD154", Offset = "0x8CD154")]
		private ClaymoreEntity <Entity>k__BackingField;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformVariable CombatantVariable;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XRPlatformManager XRPlatformManager;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FloatVariable WeaponCollisionDisableDistance;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD164", Offset = "0x8CD164")]
		public IntVariable PlayerMovementSuppression;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD19C", Offset = "0x8CD19C")]
		public IntVariable PlayerWalkSuppression;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatVariable MagnetizeAdvanceRate;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float dashMagnetismCooldown;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CD1E4", Offset = "0x8CD1E4")]
		public PlayerDefense PlayerDefense;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public PlayerHealth PlayerHealth;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private LocalPlayerTargetFinder targetFinder;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CritController critController;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD23C", Offset = "0x8CD23C")]
		public Transform Head;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform Chest;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform Feet;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public PlayerHand LeftHand;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public PlayerHand RightHand;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GlobalEvent OnDamageTaken;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GlobalEvent OnDamageBlocked;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GlobalEvent OnDamageDodged;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GlobalEvent OnDamageDealt;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD274", Offset = "0x8CD274")]
		[SerializeField]
		private Vector3GlobalEvent onDashStart;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BoolGlobalEvent onDashEnd;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private FloatVariable healthVariable;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private IntVariable dashVariable;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD2F0", Offset = "0x8CD2F0")]
		[SerializeField]
		private IntVariable maxCombo;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private IntVariable comboTarget;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private AchievementAsset combosCompletedAchievement;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private AchievementAsset longComboAchievement;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool isDashing;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float timeDashEnded;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private MeleeWeapon leftWeapon;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private MeleeWeapon rightWeapon;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<MeleeWeapon> weaponCache;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AttackBlocker leftBlocker;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private AttackBlocker rightBlocker;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<AttackBlocker> blockerCache;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Action<Armament, Enemy, float> OnGuardDamageDealt;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Action<Armament, Enemy, int, float, HitData> OnHealthDamageDealt;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Action<Armament, Enemy> OnKill;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public Action<Armament, Enemy, float> OnAttackBlocked;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Action<Enemy, float> OnPlayerWillBeDamaged;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Action<Enemy, float> OnPlayerWasDamaged;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Action<Enemy, float> OnPlayerDodged;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Action<Armament> OnPlayerDestroyedProjectile;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public BeforePlayerDamagedDelegate OnBeforePlayerDamaged;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Action<List<MeleeWeapon>, Enemy, HitResult> OnDashDamageDealt;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 magnetizeDirection;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float magnetizeRemaining;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private FloatVariable instancedMagnetizeRate;

		[Token(Token = "0x170002C1")]
		public ClaymoreEntity Entity
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xB82300", Offset = "0xB82300", VA = "0xB82300", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2494", Offset = "0x8E2494")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001426")]
			[Address(RVA = "0xB82308", Offset = "0xB82308", VA = "0xB82308", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24A4", Offset = "0x8E24A4")]
			set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public Instancer LocalVariables
		{
			[Token(Token = "0x6001427")]
			[Address(RVA = "0xB82310", Offset = "0xB82310", VA = "0xB82310")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		public XRPlayer PlayerSpace
		{
			[Token(Token = "0x6001428")]
			[Address(RVA = "0xB7E4D4", Offset = "0xB7E4D4", VA = "0xB7E4D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C4")]
		public List<MeleeWeapon> HeldWeapons
		{
			[Token(Token = "0x6001429")]
			[Address(RVA = "0xB8232C", Offset = "0xB8232C", VA = "0xB8232C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		public List<AttackBlocker> HeldBlockers
		{
			[Token(Token = "0x600142A")]
			[Address(RVA = "0xB7E20C", Offset = "0xB7E20C", VA = "0xB7E20C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		public bool IsReady
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0xB82434", Offset = "0xB82434", VA = "0xB82434")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB82458", Offset = "0xB82458", VA = "0xB82458")]
		private void Awake()
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB82478", Offset = "0xB82478", VA = "0xB82478")]
		private void Start()
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB824E4", Offset = "0xB824E4", VA = "0xB824E4")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xB8272C", Offset = "0xB8272C", VA = "0xB8272C")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xB829C4", Offset = "0xB829C4", VA = "0xB829C4")]
		private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
		{
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xB82A60", Offset = "0xB82A60", VA = "0xB82A60")]
		private void OnDashStart()
		{
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xB82A6C", Offset = "0xB82A6C", VA = "0xB82A6C")]
		private void OnDashEnd()
		{
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xB82A98", Offset = "0xB82A98", VA = "0xB82A98")]
		public void RestoreAll()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xB82B80", Offset = "0xB82B80", VA = "0xB82B80")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xB82CD8", Offset = "0xB82CD8", VA = "0xB82CD8")]
		private void OnLeftInteractableChanged(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xB82F78", Offset = "0xB82F78", VA = "0xB82F78")]
		private void OnRightInteractableChanged(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xB83218", Offset = "0xB83218", VA = "0xB83218", Slot = "6")]
		protected virtual void PerformUpdate()
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xB83284", Offset = "0xB83284", VA = "0xB83284", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xB83290", Offset = "0xB83290", VA = "0xB83290", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xB833D0", Offset = "0xB833D0", VA = "0xB833D0")]
		public void AttemptMagnetism(ClaymoreEntity entityHit, Vector3 magnetizeVector, float magnetizeAmount)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xB8352C", Offset = "0xB8352C", VA = "0xB8352C")]
		public void StopMagnetism()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xB83534", Offset = "0xB83534", VA = "0xB83534", Slot = "9")]
		protected virtual void OnBeforeRender()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xB83540", Offset = "0xB83540", VA = "0xB83540")]
		public void HandleIncomingAttack(AttackMessage message)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xB83594", Offset = "0xB83594", VA = "0xB83594")]
		public CritPointInstanced HandleCrit(CritMessage message)
		{
			return null;
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xB783D8", Offset = "0xB783D8", VA = "0xB783D8")]
		public void HandleAttackCancellation(Enemy combatant)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xB835EC", Offset = "0xB835EC", VA = "0xB835EC")]
		private void OnDealtDamage()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xB83680", Offset = "0xB83680", VA = "0xB83680")]
		public PlayerCombatant()
		{
		}
	}
}
namespace SG.Claymore.Combat.Blocking
{
	[Token(Token = "0x200030F")]
	public class BlockPremonitionInstanced : Premonition, IBlockable
	{
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD36C", Offset = "0x8CD36C")]
		[SerializeField]
		private Transform[] _blockPoints;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _baseBlockDistanceXYPlane;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _baseBlockDistanceXZPlane;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _lastIsBlocking;

		[Token(Token = "0x170002C7")]
		private Transform[] SG.Claymore.Combat.Blocking.IBlockable.BlockPoints
		{
			[Token(Token = "0x6001442")]
			[Address(RVA = "0xB78690", Offset = "0xB78690", VA = "0xB78690", Slot = "25")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		private float SG.Claymore.Combat.Blocking.IBlockable.BaseBlockDistanceXYPlane
		{
			[Token(Token = "0x6001443")]
			[Address(RVA = "0xB78698", Offset = "0xB78698", VA = "0xB78698", Slot = "26")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C9")]
		private float SG.Claymore.Combat.Blocking.IBlockable.BaseBlockDistanceXZPlane
		{
			[Token(Token = "0x6001444")]
			[Address(RVA = "0xB786A0", Offset = "0xB786A0", VA = "0xB786A0", Slot = "27")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002CA")]
		private Vector3 SG.Claymore.Combat.Blocking.IBlockable.BlockDirection
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xB786A8", Offset = "0xB786A8", VA = "0xB786A8", Slot = "28")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002CB")]
		private Vector3 SG.Claymore.Combat.Blocking.IBlockable.PlaneDirection
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xB786CC", Offset = "0xB786CC", VA = "0xB786CC", Slot = "29")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002CC")]
		public override bool IsSucceeding
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xB786F0", Offset = "0xB786F0", VA = "0xB786F0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xB786F8", Offset = "0xB786F8", VA = "0xB786F8", Slot = "18")]
		public override void StartPremonition(Vector3 localPosition, Vector3 localAngles, Transform newParent, float premonitionDuration)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xB78800", Offset = "0xB78800", VA = "0xB78800", Slot = "19")]
		public override void SetIsSucceeding(bool isBlocking)
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xB78940", Offset = "0xB78940", VA = "0xB78940", Slot = "21")]
		public override void SetIsAbsorbed()
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xB78958", Offset = "0xB78958", VA = "0xB78958", Slot = "22")]
		public override void SetIsSuccess(bool isSuccess)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xB78988", Offset = "0xB78988", VA = "0xB78988", Slot = "23")]
		public override void StopPremonition()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xB789A0", Offset = "0xB789A0", VA = "0xB789A0")]
		public BlockPremonitionInstanced()
		{
		}
	}
	[Token(Token = "0x2000310")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3F44", Offset = "0x8A3F44")]
	public class BlockPremonitionRenderer : PremonitionRenderer
	{
		[Token(Token = "0x200053D")]
		private enum States
		{
			[Token(Token = "0x4002217")]
			Default,
			[Token(Token = "0x4002218")]
			Blocking,
			[Token(Token = "0x4002219")]
			Success,
			[Token(Token = "0x400221A")]
			Failure,
			[Token(Token = "0x400221B")]
			Absorbed
		}

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD3D8", Offset = "0x8CD3D8")]
		[SerializeField]
		private MaterialPropertyReference _fillColorParam;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD424", Offset = "0x8CD424")]
		[SerializeField]
		private MaterialPropertyReference _stateParam;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD470", Offset = "0x8CD470")]
		[SerializeField]
		private MaterialPropertyReference _stretchBaseParam;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD4BC", Offset = "0x8CD4BC")]
		[SerializeField]
		private MaterialPropertyReference _stretchDiamondParam;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD508", Offset = "0x8CD508")]
		[SerializeField]
		private MaterialPropertyReference _baseAlphaParam;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD554", Offset = "0x8CD554")]
		[SerializeField]
		private MaterialPropertyReference _outlineAlphaParam;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD5A0", Offset = "0x8CD5A0")]
		[SerializeField]
		private MaterialPropertyReference _diamondAlphaParam;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD5EC", Offset = "0x8CD5EC")]
		[SerializeField]
		private MaterialPropertyReference _fresnelColorParam;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD638", Offset = "0x8CD638")]
		[SerializeField]
		private MaterialPropertyReference _fresnelFactorParam;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD684", Offset = "0x8CD684")]
		[SerializeField]
		private MaterialPropertyReference _fresnelPowerParam;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD6D0", Offset = "0x8CD6D0")]
		[SerializeField]
		private Color _fillColorDefault;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private Color _fillColorBlocking;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8CD72C", Offset = "0x8CD72C")]
		[SerializeField]
		private Color _fresnelColorDefault;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8CD76C", Offset = "0x8CD76C")]
		[SerializeField]
		private Color _fresnelColorBlocking;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8CD7AC", Offset = "0x8CD7AC")]
		[SerializeField]
		private Color _fresnelColorSuccess;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x8CD7EC", Offset = "0x8CD7EC")]
		[SerializeField]
		private Color _fresnelColorFail;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD82C", Offset = "0x8CD82C")]
		[SerializeField]
		private float _showScaleDuration;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[SerializeField]
		private AnimationCurve _baseAlphaCurveShow;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[SerializeField]
		private AnimationCurve _showScaleCurve;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[SerializeField]
		private AnimationCurve _diamondStretchCurve;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[SerializeField]
		private AnimationCurve _diamondAlphaCurve;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[SerializeField]
		private AnimationCurve _showFresnelPower;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[SerializeField]
		private AnimationCurve _showFresnelFactor;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CD8D8", Offset = "0x8CD8D8")]
		[SerializeField]
		private float _hideAnimationDuration;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private AnimationCurve _baseAlphaCurveHide;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private AnimationCurve _baseStretchCurve;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private AnimationCurve _hideScaleCurve;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private AnimationCurve _hideOutlineCurve;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		private AnimationCurve _hideFillBarCurve;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[SerializeField]
		private AnimationCurve _hideFresnelPower;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[SerializeField]
		private AnimationCurve _hideFresnelFactor;

		[NonSerialized]
		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Vector4[] _fillColors;

		[NonSerialized]
		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float[] _states;

		[NonSerialized]
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float[] _stretchBaseValues;

		[NonSerialized]
		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private float[] _stretchDiamondValues;

		[NonSerialized]
		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float[] _baseAlphas;

		[NonSerialized]
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float[] _outlineAlphas;

		[NonSerialized]
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float[] _diamondAlphas;

		[NonSerialized]
		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float[] _fresnelPowers;

		[NonSerialized]
		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private float[] _fresnelFactors;

		[NonSerialized]
		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private Vector4[] _fresnelColors;

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xB789BC", Offset = "0xB789BC", VA = "0xB789BC", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xB78D64", Offset = "0xB78D64", VA = "0xB78D64", Slot = "5")]
		public override void UpdateLifecycle()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xB78F5C", Offset = "0xB78F5C", VA = "0xB78F5C", Slot = "6")]
		public override void UpdateAnimation()
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xB79AE0", Offset = "0xB79AE0", VA = "0xB79AE0", Slot = "7")]
		public override void Draw()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xB79894", Offset = "0xB79894", VA = "0xB79894")]
		private void UpdateStateFillColor(int i)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xB79D4C", Offset = "0xB79D4C", VA = "0xB79D4C")]
		public BlockPremonitionRenderer()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class BlockPremonitionRendererLQ : PremonitionRenderer
	{
		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD994", Offset = "0x8CD994")]
		[SerializeField]
		protected MaterialPropertyReference _isSucceedingParam;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CD9E0", Offset = "0x8CD9E0")]
		[SerializeField]
		protected MaterialPropertyReference _colorParam;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDA2C", Offset = "0x8CDA2C")]
		[SerializeField]
		private float _startAnimationDuration;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float _endAnimationDuration;

		[NonSerialized]
		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float[] _isSucceeding;

		[NonSerialized]
		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector4[] _colors;

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xB7A348", Offset = "0xB7A348", VA = "0xB7A348", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xB7A3E4", Offset = "0xB7A3E4", VA = "0xB7A3E4", Slot = "5")]
		public override void UpdateLifecycle()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xB7A56C", Offset = "0xB7A56C", VA = "0xB7A56C", Slot = "7")]
		public override void Draw()
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xB7ABC4", Offset = "0xB7ABC4", VA = "0xB7ABC4")]
		public BlockPremonitionRendererLQ()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class BlockTimingData
	{
		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Premonition Premonition;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly bool IsDodgePremonition;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly AttackMessage AttackMessage;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public readonly EngagementSpace PremonitionSpace;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public readonly Vector3 InitialHeadPosition;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public readonly Vector3 InitialHeadLocalPosition;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public readonly Vector3 InitialPlayerSpaceForward;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public readonly int NumSectors;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public readonly float[] SectorBlockTimings;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public readonly bool[] SectorAttacked;

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xB7ABD8", Offset = "0xB7ABD8", VA = "0xB7ABD8")]
		public BlockTimingData(Premonition premonition, bool isDodgePremonition, AttackMessage attack, EngagementSpace engagementSpace, Vector3 initialHeadPosition, Vector3 initialHeadLocalPosition, Vector3 initialPSForward)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xB7ADB0", Offset = "0xB7ADB0", VA = "0xB7ADB0")]
		public bool SectorContainsPoint(int sectorIndex, Vector3 point)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000313")]
	public class DodgePremonitionInstanced : Premonition
	{
		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _lastIsSucceeding;

		[Token(Token = "0x170002CD")]
		public override bool IsSucceeding
		{
			[Token(Token = "0x600145A")]
			[Address(RVA = "0xB7AF54", Offset = "0xB7AF54", VA = "0xB7AF54", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xB7AF5C", Offset = "0xB7AF5C", VA = "0xB7AF5C", Slot = "18")]
		public override void StartPremonition(Vector3 localPosition, Vector3 localAngles, Transform relativeTo, float premonitionDuration)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xB7B060", Offset = "0xB7B060", VA = "0xB7B060", Slot = "19")]
		public override void SetIsSucceeding(bool isDodging)
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xB7B1A0", Offset = "0xB7B1A0", VA = "0xB7B1A0", Slot = "21")]
		public override void SetIsAbsorbed()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xB7B1B8", Offset = "0xB7B1B8", VA = "0xB7B1B8", Slot = "22")]
		public override void SetIsSuccess(bool isSuccess)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xB7B30C", Offset = "0xB7B30C", VA = "0xB7B30C", Slot = "23")]
		public override void StopPremonition()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xB7B324", Offset = "0xB7B324", VA = "0xB7B324", Slot = "24")]
		public override void SetVisualsActive(bool active)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xB7B434", Offset = "0xB7B434", VA = "0xB7B434")]
		public DodgePremonitionInstanced()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class DodgePremonitionRenderer : PremonitionRenderer
	{
		[Token(Token = "0x200053E")]
		private enum States
		{
			[Token(Token = "0x400221D")]
			Default,
			[Token(Token = "0x400221E")]
			Dodging,
			[Token(Token = "0x400221F")]
			Failure,
			[Token(Token = "0x4002220")]
			Success,
			[Token(Token = "0x4002221")]
			Absorbed
		}

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CDA88", Offset = "0x8CDA88")]
		[SerializeField]
		private MaterialPropertyReference _stateParam;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CDAD4", Offset = "0x8CDAD4")]
		[SerializeField]
		private MaterialPropertyReference _glowParam;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CDB20", Offset = "0x8CDB20")]
		[SerializeField]
		private MaterialPropertyReference _alphaParam;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CDB6C", Offset = "0x8CDB6C")]
		[SerializeField]
		private MaterialPropertyReference _outlineScaleParam;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CDBB8", Offset = "0x8CDBB8")]
		[SerializeField]
		private MaterialPropertyReference _arrowScaleParam;

		[NonSerialized]
		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float[] _states;

		[NonSerialized]
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float[] _glowValues;

		[NonSerialized]
		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float[] _alphaValues;

		[NonSerialized]
		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float[] _outlineScaleValues;

		[NonSerialized]
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float[] _arrowScaleValues;

		[NonSerialized]
		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float[] _currentEndDurations;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDC04", Offset = "0x8CDC04")]
		[SerializeField]
		private float _startAnimationDuration;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AnimationCurve _alphaCurveShow;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private AnimationCurve _arrowScaleShow;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDC70", Offset = "0x8CDC70")]
		[SerializeField]
		private float _successAnimationDuration;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[SerializeField]
		private AnimationCurve _alphaCurveSuccess;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private AnimationCurve _glowCurveSuccess;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private AnimationCurve _outlineCurveSuccess;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDCEC", Offset = "0x8CDCEC")]
		[SerializeField]
		private float _failureAnimationDuration;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private AnimationCurve _alphaCurveFail;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private AnimationCurve _glowCurveFail;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDD58", Offset = "0x8CDD58")]
		[SerializeField]
		private float _absorbedAnimationDuration;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[SerializeField]
		private AnimationCurve _hideScaleCurve;

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xB7B43C", Offset = "0xB7B43C", VA = "0xB7B43C", Slot = "4")]
		public override void Initialize(Transform root)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xB7B588", Offset = "0xB7B588", VA = "0xB7B588", Slot = "5")]
		public override void UpdateLifecycle()
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xB7B7EC", Offset = "0xB7B7EC", VA = "0xB7B7EC", Slot = "6")]
		public override void UpdateAnimation()
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xB7C168", Offset = "0xB7C168", VA = "0xB7C168", Slot = "7")]
		public override void Draw()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xB7BEB4", Offset = "0xB7BEB4", VA = "0xB7BEB4")]
		private void UpdateState(int i, float normalizedTime)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xB7C30C", Offset = "0xB7C30C", VA = "0xB7C30C")]
		public DodgePremonitionRenderer()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public interface IBlockable
	{
		[Token(Token = "0x170002CE")]
		Transform[] BlockPoints
		{
			[Token(Token = "0x6001468")]
			get;
		}

		[Token(Token = "0x170002CF")]
		float BaseBlockDistanceXYPlane
		{
			[Token(Token = "0x6001469")]
			get;
		}

		[Token(Token = "0x170002D0")]
		float BaseBlockDistanceXZPlane
		{
			[Token(Token = "0x600146A")]
			get;
		}

		[Token(Token = "0x170002D1")]
		Vector3 BlockDirection
		{
			[Token(Token = "0x600146B")]
			get;
		}

		[Token(Token = "0x170002D2")]
		Vector3 PlaneDirection
		{
			[Token(Token = "0x600146C")]
			get;
		}
	}
	[Token(Token = "0x2000316")]
	public class PlayerDefense : MonoBehaviour
	{
		[Token(Token = "0x200053F")]
		public struct HitDamageHandle
		{
			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Enemy Attacker;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float Damage;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool AbsorbedByBulwark;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<PlayerHitProperty> PlayerHitProperties;

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x9666E4", Offset = "0x9666E4", VA = "0x9666E4")]
			public HitDamageHandle(Enemy attacker, float damage, List<PlayerHitProperty> playerHitProperties)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1AC", Offset = "0x8AB1AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__58_0;

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xB7F8F8", Offset = "0xB7F8F8", VA = "0xB7F8F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xB7F900", Offset = "0xB7F900", VA = "0xB7F900")]
			internal void <.ctor>b__58_0(object o)
			{
			}
		}

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDDB4", Offset = "0x8CDDB4")]
		[SerializeField]
		private VisualKeyData blockedAttackVFXKey;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDE00", Offset = "0x8CDE00")]
		[SerializeField]
		private FloatVariable remainingKnockback;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public FloatReference MinKnockbackRate;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FloatReference MaxKnockbackRate;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinKnockbackDistance;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float MaxKnockbackDistance;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve KnockbackInterpolationCurve;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FloatVariable PlayerSpeedVariable;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatGlobalEvent PushPlayerBackEvent;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CameraShakeRequestAsset onBlockCameraShake;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float deathKnockbackDistance;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDE6C", Offset = "0x8CDE6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDE6C", Offset = "0x8CDE6C")]
		public FloatGlobalEvent HitBySlashEvent;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CDECC", Offset = "0x8CDECC")]
		public BoolVariable PlayerBlockedAttack;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FloatVariable bulwarkKnockbackMultiplier;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private PremonitionGlobalEvent startPremonitionGlobalEvent;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatVariable playerBlockRating;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private FloatVariable playerHitsTakenThisRoom;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDF34", Offset = "0x8CDF34")]
		[SerializeField]
		private XRPlatformManager platformManager;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PremonitionController premonitionController;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDF90", Offset = "0x8CDF90")]
		[SerializeField]
		private AchievementAsset meleeBlocksAchievement;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AchievementAsset dodgesAchievement;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CDFEC", Offset = "0x8CDFEC")]
		public bool LogAttackResults;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public StringGlobalEvent LogMessageEvent;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool ForceDodgeVisuals;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		[SerializeField]
		private bool disableKnockback;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PlayerCombatant playerCombatant;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CE034", Offset = "0x8CE034")]
		[SerializeField]
		private QuickButton testPlayerHit;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly Dictionary<Enemy, Vector3> sampledHeadPositions;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly Dictionary<Enemy, Vector3> sampledHeadLocalPositions;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly List<BlockTimingData> currentBlockTimings;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private readonly List<BlockTimingData> blockTimingsToRemove;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private PlayerHealth health;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private BoolVariable instancedBlockedAttack;

		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private FloatVariable instancedMinKnockbackRate;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private FloatVariable instancedMaxKnockbackRate;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private FloatVariable instancedPlayerSpeed;

		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Vector3 knockbackVector;

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xB7C5BC", Offset = "0xB7C5BC", VA = "0xB7C5BC")]
		public void Initialize(PlayerCombatant player)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xB7C5C4", Offset = "0xB7C5C4", VA = "0xB7C5C4")]
		private void Start()
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xB77F80", Offset = "0xB77F80", VA = "0xB77F80")]
		public void SampleHeadPosition(Enemy enemy)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xB7C7A4", Offset = "0xB7C7A4", VA = "0xB7C7A4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xB7C7C8", Offset = "0xB7C7C8", VA = "0xB7C7C8")]
		private void UpdateBlockTimings()
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xB7DC0C", Offset = "0xB7DC0C", VA = "0xB7DC0C")]
		private AttackBlocker GetBestBlocker(IBlockable blockable, float angleLeeway)
		{
			return null;
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xB7D318", Offset = "0xB7D318", VA = "0xB7D318")]
		private bool CheckDodge(BlockTimingData blockTiming)
		{
			return default(bool);
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xB7D61C", Offset = "0xB7D61C", VA = "0xB7D61C")]
		private void OnAttackDodged(BlockTimingData blockTiming)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0xB7DD68", Offset = "0xB7DD68", VA = "0xB7DD68")]
		private void OnAttackBlocked(BlockTimingData blockTiming, AttackBlocker blocker)
		{
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0xB7D97C", Offset = "0xB7D97C", VA = "0xB7D97C")]
		private void OnAttackHit(BlockTimingData blockTiming)
		{
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0xB7E64C", Offset = "0xB7E64C", VA = "0xB7E64C")]
		public HitResult OnPlayerHit(HitDamageHandle damageHandle)
		{
			return null;
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xB7E314", Offset = "0xB7E314", VA = "0xB7E314")]
		private void OnAttackDisplacementDodge(BlockTimingData blockTiming)
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xB7D058", Offset = "0xB7D058", VA = "0xB7D058")]
		private void UpdateKnockback()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xB7E4F0", Offset = "0xB7E4F0", VA = "0xB7E4F0")]
		private void DoKnockback(BlockTimingData blockTiming, bool blocked)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xB7EA94", Offset = "0xB7EA94", VA = "0xB7EA94")]
		public void KnockbackPlayer(Vector3 knockbackDirection, float knockbackDistance)
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xB7EB40", Offset = "0xB7EB40", VA = "0xB7EB40")]
		public void OnDeathKnockbackPlayer()
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xB7EC1C", Offset = "0xB7EC1C", VA = "0xB7EC1C")]
		private float GetBlockRating()
		{
			return default(float);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xB7ED88", Offset = "0xB7ED88", VA = "0xB7ED88")]
		public void HandleAttack(AttackMessage message)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xB7F350", Offset = "0xB7F350", VA = "0xB7F350")]
		public void CancelAttacksFromCombatant(Enemy enemy)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xB7F4D4", Offset = "0xB7F4D4", VA = "0xB7F4D4")]
		public void CancelAllAttacks()
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB7F624", Offset = "0xB7F624", VA = "0xB7F624")]
		public PlayerDefense()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public abstract class Premonition : MonoBehaviour, IOffscreenIndicator
	{
		[Token(Token = "0x2000541")]
		public enum PremonitionResults
		{
			[Token(Token = "0x4002229")]
			None,
			[Token(Token = "0x400222A")]
			Canceled,
			[Token(Token = "0x400222B")]
			Success,
			[Token(Token = "0x400222C")]
			Failed,
			[Token(Token = "0x400222D")]
			Absorbed
		}

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE06C", Offset = "0x8CE06C")]
		[SerializeField]
		protected Transform _visuals;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected IntVariable _premonitionSuppression;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE0C8", Offset = "0x8CE0C8")]
		[SerializeField]
		protected AudioKeyData _onPremonitionShowSFXKey;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected AudioKeyData _onIsSucceedingSFXKey;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected AudioKeyData _onSuccessSFXKey;

		[NonSerialized]
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected PremonitionResults _currentResult;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE134", Offset = "0x8CE134")]
		private float <StartTime>k__BackingField;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE144", Offset = "0x8CE144")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE154", Offset = "0x8CE154")]
		private bool <IsInRange>k__BackingField;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE164", Offset = "0x8CE164")]
		private float <Duration>k__BackingField;

		[Token(Token = "0x170002D3")]
		public Transform Visuals
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xB7F9D8", Offset = "0xB7F9D8", VA = "0xB7F9D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D4")]
		public PremonitionResults CurrentResult
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0xB7F9E0", Offset = "0xB7F9E0", VA = "0xB7F9E0")]
			get
			{
				return default(PremonitionResults);
			}
		}

		[Token(Token = "0x170002D5")]
		private bool SG.Claymore.Combat.IOffscreenIndicator.CheckSideAngle
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xB7F9E8", Offset = "0xB7F9E8", VA = "0xB7F9E8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D6")]
		public virtual float StartTime
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0xB7F9F0", Offset = "0xB7F9F0", VA = "0xB7F9F0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24B4", Offset = "0x8E24B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xB7F9F8", Offset = "0xB7F9F8", VA = "0xB7F9F8", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24C4", Offset = "0x8E24C4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D7")]
		public virtual bool IsActive
		{
			[Token(Token = "0x6001487")]
			[Address(RVA = "0xB7FA00", Offset = "0xB7FA00", VA = "0xB7FA00", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24D4", Offset = "0x8E24D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001488")]
			[Address(RVA = "0xB7FA08", Offset = "0xB7FA08", VA = "0xB7FA08", Slot = "12")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24E4", Offset = "0x8E24E4")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public virtual bool IsInRange
		{
			[Token(Token = "0x6001489")]
			[Address(RVA = "0xB7FA14", Offset = "0xB7FA14", VA = "0xB7FA14", Slot = "13")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E24F4", Offset = "0x8E24F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600148A")]
			[Address(RVA = "0xB7FA1C", Offset = "0xB7FA1C", VA = "0xB7FA1C", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2504", Offset = "0x8E2504")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public virtual float Duration
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0xB7FA28", Offset = "0xB7FA28", VA = "0xB7FA28", Slot = "15")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2514", Offset = "0x8E2514")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xB7FA30", Offset = "0xB7FA30", VA = "0xB7FA30", Slot = "16")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2524", Offset = "0x8E2524")]
			protected set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public Vector3 Position
		{
			[Token(Token = "0x600148D")]
			[Address(RVA = "0xB7FA38", Offset = "0xB7FA38", VA = "0xB7FA38", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002DB")]
		public abstract bool IsSucceeding
		{
			[Token(Token = "0x600148E")]
			get;
		}

		[Token(Token = "0x600148F")]
		public abstract void StartPremonition(Vector3 localPosition, Vector3 localAngles, Transform relativeTo, float premonitionDuration);

		[Token(Token = "0x6001490")]
		public abstract void SetIsSucceeding(bool isSucceeding);

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xB7FA5C", Offset = "0xB7FA5C", VA = "0xB7FA5C", Slot = "20")]
		public virtual void SetIsInRange(bool inRange)
		{
		}

		[Token(Token = "0x6001492")]
		public abstract void SetIsAbsorbed();

		[Token(Token = "0x6001493")]
		public abstract void SetIsSuccess(bool isSuccess);

		[Token(Token = "0x6001494")]
		public abstract void StopPremonition();

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xB7FA70", Offset = "0xB7FA70", VA = "0xB7FA70", Slot = "24")]
		public virtual void SetVisualsActive(bool active)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xB789B4", Offset = "0xB789B4", VA = "0xB789B4")]
		protected Premonition()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class PremonitionOffscreenIndicatorInstanced : XRNodeTracker, IResourceLoadHandler<PremonitionOffscreenIndicatorRenderer>, IResourceLoadHandler
	{
		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE174", Offset = "0x8CE174")]
		[SerializeField]
		private XRPlatformManager _platformManager;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE1C0", Offset = "0x8CE1C0")]
		[SerializeField]
		private IntVariable _premonitionSuppression;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PremonitionGlobalEvent _startPremonitionGlobalEvent;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private EnemyProjectileGlobalEvent _enemyProjectileGlobalEvent;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GroundAttackHandler _groundAttackHandler;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE23C", Offset = "0x8CE23C")]
		[SerializeField]
		private Transform _leftIndicatorElement;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform _rightIndicatorElement;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _bottomIndicatorElement;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE2A8", Offset = "0x8CE2A8")]
		[SerializeField]
		private ResourceRequestKey _offscreenPremonitionRendererKey;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ResourceLoadingController _resourceLoadingController;

		[NonSerialized]
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PremonitionOffscreenIndicatorRenderer _offscreenIndicatorRenderer;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly List<IOffscreenIndicator> _activePremonitions;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _leftInitialPos;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 _rightInitialPos;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 _bottomInitialPos;

		[NonSerialized]
		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool _isReady;

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xB7FBA0", Offset = "0xB7FBA0", VA = "0xB7FBA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xB7FCA8", Offset = "0xB7FCA8", VA = "0xB7FCA8", Slot = "7")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xB7FDC8", Offset = "0xB7FDC8", VA = "0xB7FDC8", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xB7FF20", Offset = "0xB7FF20", VA = "0xB7FF20", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xB80068", Offset = "0xB80068", VA = "0xB80068")]
		private void Start()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xB80230", Offset = "0xB80230", VA = "0xB80230")]
		private void Update()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xB8118C", Offset = "0xB8118C", VA = "0xB8118C")]
		private void StartPremonition(Premonition premonition)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xB811F4", Offset = "0xB811F4", VA = "0xB811F4")]
		private void ProjectileFired(EnemyProjectile enemyProjectile)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xB8125C", Offset = "0xB8125C", VA = "0xB8125C")]
		private void GroundAttackFired(GroundAttackGroup groundAttackGroup)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xB81368", Offset = "0xB81368", VA = "0xB81368")]
		public PremonitionOffscreenIndicatorInstanced()
		{
		}
	}
	[Token(Token = "0x2000319")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A3FA4", Offset = "0x8A3FA4")]
	public class PremonitionOffscreenIndicatorRenderer : ScriptableObject
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE304", Offset = "0x8CE304")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material _material;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CE360", Offset = "0x8CE360")]
		[SerializeField]
		protected MaterialPropertyReference _rotationParam;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CE3AC", Offset = "0x8CE3AC")]
		[SerializeField]
		protected MaterialPropertyReference _alphaParam;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CE3F8", Offset = "0x8CE3F8")]
		[SerializeField]
		protected MaterialPropertyReference _scaleParam;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE444", Offset = "0x8CE444")]
		[SerializeField]
		private float _startAnimationDuration;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE490", Offset = "0x8CE490")]
		[SerializeField]
		private float _hideAnimationDuration;

		[NonSerialized]
		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly float[] _alphas;

		[NonSerialized]
		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly float[] _scales;

		[NonSerialized]
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly float[] _rotations;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool _isLeftVisible;

		[NonSerialized]
		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool _isRightVisible;

		[NonSerialized]
		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		private bool _isBottomVisible;

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xB7FD60", Offset = "0xB7FD60", VA = "0xB7FD60")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xB804AC", Offset = "0xB804AC", VA = "0xB804AC")]
		public void DoUpdate(List<IOffscreenIndicator> activePremonitions, Pose pose, float lateralAngle)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xB80E04", Offset = "0xB80E04", VA = "0xB80E04")]
		public void Draw(Transform left, Transform right, Transform bottom)
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xB813E8", Offset = "0xB813E8", VA = "0xB813E8")]
		public PremonitionOffscreenIndicatorRenderer()
		{
		}
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4004", Offset = "0x8A4004")]
	public class PremonitionRenderer : ScriptableObject
	{
		[Token(Token = "0x4001576")]
		protected const int MAX_INSTANCED = 8;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE4DC", Offset = "0x8CE4DC")]
		[SerializeField]
		protected Premonition _premonitionPrefab;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Mesh _mesh;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Material _material;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CE548", Offset = "0x8CE548")]
		[SerializeField]
		protected MaterialPropertyReference _fillParam;

		[NonSerialized]
		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected MaterialPropertyBlock _propertyBlock;

		[NonSerialized]
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Premonition.PremonitionResults[] _currentResults;

		[NonSerialized]
		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Matrix4x4[] _matrices;

		[NonSerialized]
		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] _isActive;

		[NonSerialized]
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float[] _timeStarted;

		[NonSerialized]
		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected float[] _timeEnded;

		[NonSerialized]
		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected float[] _fills;

		[NonSerialized]
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected readonly Premonition[] _currentPremonitions;

		[NonSerialized]
		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _lastActiveIndex;

		[NonSerialized]
		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		protected byte _isDrawing;

		[NonSerialized]
		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform _currentRoot;

		[NonSerialized]
		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected bool _isReady;

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xB78B38", Offset = "0xB78B38", VA = "0xB78B38", Slot = "4")]
		public virtual void Initialize(Transform root)
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xB815B4", Offset = "0xB815B4", VA = "0xB815B4", Slot = "5")]
		public virtual void UpdateLifecycle()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xB815B8", Offset = "0xB815B8", VA = "0xB815B8", Slot = "6")]
		public virtual void UpdateAnimation()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xB815BC", Offset = "0xB815BC", VA = "0xB815BC", Slot = "7")]
		public virtual void Draw()
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xB815C0", Offset = "0xB815C0", VA = "0xB815C0")]
		public Premonition HandleRequest(Vector3 localPos, Vector3 angle, Transform spaceTransform, float duration)
		{
			return null;
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xB7AB30", Offset = "0xB7AB30", VA = "0xB7AB30")]
		protected Color GetColor(int index)
		{
			return default(Color);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xB7A2A0", Offset = "0xB7A2A0", VA = "0xB7A2A0")]
		public PremonitionRenderer()
		{
		}
	}
}
namespace SG.Claymore.Bindings
{
	[Token(Token = "0x200031B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4064", Offset = "0x8A4064")]
	public class ExposedAnimator : ScriptableObject
	{
		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8CE594", Offset = "0x8CE594")]
		public string Notes;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xB74018", Offset = "0xB74018", VA = "0xB74018")]
		public ExposedAnimator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031C")]
	public class ExposedAnimatorMap
	{
		[Serializable]
		[Token(Token = "0x2000542")]
		public class AnimatorBinding
		{
			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDB70", Offset = "0x8DDB70")]
			public ExposedAnimator ExposedAnimator;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDBA8", Offset = "0x8DDBA8")]
			public Animator BoundAnimator;

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xB7437C", Offset = "0xB7437C", VA = "0xB7437C")]
			public AnimatorBinding()
			{
			}
		}

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnimatorBinding> Bindings;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ExposedAnimator, Animator> _bindMap;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xB74020", Offset = "0xB74020", VA = "0xB74020")]
		public Animator GetBoundAnimator(ExposedAnimator exposedAnimator)
		{
			return null;
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xB74270", Offset = "0xB74270", VA = "0xB74270")]
		public bool Contains(ExposedAnimator exposedAnimator)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xB74120", Offset = "0xB74120", VA = "0xB74120")]
		private void BuildBindMap()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xB74300", Offset = "0xB74300", VA = "0xB74300")]
		public ExposedAnimatorMap()
		{
		}
	}
	[Token(Token = "0x200031D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A40C4", Offset = "0x8A40C4")]
	public class ExposedRenderer : ScriptableObject
	{
		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8CE5AC", Offset = "0x8CE5AC")]
		public string Notes;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xB74384", Offset = "0xB74384", VA = "0xB74384")]
		public ExposedRenderer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200031E")]
	public class ExposedRendererMap
	{
		[Serializable]
		[Token(Token = "0x2000543")]
		public class RendererBinding
		{
			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDBE0", Offset = "0x8DDBE0")]
			public ExposedRenderer RendererObject;

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC18", Offset = "0x8DDC18")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8DDC18", Offset = "0x8DDC18")]
			[SerializeField]
			private Renderer[] renderers;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDC88", Offset = "0x8DDC88")]
			public int SubmeshIndex;

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xB746E8", Offset = "0xB746E8", VA = "0xB746E8")]
			public void SetEnabled(bool enabled)
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xB74764", Offset = "0xB74764", VA = "0xB74764")]
			public void Revert(Material original, int submesh)
			{
			}

			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0xB74870", Offset = "0xB74870", VA = "0xB74870")]
			public void ApplyColor(MaterialPropertyBlock block, int submesh, int propID, Color color)
			{
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xB7495C", Offset = "0xB7495C", VA = "0xB7495C")]
			public void ApplyAnimation(MaterialPropertyBlock block, int submesh, MaterialTrackEvent.PropertyAnimation[] PropertyAnimations, float normalizedTime)
			{
			}

			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0xB74A5C", Offset = "0xB74A5C", VA = "0xB74A5C")]
			public Material CloneMaterial(int submesh, Shader newShader)
			{
				return null;
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xB74C04", Offset = "0xB74C04", VA = "0xB74C04")]
			public RendererBinding()
			{
			}
		}

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<RendererBinding> Bindings;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ExposedRenderer, RendererBinding> bindMap;

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xB7438C", Offset = "0xB7438C", VA = "0xB7438C")]
		public RendererBinding GetBoundRenderer(ExposedRenderer rendererObject)
		{
			return null;
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xB745DC", Offset = "0xB745DC", VA = "0xB745DC")]
		public bool ContainsRenderer(ExposedRenderer exposedRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0xB7448C", Offset = "0xB7448C", VA = "0xB7448C")]
		private void BuildBindMap()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xB7466C", Offset = "0xB7466C", VA = "0xB7466C")]
		public ExposedRendererMap()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A4124", Offset = "0x8A4124")]
	public class ExposedTransformConstraint : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClaymoreEntity BindingEntity;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedTransformPoint TargetTransform;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CE5D4", Offset = "0x8CE5D4")]
		public bool AutoUpdate;

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xB74C78", Offset = "0xB74C78", VA = "0xB74C78")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xB74D04", Offset = "0xB74D04", VA = "0xB74D04")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E2534", Offset = "0x8E2534")]
		private void UpdateParentConstraint()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xB75094", Offset = "0xB75094", VA = "0xB75094")]
		public ExposedTransformConstraint()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public interface ITransformMap
	{
		[Token(Token = "0x60014B9")]
		Transform GetBoundTransform(ExposedTransformPoint point);

		[Token(Token = "0x60014BA")]
		bool ContainsPoint(ExposedTransformPoint point);
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public class ExposedTransformMap : ITransformMap
	{
		[Serializable]
		[Token(Token = "0x2000544")]
		public class TransformBinding
		{
			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDCC0", Offset = "0x8DDCC0")]
			public ExposedTransformPoint Point;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DDCF8", Offset = "0x8DDCF8")]
			public Transform BoundTransform;

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xB753A8", Offset = "0xB753A8", VA = "0xB753A8")]
			public TransformBinding()
			{
			}
		}

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private List<TransformBinding> Bindings;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<ExposedTransformPoint, Transform> bindMap;

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xB74F94", Offset = "0xB74F94", VA = "0xB74F94", Slot = "4")]
		public Transform GetBoundTransform(ExposedTransformPoint point)
		{
			return null;
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xB751F4", Offset = "0xB751F4", VA = "0xB751F4")]
		public void Merge(ExposedTransformMap additive)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xB74F04", Offset = "0xB74F04", VA = "0xB74F04", Slot = "5")]
		public bool ContainsPoint(ExposedTransformPoint point)
		{
			return default(bool);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xB750A4", Offset = "0xB750A4", VA = "0xB750A4")]
		private void BuildBindMap()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xB753B0", Offset = "0xB753B0", VA = "0xB753B0")]
		public ExposedTransformMap()
		{
		}
	}
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4188", Offset = "0x8A4188")]
	public class ExposedTransformPoint : ScriptableObject
	{
		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8CE5F4", Offset = "0x8CE5F4")]
		public string Notes;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE60C", Offset = "0x8CE60C")]
		public string[] autobindHints;

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xB7542C", Offset = "0xB7542C", VA = "0xB7542C")]
		public ExposedTransformPoint()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public class TransformVariableMapper : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000545")]
		public class TransformVariableBinding
		{
			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool IsEnabled;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform Transform;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TransformVariable TranformVariable;

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xB75910", Offset = "0xB75910", VA = "0xB75910")]
			public TransformVariableBinding()
			{
			}
		}

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransformVariableBinding[] _map;

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xB7581C", Offset = "0xB7581C", VA = "0xB7581C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xB758A4", Offset = "0xB758A4", VA = "0xB758A4")]
		public TransformVariableMapper()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class TransformVariableSetter : MonoBehaviour
	{
		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsEnabled;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TransformVariable TransformVariable;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xB75920", Offset = "0xB75920", VA = "0xB75920")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xB75974", Offset = "0xB75974", VA = "0xB75974")]
		public TransformVariableSetter()
		{
		}
	}
}
namespace SG.Claymore.Bindings.TransformBinding
{
	[Token(Token = "0x2000325")]
	public class ExposedTransformTracker : MonoBehaviour
	{
		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ClaymoreEntity BindingEntity;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ExposedTransformPoint TargetTransform;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool AutoUpdate;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform cachedTransform;

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xB75498", Offset = "0xB75498", VA = "0xB75498")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xB755CC", Offset = "0xB755CC", VA = "0xB755CC")]
		public void UpdateTracking()
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xB75670", Offset = "0xB75670", VA = "0xB75670")]
		public void Cache(ClaymoreEntity enemy)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xB756B0", Offset = "0xB756B0", VA = "0xB756B0")]
		public ExposedTransformTracker()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public class ImportedBoneTracker : MonoBehaviour
	{
		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform root;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CE674", Offset = "0x8CE674")]
		[SerializeField]
		private string lastTargetName;

		[NonSerialized]
		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool validTransform;

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xB756C0", Offset = "0xB756C0", VA = "0xB756C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xB7573C", Offset = "0xB7573C", VA = "0xB7573C")]
		public void Update()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xB75814", Offset = "0xB75814", VA = "0xB75814")]
		public ImportedBoneTracker()
		{
		}
	}
}
namespace SG.Claymore.Dynamics
{
	[Token(Token = "0x2000327")]
	public class PlantFeet : MonoBehaviour
	{
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1BC", Offset = "0x8AB1BC")]
		private sealed class <DoUnplant>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlantFeet <>4__this;

			[Token(Token = "0x17000483")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA5")]
				[Address(RVA = "0xBAC370", Offset = "0xBAC370", VA = "0xBAC370", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000484")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA7")]
				[Address(RVA = "0xBAC3D8", Offset = "0xBAC3D8", VA = "0xBAC3D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xBABFA4", Offset = "0xBABFA4", VA = "0xBABFA4")]
			[DebuggerHidden]
			public <DoUnplant>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xBAC278", Offset = "0xBAC278", VA = "0xBAC278", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA4")]
			[Address(RVA = "0xBAC27C", Offset = "0xBAC27C", VA = "0xBAC27C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0xBAC378", Offset = "0xBAC378", VA = "0xBAC378", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1CC", Offset = "0x8AB1CC")]
		private sealed class <DoPlantForSeconds>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400223B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400223C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float plantDuration;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlantFeet <>4__this;

			[Token(Token = "0x17000485")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DAB")]
				[Address(RVA = "0xBAC208", Offset = "0xBAC208", VA = "0xBAC208", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000486")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAD")]
				[Address(RVA = "0xBAC270", Offset = "0xBAC270", VA = "0xBAC270", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0xBAC0D8", Offset = "0xBAC0D8", VA = "0xBAC0D8")]
			[DebuggerHidden]
			public <DoPlantForSeconds>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0xBAC11C", Offset = "0xBAC11C", VA = "0xBAC11C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0xBAC120", Offset = "0xBAC120", VA = "0xBAC120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0xBAC210", Offset = "0xBAC210", VA = "0xBAC210", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE6B0", Offset = "0x8CE6B0")]
		public bool FootPlantEnabled;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FullBodyBipedIK FBIK;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform LeftFoot;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RightFoot;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float UnplantRate;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float footBlend;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IEnumerator runningCoroutine;

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xBAB9B0", Offset = "0xBAB9B0", VA = "0xBAB9B0")]
		private void SetIKBlend(float blend)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xBABA5C", Offset = "0xBABA5C", VA = "0xBABA5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E256C", Offset = "0x8E256C")]
		public void SetUpFeet()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xBABC7C", Offset = "0xBABC7C", VA = "0xBABC7C")]
		private void UpdateFootIK()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xBABE34", Offset = "0xBABE34", VA = "0xBABE34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E25A4", Offset = "0x8E25A4")]
		public void Plant()
		{
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xBABE70", Offset = "0xBABE70", VA = "0xBABE70")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E25DC", Offset = "0x8E25DC")]
		public void UnPlant()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xBABF54", Offset = "0xBABF54", VA = "0xBABF54")]
		public void ForceUnplant()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xBABED8", Offset = "0xBABED8", VA = "0xBABED8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2614", Offset = "0x8E2614")]
		private IEnumerator DoUnplant()
		{
			return null;
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xBABFD0", Offset = "0xBABFD0", VA = "0xBABFD0")]
		public void PlantForSeconds(float plantDuration)
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xBAC04C", Offset = "0xBAC04C", VA = "0xBAC04C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2678", Offset = "0x8E2678")]
		private IEnumerator DoPlantForSeconds(float plantDuration)
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xBAC104", Offset = "0xBAC104", VA = "0xBAC104")]
		public PlantFeet()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class ClaymoreActivateRigidbodies : MonoBehaviour
	{
		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Rigidbody> Bodies;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE6E8", Offset = "0x8CE6E8")]
		public float BodyDeactivateDelay;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool AutoCleanup;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AutoCleanupWaitTime;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnCleanupStart;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool cleanupWait;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool cleaningUp;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float remainingTime;

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xCCC5DC", Offset = "0xCCC5DC", VA = "0xCCC5DC")]
		public void StartCrumbleSequence()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xCCC618", Offset = "0xCCC618", VA = "0xCCC618")]
		public void SetKinematic(bool isKinematic)
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xCCC6BC", Offset = "0xCCC6BC", VA = "0xCCC6BC")]
		public void CleanupBodies()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xCCC7D0", Offset = "0xCCC7D0", VA = "0xCCC7D0")]
		private void Update()
		{
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xCCC8D0", Offset = "0xCCC8D0", VA = "0xCCC8D0")]
		public ClaymoreActivateRigidbodies()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class IKHand
	{
		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1DC", Offset = "0x8AB1DC")]
		private sealed class <HandTargetTransitionCoroutine>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IKHand <>4__this;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform newTarget;

			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <initPos>5__2;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <initRot>5__3;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <time>5__4;

			[Token(Token = "0x17000487")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB1")]
				[Address(RVA = "0xBAAAC8", Offset = "0xBAAAC8", VA = "0xBAAAC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000488")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB3")]
				[Address(RVA = "0xBAAB30", Offset = "0xBAAB30", VA = "0xBAAB30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0xBAA798", Offset = "0xBAA798", VA = "0xBAA798")]
			[DebuggerHidden]
			public <HandTargetTransitionCoroutine>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0xBAA7C4", Offset = "0xBAA7C4", VA = "0xBAA7C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB0")]
			[Address(RVA = "0xBAA7C8", Offset = "0xBAA7C8", VA = "0xBAA7C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB2")]
			[Address(RVA = "0xBAAAD0", Offset = "0xBAAAD0", VA = "0xBAAAD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ClaymoreVRIK Owner;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsHolding;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coroutine MoveToTargetRoutine;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform defaultTarget;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform avatarHandTarget;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transitionHandTarget;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform handOffset;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool isLeft;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HandInteractable heldInteractable;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _playerSpace;

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xBA94B8", Offset = "0xBA94B8", VA = "0xBA94B8")]
		public IKHand(ClaymoreVRIK owner, bool isLeft, Transform playerSpaceParentTransform)
		{
		}

		[Token(Token = "0x60014DC")]
		[Address(RVA = "0xBAA178", Offset = "0xBAA178", VA = "0xBAA178")]
		public void InitTransforms(Transform parent)
		{
		}

		[Token(Token = "0x60014DD")]
		[Address(RVA = "0xBAA358", Offset = "0xBAA358", VA = "0xBAA358")]
		private void ResetHandOffset()
		{
		}

		[Token(Token = "0x60014DE")]
		[Address(RVA = "0xBAA394", Offset = "0xBAA394", VA = "0xBAA394")]
		private void UpdateOffsets()
		{
		}

		[Token(Token = "0x60014DF")]
		[Address(RVA = "0xBAA4EC", Offset = "0xBAA4EC", VA = "0xBAA4EC")]
		public void UpdateHandPose(Pose pose)
		{
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xBAA5B8", Offset = "0xBAA5B8", VA = "0xBAA5B8")]
		public void OnInteractableChange(HandInteractable interactable)
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xBAA700", Offset = "0xBAA700", VA = "0xBAA700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E26DC", Offset = "0x8E26DC")]
		private IEnumerator HandTargetTransitionCoroutine(Transform newTarget)
		{
			return null;
		}
	}
	[Token(Token = "0x200032A")]
	public class ClaymoreProp : MonoBehaviour
	{
		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1EC", Offset = "0x8AB1EC")]
		private sealed class <DropCoroutine>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClaymoreProp <>4__this;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <lastPos>5__2;

			[Token(Token = "0x400224A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <lastRot>5__3;

			[Token(Token = "0x400224B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <currentPos>5__4;

			[Token(Token = "0x400224C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <currentRot>5__5;

			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <time>5__6;

			[Token(Token = "0x17000489")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB7")]
				[Address(RVA = "0xCCD334", Offset = "0xCCD334", VA = "0xCCD334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0xCCD39C", Offset = "0xCCD39C", VA = "0xCCD39C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xCCCD1C", Offset = "0xCCCD1C", VA = "0xCCCD1C")]
			[DebuggerHidden]
			public <DropCoroutine>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xCCCE70", Offset = "0xCCCE70", VA = "0xCCCE70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xCCCE74", Offset = "0xCCCE74", VA = "0xCCCE74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xCCD33C", Offset = "0xCCD33C", VA = "0xCCD33C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _animatedRoot;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _collision;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Collider[] _collisionColliders;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Layer _dropLayerCollision;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Layer _defaultCollisionLayer;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE780", Offset = "0x8CE780")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8CE7CC", Offset = "0x8CE7CC")]
		[SerializeField]
		private MaterialPropertyReference _dissolveProperty;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float _dissolveTime;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float _dissolveDelay;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xCCCA58", Offset = "0xCCCA58", VA = "0xCCCA58")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xCCCB34", Offset = "0xCCCB34", VA = "0xCCCB34")]
		private void Equip()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xCCCC74", Offset = "0xCCCC74", VA = "0xCCCC74")]
		public void Drop()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xCCCCA0", Offset = "0xCCCCA0", VA = "0xCCCCA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2740", Offset = "0x8E2740")]
		private IEnumerator DropCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xCCCD48", Offset = "0xCCCD48", VA = "0xCCCD48")]
		private void SetDissolveValue(float newValue)
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xCCCDC0", Offset = "0xCCCDC0", VA = "0xCCCDC0")]
		public ClaymoreProp()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032B")]
	public class ClaymoreMuscleSettings
	{
		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Muscle.Group[] Groups;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MuscleConfig UnpinnedConfig;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public MuscleConfig PinnedConfig;

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xCCC95C", Offset = "0xCCC95C", VA = "0xCCC95C")]
		public ClaymoreMuscleSettings()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xCCC9C8", Offset = "0xCCC9C8", VA = "0xCCC9C8")]
		public MuscleConfig GetConfigLerp(float lerpValue)
		{
			return default(MuscleConfig);
		}
	}
	[Serializable]
	[Token(Token = "0x200032C")]
	public struct MuscleConfig
	{
		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE848", Offset = "0x8CE848")]
		public float MappingWeight;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE860", Offset = "0x8CE860")]
		public float PinWeight;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE878", Offset = "0x8CE878")]
		public float MuscleWeight;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CE890", Offset = "0x8CE890")]
		public float MuscleDamper;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool MapPosition;

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x9668CC", Offset = "0x9668CC", VA = "0x9668CC")]
		public void Set(float mapWeight, float pinWeight, float muscleWeight, float muscleDamp, bool mapPos)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x9668E0", Offset = "0x9668E0", VA = "0x9668E0")]
		public void SetToLerp(MuscleConfig A, MuscleConfig B, float lerpValue)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class ClaymorePuppet : MonoBehaviour, IEntityComponent, IBaseEntityComponent<ClaymoreEntity>, IBaseEntityComponent
	{
		[Serializable]
		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB1FC", Offset = "0x8AB1FC")]
		private sealed class <>c
		{
			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<object> <>9__59_0;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<object> <>9__59_1;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<object> <>9__59_2;

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xBA8FD8", Offset = "0xBA8FD8", VA = "0xBA8FD8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xBA8FE0", Offset = "0xBA8FE0", VA = "0xBA8FE0")]
			internal void <.ctor>b__59_0(object input)
			{
			}

			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0xBA9068", Offset = "0xBA9068", VA = "0xBA9068")]
			internal void <.ctor>b__59_1(object input)
			{
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xBA90F0", Offset = "0xBA90F0", VA = "0xBA90F0")]
			internal void <.ctor>b__59_2(object input)
			{
			}
		}

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8CE8A8", Offset = "0x8CE8A8")]
		private ClaymoreEntity <Entity>k__BackingField;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE8B8", Offset = "0x8CE8B8")]
		public PuppetMaster Puppet;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CE8F0", Offset = "0x8CE8F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE8F0", Offset = "0x8CE8F0")]
		public bool EnableMappingWeightBlending;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE950", Offset = "0x8CE950")]
		public AnimationCurve MappingWeightBlend;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE988", Offset = "0x8CE988")]
		public float MappingWeightCrossBlendTime;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE9C0", Offset = "0x8CE9C0")]
		public float DefaultLongUnpinTime;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CE9F8", Offset = "0x8CE9F8")]
		public float DefaultShortUnpinTime;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ClaymoreAnimCurve mappingWeightOverHitTime;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float remainingCrossBlend;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float previousWeight;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float hitTimeEval;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isPinned;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEA30", Offset = "0x8CEA30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA30", Offset = "0x8CEA30")]
		public bool PushPinnedPropertiesOnStart;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEA90", Offset = "0x8CEA90")]
		public ClaymoreMuscleSettings[] MuscleSettings;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEAC8", Offset = "0x8CEAC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEAC8", Offset = "0x8CEAC8")]
		public float DeadMuscleSpring;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB28", Offset = "0x8CEB28")]
		public float DeadMuscleDamper;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB60", Offset = "0x8CEB60")]
		public float MaxDeathPinWeight;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public RandomTimeBox DefaultKillDelay;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool isDead;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool deathInProgress;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float remainingTimeTilDeath;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float originalMuscleSpring;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float originalMuscleDamper;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deathDelayTime;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float startingDeathBlend;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEB98", Offset = "0x8CEB98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEB98", Offset = "0x8CEB98")]
		public UnityEvent OnKilled;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEBF8", Offset = "0x8CEBF8")]
		public UnityEvent OnRevive;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEC30", Offset = "0x8CEC30")]
		[SerializeField]
		private BoolVariable puppetMasterEnabled;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8CEC7C", Offset = "0x8CEC7C")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CEC7C", Offset = "0x8CEC7C")]
		[SerializeField]
		private QuickButton configureAnimatedColliders;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CECC8", Offset = "0x8CECC8")]
		[SerializeField]
		private QuickButton removeAnimatedColliders;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "UsedImplicitlyAttribute", RVA = "0x8CED00", Offset = "0x8CED00")]
		[SerializeField]
		private QuickButton configureCollisionLayers;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Layer _puppetCollisionLayer;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private Layer _animatedCollisionLayer;

		[Token(Token = "0x170002DC")]
		public ClaymoreEntity Entity
		{
			[Token(Token = "0x60014EC")]
			[Address(RVA = "0xBA7A2C", Offset = "0xBA7A2C", VA = "0xBA7A2C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E27A4", Offset = "0x8E27A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014ED")]
			[Address(RVA = "0xBA7A34", Offset = "0xBA7A34", VA = "0xBA7A34", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E27B4", Offset = "0x8E27B4")]
			set
			{
			}
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBA7A3C", Offset = "0xBA7A3C", VA = "0xBA7A3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBA7AE0", Offset = "0xBA7AE0", VA = "0xBA7AE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xBA7B90", Offset = "0xBA7B90", VA = "0xBA7B90")]
		private void OnSetPuppetMasterEnabled(bool isEnabled)
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xBA7BB8", Offset = "0xBA7BB8", VA = "0xBA7BB8")]
		private void ConfigureCollisionLayers()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xBA7C90", Offset = "0xBA7C90", VA = "0xBA7C90")]
		private void RemoveAllAnimatedColliders()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xBA7D80", Offset = "0xBA7D80", VA = "0xBA7D80")]
		private void ConfigureAnimatedColliders()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xBA80EC", Offset = "0xBA80EC", VA = "0xBA80EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xBA8294", Offset = "0xBA8294", VA = "0xBA8294")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xBA850C", Offset = "0xBA850C", VA = "0xBA850C")]
		private void UpdateDeathSequence()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xBA8394", Offset = "0xBA8394", VA = "0xBA8394")]
		private void UpdateHitBlending()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xBA815C", Offset = "0xBA815C", VA = "0xBA815C")]
		private void ApplyClaymoreMuscleProperties(bool shouldPin)
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xBA878C", Offset = "0xBA878C", VA = "0xBA878C")]
		private void ApplyConfigToMuscle(Muscle muscle, MuscleConfig config)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xBA8728", Offset = "0xBA8728", VA = "0xBA8728")]
		private bool ContainedInGroups(Muscle.Group group, Muscle.Group[] groups)
		{
			return default(bool);
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xBA87FC", Offset = "0xBA87FC", VA = "0xBA87FC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E27C4", Offset = "0x8E27C4")]
		public void UnpinPuppetShort()
		{
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xBA887C", Offset = "0xBA887C", VA = "0xBA887C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E27FC", Offset = "0x8E27FC")]
		public void UnpinPuppetLong()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xBA8804", Offset = "0xBA8804", VA = "0xBA8804")]
		public void UnpinPuppet(float duration)
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xBA8884", Offset = "0xBA8884", VA = "0xBA8884")]
		public void RepinPuppetImmediate()
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xBA88D8", Offset = "0xBA88D8", VA = "0xBA88D8")]
		public void Kill(float deathDelay)
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xBA8918", Offset = "0xBA8918", VA = "0xBA8918")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E2834", Offset = "0x8E2834")]
		public void DebugSlowKill()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xBA86B0", Offset = "0xBA86B0", VA = "0xBA86B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E286C", Offset = "0x8E286C")]
		public void KillImmediate()
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xBA8920", Offset = "0xBA8920", VA = "0xBA8920")]
		private void ActiveImmediate()
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xBA8ABC", Offset = "0xBA8ABC", VA = "0xBA8ABC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E28A4", Offset = "0x8E28A4")]
		public void ResetDeath()
		{
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xBA8B38", Offset = "0xBA8B38", VA = "0xBA8B38")]
		public void ResetRigidbodiesVelocity()
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xBA8C54", Offset = "0xBA8C54", VA = "0xBA8C54")]
		public ClaymorePuppet()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class ClaymoreVRIK : VRIK
	{
		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB20C", Offset = "0x8AB20C")]
		private sealed class <BlendToMapped>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClaymoreVRIK <>4__this;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float blendTime;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <time>5__2;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <currentSolver>5__3;

			[Token(Token = "0x1700048B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC2")]
				[Address(RVA = "0xBA9F58", Offset = "0xBA9F58", VA = "0xBA9F58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC4")]
				[Address(RVA = "0xBA9FC0", Offset = "0xBA9FC0", VA = "0xBA9FC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0xBA9C0C", Offset = "0xBA9C0C", VA = "0xBA9C0C")]
			[DebuggerHidden]
			public <BlendToMapped>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xBA9E14", Offset = "0xBA9E14", VA = "0xBA9E14", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xBA9E18", Offset = "0xBA9E18", VA = "0xBA9E18", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0xBA9F60", Offset = "0xBA9F60", VA = "0xBA9F60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB21C", Offset = "0x8AB21C")]
		private sealed class <BlendToUnmapped>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClaymoreVRIK <>4__this;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float blendTime;

			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <time>5__2;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <currentSolver>5__3;

			[Token(Token = "0x1700048D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC8")]
				[Address(RVA = "0xBAA108", Offset = "0xBAA108", VA = "0xBAA108", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCA")]
				[Address(RVA = "0xBAA170", Offset = "0xBAA170", VA = "0xBAA170", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0xBA9CC4", Offset = "0xBA9CC4", VA = "0xBA9CC4")]
			[DebuggerHidden]
			public <BlendToUnmapped>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0xBA9FC8", Offset = "0xBA9FC8", VA = "0xBA9FC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0xBA9FCC", Offset = "0xBA9FCC", VA = "0xBA9FCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC9")]
			[Address(RVA = "0xBAA110", Offset = "0xBAA110", VA = "0xBAA110", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TransformVariable _playerSpaceTransform;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CED68", Offset = "0x8CED68")]
		[SerializeField]
		private PlayerHandVariable _playerHandLeft;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private PlayerHandVariable _playerHandRight;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEDC4", Offset = "0x8CEDC4")]
		[SerializeField]
		private float _handTransitionTime;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEE10", Offset = "0x8CEE10")]
		[SerializeField]
		private Vector3 _headRotOffset;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private XRTrackedNode _headTrackedNode;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatRange _headPositionAngle;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _headPositionCurveBlend;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Vector3 MinHeadPosOffset;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CEE8C", Offset = "0x8CEE8C")]
		public Vector3 MaxHeadPosOffset;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEEC4", Offset = "0x8CEEC4")]
		[SerializeField]
		private Vector3 _handRotOffset;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private Vector3 _handPosOffset;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Transform _headOffset;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private IKHand IKRightHand;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IKHand IKLeftHand;

		[Token(Token = "0x170002DD")]
		public Vector3 HandRotOffset
		{
			[Token(Token = "0x6001506")]
			[Address(RVA = "0xBA9178", Offset = "0xBA9178", VA = "0xBA9178")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002DE")]
		public Vector3 HandPosOffset
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0xBA9184", Offset = "0xBA9184", VA = "0xBA9184")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002DF")]
		public float HandTransitionTime
		{
			[Token(Token = "0x6001508")]
			[Address(RVA = "0xBA9190", Offset = "0xBA9190", VA = "0xBA9190")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E0")]
		public Transform AvatarRightHandTransform
		{
			[Token(Token = "0x6001509")]
			[Address(RVA = "0xBA9198", Offset = "0xBA9198", VA = "0xBA9198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		public Transform AvatarLeftHandTransform
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0xBA91B4", Offset = "0xBA91B4", VA = "0xBA91B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xBA91D0", Offset = "0xBA91D0", VA = "0xBA91D0", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xBA96C0", Offset = "0xBA96C0", VA = "0xBA96C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xBA9A10", Offset = "0xBA9A10", VA = "0xBA9A10")]
		private void OnHeadPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xBA9510", Offset = "0xBA9510", VA = "0xBA9510")]
		public void ApplyAvatarToVRIK()
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xBA9B80", Offset = "0xBA9B80", VA = "0xBA9B80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E28DC", Offset = "0x8E28DC")]
		public IEnumerator BlendToMapped(float blendTime)
		{
			return null;
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xBA9C38", Offset = "0xBA9C38", VA = "0xBA9C38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2940", Offset = "0x8E2940")]
		public IEnumerator BlendToUnmapped(float blendTime)
		{
			return null;
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xBA9CF0", Offset = "0xBA9CF0", VA = "0xBA9CF0")]
		public ClaymoreVRIK()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public struct LookWeights
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float BodyWeight;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float HeadWeight;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float EyesWeight;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float ClampWeight;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ClampWeightHead;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float ClampWeightEyes;

		[Token(Token = "0x6001512")]
		[Address(RVA = "0x966808", Offset = "0x966808", VA = "0x966808")]
		public LookWeights(float bodyWt, float headWt, float eyeWt, float clampWt, float clampHeadWt, float clampEyeWt)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0x966818", Offset = "0x966818", VA = "0x966818")]
		public void SetToLerp(LookWeights w0, LookWeights w1, float lerp)
		{
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x966860", Offset = "0x966860", VA = "0x966860")]
		public void ApplyToIk(LookAtIK ik)
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class NPCHeadLookIK : EnemyComponent
	{
		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEF20", Offset = "0x8CEF20")]
		public LookAtIK Looker;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ExposedTransformPoint HeadTransformPoint;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CEF58", Offset = "0x8CEF58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEF58", Offset = "0x8CEF58")]
		public bool AllowEnabledWithoutInternalTarget;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool HeadLookEnabled;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEFB8", Offset = "0x8CEFB8")]
		public float VertOffset;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CEFF0", Offset = "0x8CEFF0")]
		public float EnableToggleRate;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF028", Offset = "0x8CF028")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF028", Offset = "0x8CF028")]
		public LookWeights ForwardWeights;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public LookWeights HorizExtremeAngleWeights;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LookWeights VerticalExtremeAngleWeights;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF088", Offset = "0x8CF088")]
		public ClaymoreAnimCurve BlendOverAngle;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ClaymoreAnimCurve VertBlendOverVertAngle;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF0C0", Offset = "0x8CF0C0")]
		public AnimationCurve EnabledBlendCurve;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float MaxHorizTrackingLossAngle;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float MaxVertTrackingLossAngle;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private LookWeights blendedWeights;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float angleBetween;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float vertAngle;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float enabledPercent;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float enabledWeight;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool withinMaxAngle;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Transform targetParent;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Transform lookTgtInternal;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Transform externalFollow;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private TargetFinder targetFinder;

		[Token(Token = "0x6001515")]
		[Address(RVA = "0xBAADDC", Offset = "0xBAADDC", VA = "0xBAADDC")]
		public void Ready()
		{
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xBAB244", Offset = "0xBAB244", VA = "0xBAB244")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E29A4", Offset = "0x8E29A4")]
		public void LookAtCurrentTarget()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xBAB2DC", Offset = "0xBAB2DC", VA = "0xBAB2DC")]
		public void LookAt(Targetable target)
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xBAB3A4", Offset = "0xBAB3A4", VA = "0xBAB3A4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8E29DC", Offset = "0x8E29DC")]
		public void CancelIKFollow()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xBAB064", Offset = "0xBAB064", VA = "0xBAB064")]
		private void SetLookTargetOffsetPosition()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xBAB3D4", Offset = "0xBAB3D4", VA = "0xBAB3D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xBAB898", Offset = "0xBAB898", VA = "0xBAB898")]
		private void UpdateMasterWeightBlend()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBAB530", Offset = "0xBAB530", VA = "0xBAB530")]
		private void UpdateAngleChecking()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBAB7BC", Offset = "0xBAB7BC", VA = "0xBAB7BC")]
		private void UpdateLookWeightBlend()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xBAB958", Offset = "0xBAB958", VA = "0xBAB958")]
		public NPCHeadLookIK()
		{
		}
	}
}
namespace SG.Claymore.Avatar
{
	[Token(Token = "0x2000331")]
	public class AvatarHandPoser : MonoBehaviour
	{
		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF0F8", Offset = "0x8CF0F8")]
		[SerializeField]
		private ClaymoreVRIK _claymoreVRIK;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandVariable _playerHandLeft;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandVariable _playerHandRight;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF164", Offset = "0x8CF164")]
		[SerializeField]
		private IntVariable grabSuppression;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BinaryInputAction _interactActionLeft;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _lastInteractActionLeft;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BinaryInputAction _interactActionRight;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _lastInteractActionRight;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF1D0", Offset = "0x8CF1D0")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8CF21C", Offset = "0x8CF21C")]
		private MecanimParameterReference _lhBlendAnimatorParam;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8CF274", Offset = "0x8CF274")]
		private MecanimParameterReference _rhBlendAnimatorParam;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HandPoseData _lhFistInstantHandPose;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HandPoseData _rhFistInstantHandPose;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private HandPoseData _lhFistHandPose;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private HandPoseData _rhFistHandPose;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HandPoseData _lhRelaxedHandPose;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HandPoseData _rhRelaxedHandPose;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF32C", Offset = "0x8CF32C")]
		[SerializeField]
		private ClaymoreAnimCurve _wristRotationOverHandBlend;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF378", Offset = "0x8CF378")]
		[SerializeField]
		private GlobalEvent _leftHandClearGlobalEvent;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private HandPoseGlobalEvent _leftHandPoseGlobalEvent;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private GlobalEvent _rightHandClearGlobalEvent;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private HandPoseGlobalEvent _rightHandPoseGlobalEvent;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private HandPoseData _currentHandPoseDataLeft;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HandPoseData _currentHandPoseDataRight;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _lh_relativeTwist;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _rh_relativeTwist;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float _lh_handBlend;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float _rh_handBlend;

		[Token(Token = "0x170002E2")]
		private HandPoseData CurrentHandPoseDataLeft
		{
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xB700C0", Offset = "0xB700C0", VA = "0xB700C0")]
			set
			{
			}
		}

		[Token(Token = "0x170002E3")]
		private HandPoseData CurrentHandPoseDataRight
		{
			[Token(Token = "0x6001520")]
			[Address(RVA = "0xB702A8", Offset = "0xB702A8", VA = "0xB702A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xB70358", Offset = "0xB70358", VA = "0xB70358")]
		private void Start()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xB70788", Offset = "0xB70788", VA = "0xB70788")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xB70A80", Offset = "0xB70A80", VA = "0xB70A80")]
		private void OnClearHandPoseLeft()
		{
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xB70A88", Offset = "0xB70A88", VA = "0xB70A88")]
		private void OnClearHandPoseRight()
		{
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xB705F8", Offset = "0xB705F8", VA = "0xB705F8")]
		private void OnLeftInteractableChange(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xB706C0", Offset = "0xB706C0", VA = "0xB706C0")]
		private void OnRightInteractableChange(HandInteractable interactable)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xB70A90", Offset = "0xB70A90", VA = "0xB70A90")]
		private void OnLeftHandPoseRequest(HandPoseData handPose)
		{
		}

		[Token(Token = "0x6001528")]
		[Address(RVA = "0xB70A94", Offset = "0xB70A94", VA = "0xB70A94")]
		private void OnRightHandPoseRequest(HandPoseData handPose)
		{
		}

		[Token(Token = "0x6001529")]
		[Address(RVA = "0xB70170", Offset = "0xB70170", VA = "0xB70170")]
		private void UpdateHandPose(HandPoseData handPoseData)
		{
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xB70A98", Offset = "0xB70A98", VA = "0xB70A98")]
		private void Update()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xB70ABC", Offset = "0xB70ABC", VA = "0xB70ABC")]
		private void DefaultBehaviorLeft()
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xB70D0C", Offset = "0xB70D0C", VA = "0xB70D0C")]
		private void DefaultBehaviorRight()
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xB70F7C", Offset = "0xB70F7C", VA = "0xB70F7C")]
		public AvatarHandPoser()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class AvatarLocomotion : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		public enum PoseType
		{
			[Token(Token = "0x400225F")]
			Default,
			[Token(Token = "0x4002260")]
			Combat
		}

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB22C", Offset = "0x8AB22C")]
		private sealed class <BlendPoseCoroutine>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AvatarLocomotion <>4__this;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AvatarLocomotionData data;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <time>5__2;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCE")]
				[Address(RVA = "0xB71CB0", Offset = "0xB71CB0", VA = "0xB71CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD0")]
				[Address(RVA = "0xB71D18", Offset = "0xB71D18", VA = "0xB71D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCB")]
			[Address(RVA = "0xB71B30", Offset = "0xB71B30", VA = "0xB71B30")]
			[DebuggerHidden]
			public <BlendPoseCoroutine>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0xB71BB8", Offset = "0xB71BB8", VA = "0xB71BB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0xB71BBC", Offset = "0xB71BBC", VA = "0xB71BBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0xB71CB8", Offset = "0xB71CB8", VA = "0xB71CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF3F4", Offset = "0x8CF3F4")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _combatRadius;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ClaymoreVRIK _claymoreVRIK;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AvatarLocomotionData _defaultData;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AvatarLocomotionData _combatData;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private AvatarLocomotionData _currentData;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CF480", Offset = "0x8CF480")]
		[SerializeField]
		private PoseType _currentPose;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF4BC", Offset = "0x8CF4BC")]
		[SerializeField]
		private float _blendDuration;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AnimationCurve _blendCurve;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _blendCoroutine;

		[Token(Token = "0x600152E")]
		[Address(RVA = "0xB70F84", Offset = "0xB70F84", VA = "0xB70F84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0xB71008", Offset = "0xB71008", VA = "0xB71008")]
		public void SetDefault()
		{
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0xB71100", Offset = "0xB71100", VA = "0xB71100")]
		public void SetCombat()
		{
		}

		[Token(Token = "0x6001531")]
		[Address(RVA = "0xB71164", Offset = "0xB71164", VA = "0xB71164")]
		private void SetData(AvatarLocomotionData data, float weight)
		{
		}

		[Token(Token = "0x6001532")]
		[Address(RVA = "0xB71660", Offset = "0xB71660", VA = "0xB71660")]
		private void SetCurrentData()
		{
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0xB719A0", Offset = "0xB719A0", VA = "0xB719A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001534")]
		[Address(RVA = "0xB71068", Offset = "0xB71068", VA = "0xB71068")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2A14", Offset = "0x8E2A14")]
		private IEnumerator BlendPoseCoroutine(AvatarLocomotionData data)
		{
			return null;
		}

		[Token(Token = "0x6001535")]
		[Address(RVA = "0xB71B5C", Offset = "0xB71B5C", VA = "0xB71B5C")]
		public AvatarLocomotion()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A41E8", Offset = "0x8A41E8")]
	public class AvatarLocomotionData : ScriptableObject
	{
		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF518", Offset = "0x8CF518")]
		[SerializeField]
		public Vector3 MinHeadPosOffset;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8CF564", Offset = "0x8CF564")]
		public Vector3 MaxHeadPosOffset;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF5B0", Offset = "0x8CF5B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF5B0", Offset = "0x8CF5B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF5B0", Offset = "0x8CF5B0")]
		public float Weight;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF628", Offset = "0x8CF628")]
		public float FootDistance;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF660", Offset = "0x8CF660")]
		public float StepThreshold;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF698", Offset = "0x8CF698")]
		public float AngleThreshold;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF6D0", Offset = "0x8CF6D0")]
		public float ComAngleMlp;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF708", Offset = "0x8CF708")]
		public float MaxVelocity;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF740", Offset = "0x8CF740")]
		public float VelocityFactor;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF778", Offset = "0x8CF778")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF778", Offset = "0x8CF778")]
		public float MaxLegStretch;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF7D0", Offset = "0x8CF7D0")]
		public float RootSpeed;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF808", Offset = "0x8CF808")]
		public float StepSpeed;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF840", Offset = "0x8CF840")]
		public AnimationCurve StepHeight;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF878", Offset = "0x8CF878")]
		public AnimationCurve HeelHeight;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF8B0", Offset = "0x8CF8B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF8B0", Offset = "0x8CF8B0")]
		public float RelaxLegTwistMinAngle;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF908", Offset = "0x8CF908")]
		public float RelaxLegTwistSpeed;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF940", Offset = "0x8CF940")]
		public InterpolationMode StepInterpolation;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CF978", Offset = "0x8CF978")]
		public Vector3 Offset;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CF9B0", Offset = "0x8CF9B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CF9B0", Offset = "0x8CF9B0")]
		public float LeftLegSwivelOffset;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8CFA0C", Offset = "0x8CFA0C")]
		public float RightLegSwivelOffset;

		[Token(Token = "0x6001536")]
		[Address(RVA = "0xB71D20", Offset = "0xB71D20", VA = "0xB71D20")]
		public AvatarLocomotionData()
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class CalibrationHeightMonitor : MonoBehaviour
	{
		[Token(Token = "0x4001654")]
		private const float FOOT_IN_METERS = 0.3048f;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable _realPlayerHeight;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRTrackedNode playerHead;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected BoolVariable didHeightCalibrated;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected IntVariable pauseMenuSuppression;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float maxHeightGrowth;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float heightDurationThreshold;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PauseScreen pauseScreen;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool autoUnpauseEnabled;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntVariable modalUICount;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float timeOverLimit;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool doAutoUnpause;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool triggeredRecalibrate;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 lastValidFootPos;

		[Token(Token = "0x6001537")]
		[Address(RVA = "0xB71DF4", Offset = "0xB71DF4", VA = "0xB71DF4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xB71E80", Offset = "0xB71E80", VA = "0xB71E80")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xB71F0C", Offset = "0xB71F0C", VA = "0xB71F0C")]
		private void OnPlayerHeightCalibrated()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xB72028", Offset = "0xB72028", VA = "0xB72028")]
		private void Update()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xB72494", Offset = "0xB72494", VA = "0xB72494")]
		public CalibrationHeightMonitor()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public class DebugHandPoser : MonoBehaviour
	{
		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _leftHand;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform[] _leftHandFingers;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion[] _leftHandRotation;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform _rightHand;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform[] _rightHandFingers;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion[] _rightHandRotation;

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xB724A8", Offset = "0xB724A8", VA = "0xB724A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0xB72690", Offset = "0xB72690", VA = "0xB72690")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0xB727B0", Offset = "0xB727B0", VA = "0xB727B0")]
		public DebugHandPoser()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ElbowLocatorController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200054F")]
		public struct BlendConfig
		{
			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public FloatRange AngleRange;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform BlendGoalTarget;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve Curve;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float WeightMultiplier;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DDD30", Offset = "0x8DDD30")]
			public float CurrentWeight;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8DDD44", Offset = "0x8DDD44")]
			public float CurrentAngle;
		}

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CFAFC", Offset = "0x8CFAFC")]
		[SerializeField]
		private XRTrackedNode _headTrackedNode;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private XRTrackedNode _handTrackedNode;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatRange _distanceLimits;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AnimationCurve _masterBlendCurve;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CFB78", Offset = "0x8CFB78")]
		[SerializeField]
		private bool _useFormulaForBlendCurves;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _elbowLocator;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform _masterBlendGoalTarget;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BlendConfig[] _blendGoals;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CFBF4", Offset = "0x8CFBF4")]
		[SerializeField]
		private float _totalWeight;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CFC30", Offset = "0x8CFC30")]
		[SerializeField]
		private float _masterBlend;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CFC6C", Offset = "0x8CFC6C")]
		[SerializeField]
		private float _handDistance;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _outputBlend;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _dirToWristPole;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 _dirToShoulder;

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xB727B8", Offset = "0xB727B8", VA = "0xB727B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xB72D08", Offset = "0xB72D08", VA = "0xB72D08")]
		public ElbowLocatorController()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandPoseData _leftHandPoseData;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandPoseData _rightHandPoseData;

		[Token(Token = "0x170002E4")]
		public HandPoseData LeftHandPoseData
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0xB72DE0", Offset = "0xB72DE0", VA = "0xB72DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public HandPoseData RightHandPoseData
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0xB72DE8", Offset = "0xB72DE8", VA = "0xB72DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xB72DF0", Offset = "0xB72DF0", VA = "0xB72DF0")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4248", Offset = "0x8A4248")]
	public class HandPoseData : ScriptableObject
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MecanimControllerParameterAttribute", RVA = "0x8CFCC8", Offset = "0x8CFCC8")]
		[SerializeField]
		private MecanimParameterReference _animatorParameter;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8CFD18", Offset = "0x8CFD18")]
		[SerializeField]
		private bool _boolValue;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8CFD6C", Offset = "0x8CFD6C")]
		[SerializeField]
		private float _floatValue;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8CFDC0", Offset = "0x8CFDC0")]
		[SerializeField]
		private int _intValue;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8CFE14", Offset = "0x8CFE14")]
		[SerializeField]
		private AnimatorControllerParameterType _parameterType;

		[Token(Token = "0x170002E6")]
		public MecanimParameterReference AnimatorParameter
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0xB72DF8", Offset = "0xB72DF8", VA = "0xB72DF8")]
			get
			{
				return default(MecanimParameterReference);
			}
		}

		[Token(Token = "0x170002E7")]
		public bool BoolValue
		{
			[Token(Token = "0x6001545")]
			[Address(RVA = "0xB72E04", Offset = "0xB72E04", VA = "0xB72E04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E8")]
		public float FloatValue
		{
			[Token(Token = "0x6001546")]
			[Address(RVA = "0xB72E0C", Offset = "0xB72E0C", VA = "0xB72E0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002E9")]
		public int IntValue
		{
			[Token(Token = "0x6001547")]
			[Address(RVA = "0xB72E14", Offset = "0xB72E14", VA = "0xB72E14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002EA")]
		public AnimatorControllerParameterType ParameterType
		{
			[Token(Token = "0x6001548")]
			[Address(RVA = "0xB72E1C", Offset = "0xB72E1C", VA = "0xB72E1C")]
			get
			{
				return default(AnimatorControllerParameterType);
			}
		}

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xB72E24", Offset = "0xB72E24", VA = "0xB72E24")]
		public HandPoseData()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class PlayerAvatar : MonoBehaviour
	{
		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB23C", Offset = "0x8AB23C")]
		private sealed class <LocomotionLerpCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayerAvatar <>4__this;

			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x17000491")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD4")]
				[Address(RVA = "0xB73D94", Offset = "0xB73D94", VA = "0xB73D94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000492")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD6")]
				[Address(RVA = "0xB73DFC", Offset = "0xB73DFC", VA = "0xB73DFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD1")]
			[Address(RVA = "0xB73B90", Offset = "0xB73B90", VA = "0xB73B90")]
			[DebuggerHidden]
			public <LocomotionLerpCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD2")]
			[Address(RVA = "0xB73C90", Offset = "0xB73C90", VA = "0xB73C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0xB73C94", Offset = "0xB73C94", VA = "0xB73C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0xB73D9C", Offset = "0xB73D9C", VA = "0xB73D9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CFE50", Offset = "0x8CFE50")]
		[SerializeField]
		private Animator _avatarAnimator;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable _avatarEnabled;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ClaymoreVRIK _claymoreVRIK;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TransformGlobalEvent _teleportGlobalEvent;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8CFECC", Offset = "0x8CFECC")]
		[SerializeField]
		protected XRPlatformManager _xRPlatformManager;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8CFF18", Offset = "0x8CFF18")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8CFF18", Offset = "0x8CFF18")]
		[SerializeField]
		private MecanimParameterReference _dashForwardParam;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8CFF90", Offset = "0x8CFF90")]
		[SerializeField]
		private MecanimParameterReference _dashHorizontalParam;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8CFFE4", Offset = "0x8CFFE4")]
		[SerializeField]
		private MecanimParameterReference _dashStartParam;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D0038", Offset = "0x8D0038")]
		[SerializeField]
		private MecanimParameterReference _dashEndParam;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D008C", Offset = "0x8D008C")]
		[SerializeField]
		private MecanimParameterReference _isDeadParam;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D00E0", Offset = "0x8D00E0")]
		[SerializeField]
		private MecanimParameterReference _isVisibleParam;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0134", Offset = "0x8D0134")]
		[SerializeField]
		private float _minDistToDashPose;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float _dashLandingLocomotionBlendTime;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D0190", Offset = "0x8D0190")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0190", Offset = "0x8D0190")]
		[SerializeField]
		private Vector3GlobalEvent _onDashStartGlobalEvent;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private BoolGlobalEvent _onDashEndGlobalEvent;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private EnemyGlobalEvent _onPlayerKilled;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D020C", Offset = "0x8D020C")]
		[SerializeField]
		private FloatVariable _remainingKnockback;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0258", Offset = "0x8D0258")]
		[SerializeField]
		private GlobalEvent _avatarDissolveGlobalEvent;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private BoolVariable _isAvatarVisible;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private BoolVariable _hasCalibrated;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BoolVariable _controllerVisible;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Renderer[] _renderers;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine _locomotionCoroutine;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D02E4", Offset = "0x8D02E4")]
		private bool <IsSliding>k__BackingField;

		[Token(Token = "0x170002EB")]
		private bool IsSliding
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0xB72E2C", Offset = "0xB72E2C", VA = "0xB72E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2A78", Offset = "0x8E2A78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600154B")]
			[Address(RVA = "0xB72E34", Offset = "0xB72E34", VA = "0xB72E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2A88", Offset = "0x8E2A88")]
			set
			{
			}
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xB72E40", Offset = "0xB72E40", VA = "0xB72E40")]
		private void Start()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xB72EE4", Offset = "0xB72EE4", VA = "0xB72EE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xB72F80", Offset = "0xB72F80", VA = "0xB72F80")]
		private void SetEnabled(bool en)
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xB72FB4", Offset = "0xB72FB4", VA = "0xB72FB4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xB733B4", Offset = "0xB733B4", VA = "0xB733B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xB736C0", Offset = "0xB736C0", VA = "0xB736C0")]
		private void OnPlayerKilled(Enemy killer)
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xB736F0", Offset = "0xB736F0", VA = "0xB736F0")]
		private void SetControllerVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xB73388", Offset = "0xB73388", VA = "0xB73388")]
		private void SetAvatarVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xB737C4", Offset = "0xB737C4", VA = "0xB737C4")]
		private void OnPlayerMove(Vector3 newPos)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xB73960", Offset = "0xB73960", VA = "0xB73960")]
		private void OnAvatarDissolve()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xB73988", Offset = "0xB73988", VA = "0xB73988")]
		private void OnDashStart(Vector3 dashMove)
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xB73A8C", Offset = "0xB73A8C", VA = "0xB73A8C")]
		private void OnDashEnd(bool hitEnemy)
		{
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xB73B14", Offset = "0xB73B14", VA = "0xB73B14")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2A98", Offset = "0x8E2A98")]
		private IEnumerator LocomotionLerpCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xB73BBC", Offset = "0xB73BBC", VA = "0xB73BBC")]
		private void HandleTeleport(Transform target)
		{
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xB73C7C", Offset = "0xB73C7C", VA = "0xB73C7C")]
		public PlayerAvatar()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public class PlayerAvatarRoot : MonoBehaviour, IResourceLoadHandler<PlayerAvatar>, IResourceLoadHandler
	{
		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D02F4", Offset = "0x8D02F4")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D02F4", Offset = "0x8D02F4")]
		[SerializeField]
		private ResourceLoadingController _resourceLoader;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerEntityDefinition _playerEntityDefinition;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<PlayerAvatarRoot> DrawGizmos;

		[Token(Token = "0x170002EC")]
		public ResourceLoadingController ResourceLoader
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0xB73E04", Offset = "0xB73E04", VA = "0xB73E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public PlayerEntityDefinition PlayerEntityDefinition
		{
			[Token(Token = "0x600155C")]
			[Address(RVA = "0xB73E0C", Offset = "0xB73E0C", VA = "0xB73E0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xB73E14", Offset = "0xB73E14", VA = "0xB73E14")]
		private void Awake()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xB73EDC", Offset = "0xB73EDC", VA = "0xB73EDC", Slot = "4")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xB74008", Offset = "0xB74008", VA = "0xB74008")]
		public PlayerAvatarRoot()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A42A8", Offset = "0x8A42A8")]
	public class PlayerEntityDefinition : ClaymoreEntityDefinition
	{
		[Token(Token = "0x6001560")]
		[Address(RVA = "0xB74010", Offset = "0xB74010", VA = "0xB74010")]
		public PlayerEntityDefinition()
		{
		}
	}
}
namespace SG.Claymore.Audio
{
	[Serializable]
	[Token(Token = "0x200033C")]
	public class AmbientNoise
	{
		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		private AudioKeyData _clipKey;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D03BC", Offset = "0x8D03BC")]
		[SerializeField]
		private AudioRequest _clip;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0408", Offset = "0x8D0408")]
		[SerializeField]
		private List<Transform> _possibleLocations;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioRuntime _runtime;

		[Token(Token = "0x170002EE")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xC1D83C", Offset = "0xC1D83C", VA = "0xC1D83C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xC1DF04", Offset = "0xC1DF04", VA = "0xC1DF04")]
		public AmbientNoise()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC1DFA8", Offset = "0xC1DFA8", VA = "0xC1DFA8")]
		public AmbientNoise(AudioKeyData key, Transform[] locations)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC1D858", Offset = "0xC1D858", VA = "0xC1D858")]
		public void Start(UnityEngine.Object owner)
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC1E0A0", Offset = "0xC1E0A0", VA = "0xC1E0A0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xC1DA90", Offset = "0xC1DA90", VA = "0xC1DA90")]
		public void OnValidate()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class AmbientAudio : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private AudioKeyData _ambientLoopKey;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D048C", Offset = "0x8D048C")]
		[SerializeField]
		private AudioRequest _ambientLoop;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D04D8", Offset = "0x8D04D8")]
		[SerializeField]
		private int _maxSimultaneousNoises;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0524", Offset = "0x8D0524")]
		[SerializeField]
		private List<AmbientNoise> _ambientNoises;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioRuntime _ambientLoopRuntime;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isLoopRequestActive;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BasicLinkedList<AmbientNoise> _activeNoises;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _currentIndex;

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xC1D288", Offset = "0xC1D288", VA = "0xC1D288")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xC1D2E4", Offset = "0xC1D2E4", VA = "0xC1D2E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xC1D590", Offset = "0xC1D590", VA = "0xC1D590")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xC1D5B0", Offset = "0xC1D5B0", VA = "0xC1D5B0")]
		public void Update()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xC1D9A8", Offset = "0xC1D9A8", VA = "0xC1D9A8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xC1DD7C", Offset = "0xC1DD7C", VA = "0xC1DD7C")]
		public AmbientAudio()
		{
		}
	}
	[Token(Token = "0x200033E")]
	public class AudioClipPool : BasicLinkedList<BasicLinkedList<AudioRuntime>.ILinkedListNode>
	{
		[Token(Token = "0x600156D")]
		[Address(RVA = "0xC1E0C0", Offset = "0xC1E0C0", VA = "0xC1E0C0")]
		public AudioClipPool()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class AudioDatabaseEntry : EffectDatabaseEntry<AudioKeyData>
	{
		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioEffectClip EffectClip;

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xC1E1A0", Offset = "0xC1E1A0", VA = "0xC1E1A0")]
		public AudioDatabaseEntry()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000340")]
	public class AudioPoolPrefabSettings
	{
		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Priority;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int TotalInstances;

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xC1FAD8", Offset = "0xC1FAD8", VA = "0xC1FAD8")]
		public AudioPoolPrefabSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000341")]
	public class AudioPoolSettings
	{
		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioRuntime Prefab;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioPoolPrefabSettings[] PrefabSettings;

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xC1FAE0", Offset = "0xC1FAE0", VA = "0xC1FAE0")]
		public AudioPoolSettings()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4308", Offset = "0x8A4308")]
	public class AudioDatabase : EffectsDatabase<AudioDatabaseEntry>
	{
		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float _interruptedRequestUpdateDelay;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D0580", Offset = "0x8D0580")]
		[SerializeField]
		protected AudioPoolSettings[] _poolSettings;

		[Token(Token = "0x170002EF")]
		public AudioPoolSettings[] PoolSettings
		{
			[Token(Token = "0x6001571")]
			[Address(RVA = "0xC1E110", Offset = "0xC1E110", VA = "0xC1E110")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002F0")]
		public float InterruptedRequestUpdateDelay
		{
			[Token(Token = "0x6001572")]
			[Address(RVA = "0xC1E118", Offset = "0xC1E118", VA = "0xC1E118")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xC1E120", Offset = "0xC1E120", VA = "0xC1E120")]
		public AudioDatabase()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public enum SpatialBlendType
	{
		[Token(Token = "0x40016AF")]
		TwoDimensional,
		[Token(Token = "0x40016B0")]
		ThreeDimensional
	}
	[Token(Token = "0x2000344")]
	public enum PlaybackBehavior
	{
		[Token(Token = "0x40016B2")]
		TrueRandom,
		[Token(Token = "0x40016B3")]
		RandomNoRepeat,
		[Token(Token = "0x40016B4")]
		Sequential
	}
	[Serializable]
	[Token(Token = "0x2000345")]
	public class WeightedAudioClip
	{
		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D05BC", Offset = "0x8D05BC")]
		public int Weight;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.Object SubClip;

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xB700B0", Offset = "0xB700B0", VA = "0xB700B0")]
		public WeightedAudioClip()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public struct SelectClipResult
	{
		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public AudioEffectClip EffectClipAsset;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioClip SelectedClip;

		[Token(Token = "0x6001575")]
		[Address(RVA = "0x9665A8", Offset = "0x9665A8", VA = "0x9665A8")]
		public SelectClipResult(AudioEffectClip asset, AudioClip clip)
		{
		}
	}
	[Token(Token = "0x2000347")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4368", Offset = "0x8A4368")]
	public class AudioEffectClip : ScriptableObject
	{
		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x8D05F4", Offset = "0x8D05F4")]
		public string Notes;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0604", Offset = "0x8D0604")]
		public AudioRuntime RuntimePrefab;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D063C", Offset = "0x8D063C")]
		public AudioMixerGroup Output;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0674", Offset = "0x8D0674")]
		public FloatRange StartDelay;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D06AC", Offset = "0x8D06AC")]
		public bool IsGloballyPausable;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D06E4", Offset = "0x8D06E4")]
		public bool BypassEffects;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D071C", Offset = "0x8D071C")]
		public bool BypassListenerEffects;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0754", Offset = "0x8D0754")]
		public bool BypassReverbZones;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D078C", Offset = "0x8D078C")]
		public bool Loop;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D07C4", Offset = "0x8D07C4")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D07C4", Offset = "0x8D07C4")]
		public int LoopLimit;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0824", Offset = "0x8D0824")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D0824", Offset = "0x8D0824")]
		public FloatRange LoopIntervalDelay;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0884", Offset = "0x8D0884")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0884", Offset = "0x8D0884")]
		public int Priority;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D08DC", Offset = "0x8D08DC")]
		public FloatRange Volume;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D0914", Offset = "0x8D0914")]
		public float VolumeRangeInDb;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0928", Offset = "0x8D0928")]
		public FloatRange Pitch;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0960", Offset = "0x8D0960")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0960", Offset = "0x8D0960")]
		public float StereoPan;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D09B4", Offset = "0x8D09B4")]
		public SpatialBlendType SpatialBlend;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D09EC", Offset = "0x8D09EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D09EC", Offset = "0x8D09EC")]
		public float ReverbZoneMix;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0A44", Offset = "0x8D0A44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0A44", Offset = "0x8D0A44")]
		public float DopplerLevel;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0A98", Offset = "0x8D0A98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D0A98", Offset = "0x8D0A98")]
		public float Spread;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0AF0", Offset = "0x8D0AF0")]
		public AudioRolloffMode VolumeRolloff;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "IntConditionalDrawAttribute", RVA = "0x8D0B28", Offset = "0x8D0B28")]
		public AnimationCurve RolloffCurve;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0B68", Offset = "0x8D0B68")]
		public float MinDistance;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0BA0", Offset = "0x8D0BA0")]
		public float MaxDistance;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0BD8", Offset = "0x8D0BD8")]
		public float FadeIn;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public AnimationCurve FadeInCurve;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0C10", Offset = "0x8D0C10")]
		public float FadeOut;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public AnimationCurve FadeOutCurve;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D0C48", Offset = "0x8D0C48")]
		public int TotalSubclipWeight;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public PlaybackBehavior SubclipBehavior;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<WeightedAudioClip> Subclips;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		[SerializeField]
		protected bool _containsRecursion;

		[NonSerialized]
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int _previousRandomSelection;

		[Token(Token = "0x170002F1")]
		public bool HasValidLoopIntervalDelay
		{
			[Token(Token = "0x6001576")]
			[Address(RVA = "0xC1E1F0", Offset = "0xC1E1F0", VA = "0xC1E1F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F2")]
		public bool HasRecursionError
		{
			[Token(Token = "0x6001577")]
			[Address(RVA = "0xC1E26C", Offset = "0xC1E26C", VA = "0xC1E26C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC1E274", Offset = "0xC1E274", VA = "0xC1E274")]
		private UnityEngine.Object GetRandomSubClip()
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xC1E380", Offset = "0xC1E380", VA = "0xC1E380")]
		private UnityEngine.Object GetRandomNoRepeatSubClip()
		{
			return null;
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xC1E4F4", Offset = "0xC1E4F4", VA = "0xC1E4F4")]
		private UnityEngine.Object GetNextSubClip()
		{
			return null;
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC1E5A0", Offset = "0xC1E5A0", VA = "0xC1E5A0")]
		private UnityEngine.Object SelectAsset()
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xC1E5BC", Offset = "0xC1E5BC", VA = "0xC1E5BC")]
		public SelectClipResult SelectClipToPlay()
		{
			return default(SelectClipResult);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC1E8C0", Offset = "0xC1E8C0", VA = "0xC1E8C0")]
		public float GetRandomVolume()
		{
			return default(float);
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xC1E8E0", Offset = "0xC1E8E0", VA = "0xC1E8E0")]
		public float GetRandomPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xC1E900", Offset = "0xC1E900", VA = "0xC1E900", Slot = "4")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xC1EBBC", Offset = "0xC1EBBC", VA = "0xC1EBBC")]
		private bool CheckForRecursion(UnityEngine.Object subClip)
		{
			return default(bool);
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xC1EF14", Offset = "0xC1EF14", VA = "0xC1EF14")]
		public AudioEffectClip()
		{
		}
	}
	[Token(Token = "0x2000348")]
	internal abstract class AudioFadeProcessor : AudioProcessor
	{
		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected double _fadeTime;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected float _volume;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected AnimationCurve _curve;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected AudioSource _audioSource;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0C94", Offset = "0x8D0C94")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x170002F3")]
		public bool IsActive
		{
			[Token(Token = "0x6001582")]
			[Address(RVA = "0xC1F0FC", Offset = "0xC1F0FC", VA = "0xC1F0FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2AFC", Offset = "0x8E2AFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001583")]
			[Address(RVA = "0xC1F104", Offset = "0xC1F104", VA = "0xC1F104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B0C", Offset = "0x8E2B0C")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xC1F110", Offset = "0xC1F110", VA = "0xC1F110", Slot = "14")]
		public virtual void Start(AudioSource audioSource, float fadeTime, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xC1F190", Offset = "0xC1F190", VA = "0xC1F190", Slot = "12")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xC1F198", Offset = "0xC1F198", VA = "0xC1F198")]
		protected AudioFadeProcessor()
		{
		}
	}
	[Token(Token = "0x2000349")]
	internal class FadeInProcessor : AudioFadeProcessor
	{
		[Token(Token = "0x6001587")]
		[Address(RVA = "0xC23D8C", Offset = "0xC23D8C", VA = "0xC23D8C", Slot = "11")]
		public override AudioProcessorResult Update()
		{
			return default(AudioProcessorResult);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xC224C0", Offset = "0xC224C0", VA = "0xC224C0")]
		public FadeInProcessor()
		{
		}
	}
	[Token(Token = "0x200034A")]
	internal class FadeOutProcessor : AudioFadeProcessor
	{
		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private double _lastUpdateTime;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private double _runningTime;

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xC23E90", Offset = "0xC23E90", VA = "0xC23E90", Slot = "14")]
		public override void Start(AudioSource audioSource, float fadeTime, AnimationCurve curve)
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xC23F14", Offset = "0xC23F14", VA = "0xC23F14", Slot = "11")]
		public override AudioProcessorResult Update()
		{
			return default(AudioProcessorResult);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xC224C8", Offset = "0xC224C8", VA = "0xC224C8")]
		public FadeOutProcessor()
		{
		}
	}
	[Token(Token = "0x200034B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A43C8", Offset = "0x8A43C8")]
	public class AudioKeyData : EffectKeyData
	{
		[NonSerialized]
		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClipPool AudioClipPool;

		[Token(Token = "0x170002F4")]
		protected override string DefaultControllerGuid
		{
			[Token(Token = "0x600158C")]
			[Address(RVA = "0xC1F1A8", Offset = "0xC1F1A8", VA = "0xC1F1A8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xC1F1F0", Offset = "0xC1F1F0", VA = "0xC1F1F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xC1F270", Offset = "0xC1F270", VA = "0xC1F270")]
		public void CancelAll()
		{
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xC1F43C", Offset = "0xC1F43C", VA = "0xC1F43C")]
		public void CancelAllWithTarget(Transform target)
		{
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xC1F6B4", Offset = "0xC1F6B4", VA = "0xC1F6B4")]
		public void InterruptedRequest(InterruptedRequestHandle handle, EffectRequestPayload payload, [Optional] Action<EffectRuntime> onBeginCallback, [Optional] Action onEndCallback, [Optional] Action onCanceledCallback, [Optional] Action onTimeOutCallback)
		{
		}

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xC1F940", Offset = "0xC1F940", VA = "0xC1F940")]
		public AudioKeyData()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class AudioPlayer : MonoBehaviour
	{
		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		private AudioKeyData _audioKey;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0CDC", Offset = "0x8D0CDC")]
		[SerializeField]
		private AudioRequest _audioLoop;

		[Token(Token = "0x170002F5")]
		public AudioRequest AudioLoop
		{
			[Token(Token = "0x6001592")]
			[Address(RVA = "0xC1F9B0", Offset = "0xC1F9B0", VA = "0xC1F9B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xC1F9B8", Offset = "0xC1F9B8", VA = "0xC1F9B8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xC1FA48", Offset = "0xC1FA48", VA = "0xC1FA48", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xC1FA68", Offset = "0xC1FA68", VA = "0xC1FA68")]
		public AudioPlayer()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public enum AudioProcessorResult
	{
		[Token(Token = "0x40016E5")]
		Terminated,
		[Token(Token = "0x40016E6")]
		Running
	}
	[Token(Token = "0x200034E")]
	public interface IAudioProcessor
	{
		[Token(Token = "0x170002F6")]
		bool OverridesEndPlayBehavior
		{
			[Token(Token = "0x6001596")]
			get;
		}

		[Token(Token = "0x170002F7")]
		bool ForceStopOnShutdown
		{
			[Token(Token = "0x6001597")]
			get;
		}

		[Token(Token = "0x6001598")]
		AudioProcessorResult Update();

		[Token(Token = "0x6001599")]
		void Stop();

		[Token(Token = "0x600159A")]
		void HandleAudioClipEnd();
	}
	[Token(Token = "0x200034F")]
	public abstract class AudioProcessor : IAudioProcessor
	{
		[Token(Token = "0x170002F8")]
		public virtual bool OverridesEndPlayBehavior
		{
			[Token(Token = "0x600159B")]
			[Address(RVA = "0xC1FB4C", Offset = "0xC1FB4C", VA = "0xC1FB4C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F9")]
		public virtual bool ForceStopOnShutdown
		{
			[Token(Token = "0x600159C")]
			[Address(RVA = "0xC1FB54", Offset = "0xC1FB54", VA = "0xC1FB54", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600159D")]
		public abstract AudioProcessorResult Update();

		[Token(Token = "0x600159E")]
		public abstract void Stop();

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xC1FB5C", Offset = "0xC1FB5C", VA = "0xC1FB5C", Slot = "13")]
		public virtual void HandleAudioClipEnd()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xC1F1A0", Offset = "0xC1F1A0", VA = "0xC1F1A0")]
		protected AudioProcessor()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class AudioRequest
	{
		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D28", Offset = "0x8D0D28")]
		[SerializeField]
		private AudioKeyData _audioKey;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0D74", Offset = "0x8D0D74")]
		[SerializeField]
		private bool _autoRestartOnInterupt;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EffectRequestPayload _payload;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EffectRequestState _requestState;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InterruptedRequestHandle _interruptedRequestHandle;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0DC0", Offset = "0x8D0DC0")]
		private UnityEngine.Object <Owner>k__BackingField;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0DD0", Offset = "0x8D0DD0")]
		private bool <IsStarted>k__BackingField;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0DE0", Offset = "0x8D0DE0")]
		private AudioRuntime <AudioRuntime>k__BackingField;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0DF0", Offset = "0x8D0DF0")]
		private bool <IsRequestActive>k__BackingField;

		[Token(Token = "0x170002FA")]
		protected UnityEngine.Object Owner
		{
			[Token(Token = "0x60015A1")]
			[Address(RVA = "0xC2010C", Offset = "0xC2010C", VA = "0xC2010C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B1C", Offset = "0x8E2B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A2")]
			[Address(RVA = "0xC20114", Offset = "0xC20114", VA = "0xC20114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B2C", Offset = "0x8E2B2C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		protected bool IsStarted
		{
			[Token(Token = "0x60015A3")]
			[Address(RVA = "0xC2011C", Offset = "0xC2011C", VA = "0xC2011C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B3C", Offset = "0x8E2B3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A4")]
			[Address(RVA = "0xC20124", Offset = "0xC20124", VA = "0xC20124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B4C", Offset = "0x8E2B4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public AudioRuntime AudioRuntime
		{
			[Token(Token = "0x60015A5")]
			[Address(RVA = "0xC20130", Offset = "0xC20130", VA = "0xC20130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B5C", Offset = "0x8E2B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015A6")]
			[Address(RVA = "0xC20138", Offset = "0xC20138", VA = "0xC20138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B6C", Offset = "0x8E2B6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public bool IsRequestActive
		{
			[Token(Token = "0x60015A7")]
			[Address(RVA = "0xC20140", Offset = "0xC20140", VA = "0xC20140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B7C", Offset = "0x8E2B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015A8")]
			[Address(RVA = "0xC20148", Offset = "0xC20148", VA = "0xC20148")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B8C", Offset = "0x8E2B8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public bool IsClipPlaying
		{
			[Token(Token = "0x60015A9")]
			[Address(RVA = "0xC20154", Offset = "0xC20154", VA = "0xC20154")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002FF")]
		public AudioKeyData AudioKey
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0xC201C4", Offset = "0xC201C4", VA = "0xC201C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xC201CC", Offset = "0xC201CC", VA = "0xC201CC")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public bool AutoRestartOnInterupt
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xC201D4", Offset = "0xC201D4", VA = "0xC201D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015AD")]
			[Address(RVA = "0xC201DC", Offset = "0xC201DC", VA = "0xC201DC")]
			set
			{
			}
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xC1D374", Offset = "0xC1D374", VA = "0xC1D374")]
		public AudioRequestResult Start(UnityEngine.Object owner, EffectRequestPayload payload)
		{
			return default(AudioRequestResult);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xC201E8", Offset = "0xC201E8", VA = "0xC201E8", Slot = "4")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xC203A4", Offset = "0xC203A4", VA = "0xC203A4", Slot = "5")]
		protected virtual void SetOwner(UnityEngine.Object owner)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xC203AC", Offset = "0xC203AC", VA = "0xC203AC", Slot = "6")]
		protected virtual void HandleBeginPlay()
		{
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xC203B0", Offset = "0xC203B0", VA = "0xC203B0", Slot = "7")]
		protected virtual void HandleEndPlay()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xC203B4", Offset = "0xC203B4", VA = "0xC203B4", Slot = "8")]
		protected virtual void HandleCancelPlay()
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xC203B8", Offset = "0xC203B8", VA = "0xC203B8")]
		private void OnBeginPlay(EffectRuntime runtime)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xC20460", Offset = "0xC20460", VA = "0xC20460")]
		private void OnEndPlay()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xC2049C", Offset = "0xC2049C", VA = "0xC2049C")]
		private void OnCancelPlay()
		{
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xC20640", Offset = "0xC20640", VA = "0xC20640")]
		private void OnRequestTimeOut()
		{
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xC1DE5C", Offset = "0xC1DE5C", VA = "0xC1DE5C")]
		public AudioRequest()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public enum AudioRequestResult
	{
		[Token(Token = "0x40016F1")]
		KeyNotDefined = -2,
		[Token(Token = "0x40016F2")]
		AlreadyStarted,
		[Token(Token = "0x40016F3")]
		RequestFailed,
		[Token(Token = "0x40016F4")]
		Success
	}
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8A4428", Offset = "0x8A4428")]
	public class AudioRuntime : EffectRuntime
	{
		[Token(Token = "0x2000551")]
		private struct PassFilter
		{
			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool enabled;

			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float cutoffFrequency;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float resonanceQ;
		}

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected AudioSource _audioSource;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected AudioHighPassFilter _highPassFilter;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		protected AudioLowPassFilter _lowPassFilter;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PassFilter _highPassDefaultSettings;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private PassFilter _lowPassDefaultSettings;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isGlobalPauseActive;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool _isPaused;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _pitchToRestoreOnUnpause;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _startDelay;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FadeInProcessor _fadeInProcessor;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FadeOutProcessor _fadeOutProcessor;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IntervalLoopProcessor _intervalLoopProcessor;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BasicLinkedList<IAudioProcessor> _activeProcessors;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BasicLinkedList<BasicLinkedList<AudioRuntime>.ILinkedListNode>.ILinkedListNode _clipPoolhandle;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BasicLinkedList<AudioRuntime>.ILinkedListNode _runtimePoolHandle;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private IAudioPoolMap _runtimePoolOwner;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _spatialize;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E30", Offset = "0x8D0E30")]
		private int <PrefabTypeIndex>k__BackingField;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E40", Offset = "0x8D0E40")]
		private AudioEffectClip <RootEffectClip>k__BackingField;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E50", Offset = "0x8D0E50")]
		private AudioEffectClip <SelectedEffectClip>k__BackingField;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E60", Offset = "0x8D0E60")]
		private AudioKeyData <CurrentKey>k__BackingField;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E70", Offset = "0x8D0E70")]
		private bool <IsInitialized>k__BackingField;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E80", Offset = "0x8D0E80")]
		private float <Duration>k__BackingField;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D0E90", Offset = "0x8D0E90")]
		private bool <ForceLooping>k__BackingField;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0EA0", Offset = "0x8D0EA0")]
		[SerializeField]
		private ClosedCaptionManager _closedCaptionManager;

		[Token(Token = "0x17000301")]
		public int PrefabTypeIndex
		{
			[Token(Token = "0x60015B9")]
			[Address(RVA = "0xC207C8", Offset = "0xC207C8", VA = "0xC207C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2B9C", Offset = "0x8E2B9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60015BA")]
			[Address(RVA = "0xC207D0", Offset = "0xC207D0", VA = "0xC207D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BAC", Offset = "0x8E2BAC")]
			protected internal set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x60015BB")]
			[Address(RVA = "0xC207D8", Offset = "0xC207D8", VA = "0xC207D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000303")]
		public bool HasHighPassFilter
		{
			[Token(Token = "0x60015BC")]
			[Address(RVA = "0xC207E0", Offset = "0xC207E0", VA = "0xC207E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000304")]
		public bool HasLowPassFilter
		{
			[Token(Token = "0x60015BD")]
			[Address(RVA = "0xC20850", Offset = "0xC20850", VA = "0xC20850")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000305")]
		public AudioHighPassFilter HighPassFilter
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xC208C0", Offset = "0xC208C0", VA = "0xC208C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000306")]
		public AudioLowPassFilter LowPassFilter
		{
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xC208C8", Offset = "0xC208C8", VA = "0xC208C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000307")]
		public AudioEffectClip RootEffectClip
		{
			[Token(Token = "0x60015C0")]
			[Address(RVA = "0xC208D0", Offset = "0xC208D0", VA = "0xC208D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BBC", Offset = "0x8E2BBC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C1")]
			[Address(RVA = "0xC208D8", Offset = "0xC208D8", VA = "0xC208D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BCC", Offset = "0x8E2BCC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public AudioEffectClip SelectedEffectClip
		{
			[Token(Token = "0x60015C2")]
			[Address(RVA = "0xC208E0", Offset = "0xC208E0", VA = "0xC208E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BDC", Offset = "0x8E2BDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C3")]
			[Address(RVA = "0xC208E8", Offset = "0xC208E8", VA = "0xC208E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BEC", Offset = "0x8E2BEC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public AudioKeyData CurrentKey
		{
			[Token(Token = "0x60015C4")]
			[Address(RVA = "0xC208F0", Offset = "0xC208F0", VA = "0xC208F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2BFC", Offset = "0x8E2BFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015C5")]
			[Address(RVA = "0xC208F8", Offset = "0xC208F8", VA = "0xC208F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C0C", Offset = "0x8E2C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool IsInitialized
		{
			[Token(Token = "0x60015C6")]
			[Address(RVA = "0xC20900", Offset = "0xC20900", VA = "0xC20900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C1C", Offset = "0x8E2C1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xC20908", Offset = "0xC20908", VA = "0xC20908")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C2C", Offset = "0x8E2C2C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public float Duration
		{
			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xC20914", Offset = "0xC20914", VA = "0xC20914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C3C", Offset = "0x8E2C3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xC2091C", Offset = "0xC2091C", VA = "0xC2091C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C4C", Offset = "0x8E2C4C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public bool ForceLooping
		{
			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xC20924", Offset = "0xC20924", VA = "0xC20924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C5C", Offset = "0x8E2C5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xC2092C", Offset = "0xC2092C", VA = "0xC2092C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2C6C", Offset = "0x8E2C6C")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public bool IsPaused
		{
			[Token(Token = "0x60015CC")]
			[Address(RVA = "0xC20938", Offset = "0xC20938", VA = "0xC20938")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xC20940", Offset = "0xC20940", VA = "0xC20940")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public float Pitch
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xC209B4", Offset = "0xC209B4", VA = "0xC209B4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015CF")]
			[Address(RVA = "0xC209D0", Offset = "0xC209D0", VA = "0xC209D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public float Volume
		{
			[Token(Token = "0x60015D0")]
			[Address(RVA = "0xC209FC", Offset = "0xC209FC", VA = "0xC209FC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xC20A18", Offset = "0xC20A18", VA = "0xC20A18")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public bool Mute
		{
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xC20A34", Offset = "0xC20A34", VA = "0xC20A34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015D3")]
			[Address(RVA = "0xC20A50", Offset = "0xC20A50", VA = "0xC20A50")]
			set
			{
			}
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xC20A70", Offset = "0xC20A70", VA = "0xC20A70", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xC20C08", Offset = "0xC20C08", VA = "0xC20C08")]
		protected internal void OnPooledObjectWake(IAudioPoolMap poolOwner, BasicLinkedList<AudioRuntime>.ILinkedListNode node)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xC20C3C", Offset = "0xC20C3C", VA = "0xC20C3C")]
		public void SetGlobalPause(bool value)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xC20CF4", Offset = "0xC20CF4", VA = "0xC20CF4")]
		protected internal void OnPooledObjectSleep()
		{
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xC20E50", Offset = "0xC20E50", VA = "0xC20E50")]
		public bool Initialize(AudioKeyData key, AudioEffectClip clip)
		{
			return default(bool);
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xC20F18", Offset = "0xC20F18", VA = "0xC20F18")]
		private void Shutdown()
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xC211DC", Offset = "0xC211DC", VA = "0xC211DC")]
		public bool SelectClip()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xC215B0", Offset = "0xC215B0", VA = "0xC215B0")]
		public void AddProcessor(IAudioProcessor processor)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xC21618", Offset = "0xC21618", VA = "0xC21618", Slot = "6")]
		public override void Play()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC20304", Offset = "0xC20304", VA = "0xC20304")]
		public bool Cancel()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC21D04", Offset = "0xC21D04", VA = "0xC21D04", Slot = "8")]
		public override void OnCancel()
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xC21E30", Offset = "0xC21E30", VA = "0xC21E30", Slot = "7")]
		public override void OnEnd()
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC21E54", Offset = "0xC21E54", VA = "0xC21E54")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xC22048", Offset = "0xC22048", VA = "0xC22048")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC21418", Offset = "0xC21418", VA = "0xC21418")]
		private void SetupAudioSource(AudioSource targetSource, AudioEffectClip settings, AudioClip clip)
		{
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xC2227C", Offset = "0xC2227C", VA = "0xC2227C")]
		private void RestoreFilterDefaultSettings()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xC20ACC", Offset = "0xC20ACC", VA = "0xC20ACC")]
		private void CacheFilterDefaultSettings()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xC223B4", Offset = "0xC223B4", VA = "0xC223B4")]
		public AudioRuntime()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class AudioRuntimeDebugInfo : MonoBehaviour
	{
		[Token(Token = "0x400170E")]
		private const string SHADER_PROPERTY_COLOR = "_Color";

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0EEC", Offset = "0x8D0EEC")]
		[SerializeField]
		private float MaxDistance;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float MinScale;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float MaxScale;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float FadeOutTime;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D0F68", Offset = "0x8D0F68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0F68", Offset = "0x8D0F68")]
		[SerializeField]
		protected BoolVariable visbility;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D0FD8", Offset = "0x8D0FD8")]
		[SerializeField]
		protected BoolVariable showClipName;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1024", Offset = "0x8D1024")]
		[SerializeField]
		protected BoolVariable autoHide;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1070", Offset = "0x8D1070")]
		[SerializeField]
		protected IntVariable modelUICount;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D10BC", Offset = "0x8D10BC")]
		[SerializeField]
		private Renderer iconRenderer;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMesh textMesh;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource audioSource;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float timeNotPlaying;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool playing;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool isVisble;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool isInNetherRealm;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int NetherLayer;

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xC224D8", Offset = "0xC224D8", VA = "0xC224D8", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xC22678", Offset = "0xC22678", VA = "0xC22678", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xC22758", Offset = "0xC22758", VA = "0xC22758", Slot = "6")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xC229C4", Offset = "0xC229C4", VA = "0xC229C4", Slot = "7")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xC22A68", Offset = "0xC22A68", VA = "0xC22A68", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xC22928", Offset = "0xC22928", VA = "0xC22928")]
		private void Reset()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xC22E0C", Offset = "0xC22E0C", VA = "0xC22E0C")]
		protected void Show()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xC22934", Offset = "0xC22934", VA = "0xC22934")]
		protected void Hide()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xC22EA0", Offset = "0xC22EA0", VA = "0xC22EA0")]
		private void SetRenderLayer(int layer)
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xC22630", Offset = "0xC22630", VA = "0xC22630")]
		private void OnVisibilityChanged(bool visible)
		{
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xC2263C", Offset = "0xC2263C", VA = "0xC2263C")]
		private void OnShowClipName(bool visible)
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xC228F4", Offset = "0xC228F4", VA = "0xC228F4")]
		private void OnModalUICountChanged(int argument)
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xC22F00", Offset = "0xC22F00", VA = "0xC22F00", Slot = "9")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xC23010", Offset = "0xC23010", VA = "0xC23010")]
		public AudioRuntimeDebugInfo()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public class CombatMusicController : MonoBehaviour
	{
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool PrintDebugHelp;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1128", Offset = "0x8D1128")]
		[SerializeField]
		private GlobalEvent onDeathsDoorEnter;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GlobalEvent onDeathsDoorExit;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1170", Offset = "0x8D1170")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1170", Offset = "0x8D1170")]
		private GlobalEvent onPostCombatTransition;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GlobalEvent onRewardCrushed;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private EnemyGlobalEvent onPlayerKilled;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private IntVariable enemiesInCombat;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrackList trackList;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1220", Offset = "0x8D1220")]
		[SerializeField]
		private bool playPrecombatOnStart;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float minPrecombatDuration;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D127C", Offset = "0x8D127C")]
		private bool autoPlayCombatMusic;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float minCombatDuration;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D12D8", Offset = "0x8D12D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D12D8", Offset = "0x8D12D8")]
		private float healthPercentThreshold;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1340", Offset = "0x8D1340")]
		[SerializeField]
		private GlobalEvent onCombat1Start;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GlobalEvent onCombat2Start;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GlobalEvent onCombat3Start;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1398", Offset = "0x8D1398")]
		[SerializeField]
		private bool escalateOnHealthpercent;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D13D0", Offset = "0x8D13D0")]
		private bool autoSelectAllEnemies;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Enemy[] targets;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Enemy[] ignoreTargets;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D143C", Offset = "0x8D143C")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D143C", Offset = "0x8D143C")]
		public float healthPercent;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D1478", Offset = "0x8D1478")]
		public float percentWhenTriggered;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float max;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float combatStart;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool startedCombat;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool escalated;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float earliestEscalation;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool atDeathsDoor;

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xC2307C", Offset = "0xC2307C", VA = "0xC2307C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xC23284", Offset = "0xC23284", VA = "0xC23284")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xC235C8", Offset = "0xC235C8", VA = "0xC235C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xC238CC", Offset = "0xC238CC", VA = "0xC238CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xC23918", Offset = "0xC23918", VA = "0xC23918")]
		private void Update()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xC23B08", Offset = "0xC23B08", VA = "0xC23B08")]
		public bool Evaluate()
		{
			return default(bool);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xC23BF8", Offset = "0xC23BF8", VA = "0xC23BF8")]
		public void HandleLastEnemyKilled()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xC23C14", Offset = "0xC23C14", VA = "0xC23C14")]
		public void HandleDeathsDoorEnter()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xC23C4C", Offset = "0xC23C4C", VA = "0xC23C4C")]
		public void HandleDeathsDoorExit()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xC23C80", Offset = "0xC23C80", VA = "0xC23C80")]
		public void HandleRewardCrushed()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xC23C9C", Offset = "0xC23C9C", VA = "0xC23C9C")]
		public void HandlePlayerKilled()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xC23CC4", Offset = "0xC23CC4", VA = "0xC23CC4")]
		public void PlayCombat1()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xC23CF8", Offset = "0xC23CF8", VA = "0xC23CF8")]
		public void PlayCombat2()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xC23D2C", Offset = "0xC23D2C", VA = "0xC23D2C")]
		public void PlayCombat3()
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xC23D60", Offset = "0xC23D60", VA = "0xC23D60")]
		public CombatMusicController()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class HubMusicController : MonoBehaviour
	{
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB24C", Offset = "0x8AB24C")]
		private sealed class <Start>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HubMusicController <>4__this;

			[Token(Token = "0x17000493")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDA")]
				[Address(RVA = "0xC2489C", Offset = "0xC2489C", VA = "0xC2489C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDC")]
				[Address(RVA = "0xC24904", Offset = "0xC24904", VA = "0xC24904", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0xC24624", Offset = "0xC24624", VA = "0xC24624")]
			[DebuggerHidden]
			public <Start>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD8")]
			[Address(RVA = "0xC24720", Offset = "0xC24720", VA = "0xC24720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0xC24724", Offset = "0xC24724", VA = "0xC24724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0xC248A4", Offset = "0xC248A4", VA = "0xC248A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MusicTrack[] tracks;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lastIndex;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MusicManager musicManager;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<MusicTrack> requiredTracks;

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xC2450C", Offset = "0xC2450C", VA = "0xC2450C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xC245A8", Offset = "0xC245A8", VA = "0xC245A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E2C7C", Offset = "0x8E2C7C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xC24510", Offset = "0xC24510", VA = "0xC24510")]
		private void EnsureAudioIsReady()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xC24650", Offset = "0xC24650", VA = "0xC24650")]
		public HubMusicController()
		{
		}
	}
	[Token(Token = "0x2000356")]
	internal interface IInterruptedRequestHandleInternal
	{
		[Token(Token = "0x17000311")]
		InterruptedRequest Request
		{
			[Token(Token = "0x600160A")]
			get;
		}

		[Token(Token = "0x6001608")]
		void SetNode(InterruptedRequestQueue queue, BasicLinkedList<InterruptedRequest>.ILinkedListNode node);

		[Token(Token = "0x6001609")]
		bool RemoveNode();
	}
	[Token(Token = "0x2000357")]
	public class InterruptedRequestHandle : IInterruptedRequestHandleInternal
	{
		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private BasicLinkedList<InterruptedRequest>.ILinkedListNode _node;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InterruptedRequestQueue _queue;

		[Token(Token = "0x17000312")]
		private InterruptedRequest SG.Claymore.Audio.IInterruptedRequestHandleInternal.Request
		{
			[Token(Token = "0x600160E")]
			[Address(RVA = "0xC24C10", Offset = "0xC24C10", VA = "0xC24C10", Slot = "6")]
			get
			{
				return default(InterruptedRequest);
			}
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xC202A0", Offset = "0xC202A0", VA = "0xC202A0")]
		public bool CancelRequest()
		{
			return default(bool);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xC24A88", Offset = "0xC24A88", VA = "0xC24A88", Slot = "5")]
		private bool SG.Claymore.Audio.IInterruptedRequestHandleInternal.RemoveNode()
		{
			return default(bool);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xC24B58", Offset = "0xC24B58", VA = "0xC24B58", Slot = "4")]
		private void SG.Claymore.Audio.IInterruptedRequestHandleInternal.SetNode(InterruptedRequestQueue queue, BasicLinkedList<InterruptedRequest>.ILinkedListNode node)
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xC207C0", Offset = "0xC207C0", VA = "0xC207C0")]
		public InterruptedRequestHandle()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class InterruptedRequestList : BasicLinkedList<InterruptedRequest>
	{
		[Token(Token = "0x6001610")]
		[Address(RVA = "0xC24CEC", Offset = "0xC24CEC", VA = "0xC24CEC")]
		public InterruptedRequestList()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public struct InterruptedRequest
	{
		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public InterruptedRequestHandle Handle;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public EffectKeyData Key;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EffectRequestPayload Payload;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action<EffectRuntime> OnBeginCallback;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action OnEndCallback;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnCanceledCallback;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Action OnTimeOutCallback;
	}
	[Token(Token = "0x200035A")]
	public class InterruptedRequestQueue
	{
		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private InterruptedRequestList[] _interrupteddRequests;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private EffectsDebuggerClient _remoteDebugger;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D14BC", Offset = "0x8D14BC")]
		private int <Count>k__BackingField;

		[Token(Token = "0x17000313")]
		public int Count
		{
			[Token(Token = "0x6001611")]
			[Address(RVA = "0xC24D40", Offset = "0xC24D40", VA = "0xC24D40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2CE0", Offset = "0x8E2CE0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001612")]
			[Address(RVA = "0xC24D48", Offset = "0xC24D48", VA = "0xC24D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2CF0", Offset = "0x8E2CF0")]
			private set
			{
			}
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xC24D50", Offset = "0xC24D50", VA = "0xC24D50")]
		public InterruptedRequestQueue(int maxPriorities)
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xC24E70", Offset = "0xC24E70", VA = "0xC24E70")]
		public void Enqueue(InterruptedRequest request)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xC24FCC", Offset = "0xC24FCC", VA = "0xC24FCC")]
		public int Dequeue(EffectsController controller, int minPriority, int numToDequeue)
		{
			return default(int);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xC2490C", Offset = "0xC2490C", VA = "0xC2490C")]
		public bool CancelRequest(InterruptedRequestHandle handle)
		{
			return default(bool);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xC252BC", Offset = "0xC252BC", VA = "0xC252BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8E2D00", Offset = "0x8E2D00")]
		public void SetRemoteDebugger(EffectsDebuggerClient remoteDebugger)
		{
		}
	}
	[Token(Token = "0x200035B")]
	internal class IntervalLoopProcessor : AudioProcessor
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _intervalLoopCount;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float _intervalLoopStartTime;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _intervalLoopShouldPlay;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private AudioRuntime _runtime;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FloatRange _intervalDelay;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _loopCount;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D14CC", Offset = "0x8D14CC")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000314")]
		public bool IsActive
		{
			[Token(Token = "0x6001618")]
			[Address(RVA = "0xC252C4", Offset = "0xC252C4", VA = "0xC252C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D38", Offset = "0x8E2D38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001619")]
			[Address(RVA = "0xC252CC", Offset = "0xC252CC", VA = "0xC252CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D48", Offset = "0x8E2D48")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000315")]
		public override bool OverridesEndPlayBehavior
		{
			[Token(Token = "0x600161A")]
			[Address(RVA = "0xC252D8", Offset = "0xC252D8", VA = "0xC252D8", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xC21CAC", Offset = "0xC21CAC", VA = "0xC21CAC")]
		public void Start(AudioRuntime runtime, FloatRange intervalDelay, int loopCount)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xC252E0", Offset = "0xC252E0", VA = "0xC252E0", Slot = "12")]
		public override void Stop()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xC252E8", Offset = "0xC252E8", VA = "0xC252E8", Slot = "11")]
		public override AudioProcessorResult Update()
		{
			return default(AudioProcessorResult);
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xC2538C", Offset = "0xC2538C", VA = "0xC2538C", Slot = "13")]
		public override void HandleAudioClipEnd()
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xC253CC", Offset = "0xC253CC", VA = "0xC253CC")]
		protected void SetNextWaitTime()
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xC224D0", Offset = "0xC224D0", VA = "0xC224D0")]
		public IntervalLoopProcessor()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A448C", Offset = "0x8A448C")]
	public class ListenerDistanceSource : ProceduralSourceAsset
	{
		[Token(Token = "0x2000553")]
		private class ListenerDistanceRuntime : ProceduralSourceRuntime
		{
			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0xC2549C", Offset = "0xC2549C", VA = "0xC2549C", Slot = "6")]
			public override float GetValue()
			{
				return default(float);
			}

			[Token(Token = "0x6001DDE")]
			[Address(RVA = "0xC25484", Offset = "0xC25484", VA = "0xC25484")]
			public ListenerDistanceRuntime()
			{
			}
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0xC25428", Offset = "0xC25428", VA = "0xC25428", Slot = "4")]
		public override ProceduralSourceRuntime CreateRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0xC2548C", Offset = "0xC2548C", VA = "0xC2548C")]
		public ListenerDistanceSource()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035D")]
	public class ProceduralAudio : AudioRequest, IAudioProcessor, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D14DC", Offset = "0x8D14DC")]
		[SerializeField]
		private ProceduralSourceAsset _source;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1528", Offset = "0x8D1528")]
		[SerializeField]
		private AudioPropertyContainer _audioProperties;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1574", Offset = "0x8D1574")]
		[SerializeField]
		private ProceduralAudioBuffer _audioBuffer;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D15C0", Offset = "0x8D15C0")]
		[SerializeField]
		private TrackedTransform _listenerTransform;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D160C", Offset = "0x8D160C")]
		[SerializeField]
		private TrackedTransform _sourceTransform;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1658", Offset = "0x8D1658")]
		[SerializeField]
		private TrackedTransform _relativeTransform;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ProceduralSourceRuntime _sourceRuntime;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool _supressAudio;

		[Token(Token = "0x17000316")]
		public TrackedTransform ListenerTransform
		{
			[Token(Token = "0x6001624")]
			[Address(RVA = "0xC25C90", Offset = "0xC25C90", VA = "0xC25C90")]
			get
			{
				return default(TrackedTransform);
			}
			[Token(Token = "0x6001623")]
			[Address(RVA = "0xC25C78", Offset = "0xC25C78", VA = "0xC25C78")]
			set
			{
			}
		}

		[Token(Token = "0x17000317")]
		public TrackedTransform SourceTransform
		{
			[Token(Token = "0x6001626")]
			[Address(RVA = "0xC25CB4", Offset = "0xC25CB4", VA = "0xC25CB4")]
			get
			{
				return default(TrackedTransform);
			}
			[Token(Token = "0x6001625")]
			[Address(RVA = "0xC25C9C", Offset = "0xC25C9C", VA = "0xC25C9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000318")]
		public TrackedTransform RelativeTransform
		{
			[Token(Token = "0x6001628")]
			[Address(RVA = "0xC25CD8", Offset = "0xC25CD8", VA = "0xC25CD8")]
			get
			{
				return default(TrackedTransform);
			}
			[Token(Token = "0x6001627")]
			[Address(RVA = "0xC25CC0", Offset = "0xC25CC0", VA = "0xC25CC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public bool OverridesEndPlayBehavior
		{
			[Token(Token = "0x6001629")]
			[Address(RVA = "0xC25CE4", Offset = "0xC25CE4", VA = "0xC25CE4", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031A")]
		public bool ForceStopOnShutdown
		{
			[Token(Token = "0x600162A")]
			[Address(RVA = "0xC25CEC", Offset = "0xC25CEC", VA = "0xC25CEC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700031B")]
		public AudioPropertyContainer AudioProperties
		{
			[Token(Token = "0x600162B")]
			[Address(RVA = "0xC25CF4", Offset = "0xC25CF4", VA = "0xC25CF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031C")]
		public ProceduralAudioBuffer AudioBuffer
		{
			[Token(Token = "0x600162C")]
			[Address(RVA = "0xC25CFC", Offset = "0xC25CFC", VA = "0xC25CFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700031D")]
		public ProceduralSourceAsset Source
		{
			[Token(Token = "0x600162D")]
			[Address(RVA = "0xC25D04", Offset = "0xC25D04", VA = "0xC25D04")]
			get
			{
				return null;
			}
			[Token(Token = "0x600162E")]
			[Address(RVA = "0xC25D0C", Offset = "0xC25D0C", VA = "0xC25D0C")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool Supress
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xC25D14", Offset = "0xC25D14", VA = "0xC25D14")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xC25D1C", Offset = "0xC25D1C", VA = "0xC25D1C")]
			set
			{
			}
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xC25E3C", Offset = "0xC25E3C", VA = "0xC25E3C")]
		public AudioRequestResult Start(UnityEngine.Object owner)
		{
			return default(AudioRequestResult);
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xC25EA0", Offset = "0xC25EA0", VA = "0xC25EA0", Slot = "5")]
		protected override void SetOwner(UnityEngine.Object owner)
		{
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xC25EDC", Offset = "0xC25EDC", VA = "0xC25EDC", Slot = "6")]
		protected override void HandleBeginPlay()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xC25F6C", Offset = "0xC25F6C", VA = "0xC25F6C", Slot = "7")]
		protected override void HandleEndPlay()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xC25F9C", Offset = "0xC25F9C", VA = "0xC25F9C", Slot = "8")]
		protected override void HandleCancelPlay()
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xC25F84", Offset = "0xC25F84", VA = "0xC25F84")]
		private void StopSource()
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xC25FB4", Offset = "0xC25FB4", VA = "0xC25FB4", Slot = "11")]
		public AudioProcessorResult Update()
		{
			return default(AudioProcessorResult);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xC26188", Offset = "0xC26188", VA = "0xC26188")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xC261C0", Offset = "0xC261C0", VA = "0xC261C0")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xC26254", Offset = "0xC26254", VA = "0xC26254", Slot = "14")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xC26258", Offset = "0xC26258", VA = "0xC26258", Slot = "15")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xC2630C", Offset = "0xC2630C", VA = "0xC2630C", Slot = "13")]
		public void HandleAudioClipEnd()
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xC26310", Offset = "0xC26310", VA = "0xC26310")]
		public ProceduralAudio()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200035E")]
	public class ProceduralAudioBuffer : ISerializationCallbackReceiver
	{
		[Token(Token = "0x400175A")]
		private const int DEFAULT_SAMPLE_SIZE = 5;

		[Token(Token = "0x400175B")]
		private const float DEFAULT_MAX_VALUE = 1f;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D16A4", Offset = "0x8D16A4")]
		private int _sampleSize;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D16F0", Offset = "0x8D16F0")]
		private float _maxValue;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D173C", Offset = "0x8D173C")]
		private float _minValue;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1788", Offset = "0x8D1788")]
		private float _filter;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] _sourceArray;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _currentIndex;

		[Token(Token = "0x1700031F")]
		public int SampleSize
		{
			[Token(Token = "0x600163E")]
			[Address(RVA = "0xC263C8", Offset = "0xC263C8", VA = "0xC263C8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000320")]
		public float MaxValue
		{
			[Token(Token = "0x600163F")]
			[Address(RVA = "0xC263D0", Offset = "0xC263D0", VA = "0xC263D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000321")]
		public float MinValue
		{
			[Token(Token = "0x6001640")]
			[Address(RVA = "0xC263D8", Offset = "0xC263D8", VA = "0xC263D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000322")]
		public float Filter
		{
			[Token(Token = "0x6001641")]
			[Address(RVA = "0xC263E0", Offset = "0xC263E0", VA = "0xC263E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xC263B4", Offset = "0xC263B4", VA = "0xC263B4")]
		public ProceduralAudioBuffer()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xC25DE4", Offset = "0xC25DE4", VA = "0xC25DE4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xC26074", Offset = "0xC26074", VA = "0xC26074")]
		public float GetNormalizedValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xC263E8", Offset = "0xC263E8", VA = "0xC263E8")]
		private float GetAverageSourceValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xC2645C", Offset = "0xC2645C", VA = "0xC2645C")]
		public void SetBuffer(int sampleSize, float min, float max, float filter)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xC26508", Offset = "0xC26508", VA = "0xC26508")]
		public void SetBuffer(ProceduralAudioBuffer buffer)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xC26224", Offset = "0xC26224", VA = "0xC26224")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xC264A0", Offset = "0xC264A0", VA = "0xC264A0")]
		private void CreateBuffer()
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xC26568", Offset = "0xC26568", VA = "0xC26568", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xC2656C", Offset = "0xC2656C", VA = "0xC2656C", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public abstract class ProceduralAudioProperty
	{
		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected bool _isEnabled;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D17E4", Offset = "0x8D17E4")]
		private UnityEngine.Object <Owner>k__BackingField;

		[Token(Token = "0x17000323")]
		protected UnityEngine.Object Owner
		{
			[Token(Token = "0x600164C")]
			[Address(RVA = "0xC26570", Offset = "0xC26570", VA = "0xC26570")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D58", Offset = "0x8E2D58")]
			get
			{
				return null;
			}
			[Token(Token = "0x600164D")]
			[Address(RVA = "0xC26578", Offset = "0xC26578", VA = "0xC26578")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D68", Offset = "0x8E2D68")]
			set
			{
			}
		}

		[Token(Token = "0x17000324")]
		public bool IsEnabled
		{
			[Token(Token = "0x600164E")]
			[Address(RVA = "0xC26580", Offset = "0xC26580", VA = "0xC26580")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600164F")]
		public abstract void SetValue(AudioRuntime runtime, float value);

		[Token(Token = "0x6001650")]
		public abstract void SetMinValue(AudioRuntime runtime);

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xC24508", Offset = "0xC24508", VA = "0xC24508", Slot = "6")]
		public virtual void OnValidate()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xC1FF38", Offset = "0xC1FF38", VA = "0xC1FF38")]
		public void SetOwner(UnityEngine.Object owner)
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xC24040", Offset = "0xC24040", VA = "0xC24040")]
		protected ProceduralAudioProperty()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000360")]
	public class AudioPropertyContainer : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VolumeAudioProperty Volume;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PitchAudioProperty Pitch;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HpfAudioProperty HPF;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LpfAudioProperty LPF;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<ProceduralAudioProperty> activeList;

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xC1FB60", Offset = "0xC1FB60", VA = "0xC1FB60")]
		public AudioPropertyContainer()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xC1FD8C", Offset = "0xC1FD8C", VA = "0xC1FD8C", Slot = "4")]
		private void UnityEngine.ISerializationCallbackReceiver.OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xC1FD90", Offset = "0xC1FD90", VA = "0xC1FD90", Slot = "5")]
		private void UnityEngine.ISerializationCallbackReceiver.OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xC1FD94", Offset = "0xC1FD94", VA = "0xC1FD94")]
		public void RefreshPropertyArray()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xC1FE98", Offset = "0xC1FE98", VA = "0xC1FE98")]
		public void SetOwner(UnityEngine.Object owner)
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xC1FF40", Offset = "0xC1FF40", VA = "0xC1FF40")]
		public void SetValue(AudioRuntime runtime, float value)
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xC1FFF4", Offset = "0xC1FFF4", VA = "0xC1FFF4")]
		public void SetMinValue(AudioRuntime runtime)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xC20098", Offset = "0xC20098", VA = "0xC20098")]
		public void OnValidate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000361")]
	public class VolumeAudioProperty : ProceduralAudioProperty
	{
		[Token(Token = "0x4001769")]
		private const float DefaultMax = 1f;

		[Token(Token = "0x400176A")]
		private const float DefaultMin = 0.1f;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D17F4", Offset = "0x8D17F4")]
		private float _max;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1840", Offset = "0x8D1840")]
		private float _min;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D188C", Offset = "0x8D188C")]
		private AnimationCurve _curve;

		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB6FDE4", Offset = "0xB6FDE4", VA = "0xB6FDE4")]
		public VolumeAudioProperty()
		{
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB6FE3C", Offset = "0xB6FE3C", VA = "0xB6FE3C")]
		public VolumeAudioProperty(bool enabled, float min, float max, AnimationCurve curve)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB6FF34", Offset = "0xB6FF34", VA = "0xB6FF34", Slot = "4")]
		public override void SetValue(AudioRuntime runtime, float value)
		{
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB6FFF4", Offset = "0xB6FFF4", VA = "0xB6FFF4", Slot = "5")]
		public override void SetMinValue(AudioRuntime runtime)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB70014", Offset = "0xB70014", VA = "0xB70014", Slot = "6")]
		public override void OnValidate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000362")]
	public class PitchAudioProperty : ProceduralAudioProperty
	{
		[Token(Token = "0x400176E")]
		private const float DefaultMax = 1.2f;

		[Token(Token = "0x400176F")]
		private const float DefaultMin = 0.8f;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D18D8", Offset = "0x8D18D8")]
		private float _max;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1924", Offset = "0x8D1924")]
		private float _min;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1970", Offset = "0x8D1970")]
		private AnimationCurve _curve;

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xC1FC84", Offset = "0xC1FC84", VA = "0xC1FC84")]
		public PitchAudioProperty()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xC25A14", Offset = "0xC25A14", VA = "0xC25A14")]
		public PitchAudioProperty(bool enabled, float min, float max, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xC25B0C", Offset = "0xC25B0C", VA = "0xC25B0C", Slot = "4")]
		public override void SetValue(AudioRuntime runtime, float value)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xC25BC8", Offset = "0xC25BC8", VA = "0xC25BC8", Slot = "5")]
		public override void SetMinValue(AudioRuntime runtime)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xC25BE4", Offset = "0xC25BE4", VA = "0xC25BE4", Slot = "6")]
		public override void OnValidate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000363")]
	public class HpfAudioProperty : ProceduralAudioProperty
	{
		[Token(Token = "0x4001773")]
		private const string ErrorMessagFormat = "The runtime named '{0}' does not have an AudioHighPassFiler component! LpfAudioProperty settings cannot be applied (Owner: {1}).";

		[Token(Token = "0x4001774")]
		private const int DefaultMax = 22000;

		[Token(Token = "0x4001775")]
		private const int DefaultMin = 10;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D19BC", Offset = "0x8D19BC")]
		private int _max;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A08", Offset = "0x8D1A08")]
		private int _min;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1A54", Offset = "0x8D1A54")]
		private AnimationCurve _curve;

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xC1FCDC", Offset = "0xC1FCDC", VA = "0xC1FCDC")]
		public HpfAudioProperty()
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xC24048", Offset = "0xC24048", VA = "0xC24048")]
		public HpfAudioProperty(bool enabled, int min, int max, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xC24140", Offset = "0xC24140", VA = "0xC24140", Slot = "4")]
		public override void SetValue(AudioRuntime runtime, float value)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xC2430C", Offset = "0xC2430C", VA = "0xC2430C", Slot = "5")]
		public override void SetMinValue(AudioRuntime runtime)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xC2447C", Offset = "0xC2447C", VA = "0xC2447C", Slot = "6")]
		public override void OnValidate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000364")]
	public class LpfAudioProperty : ProceduralAudioProperty
	{
		[Token(Token = "0x4001779")]
		private const string ErrorMessagFormat = "The runtime named '{0}' does not have an AudioLowPassFiler component! LpfAudioProperty settings cannot be applied. (Owner: {1})";

		[Token(Token = "0x400177A")]
		private const int DefaultMax = 22000;

		[Token(Token = "0x400177B")]
		private const int DefaultMin = 10;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1AA0", Offset = "0x8D1AA0")]
		private int _max;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1AEC", Offset = "0x8D1AEC")]
		private int _min;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1B38", Offset = "0x8D1B38")]
		private AnimationCurve _curve;

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xC1FD34", Offset = "0xC1FD34", VA = "0xC1FD34")]
		public LpfAudioProperty()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xC25554", Offset = "0xC25554", VA = "0xC25554")]
		public LpfAudioProperty(bool enabled, int min, int max, AnimationCurve curve)
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xC2564C", Offset = "0xC2564C", VA = "0xC2564C", Slot = "4")]
		public override void SetValue(AudioRuntime runtime, float value)
		{
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xC25818", Offset = "0xC25818", VA = "0xC25818", Slot = "5")]
		public override void SetMinValue(AudioRuntime runtime)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xC25988", Offset = "0xC25988", VA = "0xC25988", Slot = "6")]
		public override void OnValidate()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public abstract class ProceduralSourceAsset : ScriptableObject
	{
		[Token(Token = "0x6001670")]
		public abstract ProceduralSourceRuntime CreateRuntime();

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xC25494", Offset = "0xC25494", VA = "0xC25494")]
		protected ProceduralSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public abstract class ProceduralSourceRuntime
	{
		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ProceduralAudio _owner;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B84", Offset = "0x8D1B84")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x17000325")]
		protected bool IsPlaying
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xC26588", Offset = "0xC26588", VA = "0xC26588")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D78", Offset = "0x8E2D78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xC26590", Offset = "0xC26590", VA = "0xC26590")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D88", Offset = "0x8E2D88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000326")]
		protected ProceduralAudio Owner
		{
			[Token(Token = "0x6001674")]
			[Address(RVA = "0xC2659C", Offset = "0xC2659C", VA = "0xC2659C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xC265A4", Offset = "0xC265A4", VA = "0xC265A4", Slot = "4")]
		public virtual void OnBeginPlay(ProceduralAudio owner)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xC265D4", Offset = "0xC265D4", VA = "0xC265D4", Slot = "5")]
		public virtual void OnEndPlay()
		{
		}

		[Token(Token = "0x6001677")]
		public abstract float GetValue();

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xC265DC", Offset = "0xC265DC", VA = "0xC265DC", Slot = "7")]
		public virtual void Reset()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xC2554C", Offset = "0xC2554C", VA = "0xC2554C")]
		protected ProceduralSourceRuntime()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class AudioRuntimePool : BasicLinkedList<AudioRuntime>
	{
		[Token(Token = "0x600167A")]
		[Address(RVA = "0xC2302C", Offset = "0xC2302C", VA = "0xC2302C")]
		public AudioRuntimePool()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public interface IAudioPoolMap
	{
		[Token(Token = "0x600167B")]
		void ReleaseRuntime(BasicLinkedList<AudioRuntime>.ILinkedListNode node);
	}
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A44EC", Offset = "0x8A44EC")]
	public class SFXController : EffectsController
	{
		[Token(Token = "0x2000554")]
		protected class AudioPoolMap : PoolMap, IAudioPoolMap
		{
			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Transform _cachedRoot;

			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private AudioRuntimePool Unused;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private AudioRuntimePool Active;

			[Token(Token = "0x17000495")]
			public bool HasInactiveNodes
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0xB6DE7C", Offset = "0xB6DE7C", VA = "0xB6DE7C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0xB6DC4C", Offset = "0xB6DC4C", VA = "0xB6DC4C")]
			public AudioPoolMap(int instanceCount, AudioRuntime effectRuntimePrefab, Transform root)
			{
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0xB6DED4", Offset = "0xB6DED4", VA = "0xB6DED4")]
			public BasicLinkedList<AudioRuntime>.ILinkedListNode GetNextNode()
			{
				return null;
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0xB6DFEC", Offset = "0xB6DFEC", VA = "0xB6DFEC")]
			public BasicLinkedList<AudioRuntime>.ILinkedListNode PeekOldestActive()
			{
				return null;
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0xB6E044", Offset = "0xB6E044", VA = "0xB6E044", Slot = "5")]
			public void ReleaseRuntime(BasicLinkedList<AudioRuntime>.ILinkedListNode node)
			{
			}

			[Token(Token = "0x6001DE4")]
			[Address(RVA = "0xB6E0AC", Offset = "0xB6E0AC", VA = "0xB6E0AC", Slot = "4")]
			public override void ResetParent()
			{
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0xB6E2B8", Offset = "0xB6E2B8", VA = "0xB6E2B8")]
			public void SetGlobalPause(bool value)
			{
			}

			[Token(Token = "0x6001DE6")]
			[Address(RVA = "0xB6E12C", Offset = "0xB6E12C", VA = "0xB6E12C")]
			private void ResetParent(BasicLinkedList<AudioRuntime>.ILinkedListNode head)
			{
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0xB6E348", Offset = "0xB6E348", VA = "0xB6E348")]
			private void SetGlobalPause(BasicLinkedList<AudioRuntime>.ILinkedListNode head, bool value)
			{
			}
		}

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1B94", Offset = "0x8D1B94")]
		private readonly RemoteDebuggerConfiguration <DebuggerConfiguration>k__BackingField;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1BA4", Offset = "0x8D1BA4")]
		[AttributeAttribute(Name = "ResourceTypeAttribute", RVA = "0x8D1BA4", Offset = "0x8D1BA4")]
		[SerializeField]
		private SG.Claymore.ResourceLoading.AssetAddress[] debugAllDatabases;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C3C", Offset = "0x8D1C3C")]
		private static AudioListener <AudioListener>k__BackingField;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D1C4C", Offset = "0x8D1C4C")]
		private static GameObject <AudioListenerGO>k__BackingField;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private AudioPoolMap[,] _poolLookUpTable;

		[NonSerialized]
		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "InjectedFeatureAttribute", RVA = "0x8D1C5C", Offset = "0x8D1C5C")]
		private AudioDatabase _database;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private InterruptedRequestQueue _interruptedRequestQueue;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float _interruptedUpdateTime;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int _interroptedRequestCount;

		[Token(Token = "0x17000327")]
		public override RemoteDebuggerConfiguration DebuggerConfiguration
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xC265E0", Offset = "0xC265E0", VA = "0xC265E0", Slot = "11")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2D98", Offset = "0x8E2D98")]
			get
			{
				return default(RemoteDebuggerConfiguration);
			}
		}

		[Token(Token = "0x17000328")]
		public AudioDatabase[] DebugAllDatabases
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xC265EC", Offset = "0xC265EC", VA = "0xC265EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public static AudioListener AudioListener
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0xC2663C", Offset = "0xC2663C", VA = "0xC2663C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DA8", Offset = "0x8E2DA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600167F")]
			[Address(RVA = "0xC2668C", Offset = "0xC2668C", VA = "0xC2668C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DB8", Offset = "0x8E2DB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032A")]
		public static GameObject AudioListenerGO
		{
			[Token(Token = "0x6001680")]
			[Address(RVA = "0xC266E4", Offset = "0xC266E4", VA = "0xC266E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DC8", Offset = "0x8E2DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001681")]
			[Address(RVA = "0xC26734", Offset = "0xC26734", VA = "0xC26734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DD8", Offset = "0x8E2DD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700032B")]
		public override EffectsDatabase Database
		{
			[Token(Token = "0x6001685")]
			[Address(RVA = "0xC26B34", Offset = "0xC26B34", VA = "0xC26B34", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xC2678C", Offset = "0xC2678C", VA = "0xC2678C")]
		public static void SetAudioListener(AudioListener listener)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xC2683C", Offset = "0xC2683C", VA = "0xC2683C", Slot = "15")]
		protected override bool CheckIsEnabled(EffectKeyData effectKeyData)
		{
			return default(bool);
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xC26930", Offset = "0xC26930", VA = "0xC26930")]
		public static void CreateListener()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xC26B3C", Offset = "0xC26B3C", VA = "0xC26B3C", Slot = "13")]
		protected override void CreatePool(Transform root)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xC27080", Offset = "0xC27080", VA = "0xC27080", Slot = "14")]
		protected override EffectRuntime GetEffect(EffectKeyData request)
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0xC27478", Offset = "0xC27478", VA = "0xC27478")]
		public void SetGlobalPause(bool value)
		{
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xC1F80C", Offset = "0xC1F80C", VA = "0xC1F80C")]
		public void InterruptedRequest(EffectKeyData key, InterruptedRequestHandle handle, EffectRequestPayload payload, [Optional] Action<EffectRuntime> onBeginCallback, [Optional] Action onEndCallback, [Optional] Action onCanceledCallback, [Optional] Action onTimeOutCallback)
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xC2755C", Offset = "0xC2755C", VA = "0xC2755C", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xC275D0", Offset = "0xC275D0", VA = "0xC275D0", Slot = "16")]
		protected override void OnProcessRunningRequest(uint id, int priority, EffectKeyData request, EffectRuntime instance)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xC27640", Offset = "0xC27640", VA = "0xC27640", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xC276FC", Offset = "0xC276FC", VA = "0xC276FC")]
		public SFXController()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public enum Phase
	{
		[Token(Token = "0x400178B")]
		None,
		[Token(Token = "0x400178C")]
		PreCombat,
		[Token(Token = "0x400178D")]
		Combat1,
		[Token(Token = "0x400178E")]
		Combat2,
		[Token(Token = "0x400178F")]
		PostCombat,
		[Token(Token = "0x4001790")]
		Combat3
	}
	[Token(Token = "0x200036B")]
	public enum SelectionMode
	{
		[Token(Token = "0x4001792")]
		RandomNonRepeating,
		[Token(Token = "0x4001793")]
		Random,
		[Token(Token = "0x4001794")]
		Sequential,
		[Token(Token = "0x4001795")]
		MatchLastSharedIndex
	}
	[Token(Token = "0x200036C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A454C", Offset = "0x8A454C")]
	public class TrackList : ScriptableObject
	{
		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool debugLogTrackChanges;

		[Token(Token = "0x4001797")]
		private const string SHARE_TOOLTIP = "When selected, the index of the track played  will be saved. Any selection mode set to MatchLastSharedIndex will use that index.";

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LevelManager levelManager;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MusicManager musicManager;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MusicTrack deathsDoor;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MusicMixChange playerDeathMixChange;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1CB0", Offset = "0x8D1CB0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1CB0", Offset = "0x8D1CB0")]
		private MusicTrack onCrushTransition;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool enableAlternateCrushTransitions;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1D30", Offset = "0x8D1D30")]
		private MusicTrack onCrushTransitionPreBossAlive;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MusicTrack onCrushTransitionPreBossDead;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D1D8C", Offset = "0x8D1D8C")]
		[SerializeField]
		private SelectionMode preCombatSelectionMode;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private MusicTrack[] preCombat;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1DE8", Offset = "0x8D1DE8")]
		private bool sharePrecombatIndex;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int lastPreIndex;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1E34", Offset = "0x8D1E34")]
		[SerializeField]
		private SelectionMode combatSelectionMode;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private MusicTrack[] combat;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1E7C", Offset = "0x8D1E7C")]
		private bool shareCombatIndex;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int lastCombatIndex;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1EC8", Offset = "0x8D1EC8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1EC8", Offset = "0x8D1EC8")]
		private SelectionMode combat2SelectionMode;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1F24", Offset = "0x8D1F24")]
		private MusicTrack[] combat2;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D1F70", Offset = "0x8D1F70")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D1F70", Offset = "0x8D1F70")]
		private bool shareCombat2Index;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static int lastCombat2Index;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D1FE0", Offset = "0x8D1FE0")]
		[SerializeField]
		private SelectionMode combat3SelectionMode;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private MusicTrack[] combat3;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2028", Offset = "0x8D2028")]
		private bool shareCombat3Index;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static int lastCombat3Index;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D2074", Offset = "0x8D2074")]
		[SerializeField]
		private SelectionMode postCombatSelectionMode;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private MusicTrack[] postCombat;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D20BC", Offset = "0x8D20BC")]
		private bool sharePostIndex;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int lastPostIndex;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private List<MusicTrack> requiredTracks;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private MusicTrack lastTrack;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static int sharedLastIndex;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool resetCombatIndex;

		[Token(Token = "0x1700032C")]
		public bool HasDeathsDoorTrack
		{
			[Token(Token = "0x600169C")]
			[Address(RVA = "0xB6F1F0", Offset = "0xB6F1F0", VA = "0xB6F1F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700032D")]
		public bool HasCrushTransitionTrack
		{
			[Token(Token = "0x600169D")]
			[Address(RVA = "0xB6F260", Offset = "0xB6F260", VA = "0xB6F260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0xB6E4FC", Offset = "0xB6E4FC", VA = "0xB6E4FC")]
		public void EnsureAudioIsReady()
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB6E5EC", Offset = "0xB6E5EC", VA = "0xB6E5EC")]
		public void PlayPreCombat()
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB6E634", Offset = "0xB6E634", VA = "0xB6E634")]
		public void PlayCombat1()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0xB6E6E0", Offset = "0xB6E6E0", VA = "0xB6E6E0")]
		public void PlayCombat2()
		{
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB6E6E8", Offset = "0xB6E6E8", VA = "0xB6E6E8")]
		public void PlayCombat3()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB6E6F0", Offset = "0xB6E6F0", VA = "0xB6E6F0")]
		public void PlayPostCombat()
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB6E70C", Offset = "0xB6E70C", VA = "0xB6E70C")]
		public void EnterDeathsDoor()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB6E728", Offset = "0xB6E728", VA = "0xB6E728")]
		public void ExitDeathsDoor()
		{
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0xB6E744", Offset = "0xB6E744", VA = "0xB6E744")]
		public void PlayCrushTransition()
		{
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0xB6E9D8", Offset = "0xB6E9D8", VA = "0xB6E9D8")]
		public void PlayPlayerDeath()
		{
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0xB6EA6C", Offset = "0xB6EA6C", VA = "0xB6EA6C")]
		private MusicTrack GetTrack(Phase phase)
		{
			return null;
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xB6E5F4", Offset = "0xB6E5F4", VA = "0xB6E5F4")]
		private void Play(Phase phase)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xB6F158", Offset = "0xB6F158", VA = "0xB6F158")]
		public void SetLastPhase(Phase phase)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xB6F184", Offset = "0xB6F184", VA = "0xB6F184")]
		public static void ResetNextCombat()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0xB6F2D0", Offset = "0xB6F2D0", VA = "0xB6F2D0")]
		public int GetTrackCount(Phase phase)
		{
			return default(int);
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0xB6F324", Offset = "0xB6F324", VA = "0xB6F324")]
		private int GetTrackCount(MusicTrack[] tracks)
		{
			return default(int);
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0xB6F404", Offset = "0xB6F404", VA = "0xB6F404")]
		public TrackList()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public enum TrackedTransformType
	{
		[Token(Token = "0x40017B9")]
		Position,
		[Token(Token = "0x40017BA")]
		Transform,
		[Token(Token = "0x40017BB")]
		Variable
	}
	[Serializable]
	[Token(Token = "0x200036E")]
	public struct TrackedTransform
	{
		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TrackedTransformType _type;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private Vector3 _position;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform _transform;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransformVariable _variable;

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x966618", Offset = "0x966618", VA = "0x966618")]
		public TrackedTransform(Vector3 position)
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x966620", Offset = "0x966620", VA = "0x966620")]
		public TrackedTransform(Transform transform)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x966628", Offset = "0x966628", VA = "0x966628")]
		public TrackedTransform(TransformVariable variable)
		{
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x966630", Offset = "0x966630", VA = "0x966630")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x966638", Offset = "0x966638", VA = "0x966638")]
		public EffectRequestPayload GetRequestPayload()
		{
			return default(EffectRequestPayload);
		}
	}
	[Token(Token = "0x200036F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4590", Offset = "0x8A4590")]
	public class VelocityPositionalSource : ProceduralSourceAsset
	{
		[Token(Token = "0x2000555")]
		private class VelocityPositionalRuntime : ProceduralSourceRuntime
		{
			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Vector3 _previousSourceV;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 _relativePreviousSourceV;

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0xB6FB4C", Offset = "0xB6FB4C", VA = "0xB6FB4C", Slot = "4")]
			public override void OnBeginPlay(ProceduralAudio owner)
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0xB6FBBC", Offset = "0xB6FBBC", VA = "0xB6FBBC", Slot = "6")]
			public override float GetValue()
			{
				return default(float);
			}

			[Token(Token = "0x6001DEA")]
			[Address(RVA = "0xB6FD0C", Offset = "0xB6FD0C", VA = "0xB6FD0C", Slot = "7")]
			public override void Reset()
			{
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0xB6FB3C", Offset = "0xB6FB3C", VA = "0xB6FB3C")]
			public VelocityPositionalRuntime()
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB6FAE0", Offset = "0xB6FAE0", VA = "0xB6FAE0", Slot = "4")]
		public override ProceduralSourceRuntime CreateRuntime()
		{
			return null;
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB6FB44", Offset = "0xB6FB44", VA = "0xB6FB44")]
		public VelocityPositionalSource()
		{
		}
	}
}
namespace SG.Claymore.Armory
{
	[Token(Token = "0x2000370")]
	public class PlayAnimationAtRandomPercent : MonoBehaviour
	{
		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator TargetAnimController;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string TargetAnim;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool RandomizeAnimatorSpeed;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float MinSpeed;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float MaxSpeed;

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xC1BB8C", Offset = "0xC1BB8C", VA = "0xC1BB8C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xC1BC14", Offset = "0xC1BC14", VA = "0xC1BC14")]
		public PlayAnimationAtRandomPercent()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class WeaponRackSlot : MonoBehaviour
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2158", Offset = "0x8D2158")]
		[SerializeField]
		private ArmamentInventory ownedArmaments;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D21A4", Offset = "0x8D21A4")]
		[SerializeField]
		private GameObject inspectedIndicator;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D21F0", Offset = "0x8D21F0")]
		[SerializeField]
		private GameObject notPurchasedIndicator;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D223C", Offset = "0x8D223C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D223C", Offset = "0x8D223C")]
		[SerializeField]
		private GameObject purchasedIndicator;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject armamentContent;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D22BC", Offset = "0x8D22BC")]
		[SerializeField]
		private PurchaseInteractable[] purchaseGems;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2308", Offset = "0x8D2308")]
		[SerializeField]
		private GameObject[] levelIndicators;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2354", Offset = "0x8D2354")]
		[SerializeField]
		private bool swapWithOffHandUpgrade;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D23A0", Offset = "0x8D23A0")]
		[SerializeField]
		public ArmamentID ArmamentID;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D23EC", Offset = "0x8D23EC")]
		[SerializeField]
		private Transform mountPoint;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2438", Offset = "0x8D2438")]
		[SerializeField]
		private ArmamentPurchasedAnalyticsEvent armamentPurchasedAnalyticsEvent;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2484", Offset = "0x8D2484")]
		[SerializeField]
		private ArmamentIDVariable lastArmamentPurchaseUpgrade;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable lastArmamentPurchaseUpgradeLevel;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private BoolVariable lastArmamentPurchaseUpgradeTrigger;

		[NonSerialized]
		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Armament spawnedArm;

		[NonSerialized]
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private GameObject unownedArm;

		[NonSerialized]
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private GameObject inactiveArm;

		[NonSerialized]
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform spawnedArmTransform;

		[NonSerialized]
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int lastLevel;

		[NonSerialized]
		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool lastEquipped;

		[Token(Token = "0x1700032E")]
		public int NextLevel
		{
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0xC1BC30", Offset = "0xC1BC30", VA = "0xC1BC30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032F")]
		public bool CanAfford
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0xC1BCD4", Offset = "0xC1BCD4", VA = "0xC1BCD4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000330")]
		public bool IsInspected
		{
			[Token(Token = "0x60016AD")]
			[Address(RVA = "0xC1BD1C", Offset = "0xC1BD1C", VA = "0xC1BD1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xC1BD40", Offset = "0xC1BD40", VA = "0xC1BD40")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xC1BFD4", Offset = "0xC1BFD4", VA = "0xC1BFD4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xC1C060", Offset = "0xC1C060", VA = "0xC1C060")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xC1BDD4", Offset = "0xC1BDD4", VA = "0xC1BDD4")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xC1C30C", Offset = "0xC1C30C", VA = "0xC1C30C")]
		private void DisplayVisuals(Armament arm)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xC1C528", Offset = "0xC1C528", VA = "0xC1C528")]
		private void RefreshVisuals()
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xC1C0EC", Offset = "0xC1C0EC", VA = "0xC1C0EC")]
		private void RefreshArmament(Armament arm)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xC1C824", Offset = "0xC1C824", VA = "0xC1C824")]
		private void PlaceArmamentInRack()
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xC1CA4C", Offset = "0xC1CA4C", VA = "0xC1CA4C")]
		public void Inspected()
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xC1CA84", Offset = "0xC1CA84", VA = "0xC1CA84")]
		public void Buy(PlayerHand hand)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xC1CE44", Offset = "0xC1CE44", VA = "0xC1CE44")]
		public void Bind(PlayerHand hand)
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xC1CFDC", Offset = "0xC1CFDC", VA = "0xC1CFDC")]
		public void Give()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xC1D0EC", Offset = "0xC1D0EC", VA = "0xC1D0EC")]
		public void Remove()
		{
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xC1D1E8", Offset = "0xC1D1E8", VA = "0xC1D1E8")]
		public WeaponRackSlot()
		{
		}
	}
}
namespace SG.Claymore.Armaments
{
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A45F0", Offset = "0x8A45F0")]
	public class AbilityTree : ScriptableObject
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ArmamentAbilityDefinition[] abilities;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2500", Offset = "0x8D2500")]
		[SerializeField]
		private bool preventDuplicateAbility;

		[Token(Token = "0x17000331")]
		public bool PreventDuplicate
		{
			[Token(Token = "0x60016BC")]
			[Address(RVA = "0xC7CC24", Offset = "0xC7CC24", VA = "0xC7CC24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000332")]
		public int MaxAbilityLevel
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xC7CC2C", Offset = "0xC7CC2C", VA = "0xC7CC2C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xC7CC4C", Offset = "0xC7CC4C", VA = "0xC7CC4C")]
		public ArmamentAbilityDefinition GetAbility(int abilityLevel)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xC7CD00", Offset = "0xC7CD00", VA = "0xC7CD00")]
		public AbilityTree()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public enum AbilityState
	{
		[Token(Token = "0x40017DC")]
		Inactive = 0,
		[Token(Token = "0x40017DD")]
		Ready = 2,
		[Token(Token = "0x40017DE")]
		Active = 3
	}
	[Token(Token = "0x2000374")]
	public class Armament : HandInteractable, IVariableResolver, IResourceLoadHandler<ArmamentVisuals>, IResourceLoadHandler
	{
		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D254C", Offset = "0x8D254C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D254C", Offset = "0x8D254C")]
		[SerializeField]
		private ArmamentID id;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D25BC", Offset = "0x8D25BC")]
		[SerializeField]
		private ArmamentVariablesDefinition armamentVariablesDefinition;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2608", Offset = "0x8D2608")]
		[SerializeField]
		private GameObject collisionRoot;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2654", Offset = "0x8D2654")]
		[SerializeField]
		private CollisionDetectionMode activeCollisionMode;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D26A0", Offset = "0x8D26A0")]
		[SerializeField]
		private int solverIterations;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D26EC", Offset = "0x8D26EC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D26EC", Offset = "0x8D26EC")]
		[SerializeField]
		private InstancedFloatVariable summonTime;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D275C", Offset = "0x8D275C")]
		[SerializeField]
		private XRHapticsObject summonHaptics;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D27A8", Offset = "0x8D27A8")]
		[SerializeField]
		private AudioKeyData summonAudioKey;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D27F4", Offset = "0x8D27F4")]
		[SerializeField]
		private AudioKeyData dismissAudioKey;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2840", Offset = "0x8D2840")]
		[SerializeField]
		private Transform dismissDirection;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D288C", Offset = "0x8D288C")]
		[SerializeField]
		private bool dismissWithPalmDirection;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D28D8", Offset = "0x8D28D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D28D8", Offset = "0x8D28D8")]
		[SerializeField]
		private MeleeWeapon attack;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2948", Offset = "0x8D2948")]
		[SerializeField]
		private AttackBlocker block;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2994", Offset = "0x8D2994")]
		[SerializeField]
		private ArmamentAbilityUser ability;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D29E0", Offset = "0x8D29E0")]
		[SerializeField]
		private ArmamentStats stats;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2A2C", Offset = "0x8D2A2C")]
		[SerializeField]
		private ArmamentAnimatorMaterialSetter materialSetter;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[SerializeField]
		private ArmamentVisualPreview preview;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2A88", Offset = "0x8D2A88")]
		[SerializeField]
		private TraitUnlockedAnalyticsEvent traitUnlockedAnalyticsEvent;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private FloatVariable gripTimeRight;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[SerializeField]
		private FloatVariable gripTimeLeft;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[SerializeField]
		private FloatVariable gripTime2HRight;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[SerializeField]
		private FloatVariable gripTime2HLeft;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2B14", Offset = "0x8D2B14")]
		[SerializeField]
		public ResourceLoadingController resourceLoader;

		[NonSerialized]
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private ArmamentVisuals visuals;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2B60", Offset = "0x8D2B60")]
		[SerializeField]
		private ProceduralAudio summonedAudioLoop;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[SerializeField]
		private ProceduralAudio summonedAndSuperReadyAudioLoop;

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[SerializeField]
		private ProceduralAudio summonedAndSuperActiveAudioLoop;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private ProceduralAudio currentAudioLoop;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private AbilityState abilityState;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BCC", Offset = "0x8D2BCC")]
		private bool <VisualsReady>k__BackingField;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BDC", Offset = "0x8D2BDC")]
		private readonly List<ArmamentTraitRuntime> <Traits>k__BackingField;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BEC", Offset = "0x8D2BEC")]
		private ArmamentVariablesDefinition <InstancedVariables>k__BackingField;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2BFC", Offset = "0x8D2BFC")]
		private bool <IsReady>k__BackingField;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B9")]
		private bool isSummoned;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private PlayerHand boundHand;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C2C", Offset = "0x8D2C2C")]
		private readonly List<BaseArmamentTrait> <AppliedTraits>k__BackingField;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C3C", Offset = "0x8D2C3C")]
		private int <TraitsAppliedByRewards>k__BackingField;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D2C4C", Offset = "0x8D2C4C")]
		private int <TraitsAppliedByLevel>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool supressProceduralAudio;

		[NonSerialized]
		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float summonStartTime;

		[NonSerialized]
		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float grip2HStartTime;

		[NonSerialized]
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float grip2HTime;

		[NonSerialized]
		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float baseDrag;

		[NonSerialized]
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float baseAngularDrag;

		[NonSerialized]
		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private AudioRuntime audioRuntime;

		[NonSerialized]
		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool initialized;

		[NonSerialized]
		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool hasBeenSummoned;

		[NonSerialized]
		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20A")]
		private bool visible;

		[NonSerialized]
		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20B")]
		private bool forceUpdateSpringsNextFrame;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private Action<Armament> visualsReady;

		[Token(Token = "0x17000333")]
		public AbilityState AbilityState
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xC7CDBC", Offset = "0xC7CDBC", VA = "0xC7CDBC")]
			get
			{
				return default(AbilityState);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xC7CD08", Offset = "0xC7CD08", VA = "0xC7CD08")]
			set
			{
			}
		}

		[Token(Token = "0x17000334")]
		public bool VisualsReady
		{
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xC7CDC4", Offset = "0xC7CDC4", VA = "0xC7CDC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DE8", Offset = "0x8E2DE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xC7CDCC", Offset = "0xC7CDCC", VA = "0xC7CDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2DF8", Offset = "0x8E2DF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000335")]
		public ArmamentVisuals Visuals
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xC7CDD8", Offset = "0xC7CDD8", VA = "0xC7CDD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public List<ArmamentTraitRuntime> Traits
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xC7CDE0", Offset = "0xC7CDE0", VA = "0xC7CDE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E08", Offset = "0x8E2E08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000337")]
		public ArmamentID ID
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xC7CDE8", Offset = "0xC7CDE8", VA = "0xC7CDE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		public MeleeWeapon Attack
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xC7CDF0", Offset = "0xC7CDF0", VA = "0xC7CDF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000339")]
		public AttackBlocker Block
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xC7CDF8", Offset = "0xC7CDF8", VA = "0xC7CDF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		public ArmamentAbilityUser Ability
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xC7CE00", Offset = "0xC7CE00", VA = "0xC7CE00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033B")]
		public ArmamentStats Stats
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0xC7CE08", Offset = "0xC7CE08", VA = "0xC7CE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		public GameObject CollisionRoot
		{
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0xC7CE10", Offset = "0xC7CE10", VA = "0xC7CE10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033D")]
		public ArmamentVariablesDefinition ArmamentVariablesDefinition
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0xC7CE18", Offset = "0xC7CE18", VA = "0xC7CE18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		public ArmamentVariablesDefinition InstancedVariables
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0xC7CE20", Offset = "0xC7CE20", VA = "0xC7CE20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E18", Offset = "0x8E2E18")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0xC7CE28", Offset = "0xC7CE28", VA = "0xC7CE28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E28", Offset = "0x8E2E28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700033F")]
		public override string DisplayName
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0xC7CE38", Offset = "0xC7CE38", VA = "0xC7CE38", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		public int UpgradeSockets
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0xC7CEE8", Offset = "0xC7CEE8", VA = "0xC7CEE8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000341")]
		public ArmamentVisualPreview Preview
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xC7CF18", Offset = "0xC7CF18", VA = "0xC7CF18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		public int ArmamentLevel
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xC7CE7C", Offset = "0xC7CE7C", VA = "0xC7CE7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xC7CF20", Offset = "0xC7CF20", VA = "0xC7CF20")]
			set
			{
			}
		}

		[Token(Token = "0x17000343")]
		public bool IsReady
		{
			[Token(Token = "0x60016D4")]
			[Address(RVA = "0xC7CF50", Offset = "0xC7CF50", VA = "0xC7CF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E38", Offset = "0x8E2E38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D5")]
			[Address(RVA = "0xC7CF58", Offset = "0xC7CF58", VA = "0xC7CF58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E48", Offset = "0x8E2E48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000344")]
		public bool IsSummoned
		{
			[Token(Token = "0x60016D6")]
			[Address(RVA = "0xC7CF64", Offset = "0xC7CF64", VA = "0xC7CF64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016D7")]
			[Address(RVA = "0xC7CF6C", Offset = "0xC7CF6C", VA = "0xC7CF6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000345")]
		public PlayerHand BoundHand
		{
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xC7D134", Offset = "0xC7D134", VA = "0xC7D134")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xC7D13C", Offset = "0xC7D13C", VA = "0xC7D13C")]
			set
			{
			}
		}

		[Token(Token = "0x17000346")]
		public List<BaseArmamentTrait> AppliedTraits
		{
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xC7D314", Offset = "0xC7D314", VA = "0xC7D314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E98", Offset = "0x8E2E98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000347")]
		public int TraitsAppliedByRewards
		{
			[Token(Token = "0x60016DF")]
			[Address(RVA = "0xC7D31C", Offset = "0xC7D31C", VA = "0xC7D31C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EA8", Offset = "0x8E2EA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xC7D324", Offset = "0xC7D324", VA = "0xC7D324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EB8", Offset = "0x8E2EB8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000348")]
		public int TraitsAppliedByLevel
		{
			[Token(Token = "0x60016E1")]
			[Address(RVA = "0xC7D32C", Offset = "0xC7D32C", VA = "0xC7D32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EC8", Offset = "0x8E2EC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60016E2")]
			[Address(RVA = "0xC7D334", Offset = "0xC7D334", VA = "0xC7D334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2ED8", Offset = "0x8E2ED8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000349")]
		public int AvailableSockets
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0xC7D33C", Offset = "0xC7D33C", VA = "0xC7D33C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700034A")]
		private bool SupressProceduralAudio
		{
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0xC7D364", Offset = "0xC7D364", VA = "0xC7D364")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0xC7D36C", Offset = "0xC7D36C", VA = "0xC7D36C")]
			set
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<bool> OnSummonChange
		{
			[Token(Token = "0x60016D8")]
			[Address(RVA = "0xC7CFE4", Offset = "0xC7CFE4", VA = "0xC7CFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E58", Offset = "0x8E2E58")]
			add
			{
			}
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xC7D08C", Offset = "0xC7D08C", VA = "0xC7D08C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E68", Offset = "0x8E2E68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<PlayerHand> OnBoundHand
		{
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xC7D1C4", Offset = "0xC7D1C4", VA = "0xC7D1C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E78", Offset = "0x8E2E78")]
			add
			{
			}
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xC7D26C", Offset = "0xC7D26C", VA = "0xC7D26C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2E88", Offset = "0x8E2E88")]
			remove
			{
			}
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xC7D3F4", Offset = "0xC7D3F4", VA = "0xC7D3F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xC7D6BC", Offset = "0xC7D6BC", VA = "0xC7D6BC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xC7D4D0", Offset = "0xC7D4D0", VA = "0xC7D4D0")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xC7D8DC", Offset = "0xC7D8DC", VA = "0xC7D8DC")]
		public void DestroySelf()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xC7D958", Offset = "0xC7D958", VA = "0xC7D958", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xC7D9DC", Offset = "0xC7D9DC", VA = "0xC7D9DC", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xC7DAD0", Offset = "0xC7DAD0", VA = "0xC7DAD0")]
		private void CollectTraits()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xC7DDE4", Offset = "0xC7DDE4", VA = "0xC7DDE4")]
		private void ApplyTraits()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xC78C3C", Offset = "0xC78C3C", VA = "0xC78C3C")]
		public ArmamentTraitRuntime AddTrait(BaseArmamentTrait trait)
		{
			return null;
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xC78D28", Offset = "0xC78D28", VA = "0xC78D28")]
		public void RemoveTrait(ArmamentTraitRuntime runtime)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xC7DEA0", Offset = "0xC7DEA0", VA = "0xC7DEA0")]
		public void RemoveTraitDebug(ArmamentTraitRuntime runtime)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xC7E07C", Offset = "0xC7E07C", VA = "0xC7E07C")]
		private void RemoveTraits()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xC7E188", Offset = "0xC7E188", VA = "0xC7E188")]
		public void AddTraitUpgrade(BaseArmamentTrait trait)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xC7E258", Offset = "0xC7E258", VA = "0xC7E258")]
		public void Unbind()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xC7E424", Offset = "0xC7E424", VA = "0xC7E424")]
		public void BindToHand(PlayerHand hand)
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xC7E670", Offset = "0xC7E670", VA = "0xC7E670")]
		public void MountToRack()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xC7D7D4", Offset = "0xC7D7D4", VA = "0xC7D7D4")]
		public void UpdateMaterial()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xC7E884", Offset = "0xC7E884", VA = "0xC7E884", Slot = "4")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xC7EA30", Offset = "0xC7EA30", VA = "0xC7EA30")]
		private void Update()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xC7EBE8", Offset = "0xC7EBE8", VA = "0xC7EBE8", Slot = "16")]
		public override void UseStart()
		{
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xC7EDF8", Offset = "0xC7EDF8", VA = "0xC7EDF8", Slot = "17")]
		public override void UseEnd()
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xC7EF78", Offset = "0xC7EF78", VA = "0xC7EF78")]
		public void PlaySummon(PlayerHand summoningHand)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xC7F4D4", Offset = "0xC7F4D4", VA = "0xC7F4D4")]
		private void OnAudioBeginPlay(EffectRuntime runtime)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xC7F56C", Offset = "0xC7F56C", VA = "0xC7F56C")]
		private void OnAudioEndPlay()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xC7F1F4", Offset = "0xC7F1F4", VA = "0xC7F1F4")]
		private void InitSummon(PlayerHand summoningHand)
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xC7F650", Offset = "0xC7F650", VA = "0xC7F650")]
		public void StartSummoned(PlayerHand summoningHand)
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xC7F738", Offset = "0xC7F738", VA = "0xC7F738")]
		public void InitialDismiss(PlayerHand summoningHand)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xC7F938", Offset = "0xC7F938", VA = "0xC7F938")]
		public void PlayDismiss()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xC7F68C", Offset = "0xC7F68C", VA = "0xC7F68C")]
		public void SetForceSummoned(bool summoned)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xC7C5E8", Offset = "0xC7C5E8", VA = "0xC7C5E8")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xC7C71C", Offset = "0xC7C71C", VA = "0xC7C71C")]
		public void SetHitQualityVFXData(HitVFXData weaponHitData)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xC7C960", Offset = "0xC7C960", VA = "0xC7C960")]
		public void RestoreHitQualityVFXData()
		{
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xC7FE98", Offset = "0xC7FE98", VA = "0xC7FE98", Slot = "14")]
		public override void GrabStart(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xC80058", Offset = "0xC80058", VA = "0xC80058", Slot = "15")]
		public override void GrabEnd(PlayerHand hand, bool forceDrop)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xC80330", Offset = "0xC80330", VA = "0xC80330", Slot = "12")]
		public override void AddTwoHandedGrab()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xC80378", Offset = "0xC80378", VA = "0xC80378", Slot = "13")]
		public override void RemoveTwoHandedGrab()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xC803D8", Offset = "0xC803D8", VA = "0xC803D8", Slot = "21")]
		public Variable GetVariable(Variable variable)
		{
			return null;
		}

		[Token(Token = "0x600170B")]
		public T GetVariable<T>(T input) where T : Variable
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xC80400", Offset = "0xC80400", VA = "0xC80400", Slot = "23")]
		public bool HasVariable(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xC80428", Offset = "0xC80428", VA = "0xC80428", Slot = "24")]
		public void AddVariable(Variable source, [Optional] Variable value)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xC80450", Offset = "0xC80450", VA = "0xC80450", Slot = "25")]
		public List<Variable> GetAll()
		{
			return null;
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xC7D418", Offset = "0xC7D418", VA = "0xC7D418")]
		public void LoadVisuals()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xC80478", Offset = "0xC80478", VA = "0xC80478")]
		public void AddVisualsReadyCallback(Action<Armament> callback)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xC8056C", Offset = "0xC8056C", VA = "0xC8056C", Slot = "26")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xC7CD10", Offset = "0xC7CD10", VA = "0xC7CD10")]
		private void PlayAudioLoop(AbilityState loopType)
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xC80878", Offset = "0xC80878", VA = "0xC80878")]
		private ProceduralAudio GetAudioLoop(AbilityState loopType)
		{
			return null;
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xC7D790", Offset = "0xC7D790", VA = "0xC7D790")]
		private void StopAudioLoop()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xC7DA68", Offset = "0xC7DA68", VA = "0xC7DA68")]
		private void DisableAudioLoop()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xC808A8", Offset = "0xC808A8", VA = "0xC808A8")]
		private void OnStrongGripPowerChanged(bool value)
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xC808B4", Offset = "0xC808B4", VA = "0xC808B4")]
		public Armament()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4650", Offset = "0x8A4650")]
	public class ArmamentAbilityDefinition : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2C7C", Offset = "0x8D2C7C")]
		[SerializeField]
		private UserString displayName;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2CC8", Offset = "0x8D2CC8")]
		[SerializeField]
		private UserString description;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D14", Offset = "0x8D2D14")]
		[SerializeField]
		private UserString chargeTime;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2D60", Offset = "0x8D2D60")]
		[SerializeField]
		private UserString upgradeDescription;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DAC", Offset = "0x8D2DAC")]
		[SerializeField]
		private Sprite icon;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2DF8", Offset = "0x8D2DF8")]
		[SerializeField]
		private int iconShaderID;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Sprite inactiveIcon;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Sprite activeIcon;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2E64", Offset = "0x8D2E64")]
		[SerializeField]
		private ArmamentAbility ability;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2EB0", Offset = "0x8D2EB0")]
		[SerializeField]
		private float maxCharge;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2EFC", Offset = "0x8D2EFC")]
		[SerializeField]
		private MagicType magicType;

		[Token(Token = "0x1700034B")]
		public UserString DisplayName
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xC809F0", Offset = "0xC809F0", VA = "0xC809F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public UserString Description
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xC809F8", Offset = "0xC809F8", VA = "0xC809F8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public UserString ChargeTime
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xC80A00", Offset = "0xC80A00", VA = "0xC80A00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034E")]
		public UserString UpgradeDescription
		{
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xC80A08", Offset = "0xC80A08", VA = "0xC80A08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034F")]
		public Sprite Icon
		{
			[Token(Token = "0x600171C")]
			[Address(RVA = "0xC80A10", Offset = "0xC80A10", VA = "0xC80A10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000350")]
		public Sprite InactiveIcon
		{
			[Token(Token = "0x600171D")]
			[Address(RVA = "0xC80A18", Offset = "0xC80A18", VA = "0xC80A18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000351")]
		public Sprite ActiveIcon
		{
			[Token(Token = "0x600171E")]
			[Address(RVA = "0xC80A20", Offset = "0xC80A20", VA = "0xC80A20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public float MaxCharge
		{
			[Token(Token = "0x600171F")]
			[Address(RVA = "0xC80A28", Offset = "0xC80A28", VA = "0xC80A28")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000353")]
		public MagicType MagicType
		{
			[Token(Token = "0x6001720")]
			[Address(RVA = "0xC80A30", Offset = "0xC80A30", VA = "0xC80A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000354")]
		public string GUID
		{
			[Token(Token = "0x6001721")]
			[Address(RVA = "0xC80A38", Offset = "0xC80A38", VA = "0xC80A38", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000355")]
		public string DeveloperName
		{
			[Token(Token = "0x6001722")]
			[Address(RVA = "0xC80A40", Offset = "0xC80A40", VA = "0xC80A40", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000356")]
		public int IconShaderID
		{
			[Token(Token = "0x6001723")]
			[Address(RVA = "0xC80A48", Offset = "0xC80A48", VA = "0xC80A48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xC80A50", Offset = "0xC80A50", VA = "0xC80A50")]
		public ArmamentAbility Initialize(Armament armament)
		{
			return null;
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xC80AF4", Offset = "0xC80AF4", VA = "0xC80AF4")]
		public void Set(Armament armament, ArmamentAbility armamentAbility)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xC80BF8", Offset = "0xC80BF8", VA = "0xC80BF8")]
		public ArmamentAbilityDefinition()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class ArmamentAbilityUser : ArmamentComponent
	{
		[Token(Token = "0x2000556")]
		private enum HandState
		{
			[Token(Token = "0x400227C")]
			None,
			[Token(Token = "0x400227D")]
			Left,
			[Token(Token = "0x400227E")]
			Right
		}

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2F48", Offset = "0x8D2F48")]
		[SerializeField]
		private PlayerHandState leftHandState;

		[Token(Token = "0x4001821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayerHandState rightHandState;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D2FA4", Offset = "0x8D2FA4")]
		[SerializeField]
		private AudioKeyData superFailAudio;

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2FF0", Offset = "0x8D2FF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D2FF0", Offset = "0x8D2FF0")]
		[SerializeField]
		private GameObject audioLocation;

		[Token(Token = "0x4001824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData onSuperChargedSFXKey;

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioKeyData onSuperActivatedSFXKey;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioKeyData onSuperActivationEndSFXKey;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3090", Offset = "0x8D3090")]
		[SerializeField]
		private Transform projectileSource;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D30DC", Offset = "0x8D30DC")]
		[SerializeField]
		private GameObject chargedActivationRoot;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3128", Offset = "0x8D3128")]
		[SerializeField]
		private SuperAnalyticsEvent superAnalytics;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3174", Offset = "0x8D3174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3174", Offset = "0x8D3174")]
		[SerializeField]
		private bool logChargingEvents;

		[NonSerialized]
		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool isInUse;

		[NonSerialized]
		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ArmamentAbility ability;

		[NonSerialized]
		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isActivating;

		[NonSerialized]
		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float activationStartTime;

		[NonSerialized]
		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private FloatVariable chargeVariable;

		[NonSerialized]
		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FloatVariable maxChargeVariable;

		[NonSerialized]
		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool failedOnPull;

		[NonSerialized]
		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool isBoundToHand;

		[NonSerialized]
		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private PlayerCombatant combatant;

		[NonSerialized]
		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private HandState currentHand;

		[NonSerialized]
		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private string abilityActivatedLog;

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D31E4", Offset = "0x8D31E4")]
		private int <AbilityLevel>k__BackingField;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D31F4", Offset = "0x8D31F4")]
		private ArmamentAbilityDefinition <AbilityID>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool isReady;

		[Token(Token = "0x17000357")]
		public float CurrentCharge
		{
			[Token(Token = "0x6001727")]
			[Address(RVA = "0xC80C08", Offset = "0xC80C08", VA = "0xC80C08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000358")]
		public float MaxCharge
		{
			[Token(Token = "0x6001728")]
			[Address(RVA = "0xC80C2C", Offset = "0xC80C2C", VA = "0xC80C2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000359")]
		public bool IsCharged
		{
			[Token(Token = "0x6001729")]
			[Address(RVA = "0xC80C50", Offset = "0xC80C50", VA = "0xC80C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700035A")]
		public Transform ProjectileSource
		{
			[Token(Token = "0x600172A")]
			[Address(RVA = "0xC80CC0", Offset = "0xC80CC0", VA = "0xC80CC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035B")]
		public ArmamentAbility Ability
		{
			[Token(Token = "0x600172B")]
			[Address(RVA = "0xC80CC8", Offset = "0xC80CC8", VA = "0xC80CC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public int AbilityLevel
		{
			[Token(Token = "0x600172C")]
			[Address(RVA = "0xC80CD0", Offset = "0xC80CD0", VA = "0xC80CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EE8", Offset = "0x8E2EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600172D")]
			[Address(RVA = "0xC80CD8", Offset = "0xC80CD8", VA = "0xC80CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2EF8", Offset = "0x8E2EF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700035D")]
		public int MaxAbilityLevel
		{
			[Token(Token = "0x600172E")]
			[Address(RVA = "0xC80CE0", Offset = "0xC80CE0", VA = "0xC80CE0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700035E")]
		public ArmamentAbilityDefinition AbilityID
		{
			[Token(Token = "0x600172F")]
			[Address(RVA = "0xC80D1C", Offset = "0xC80D1C", VA = "0xC80D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F08", Offset = "0x8E2F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001730")]
			[Address(RVA = "0xC80D24", Offset = "0xC80D24", VA = "0xC80D24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F18", Offset = "0x8E2F18")]
			private set
			{
			}
		}

		[Token(Token = "0x1700035F")]
		public GameObject AudioLocation
		{
			[Token(Token = "0x6001731")]
			[Address(RVA = "0xC80D2C", Offset = "0xC80D2C", VA = "0xC80D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000360")]
		public bool IsReady
		{
			[Token(Token = "0x6001732")]
			[Address(RVA = "0xC80D34", Offset = "0xC80D34", VA = "0xC80D34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000036")]
		public event Action OnAbilityActivated
		{
			[Token(Token = "0x6001733")]
			[Address(RVA = "0xC80D3C", Offset = "0xC80D3C", VA = "0xC80D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F28", Offset = "0x8E2F28")]
			add
			{
			}
			[Token(Token = "0x6001734")]
			[Address(RVA = "0xC80DE0", Offset = "0xC80DE0", VA = "0xC80DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F38", Offset = "0x8E2F38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		public event Action OnAbilityDeactivated
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xC80E84", Offset = "0xC80E84", VA = "0xC80E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F48", Offset = "0x8E2F48")]
			add
			{
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xC80F28", Offset = "0xC80F28", VA = "0xC80F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F58", Offset = "0x8E2F58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action OnUseFailStart
		{
			[Token(Token = "0x6001737")]
			[Address(RVA = "0xC80FCC", Offset = "0xC80FCC", VA = "0xC80FCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F68", Offset = "0x8E2F68")]
			add
			{
			}
			[Token(Token = "0x6001738")]
			[Address(RVA = "0xC81070", Offset = "0xC81070", VA = "0xC81070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F78", Offset = "0x8E2F78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action OnUseFailEnd
		{
			[Token(Token = "0x6001739")]
			[Address(RVA = "0xC81114", Offset = "0xC81114", VA = "0xC81114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F88", Offset = "0x8E2F88")]
			add
			{
			}
			[Token(Token = "0x600173A")]
			[Address(RVA = "0xC811B8", Offset = "0xC811B8", VA = "0xC811B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2F98", Offset = "0x8E2F98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action OnFullCharge
		{
			[Token(Token = "0x600173B")]
			[Address(RVA = "0xC8125C", Offset = "0xC8125C", VA = "0xC8125C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FA8", Offset = "0x8E2FA8")]
			add
			{
			}
			[Token(Token = "0x600173C")]
			[Address(RVA = "0xC81300", Offset = "0xC81300", VA = "0xC81300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FB8", Offset = "0x8E2FB8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnWeaponUnsummonedEvent
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0xC813A4", Offset = "0xC813A4", VA = "0xC813A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FC8", Offset = "0x8E2FC8")]
			add
			{
			}
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xC81448", Offset = "0xC81448", VA = "0xC81448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FD8", Offset = "0x8E2FD8")]
			remove
			{
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xC814EC", Offset = "0xC814EC", VA = "0xC814EC")]
		public void ChargeSuper()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xC8177C", Offset = "0xC8177C", VA = "0xC8177C")]
		private void SetAbility(ArmamentAbilityDefinition definition)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xC81908", Offset = "0xC81908", VA = "0xC81908", Slot = "4")]
		public override void Initialize(Armament owningArmament)
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xC81A40", Offset = "0xC81A40", VA = "0xC81A40", Slot = "6")]
		public override void OnArmamentEnable(Armament arm)
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xC81AE8", Offset = "0xC81AE8", VA = "0xC81AE8", Slot = "7")]
		public override void OnArmamentDisable(Armament arm)
		{
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xC81B88", Offset = "0xC81B88", VA = "0xC81B88")]
		public void UpdateSuper()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xC7E364", Offset = "0xC7E364", VA = "0xC7E364")]
		public void Unbind()
		{
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xC81E24", Offset = "0xC81E24", VA = "0xC81E24", Slot = "5")]
		public override void BindToHand(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xC823AC", Offset = "0xC823AC", VA = "0xC823AC")]
		private void UnregisterCallbacks()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xC82978", Offset = "0xC82978", VA = "0xC82978")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xC8297C", Offset = "0xC8297C", VA = "0xC8297C")]
		private void HandleBeforePlayerDamaged(ref PlayerDefense.HitDamageHandle handle)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xC81540", Offset = "0xC81540", VA = "0xC81540")]
		protected void ChargeSuper(float amount, bool forceCharge = false)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xC82814", Offset = "0xC82814", VA = "0xC82814")]
		private void OnWeaponCharged()
		{
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xC829A0", Offset = "0xC829A0", VA = "0xC829A0")]
		private void OnSuperActivated()
		{
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xC82DB8", Offset = "0xC82DB8", VA = "0xC82DB8")]
		public void PlayAbilityFailAudio()
		{
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xC82F38", Offset = "0xC82F38", VA = "0xC82F38")]
		private void StartChargeDisplay()
		{
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xC81CA0", Offset = "0xC81CA0", VA = "0xC81CA0")]
		private void OnSuperDeactivated()
		{
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xC8306C", Offset = "0xC8306C", VA = "0xC8306C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xC8323C", Offset = "0xC8323C", VA = "0xC8323C")]
		private void DoPassiveCharge(float dt)
		{
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xC83330", Offset = "0xC83330", VA = "0xC83330")]
		private void DoAttackBlockedCharge(Armament blocker, Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xC834E4", Offset = "0xC834E4", VA = "0xC834E4")]
		private void DoGuardDamageCharge(Armament attacker, Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xC83698", Offset = "0xC83698", VA = "0xC83698")]
		private void DoHealthDamageCharge(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
		{
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xC8384C", Offset = "0xC8384C", VA = "0xC8384C")]
		private void DoKillCharge(Armament killer, Enemy enemy)
		{
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xC839B0", Offset = "0xC839B0", VA = "0xC839B0")]
		private void DoPlayerDamagedCharge(Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xC83B00", Offset = "0xC83B00", VA = "0xC83B00")]
		private void DoPlayerDodgedCharge(Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xC83BF4", Offset = "0xC83BF4", VA = "0xC83BF4")]
		private void DoProjectileDestroyCharge(Armament arm)
		{
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xC7EC84", Offset = "0xC7EC84", VA = "0xC7EC84")]
		public void AttemptUseStart()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xC7EE94", Offset = "0xC7EE94", VA = "0xC7EE94")]
		public void AttemptUseEnd()
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xC83CF4", Offset = "0xC83CF4", VA = "0xC83CF4")]
		public void DestroyAbility()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xC7FF48", Offset = "0xC7FF48", VA = "0xC7FF48")]
		public void OnWeaponSummoned()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xC80244", Offset = "0xC80244", VA = "0xC80244")]
		public void OnWeaponUnsummoned()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xC83D94", Offset = "0xC83D94", VA = "0xC83D94")]
		public ArmamentAbilityUser()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class ArmamentAnimatorMaterialSetter : MonoBehaviour
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _copyBuffer;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GraphicsCBuffer _bufferProperties;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer _weaponRenderer;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Material _baseMaterial;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material _chargedMaterial;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material _superMaterial;

		[NonSerialized]
		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _inactiveMaterial;

		[NonSerialized]
		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material _originalBaseMaterial;

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xC83DFC", Offset = "0xC83DFC", VA = "0xC83DFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xC7E7A8", Offset = "0xC7E7A8", VA = "0xC7E7A8")]
		public void UpdateMaterial(Material material)
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xC7E6CC", Offset = "0xC7E6CC", VA = "0xC7E6CC")]
		public void RevertMaterial()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xC83E00", Offset = "0xC83E00", VA = "0xC83E00")]
		private void SetupMaterials()
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xC83F88", Offset = "0xC83F88", VA = "0xC83F88")]
		public void SetInactiveMaterial(Shader inactiveShader)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xC840C4", Offset = "0xC840C4", VA = "0xC840C4")]
		public void SetBaseMaterial()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xC8415C", Offset = "0xC8415C", VA = "0xC8415C")]
		public void SetChargedMaterial()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xC841F4", Offset = "0xC841F4", VA = "0xC841F4")]
		public void SetSuperMaterial()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xC8428C", Offset = "0xC8428C", VA = "0xC8428C")]
		public ArmamentAnimatorMaterialSetter()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class ArmamentCollisionVFX : MonoBehaviour
	{
		[Token(Token = "0x4001847")]
		private const float MIN_COLLISION_INTERVAL = 0.25f;

		[Token(Token = "0x4001848")]
		private const float MIN_IMPACT_FORCE = 0.25f;

		[Token(Token = "0x4001849")]
		private const float MAX_IMPACT_FORCE = 64f;

		[Token(Token = "0x400184A")]
		private const float MAX_SCRAPE_FORCE = 0.5929f;

		[Token(Token = "0x400184B")]
		private const float LERP_SMOOTH_FACTOR = 50f;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D32C4", Offset = "0x8D32C4")]
		[SerializeField]
		private XRPlatformManager _xrPlatformManager;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Armament _armament;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayerMask _collisionLayer;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3330", Offset = "0x8D3330")]
		[SerializeField]
		private VisualKeyData _hitVFXKey;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VisualKeyData _scrapeVFXKey;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D338C", Offset = "0x8D338C")]
		[SerializeField]
		private float _sparkleHitThreshold;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D33CC", Offset = "0x8D33CC")]
		[SerializeField]
		private float _sparkleScrapeThreshold;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D340C", Offset = "0x8D340C")]
		[SerializeField]
		private int _emitCount;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3450", Offset = "0x8D3450")]
		[SerializeField]
		private float _minScrappingTime;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioKeyData _hitAudioKey;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioKeyData _strongWeaponHitAudioKey;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioKeyData _scrappingAudioKey;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioKeyData _scrappingEndAudioKey;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D34DC", Offset = "0x8D34DC")]
		[SerializeField]
		private float _endResonanceThreshold;

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D351C", Offset = "0x8D351C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D351C", Offset = "0x8D351C")]
		[SerializeField]
		private float _scrappingHapticsForceMultiplier;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioRuntime _scrappingAudioRuntime;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ManualParticleEffectRuntime _scrappingVFXRuntime;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ParticleSystem.EmitParams _emitParams;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float _lastHitTime;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float _lastNormalizedScrapeForce;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 _lastContactPoint;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private float _lastNormSqrImpact;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float _scrappingTime;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private XRTrackedNode _currentNode;

		[NonSerialized]
		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool _isPlayingHaptics;

		[NonSerialized]
		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Collider _currentCollider;

		[NonSerialized]
		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool _isColliding;

		[Token(Token = "0x17000361")]
		public AudioKeyData ScrappingAudioKey
		{
			[Token(Token = "0x6001768")]
			[Address(RVA = "0xC8429C", Offset = "0xC8429C", VA = "0xC8429C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xC842A4", Offset = "0xC842A4", VA = "0xC842A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000362")]
		public AudioKeyData ScrappingEndAudioKey
		{
			[Token(Token = "0x600176A")]
			[Address(RVA = "0xC842AC", Offset = "0xC842AC", VA = "0xC842AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600176B")]
			[Address(RVA = "0xC842B4", Offset = "0xC842B4", VA = "0xC842B4")]
			set
			{
			}
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xC842BC", Offset = "0xC842BC", VA = "0xC842BC")]
		private void Start()
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xC842E4", Offset = "0xC842E4", VA = "0xC842E4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xC843E0", Offset = "0xC843E0", VA = "0xC843E0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xC845AC", Offset = "0xC845AC", VA = "0xC845AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xC84778", Offset = "0xC84778", VA = "0xC84778")]
		private void OnCollisionLayerChange(Layer newLayer)
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xC84864", Offset = "0xC84864", VA = "0xC84864")]
		private void OnSummonChange(bool isSummoned)
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xC84950", Offset = "0xC84950", VA = "0xC84950")]
		private void OnBoundHand(PlayerHand playerHand)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xC84D70", Offset = "0xC84D70", VA = "0xC84D70")]
		private void OnHitAudioPlayed(EffectRuntime hitRuntime)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xC84E64", Offset = "0xC84E64", VA = "0xC84E64")]
		private void OnScrappingAudioPlayed(EffectRuntime scrappingRuntime)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xC84F14", Offset = "0xC84F14", VA = "0xC84F14")]
		private void OnScrappingAudioCanceled()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xC84F20", Offset = "0xC84F20", VA = "0xC84F20")]
		private void OnScrappingVFXPlayed(EffectRuntime scrappingRuntime)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xC84FB8", Offset = "0xC84FB8", VA = "0xC84FB8")]
		private void OnScrappingEndAudioPlayed(EffectRuntime scrappingEndRuntime)
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xC850B8", Offset = "0xC850B8", VA = "0xC850B8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xC855FC", Offset = "0xC855FC", VA = "0xC855FC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xC85A10", Offset = "0xC85A10", VA = "0xC85A10")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xC85CD0", Offset = "0xC85CD0", VA = "0xC85CD0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xC85DA4", Offset = "0xC85DA4", VA = "0xC85DA4")]
		public ArmamentCollisionVFX()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class ArmamentComponent : MonoBehaviour
	{
		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Armament armament;

		[Token(Token = "0x17000363")]
		public Armament Armament
		{
			[Token(Token = "0x600177D")]
			[Address(RVA = "0xC85DD4", Offset = "0xC85DD4", VA = "0xC85DD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000364")]
		public PlayerCombatant HoldingPlayer
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xC85DDC", Offset = "0xC85DDC", VA = "0xC85DDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xC85EBC", Offset = "0xC85EBC", VA = "0xC85EBC", Slot = "4")]
		public virtual void Initialize(Armament owningArmament)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xC823A8", Offset = "0xC823A8", VA = "0xC823A8", Slot = "5")]
		public virtual void BindToHand(PlayerHand hand)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xC85EC4", Offset = "0xC85EC4", VA = "0xC85EC4", Slot = "6")]
		public virtual void OnArmamentEnable(Armament arm)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xC85EC8", Offset = "0xC85EC8", VA = "0xC85EC8", Slot = "7")]
		public virtual void OnArmamentDisable(Armament arm)
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xC83DF4", Offset = "0xC83DF4", VA = "0xC83DF4")]
		public ArmamentComponent()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A46B0", Offset = "0x8A46B0")]
	public class ArmamentCostList : ScriptableObject
	{
		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3580", Offset = "0x8D3580")]
		[SerializeField]
		private int[] costsPerLevel;

		[Token(Token = "0x17000365")]
		public int LevelCount
		{
			[Token(Token = "0x6001784")]
			[Address(RVA = "0xC85ECC", Offset = "0xC85ECC", VA = "0xC85ECC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xC85EE8", Offset = "0xC85EE8", VA = "0xC85EE8")]
		public int GetCost(int level)
		{
			return default(int);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xC85F98", Offset = "0xC85F98", VA = "0xC85F98")]
		public ArmamentCostList()
		{
		}
	}
	[Token(Token = "0x200037B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A46F4", Offset = "0x8A46F4")]
	public class ArmamentDatabase : ObjectDatabase<ArmamentID>, IGUIDDatabase<ArmamentID>, IGUIDDatabase
	{
		[Token(Token = "0x6001787")]
		[Address(RVA = "0xC86004", Offset = "0xC86004", VA = "0xC86004")]
		public ArmamentDatabase()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class ArmamentEasterEgg : MonoBehaviour
	{
		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ArmamentInventory ownedArmaments;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject weaponProp;

		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArmamentID armamentID;

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xC86054", Offset = "0xC86054", VA = "0xC86054")]
		private void Start()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xC86058", Offset = "0xC86058", VA = "0xC86058")]
		public void PurchasedHammer()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xC860B0", Offset = "0xC860B0", VA = "0xC860B0")]
		public ArmamentEasterEgg()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4754", Offset = "0x8A4754")]
	public class ArmamentID : ScriptableObject, IVariableResolver, IGUIDProvider, IResourceRequestKey
	{
		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[DebugOnly]
		[SerializeField]
		private string guid;

		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3644", Offset = "0x8D3644")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3644", Offset = "0x8D3644")]
		[SerializeField]
		private UserString armamentName;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D36B4", Offset = "0x8D36B4")]
		[SerializeField]
		private ArmamentLevelData[] levelData;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite profileIcon;

		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3710", Offset = "0x8D3710")]
		[SerializeField]
		private UserString description;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D375C", Offset = "0x8D375C")]
		[SerializeField]
		private Armament prefab;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AbilityTree abilityTree;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D37B8", Offset = "0x8D37B8")]
		[SerializeField]
		private ArmamentCostList costList;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3804", Offset = "0x8D3804")]
		[SerializeField]
		private ArmamentMod[] permanentUpgrades;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3850", Offset = "0x8D3850")]
		[SerializeField]
		private List<VariableInstancerAsset> defaultVariables;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<VariableInstancerAsset.VariableMap> VariableMap;

		[NonSerialized]
		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Armament instance;

		[NonSerialized]
		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ArmamentAbility[] armamentAbilities;

		[NonSerialized]
		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int cachedIndex;

		[Token(Token = "0x17000366")]
		public ArmamentAbility[] ArmamentAbilities
		{
			[Token(Token = "0x600178B")]
			[Address(RVA = "0xC860B8", Offset = "0xC860B8", VA = "0xC860B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000367")]
		public UserString Description
		{
			[Token(Token = "0x600178C")]
			[Address(RVA = "0xC860C0", Offset = "0xC860C0", VA = "0xC860C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000368")]
		public AbilityTree AbilityTree
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xC860C8", Offset = "0xC860C8", VA = "0xC860C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000369")]
		public ArmamentMod[] LevelMods
		{
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xC860D0", Offset = "0xC860D0", VA = "0xC860D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036A")]
		public Armament CurrentInstance
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0xC860D8", Offset = "0xC860D8", VA = "0xC860D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036B")]
		public int MaxUpgradeLevel
		{
			[Token(Token = "0x6001790")]
			[Address(RVA = "0xC860E0", Offset = "0xC860E0", VA = "0xC860E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700036C")]
		public string GUID
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0xC8610C", Offset = "0xC8610C", VA = "0xC8610C", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036D")]
		public string DeveloperName
		{
			[Token(Token = "0x6001792")]
			[Address(RVA = "0xC86114", Offset = "0xC86114", VA = "0xC86114", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036E")]
		public Sprite ProfileIcon
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xC8611C", Offset = "0xC8611C", VA = "0xC8611C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700036F")]
		public string Name
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xC861FC", Offset = "0xC861FC", VA = "0xC861FC", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000370")]
		public int CachedIndex
		{
			[Token(Token = "0x6001795")]
			[Address(RVA = "0xC86204", Offset = "0xC86204", VA = "0xC86204", Slot = "11")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001796")]
			[Address(RVA = "0xC8620C", Offset = "0xC8620C", VA = "0xC8620C", Slot = "12")]
			set
			{
			}
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xC7CED8", Offset = "0xC7CED8", VA = "0xC7CED8")]
		public string GetDisplayName(int level)
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xC86214", Offset = "0xC86214", VA = "0xC86214")]
		private string FormatDisplayName(int level)
		{
			return null;
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xC863AC", Offset = "0xC863AC", VA = "0xC863AC")]
		private string FormatLevelNumber(string displayNum)
		{
			return null;
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xC861AC", Offset = "0xC861AC", VA = "0xC861AC")]
		public Sprite GetIcon(int level)
		{
			return null;
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xC86464", Offset = "0xC86464", VA = "0xC86464")]
		public Mesh GetWeaponIconMesh(int level)
		{
			return null;
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xC7E67C", Offset = "0xC7E67C", VA = "0xC7E67C")]
		public Material GetMaterial(int level)
		{
			return null;
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xC864B4", Offset = "0xC864B4", VA = "0xC864B4")]
		public int GetCost(int level)
		{
			return default(int);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xC864CC", Offset = "0xC864CC", VA = "0xC864CC")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xC86530", Offset = "0xC86530", VA = "0xC86530")]
		public void RequestInstance(int level, Pose pose, Action<Armament> onComplete)
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xC867A8", Offset = "0xC867A8", VA = "0xC867A8")]
		public void ClearInstance()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xC867B4", Offset = "0xC867B4", VA = "0xC867B4")]
		public int GetIndexOfSource(Variable input)
		{
			return default(int);
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xC86890", Offset = "0xC86890", VA = "0xC86890", Slot = "4")]
		public Variable GetVariable(Variable variable)
		{
			return null;
		}

		[Token(Token = "0x60017A3")]
		public T GetVariable<T>(T input) where T : Variable
		{
			return null;
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xC8692C", Offset = "0xC8692C", VA = "0xC8692C", Slot = "6")]
		public bool HasVariable(Variable variable)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xC86948", Offset = "0xC86948", VA = "0xC86948", Slot = "7")]
		public void AddVariable(Variable source, [Optional] Variable value)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xC869F8", Offset = "0xC869F8", VA = "0xC869F8", Slot = "8")]
		public List<Variable> GetAll()
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xC86AD4", Offset = "0xC86AD4", VA = "0xC86AD4")]
		public ArmamentID()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037E")]
	public class ArmamentLevelData
	{
		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D389C", Offset = "0x8D389C")]
		[SerializeField]
		private UserString displayNumber;

		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D38E8", Offset = "0x8D38E8")]
		[SerializeField]
		private Sprite icon;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3934", Offset = "0x8D3934")]
		[SerializeField]
		private Mesh weaponIconMesh;

		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3980", Offset = "0x8D3980")]
		[SerializeField]
		private Material material;

		[Token(Token = "0x17000371")]
		public UserString DisplayNumberUS
		{
			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xC86BD4", Offset = "0xC86BD4", VA = "0xC86BD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000372")]
		public string DisplayNumber
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xC863A0", Offset = "0xC863A0", VA = "0xC863A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000373")]
		public Sprite Icon
		{
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xC86BDC", Offset = "0xC86BDC", VA = "0xC86BDC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000374")]
		public Material Material
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0xC86BE4", Offset = "0xC86BE4", VA = "0xC86BE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public Mesh WeaponIconMesh
		{
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xC86BEC", Offset = "0xC86BEC", VA = "0xC86BEC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xC86BF4", Offset = "0xC86BF4", VA = "0xC86BF4")]
		public ArmamentLevelData()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public abstract class ArmamentMod : ScriptableObject
	{
		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D39CC", Offset = "0x8D39CC")]
		[Delayed]
		[SerializeField]
		protected int level;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool top;

		[Token(Token = "0x17000376")]
		public int Level
		{
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0xC86BFC", Offset = "0xC86BFC", VA = "0xC86BFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000377")]
		public bool Top
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xC86C04", Offset = "0xC86C04", VA = "0xC86C04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000378")]
		public virtual BaseArmamentTrait Trait
		{
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0xC86C0C", Offset = "0xC86C0C", VA = "0xC86C0C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000379")]
		public abstract string DisplayName
		{
			[Token(Token = "0x60017B1")]
			get;
		}

		[Token(Token = "0x1700037A")]
		public abstract string Description
		{
			[Token(Token = "0x60017B2")]
			get;
		}

		[Token(Token = "0x1700037B")]
		public abstract Sprite Icon
		{
			[Token(Token = "0x60017B3")]
			get;
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xC86C14", Offset = "0xC86C14", VA = "0xC86C14")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60017B5")]
		public abstract void Apply(Armament armament);

		[Token(Token = "0x60017B6")]
		public abstract void Remove(Armament armament);

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xC86C94", Offset = "0xC86C94", VA = "0xC86C94")]
		protected ArmamentMod()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class ArmamentStats : ArmamentComponent
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3A38", Offset = "0x8D3A38")]
		public Instancer LocalVariables;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PlayerHand playerHand;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StatMod> appliedMods;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool instanced;

		[NonSerialized]
		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool hasAppliedUpgrades;

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xC86C9C", Offset = "0xC86C9C", VA = "0xC86C9C", Slot = "4")]
		public override void Initialize(Armament owningArmament)
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xC86DA8", Offset = "0xC86DA8", VA = "0xC86DA8")]
		public void Init(PlayerHand hand)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xC86CC4", Offset = "0xC86CC4", VA = "0xC86CC4")]
		private void InstanceVariables()
		{
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xC86DD0", Offset = "0xC86DD0", VA = "0xC86DD0")]
		public void Bind(PlayerHand hand)
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xC76154", Offset = "0xC76154", VA = "0xC76154")]
		public void ApplyStatMod(StatMod mod)
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xC87090", Offset = "0xC87090", VA = "0xC87090")]
		public void ApplyStatModNoRecord(StatMod mod)
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xC763F4", Offset = "0xC763F4", VA = "0xC763F4")]
		public void RemoveStatMod(StatMod mod)
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xC86DF8", Offset = "0xC86DF8", VA = "0xC86DF8")]
		public Variable GetVariable(Variable variable)
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xC86E60", Offset = "0xC86E60", VA = "0xC86E60")]
		public static void ApplyMod(Variable variable, StatMod mod, float multiplier = 1f)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xC870C4", Offset = "0xC870C4", VA = "0xC870C4")]
		public void ApplyMod(StatMod mod)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xC870F8", Offset = "0xC870F8", VA = "0xC870F8")]
		public ArmamentStats()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class ArmamentVisualPreview : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000557")]
		public class ShaderColor
		{
			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			public string propertyName;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			public Color color;

			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xC875B0", Offset = "0xC875B0", VA = "0xC875B0")]
			public ShaderColor()
			{
			}
		}

		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ArmamentAnimatorMaterialSetter materialSetter;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer meshRenderer;

		[Token(Token = "0x4001889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader inactiveShader;

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ShaderColor[] inactiveColors;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Shader unownedShader;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ShaderColor[] unownedColors;

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xC871A0", Offset = "0xC871A0", VA = "0xC871A0")]
		private ArmamentVisualPreview GenerateClone(Transform newRoot, string newName)
		{
			return null;
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xC87364", Offset = "0xC87364", VA = "0xC87364")]
		public ArmamentVisualPreview GenerateInactivePreview(Transform newRoot, string newName)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xC87458", Offset = "0xC87458", VA = "0xC87458")]
		public ArmamentVisualPreview GenerateUnownedPreview(Transform newRoot, string newName)
		{
			return null;
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xC87528", Offset = "0xC87528", VA = "0xC87528")]
		public ArmamentVisualPreview()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class ArmamentVisuals : MonoBehaviour
	{
		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer mainMeshRenderer;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ArmamentVisualPreview preview;

		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ArmamentAugmentEffectPlayer effectPlayer;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator animator;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3B20", Offset = "0x8D3B20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B20", Offset = "0x8D3B20")]
		[SerializeField]
		private ParticleSystem summonEffect;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3B90", Offset = "0x8D3B90")]
		[SerializeField]
		private ParticleSystem dismissEffect;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3BDC", Offset = "0x8D3BDC")]
		[SerializeField]
		private PhysicsFloatConfig dismissConfig;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C28", Offset = "0x8D3C28")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D3C28", Offset = "0x8D3C28")]
		[SerializeField]
		private MecanimParameterReference summonBoolParam;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3C98", Offset = "0x8D3C98")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D3C98", Offset = "0x8D3C98")]
		[SerializeField]
		private MecanimParameterReference isVisibleParam;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D3D08", Offset = "0x8D3D08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D08", Offset = "0x8D3D08")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D3D08", Offset = "0x8D3D08")]
		[SerializeField]
		private MecanimParameterReference onSuperChargedParam;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3D9C", Offset = "0x8D3D9C")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D3D9C", Offset = "0x8D3D9C")]
		[SerializeField]
		private MecanimParameterReference onSuperActivatedParam;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E0C", Offset = "0x8D3E0C")]
		[SerializeField]
		private ParticleSystem onSuperChargedEffect;

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3E58", Offset = "0x8D3E58")]
		[SerializeField]
		private ParticleSystem onSuperActivatedEffect;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3EA4", Offset = "0x8D3EA4")]
		[SerializeField]
		private ParticleSystem onSuperActivationEndEffect;

		[Token(Token = "0x1700037C")]
		public ArmamentVisualPreview Preview
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xC875B8", Offset = "0xC875B8", VA = "0xC875B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037D")]
		public MeshRenderer MainMeshRenderer
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0xC875C0", Offset = "0xC875C0", VA = "0xC875C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xC82E54", Offset = "0xC82E54", VA = "0xC82E54")]
		public void ActivatedEffect(bool activated)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xC82FB4", Offset = "0xC82FB4", VA = "0xC82FB4")]
		public void ActivationEnd(bool start)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xC8195C", Offset = "0xC8195C", VA = "0xC8195C")]
		public void ChargedEffect(bool charged)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xC8085C", Offset = "0xC8085C", VA = "0xC8085C")]
		public void SetOwner(Armament armament)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xC7FE58", Offset = "0xC7FE58", VA = "0xC7FE58")]
		public void SetVisible(bool visible)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xC7F90C", Offset = "0xC7F90C", VA = "0xC7F90C")]
		public void SetSummoned(bool summoned)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xC7F428", Offset = "0xC7F428", VA = "0xC7F428")]
		public void PlaySummon()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xC7FC6C", Offset = "0xC7FC6C", VA = "0xC7FC6C")]
		public void Dismiss(Rigidbody RigidBody, Vector3 dismissVector)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xC875C8", Offset = "0xC875C8", VA = "0xC875C8")]
		public ArmamentVisuals()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class AttackBlocker : ArmamentComponent
	{
		[Token(Token = "0x400189B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D3EF0", Offset = "0x8D3EF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3EF0", Offset = "0x8D3EF0")]
		[SerializeField]
		private float additionalBlockDistanceXYPlane;

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float additionalBlockDistanceXZPlane;

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D3F70", Offset = "0x8D3F70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3F70", Offset = "0x8D3F70")]
		[SerializeField]
		private SpringImpact blockImpact;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private XRHapticsObject blockHaptics;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D3FF0", Offset = "0x8D3FF0")]
		[SerializeField]
		private AudioKeyData blockSoundKey;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject blockSoundLocation;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform TipTransform;

		[Token(Token = "0x40018A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform BaseTransform;

		[NonSerialized]
		[Token(Token = "0x40018A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private FloatVariable guardDamage;

		[NonSerialized]
		[Token(Token = "0x40018A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private FloatVariable guardDamageMultiplier;

		[NonSerialized]
		[Token(Token = "0x40018A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private FloatVariable blockGuardDamageMultiplier;

		[NonSerialized]
		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private FloatVariable blockAngleLeewayScale;

		[Token(Token = "0x1700037E")]
		public float BlockGuardDamage
		{
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0xC8767C", Offset = "0xC8767C", VA = "0xC8767C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037F")]
		public bool CanBlock
		{
			[Token(Token = "0x60017D3")]
			[Address(RVA = "0xC87844", Offset = "0xC87844", VA = "0xC87844")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xC87880", Offset = "0xC87880", VA = "0xC87880")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xC87960", Offset = "0xC87960", VA = "0xC87960", Slot = "4")]
		public override void Initialize(Armament owningArmament)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xC87A84", Offset = "0xC87A84", VA = "0xC87A84")]
		public void AttackBlocked(float damage, Vector3 impactVector)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xC87C9C", Offset = "0xC87C9C", VA = "0xC87C9C")]
		public float CheckBlock(IBlockable blockable, float angleLeeway, bool project = true)
		{
			return default(float);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xC88458", Offset = "0xC88458", VA = "0xC88458")]
		private Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xC885A0", Offset = "0xC885A0", VA = "0xC885A0")]
		public AttackBlocker()
		{
		}
	}
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A47B4", Offset = "0x8A47B4")]
	public class MagicType : ScriptableObject
	{
		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UserString displayName;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x17000380")]
		public Color Color
		{
			[Token(Token = "0x60017DA")]
			[Address(RVA = "0xC88614", Offset = "0xC88614", VA = "0xC88614")]
			get
			{
				return default(Color);
			}
		}

		[Token(Token = "0x17000381")]
		public UserString DisplayName
		{
			[Token(Token = "0x60017DB")]
			[Address(RVA = "0xC88620", Offset = "0xC88620", VA = "0xC88620")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xC88628", Offset = "0xC88628", VA = "0xC88628")]
		public MagicType()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class MeleeWeapon : ArmamentComponent
	{
		[Token(Token = "0x40018A9")]
		private const int MAX_RAYCAST_HITS = 8;

		[Token(Token = "0x40018AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<HitProperty> HitProperties;

		[Token(Token = "0x40018AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private EntityRegistry entityRegistry;

		[Token(Token = "0x40018AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D407C", Offset = "0x8D407C")]
		public Transform TipTransform;

		[Token(Token = "0x40018AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform TipStabTransform;

		[Token(Token = "0x40018AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform BaseTransform;

		[Token(Token = "0x40018AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float WeaponRadius;

		[Token(Token = "0x40018B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LayerMask WeaponCollidableLayer;

		[Token(Token = "0x40018B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform FrustrumCheckTransform;

		[Token(Token = "0x40018B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D40B4", Offset = "0x8D40B4")]
		public WeaponHitTracker WeaponHitTracker;

		[Token(Token = "0x40018B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HitVFXData hitQualityVFXData;

		[Token(Token = "0x40018B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HitVFXData defaultQualityVFXData;

		[Token(Token = "0x40018B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D40FC", Offset = "0x8D40FC")]
		[SerializeField]
		private XRHapticsObject hitLandedHaptics;

		[Token(Token = "0x40018B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private XRHapticsObject hitBlockedHaptics;

		[Token(Token = "0x40018B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Collider[] AttackColliders;

		[Token(Token = "0x40018B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Layer RestingLayer;

		[Token(Token = "0x40018B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Layer AttackingLayer;

		[NonSerialized]
		[Token(Token = "0x40018BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Layer currentLayer;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4168", Offset = "0x8D4168")]
		public bool ForceHitDetection;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float summonInteractDelay;

		[NonSerialized]
		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float summonTime;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float raycastDistance;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector3 lastTipPosition;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 lastBasePosition;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Armament otherArmament;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Collider[] colliderResults;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private readonly RaycastHit[] raycastResults;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly List<Collider> seenColliders;

		[NonSerialized]
		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<HitProperty> additionalHitProperties;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private readonly Dictionary<ClaymoreEntity, float> nextValidHitTimes;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D41B0", Offset = "0x8D41B0")]
		private Vector3 <TipMotion>k__BackingField;

		[Token(Token = "0x17000382")]
		private Vector3 TipMotion
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xC88630", Offset = "0xC88630", VA = "0xC88630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3008", Offset = "0x8E3008")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xC8863C", Offset = "0xC8863C", VA = "0xC8863C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3018", Offset = "0x8E3018")]
			set
			{
			}
		}

		[Token(Token = "0x17000383")]
		public int BaseHealthDamage
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xC88E64", Offset = "0xC88E64", VA = "0xC88E64")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000384")]
		private float MinTimeBetweenHits
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xC88E9C", Offset = "0xC88E9C", VA = "0xC88E9C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000385")]
		public float MinLegalSwingSpeed
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xC88ED4", Offset = "0xC88ED4", VA = "0xC88ED4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000386")]
		public float MinLegalSwingEnvelope
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xC88F0C", Offset = "0xC88F0C", VA = "0xC88F0C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000387")]
		public float MinLegalStabSpeed
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xC88F44", Offset = "0xC88F44", VA = "0xC88F44")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000388")]
		public float MinLegalStabEnvelope
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xC88F7C", Offset = "0xC88F7C", VA = "0xC88F7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000389")]
		public float HitDirectionEnvelope
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xC88FB4", Offset = "0xC88FB4", VA = "0xC88FB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038A")]
		public float InitialHitRechargeDelay
		{
			[Token(Token = "0x60017F2")]
			[Address(RVA = "0xC88FEC", Offset = "0xC88FEC", VA = "0xC88FEC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038B")]
		public float HitRechargeDelay
		{
			[Token(Token = "0x60017F3")]
			[Address(RVA = "0xC89024", Offset = "0xC89024", VA = "0xC89024")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038C")]
		private float GuardDamageMultiplierForOther
		{
			[Token(Token = "0x60017F4")]
			[Address(RVA = "0xC88DA8", Offset = "0xC88DA8", VA = "0xC88DA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038D")]
		public float GetGuardDamageMultiplierForOther
		{
			[Token(Token = "0x60017F5")]
			[Address(RVA = "0xC87840", Offset = "0xC87840", VA = "0xC87840")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038E")]
		private float HealthDamageMultiplierForOther
		{
			[Token(Token = "0x60017F6")]
			[Address(RVA = "0xC8905C", Offset = "0xC8905C", VA = "0xC8905C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038F")]
		public bool IsHitUncharged
		{
			[Token(Token = "0x60017F7")]
			[Address(RVA = "0xC88DE0", Offset = "0xC88DE0", VA = "0xC88DE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000390")]
		private float MagnetismDistance
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0xC89094", Offset = "0xC89094", VA = "0xC89094")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000391")]
		private float FumbleAttackPower
		{
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0xC890CC", Offset = "0xC890CC", VA = "0xC890CC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000392")]
		public bool CheckCollisionLifetime
		{
			[Token(Token = "0x6001800")]
			[Address(RVA = "0xC855C8", Offset = "0xC855C8", VA = "0xC855C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<Layer> OnCollisionLayerChange
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xC84508", Offset = "0xC84508", VA = "0xC84508")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FE8", Offset = "0x8E2FE8")]
			add
			{
			}
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xC846D4", Offset = "0xC846D4", VA = "0xC846D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E2FF8", Offset = "0x8E2FF8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action OnDealtDamage
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xC88648", Offset = "0xC88648", VA = "0xC88648")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3028", Offset = "0x8E3028")]
			add
			{
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xC886F0", Offset = "0xC886F0", VA = "0xC886F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3038", Offset = "0x8E3038")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003E")]
		public event Action<HitData.HitQualityType, HitData.HitStyleType> OnDealtHit
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xC88798", Offset = "0xC88798", VA = "0xC88798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3048", Offset = "0x8E3048")]
			add
			{
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xC88840", Offset = "0xC88840", VA = "0xC88840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3058", Offset = "0x8E3058")]
			remove
			{
			}
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xC888E8", Offset = "0xC888E8", VA = "0xC888E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xC888FC", Offset = "0xC888FC", VA = "0xC888FC")]
		public void SetHitQualityVFXData(HitVFXData weaponHitData)
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xC7FE84", Offset = "0xC7FE84", VA = "0xC7FE84")]
		public void RestoreHitQualityVFXData()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xC7443C", Offset = "0xC7443C", VA = "0xC7443C")]
		public float GetHitQualityDistance(HitData.HitQualityType hitQuality, HitData.HitStyleType hitType)
		{
			return default(float);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xC88904", Offset = "0xC88904", VA = "0xC88904")]
		private float GetForceRating(HitData.HitQualityType hitType)
		{
			return default(float);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xC88A40", Offset = "0xC88A40", VA = "0xC88A40")]
		private float GetAttackGuardDamage(HitData.HitQualityType hitType, ClaymoreEntity entity)
		{
			return default(float);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xC89104", Offset = "0xC89104", VA = "0xC89104")]
		public void ConsumeHitCharge()
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xC8921C", Offset = "0xC8921C", VA = "0xC8921C")]
		public void RestoreHitCharge()
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xC89334", Offset = "0xC89334", VA = "0xC89334")]
		private int GetHealthDamage(HitData.HitQualityType hitType, ClaymoreEntity entity)
		{
			return default(int);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xC89694", Offset = "0xC89694", VA = "0xC89694", Slot = "4")]
		public override void Initialize(Armament owningArmament)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xC89710", Offset = "0xC89710", VA = "0xC89710")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xC7F580", Offset = "0xC7F580", VA = "0xC7F580")]
		public void Summon()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xC8AB3C", Offset = "0xC8AB3C", VA = "0xC8AB3C")]
		private bool CheckWeaponFrustrum()
		{
			return default(bool);
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xC8AD70", Offset = "0xC8AD70", VA = "0xC8AD70")]
		private bool CheckIsNearEntity()
		{
			return default(bool);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xC8B060", Offset = "0xC8B060", VA = "0xC8B060")]
		private HitData.HitQualityType CheckIsValidHit(ClaymoreEntity entity)
		{
			return default(HitData.HitQualityType);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xC8A840", Offset = "0xC8A840", VA = "0xC8A840")]
		private ClaymoreEntity HandleRaycastHit(Collider raycastCollider, Vector3 collisionPoint, bool magnetismOnly = false)
		{
			return null;
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xC8B970", Offset = "0xC8B970", VA = "0xC8B970")]
		private HitVFXData GetHitVFX(ClaymoreEntity entity)
		{
			return null;
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xC8BA70", Offset = "0xC8BA70", VA = "0xC8BA70")]
		private void ProcessTraitsBeforeHit(ClaymoreEntity entity, HitData.HitQualityType hitQualityType)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xC8BB2C", Offset = "0xC8BB2C", VA = "0xC8BB2C")]
		private void ProcessTraitsAfterHit(ClaymoreEntity entity, ref HitData hitData)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xC8B1E8", Offset = "0xC8B1E8", VA = "0xC8B1E8")]
		private ClaymoreEntity DoHit(ClaymoreEntity entity, Vector3 collisionPoint)
		{
			return null;
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xC8BBE8", Offset = "0xC8BBE8", VA = "0xC8BBE8")]
		private float GetTraveledDistance(HitData.HitStyleType hitType)
		{
			return default(float);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xC8BC34", Offset = "0xC8BC34", VA = "0xC8BC34")]
		public MeleeWeapon()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4814", Offset = "0x8A4814")]
	public class PhysicsFloatConfig : ScriptableObject
	{
		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D41E0", Offset = "0x8D41E0")]
		[SerializeField]
		private float dismissVelocityMax;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D422C", Offset = "0x8D422C")]
		[SerializeField]
		private float dismissAngularVelocityMax;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4278", Offset = "0x8D4278")]
		[SerializeField]
		private float dismissDragMin;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D42C4", Offset = "0x8D42C4")]
		[SerializeField]
		private float dismissDragMax;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4310", Offset = "0x8D4310")]
		[SerializeField]
		private float dismissAngularDragMin;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D435C", Offset = "0x8D435C")]
		[SerializeField]
		private float dismissAngularDragMax;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D43A8", Offset = "0x8D43A8")]
		[SerializeField]
		private FloatRange additionalDismissAcceleration;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D43F4", Offset = "0x8D43F4")]
		[SerializeField]
		private FloatRange additionalDismissTorque;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4440", Offset = "0x8D4440")]
		[SerializeField]
		private AnimationCurve velocityToDragCurve;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D448C", Offset = "0x8D448C")]
		[SerializeField]
		private AnimationCurve angularVelocityToDragCurve;

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xC12D64", Offset = "0xC12D64", VA = "0xC12D64")]
		public void Apply(Rigidbody rigidBody, Vector3 direction)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xC12FBC", Offset = "0xC12FBC", VA = "0xC12FBC")]
		public PhysicsFloatConfig()
		{
		}
	}
	[Token(Token = "0x2000387")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4874", Offset = "0x8A4874")]
	public class Rarity : ScriptableObject
	{
		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UserString displayName;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color color;

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xC1303C", Offset = "0xC1303C", VA = "0xC1303C")]
		public Rarity()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	public class StatMod : ISerializationCallbackReceiver
	{
		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Variable Variable;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Amount;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D44F8", Offset = "0x8D44F8")]
		private Variable <VariableInstance>k__BackingField;

		[Token(Token = "0x17000393")]
		public Variable VariableInstance
		{
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xC13044", Offset = "0xC13044", VA = "0xC13044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3068", Offset = "0x8E3068")]
			get
			{
				return null;
			}
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xC1304C", Offset = "0xC1304C", VA = "0xC1304C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3078", Offset = "0x8E3078")]
			set
			{
			}
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xC13054", Offset = "0xC13054", VA = "0xC13054", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xC13158", Offset = "0xC13158", VA = "0xC13158", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xC1315C", Offset = "0xC1315C", VA = "0xC1315C")]
		public StatMod()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class StatTraitArmamentMod : ArmamentMod, ISubAssetCallback
	{
		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected EmbeddedTrait trait;

		[Token(Token = "0x17000394")]
		public override BaseArmamentTrait Trait
		{
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xC13164", Offset = "0xC13164", VA = "0xC13164", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000395")]
		public override string DisplayName
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0xC13180", Offset = "0xC13180", VA = "0xC13180", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000396")]
		public override string Description
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xC131AC", Offset = "0xC131AC", VA = "0xC131AC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000397")]
		public override Sprite Icon
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xC131D8", Offset = "0xC131D8", VA = "0xC131D8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xC13200", Offset = "0xC13200", VA = "0xC13200", Slot = "8")]
		public override void Apply(Armament armament)
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xC1322C", Offset = "0xC1322C", VA = "0xC1322C", Slot = "9")]
		public override void Remove(Armament armament)
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xC13258", Offset = "0xC13258", VA = "0xC13258", Slot = "10")]
		public void EditorDidCreate()
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xC1325C", Offset = "0xC1325C", VA = "0xC1325C", Slot = "11")]
		public void EditorWillDelete()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xC13260", Offset = "0xC13260", VA = "0xC13260")]
		public StatTraitArmamentMod()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class TraitArmamentMod : ArmamentMod
	{
		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected BaseArmamentTrait trait;

		[Token(Token = "0x17000398")]
		public override BaseArmamentTrait Trait
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xC132DC", Offset = "0xC132DC", VA = "0xC132DC", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000399")]
		public override string DisplayName
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xC132E4", Offset = "0xC132E4", VA = "0xC132E4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039A")]
		public override string Description
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0xC13304", Offset = "0xC13304", VA = "0xC13304", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700039B")]
		public override Sprite Icon
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0xC13324", Offset = "0xC13324", VA = "0xC13324", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xC13340", Offset = "0xC13340", VA = "0xC13340", Slot = "8")]
		public override void Apply(Armament armament)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xC13360", Offset = "0xC13360", VA = "0xC13360", Slot = "9")]
		public override void Remove(Armament armament)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xC13380", Offset = "0xC13380", VA = "0xC13380")]
		public TraitArmamentMod()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A48D4", Offset = "0x8A48D4")]
	public class UpgradeDatabase : ObjectDatabase<ArmamentAugment>, IGUIDDatabase<ArmamentAugment>, IGUIDDatabase
	{
		[Token(Token = "0x6001823")]
		[Address(RVA = "0xC1AAF4", Offset = "0xC1AAF4", VA = "0xC1AAF4")]
		public UpgradeDatabase()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class WeaponTrailManager : MonoBehaviour
	{
		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject WeaponTrail;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform WeaponTip;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float TipSpeedRampMin;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D4528", Offset = "0x8D4528")]
		public float TipSpeedRampMax;

		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Gradient TrailColorRamp;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 lastPosition;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private XWeaponTrail trail;

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xC1B8B8", Offset = "0xC1B8B8", VA = "0xC1B8B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xC1B938", Offset = "0xC1B938", VA = "0xC1B938")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xC1BB0C", Offset = "0xC1BB0C", VA = "0xC1BB0C")]
		public WeaponTrailManager()
		{
		}
	}
}
namespace SG.Claymore.Armaments.Traits
{
	[Token(Token = "0x200038D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4934", Offset = "0x8A4934")]
	public class AlternatingArmsStatMod : BaseArmamentTrait
	{
		[Token(Token = "0x2000558")]
		private class AlternatingArmsStatModRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002281")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool wasBoosted;

			[Token(Token = "0x4002282")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly AlternatingArmsStatMod chargeSource;

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xC133E8", Offset = "0xC133E8", VA = "0xC133E8")]
			public AlternatingArmsStatModRuntime(AlternatingArmsStatMod source)
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xC1356C", Offset = "0xC1356C", VA = "0xC1356C")]
			private void ApplyMods()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xC135F4", Offset = "0xC135F4", VA = "0xC135F4")]
			private void RemoveMods()
			{
			}

			[Token(Token = "0x6001DF0")]
			[Address(RVA = "0xC13678", Offset = "0xC13678", VA = "0xC13678")]
			private void AlternatingCheck(Armament attacker)
			{
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xC13730", Offset = "0xC13730", VA = "0xC13730", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0xC138B8", Offset = "0xC138B8", VA = "0xC138B8", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xC13A24", Offset = "0xC13A24", VA = "0xC13A24")]
			private void OnGuardDamaged(Armament attacker, Enemy enemy, float damage)
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xC13A28", Offset = "0xC13A28", VA = "0xC13A28")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}
		}

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4560", Offset = "0x8D4560")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4560", Offset = "0x8D4560")]
		[SerializeField]
		private StatMod[] statMods;

		[Token(Token = "0x1700039C")]
		public override string Description
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0xC1342C", Offset = "0xC1342C", VA = "0xC1342C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xC13388", Offset = "0xC13388", VA = "0xC13388", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xC134B4", Offset = "0xC134B4", VA = "0xC134B4")]
		public AlternatingArmsStatMod()
		{
		}
	}
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4978", Offset = "0x8A4978")]
	public class ApplyModOnVariableThreshold : BaseArmamentTrait
	{
		[Token(Token = "0x2000559")]
		private class ModOnVariableThresholdRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002283")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly ApplyModOnVariableThreshold chargeSource;

			[Token(Token = "0x4002284")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool isApplied;

			[Token(Token = "0x4002285")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private PlayerCombatant player;

			[Token(Token = "0x4002286")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private FloatVariable variable;

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xC13B14", Offset = "0xC13B14", VA = "0xC13B14")]
			public ModOnVariableThresholdRuntime(ApplyModOnVariableThreshold source)
			{
			}

			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0xC13BCC", Offset = "0xC13BCC", VA = "0xC13BCC", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xC13EC0", Offset = "0xC13EC0", VA = "0xC13EC0", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0xC140AC", Offset = "0xC140AC", VA = "0xC140AC")]
			private void ApplyMod()
			{
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xC14020", Offset = "0xC14020", VA = "0xC14020")]
			private void RemoveMod()
			{
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xC13D9C", Offset = "0xC13D9C", VA = "0xC13D9C")]
			private void OnVariableChanged(float _)
			{
			}
		}

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D45D0", Offset = "0x8D45D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D45D0", Offset = "0x8D45D0")]
		[SerializeField]
		private FloatVariable variable;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4640", Offset = "0x8D4640")]
		[SerializeField]
		private ComparisonOperator comparison;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D468C", Offset = "0x8D468C")]
		[SerializeField]
		private FloatReference threshold;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D46D8", Offset = "0x8D46D8")]
		[SerializeField]
		private bool compareAsRatio;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4724", Offset = "0x8D4724")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4724", Offset = "0x8D4724")]
		[SerializeField]
		private StatMod[] statMods;

		[Token(Token = "0x1700039D")]
		public override string Description
		{
			[Token(Token = "0x600182A")]
			[Address(RVA = "0xC13A2C", Offset = "0xC13A2C", VA = "0xC13A2C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xC13AB4", Offset = "0xC13AB4", VA = "0xC13AB4", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xC13B58", Offset = "0xC13B58", VA = "0xC13B58")]
		public ApplyModOnVariableThreshold()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class ArmamentTraitRuntime
	{
		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D4794", Offset = "0x8D4794")]
		private Armament <Armament>k__BackingField;

		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D47A4", Offset = "0x8D47A4")]
		private BaseArmamentTrait <SourceTrait>k__BackingField;

		[Token(Token = "0x1700039E")]
		public Armament Armament
		{
			[Token(Token = "0x600182D")]
			[Address(RVA = "0xC1413C", Offset = "0xC1413C", VA = "0xC1413C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3088", Offset = "0x8E3088")]
			get
			{
				return null;
			}
			[Token(Token = "0x600182E")]
			[Address(RVA = "0xC14144", Offset = "0xC14144", VA = "0xC14144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E3098", Offset = "0x8E3098")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700039F")]
		public BaseArmamentTrait SourceTrait
		{
			[Token(Token = "0x600182F")]
			[Address(RVA = "0xC1414C", Offset = "0xC1414C", VA = "0xC1414C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30A8", Offset = "0x8E30A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001830")]
			[Address(RVA = "0xC14154", Offset = "0xC14154", VA = "0xC14154")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30B8", Offset = "0x8E30B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xC13538", Offset = "0xC13538", VA = "0xC13538")]
		public ArmamentTraitRuntime(BaseArmamentTrait sourceTrait)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xC13A20", Offset = "0xC13A20", VA = "0xC13A20", Slot = "4")]
		public virtual void Unregister()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xC1415C", Offset = "0xC1415C", VA = "0xC1415C", Slot = "5")]
		public virtual void DestroyTrait()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xC138B0", Offset = "0xC138B0", VA = "0xC138B0", Slot = "6")]
		public virtual void Register(Armament armament)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xC14160", Offset = "0xC14160", VA = "0xC14160", Slot = "7")]
		public virtual void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xC14164", Offset = "0xC14164", VA = "0xC14164", Slot = "8")]
		public virtual void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xC14168", Offset = "0xC14168", VA = "0xC14168", Slot = "9")]
		public virtual void PreProcessHealthDamageOther(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xC1416C", Offset = "0xC1416C", VA = "0xC1416C", Slot = "10")]
		public virtual void PreProcessGuardDamageOther(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xC14170", Offset = "0xC14170", VA = "0xC14170", Slot = "11")]
		public virtual void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQuality)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xC14174", Offset = "0xC14174", VA = "0xC14174", Slot = "12")]
		public virtual void PostHit(ClaymoreEntity entity, ref HitData hitData)
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xC14178", Offset = "0xC14178", VA = "0xC14178", Slot = "13")]
		public virtual void DoUpdate()
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xC1417C", Offset = "0xC1417C", VA = "0xC1417C", Slot = "14")]
		public virtual HitVFXData GetHitEffectsData(ClaymoreEntity entity)
		{
			return null;
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class BaseArmamentTrait : ScriptableObject, IGUIDProvider
	{
		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D47B4", Offset = "0x8D47B4")]
		[SerializeField]
		private string guid;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string developerName;

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4810", Offset = "0x8D4810")]
		[SerializeField]
		private UserString displayName;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D485C", Offset = "0x8D485C")]
		[SerializeField]
		protected UserString description;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D48A8", Offset = "0x8D48A8")]
		[SerializeField]
		private Sprite icon;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D48F4", Offset = "0x8D48F4")]
		[SerializeField]
		private bool displayInTraitList;

		[Token(Token = "0x170003A0")]
		public bool DisplayInTraitList
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xC14184", Offset = "0xC14184", VA = "0xC14184")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xC1418C", Offset = "0xC1418C", VA = "0xC1418C")]
			set
			{
			}
		}

		[Token(Token = "0x170003A1")]
		public string GUID
		{
			[Token(Token = "0x600183F")]
			[Address(RVA = "0xC14198", Offset = "0xC14198", VA = "0xC14198", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A2")]
		public string DeveloperName
		{
			[Token(Token = "0x6001840")]
			[Address(RVA = "0xC141A0", Offset = "0xC141A0", VA = "0xC141A0", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		public Sprite Icon
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0xC141A8", Offset = "0xC141A8", VA = "0xC141A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A4")]
		public UserString DisplayName
		{
			[Token(Token = "0x6001842")]
			[Address(RVA = "0xC141B0", Offset = "0xC141B0", VA = "0xC141B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		public virtual string Description
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0xC141B8", Offset = "0xC141B8", VA = "0xC141B8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xC141C4", Offset = "0xC141C4", VA = "0xC141C4", Slot = "7")]
		public virtual string GetAppliedDisplayName(ArmamentID armament, int index)
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xC141D0", Offset = "0xC141D0", VA = "0xC141D0", Slot = "8")]
		public virtual string GetAppliedDescription(ArmamentID armament, int index)
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xC141DC", Offset = "0xC141DC", VA = "0xC141DC", Slot = "9")]
		public virtual void OnCrushComplete(Armament armament)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xC141E0", Offset = "0xC141E0", VA = "0xC141E0", Slot = "10")]
		public virtual void Apply(Armament armament)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xC141E4", Offset = "0xC141E4", VA = "0xC141E4", Slot = "11")]
		public virtual void Remove(Armament armament)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xC141E8", Offset = "0xC141E8", VA = "0xC141E8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xC1427C", Offset = "0xC1427C", VA = "0xC1427C", Slot = "12")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xC14468", Offset = "0xC14468", VA = "0xC14468", Slot = "13")]
		public virtual ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xC144D8", Offset = "0xC144D8", VA = "0xC144D8", Slot = "14")]
		public virtual ArmamentAugment.UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(ArmamentAugment.UsageResult);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xC13528", Offset = "0xC13528", VA = "0xC13528")]
		protected BaseArmamentTrait()
		{
		}
	}
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A49BC", Offset = "0x8A49BC")]
	public class ConvertComboToDamageTrait : BaseArmamentTrait
	{
		[Token(Token = "0x200055A")]
		private class ConvertComboToDamageTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002287")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly ConvertComboToDamageTrait source;

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xC1469C", Offset = "0xC1469C", VA = "0xC1469C")]
			public ConvertComboToDamageTraitRuntime(ConvertComboToDamageTrait source)
			{
			}

			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xC146FC", Offset = "0xC146FC", VA = "0xC146FC", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xC147F4", Offset = "0xC147F4", VA = "0xC147F4", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xC148D4", Offset = "0xC148D4", VA = "0xC148D4")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xC149E4", Offset = "0xC149E4", VA = "0xC149E4", Slot = "12")]
			public override void PostHit(ClaymoreEntity entity, ref HitData hitData)
			{
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xC14B6C", Offset = "0xC14B6C", VA = "0xC14B6C", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xC14C98", Offset = "0xC14C98", VA = "0xC14C98", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}
		}

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4940", Offset = "0x8D4940")]
		[SerializeField]
		private BoolVariable ForceEndComboImmediately;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D498C", Offset = "0x8D498C")]
		[SerializeField]
		private IntVariable PlayerComboLimit;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D49D8", Offset = "0x8D49D8")]
		[SerializeField]
		private BoolVariable IsInHub;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A24", Offset = "0x8D4A24")]
		[SerializeField]
		private bool ApplyToGuardDamage;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4A70", Offset = "0x8D4A70")]
		[SerializeField]
		private bool ApplyToHealthDamage;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4ABC", Offset = "0x8D4ABC")]
		[SerializeField]
		private bool ConvertByPercentage;

		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B08", Offset = "0x8D4B08")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D4B08", Offset = "0x8D4B08")]
		[SerializeField]
		private float amountPercent;

		[Token(Token = "0x40018F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4B78", Offset = "0x8D4B78")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D4B78", Offset = "0x8D4B78")]
		[SerializeField]
		private float amountFixed;

		[Token(Token = "0x170003A6")]
		public override string Description
		{
			[Token(Token = "0x600184E")]
			[Address(RVA = "0xC14588", Offset = "0xC14588", VA = "0xC14588", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xC1463C", Offset = "0xC1463C", VA = "0xC1463C", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xC146E0", Offset = "0xC146E0", VA = "0xC146E0")]
		public ConvertComboToDamageTrait()
		{
		}
	}
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4A00", Offset = "0x8A4A00")]
	public class DamageModOnCombo : BaseArmamentTrait
	{
		[Token(Token = "0x200055B")]
		private class DamageModOnComboRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002288")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly DamageModOnCombo source;

			[Token(Token = "0x4002289")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int count;

			[Token(Token = "0x400228A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float lastHitTime;

			[Token(Token = "0x6001E02")]
			[Address(RVA = "0xC14E70", Offset = "0xC14E70", VA = "0xC14E70")]
			public DamageModOnComboRuntime(DamageModOnCombo source)
			{
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xC14ECC", Offset = "0xC14ECC", VA = "0xC14ECC", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}
		}

		[Token(Token = "0x40018F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4BF0", Offset = "0x8D4BF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4BF0", Offset = "0x8D4BF0")]
		[SerializeField]
		private int healthDamageBonusPerTier;

		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4C60", Offset = "0x8D4C60")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x170003A7")]
		public override string Description
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0xC14D90", Offset = "0xC14D90", VA = "0xC14D90", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xC14E10", Offset = "0xC14E10", VA = "0xC14E10", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xC14EB4", Offset = "0xC14EB4", VA = "0xC14EB4")]
		public DamageModOnCombo()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4A44", Offset = "0x8A4A44")]
	public class DamageModOnStatus : BaseArmamentTrait
	{
		[Token(Token = "0x200055C")]
		private class DamageModOnStatusRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400228B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly DamageModOnStatus source;

			[Token(Token = "0x400228C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly ExtraDamageThroughGuard extraDamage;

			[Token(Token = "0x6001E04")]
			[Address(RVA = "0xC1513C", Offset = "0xC1513C", VA = "0xC1513C")]
			public DamageModOnStatusRuntime(DamageModOnStatus source)
			{
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xC151E0", Offset = "0xC151E0", VA = "0xC151E0", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xC15464", Offset = "0xC15464", VA = "0xC15464", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}
		}

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4CAC", Offset = "0x8D4CAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4CAC", Offset = "0x8D4CAC")]
		[SerializeField]
		private HitProperty hitProperty;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D1C", Offset = "0x8D4D1C")]
		[SerializeField]
		private float staminaDamageMultiplierIncrease;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4D68", Offset = "0x8D4D68")]
		[SerializeField]
		private float healthDamageMultiplierIncrease;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4DB4", Offset = "0x8D4DB4")]
		[SerializeField]
		private float staminaBaseDamageIncrease;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E00", Offset = "0x8D4E00")]
		[SerializeField]
		private int healthBaseDamageIncrease;

		[Token(Token = "0x4001900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E4C", Offset = "0x8D4E4C")]
		[SerializeField]
		private float staminaBonusDamage;

		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4E98", Offset = "0x8D4E98")]
		[SerializeField]
		private int healthBonusDamage;

		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4EE4", Offset = "0x8D4EE4")]
		[SerializeField]
		private int healthDamageThroughGuard;

		[Token(Token = "0x170003A8")]
		public override string Description
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0xC14FFC", Offset = "0xC14FFC", VA = "0xC14FFC", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xC150DC", Offset = "0xC150DC", VA = "0xC150DC", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xC151D0", Offset = "0xC151D0", VA = "0xC151D0")]
		public DamageModOnStatus()
		{
		}
	}
	[Token(Token = "0x2000394")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4A88", Offset = "0x8A4A88")]
	public class DamageOnComboFinish : BaseArmamentTrait
	{
		[Token(Token = "0x200055D")]
		private class DamageOnComboFinishRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400228D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly DamageOnComboFinish chargeSource;

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xC15634", Offset = "0xC15634", VA = "0xC15634")]
			public DamageOnComboFinishRuntime(DamageOnComboFinish source)
			{
			}

			[Token(Token = "0x6001E08")]
			[Address(RVA = "0xC1568C", Offset = "0xC1568C", VA = "0xC1568C", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xC15784", Offset = "0xC15784", VA = "0xC15784", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0xC15864", Offset = "0xC15864", VA = "0xC15864")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}
		}

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D4F30", Offset = "0x8D4F30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4F30", Offset = "0x8D4F30")]
		[SerializeField]
		private int healthDamage;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4FA0", Offset = "0x8D4FA0")]
		[SerializeField]
		private float healthDamageMultiplier;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D4FEC", Offset = "0x8D4FEC")]
		[SerializeField]
		private IntReference maxCombo;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5038", Offset = "0x8D5038")]
		[SerializeField]
		private BoolVariable ForceEndComboImmediately;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5084", Offset = "0x8D5084")]
		[SerializeField]
		private bool requireFinishWithThisWeapon;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xC155D4", Offset = "0xC155D4", VA = "0xC155D4", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xC15678", Offset = "0xC15678", VA = "0xC15678")]
		public DamageOnComboFinish()
		{
		}
	}
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4ACC", Offset = "0x8A4ACC")]
	public class DashingStabDamageBonusTrait : BaseArmamentTrait
	{
		[Token(Token = "0x200055E")]
		private class DashingStabDamageBonusTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly DashingStabDamageBonusTrait source;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float _lastDashTime;

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0xC15C68", Offset = "0xC15C68", VA = "0xC15C68")]
			public DashingStabDamageBonusTraitRuntime(DashingStabDamageBonusTrait source)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0xC15E24", Offset = "0xC15E24", VA = "0xC15E24", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0xC15EE8", Offset = "0xC15EE8", VA = "0xC15EE8", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0xC15F8C", Offset = "0xC15F8C", VA = "0xC15F8C")]
			private void OnDashStarted(Vector3 v)
			{
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0xC15FB4", Offset = "0xC15FB4", VA = "0xC15FB4", Slot = "12")]
			public override void PostHit(ClaymoreEntity entity, ref HitData hitData)
			{
			}
		}

		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D50D0", Offset = "0x8D50D0")]
		[SerializeField]
		private bool ApplyToGuardDamage;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D511C", Offset = "0x8D511C")]
		[SerializeField]
		private bool ApplyToHealthDamage;

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5168", Offset = "0x8D5168")]
		[SerializeField]
		private bool ConvertByPercentage;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D51B4", Offset = "0x8D51B4")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D51B4", Offset = "0x8D51B4")]
		[SerializeField]
		private float amountPercent;

		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5224", Offset = "0x8D5224")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D5224", Offset = "0x8D5224")]
		[SerializeField]
		private FloatVariable ScalingSource;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5294", Offset = "0x8D5294")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D5294", Offset = "0x8D5294")]
		[SerializeField]
		private float amountFixed;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D530C", Offset = "0x8D530C")]
		[SerializeField]
		private Vector3GlobalEvent _onDashStartGlobalEvent;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5358", Offset = "0x8D5358")]
		[SerializeField]
		private float lastDashTimeThreshold;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D53A4", Offset = "0x8D53A4")]
		[SerializeField]
		private bool RequireTwoHandedGrip;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D53F0", Offset = "0x8D53F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D53F0", Offset = "0x8D53F0")]
		[SerializeField]
		private AnimationCurve _dashImpactCurve;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private FloatReference _minDamageScale;

		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private FloatReference _maxDamageScale;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FloatReference _minDistanceScale;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatReference _maxDistanceScale;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private FloatVariable _dashDamageVariable;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private FloatVariable _dashDamageMultiplier;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FloatVariable _dashDistanceVariable;

		[Token(Token = "0x170003A9")]
		public override string Description
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0xC15B54", Offset = "0xC15B54", VA = "0xC15B54", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xC15C08", Offset = "0xC15C08", VA = "0xC15C08", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xC15CB4", Offset = "0xC15CB4", VA = "0xC15CB4")]
		private float GetDashDamageModifiedByDistance()
		{
			return default(float);
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xC15E04", Offset = "0xC15E04", VA = "0xC15E04")]
		public DashingStabDamageBonusTrait()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4B10", Offset = "0x8A4B10")]
	public class DisplayDamageTrait : BaseArmamentTrait
	{
		[Token(Token = "0x200055F")]
		private class DisplayDamageTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly GameObject damageDisplay;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly Text damageText;

			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly TextMeshPro damageTextMeshPro;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly TextMeshProUGUI damageTextMeshProUGUI;

			[Token(Token = "0x6001E10")]
			[Address(RVA = "0xC16324", Offset = "0xC16324", VA = "0xC16324")]
			private void SetText(string text)
			{
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xC161C8", Offset = "0xC161C8", VA = "0xC161C8")]
			public DisplayDamageTraitRuntime(DisplayDamageTrait source)
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xC1645C", Offset = "0xC1645C", VA = "0xC1645C", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xC166E4", Offset = "0xC166E4", VA = "0xC166E4", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E14")]
			[Address(RVA = "0xC1694C", Offset = "0xC1694C", VA = "0xC1694C")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xC16C1C", Offset = "0xC16C1C", VA = "0xC16C1C")]
			private void OnGuardDamaged(Armament attacker, Enemy enemy, float damage)
			{
			}

			[Token(Token = "0x6001E16")]
			[Address(RVA = "0xC16EEC", Offset = "0xC16EEC", VA = "0xC16EEC")]
			private void OnBlockedDamaged(Armament attacker, Enemy enemy, float damage)
			{
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xC171E0", Offset = "0xC171E0", VA = "0xC171E0")]
			private void OnDashDamage(List<MeleeWeapon> heldWeapons, Enemy enemy, HitResult hitResult)
			{
			}
		}

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D54D0", Offset = "0x8D54D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D54D0", Offset = "0x8D54D0")]
		[SerializeField]
		private GameObject damageDisplayPrefab;

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xC16168", Offset = "0xC16168", VA = "0xC16168", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xC16314", Offset = "0xC16314", VA = "0xC16314")]
		public DisplayDamageTrait()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public class EmbeddedTrait
	{
		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private BaseArmamentTrait trait;

		[Token(Token = "0x170003AA")]
		public BaseArmamentTrait Trait
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xC175C4", Offset = "0xC175C4", VA = "0xC175C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xC1758C", Offset = "0xC1758C", VA = "0xC1758C")]
		public void SetTrait(BaseArmamentTrait t)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xC175CC", Offset = "0xC175CC", VA = "0xC175CC")]
		public static implicit operator BaseArmamentTrait(EmbeddedTrait t)
		{
			return null;
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xC132D4", Offset = "0xC132D4", VA = "0xC132D4")]
		public EmbeddedTrait()
		{
		}
	}
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4B54", Offset = "0x8A4B54")]
	public class HitPropertyOnCondition : BaseArmamentTrait
	{
		[Token(Token = "0x2000560")]
		public class HitPropertyOnConditionRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly HitPropertyOnCondition source;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private HitData.HitQualityType hitQuality;

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xC17644", Offset = "0xC17644", VA = "0xC17644")]
			public HitPropertyOnConditionRuntime(HitPropertyOnCondition source)
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xC17708", Offset = "0xC17708", VA = "0xC17708", Slot = "11")]
			public override void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQualityType)
			{
			}

			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0xC17710", Offset = "0xC17710", VA = "0xC17710", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xC17808", Offset = "0xC17808", VA = "0xC17808")]
			private bool CheckIsValidHit()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable condition;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool triggerOnUnderHit;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool triggerOnStandardHit;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		private bool triggerOnBigHit;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5590", Offset = "0x8D5590")]
		[SerializeField]
		private int additionalGuardBaseDamage;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private int additionalGuardMultiplierDamage;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int additionalGuardBonusDamage;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D55FC", Offset = "0x8D55FC")]
		[SerializeField]
		private HitProperty[] hitProperties;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xC175E4", Offset = "0xC175E4", VA = "0xC175E4", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xC17688", Offset = "0xC17688", VA = "0xC17688")]
		public HitPropertyOnCondition()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4B98", Offset = "0x8A4B98")]
	public class HitPropertyOnCooldown : BaseArmamentTrait, IResourceLoadHandler<HitPropertyOnCooldownVFX>, IResourceLoadHandler
	{
		[Token(Token = "0x2000561")]
		public class HitPropertyOnCooldownRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x2000602")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB33C", Offset = "0x8AB33C")]
			private sealed class <>c__DisplayClass14_0
			{
				[Token(Token = "0x40023D8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public HitPropertyOnCooldownRuntime <>4__this;

				[Token(Token = "0x40023D9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Armament armament;

				[Token(Token = "0x6002F15")]
				[Address(RVA = "0xC1809C", Offset = "0xC1809C", VA = "0xC1809C")]
				public <>c__DisplayClass14_0()
				{
				}

				[Token(Token = "0x6002F16")]
				[Address(RVA = "0xC184A8", Offset = "0xC184A8", VA = "0xC184A8")]
				internal void <Register>b__0()
				{
				}
			}

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly HitPropertyOnCooldown source;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float lastApplication;

			[Token(Token = "0x4002298")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private HitData.HitQualityType hitQuality;

			[Token(Token = "0x4002299")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool IsOnCooldown;

			[Token(Token = "0x400229A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HitPropertyOnCooldownVFX runtimeVFX;

			[Token(Token = "0x17000496")]
			private bool OffCooldown
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xC17CEC", Offset = "0xC17CEC", VA = "0xC17CEC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x14000042")]
			public event Action OnEnterCooldown
			{
				[Token(Token = "0x6001E1D")]
				[Address(RVA = "0xC17D2C", Offset = "0xC17D2C", VA = "0xC17D2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4AEC", Offset = "0x8E4AEC")]
				add
				{
				}
				[Token(Token = "0x6001E1E")]
				[Address(RVA = "0xC17DD0", Offset = "0xC17DD0", VA = "0xC17DD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4AFC", Offset = "0x8E4AFC")]
				remove
				{
				}
			}

			[Token(Token = "0x14000043")]
			public event Action OnExitCooldown
			{
				[Token(Token = "0x6001E1F")]
				[Address(RVA = "0xC17E74", Offset = "0xC17E74", VA = "0xC17E74")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B0C", Offset = "0x8E4B0C")]
				add
				{
				}
				[Token(Token = "0x6001E20")]
				[Address(RVA = "0xC17F18", Offset = "0xC17F18", VA = "0xC17F18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4B1C", Offset = "0x8E4B1C")]
				remove
				{
				}
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xC17A44", Offset = "0xC17A44", VA = "0xC17A44")]
			public HitPropertyOnCooldownRuntime(HitPropertyOnCooldown source)
			{
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xC17FBC", Offset = "0xC17FBC", VA = "0xC17FBC", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E23")]
			[Address(RVA = "0xC180A4", Offset = "0xC180A4", VA = "0xC180A4", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xC18288", Offset = "0xC18288", VA = "0xC18288", Slot = "5")]
			public override void DestroyTrait()
			{
			}

			[Token(Token = "0x6001E25")]
			[Address(RVA = "0xC182E8", Offset = "0xC182E8", VA = "0xC182E8", Slot = "11")]
			public override void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQualityType)
			{
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xC182F0", Offset = "0xC182F0", VA = "0xC182F0", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xC18408", Offset = "0xC18408", VA = "0xC18408")]
			private bool CheckIsValidHit()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xC18468", Offset = "0xC18468", VA = "0xC18468", Slot = "13")]
			public override void DoUpdate()
			{
			}
		}

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ResourceRequestKey hitPropertyOnCooldownVFXKey;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float cooldownSeconds;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private bool triggerOnUnderHit;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[SerializeField]
		private bool triggerOnStandardHit;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[SerializeField]
		private bool triggerOnBigHit;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D56A8", Offset = "0x8D56A8")]
		[SerializeField]
		private int additionalGuardBaseDamage;

		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private int additionalGuardMultiplierDamage;

		[Token(Token = "0x400192B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private int additionalGuardBonusDamage;

		[Token(Token = "0x400192C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5714", Offset = "0x8D5714")]
		[SerializeField]
		private HitProperty[] hitProperties;

		[NonSerialized]
		[Token(Token = "0x400192D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private HitPropertyOnCooldownVFX hitPropertyOnCooldownVFX;

		[NonSerialized]
		[Token(Token = "0x400192E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isVFXReady;

		[Token(Token = "0x1400003F")]
		private event Action onResourceLoaded
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0xC1789C", Offset = "0xC1789C", VA = "0xC1789C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30C8", Offset = "0x8E30C8")]
			add
			{
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0xC17940", Offset = "0xC17940", VA = "0xC17940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30D8", Offset = "0x8E30D8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xC179E4", Offset = "0xC179E4", VA = "0xC179E4", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xC17A88", Offset = "0xC17A88", VA = "0xC17A88", Slot = "15")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xC17BB0", Offset = "0xC17BB0", VA = "0xC17BB0")]
		private void LoadVFXResource(Action onEnd)
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xC17C64", Offset = "0xC17C64", VA = "0xC17C64")]
		public HitPropertyOnCooldown()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class HitPropertyOnCooldownVFX : MonoBehaviour
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _onExitCooldownMesh;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5780", Offset = "0x8D5780")]
		[SerializeField]
		private ParticleSystem _onExitCooldownParticleSystem;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem _onHitParticleSystem;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem _loopFlashParticleSystem;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D57EC", Offset = "0x8D57EC")]
		[SerializeField]
		private AudioKeyData _onExitCooldownSFXKey;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioKeyData _onHitSFXKey;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5848", Offset = "0x8D5848")]
		[SerializeField]
		private XRHapticsObject _onExitCooldownHaptics;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _isSummoned;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isCharged;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HitPropertyOnCooldown.HitPropertyOnCooldownRuntime _currentRuntime;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem.MainModule flashLoopMain;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5894", Offset = "0x8D5894")]
		private float particleTimer;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool timerStart;

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xC18578", Offset = "0xC18578", VA = "0xC18578")]
		public void Register(HitPropertyOnCooldown.HitPropertyOnCooldownRuntime traitRuntime)
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xC18134", Offset = "0xC18134", VA = "0xC18134")]
		public void Unregister()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xC182A0", Offset = "0xC182A0", VA = "0xC182A0")]
		public void DestroyVFX()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xC189B4", Offset = "0xC189B4", VA = "0xC189B4")]
		private void OnSummonChange(bool isSummoned)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xC1874C", Offset = "0xC1874C", VA = "0xC1874C")]
		private void OnEnterCooldown()
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xC18830", Offset = "0xC18830", VA = "0xC18830")]
		private void OnExitCooldown()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xC18A28", Offset = "0xC18A28", VA = "0xC18A28")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xC18B10", Offset = "0xC18B10", VA = "0xC18B10")]
		public HitPropertyOnCooldownVFX()
		{
		}
	}
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4BDC", Offset = "0x8A4BDC")]
	public class ModifyVariableOnKill : BaseArmamentTrait
	{
		[Token(Token = "0x2000562")]
		private class ModifyVariableOnKillRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400229D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly ModifyVariableOnKill chargeSource;

			[Token(Token = "0x6001E29")]
			[Address(RVA = "0xC18BF8", Offset = "0xC18BF8", VA = "0xC18BF8")]
			public ModifyVariableOnKillRuntime(ModifyVariableOnKill source)
			{
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xC18C4C", Offset = "0xC18C4C", VA = "0xC18C4C", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0xC18D44", Offset = "0xC18D44", VA = "0xC18D44", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xC18E24", Offset = "0xC18E24", VA = "0xC18E24")]
			private void OnKill(Armament killer, Enemy enemy)
			{
			}
		}

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D58CC", Offset = "0x8D58CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D58CC", Offset = "0x8D58CC")]
		[SerializeField]
		private IntVariable variableToModify;

		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D593C", Offset = "0x8D593C")]
		[SerializeField]
		private int amount;

		[Token(Token = "0x170003AB")]
		public override string Description
		{
			[Token(Token = "0x6001873")]
			[Address(RVA = "0xC18B18", Offset = "0xC18B18", VA = "0xC18B18", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xC18B98", Offset = "0xC18B98", VA = "0xC18B98", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xC18C3C", Offset = "0xC18C3C", VA = "0xC18C3C")]
		public ModifyVariableOnKill()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4C20", Offset = "0x8A4C20")]
	public class PropertyOnComboFinish : BaseArmamentTrait
	{
		[Token(Token = "0x2000563")]
		private class PropertyOnComboFinishRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400229E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly PropertyOnComboFinish chargeSource;

			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0xC18EB0", Offset = "0xC18EB0", VA = "0xC18EB0")]
			public PropertyOnComboFinishRuntime(PropertyOnComboFinish source)
			{
			}

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xC18F08", Offset = "0xC18F08", VA = "0xC18F08", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xC19000", Offset = "0xC19000", VA = "0xC19000", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xC190E0", Offset = "0xC190E0", VA = "0xC190E0")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}
		}

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5988", Offset = "0x8D5988")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5988", Offset = "0x8D5988")]
		[SerializeField]
		private HitProperty hitProperty;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D59F8", Offset = "0x8D59F8")]
		[SerializeField]
		private IntReference maxCombo;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A44", Offset = "0x8D5A44")]
		[SerializeField]
		private BoolVariable ForceEndComboImmediately;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5A90", Offset = "0x8D5A90")]
		[SerializeField]
		private bool requireFinishWithThisWeapon;

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xC18E50", Offset = "0xC18E50", VA = "0xC18E50", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xC18EF4", Offset = "0xC18EF4", VA = "0xC18EF4")]
		public PropertyOnComboFinish()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4C64", Offset = "0x8A4C64")]
	public class ScalingDamageMultiplierTrait : BaseArmamentTrait
	{
		[Token(Token = "0x2000564")]
		private class ScalingDamageMultiplierTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x400229F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly ScalingDamageMultiplierTrait source;

			[Token(Token = "0x6001E31")]
			[Address(RVA = "0xC193C4", Offset = "0xC193C4", VA = "0xC193C4")]
			public ScalingDamageMultiplierTraitRuntime(ScalingDamageMultiplierTrait source)
			{
			}

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xC19420", Offset = "0xC19420", VA = "0xC19420", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xC19488", Offset = "0xC19488", VA = "0xC19488", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}
		}

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5ADC", Offset = "0x8D5ADC")]
		[SerializeField]
		private bool ApplyToGuardDamage;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B28", Offset = "0x8D5B28")]
		[SerializeField]
		private bool ApplyToHealthDamage;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5B74", Offset = "0x8D5B74")]
		[SerializeField]
		private float amount;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5BC0", Offset = "0x8D5BC0")]
		[SerializeField]
		private FloatVariable ScalingSource;

		[Token(Token = "0x170003AC")]
		public override string Description
		{
			[Token(Token = "0x6001878")]
			[Address(RVA = "0xC192C0", Offset = "0xC192C0", VA = "0xC192C0", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xC19364", Offset = "0xC19364", VA = "0xC19364", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xC19408", Offset = "0xC19408", VA = "0xC19408")]
		public ScalingDamageMultiplierTrait()
		{
		}
	}
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4CA8", Offset = "0x8A4CA8")]
	public class StatModArmamentTrait : BaseArmamentTrait
	{
		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private StatMod[] statMods;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatReferenceConstraint[] constraints;

		[Token(Token = "0x170003AD")]
		public StatMod[] StatMods
		{
			[Token(Token = "0x600187B")]
			[Address(RVA = "0xC19518", Offset = "0xC19518", VA = "0xC19518")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003AE")]
		public override string Description
		{
			[Token(Token = "0x6001881")]
			[Address(RVA = "0xC19C68", Offset = "0xC19C68", VA = "0xC19C68", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xC19520", Offset = "0xC19520", VA = "0xC19520", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xC197D8", Offset = "0xC197D8", VA = "0xC197D8", Slot = "10")]
		public override void Apply(Armament armament)
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xC19858", Offset = "0xC19858", VA = "0xC19858", Slot = "11")]
		public override void Remove(Armament armament)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xC198D8", Offset = "0xC198D8", VA = "0xC198D8", Slot = "14")]
		public override ArmamentAugment.UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(ArmamentAugment.UsageResult);
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xC19BE4", Offset = "0xC19BE4", VA = "0xC19BE4", Slot = "12")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xC19CF0", Offset = "0xC19CF0", VA = "0xC19CF0")]
		public StatModArmamentTrait()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4CEC", Offset = "0x8A4CEC")]
	public class StatusChanceOnHit : BaseArmamentTrait
	{
		[Token(Token = "0x2000565")]
		private class StatusChanceOnHitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly StatusChanceOnHit chargeSource;

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xC19DE8", Offset = "0xC19DE8", VA = "0xC19DE8")]
			public StatusChanceOnHitRuntime(StatusChanceOnHit source)
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xC19F10", Offset = "0xC19F10", VA = "0xC19F10")]
			private void AttemptStatus(Armament attacker, Enemy enemy)
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xC1A05C", Offset = "0xC1A05C", VA = "0xC1A05C", Slot = "6")]
			public override void Register(Armament armament)
			{
			}

			[Token(Token = "0x6001E37")]
			[Address(RVA = "0xC1A1DC", Offset = "0xC1A1DC", VA = "0xC1A1DC", Slot = "4")]
			public override void Unregister()
			{
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xC1A344", Offset = "0xC1A344", VA = "0xC1A344")]
			private void OnGuardDamaged(Armament attacker, Enemy enemy, float damage)
			{
			}

			[Token(Token = "0x6001E39")]
			[Address(RVA = "0xC1A348", Offset = "0xC1A348", VA = "0xC1A348")]
			private void OnHealthDamaged(Armament attacker, Enemy enemy, int comboIndex, float damage, HitData hit)
			{
			}
		}

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5C2C", Offset = "0x8D5C2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C2C", Offset = "0x8D5C2C")]
		[SerializeField]
		private HitProperty hitProperty;

		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5C9C", Offset = "0x8D5C9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8D5C9C", Offset = "0x8D5C9C")]
		[SerializeField]
		private float chance;

		[Token(Token = "0x170003AF")]
		public override string Description
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0xC19E2C", Offset = "0xC19E2C", VA = "0xC19E2C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xC19D88", Offset = "0xC19D88", VA = "0xC19D88", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xC19F00", Offset = "0xC19F00", VA = "0xC19F00")]
		public StatusChanceOnHit()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4D30", Offset = "0x8A4D30")]
	public class TwoHandedStatSharingTrait : BaseArmamentTrait
	{
		[Token(Token = "0x2000566")]
		private class TwoHandedStatSharingTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly TwoHandedStatSharingTrait source;

			[Token(Token = "0x6001E3A")]
			[Address(RVA = "0xC1A450", Offset = "0xC1A450", VA = "0xC1A450")]
			public TwoHandedStatSharingTraitRuntime(TwoHandedStatSharingTrait source)
			{
			}

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xC1A4A4", Offset = "0xC1A4A4", VA = "0xC1A4A4", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xC1A5F4", Offset = "0xC1A5F4", VA = "0xC1A5F4", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}
		}

		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D00", Offset = "0x8D5D00")]
		[SerializeField]
		private FloatVariable GuardDamage;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D4C", Offset = "0x8D5D4C")]
		[SerializeField]
		private IntVariable HealthDamage;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5D98", Offset = "0x8D5D98")]
		[SerializeField]
		private float amount;

		[Token(Token = "0x170003B0")]
		public override string Description
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xC1A34C", Offset = "0xC1A34C", VA = "0xC1A34C", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xC1A3F0", Offset = "0xC1A3F0", VA = "0xC1A3F0", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xC1A494", Offset = "0xC1A494", VA = "0xC1A494")]
		public TwoHandedStatSharingTrait()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4D74", Offset = "0x8A4D74")]
	public class UpgradeSuperTrait : BaseArmamentTrait
	{
		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5DE4", Offset = "0x8D5DE4")]
		[SerializeField]
		private IntVariable superLevelTarget;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AchievementAsset superLevelAchievement;

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xC1A710", Offset = "0xC1A710", VA = "0xC1A710", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xC1A7A4", Offset = "0xC1A7A4", VA = "0xC1A7A4", Slot = "7")]
		public override string GetAppliedDisplayName(ArmamentID armament, int index)
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xC1A8C8", Offset = "0xC1A8C8", VA = "0xC1A8C8", Slot = "8")]
		public override string GetAppliedDescription(ArmamentID armament, int index)
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xC1A7C8", Offset = "0xC1A7C8", VA = "0xC1A7C8")]
		private ArmamentAbilityDefinition GetDisplayAbility(ArmamentID armament, int index)
		{
			return null;
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xC1A8EC", Offset = "0xC1A8EC", VA = "0xC1A8EC", Slot = "9")]
		public override void OnCrushComplete(Armament armament)
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xC1A96C", Offset = "0xC1A96C", VA = "0xC1A96C", Slot = "10")]
		public override void Apply(Armament armament)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xC1A998", Offset = "0xC1A998", VA = "0xC1A998", Slot = "11")]
		public override void Remove(Armament armament)
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xC1A9C4", Offset = "0xC1A9C4", VA = "0xC1A9C4", Slot = "14")]
		public override ArmamentAugment.UsageResult CanBeUsed(PlayerHand hand)
		{
			return default(ArmamentAugment.UsageResult);
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xC1AA3C", Offset = "0xC1AA3C", VA = "0xC1AA3C", Slot = "12")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0xC1AAE4", Offset = "0xC1AAE4", VA = "0xC1AAE4")]
		public UpgradeSuperTrait()
		{
		}
	}
}
namespace SG.Claymore.Armaments.Variables
{
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4DB8", Offset = "0x8A4DB8")]
	public class ArmamentVariablesDefinition : ScriptableObject
	{
		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5E40", Offset = "0x8D5E40")]
		public BoolVariable IsFrustrumCheckEnabled;

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatVariable WeaponFrustrumFieldOfViewAngle;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5E78", Offset = "0x8D5E78")]
		public IntVariable TraitSockets;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntVariable ArmamentLevel;

		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable HealthDamage;

		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FloatVariable GuardDamage;

		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public FloatVariable Pushback;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FloatVariable MagnetismDistance;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public FloatVariable WeaponReachMultiplier;

		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatVariable FumbleAttackPower;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5EB0", Offset = "0x8D5EB0")]
		public FloatVariable GuardDamageMultiplier;

		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public FloatVariable GuardDamageMultiplierForOther;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public FloatVariable HealthDamageMultiplier;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public FloatVariable HealthDamageMultiplierForOther;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FloatVariable AttackGuardDamageMultiplier;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public FloatVariable BlockGuardDamageMultiplier;

		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5EE8", Offset = "0x8D5EE8")]
		public FloatVariable BlockAngleLeewayScale;

		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5F20", Offset = "0x8D5F20")]
		public FloatVariable UnderHitForceRatingMin;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public FloatVariable UnderHitForceRatingMax;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public FloatVariable UnderHitGuardDamageMultiplier;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public FloatVariable UnderHitCritDamageMultiplier;

		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public FloatVariable StandardHitForceRatingMin;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public FloatVariable StandardHitForceRatingMax;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public FloatVariable StandardHitGuardDamageMultiplier;

		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public FloatVariable StandardHitCritDamageMultiplier;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public FloatVariable BigHitForceRatingMin;

		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FloatVariable BigHitForceRatingMax;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public FloatVariable BigHitGuardDamageMultiplier;

		[Token(Token = "0x400196C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public FloatVariable BigHitCritDamageMultiplier;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5F58", Offset = "0x8D5F58")]
		public FloatVariable UnderHitTravelDistanceSwing;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public FloatVariable StandardHitTravelDistanceSwing;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FloatVariable BigHitTravelDistanceSwing;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public FloatVariable UnderHitTravelDistanceStab;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public FloatVariable StandardHitTravelDistanceStab;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public FloatVariable BigHitTravelDistanceStab;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public FloatVariable MinLegalSwingSpeed;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public FloatVariable MinLegalSwingEnvelope;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public FloatVariable MinLegalStabSpeed;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public FloatVariable MinLegalStabEnvelope;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public FloatVariable MinTimeBetweenHits;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public FloatVariable HitDirectionEnvelope;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5F90", Offset = "0x8D5F90")]
		public IntVariable WeaponHitCharges;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public FloatVariable InitialHitRechargeDelay;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public FloatVariable HitRechargeDelay;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public FloatVariable UnchargedHitDamageMultiplier;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D5FC8", Offset = "0x8D5FC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D5FC8", Offset = "0x8D5FC8")]
		public GlobalEvent ChargeSuperGlobalEvent;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6028", Offset = "0x8D6028")]
		public FloatVariable GlobalChargeMultiplier;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6060", Offset = "0x8D6060")]
		public FloatVariable InstancedChargeMultiplier;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6098", Offset = "0x8D6098")]
		public FloatVariable SuperCharge;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D60D0", Offset = "0x8D60D0")]
		public FloatVariable ChargePerSecond;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6108", Offset = "0x8D6108")]
		public FloatVariable GuardDamageCharge;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6140", Offset = "0x8D6140")]
		public FloatVariable GuardDamageChargeOther;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6178", Offset = "0x8D6178")]
		public FloatVariable HealthDamageCharge;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D61B0", Offset = "0x8D61B0")]
		public FloatVariable HealthDamageChargeOther;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D61E8", Offset = "0x8D61E8")]
		public FloatVariable KillCharge;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6220", Offset = "0x8D6220")]
		public FloatVariable KillChargeOther;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6258", Offset = "0x8D6258")]
		public FloatVariable AttackBlockedCharge;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6290", Offset = "0x8D6290")]
		public FloatVariable AttackBlockedChargeOther;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D62C8", Offset = "0x8D62C8")]
		public FloatVariable PlayerDamagedChargePerPoint;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6300", Offset = "0x8D6300")]
		public FloatVariable PlayerDodgedCharge;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6338", Offset = "0x8D6338")]
		public FloatVariable PlayerProjDestroyCharge;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6370", Offset = "0x8D6370")]
		public FloatVariable PlayerProjDestroyChargeOther;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D63A8", Offset = "0x8D63A8")]
		public FloatVariable ActivationTime;

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xC1AB44", Offset = "0xC1AB44", VA = "0xC1AB44")]
		public ArmamentVariablesDefinition GetInstances(Armament armament)
		{
			return null;
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0xC1B350", Offset = "0xC1B350", VA = "0xC1B350")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xC1B8B0", Offset = "0xC1B8B0", VA = "0xC1B8B0")]
		public ArmamentVariablesDefinition()
		{
		}
	}
}
namespace SG.Claymore.Armaments.Abilities
{
	[Token(Token = "0x20003A3")]
	public abstract class ArmamentAbility : MonoBehaviour
	{
		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected VisualEffectsAbility _visualEffectsAbility;

		[Token(Token = "0x4001990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D63F0", Offset = "0x8D63F0")]
		protected EnemyManager _enemyManager;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D643C", Offset = "0x8D643C")]
		[SerializeField]
		private PushBackHitProperty pushback;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float _knockbackRange;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected bool _doKnockbackOnActivation;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected HitVFXData knockbackHitVFX;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected ExposedTransformPoint knockbackPoint;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D64C8", Offset = "0x8D64C8")]
		[SerializeField]
		private Vector3GlobalEvent _onDashStartGlobalEvent;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolGlobalEvent _onDashEndGlobalEvent;

		[NonSerialized]
		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool _isDashing;

		[NonSerialized]
		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected float _timeDashEnded;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6524", Offset = "0x8D6524")]
		[SerializeField]
		private ArmamentAbilityDefinitionGlobalEvent _abilityChargedGlobalEvent;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentAbilityDefinitionGlobalEvent _abilityActivatedGlobalEvent;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6580", Offset = "0x8D6580")]
		[SerializeField]
		protected bool _hasAdditionalActivationCost;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Armament _armament;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected ArmamentAbilityDefinition _armamentAbilityDefinition;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected bool _isActive;

		[Token(Token = "0x170003B1")]
		public bool HasAdditionalActivationCost
		{
			[Token(Token = "0x6001896")]
			[Address(RVA = "0xADB110", Offset = "0xADB110", VA = "0xADB110")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public Armament Armament
		{
			[Token(Token = "0x6001897")]
			[Address(RVA = "0xADB118", Offset = "0xADB118", VA = "0xADB118")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B3")]
		public ArmamentAbilityDefinition ArmamentAbilityDefinition
		{
			[Token(Token = "0x6001898")]
			[Address(RVA = "0xADB120", Offset = "0xADB120", VA = "0xADB120")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B4")]
		public bool IsActive
		{
			[Token(Token = "0x6001899")]
			[Address(RVA = "0xADB128", Offset = "0xADB128", VA = "0xADB128")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000040")]
		protected event Action _onActivationEndCallback
		{
			[Token(Token = "0x600189A")]
			[Address(RVA = "0xADB130", Offset = "0xADB130", VA = "0xADB130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30E8", Offset = "0x8E30E8")]
			add
			{
			}
			[Token(Token = "0x600189B")]
			[Address(RVA = "0xADB1D4", Offset = "0xADB1D4", VA = "0xADB1D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E30F8", Offset = "0x8E30F8")]
			remove
			{
			}
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xADB278", Offset = "0xADB278", VA = "0xADB278", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xADB378", Offset = "0xADB378", VA = "0xADB378")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xADB468", Offset = "0xADB468", VA = "0xADB468", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xADB46C", Offset = "0xADB46C", VA = "0xADB46C", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xADB470", Offset = "0xADB470", VA = "0xADB470")]
		private void OnDashStart(Vector3 direction)
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xADB47C", Offset = "0xADB47C", VA = "0xADB47C")]
		private void OnDashEnd(bool interrupted)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xADB4A8", Offset = "0xADB4A8", VA = "0xADB4A8", Slot = "7")]
		public virtual void Initialize(Armament arm, ArmamentAbilityDefinition abilityDefinition)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xADB57C", Offset = "0xADB57C", VA = "0xADB57C", Slot = "8")]
		public virtual bool CanAffordAdditionalActivationCost()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xADB584", Offset = "0xADB584", VA = "0xADB584", Slot = "9")]
		public virtual void PlayAbilityFailAudio()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xADB588", Offset = "0xADB588", VA = "0xADB588", Slot = "10")]
		public virtual void PayAdditionalActivationCost()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xADB58C", Offset = "0xADB58C", VA = "0xADB58C", Slot = "11")]
		public virtual void OnBeginActivating()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xADB590", Offset = "0xADB590", VA = "0xADB590", Slot = "12")]
		public virtual void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xADB68C", Offset = "0xADB68C", VA = "0xADB68C", Slot = "13")]
		public virtual void OnActivationFail()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xADB690", Offset = "0xADB690", VA = "0xADB690", Slot = "14")]
		public virtual void OnCancelActivating()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xADB694", Offset = "0xADB694", VA = "0xADB694", Slot = "15")]
		public virtual void OnActivationEnd()
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xADB738", Offset = "0xADB738", VA = "0xADB738", Slot = "16")]
		public virtual void DestroyAbility()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xADB73C", Offset = "0xADB73C", VA = "0xADB73C", Slot = "17")]
		public virtual void OnWeaponSummoned()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xADB7D4", Offset = "0xADB7D4", VA = "0xADB7D4", Slot = "18")]
		public virtual void OnWeaponUnsummoned()
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xADB86C", Offset = "0xADB86C", VA = "0xADB86C", Slot = "19")]
		public virtual void OnActivatedTriggerDown()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xADB870", Offset = "0xADB870", VA = "0xADB870", Slot = "20")]
		public virtual void OnActivatedTriggerUp()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xADB874", Offset = "0xADB874", VA = "0xADB874", Slot = "21")]
		public virtual void OnCharged()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xADB8D0", Offset = "0xADB8D0", VA = "0xADB8D0", Slot = "22")]
		public virtual void HandleBeforePlayerDamaged(ref PlayerDefense.HitDamageHandle handle)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xADB8D4", Offset = "0xADB8D4", VA = "0xADB8D4", Slot = "23")]
		public virtual void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xADB980", Offset = "0xADB980", VA = "0xADB980", Slot = "24")]
		public virtual void OnPlayerDamage(float damage)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xADB984", Offset = "0xADB984", VA = "0xADB984", Slot = "25")]
		public virtual void OnKill(Armament killer, Enemy enemy)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xADB988", Offset = "0xADB988", VA = "0xADB988", Slot = "26")]
		public virtual void OnHealthDamaged(Armament attacker, Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xADB98C", Offset = "0xADB98C", VA = "0xADB98C", Slot = "27")]
		public virtual void OnGuardDamaged(Armament attacker, Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xADB990", Offset = "0xADB990", VA = "0xADB990", Slot = "28")]
		public virtual void OnAttackBlocked(Armament blocker, Enemy enemy, float damage)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xADB680", Offset = "0xADB680", VA = "0xADB680")]
		protected void DoKnockback()
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xADB994", Offset = "0xADB994", VA = "0xADB994")]
		protected void DoKnockback(PushBackHitProperty pushBackHitProperty, float radius)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xADBD38", Offset = "0xADBD38", VA = "0xADBD38")]
		protected ArmamentAbility()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class BaseProjectile : MonoBehaviour
	{
		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D65DC", Offset = "0x8D65DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D65DC", Offset = "0x8D65DC")]
		[SerializeField]
		private AudioKeyData initSFXKey;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D664C", Offset = "0x8D664C")]
		[SerializeField]
		private AudioKeyData impactSFXKey;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6698", Offset = "0x8D6698")]
		[SerializeField]
		private AudioRequest movementSFXLoop;

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xADBD50", Offset = "0xADBD50", VA = "0xADBD50", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xADBD54", Offset = "0xADBD54", VA = "0xADBD54", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xADBD94", Offset = "0xADBD94", VA = "0xADBD94")]
		protected void PlayImpactSFX()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xADBE94", Offset = "0xADBE94", VA = "0xADBE94")]
		protected void PlayInitSFX()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xADBF94", Offset = "0xADBF94", VA = "0xADBF94")]
		protected AudioRequestResult StartMovementSFX()
		{
			return default(AudioRequestResult);
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xADBD74", Offset = "0xADBD74", VA = "0xADBD74")]
		protected void StopMovementSFX()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xADC028", Offset = "0xADC028", VA = "0xADC028")]
		public BaseProjectile()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class BulwarkAbility : ArmamentAbility, IResourceLoadHandler<BulwarkVisual>, IResourceLoadHandler
	{
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB25C", Offset = "0x8AB25C")]
		private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BulwarkAbility <>4__this;

			[Token(Token = "0x17000497")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E40")]
				[Address(RVA = "0xADD6B8", Offset = "0xADD6B8", VA = "0xADD6B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000498")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E42")]
				[Address(RVA = "0xADD720", Offset = "0xADD720", VA = "0xADD720", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xADC118", Offset = "0xADC118", VA = "0xADC118")]
			[DebuggerHidden]
			public <Start>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xADD580", Offset = "0xADD580", VA = "0xADD580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xADD584", Offset = "0xADD584", VA = "0xADD584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E41")]
			[Address(RVA = "0xADD6C0", Offset = "0xADD6C0", VA = "0xADD6C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private bool doKnockbackOnBreak;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D66F4", Offset = "0x8D66F4")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ResourceRequestKey bulwarkVisualPrefabKey;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private IntVariable bulwarkRemaining;

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private FloatVariable bulwarkKnockbackMultiplier;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ScreenFlashRequestGlobalEvent flashRequestEvent;

		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6780", Offset = "0x8D6780")]
		[SerializeField]
		private HitVFXData hitVFXData;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private HitData.HitQualityType hitType;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D67DC", Offset = "0x8D67DC")]
		[SerializeField]
		private float knockbackMultipler;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private int hitsOfArmor;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private int damagedAtArmor;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float staminaDamageOnBreak;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float staminaDamageOnHit;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ScreenFlashRequest flashRequestData;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private List<HitProperty> aoeHitProps;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private List<HitProperty> thornsHitProps;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private StatMod[] _stats;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float endTime;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BulwarkVisual visInstance;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static BulwarkAbility activeBulwark;

		[NonSerialized]
		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private BulwarkVisual visPrefab;

		[NonSerialized]
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isReady;

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xADC09C", Offset = "0xADC09C", VA = "0xADC09C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3108", Offset = "0x8E3108")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xADC144", Offset = "0xADC144", VA = "0xADC144", Slot = "29")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xADC268", Offset = "0xADC268", VA = "0xADC268", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xADC538", Offset = "0xADC538", VA = "0xADC538", Slot = "15")]
		public override void OnActivationEnd()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xADC9D4", Offset = "0xADC9D4", VA = "0xADC9D4", Slot = "22")]
		public override void HandleBeforePlayerDamaged(ref PlayerDefense.HitDamageHandle handle)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xADCC30", Offset = "0xADCC30", VA = "0xADCC30")]
		private void DoThorns(Enemy attacker)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xADCF38", Offset = "0xADCF38", VA = "0xADCF38")]
		private void DamageAllInRadius(float radius)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xADD1B4", Offset = "0xADD1B4", VA = "0xADD1B4", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xADD4E0", Offset = "0xADD4E0", VA = "0xADD4E0")]
		public BulwarkAbility()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class BulwarkVisual : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB26C", Offset = "0x8AB26C")]
		private sealed class <ShowCoroutine>d__38 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BulwarkVisual <>4__this;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x17000499")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E46")]
				[Address(RVA = "0xADE204", Offset = "0xADE204", VA = "0xADE204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E48")]
				[Address(RVA = "0xADE26C", Offset = "0xADE26C", VA = "0xADE26C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xADDA70", Offset = "0xADDA70", VA = "0xADDA70")]
			[DebuggerHidden]
			public <ShowCoroutine>d__38(int <>1__state)
			{
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xADE088", Offset = "0xADE088", VA = "0xADE088", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xADE08C", Offset = "0xADE08C", VA = "0xADE08C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xADE20C", Offset = "0xADE20C", VA = "0xADE20C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB27C", Offset = "0x8AB27C")]
		private sealed class <HitCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BulwarkVisual <>4__this;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700049B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E4C")]
				[Address(RVA = "0xADE018", Offset = "0xADE018", VA = "0xADE018", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E4E")]
				[Address(RVA = "0xADE080", Offset = "0xADE080", VA = "0xADE080", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xADDA9C", Offset = "0xADDA9C", VA = "0xADDA9C")]
			[DebuggerHidden]
			public <HitCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xADDECC", Offset = "0xADDECC", VA = "0xADDECC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xADDED0", Offset = "0xADDED0", VA = "0xADDED0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xADE020", Offset = "0xADE020", VA = "0xADE020", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB28C", Offset = "0x8AB28C")]
		private sealed class <BreakCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BulwarkVisual <>4__this;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x1700049D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E52")]
				[Address(RVA = "0xADDE5C", Offset = "0xADDE5C", VA = "0xADDE5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E54")]
				[Address(RVA = "0xADDEC4", Offset = "0xADDEC4", VA = "0xADDEC4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xADDB44", Offset = "0xADDB44", VA = "0xADDB44")]
			[DebuggerHidden]
			public <BreakCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xADDCA4", Offset = "0xADDCA4", VA = "0xADDCA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xADDCA8", Offset = "0xADDCA8", VA = "0xADDCA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xADDE64", Offset = "0xADDE64", VA = "0xADDE64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRTrackedNode trackedNode;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D68C8", Offset = "0x8D68C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D68C8", Offset = "0x8D68C8")]
		[SerializeField]
		private GameObject activeRoot;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Renderer shieldRenderer;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D6948", Offset = "0x8D6948")]
		[SerializeField]
		protected MaterialPropertyReference _alphaParam;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D6994", Offset = "0x8D6994")]
		[SerializeField]
		protected MaterialPropertyReference _brokenParam;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D69E0", Offset = "0x8D69E0")]
		[SerializeField]
		protected MaterialPropertyReference _showParam;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D6A2C", Offset = "0x8D6A2C")]
		[SerializeField]
		protected MaterialPropertyReference _hitParam;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6A78", Offset = "0x8D6A78")]
		[SerializeField]
		private float _showDuration;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _hitDuration;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _breakDuration;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float _defaultAlpha;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6AF4", Offset = "0x8D6AF4")]
		[SerializeField]
		private AudioKeyData hitAbsorbAudioKey;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioKeyData shieldBreakAudioKey;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioKeyData timeoutAudioKey;

		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6B60", Offset = "0x8D6B60")]
		[SerializeField]
		private AudioKeyData warningPulseAudioKey;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6BAC", Offset = "0x8D6BAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6BAC", Offset = "0x8D6BAC")]
		[SerializeField]
		private AnimationCurve showCurve;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6C1C", Offset = "0x8D6C1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C1C", Offset = "0x8D6C1C")]
		[SerializeField]
		private float warningTime;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6C8C", Offset = "0x8D6C8C")]
		[SerializeField]
		private float warningGracePeriod;

		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6CD8", Offset = "0x8D6CD8")]
		[SerializeField]
		private AnimationCurve warningPulseFrequency;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D24", Offset = "0x8D6D24")]
		[SerializeField]
		private AnimationCurve warningPulse;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6D70", Offset = "0x8D6D70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D6D70", Offset = "0x8D6D70")]
		[SerializeField]
		private AnimationCurve breakPulse;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private VisualKeyData breakVisualKeyData;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float _breakEffectForwardOffset;

		[NonSerialized]
		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float pulseProgress;

		[NonSerialized]
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isInWarning;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private MaterialPropertyBlock shieldPropertyBlock;

		[NonSerialized]
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private int hitCount;

		[NonSerialized]
		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int maxHits;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Coroutine _showCoroutine;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _hitCoroutine;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Coroutine _breakCoroutine;

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xADD728", Offset = "0xADD728", VA = "0xADD728")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xADD7B4", Offset = "0xADD7B4", VA = "0xADD7B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xADD840", Offset = "0xADD840", VA = "0xADD840")]
		private void OnPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xADD880", Offset = "0xADD880", VA = "0xADD880")]
		private void InitPropertyBlock()
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xADD2D0", Offset = "0xADD2D0", VA = "0xADD2D0")]
		public void DoUpdate(float timeRemaining)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xADCDD4", Offset = "0xADCDD4", VA = "0xADCDD4")]
		public void HandleHitReceived(int remaining)
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xADC42C", Offset = "0xADC42C", VA = "0xADC42C")]
		public void Show(int max, int damaged)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xADD9F4", Offset = "0xADD9F4", VA = "0xADD9F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E316C", Offset = "0x8E316C")]
		private IEnumerator ShowCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xADD978", Offset = "0xADD978", VA = "0xADD978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E31D0", Offset = "0x8E31D0")]
		private IEnumerator HitCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xADDAC8", Offset = "0xADDAC8", VA = "0xADDAC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3234", Offset = "0x8E3234")]
		private IEnumerator BreakCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xADC674", Offset = "0xADC674", VA = "0xADC674")]
		public void Hide()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xADDB70", Offset = "0xADDB70", VA = "0xADDB70")]
		public BulwarkVisual()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class ConcussiveBlastAbility : ArmamentAbility
	{
		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6E00", Offset = "0x8D6E00")]
		[SerializeField]
		private XRPlatformManager xrPlatformManager;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private EntityRegistry physicsObjectRegistery;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private EnemyProjectileRegistry enemyProjectileRegistry;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private GroundAttackSpikeRegistry spikeRegistry;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool checkAgainstGroundAttackSpikes;

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[SerializeField]
		private bool checkAgainstEnemyProjectiles;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D6E9C", Offset = "0x8D6E9C")]
		[SerializeField]
		private VisualKeyData vfxKey;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x8D6EE8", Offset = "0x8D6EE8")]
		private float maxEffectRadius;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float growthDuration;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float initialRadius;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float staminaDamage;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private int healthDamage;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float killForceRating;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private bool damageHealthThroughGuard;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private float ragdollExpForce;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private List<HitProperty> hitProps;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private HitVFXData damageVisuals;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private HitData.HitQualityType hitType;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private CameraShakeRequestAsset onActivationCameraShake;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float growthRate;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float effectRadius;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<Enemy> affectedEnemies;

		[Token(Token = "0x40019F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Rigidbody> deadEnemyParts;

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xADE274", Offset = "0xADE274", VA = "0xADE274", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xADE6A8", Offset = "0xADE6A8", VA = "0xADE6A8", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xADEE34", Offset = "0xADEE34", VA = "0xADEE34")]
		private void Apply(Enemy e, Vector3 hitDir)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xADEF84", Offset = "0xADEF84", VA = "0xADEF84")]
		public ConcussiveBlastAbility()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class EmpoweredStrikesAbility : ArmamentAbility, PreprocessTrait.IDamagePreprocessor, IResourceLoadHandler<EmpoweredStrikesVisuals>, IResourceLoadHandler
	{
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB29C", Offset = "0x8AB29C")]
		private sealed class <Start>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EmpoweredStrikesAbility <>4__this;

			[Token(Token = "0x1700049F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E58")]
				[Address(RVA = "0xC72F2C", Offset = "0xC72F2C", VA = "0xC72F2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E5A")]
				[Address(RVA = "0xC72F94", Offset = "0xC72F94", VA = "0xC72F94", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xC72D8C", Offset = "0xC72D8C", VA = "0xC72D8C")]
			[DebuggerHidden]
			public <Start>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6001E56")]
			[Address(RVA = "0xC72DB8", Offset = "0xC72DB8", VA = "0xC72DB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E57")]
			[Address(RVA = "0xC72DBC", Offset = "0xC72DBC", VA = "0xC72DBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0xC72F34", Offset = "0xC72F34", VA = "0xC72F34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D6FE4", Offset = "0x8D6FE4")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x40019F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8D7030", Offset = "0x8D7030")]
		[SerializeField]
		private float healthToActivate;

		[Token(Token = "0x40019F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D707C", Offset = "0x8D707C")]
		[SerializeField]
		private int additionalHealthBaseDamage;

		[Token(Token = "0x40019F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private int additionalHealthMultiplierDamage;

		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int additionalHealthBonusDamage;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private int additionalGuardBaseDamage;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int additionalGuardMultiplierDamage;

		[Token(Token = "0x40019F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int additionalGuardBonusDamage;

		[Token(Token = "0x40019F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7118", Offset = "0x8D7118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7118", Offset = "0x8D7118")]
		[SerializeField]
		private StatMod[] _stats;

		[Token(Token = "0x40019FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7188", Offset = "0x8D7188")]
		[SerializeField]
		private HitProperty[] _props;

		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D71D4", Offset = "0x8D71D4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D71D4", Offset = "0x8D71D4")]
		[SerializeField]
		private int maxAttacks;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7244", Offset = "0x8D7244")]
		[SerializeField]
		private float minTimeBetweenAttacks;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7290", Offset = "0x8D7290")]
		[SerializeField]
		private BoolVariable canApply;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D72DC", Offset = "0x8D72DC")]
		[SerializeField]
		private HitVFXData hitEffects;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private ResourceRequestKey empoweredVisualsKey;

		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7348", Offset = "0x8D7348")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7348", Offset = "0x8D7348")]
		[SerializeField]
		private AudioKeyData superFailAudio;

		[NonSerialized]
		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int currentAttacks;

		[NonSerialized]
		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private float lastHitTime;

		[NonSerialized]
		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private PreprocessTrait empoweredTrait;

		[NonSerialized]
		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private PreprocessTrait.EmpoweredStrikeTraitRuntime empoweredTraitRuntime;

		[NonSerialized]
		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool validHitThisFrame;

		[NonSerialized]
		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private EmpoweredStrikesVisuals empoweredStrikesVisuals;

		[NonSerialized]
		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool isReady;

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xADEFB8", Offset = "0xADEFB8", VA = "0xADEFB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3298", Offset = "0x8E3298")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xADF034", Offset = "0xADF034", VA = "0xADF034", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xADF0A4", Offset = "0xADF0A4", VA = "0xADF0A4", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xADF110", Offset = "0xADF110", VA = "0xADF110", Slot = "36")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xADF2C4", Offset = "0xADF2C4", VA = "0xADF2C4", Slot = "8")]
		public override bool CanAffordAdditionalActivationCost()
		{
			return default(bool);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xADF328", Offset = "0xADF328", VA = "0xADF328", Slot = "9")]
		public override void PlayAbilityFailAudio()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xADF3C4", Offset = "0xADF3C4", VA = "0xADF3C4", Slot = "10")]
		public override void PayAdditionalActivationCost()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xADF4C4", Offset = "0xADF4C4", VA = "0xADF4C4", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xADF668", Offset = "0xADF668", VA = "0xADF668", Slot = "15")]
		public override void OnActivationEnd()
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xADF79C", Offset = "0xADF79C", VA = "0xADF79C", Slot = "16")]
		public override void DestroyAbility()
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xADF7EC", Offset = "0xADF7EC", VA = "0xADF7EC", Slot = "29")]
		public void PreProcessGuardDamageOther(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xADF7F0", Offset = "0xADF7F0", VA = "0xADF7F0", Slot = "30")]
		public void PreProcessHealthDamageOther(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xADF7F4", Offset = "0xADF7F4", VA = "0xADF7F4", Slot = "31")]
		public void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xADF834", Offset = "0xADF834", VA = "0xADF834", Slot = "32")]
		public void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xADF908", Offset = "0xADF908", VA = "0xADF908", Slot = "33")]
		public void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQuality)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xADF968", Offset = "0xADF968", VA = "0xADF968")]
		private bool CheckCanApply(ClaymoreEntity entity)
		{
			return default(bool);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xADFB60", Offset = "0xADFB60", VA = "0xADFB60", Slot = "34")]
		public void PostHit(ClaymoreEntity entity, ref HitData hitData)
		{
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xADFBE8", Offset = "0xADFBE8", VA = "0xADFBE8", Slot = "35")]
		public HitVFXData GetHitEffectsData(ClaymoreEntity entity)
		{
			return null;
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xADFBBC", Offset = "0xADFBBC", VA = "0xADFBBC")]
		private void DoSuccessfulAttack()
		{
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xADFC00", Offset = "0xADFC00", VA = "0xADFC00")]
		private void OnCollisionLayerChange(Layer newLayer)
		{
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xADFC2C", Offset = "0xADFC2C", VA = "0xADFC2C")]
		public EmpoweredStrikesAbility()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class EmpoweredStrikesVisuals : MonoBehaviour
	{
		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D73B8", Offset = "0x8D73B8")]
		[SerializeField]
		private Transform _collisionRoot;

		[Token(Token = "0x4001A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] _attackColliders;

		[Token(Token = "0x4001A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _animator;

		[Token(Token = "0x170003B5")]
		public GameObject CollisionRoot
		{
			[Token(Token = "0x60018F0")]
			[Address(RVA = "0xC72F9C", Offset = "0xC72F9C", VA = "0xC72F9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B6")]
		public Animator Animator
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0xC72FB8", Offset = "0xC72FB8", VA = "0xC72FB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0xC72FC0", Offset = "0xC72FC0", VA = "0xC72FC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xC72FF0", Offset = "0xC72FF0", VA = "0xC72FF0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xC73020", Offset = "0xC73020", VA = "0xC73020")]
		public void OnActivationSuccess()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xC73050", Offset = "0xC73050", VA = "0xC73050")]
		public void OnActivationEnd()
		{
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xC73080", Offset = "0xC73080", VA = "0xC73080")]
		public void OnCollisionLayerChange(Layer newLayer)
		{
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xC73108", Offset = "0xC73108", VA = "0xC73108")]
		public EmpoweredStrikesVisuals()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class PreprocessTrait : BaseArmamentTrait
	{
		[Token(Token = "0x200056C")]
		public interface IDamagePreprocessor
		{
			[Token(Token = "0x6001E5B")]
			void PreProcessGuardDamageOther(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps);

			[Token(Token = "0x6001E5C")]
			void PreProcessHealthDamageOther(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps);

			[Token(Token = "0x6001E5D")]
			void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps);

			[Token(Token = "0x6001E5E")]
			void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps);

			[Token(Token = "0x6001E5F")]
			void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQuality);

			[Token(Token = "0x6001E60")]
			void PostHit(ClaymoreEntity entity, ref HitData hitData);

			[Token(Token = "0x6001E61")]
			HitVFXData GetHitEffectsData(ClaymoreEntity entity);
		}

		[Token(Token = "0x200056D")]
		public class EmpoweredStrikeTraitRuntime : ArmamentTraitRuntime
		{
			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8DDD98", Offset = "0x8DDD98")]
			private IDamagePreprocessor <DamageProcessor>k__BackingField;

			[Token(Token = "0x170004A1")]
			public IDamagePreprocessor DamageProcessor
			{
				[Token(Token = "0x6001E62")]
				[Address(RVA = "0xC731E8", Offset = "0xC731E8", VA = "0xC731E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CBC", Offset = "0x8E4CBC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001E63")]
				[Address(RVA = "0xC731F0", Offset = "0xC731F0", VA = "0xC731F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E4CCC", Offset = "0x8E4CCC")]
				set
				{
				}
			}

			[Token(Token = "0x6001E64")]
			[Address(RVA = "0xC731D8", Offset = "0xC731D8", VA = "0xC731D8")]
			public EmpoweredStrikeTraitRuntime(BaseArmamentTrait sourceTrait)
			{
			}

			[Token(Token = "0x6001E65")]
			[Address(RVA = "0xC731F8", Offset = "0xC731F8", VA = "0xC731F8", Slot = "10")]
			public override void PreProcessGuardDamageOther(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E66")]
			[Address(RVA = "0xC73308", Offset = "0xC73308", VA = "0xC73308", Slot = "9")]
			public override void PreProcessHealthDamageOther(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E67")]
			[Address(RVA = "0xC7341C", Offset = "0xC7341C", VA = "0xC7341C", Slot = "7")]
			public override void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E68")]
			[Address(RVA = "0xC73530", Offset = "0xC73530", VA = "0xC73530", Slot = "8")]
			public override void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
			{
			}

			[Token(Token = "0x6001E69")]
			[Address(RVA = "0xC73644", Offset = "0xC73644", VA = "0xC73644", Slot = "11")]
			public override void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQuality)
			{
			}

			[Token(Token = "0x6001E6A")]
			[Address(RVA = "0xC73724", Offset = "0xC73724", VA = "0xC73724", Slot = "12")]
			public override void PostHit(ClaymoreEntity entity, ref HitData hitData)
			{
			}

			[Token(Token = "0x6001E6B")]
			[Address(RVA = "0xC73804", Offset = "0xC73804", VA = "0xC73804", Slot = "14")]
			public override HitVFXData GetHitEffectsData(ClaymoreEntity entity)
			{
				return null;
			}
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xC73174", Offset = "0xC73174", VA = "0xC73174", Slot = "13")]
		public override ArmamentTraitRuntime GetRuntime()
		{
			return null;
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xC731E0", Offset = "0xC731E0", VA = "0xC731E0")]
		public PreprocessTrait()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class ShardstormAbility : ArmamentAbility, IResourceLoadHandler<ShardstormProjectile>, IResourceLoadHandler
	{
		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2AC", Offset = "0x8AB2AC")]
		private sealed class <Start>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShardstormAbility <>4__this;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E6F")]
				[Address(RVA = "0xC74B04", Offset = "0xC74B04", VA = "0xC74B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E71")]
				[Address(RVA = "0xC74B6C", Offset = "0xC74B6C", VA = "0xC74B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0xC73984", Offset = "0xC73984", VA = "0xC73984")]
			[DebuggerHidden]
			public <Start>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0xC749CC", Offset = "0xC749CC", VA = "0xC749CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E6E")]
			[Address(RVA = "0xC749D0", Offset = "0xC749D0", VA = "0xC749D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E70")]
			[Address(RVA = "0xC74B0C", Offset = "0xC74B0C", VA = "0xC74B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7424", Offset = "0x8D7424")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ResourceRequestKey projectilePrefabKey;

		[Token(Token = "0x4001A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private XRPlatformManager xrPlatformManager;

		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7490", Offset = "0x8D7490")]
		[SerializeField]
		private float maxDist;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float maxLifetime;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float fullspeed;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float speedWhileDamaging;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private float sourceHeight;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float sourceForwardDist;

		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float damageInterval;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float staminaDPS;

		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private bool doDamageThroughGuard;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private int healthDPT;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D756C", Offset = "0x8D756C")]
		[SerializeField]
		private bool disableUseDuringDash;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float dashSuperCooldown;

		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int maxSwings;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private bool fireOnSwing;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float reswingDelay;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float activationDuration;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private FloatRange aimLookDotThreshold;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private HitData.HitQualityType minHitForUse;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		private HitData.HitStyleType hitUseType;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private ShardstormProjectile projectileInstance;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float activationTime;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool swingPrimed;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		private bool swingConsumed;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int currentSwing;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float nextSwingAllowedTime;

		[NonSerialized]
		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private ShardstormProjectile projectilePrefab;

		[NonSerialized]
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private bool isReady;

		[NonSerialized]
		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private readonly List<ShardstormProjectile> _activeProjectiles;

		[Token(Token = "0x170003B7")]
		public float FullSpeed
		{
			[Token(Token = "0x60018FA")]
			[Address(RVA = "0xC738C8", Offset = "0xC738C8", VA = "0xC738C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B8")]
		public float SpeedWhileDamaging
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0xC738D0", Offset = "0xC738D0", VA = "0xC738D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003B9")]
		public float MaxDist
		{
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0xC738D8", Offset = "0xC738D8", VA = "0xC738D8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BA")]
		public float StaminaDPS
		{
			[Token(Token = "0x60018FD")]
			[Address(RVA = "0xC738E0", Offset = "0xC738E0", VA = "0xC738E0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BB")]
		public int HealthDPT
		{
			[Token(Token = "0x60018FE")]
			[Address(RVA = "0xC738E8", Offset = "0xC738E8", VA = "0xC738E8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003BC")]
		public bool DoDamageThroughGuard
		{
			[Token(Token = "0x60018FF")]
			[Address(RVA = "0xC738F0", Offset = "0xC738F0", VA = "0xC738F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003BD")]
		public float DamageInterval
		{
			[Token(Token = "0x6001900")]
			[Address(RVA = "0xC738F8", Offset = "0xC738F8", VA = "0xC738F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003BE")]
		public float MaxLifetime
		{
			[Token(Token = "0x6001901")]
			[Address(RVA = "0xC73900", Offset = "0xC73900", VA = "0xC73900")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xC73908", Offset = "0xC73908", VA = "0xC73908")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E32FC", Offset = "0x8E32FC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xC739B0", Offset = "0xC739B0", VA = "0xC739B0", Slot = "29")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xC73AD4", Offset = "0xC73AD4", VA = "0xC73AD4", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xC73D98", Offset = "0xC73D98", VA = "0xC73D98", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x6001906")]
		[Address(RVA = "0xC73E3C", Offset = "0xC73E3C", VA = "0xC73E3C")]
		private bool CheckSlashTrigger()
		{
			return default(bool);
		}

		[Token(Token = "0x6001907")]
		[Address(RVA = "0xC73B20", Offset = "0xC73B20", VA = "0xC73B20")]
		private void Fire()
		{
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0xC74764", Offset = "0xC74764", VA = "0xC74764")]
		public void OnProjectileDestroyed(ShardstormProjectile shardstormProjectile)
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0xC747CC", Offset = "0xC747CC", VA = "0xC747CC", Slot = "16")]
		public override void DestroyAbility()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xC74914", Offset = "0xC74914", VA = "0xC74914")]
		public ShardstormAbility()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class ShardstormProjectile : BaseProjectile
	{
		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioKeyData dissipationSFXKey;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7648", Offset = "0x8D7648")]
		[SerializeField]
		private MeshRenderer sphereMeshRenderer;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D7694", Offset = "0x8D7694")]
		[SerializeField]
		protected MaterialPropertyReference activateParam;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MaterialPropertyAttribute", RVA = "0x8D76E0", Offset = "0x8D76E0")]
		[SerializeField]
		protected MaterialPropertyReference offsetParam;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AnimationCurve showCurve;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float showDuration;

		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D774C", Offset = "0x8D774C")]
		[SerializeField]
		private Transform activeEffectTransform;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private VisualKeyData activeVFXKey;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private VisualKeyData dissipationVFXKey;

		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D77B8", Offset = "0x8D77B8")]
		[SerializeField]
		private EnemyManager enemyManager;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private HitVFXData hitVFXData;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private HitData.HitQualityType hitType;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private SphereCollider groundAttackCollider;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SphereCollider shardstormCollider;

		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7844", Offset = "0x8D7844")]
		[SerializeField]
		private float detectionRadius;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private float coreRadius;

		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private LayerMask collisionMask;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private List<HitProperty> hitProps;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ExposedTransformPoint targetPoint;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D78D0", Offset = "0x8D78D0")]
		[SerializeField]
		private float slowDownEaseRate;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float speedUpEaseRate;

		[Token(Token = "0x4001A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ShardstormAbility source;

		[Token(Token = "0x4001A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Dictionary<Enemy, float> nextTickTime;

		[Token(Token = "0x4001A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 startPos;

		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float deathTime;

		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float targetSpeed;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float actualSpeed;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private MaterialPropertyBlock materialPropertyBlock;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private float elapsedTime;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private bool showingActivateEffect;

		[NonSerialized]
		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ParticleEffectRuntime currentActiveEffect;

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xC74B74", Offset = "0xC74B74", VA = "0xC74B74", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xC74548", Offset = "0xC74548", VA = "0xC74548")]
		public void Initialize(ShardstormAbility sourceAbility, Vector3 dir)
		{
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xC74BA0", Offset = "0xC74BA0", VA = "0xC74BA0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xC74860", Offset = "0xC74860", VA = "0xC74860")]
		public void OnDestroyArmament()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0xC74C34", Offset = "0xC74C34", VA = "0xC74C34")]
		private void OnActiveEffectPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xC74CCC", Offset = "0xC74CCC", VA = "0xC74CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xC75530", Offset = "0xC75530", VA = "0xC75530")]
		private void Dissipate()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xC757BC", Offset = "0xC757BC", VA = "0xC757BC")]
		private void DoTick(Enemy e)
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xC75AE0", Offset = "0xC75AE0", VA = "0xC75AE0")]
		public ShardstormProjectile()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class ShowOfStrengthAbility : ArmamentAbility, IResourceLoadHandler<ShowOfStrengthVisual>, IResourceLoadHandler
	{
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2BC", Offset = "0x8AB2BC")]
		private sealed class <Start>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShowOfStrengthAbility <>4__this;

			[Token(Token = "0x170004A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E75")]
				[Address(RVA = "0xC76A90", Offset = "0xC76A90", VA = "0xC76A90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E77")]
				[Address(RVA = "0xC76AF8", Offset = "0xC76AF8", VA = "0xC76AF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E72")]
			[Address(RVA = "0xC75C54", Offset = "0xC75C54", VA = "0xC75C54")]
			[DebuggerHidden]
			public <Start>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E73")]
			[Address(RVA = "0xC76958", Offset = "0xC76958", VA = "0xC76958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E74")]
			[Address(RVA = "0xC7695C", Offset = "0xC7695C", VA = "0xC7695C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E76")]
			[Address(RVA = "0xC76A98", Offset = "0xC76A98", VA = "0xC76A98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D792C", Offset = "0x8D792C")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ResourceRequestKey showOfStrengthVisualPrefabKey;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float duration;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private BoolVariable showOfStrengthActive;

		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool applyDamagePiercing;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private BoolVariable showOfStrengthDamagePiercingActive;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private StatMod[] _stats;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float endTime;

		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ShowOfStrengthVisual visInstance;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ShowOfStrengthAbility activeShowOfStrength;

		[NonSerialized]
		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private ShowOfStrengthVisual visPrefab;

		[NonSerialized]
		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool isReady;

		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D79D8", Offset = "0x8D79D8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D79D8", Offset = "0x8D79D8")]
		[SerializeField]
		private AudioKeyData superScrappingAudio;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7A48", Offset = "0x8D7A48")]
		[SerializeField]
		private AudioKeyData superScrappingEndAudio;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private AudioKeyData normalScrappingAudio;

		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private AudioKeyData normalScrappingEndAudio;

		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ArmamentCollisionVFX armCollisionVFX;

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xC75BD8", Offset = "0xC75BD8", VA = "0xC75BD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3360", Offset = "0x8E3360")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xC75C80", Offset = "0xC75C80", VA = "0xC75C80", Slot = "29")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xC75E14", Offset = "0xC75E14", VA = "0xC75E14", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xC762B0", Offset = "0xC762B0", VA = "0xC762B0", Slot = "15")]
		public override void OnActivationEnd()
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xC76630", Offset = "0xC76630", VA = "0xC76630", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xC761D8", Offset = "0xC761D8", VA = "0xC761D8")]
		private void UpdateScrape()
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xC7658C", Offset = "0xC7658C", VA = "0xC7658C")]
		private void RevertScrape()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xC768E4", Offset = "0xC768E4", VA = "0xC768E4")]
		public ShowOfStrengthAbility()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class ShowOfStrengthVisual : MonoBehaviour
	{
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2CC", Offset = "0x8AB2CC")]
		private sealed class <ShowCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShowOfStrengthVisual <>4__this;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <time>5__2;

			[Token(Token = "0x170004A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E7B")]
				[Address(RVA = "0xC76DD8", Offset = "0xC76DD8", VA = "0xC76DD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E7D")]
				[Address(RVA = "0xC76E40", Offset = "0xC76E40", VA = "0xC76E40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E78")]
			[Address(RVA = "0xC76CD4", Offset = "0xC76CD4", VA = "0xC76CD4")]
			[DebuggerHidden]
			public <ShowCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E79")]
			[Address(RVA = "0xC76D1C", Offset = "0xC76D1C", VA = "0xC76D1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0xC76D20", Offset = "0xC76D20", VA = "0xC76D20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0xC76DE0", Offset = "0xC76DE0", VA = "0xC76DE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private XRTrackedNode trackedNode;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7AA4", Offset = "0x8D7AA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7AA4", Offset = "0x8D7AA4")]
		[SerializeField]
		private GameObject activeRoot;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7B14", Offset = "0x8D7B14")]
		[SerializeField]
		private float _showDuration;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7B60", Offset = "0x8D7B60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7B60", Offset = "0x8D7B60")]
		[SerializeField]
		private AudioKeyData warningPulseAudioKey;

		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7BD0", Offset = "0x8D7BD0")]
		[SerializeField]
		private AudioRequest bodyAudioRequest;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7C1C", Offset = "0x8D7C1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C1C", Offset = "0x8D7C1C")]
		[SerializeField]
		private AnimationCurve showCurve;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7C8C", Offset = "0x8D7C8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7C8C", Offset = "0x8D7C8C")]
		[SerializeField]
		private float warningTime;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7CFC", Offset = "0x8D7CFC")]
		[SerializeField]
		private float warningGracePeriod;

		[NonSerialized]
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isInWarning;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _showCoroutine;

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xC76B00", Offset = "0xC76B00", VA = "0xC76B00")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xC76B8C", Offset = "0xC76B8C", VA = "0xC76B8C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xC76C18", Offset = "0xC76C18", VA = "0xC76C18")]
		private void OnPoseUpdate(Pose pose)
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xC76730", Offset = "0xC76730", VA = "0xC76730")]
		public void DoUpdate(float timeRemaining)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xC75FE8", Offset = "0xC75FE8", VA = "0xC75FE8")]
		public void Show()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xC76C58", Offset = "0xC76C58", VA = "0xC76C58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E33C4", Offset = "0x8E33C4")]
		private IEnumerator ShowCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xC764D8", Offset = "0xC764D8", VA = "0xC764D8")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xC76D00", Offset = "0xC76D00", VA = "0xC76D00")]
		public ShowOfStrengthVisual()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class SoulburnAbility : ArmamentAbility, IResourceLoadHandler<SoulburnProjectile>, IResourceLoadHandler
	{
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2DC", Offset = "0x8AB2DC")]
		private sealed class <Start>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoulburnAbility <>4__this;

			[Token(Token = "0x170004A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E81")]
				[Address(RVA = "0xC78120", Offset = "0xC78120", VA = "0xC78120", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E83")]
				[Address(RVA = "0xC78188", Offset = "0xC78188", VA = "0xC78188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0xC76EE4", Offset = "0xC76EE4", VA = "0xC76EE4")]
			[DebuggerHidden]
			public <Start>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0xC77F8C", Offset = "0xC77F8C", VA = "0xC77F8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E80")]
			[Address(RVA = "0xC77F90", Offset = "0xC77F90", VA = "0xC77F90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E82")]
			[Address(RVA = "0xC78128", Offset = "0xC78128", VA = "0xC78128", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7D48", Offset = "0x8D7D48")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ResourceRequestKey projectilePrefabKey;

		[Token(Token = "0x4001A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7DA4", Offset = "0x8D7DA4")]
		[SerializeField]
		private LayerMask lineOfSightMask;

		[Token(Token = "0x4001A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool settleOnFirstArcResult;

		[Token(Token = "0x4001A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Arc[] targetArcs;

		[Token(Token = "0x4001A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private XRPlatformManager xrPlatformManager;

		[Token(Token = "0x4001A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D7E20", Offset = "0x8D7E20")]
		private ExposedTransformPoint targetPoint;

		[Token(Token = "0x4001A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7E6C", Offset = "0x8D7E6C")]
		[SerializeField]
		private bool disableUseDuringDash;

		[Token(Token = "0x4001A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private float dashSuperCooldown;

		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int maxUses;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float activationDuration;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private float useCooldown;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private bool oneUsePerSwing;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private float fallbackDist;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private HitData.HitQualityType minHitForUse;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private HitData.HitStyleType hitUseType;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private float staminaDamage;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private int healthDamage;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[SerializeField]
		private bool healthDamageBreaksGuard;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private FloatRange forceRating;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private FloatRange aimLookDotThreshold;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float fumblePower;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private bool triggerOnSwing;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
		[SerializeField]
		private bool triggerOnButton;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10E")]
		[SerializeField]
		private bool triggerOnActivation;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int triggersThisActivation;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float activationTime;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float lastTriggerTime;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool swingPrimed;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 sourceStartPos;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private bool swingConsumed;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private ArcTargeter<Enemy> arcTargeter;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private SoulburnProjectile projectileInstance;

		[NonSerialized]
		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool isReady;

		[NonSerialized]
		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private SoulburnProjectile projectilePrefab;

		[Token(Token = "0x170003BF")]
		public int HealthDamage
		{
			[Token(Token = "0x6001924")]
			[Address(RVA = "0xC76E48", Offset = "0xC76E48", VA = "0xC76E48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C0")]
		public float StaminaDamage
		{
			[Token(Token = "0x6001925")]
			[Address(RVA = "0xC76E50", Offset = "0xC76E50", VA = "0xC76E50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C1")]
		public float FumblePower
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xC76E58", Offset = "0xC76E58", VA = "0xC76E58")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C2")]
		public bool HealthDamageBreaksGuard
		{
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xC76E60", Offset = "0xC76E60", VA = "0xC76E60")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001928")]
		[Address(RVA = "0xC76E68", Offset = "0xC76E68", VA = "0xC76E68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3428", Offset = "0x8E3428")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001929")]
		[Address(RVA = "0xC76F10", Offset = "0xC76F10", VA = "0xC76F10", Slot = "29")]
		public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
		{
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0xC77034", Offset = "0xC77034", VA = "0xC77034", Slot = "7")]
		public override void Initialize(Armament arm, ArmamentAbilityDefinition abilityDefinition)
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0xC770F0", Offset = "0xC770F0", VA = "0xC770F0", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xC77848", Offset = "0xC77848", VA = "0xC77848", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xC7792C", Offset = "0xC7792C", VA = "0xC7792C", Slot = "19")]
		public override void OnActivatedTriggerDown()
		{
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xC77968", Offset = "0xC77968", VA = "0xC77968")]
		public float GetForceRating()
		{
			return default(float);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0xC77198", Offset = "0xC77198", VA = "0xC77198")]
		private void TrySlashTrigger()
		{
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0xC77894", Offset = "0xC77894", VA = "0xC77894")]
		private void DoAbility()
		{
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0xC77984", Offset = "0xC77984", VA = "0xC77984")]
		private void DoAbility(Vector3 dir, Vector3 pos)
		{
		}

		[Token(Token = "0x6001932")]
		[Address(RVA = "0xC77F54", Offset = "0xC77F54", VA = "0xC77F54")]
		public SoulburnAbility()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class SoulburnProjectile : BaseProjectile
	{
		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D7FC8", Offset = "0x8D7FC8")]
		[SerializeField]
		private VisualKeyData _activateVFXKey;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private VisualKeyData _impactVFXKey;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8024", Offset = "0x8D8024")]
		[SerializeField]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private EntityRegistry entityRegistry;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float speed;

		[Token(Token = "0x4001A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FloatRange homingMagnitude;

		[Token(Token = "0x4001A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float maxDistForMinHoming;

		[Token(Token = "0x4001A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float destroyTimeout;

		[Token(Token = "0x4001A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<HitProperty> HitProperties;

		[Token(Token = "0x4001A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool isInitialized;

		[Token(Token = "0x4001A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform target;

		[Token(Token = "0x4001A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 fallbackTargetPos;

		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool collisionConsumed;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		private bool reachedDestinationWithoutTarget;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SoulburnAbility superSource;

		[Token(Token = "0x170003C3")]
		private Vector3 TargetPos
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xC78190", Offset = "0xC78190", VA = "0xC78190")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001934")]
		[Address(RVA = "0xC77D54", Offset = "0xC77D54", VA = "0xC77D54")]
		public void Initialize(SoulburnAbility superSource, Transform target, Vector3 fallbackPos)
		{
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xC78228", Offset = "0xC78228", VA = "0xC78228", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xC78254", Offset = "0xC78254", VA = "0xC78254")]
		private void Update()
		{
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xC785E8", Offset = "0xC785E8", VA = "0xC785E8", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0xC789B0", Offset = "0xC789B0", VA = "0xC789B0", Slot = "7")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001939")]
		[Address(RVA = "0xC785EC", Offset = "0xC785EC", VA = "0xC785EC")]
		private void OnProjectileHit(Collider hitCollider)
		{
		}

		[Token(Token = "0x600193A")]
		[Address(RVA = "0xC78258", Offset = "0xC78258", VA = "0xC78258")]
		private void DoLerpRotation()
		{
		}

		[Token(Token = "0x600193B")]
		[Address(RVA = "0xC789E8", Offset = "0xC789E8", VA = "0xC789E8")]
		public SoulburnProjectile()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class StasisAbility : ArmamentAbility, PreprocessTrait.IDamagePreprocessor
	{
		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D80C0", Offset = "0x8D80C0")]
		[SerializeField]
		private int maxHits;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private HitProperty[] props;

		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D811C", Offset = "0x8D811C")]
		[SerializeField]
		private float minTimeBetweenAttacks;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private HitVFXData hitEffects;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8178", Offset = "0x8D8178")]
		[SerializeField]
		private BoolVariable canApply;

		[NonSerialized]
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int currentAttacks;

		[NonSerialized]
		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float lastHitTime;

		[NonSerialized]
		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private PreprocessTrait trait;

		[NonSerialized]
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private PreprocessTrait.EmpoweredStrikeTraitRuntime traitRuntime;

		[NonSerialized]
		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool validHitThisFrame;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC78A70", Offset = "0xC78A70", VA = "0xC78A70", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC78AEC", Offset = "0xC78AEC", VA = "0xC78AEC", Slot = "6")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC78B64", Offset = "0xC78B64", VA = "0xC78B64", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x600193F")]
		[Address(RVA = "0xC78CF4", Offset = "0xC78CF4", VA = "0xC78CF4", Slot = "15")]
		public override void OnActivationEnd()
		{
		}

		[Token(Token = "0x6001940")]
		[Address(RVA = "0xC78E94", Offset = "0xC78E94", VA = "0xC78E94", Slot = "29")]
		public void PreProcessGuardDamageOther(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001941")]
		[Address(RVA = "0xC78E98", Offset = "0xC78E98", VA = "0xC78E98", Slot = "30")]
		public void PreProcessHealthDamageOther(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001942")]
		[Address(RVA = "0xC78E9C", Offset = "0xC78E9C", VA = "0xC78E9C", Slot = "31")]
		public void PreProcessHealthDamage(ClaymoreEntity entity, ref int baseDamage, ref float multiplier, ref int bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001943")]
		[Address(RVA = "0xC78EA0", Offset = "0xC78EA0", VA = "0xC78EA0", Slot = "32")]
		public void PreProcessGuardDamage(ClaymoreEntity entity, ref float baseDamage, ref float multiplier, ref float bonus, ref List<HitProperty> hitProps)
		{
		}

		[Token(Token = "0x6001944")]
		[Address(RVA = "0xC78F20", Offset = "0xC78F20", VA = "0xC78F20", Slot = "33")]
		public void PreHit(ClaymoreEntity entity, HitData.HitQualityType hitQuality)
		{
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xC78F80", Offset = "0xC78F80", VA = "0xC78F80")]
		private bool CheckCanApply(ClaymoreEntity entity)
		{
			return default(bool);
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xC79178", Offset = "0xC79178", VA = "0xC79178", Slot = "34")]
		public void PostHit(ClaymoreEntity entity, ref HitData hitData)
		{
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xC79200", Offset = "0xC79200", VA = "0xC79200", Slot = "35")]
		public HitVFXData GetHitEffectsData(ClaymoreEntity entity)
		{
			return null;
		}

		[Token(Token = "0x6001948")]
		[Address(RVA = "0xC791D4", Offset = "0xC791D4", VA = "0xC791D4")]
		private void DoSuccessfulAttack()
		{
		}

		[Token(Token = "0x6001949")]
		[Address(RVA = "0xC79218", Offset = "0xC79218", VA = "0xC79218")]
		public StasisAbility()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class StasisTrapAbility : ArmamentAbility
	{
		[Token(Token = "0x2000572")]
		private class StasisTrapLoader : IResourceLoadHandler<StasisTrapProjectile>, IResourceLoadHandler
		{
			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly StasisTrapAbility _trapAbility;

			[Token(Token = "0x6001E84")]
			[Address(RVA = "0xC7AD84", Offset = "0xC7AD84", VA = "0xC7AD84")]
			public StasisTrapLoader(StasisTrapAbility trapAbility)
			{
			}

			[Token(Token = "0x6001E85")]
			[Address(RVA = "0xC7B04C", Offset = "0xC7B04C", VA = "0xC7B04C", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x2000573")]
		private class StasisProjectileLoader : IResourceLoadHandler<ParticleSystem>, IResourceLoadHandler
		{
			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly StasisTrapAbility _trapAbility;

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0xC7ADB8", Offset = "0xC7ADB8", VA = "0xC7ADB8")]
			public StasisProjectileLoader(StasisTrapAbility trapAbility)
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0xC7AE5C", Offset = "0xC7AE5C", VA = "0xC7AE5C", Slot = "4")]
			public void OnResourceLoadComplete(bool success, UnityEngine.Object resource)
			{
			}
		}

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2EC", Offset = "0x8AB2EC")]
		private sealed class <Start>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StasisTrapAbility <>4__this;

			[Token(Token = "0x40022C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private StasisTrapLoader <stasisTrapLoader>5__2;

			[Token(Token = "0x170004AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0xC7ADEC", Offset = "0xC7ADEC", VA = "0xC7ADEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0xC7AE54", Offset = "0xC7AE54", VA = "0xC7AE54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0xC792C8", Offset = "0xC792C8", VA = "0xC792C8")]
			[DebuggerHidden]
			public <Start>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xC7AA74", Offset = "0xC7AA74", VA = "0xC7AA74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xC7AA78", Offset = "0xC7AA78", VA = "0xC7AA78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xC7ADF4", Offset = "0xC7ADF4", VA = "0xC7ADF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB2FC", Offset = "0x8AB2FC")]
		private sealed class <DelayedDeactivation>d__36 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public StasisTrapAbility <>4__this;

			[Token(Token = "0x170004AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E91")]
				[Address(RVA = "0xC7A008", Offset = "0xC7A008", VA = "0xC7A008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0xC7A070", Offset = "0xC7A070", VA = "0xC7A070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xC79BC8", Offset = "0xC79BC8", VA = "0xC79BC8")]
			[DebuggerHidden]
			public <DelayedDeactivation>d__36(int <>1__state)
			{
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xC79F3C", Offset = "0xC79F3C", VA = "0xC79F3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xC79F40", Offset = "0xC79F40", VA = "0xC79F40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0xC7A010", Offset = "0xC7A010", VA = "0xC7A010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB30C", Offset = "0x8AB30C")]
		private sealed class <PlaceTrap>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StasisTrapAbility <>4__this;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int layoutIndex;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int totalValid;

			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <sprite>5__2;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <d>5__3;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <end>5__4;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Vector3 <initSpritePos>5__5;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Quaternion <initSpriteRot>5__6;

			[Token(Token = "0x170004AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E97")]
				[Address(RVA = "0xC7AA04", Offset = "0xC7AA04", VA = "0xC7AA04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0xC7AA6C", Offset = "0xC7AA6C", VA = "0xC7AA6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0xC79BF4", Offset = "0xC79BF4", VA = "0xC79BF4")]
			[DebuggerHidden]
			public <PlaceTrap>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6001E95")]
			[Address(RVA = "0xC7A078", Offset = "0xC7A078", VA = "0xC7A078", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0xC7A07C", Offset = "0xC7A07C", VA = "0xC7A07C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xC7AA0C", Offset = "0xC7AA0C", VA = "0xC7AA0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D81C4", Offset = "0x8D81C4")]
		[SerializeField]
		private XRPlatformManager xrPlatformManager;

		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private IntVariable maxTraps;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private IntVariable currentTrapCount;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8230", Offset = "0x8D8230")]
		[SerializeField]
		private ResourceLoadingController resourceLoader;

		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ResourceRequestKey trapPrefabKey;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private ResourceRequestKey projectilePrefabKey;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D829C", Offset = "0x8D829C")]
		[SerializeField]
		private AudioKeyData onActivateSFXKey;

		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private int healthDamage;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[SerializeField]
		private float staminaDamage;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8308", Offset = "0x8D8308")]
		[SerializeField]
		private float spawnDistance;

		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float validityOffset;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private FloatRange multiSpawnDelay;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Transform trapLayoutRoot;

		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private List<HitProperty> hitProperties;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private LayerMask physicalMask;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D83A4", Offset = "0x8D83A4")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8D83A4", Offset = "0x8D83A4")]
		[SerializeField]
		private Transform[] spawnSprites;

		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private float durationOnHand;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[SerializeField]
		private float handToGroundDuration;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private AnimationCurve spawnLobCurve;

		[Token(Token = "0x4001AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private AudioKeyData spriteAppearSFXKey;

		[Token(Token = "0x4001AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private AudioKeyData spriteLaunchSFXKey;

		[Token(Token = "0x4001AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<StasisTrapProjectile> instances;

		[Token(Token = "0x4001AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Transform> trapLayout;

		[Token(Token = "0x4001AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3[] positions;

		[Token(Token = "0x4001AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Quaternion[] rotations;

		[NonSerialized]
		[Token(Token = "0x4001ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private StasisTrapProjectile trapPrefab;

		[Token(Token = "0x4001ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float totalDelay;

		[Token(Token = "0x4001ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private int spawnCount;

		[Token(Token = "0x170003C4")]
		public int HealthDamage
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xC79234", Offset = "0xC79234", VA = "0xC79234")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003C5")]
		public float StaminaDamage
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xC7923C", Offset = "0xC7923C", VA = "0xC7923C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003C6")]
		public List<HitProperty> HitProperties
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xC79244", Offset = "0xC79244", VA = "0xC79244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xC7924C", Offset = "0xC7924C", VA = "0xC7924C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E348C", Offset = "0x8E348C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xC792F4", Offset = "0xC792F4", VA = "0xC792F4", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xC79B3C", Offset = "0xC79B3C", VA = "0xC79B3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E34F0", Offset = "0x8E34F0")]
		private IEnumerator DelayedDeactivation(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xC795F4", Offset = "0xC795F4", VA = "0xC795F4")]
		private void FindTrapPositions(ref bool[] valid)
		{
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xC79AAC", Offset = "0xC79AAC", VA = "0xC79AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E3554", Offset = "0x8E3554")]
		private IEnumerator PlaceTrap(int layoutIndex, int totalValid)
		{
			return null;
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xC79C20", Offset = "0xC79C20", VA = "0xC79C20")]
		public void ConsumeTrap(StasisTrapProjectile trap)
		{
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xC79D00", Offset = "0xC79D00", VA = "0xC79D00")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xC79EAC", Offset = "0xC79EAC", VA = "0xC79EAC")]
		public StasisTrapAbility()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class StasisTrapProjectile : BaseProjectile
	{
		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB31C", Offset = "0x8AB31C")]
		private sealed class <Timeout>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public StasisTrapProjectile <>4__this;

			[Token(Token = "0x170004B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9D")]
				[Address(RVA = "0xC7BA68", Offset = "0xC7BA68", VA = "0xC7BA68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0xC7BAD0", Offset = "0xC7BAD0", VA = "0xC7BAD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0xC7B1C8", Offset = "0xC7B1C8", VA = "0xC7B1C8")]
			[DebuggerHidden]
			public <Timeout>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9B")]
			[Address(RVA = "0xC7B954", Offset = "0xC7B954", VA = "0xC7B954", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0xC7B958", Offset = "0xC7B958", VA = "0xC7B958", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0xC7BA70", Offset = "0xC7BA70", VA = "0xC7BA70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody rigidbody;

		[Token(Token = "0x4001ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8460", Offset = "0x8D8460")]
		private GameObject impactEffects;

		[Token(Token = "0x4001ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D84AC", Offset = "0x8D84AC")]
		private GameObject persistentEffects;

		[Token(Token = "0x4001AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem recycleEffects;

		[Token(Token = "0x4001AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8508", Offset = "0x8D8508")]
		[SerializeField]
		private BoolVariable canApply;

		[Token(Token = "0x4001AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float destroyTimeout;

		[Token(Token = "0x4001AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EntityRegistry entityRegistry;

		[Token(Token = "0x4001AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float fxDestroyTimeout;

		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool dealHealthDamageThroughGuard;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8594", Offset = "0x8D8594")]
		[SerializeField]
		private bool selfInitialize;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private List<HitProperty> hitProperties;

		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isInitialized;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private StasisTrapAbility source;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool collisionConsumed;

		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine destroyCoroutine;

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xC7B138", Offset = "0xC7B138", VA = "0xC7B138")]
		private void Start()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xC7A920", Offset = "0xC7A920", VA = "0xC7A920")]
		public void Initialize(StasisTrapAbility superSource)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xC7B14C", Offset = "0xC7B14C", VA = "0xC7B14C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E35B8", Offset = "0x8E35B8")]
		private IEnumerator Timeout()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xC7B1F4", Offset = "0xC7B1F4", VA = "0xC7B1F4")]
		private void OnProjectileHit(Collider hitCollider)
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xC7B7A0", Offset = "0xC7B7A0", VA = "0xC7B7A0")]
		private bool CheckCanApply(Enemy enemy)
		{
			return default(bool);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xC7B884", Offset = "0xC7B884", VA = "0xC7B884", Slot = "6")]
		protected virtual void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xC7B888", Offset = "0xC7B888", VA = "0xC7B888", Slot = "7")]
		protected virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xC7B8C0", Offset = "0xC7B8C0", VA = "0xC7B8C0")]
		public StasisTrapProjectile()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class StatsBoosterAbility : ArmamentAbility
	{
		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D85F0", Offset = "0x8D85F0")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float _startTime;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private StatMod[] _stats;

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xC7BAD8", Offset = "0xC7BAD8", VA = "0xC7BAD8", Slot = "12")]
		public override void OnActivationSuccess(Action onActivationEndCallback)
		{
		}

		[Token(Token = "0x600195E")]
		[Address(RVA = "0xC7BB68", Offset = "0xC7BB68", VA = "0xC7BB68", Slot = "23")]
		public override void DoUpdate(float dt)
		{
		}

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xC7BBC8", Offset = "0xC7BBC8", VA = "0xC7BBC8", Slot = "15")]
		public override void OnActivationEnd()
		{
		}

		[Token(Token = "0x6001960")]
		[Address(RVA = "0xC7BC44", Offset = "0xC7BC44", VA = "0xC7BC44")]
		public StatsBoosterAbility()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class VisualEffectsAbility : MonoBehaviour
	{
		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D864C", Offset = "0x8D864C")]
		[SerializeField]
		private VisualKeyData _onActivationSuccessVFXKey;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioKeyData _onActivationSuccessSFXKey;

		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator _visualAnimator;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _collision;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Rigidbody _rigidbody;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D86D8", Offset = "0x8D86D8")]
		[SerializeField]
		private MecanimParameterReference _isSummonedParam;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "MecanimParameterAttribute", RVA = "0x8D8724", Offset = "0x8D8724")]
		[SerializeField]
		private MecanimParameterReference _isVisibleParam;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool _disableArmamentModel;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8780", Offset = "0x8D8780")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8780", Offset = "0x8D8780")]
		[SerializeField]
		private XRHapticsObject _onActivationSuccessHaptics;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D87F0", Offset = "0x8D87F0")]
		[SerializeField]
		private XRHapticsObject _onActivationOnGoingHaptics;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _lastHapticsPlayTime;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D883C", Offset = "0x8D883C")]
		[SerializeField]
		private CameraShakeRequestAsset _cameraShakeEffect;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ScreenFlashRequestAsset _screenFlashRequest;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8898", Offset = "0x8D8898")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8898", Offset = "0x8D8898")]
		[SerializeField]
		private HitVFXData _weaponHitData;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D8908", Offset = "0x8D8908")]
		[SerializeField]
		private SpringConfig _springConfig;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ProceduralAudio[] _weaponActiveProceduralAudio;

		[NonSerialized]
		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Armament _currentArmament;

		[NonSerialized]
		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _isActive;

		[NonSerialized]
		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool _isSummoned;

		[NonSerialized]
		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private ParticleEffectRuntime _currentActivationVFX;

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xC7BCB8", Offset = "0xC7BCB8", VA = "0xC7BCB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0xC7BD54", Offset = "0xC7BD54", VA = "0xC7BD54", Slot = "4")]
		public virtual void Initialize(Armament armament)
		{
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0xC7BECC", Offset = "0xC7BECC", VA = "0xC7BECC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0xC7BFC8", Offset = "0xC7BFC8", VA = "0xC7BFC8")]
		private void OnActivateVFXPlayed(EffectRuntime effectRuntime)
		{
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xC7C0B0", Offset = "0xC7C0B0", VA = "0xC7C0B0", Slot = "5")]
		public virtual void OnActivationSuccess(Armament armament)
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xC7C738", Offset = "0xC7C738", VA = "0xC7C738", Slot = "6")]
		public virtual void DoUpdate(float deltaTime)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xC7C810", Offset = "0xC7C810", VA = "0xC7C810", Slot = "7")]
		public virtual void OnActivationEnd()
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xC7C984", Offset = "0xC7C984", VA = "0xC7C984", Slot = "8")]
		public virtual void OnWeaponSummoned()
		{
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xC7CAEC", Offset = "0xC7CAEC", VA = "0xC7CAEC", Slot = "9")]
		public virtual void OnWeaponUnsummoned()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xC7C46C", Offset = "0xC7C46C", VA = "0xC7C46C")]
		private void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xC7CBA8", Offset = "0xC7CBA8", VA = "0xC7CBA8")]
		public void SetVisualAnimator(Animator animator)
		{
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xC7CBB0", Offset = "0xC7CBB0", VA = "0xC7CBB0")]
		public void SetCollision(GameObject collisionObject)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xC7CBB8", Offset = "0xC7CBB8", VA = "0xC7CBB8")]
		public VisualEffectsAbility()
		{
		}
	}
}
namespace SG.Claymore.Analytics
{
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4E18", Offset = "0x8A4E18")]
	public class AnalyticsController : CustomPlayerLoop
	{
		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _suppressEditor;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D8974", Offset = "0x8D8974")]
		public string versionNumber;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ReadOnlyAttribute", RVA = "0x8D8988", Offset = "0x8D8988")]
		public string versionNumberRevision;

		[Token(Token = "0x170003C7")]
		public bool SkipRecord
		{
			[Token(Token = "0x600196E")]
			[Address(RVA = "0xAD66F8", Offset = "0xAD66F8", VA = "0xAD66F8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xAD6744", Offset = "0xAD6744", VA = "0xAD6744", Slot = "4")]
		public override PlayerLoopInsertionPoint GetInsertionPoint()
		{
			return null;
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xAD67B0", Offset = "0xAD67B0", VA = "0xAD67B0", Slot = "5")]
		public override void PlayerLoopUpdate()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xAD67B4", Offset = "0xAD67B4", VA = "0xAD67B4", Slot = "7")]
		public override void BeginAsyncInitialize()
		{
		}

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xAD67C0", Offset = "0xAD67C0", VA = "0xAD67C0")]
		public void Record(AnalyticsEvent analyticsEvent)
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xAD69AC", Offset = "0xAD69AC", VA = "0xAD69AC")]
		public AnalyticsController()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public abstract class AnalyticsEvent : ScriptableObject
	{
		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D899C", Offset = "0x8D899C")]
		[SerializeField]
		protected bool _isEnabled;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AnalyticsController _analyticsController;

		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D89F8", Offset = "0x8D89F8")]
		[SerializeField]
		protected LevelManager _levelManager;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected IntVariable _difficultyLevel;

		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8A54", Offset = "0x8D8A54")]
		[SerializeField]
		private string _versionNumber;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _revisionNumber;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _debugKey;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string _encounterSceneNameKey;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private string _difficultyLevelKey;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private string _activeCampaignNameKey;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8AF0", Offset = "0x8D8AF0")]
		[SerializeField]
		private string _eventName;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected Dictionary<string, object> _data;

		[Token(Token = "0x170003C8")]
		public bool IsEnabled
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xAD6A14", Offset = "0xAD6A14", VA = "0xAD6A14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003C9")]
		public string EventName
		{
			[Token(Token = "0x6001975")]
			[Address(RVA = "0xAD6A1C", Offset = "0xAD6A1C", VA = "0xAD6A1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		public Dictionary<string, object> Data
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0xAD6A24", Offset = "0xAD6A24", VA = "0xAD6A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xAD6A2C", Offset = "0xAD6A2C", VA = "0xAD6A2C")]
		protected void PopulateDefault()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xAD6D14", Offset = "0xAD6D14", VA = "0xAD6D14")]
		protected AnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4E78", Offset = "0x8A4E78")]
	public class ArmamentAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8B3C", Offset = "0x8D8B3C")]
		[SerializeField]
		public PlayerHandState _leftHandState;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private FloatVariable gripTimeRight;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private FloatVariable gripTimeLeft;

		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private FloatVariable gripTime2HRight;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private FloatVariable gripTime2HLeft;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8BD8", Offset = "0x8D8BD8")]
		[SerializeField]
		private string _isVictoryKeyName;

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xAD6E28", Offset = "0xAD6E28", VA = "0xAD6E28")]
		public void Record(bool isVictory)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xAD72F8", Offset = "0xAD72F8", VA = "0xAD72F8")]
		public ArmamentAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4ED8", Offset = "0x8A4ED8")]
	public class ArmamentPurchasedAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x2000578")]
		public enum HandID
		{
			[Token(Token = "0x40022DA")]
			Left,
			[Token(Token = "0x40022DB")]
			Right
		}

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8C24", Offset = "0x8D8C24")]
		[SerializeField]
		private IntVariable _currency;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8C80", Offset = "0x8D8C80")]
		[SerializeField]
		private string _armamentIDKeyName;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _handIDKeyName;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _armamentCostKeyName;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _currencyKeyName;

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xAD7354", Offset = "0xAD7354", VA = "0xAD7354")]
		public void Record(ArmamentID armamentID, HandID handId)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xAD75EC", Offset = "0xAD75EC", VA = "0xAD75EC")]
		public ArmamentPurchasedAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4F38", Offset = "0x8A4F38")]
	public class AugmentCrushedAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8CFC", Offset = "0x8D8CFC")]
		[SerializeField]
		private string _augmentID;

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xAD7690", Offset = "0xAD7690", VA = "0xAD7690")]
		public void Record(ArmamentAugment armamentAugment)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xAD7818", Offset = "0xAD7818", VA = "0xAD7818")]
		public AugmentCrushedAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4F98", Offset = "0x8A4F98")]
	public class BeginRunAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8D48", Offset = "0x8D8D48")]
		[SerializeField]
		private IntVariable _currency;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PlayerHandState _leftHandState;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8DD4", Offset = "0x8D8DD4")]
		[SerializeField]
		private string _runCountKeyName;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _currencyKeyName;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string _ownedArmamentsCountKeyName;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private string _highestLevelEquippedArmamentLevelKeyName;

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xAD7874", Offset = "0xAD7874", VA = "0xAD7874")]
		public void Record()
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xAD7CDC", Offset = "0xAD7CDC", VA = "0xAD7CDC")]
		public BeginRunAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A4FF8", Offset = "0x8A4FF8")]
	public class ChangeDifficultyAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8E50", Offset = "0x8D8E50")]
		[SerializeField]
		private string _changedKeyName;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _previousDifficultyKeyName;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xAD7D80", Offset = "0xAD7D80", VA = "0xAD7D80")]
		public void Record(int previousDifficulty)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xAD7F88", Offset = "0xAD7F88", VA = "0xAD7F88")]
		public ChangeDifficultyAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5058", Offset = "0x8A5058")]
	public class EnemyCountAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8EAC", Offset = "0x8D8EAC")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8EF8", Offset = "0x8D8EF8")]
		[SerializeField]
		private string _enemyCountKeyName;

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xAD7FFC", Offset = "0xAD7FFC", VA = "0xAD7FFC")]
		public void Record()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xAD81B0", Offset = "0xAD81B0", VA = "0xAD81B0")]
		public EnemyCountAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A50B8", Offset = "0x8A50B8")]
	public class EnemyKilledAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8F44", Offset = "0x8D8F44")]
		[SerializeField]
		private string _enemyIDKeyName;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _methodIDKeyName;

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xAD820C", Offset = "0xAD820C", VA = "0xAD820C")]
		public void Record(Enemy enemy)
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xAD852C", Offset = "0xAD852C", VA = "0xAD852C")]
		public EnemyKilledAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class GuardDepletedAnalyticsEventTracker : MonoBehaviour
	{
		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerArmamentAnalyticsEvent _dummyGuardDepletedAnalyticsEvent;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private EnemyHealth _enemyHealth;

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xAD85A0", Offset = "0xAD85A0", VA = "0xAD85A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xAD862C", Offset = "0xAD862C", VA = "0xAD862C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xAD86B8", Offset = "0xAD86B8", VA = "0xAD86B8")]
		private void OnGuardDepleted()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xAD8AA4", Offset = "0xAD8AA4", VA = "0xAD8AA4")]
		public GuardDepletedAnalyticsEventTracker()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5118", Offset = "0x8A5118")]
	public class NewMaxDepthAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D8FC0", Offset = "0x8D8FC0")]
		[SerializeField]
		private IntVariable _playerDeathCounter;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D901C", Offset = "0x8D901C")]
		[SerializeField]
		private string _maxDepthKeyName;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _runCountKeyName;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _deathCountKeyName;

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xAD8AAC", Offset = "0xAD8AAC", VA = "0xAD8AAC")]
		public void Record()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xAD8D58", Offset = "0xAD8D58", VA = "0xAD8D58")]
		public NewMaxDepthAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5178", Offset = "0x8A5178")]
	public class PlayerArmamentAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x2000579")]
		public enum HandID
		{
			[Token(Token = "0x40022DD")]
			Left,
			[Token(Token = "0x40022DE")]
			Right
		}

		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9088", Offset = "0x8D9088")]
		[SerializeField]
		private PlayerHandState _leftHandState;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D90E4", Offset = "0x8D90E4")]
		[SerializeField]
		private string _armamentIDKeyName;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _armamentLevelKeyName;

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _handIDKeyName;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _otherArmamentIDKeyName;

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xAD86F4", Offset = "0xAD86F4", VA = "0xAD86F4")]
		public void Record(HandID handId)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xAD8DE4", Offset = "0xAD8DE4", VA = "0xAD8DE4")]
		public PlayerArmamentAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A51D8", Offset = "0x8A51D8")]
	public class PlayerHealthAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9160", Offset = "0x8D9160")]
		[SerializeField]
		private FloatVariable _playerHP;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private BoolVariable _vignettingEnabled;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D91CC", Offset = "0x8D91CC")]
		[SerializeField]
		private string _playerHPKeyName;

		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _vignettingEnabledKeyName;

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xAD8E88", Offset = "0xAD8E88", VA = "0xAD8E88")]
		public void Record()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xAD919C", Offset = "0xAD919C", VA = "0xAD919C")]
		public PlayerHealthAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5238", Offset = "0x8A5238")]
	public class PlayerKilledAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9228", Offset = "0x8D9228")]
		[SerializeField]
		private EnemyManager _enemyManager;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FloatVariable _runTime;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9284", Offset = "0x8D9284")]
		[SerializeField]
		private string _enemyIDKeyName;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _enemyAnimationNameKeyName;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _enemyHPKeyName;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private string _enemyCountKeyName;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _levelIndexKeyName;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private string _runTimeKeyName;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9320", Offset = "0x8D9320")]
		[SerializeField]
		private string _armamentIDLeftKeyName;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private string _armamentIDRightKeyName;

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xAD9210", Offset = "0xAD9210", VA = "0xAD9210")]
		public void Record(Enemy playerKiller)
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xAD968C", Offset = "0xAD968C", VA = "0xAD968C")]
		private string GetAnimationName(Animator animator)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xAD9730", Offset = "0xAD9730", VA = "0xAD9730")]
		public PlayerKilledAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5298", Offset = "0x8A5298")]
	public class PlayerKilledArmamentAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x200057A")]
		public enum HandID
		{
			[Token(Token = "0x40022E0")]
			Left,
			[Token(Token = "0x40022E1")]
			Right
		}

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D937C", Offset = "0x8D937C")]
		[SerializeField]
		private PlayerHandState _leftHandState;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private PlayerHandState _rightHandState;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D93D8", Offset = "0x8D93D8")]
		[SerializeField]
		private string _armamentIDKeyName;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _armamentLevelKeyName;

		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _superChargeKeyName;

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xAD9834", Offset = "0xAD9834", VA = "0xAD9834")]
		public void Record(HandID handId)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xAD9C10", Offset = "0xAD9C10", VA = "0xAD9C10")]
		public PlayerKilledArmamentAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A52F8", Offset = "0x8A52F8")]
	public class PlayerTakeDamageAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9444", Offset = "0x8D9444")]
		[SerializeField]
		private string _enemyIDKeyName;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _enemyAnimationNameKeyName;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xAD9C9C", Offset = "0xAD9C9C", VA = "0xAD9C9C")]
		public void Record(Enemy enemy)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xAD9F74", Offset = "0xAD9F74", VA = "0xAD9F74")]
		private string GetAnimationName(Animator animator)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xADA018", Offset = "0xADA018", VA = "0xADA018")]
		public PlayerTakeDamageAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5358", Offset = "0x8A5358")]
	public class PlayerVictoryAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D94A0", Offset = "0x8D94A0")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private FloatVariable _runTime;

		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D94FC", Offset = "0x8D94FC")]
		[SerializeField]
		private string _runCountKeyName;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private string _completionCountKeyName;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private string _runTimeKeyName;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9568", Offset = "0x8D9568")]
		[SerializeField]
		private string _armamentIDLeftKeyName;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _armamentIDRightKeyName;

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xADA08C", Offset = "0xADA08C", VA = "0xADA08C")]
		public void Record()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xADA33C", Offset = "0xADA33C", VA = "0xADA33C")]
		public PlayerVictoryAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A53B8", Offset = "0x8A53B8")]
	public class PlaytimeAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D95C4", Offset = "0x8D95C4")]
		[SerializeField]
		private FloatVariable _playtime;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9610", Offset = "0x8D9610")]
		[SerializeField]
		private string _playtimeKeyName;

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xADA3F8", Offset = "0xADA3F8", VA = "0xADA3F8")]
		public void Record()
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xADA5AC", Offset = "0xADA5AC", VA = "0xADA5AC")]
		public PlaytimeAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5418", Offset = "0x8A5418")]
	public class StandardAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x600199D")]
		[Address(RVA = "0xADA608", Offset = "0xADA608", VA = "0xADA608")]
		public void Record(bool forceFlush = false)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xADA768", Offset = "0xADA768", VA = "0xADA768")]
		public StandardAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5478", Offset = "0x8A5478")]
	public class SubtitleLanguageAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D965C", Offset = "0x8D965C")]
		[SerializeField]
		private BoolVariable _subtitlesActive;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private BoolVariable _subtitlesLastActive;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D96B8", Offset = "0x8D96B8")]
		[SerializeField]
		private LanguageKeyVariable _currentLanguage;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private LanguageKeyVariable _lastLanguage;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private FloatVariable _timeValue;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9724", Offset = "0x8D9724")]
		[SerializeField]
		private string _subtitlesKeyName;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private string _languageKeyName;

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xADA76C", Offset = "0xADA76C", VA = "0xADA76C")]
		public void Record()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xADABF0", Offset = "0xADABF0", VA = "0xADABF0")]
		public SubtitleLanguageAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A54D8", Offset = "0x8A54D8")]
	public class SuperAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9780", Offset = "0x8D9780")]
		[SerializeField]
		private string _weaponKeyName;

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _superKeyName;

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xADAC64", Offset = "0xADAC64", VA = "0xADAC64")]
		public void Record(Armament armament, string superName)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xADAE50", Offset = "0xADAE50", VA = "0xADAE50")]
		public SuperAnalyticsEvent()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5538", Offset = "0x8A5538")]
	public class TraitUnlockedAnalyticsEvent : AnalyticsEvent
	{
		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D97DC", Offset = "0x8D97DC")]
		[SerializeField]
		private string _armamentIDKeyName;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private string _traitIDKeyName;

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xADAEC4", Offset = "0xADAEC4", VA = "0xADAEC4")]
		public void Record(ArmamentTraitRuntime armamentTraitRuntime)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xADB09C", Offset = "0xADB09C", VA = "0xADB09C")]
		public TraitUnlockedAnalyticsEvent()
		{
		}
	}
}
namespace SG.Claymore.AI
{
	[Token(Token = "0x20003CC")]
	public class AIAgent : BehaviorTreeAgent<ClaymoreBehaviorTree, ClaymoreBehaviorTreeRuntime>
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9838", Offset = "0x8D9838")]
		private Enemy <Entity>k__BackingField;

		[NonSerialized]
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public EnemyMover Mover;

		[NonSerialized]
		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Animator Animator;

		[NonSerialized]
		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public EnemyHitController HitController;

		[NonSerialized]
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AttackTimelinePlayer AttackPlayer;

		[NonSerialized]
		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public EnemyLeapController LeapController;

		[NonSerialized]
		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TargetFinder TargetFinder;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private ClaymoreBehaviorTreeRuntime runtimeTree;

		[Token(Token = "0x170003CB")]
		public Enemy Entity
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0x18DAC2C", Offset = "0x18DAC2C", VA = "0x18DAC2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E361C", Offset = "0x8E361C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0x18DAC34", Offset = "0x18DAC34", VA = "0x18DAC34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E362C", Offset = "0x8E362C")]
			set
			{
			}
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x18DAC3C", Offset = "0x18DAC3C", VA = "0x18DAC3C", Slot = "9")]
		public override void StartAI()
		{
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x18DAD64", Offset = "0x18DAD64", VA = "0x18DAD64", Slot = "4")]
		public override Animator GetAnimator()
		{
			return null;
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x18DAD6C", Offset = "0x18DAD6C", VA = "0x18DAD6C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x18DAD80", Offset = "0x18DAD80", VA = "0x18DAD80", Slot = "8")]
		protected override ClaymoreBehaviorTreeRuntime CreateRuntime()
		{
			return null;
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x18DB384", Offset = "0x18DB384", VA = "0x18DB384")]
		public AIAgent()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8A5598", Offset = "0x8A5598")]
	public class ClaymoreBehaviorTree : BehaviorTree
	{
		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ClaymoreBehaviorTree FlattenedTree;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEngine.Object GeneratedScript;

		[Token(Token = "0x170003CC")]
		public override Type GraphType
		{
			[Token(Token = "0x60019AC")]
			[Address(RVA = "0x18DB3D4", Offset = "0x18DB3D4", VA = "0x18DB3D4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x18DB444", Offset = "0x18DB444", VA = "0x18DB444")]
		public ClaymoreBehaviorTree()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "VignettitorAttribute", RVA = "0x8A55DC", Offset = "0x8A55DC")]
	public class ClaymoreBehaviorTreeEditor : BehaviorTreeEditor
	{
		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x18DB44C", Offset = "0x18DB44C", VA = "0x18DB44C")]
		public ClaymoreBehaviorTreeEditor(VignetteGraph head, VignettitorDataController dataController, DrawAdapter drawAdapter)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x18DB454", Offset = "0x18DB454", VA = "0x18DB454", Slot = "57")]
		public override void DrawCommands(int id)
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class ClaymoreBehaviorTreePlayer : BehaviorTreeAgent<ClaymoreBehaviorTree, BehaviorRuntimeTree>
	{
		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ClaymoreEntity _entity;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private bool useFlattenedGraphs;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private BehaviorRuntimeTree _runtimeTree;

		[Token(Token = "0x14000041")]
		private event Action _onRuntimeFinished
		{
			[Token(Token = "0x60019B0")]
			[Address(RVA = "0x18DB650", Offset = "0x18DB650", VA = "0x18DB650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E363C", Offset = "0x8E363C")]
			add
			{
			}
			[Token(Token = "0x60019B1")]
			[Address(RVA = "0x18DB6F4", Offset = "0x18DB6F4", VA = "0x18DB6F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E364C", Offset = "0x8E364C")]
			remove
			{
			}
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x18DB798", Offset = "0x18DB798", VA = "0x18DB798")]
		public void StartAI(Action onRuntimeFinished)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x18DB804", Offset = "0x18DB804", VA = "0x18DB804", Slot = "8")]
		protected override BehaviorRuntimeTree CreateRuntime()
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x18DBB5C", Offset = "0x18DBB5C", VA = "0x18DBB5C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x18DBB70", Offset = "0x18DBB70", VA = "0x18DBB70", Slot = "10")]
		protected override void OnTreeFinished(int node, object output)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x18DBBF8", Offset = "0x18DBBF8", VA = "0x18DBBF8")]
		public void StopAI()
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x18DBC3C", Offset = "0x18DBC3C", VA = "0x18DBC3C")]
		public ClaymoreBehaviorTreePlayer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	public class ClaymoreBehaviorTreeRuntime : BehaviorRuntimeTree
	{
		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9878", Offset = "0x8D9878")]
		private AIAgent <AIAgent>k__BackingField;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8D9888", Offset = "0x8D9888")]
		private Enemy <NPC>k__BackingField;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private string displayName;

		[Token(Token = "0x170003CD")]
		public AIAgent AIAgent
		{
			[Token(Token = "0x60019B8")]
			[Address(RVA = "0x18DBC94", Offset = "0x18DBC94", VA = "0x18DBC94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E365C", Offset = "0x8E365C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x18DBC9C", Offset = "0x18DBC9C", VA = "0x18DBC9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E366C", Offset = "0x8E366C")]
			private set
			{
			}
		}

		[Token(Token = "0x170003CE")]
		public Enemy NPC
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x18DBCA4", Offset = "0x18DBCA4", VA = "0x18DBCA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E367C", Offset = "0x8E367C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x18DBCAC", Offset = "0x18DBCAC", VA = "0x18DBCAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8E368C", Offset = "0x8E368C")]
			private set
			{
			}
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0x18DBCBC", Offset = "0x18DBCBC", VA = "0x18DBCBC", Slot = "17")]
		public override string GetName(int index)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0x18DBCC4", Offset = "0x18DBCC4", VA = "0x18DBCC4", Slot = "22")]
		public override BehaviorRuntimeTree CreateSubtree(BehaviorTree subtree, bool restartNode)
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x18DB19C", Offset = "0x18DB19C", VA = "0x18DB19C")]
		public ClaymoreBehaviorTreeRuntime(BehaviorTree tree, AIAgent agent, IVariableResolver resolver, bool restartStartNode = false, [Optional] BehaviorRuntimeTree parentRuntime)
		{
		}
	}
}
namespace SG.Claymore.AI.Nodes
{
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5644", Offset = "0x8A5644")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5644", Offset = "0x8A5644")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5644", Offset = "0x8A5644")]
	public class ActionDisengage : BehaviorTreeActionNode
	{
		[Token(Token = "0x200057B")]
		public class ActionDisengageRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x18DBE44", Offset = "0x18DBE44", VA = "0x18DBE44")]
			public ActionDisengageRuntime(ActionDisengage node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EA1")]
			[Address(RVA = "0x18DBEB4", Offset = "0x18DBEB4", VA = "0x18DBEB4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x18DBD94", Offset = "0x18DBD94", VA = "0x18DBD94", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x18DBEAC", Offset = "0x18DBEAC", VA = "0x18DBEAC")]
		public ActionDisengage()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5710", Offset = "0x8A5710")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5710", Offset = "0x8A5710")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5710", Offset = "0x8A5710")]
	public class ActionDodge : BehaviorTreeActionNode
	{
		[Token(Token = "0x200057C")]
		public class ActionDodgeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0x18DBFEC", Offset = "0x18DBFEC", VA = "0x18DBFEC")]
			public ActionDodgeRuntime(ActionDodge node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0x18DC05C", Offset = "0x18DC05C", VA = "0x18DC05C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x18DBF3C", Offset = "0x18DBF3C", VA = "0x18DBF3C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x18DC054", Offset = "0x18DC054", VA = "0x18DC054")]
		public ActionDodge()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A57DC", Offset = "0x8A57DC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A57DC", Offset = "0x8A57DC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A57DC", Offset = "0x8A57DC")]
	public class ActionFlipOver : BehaviorTreeActionNode
	{
		[Token(Token = "0x200057D")]
		public class ActionFlipOverRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0x18DC194", Offset = "0x18DC194", VA = "0x18DC194")]
			public ActionFlipOverRuntime(ActionFlipOver node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EA5")]
			[Address(RVA = "0x18DC204", Offset = "0x18DC204", VA = "0x18DC204", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x18DC0E4", Offset = "0x18DC0E4", VA = "0x18DC0E4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x18DC1FC", Offset = "0x18DC1FC", VA = "0x18DC1FC")]
		public ActionFlipOver()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A58A8", Offset = "0x8A58A8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A58A8", Offset = "0x8A58A8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A58A8", Offset = "0x8A58A8")]
	public class ActionJumpForward : BehaviorTreeActionNode
	{
		[Token(Token = "0x200057E")]
		public class ActionCloseInRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0x18DC38C", Offset = "0x18DC38C", VA = "0x18DC38C")]
			public ActionCloseInRuntime(ActionJumpForward node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EA7")]
			[Address(RVA = "0x18DC3FC", Offset = "0x18DC3FC", VA = "0x18DC3FC", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x170003CF")]
		public override bool UseInline
		{
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x18DC28C", Offset = "0x18DC28C", VA = "0x18DC28C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x18DC294", Offset = "0x18DC294", VA = "0x18DC294", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x18DC2DC", Offset = "0x18DC2DC", VA = "0x18DC2DC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x18DC3F4", Offset = "0x18DC3F4", VA = "0x18DC3F4")]
		public ActionJumpForward()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5974", Offset = "0x8A5974")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5974", Offset = "0x8A5974")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5974", Offset = "0x8A5974")]
	public class ActionLateralDisplace : BehaviorTreeActionNode
	{
		[Token(Token = "0x200057F")]
		public class ActionLateralDisplaceRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0x18DC534", Offset = "0x18DC534", VA = "0x18DC534")]
			public ActionLateralDisplaceRuntime(ActionLateralDisplace node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0x18DC5A4", Offset = "0x18DC5A4", VA = "0x18DC5A4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x18DC484", Offset = "0x18DC484", VA = "0x18DC484", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0x18DC59C", Offset = "0x18DC59C", VA = "0x18DC59C")]
		public ActionLateralDisplace()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5A40", Offset = "0x8A5A40")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5A40", Offset = "0x8A5A40")]
	public class ActionLeapNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000580")]
		public class ActionLeapNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ActionLeapNode _source;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool _pending;

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0x18DC6DC", Offset = "0x18DC6DC", VA = "0x18DC6DC")]
			public ActionLeapNodeRuntime(ActionLeapNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EAB")]
			[Address(RVA = "0x18DC768", Offset = "0x18DC768", VA = "0x18DC768", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0x18DC8F4", Offset = "0x18DC8F4", VA = "0x18DC8F4", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6001EAD")]
			[Address(RVA = "0x18DC968", Offset = "0x18DC968", VA = "0x18DC968")]
			private void OnLandFinished(bool success)
			{
			}
		}

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9898", Offset = "0x8D9898")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9898", Offset = "0x8D9898")]
		private AttackSequence _takeoffSequence;

		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D98F4", Offset = "0x8D98F4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D98F4", Offset = "0x8D98F4")]
		private AttackSequence _landingSequence;

		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9950", Offset = "0x8D9950")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9950", Offset = "0x8D9950")]
		private TransformVariable _landingPoint;

		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D99AC", Offset = "0x8D99AC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D99AC", Offset = "0x8D99AC")]
		private bool _enableNavMeshOnLanding;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9A08", Offset = "0x8D9A08")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9A08", Offset = "0x8D9A08")]
		private float _moveRate;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9A64", Offset = "0x8D9A64")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9A64", Offset = "0x8D9A64")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9A64", Offset = "0x8D9A64")]
		private float _landCollisionRestoreDelay;

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x18DC62C", Offset = "0x18DC62C", VA = "0x18DC62C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x18DC754", Offset = "0x18DC754", VA = "0x18DC754")]
		public ActionLeapNode()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5AE8", Offset = "0x8A5AE8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5AE8", Offset = "0x8A5AE8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5AE8", Offset = "0x8A5AE8")]
	public class AddHistoryDataNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000581")]
		public class AddHistoryDataNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private AddHistoryDataNode source;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			protected bool cached;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			protected HistoryVariable cache;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			protected FloatVariable cachedAdd;

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0x18DCB84", Offset = "0x18DCB84", VA = "0x18DCB84")]
			public AddHistoryDataNodeRuntime(AddHistoryDataNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0x18DCC70", Offset = "0x18DCC70", VA = "0x18DCC70", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9AE4", Offset = "0x8D9AE4")]
		public HistoryVariable HistoryVariable;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatCompareNode.FloatQualifiedVariable ValueToAdd;

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x18DC98C", Offset = "0x18DC98C", VA = "0x18DC98C", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x18DCAD4", Offset = "0x18DCAD4", VA = "0x18DCAD4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x18DCBFC", Offset = "0x18DCBFC", VA = "0x18DCBFC")]
		public AddHistoryDataNode()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5BB4", Offset = "0x8A5BB4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5BB4", Offset = "0x8A5BB4")]
	public class AngleCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000582")]
		public class AngleCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private AngleCompareNode source;

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xB25E54", Offset = "0xB25E54", VA = "0xB25E54")]
			public AngleCompareNodeRuntime(AngleCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EB1")]
			[Address(RVA = "0xB26120", Offset = "0xB26120", VA = "0xB26120")]
			private bool Evaluate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xB26540", Offset = "0xB26540", VA = "0xB26540", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9AF4", Offset = "0x8D9AF4")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9AF4", Offset = "0x8D9AF4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9AF4", Offset = "0x8D9AF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9AF4", Offset = "0x8D9AF4")]
		public ClaymoreEntityVariable Entity;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9B8C", Offset = "0x8D9B8C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9B8C", Offset = "0x8D9B8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9B8C", Offset = "0x8D9B8C")]
		public bool IsInstanced;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9C00", Offset = "0x8D9C00")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9C00", Offset = "0x8D9C00")]
		public TransformVariable Transform;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8D9C4C", Offset = "0x8D9C4C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9C4C", Offset = "0x8D9C4C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9C4C", Offset = "0x8D9C4C")]
		public ComparisonOperator Comparison;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9CBC", Offset = "0x8D9CBC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9CBC", Offset = "0x8D9CBC")]
		public FloatCompareNode.FloatQualifiedVariable Y;

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB25DA4", Offset = "0xB25DA4", VA = "0xB25DA4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xB25ECC", Offset = "0xB25ECC", VA = "0xB25ECC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB25F64", Offset = "0xB25F64", VA = "0xB25F64", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB260AC", Offset = "0xB260AC", VA = "0xB260AC")]
		public AngleCompareNode()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5C5C", Offset = "0x8A5C5C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5C5C", Offset = "0x8A5C5C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5C5C", Offset = "0x8A5C5C")]
	public class AnimatorBoolCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000583")]
		public class AnimatorBoolCompareNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly AnimatorBoolCompareNode source;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool cached;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private BoolVariable cache;

			[Token(Token = "0x6001EB3")]
			[Address(RVA = "0xB28248", Offset = "0xB28248", VA = "0xB28248")]
			public AnimatorBoolCompareNodeRuntime(AnimatorBoolCompareNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xB28338", Offset = "0xB28338", VA = "0xB28338", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public MecanimParameterReference Parameter;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolCompareNode.BoolQualifiedVariable CompareValue;

		[Token(Token = "0x170003D0")]
		public override bool UseInline
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0xB2810C", Offset = "0xB2810C", VA = "0xB2810C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB28114", Offset = "0xB28114", VA = "0xB28114", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xB28198", Offset = "0xB28198", VA = "0xB28198", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB282C0", Offset = "0xB282C0", VA = "0xB282C0")]
		public AnimatorBoolCompareNode()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5D28", Offset = "0x8A5D28")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5D28", Offset = "0x8A5D28")]
	public class ApplyDefaultVolumeNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000584")]
		public class ApplyDefaultVolumeNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ApplyDefaultVolumeNode _source;

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xB28518", Offset = "0xB28518", VA = "0xB28518")]
			public ApplyDefaultVolumeNodeRuntime(ApplyDefaultVolumeNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xB28598", Offset = "0xB28598", VA = "0xB28598", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xB28468", Offset = "0xB28468", VA = "0xB28468", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xB28590", Offset = "0xB28590", VA = "0xB28590")]
		public ApplyDefaultVolumeNode()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A5DD0", Offset = "0x8A5DD0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5DD0", Offset = "0x8A5DD0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5DD0", Offset = "0x8A5DD0")]
	public class CameraShakeNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000585")]
		public class CameraShakeNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CameraShakeNode source;

			[Token(Token = "0x6001EB7")]
			[Address(RVA = "0xB85DAC", Offset = "0xB85DAC", VA = "0xB85DAC")]
			public CameraShakeNodeRuntime(CameraShakeNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xB85E88", Offset = "0xB85E88", VA = "0xB85E88", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CameraShakeRequestGlobalEvent _cameraShakeGlobalEvent;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D28", Offset = "0x8D9D28")]
		[SerializeField]
		public AnimationCurve _dampingCurve;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9D74", Offset = "0x8D9D74")]
		[SerializeField]
		public float _duration;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9DC0", Offset = "0x8D9DC0")]
		[SerializeField]
		public float _magnitude;

		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8D9E0C", Offset = "0x8D9E0C")]
		[SerializeField]
		public float _iterationTime;

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xB85C08", Offset = "0xB85C08", VA = "0xB85C08")]
		private void Raise()
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB85CFC", Offset = "0xB85CFC", VA = "0xB85CFC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB85E24", Offset = "0xB85E24", VA = "0xB85E24")]
		public CameraShakeNode()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5E9C", Offset = "0x8A5E9C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5E9C", Offset = "0x8A5E9C")]
	public class CampaignDepthCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000586")]
		public class CampaignDepthCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CampaignDepthCompareNode _source;

			[Token(Token = "0x6001EB9")]
			[Address(RVA = "0xB85FA4", Offset = "0xB85FA4", VA = "0xB85FA4")]
			public CampaignDepthCompareNodeRuntime(CampaignDepthCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xB86094", Offset = "0xB86094", VA = "0xB86094", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xB86154", Offset = "0xB86154", VA = "0xB86154")]
			private bool Evaluate(int savedDepth)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9E68", Offset = "0x8D9E68")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9E68", Offset = "0x8D9E68")]
		[SerializeField]
		private Campaign _campaign;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9EB0", Offset = "0x8D9EB0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9EB0", Offset = "0x8D9EB0")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9EF8", Offset = "0x8D9EF8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9EF8", Offset = "0x8D9EF8")]
		[SerializeField]
		private int _depthIndex;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9F40", Offset = "0x8D9F40")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9F40", Offset = "0x8D9F40")]
		[SerializeField]
		private IntReference difficulty;

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB85EF4", Offset = "0xB85EF4", VA = "0xB85EF4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB8601C", Offset = "0xB8601C", VA = "0xB8601C")]
		public CampaignDepthCompareNode()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5F44", Offset = "0x8A5F44")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5F44", Offset = "0x8A5F44")]
	public class CampaignRunCounterCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000587")]
		private class CampaignRunCounterCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CampaignRunCounterCompareNode _source;

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xB862A0", Offset = "0xB862A0", VA = "0xB862A0")]
			public CampaignRunCounterCompareNodeRuntime(CampaignRunCounterCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EBD")]
			[Address(RVA = "0xB86390", Offset = "0xB86390", VA = "0xB86390", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xB86450", Offset = "0xB86450", VA = "0xB86450")]
			private bool Evaluate(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CampaignDatabase _campaignDatabase;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9F98", Offset = "0x8D9F98")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9F98", Offset = "0x8D9F98")]
		[SerializeField]
		private Campaign _campaign;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8D9FE0", Offset = "0x8D9FE0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8D9FE0", Offset = "0x8D9FE0")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA028", Offset = "0x8DA028")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA028", Offset = "0x8DA028")]
		[SerializeField]
		private int _y;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA070", Offset = "0x8DA070")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA070", Offset = "0x8DA070")]
		[SerializeField]
		private IntReference difficulty;

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xB861F0", Offset = "0xB861F0", VA = "0xB861F0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xB86318", Offset = "0xB86318", VA = "0xB86318")]
		public CampaignRunCounterCompareNode()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A5FEC", Offset = "0x8A5FEC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A5FEC", Offset = "0x8A5FEC")]
	public class CanAttackHitTargetNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000588")]
		public class CanAttackHitTargetNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CanAttackHitTargetNode source;

			[Token(Token = "0x6001EBF")]
			[Address(RVA = "0xB8659C", Offset = "0xB8659C", VA = "0xB8659C")]
			public CanAttackHitTargetNodeRuntime(CanAttackHitTargetNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0xB8661C", Offset = "0xB8661C", VA = "0xB8661C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA0B8", Offset = "0x8DA0B8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA0B8", Offset = "0x8DA0B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA0B8", Offset = "0x8DA0B8")]
		public AttackSequence Attack;

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xB864EC", Offset = "0xB864EC", VA = "0xB864EC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xB86614", Offset = "0xB86614", VA = "0xB86614")]
		public CanAttackHitTargetNode()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A6094", Offset = "0x8A6094")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6094", Offset = "0x8A6094")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6094", Offset = "0x8A6094")]
	public class CancelCritsNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000589")]
		public class CancelCritsNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0xB86C8C", Offset = "0xB86C8C", VA = "0xB86C8C")]
			public CancelCritsNodeRuntime(CancelCritsNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0xB86CFC", Offset = "0xB86CFC", VA = "0xB86CFC", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x170003D1")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x60019E3")]
			[Address(RVA = "0xB86B84", Offset = "0xB86B84", VA = "0xB86B84", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D2")]
		public override bool UseInline
		{
			[Token(Token = "0x60019E4")]
			[Address(RVA = "0xB86B8C", Offset = "0xB86B8C", VA = "0xB86B8C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xB86B94", Offset = "0xB86B94", VA = "0xB86B94", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xB86BDC", Offset = "0xB86BDC", VA = "0xB86BDC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xB86CF4", Offset = "0xB86CF4", VA = "0xB86CF4")]
		public CancelCritsNode()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6160", Offset = "0x8A6160")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6160", Offset = "0x8A6160")]
	public class CheckAchievementProgressNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058A")]
		public class CheckAchievementProgressNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckAchievementProgressNode source;

			[Token(Token = "0x6001EC3")]
			[Address(RVA = "0xB4B77C", Offset = "0xB4B77C", VA = "0xB4B77C")]
			public CheckAchievementProgressNodeRuntime(CheckAchievementProgressNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xB4B860", Offset = "0xB4B860", VA = "0xB4B860", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xB4B8D4", Offset = "0xB4B8D4", VA = "0xB4B8D4")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA12C", Offset = "0x8DA12C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA12C", Offset = "0x8DA12C")]
		[SerializeField]
		private AchievementAsset[] _achievement;

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xB4B6CC", Offset = "0xB4B6CC", VA = "0xB4B6CC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xB4B7F4", Offset = "0xB4B7F4", VA = "0xB4B7F4")]
		public CheckAchievementProgressNode()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6208", Offset = "0x8A6208")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6208", Offset = "0x8A6208")]
	public class CheckArmamentLevelNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058B")]
		public class CheckArmamentLevelNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CheckArmamentLevelNode _source;

			[Token(Token = "0x6001EC6")]
			[Address(RVA = "0xB4B9F8", Offset = "0xB4B9F8", VA = "0xB4B9F8")]
			public CheckArmamentLevelNodeRuntime(CheckArmamentLevelNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0xB4BA78", Offset = "0xB4BA78", VA = "0xB4BA78", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0xB4BAEC", Offset = "0xB4BAEC", VA = "0xB4BAEC")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int _level;

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xB4B948", Offset = "0xB4B948", VA = "0xB4B948", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xB4BA70", Offset = "0xB4BA70", VA = "0xB4BA70")]
		public CheckArmamentLevelNode()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A62B0", Offset = "0x8A62B0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A62B0", Offset = "0x8A62B0")]
	public class CheckEquippedArmamentAugmentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058C")]
		private class CheckEquippedArmamentAugmentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckEquippedArmamentAugmentNode _source;

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0xB4BEE4", Offset = "0xB4BEE4", VA = "0xB4BEE4")]
			public CheckEquippedArmamentAugmentNodeRuntime(CheckEquippedArmamentAugmentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0xB4BF64", Offset = "0xB4BF64", VA = "0xB4BF64", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001ECB")]
			[Address(RVA = "0xB4BFD8", Offset = "0xB4BFD8", VA = "0xB4BFD8")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerHandState _playerHandStateLeft;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerHandState _playerHandStateRight;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA1D4", Offset = "0x8DA1D4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA1D4", Offset = "0x8DA1D4")]
		[SerializeField]
		private ArmamentAugment _armamentAugment;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA21C", Offset = "0x8DA21C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA21C", Offset = "0x8DA21C")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA264", Offset = "0x8DA264")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA264", Offset = "0x8DA264")]
		[SerializeField]
		private int _target;

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0xB4BE34", Offset = "0xB4BE34", VA = "0xB4BE34", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xB4BF5C", Offset = "0xB4BF5C", VA = "0xB4BF5C")]
		public CheckEquippedArmamentAugmentNode()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6358", Offset = "0x8A6358")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6358", Offset = "0x8A6358")]
	public class CheckEquippedArmamentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058D")]
		private class CheckEquippedArmamentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckEquippedArmamentNode _source;

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0xB4C2C0", Offset = "0xB4C2C0", VA = "0xB4C2C0")]
			public CheckEquippedArmamentNodeRuntime(CheckEquippedArmamentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0xB4C3AC", Offset = "0xB4C3AC", VA = "0xB4C3AC", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0xB4C420", Offset = "0xB4C420", VA = "0xB4C420")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerHandState _playerHandStateLeft;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private PlayerHandState _playerHandStateRight;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA2CC", Offset = "0x8DA2CC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA2CC", Offset = "0x8DA2CC")]
		[SerializeField]
		private ArmamentID[] _armamentIDs;

		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA314", Offset = "0x8DA314")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA314", Offset = "0x8DA314")]
		[SerializeField]
		private int _mustHaveCount;

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xB4C210", Offset = "0xB4C210", VA = "0xB4C210", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xB4C338", Offset = "0xB4C338", VA = "0xB4C338")]
		public CheckEquippedArmamentNode()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6400", Offset = "0x8A6400")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6400", Offset = "0x8A6400")]
	public class CheckLastArmamentPurchaseUpgradeLevel : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058E")]
		public class CheckLastArmamentPurchaseUpgradeLevelRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CheckLastArmamentPurchaseUpgradeLevel _source;

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0xB4C92C", Offset = "0xB4C92C", VA = "0xB4C92C")]
			public CheckLastArmamentPurchaseUpgradeLevelRuntime(CheckLastArmamentPurchaseUpgradeLevel node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0xB4C9B4", Offset = "0xB4C9B4", VA = "0xB4C9B4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA35C", Offset = "0x8DA35C")]
		[SerializeField]
		private BoolVariable _lastArmamentPurchaseUpgradeTrigger;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentIDVariable _lastArmamentPurchaseUpgrade;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private IntVariable _lastArmamentPurchaseUpgradeLevel;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA3C8", Offset = "0x8DA3C8")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA3C8", Offset = "0x8DA3C8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA3C8", Offset = "0x8DA3C8")]
		[SerializeField]
		private bool _resetOnSuccess;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA44C", Offset = "0x8DA44C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA44C", Offset = "0x8DA44C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA44C", Offset = "0x8DA44C")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA4D0", Offset = "0x8DA4D0")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA4D0", Offset = "0x8DA4D0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA4D0", Offset = "0x8DA4D0")]
		[SerializeField]
		private int _level;

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xB4C87C", Offset = "0xB4C87C", VA = "0xB4C87C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xB4C9A4", Offset = "0xB4C9A4", VA = "0xB4C9A4")]
		public CheckLastArmamentPurchaseUpgradeLevel()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A64A8", Offset = "0x8A64A8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A64A8", Offset = "0x8A64A8")]
	public class CheckLastPlayerKillerNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200058F")]
		public class CheckLastPlayerKillerNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CheckLastPlayerKillerNode _source;

			[Token(Token = "0x6001ED1")]
			[Address(RVA = "0xB4CC1C", Offset = "0xB4CC1C", VA = "0xB4CC1C")]
			public CheckLastPlayerKillerNodeRuntime(CheckLastPlayerKillerNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0xB4CC9C", Offset = "0xB4CC9C", VA = "0xB4CC9C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private NPCCombatantDefinitionVariable _lastPlayerKillerEnemyDefinition;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA564", Offset = "0x8DA564")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA564", Offset = "0x8DA564")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA564", Offset = "0x8DA564")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA564", Offset = "0x8DA564")]
		private bool _resetLastPlayerKiller;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA608", Offset = "0x8DA608")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA608", Offset = "0x8DA608")]
		private NPCCombatantDefinition _enemyDefinition;

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xB4CB6C", Offset = "0xB4CB6C", VA = "0xB4CB6C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xB4CC94", Offset = "0xB4CC94", VA = "0xB4CC94")]
		public CheckLastPlayerKillerNode()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6550", Offset = "0x8A6550")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6550", Offset = "0x8A6550")]
	public class CheckMultipleArmamentsLevelNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000590")]
		private class CheckMultipleArmamentsLevelNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckMultipleArmamentsLevelNode _source;

			[Token(Token = "0x6001ED3")]
			[Address(RVA = "0xB4CE54", Offset = "0xB4CE54", VA = "0xB4CE54")]
			public CheckMultipleArmamentsLevelNodeRuntime(CheckMultipleArmamentsLevelNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xB4CF40", Offset = "0xB4CF40", VA = "0xB4CF40", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xB4CFB4", Offset = "0xB4CFB4", VA = "0xB4CFB4")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA674", Offset = "0x8DA674")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA674", Offset = "0x8DA674")]
		[SerializeField]
		private ArmamentID[] _armamentIDs;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private int _level;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA6DC", Offset = "0x8DA6DC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA6DC", Offset = "0x8DA6DC")]
		[SerializeField]
		private int _mustHaveCount;

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xB4CDA4", Offset = "0xB4CDA4", VA = "0xB4CDA4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xB4CECC", Offset = "0xB4CECC", VA = "0xB4CECC")]
		public CheckMultipleArmamentsLevelNode()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A65F8", Offset = "0x8A65F8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A65F8", Offset = "0x8A65F8")]
	public class CheckOwnedArmamentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000591")]
		public class CheckOwnedArmamentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CheckOwnedArmamentNode _source;

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xB4D170", Offset = "0xB4D170", VA = "0xB4D170")]
			public CheckOwnedArmamentNodeRuntime(CheckOwnedArmamentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ED7")]
			[Address(RVA = "0xB4D1F0", Offset = "0xB4D1F0", VA = "0xB4D1F0", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xB4D0C0", Offset = "0xB4D0C0", VA = "0xB4D0C0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xB4D1E8", Offset = "0xB4D1E8", VA = "0xB4D1E8")]
		public CheckOwnedArmamentNode()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A66A0", Offset = "0x8A66A0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A66A0", Offset = "0x8A66A0")]
	public class CheckPurchasedArmamentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000592")]
		public class CheckPurchasedArmamentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private CheckPurchasedArmamentNode _source;

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xB4D324", Offset = "0xB4D324", VA = "0xB4D324")]
			public CheckPurchasedArmamentNodeRuntime(CheckPurchasedArmamentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001ED9")]
			[Address(RVA = "0xB4D3A4", Offset = "0xB4D3A4", VA = "0xB4D3A4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xB4D274", Offset = "0xB4D274", VA = "0xB4D274", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xB4D39C", Offset = "0xB4D39C", VA = "0xB4D39C")]
		public CheckPurchasedArmamentNode()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8A6748", Offset = "0x8A6748")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6748", Offset = "0x8A6748")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6748", Offset = "0x8A6748")]
	public class CheckTicketNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x2000593")]
		public class ClaymoreEntityQualifiedVariable : QualifiedVariable<ClaymoreEntityVariable>
		{
			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0xB4D65C", Offset = "0xB4D65C", VA = "0xB4D65C")]
			public ClaymoreEntityQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x2000594")]
		public class CheckTicketRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckTicketNode source;

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0xB4D584", Offset = "0xB4D584", VA = "0xB4D584")]
			public CheckTicketRuntime(CheckTicketNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0xB4D604", Offset = "0xB4D604", VA = "0xB4D604", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA764", Offset = "0x8DA764")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA764", Offset = "0x8DA764")]
		public TicketPriority priority;

		[Token(Token = "0x170003D3")]
		public override bool UseInline
		{
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0xB4D44C", Offset = "0xB4D44C", VA = "0xB4D44C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xB4D454", Offset = "0xB4D454", VA = "0xB4D454", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xB4D4D4", Offset = "0xB4D4D4", VA = "0xB4D4D4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xB4D5FC", Offset = "0xB4D5FC", VA = "0xB4D5FC")]
		public CheckTicketNode()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A682C", Offset = "0x8A682C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A682C", Offset = "0x8A682C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A682C", Offset = "0x8A682C")]
	public class CheckValidMoveRangeNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x2000595")]
		public class RangeQualifiedVariable : QualifiedVariable<DistanceThresholdVariable, DistanceThreshold>
		{
			[Token(Token = "0x6001EDD")]
			[Address(RVA = "0xB4DA74", Offset = "0xB4DA74", VA = "0xB4DA74")]
			public RangeQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x2000596")]
		private class CheckValidMoveRangeNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly CheckValidMoveRangeNode source;

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0xB4D98C", Offset = "0xB4D98C", VA = "0xB4D98C")]
			public CheckValidMoveRangeNodeRuntime(CheckValidMoveRangeNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6001EDF")]
			[Address(RVA = "0xB4DAC4", Offset = "0xB4DAC4", VA = "0xB4DAC4")]
			private bool Evaluate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0xB4DB00", Offset = "0xB4DB00", VA = "0xB4DB00", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA7B0", Offset = "0x8DA7B0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA7B0", Offset = "0x8DA7B0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA7B0", Offset = "0x8DA7B0")]
		public RangeQualifiedVariable Range;

		[Token(Token = "0x170003D4")]
		public override bool UseInline
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0xB4D6AC", Offset = "0xB4D6AC", VA = "0xB4D6AC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xB4D6B4", Offset = "0xB4D6B4", VA = "0xB4D6B4", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xB4D77C", Offset = "0xB4D77C", VA = "0xB4D77C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xB4D814", Offset = "0xB4D814", VA = "0xB4D814", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xB4D8DC", Offset = "0xB4D8DC", VA = "0xB4D8DC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xB4DA04", Offset = "0xB4DA04", VA = "0xB4DA04")]
		public CheckValidMoveRangeNode()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A68F8", Offset = "0x8A68F8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A68F8", Offset = "0x8A68F8")]
	public class ClearAllStatusEffectNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000597")]
		private class ClearAllStatusEffectNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0xB4DBD0", Offset = "0xB4DBD0", VA = "0xB4DBD0")]
			public ClearAllStatusEffectNodeRuntime(ClearAllStatusEffectNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0xB4DC40", Offset = "0xB4DC40", VA = "0xB4DC40", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB4DB20", Offset = "0xB4DB20", VA = "0xB4DB20", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB4DC38", Offset = "0xB4DC38", VA = "0xB4DC38")]
		public ClearAllStatusEffectNode()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A69A0", Offset = "0x8A69A0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A69A0", Offset = "0x8A69A0")]
	public class ClearEnvironmentSettingsNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000598")]
		public class ClearEnvironmentSettingsNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x40022FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ClearEnvironmentSettingsNode _source;

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0xB4DD78", Offset = "0xB4DD78", VA = "0xB4DD78")]
			public ClearEnvironmentSettingsNodeRuntime(ClearEnvironmentSettingsNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0xB4DDF8", Offset = "0xB4DDF8", VA = "0xB4DDF8", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EnvironmentSettingsController _controller;

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB4DCC8", Offset = "0xB4DCC8", VA = "0xB4DCC8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xB4DDF0", Offset = "0xB4DDF0", VA = "0xB4DDF0")]
		public ClearEnvironmentSettingsNode()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A6A48", Offset = "0x8A6A48")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6A48", Offset = "0x8A6A48")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6A48", Offset = "0x8A6A48")]
	public class ClearHistoryNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x2000599")]
		public class ClearHistoryNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x40022FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ClearHistoryNode source;

			[Token(Token = "0x40022FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool cached;

			[Token(Token = "0x40022FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private HistoryVariable cachedHistory;

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0xB4E0DC", Offset = "0xB4E0DC", VA = "0xB4E0DC")]
			public ClearHistoryNodeRuntime(ClearHistoryNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EE6")]
			[Address(RVA = "0xB4E15C", Offset = "0xB4E15C", VA = "0xB4E15C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HistoryVariable HistoryVariable;

		[Token(Token = "0x170003D5")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xB4DE70", Offset = "0xB4DE70", VA = "0xB4DE70", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D6")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xB4DE78", Offset = "0xB4DE78", VA = "0xB4DE78", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xB4DE80", Offset = "0xB4DE80", VA = "0xB4DE80", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xB4DEE4", Offset = "0xB4DEE4", VA = "0xB4DEE4", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB4E02C", Offset = "0xB4E02C", VA = "0xB4E02C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB4E154", Offset = "0xB4E154", VA = "0xB4E154")]
		public ClearHistoryNode()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6B14", Offset = "0x8A6B14")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6B14", Offset = "0x8A6B14")]
	public class ClearStickyGlobalEventNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200059A")]
		private class ClearStickyGlobalEventNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly ClearStickyGlobalEventNode _source;

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0xB4E2FC", Offset = "0xB4E2FC", VA = "0xB4E2FC")]
			public ClearStickyGlobalEventNodeRuntime(ClearStickyGlobalEventNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EE8")]
			[Address(RVA = "0xB4E3E0", Offset = "0xB4E3E0", VA = "0xB4E3E0", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA834", Offset = "0x8DA834")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA834", Offset = "0x8DA834")]
		[SerializeField]
		private BaseGlobalEvent[] _globalEvents;

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB4E24C", Offset = "0xB4E24C", VA = "0xB4E24C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xB4E374", Offset = "0xB4E374", VA = "0xB4E374")]
		public ClearStickyGlobalEventNode()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6BBC", Offset = "0x8A6BBC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6BBC", Offset = "0x8A6BBC")]
	public class DismissPopupUINode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200059B")]
		public class DismissPopupUINodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private DismissPopupUINode source;

			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0xB4F978", Offset = "0xB4F978", VA = "0xB4F978")]
			public DismissPopupUINodeRuntime(DismissPopupUINode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0xB4F9F8", Offset = "0xB4F9F8", VA = "0xB4F9F8", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA87C", Offset = "0x8DA87C")]
		[SerializeField]
		private PopupUIAssetGlobalEvent _dismissPopupUIGlobalEvent;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA8C8", Offset = "0x8DA8C8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA8C8", Offset = "0x8DA8C8")]
		[SerializeField]
		private PopupUIAsset _popupUIAsset;

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xB4F8C8", Offset = "0xB4F8C8", VA = "0xB4F8C8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xB4F9F0", Offset = "0xB4F9F0", VA = "0xB4F9F0")]
		public DismissPopupUINode()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6C64", Offset = "0x8A6C64")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6C64", Offset = "0x8A6C64")]
	public class DisplayHealthMeter : BehaviorTreeActionNode
	{
		[Token(Token = "0x200059C")]
		public class DisplayHealthMeterRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private DisplayHealthMeter source;

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0xB4FBBC", Offset = "0xB4FBBC", VA = "0xB4FBBC")]
			public DisplayHealthMeterRuntime(DisplayHealthMeter node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0xB4FC4C", Offset = "0xB4FC4C", VA = "0xB4FC4C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA910", Offset = "0x8DA910")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA910", Offset = "0x8DA910")]
		[SerializeField]
		private bool showMeter;

		[Token(Token = "0x170003D7")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001A12")]
			[Address(RVA = "0xB4FA7C", Offset = "0xB4FA7C", VA = "0xB4FA7C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003D8")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A13")]
			[Address(RVA = "0xB4FA84", Offset = "0xB4FA84", VA = "0xB4FA84", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xB4FA8C", Offset = "0xB4FA8C", VA = "0xB4FA8C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xB4FB0C", Offset = "0xB4FB0C", VA = "0xB4FB0C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xB4FC44", Offset = "0xB4FC44", VA = "0xB4FC44")]
		public DisplayHealthMeter()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6D0C", Offset = "0x8A6D0C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6D0C", Offset = "0x8A6D0C")]
	public class DistanceCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200059D")]
		public class DistanceCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private DistanceCompareNode source;

			[Token(Token = "0x6001EED")]
			[Address(RVA = "0xB4FD90", Offset = "0xB4FD90", VA = "0xB4FD90")]
			public DistanceCompareNodeRuntime(DistanceCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0xB50064", Offset = "0xB50064", VA = "0xB50064")]
			private bool Evaluate()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEF")]
			[Address(RVA = "0xB50498", Offset = "0xB50498", VA = "0xB50498", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DA970", Offset = "0x8DA970")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DA970", Offset = "0x8DA970")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DA970", Offset = "0x8DA970")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DA970", Offset = "0x8DA970")]
		public ClaymoreEntityVariable Entity;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAA08", Offset = "0x8DAA08")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAA08", Offset = "0x8DAA08")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DAA08", Offset = "0x8DAA08")]
		public bool IsInstanced;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAA7C", Offset = "0x8DAA7C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAA7C", Offset = "0x8DAA7C")]
		public TransformVariable Transform;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAAC8", Offset = "0x8DAAC8")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAAC8", Offset = "0x8DAAC8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAAC8", Offset = "0x8DAAC8")]
		public ComparisonOperator Comparison;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAB38", Offset = "0x8DAB38")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAB38", Offset = "0x8DAB38")]
		public FloatCompareNode.FloatQualifiedVariable Y;

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xB4FCE0", Offset = "0xB4FCE0", VA = "0xB4FCE0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xB4FE08", Offset = "0xB4FE08", VA = "0xB4FE08")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xB4FEA0", Offset = "0xB4FEA0", VA = "0xB4FEA0", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0xB4FFE8", Offset = "0xB4FFE8", VA = "0xB4FFE8")]
		public DistanceCompareNode()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6DB4", Offset = "0x8A6DB4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6DB4", Offset = "0x8A6DB4")]
	public class EncounterResultCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x200059E")]
		public enum EncounterResult
		{
			[Token(Token = "0x4002305")]
			Victory,
			[Token(Token = "0x4002306")]
			Defeat
		}

		[Token(Token = "0x200059F")]
		public class EncounterResultCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private EncounterResultCompareNode _source;

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0xB505BC", Offset = "0xB505BC", VA = "0xB505BC")]
			public EncounterResultCompareNodeRuntime(EncounterResultCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0xB5063C", Offset = "0xB5063C", VA = "0xB5063C", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0xB506B0", Offset = "0xB506B0", VA = "0xB506B0")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EncounterDatabase _encounterDatabase;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAB94", Offset = "0x8DAB94")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAB94", Offset = "0x8DAB94")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAB94", Offset = "0x8DAB94")]
		private Encounter _encounter;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAC14", Offset = "0x8DAC14")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAC14", Offset = "0x8DAC14")]
		[SerializeField]
		private EncounterResult _encounterResult;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAC74", Offset = "0x8DAC74")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAC74", Offset = "0x8DAC74")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DACD4", Offset = "0x8DACD4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DACD4", Offset = "0x8DACD4")]
		[SerializeField]
		private int _y;

		[Token(Token = "0x6001A1B")]
		[Address(RVA = "0xB5050C", Offset = "0xB5050C", VA = "0xB5050C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0xB50634", Offset = "0xB50634", VA = "0xB50634")]
		public EncounterResultCompareNode()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6E5C", Offset = "0x8A6E5C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6E5C", Offset = "0x8A6E5C")]
	public class EncounterResultLastRunNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005A0")]
		private enum EncounterResult
		{
			[Token(Token = "0x4002309")]
			Victory,
			[Token(Token = "0x400230A")]
			Defeat
		}

		[Token(Token = "0x20005A1")]
		private class EncounterResultLastRunNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private EncounterResultLastRunNode _source;

			[Token(Token = "0x6001EF3")]
			[Address(RVA = "0xB50834", Offset = "0xB50834", VA = "0xB50834")]
			public EncounterResultLastRunNodeRuntime(EncounterResultLastRunNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0xB508B4", Offset = "0xB508B4", VA = "0xB508B4", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EF5")]
			[Address(RVA = "0xB50928", Offset = "0xB50928", VA = "0xB50928")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private RoomCompletionHistory _roomCompletionHistory;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAD44", Offset = "0x8DAD44")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAD44", Offset = "0x8DAD44")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAD44", Offset = "0x8DAD44")]
		private Encounter _encounter;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DADC4", Offset = "0x8DADC4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DADC4", Offset = "0x8DADC4")]
		[SerializeField]
		private EncounterResult _encounterResult;

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xB50784", Offset = "0xB50784", VA = "0xB50784", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xB508AC", Offset = "0xB508AC", VA = "0xB508AC")]
		public EncounterResultLastRunNode()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6F04", Offset = "0x8A6F04")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6F04", Offset = "0x8A6F04")]
	public class EnemyProgressCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005A2")]
		public enum EnemyAction
		{
			[Token(Token = "0x400230D")]
			PlayerKillCount,
			[Token(Token = "0x400230E")]
			DeathCount
		}

		[Token(Token = "0x20005A3")]
		public class EnemyProgressCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private EnemyProgressCompareNode _source;

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0xB50A54", Offset = "0xB50A54", VA = "0xB50A54")]
			public EnemyProgressCompareNodeRuntime(EnemyProgressCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0xB50AD4", Offset = "0xB50AD4", VA = "0xB50AD4", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0xB50B48", Offset = "0xB50B48", VA = "0xB50B48")]
			private bool Evaluate()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EnemyDatabase _enemyDatabase;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DAE34", Offset = "0x8DAE34")]
		[SerializeField]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAE34", Offset = "0x8DAE34")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAE34", Offset = "0x8DAE34")]
		private NPCCombatantDefinition _enemyDefinition;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAEB4", Offset = "0x8DAEB4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAEB4", Offset = "0x8DAEB4")]
		[SerializeField]
		private EnemyAction _action;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAF14", Offset = "0x8DAF14")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAF14", Offset = "0x8DAF14")]
		[SerializeField]
		private ComparisonOperator _comparison;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAF74", Offset = "0x8DAF74")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAF74", Offset = "0x8DAF74")]
		[SerializeField]
		private int _y;

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xB509A4", Offset = "0xB509A4", VA = "0xB509A4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xB50ACC", Offset = "0xB50ACC", VA = "0xB50ACC")]
		public EnemyProgressCompareNode()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A6FAC", Offset = "0x8A6FAC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A6FAC", Offset = "0x8A6FAC")]
	public class EnvironmentSettingsNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005A4")]
		public class EnvironmentSettingsNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private EnvironmentSettingsNode _source;

			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xB50CCC", Offset = "0xB50CCC", VA = "0xB50CCC")]
			public EnvironmentSettingsNodeRuntime(EnvironmentSettingsNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0xB50D4C", Offset = "0xB50D4C", VA = "0xB50D4C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EnvironmentSettingsRequestAsset _request;

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xB50C1C", Offset = "0xB50C1C", VA = "0xB50C1C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xB50D44", Offset = "0xB50D44", VA = "0xB50D44")]
		public EnvironmentSettingsNode()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8054", Offset = "0x8A8054")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8054", Offset = "0x8A8054")]
	public class ExposeHeartNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005A5")]
		public class ExposeHeartNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ExposeHeartNode source;

			[Token(Token = "0x6001EFB")]
			[Address(RVA = "0xB50E74", Offset = "0xB50E74", VA = "0xB50E74")]
			public ExposeHeartNodeRuntime(ExposeHeartNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0xB50EF4", Offset = "0xB50EF4", VA = "0xB50EF4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xB50DC4", Offset = "0xB50DC4", VA = "0xB50DC4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xB50EEC", Offset = "0xB50EEC", VA = "0xB50EEC")]
		public ExposeHeartNode()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A80FC", Offset = "0x8A80FC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A80FC", Offset = "0x8A80FC")]
	public class AetherHorrorCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005A6")]
		public class AetherHorrorCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000603")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly AetherHorrorCombatantBehavior_hybrid _source;

			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x18DD010", Offset = "0x18DD010", VA = "0x18DD010")]
			public AetherHorrorCombatantBehavior_hybridRuntime(AetherHorrorCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x18DE450", Offset = "0x18DE450", VA = "0x18DE450", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6001EFF")]
			[Address(RVA = "0x18DD070", Offset = "0x18DD070", VA = "0x18DD070")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x18DE480", Offset = "0x18DE480", VA = "0x18DE480", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F01")]
			[Address(RVA = "0x18DE4E0", Offset = "0x18DE4E0", VA = "0x18DE4E0")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x18DE558", Offset = "0x18DE558", VA = "0x18DE558")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x18DE6CC", Offset = "0x18DE6CC", VA = "0x18DE6CC")]
			private bool BranchSequenceNode1782()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x18DE93C", Offset = "0x18DE93C", VA = "0x18DE93C")]
			private bool BranchSequenceNode1519()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F05")]
			[Address(RVA = "0x18DE9D8", Offset = "0x18DE9D8", VA = "0x18DE9D8")]
			private bool BranchSequenceNode1704()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x18DEAD4", Offset = "0x18DEAD4", VA = "0x18DEAD4")]
			private bool BranchSequenceNode1739()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F07")]
			[Address(RVA = "0x18DEBD0", Offset = "0x18DEBD0", VA = "0x18DEBD0")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F08")]
			[Address(RVA = "0x18DECC4", Offset = "0x18DECC4", VA = "0x18DECC4")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x18DED78", Offset = "0x18DED78", VA = "0x18DED78")]
			private bool BranchSelectorNode2173()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x18DEE44", Offset = "0x18DEE44", VA = "0x18DEE44")]
			private bool EnvironmentSettingsNode1709()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0B")]
			[Address(RVA = "0x18DEEA4", Offset = "0x18DEEA4", VA = "0x18DEEA4")]
			private bool EnvironmentSettingsNode1812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x18DEF04", Offset = "0x18DEF04", VA = "0x18DEF04")]
			private bool BranchSelectorNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x18DEF44", Offset = "0x18DEF44", VA = "0x18DEF44")]
			private bool BranchSelectorNode1897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x18DEFCC", Offset = "0x18DEFCC", VA = "0x18DEFCC")]
			private bool BranchSelectorNode1388()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x18DF154", Offset = "0x18DF154", VA = "0x18DF154")]
			private bool BranchSequenceNode2146()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x18DF264", Offset = "0x18DF264", VA = "0x18DF264")]
			private bool BranchSelectorNode193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x18DF3A0", Offset = "0x18DF3A0", VA = "0x18DF3A0")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x18DF3E0", Offset = "0x18DF3E0", VA = "0x18DF3E0")]
			private bool BranchSelectorNode2304()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x18DF4FC", Offset = "0x18DF4FC", VA = "0x18DF4FC")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x18DF504", Offset = "0x18DF504", VA = "0x18DF504")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x18DF5A0", Offset = "0x18DF5A0", VA = "0x18DF5A0")]
			private bool BranchSelectorNode2177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F16")]
			[Address(RVA = "0x18DF658", Offset = "0x18DF658", VA = "0x18DF658")]
			private bool BranchSelectorNode2178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x18DF6F8", Offset = "0x18DF6F8", VA = "0x18DF6F8")]
			private bool BranchSelectorNode2179()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F18")]
			[Address(RVA = "0x18DF7C8", Offset = "0x18DF7C8", VA = "0x18DF7C8")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x18DF904", Offset = "0x18DF904", VA = "0x18DF904")]
			private bool BranchSequenceNode692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x18DF9BC", Offset = "0x18DF9BC", VA = "0x18DF9BC")]
			private bool BranchSequenceNode2557()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x18DFB38", Offset = "0x18DFB38", VA = "0x18DFB38")]
			private bool BranchSequenceNode1894()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1C")]
			[Address(RVA = "0x18DFB9C", Offset = "0x18DFB9C", VA = "0x18DFB9C")]
			private bool BranchSelectorNode2381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x18DFBDC", Offset = "0x18DFBDC", VA = "0x18DFBDC")]
			private bool BranchSequenceNode1831()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1E")]
			[Address(RVA = "0x18DFD14", Offset = "0x18DFD14", VA = "0x18DFD14")]
			private bool BranchSequenceNode2006()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F1F")]
			[Address(RVA = "0x18DFDA4", Offset = "0x18DFDA4", VA = "0x18DFDA4")]
			private bool BranchSelectorNode1910()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F20")]
			[Address(RVA = "0x18DFE64", Offset = "0x18DFE64", VA = "0x18DFE64")]
			private bool BranchSelectorNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0x18DFEDC", Offset = "0x18DFEDC", VA = "0x18DFEDC")]
			private bool BranchSequenceNode1823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F22")]
			[Address(RVA = "0x18DFF5C", Offset = "0x18DFF5C", VA = "0x18DFF5C")]
			private bool BranchSequenceNode2411()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F23")]
			[Address(RVA = "0x18E0018", Offset = "0x18E0018", VA = "0x18E0018")]
			private bool BranchSequenceNode2420()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F24")]
			[Address(RVA = "0x18E0164", Offset = "0x18E0164", VA = "0x18E0164")]
			private bool BranchSequenceNode1798()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F25")]
			[Address(RVA = "0x18E0204", Offset = "0x18E0204", VA = "0x18E0204")]
			private bool BranchSequenceNode194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F26")]
			[Address(RVA = "0x18E0280", Offset = "0x18E0280", VA = "0x18E0280")]
			private bool ToggleHeadLookIK199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F27")]
			[Address(RVA = "0x18E02E0", Offset = "0x18E02E0", VA = "0x18E02E0")]
			private bool BranchSequenceNode1302()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F28")]
			[Address(RVA = "0x18E041C", Offset = "0x18E041C", VA = "0x18E041C")]
			private bool BranchSelectorNode1257()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F29")]
			[Address(RVA = "0x18E04F8", Offset = "0x18E04F8", VA = "0x18E04F8")]
			private bool BranchSelectorNode2311()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0x18E0564", Offset = "0x18E0564", VA = "0x18E0564")]
			private bool BranchSelectorNode2312()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0x18E05D0", Offset = "0x18E05D0", VA = "0x18E05D0")]
			private bool BranchSelectorNode2313()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0x18E0610", Offset = "0x18E0610", VA = "0x18E0610")]
			private bool BranchSequenceNode2314()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0x18E0720", Offset = "0x18E0720", VA = "0x18E0720")]
			private bool BranchSequenceNode2315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2E")]
			[Address(RVA = "0x18E0808", Offset = "0x18E0808", VA = "0x18E0808")]
			private bool BranchSequenceNode2316()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F2F")]
			[Address(RVA = "0x18E0860", Offset = "0x18E0860", VA = "0x18E0860")]
			private bool BranchSequenceNode2549()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F30")]
			[Address(RVA = "0x18E097C", Offset = "0x18E097C", VA = "0x18E097C")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F31")]
			[Address(RVA = "0x18E0B34", Offset = "0x18E0B34", VA = "0x18E0B34")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F32")]
			[Address(RVA = "0x18E0BB8", Offset = "0x18E0BB8", VA = "0x18E0BB8")]
			private bool BranchSequenceNode2180()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F33")]
			[Address(RVA = "0x18E0C64", Offset = "0x18E0C64", VA = "0x18E0C64")]
			private bool BranchSequenceNode2181()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0x18E0D1C", Offset = "0x18E0D1C", VA = "0x18E0D1C")]
			private bool BranchSequenceNode2182()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F35")]
			[Address(RVA = "0x18E0DA4", Offset = "0x18E0DA4", VA = "0x18E0DA4")]
			private bool BranchSequenceNode2184()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F36")]
			[Address(RVA = "0x18E0E08", Offset = "0x18E0E08", VA = "0x18E0E08")]
			private bool BranchSequenceNode2185()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F37")]
			[Address(RVA = "0x18E0E88", Offset = "0x18E0E88", VA = "0x18E0E88")]
			private bool BranchSequenceNode2186()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F38")]
			[Address(RVA = "0x18E0FCC", Offset = "0x18E0FCC", VA = "0x18E0FCC")]
			private bool BranchSequenceNode2187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F39")]
			[Address(RVA = "0x18E10B0", Offset = "0x18E10B0", VA = "0x18E10B0")]
			private bool BranchSelectorNode770()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3A")]
			[Address(RVA = "0x18E1128", Offset = "0x18E1128", VA = "0x18E1128")]
			private bool BranchSequenceNode2706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3B")]
			[Address(RVA = "0x18E1144", Offset = "0x18E1144", VA = "0x18E1144")]
			private bool BranchSequenceNode2726()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3C")]
			[Address(RVA = "0x18E1160", Offset = "0x18E1160", VA = "0x18E1160")]
			private bool BranchSequenceNode1895()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3D")]
			[Address(RVA = "0x18E12BC", Offset = "0x18E12BC", VA = "0x18E12BC")]
			private bool BranchSequenceNode2382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3E")]
			[Address(RVA = "0x18E1378", Offset = "0x18E1378", VA = "0x18E1378")]
			private bool BranchSequenceNode2383()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F3F")]
			[Address(RVA = "0x18E1434", Offset = "0x18E1434", VA = "0x18E1434")]
			private bool BranchSequenceNode1834()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F40")]
			[Address(RVA = "0x18E14A4", Offset = "0x18E14A4", VA = "0x18E14A4")]
			private bool BranchSequenceNode2007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F41")]
			[Address(RVA = "0x18E1548", Offset = "0x18E1548", VA = "0x18E1548")]
			private bool BranchSequenceNode1907()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F42")]
			[Address(RVA = "0x18E15FC", Offset = "0x18E15FC", VA = "0x18E15FC")]
			private bool BranchSequenceNode2566()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F43")]
			[Address(RVA = "0x18E17F4", Offset = "0x18E17F4", VA = "0x18E17F4")]
			private bool BranchSequenceNode1396()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F44")]
			[Address(RVA = "0x18E1828", Offset = "0x18E1828", VA = "0x18E1828")]
			private bool BranchSequenceNode1397()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F45")]
			[Address(RVA = "0x18E185C", Offset = "0x18E185C", VA = "0x18E185C")]
			private bool BranchSequenceNode1400()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F46")]
			[Address(RVA = "0x18E1910", Offset = "0x18E1910", VA = "0x18E1910")]
			private bool BranchSequenceNode2415()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0x18E19E4", Offset = "0x18E19E4", VA = "0x18E19E4")]
			private bool BranchSequenceNode2427()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0x18E1A6C", Offset = "0x18E1A6C", VA = "0x18E1A6C")]
			private bool ToggleHeadLookIK1797()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0x18E1ACC", Offset = "0x18E1ACC", VA = "0x18E1ACC")]
			private bool BranchSelectorNode197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0x18E1C50", Offset = "0x18E1C50", VA = "0x18E1C50")]
			private bool ToggleHeadLookIK198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0x18E1CB0", Offset = "0x18E1CB0", VA = "0x18E1CB0")]
			private bool BranchSelectorNode1793()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0x18E1D68", Offset = "0x18E1D68", VA = "0x18E1D68")]
			private bool BranchSequenceNode2430()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0x18E1EB4", Offset = "0x18E1EB4", VA = "0x18E1EB4")]
			private bool ActionSendEventNode1821()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0x18E1F14", Offset = "0x18E1F14", VA = "0x18E1F14")]
			private bool BranchSequenceNode1258()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F4F")]
			[Address(RVA = "0x18E1FB4", Offset = "0x18E1FB4", VA = "0x18E1FB4")]
			private bool BranchSequenceNode2440()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F50")]
			[Address(RVA = "0x18E2014", Offset = "0x18E2014", VA = "0x18E2014")]
			private bool BranchSequenceNode2317()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F51")]
			[Address(RVA = "0x18E20B4", Offset = "0x18E20B4", VA = "0x18E20B4")]
			private bool BranchSequenceNode2340()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F52")]
			[Address(RVA = "0x18E2118", Offset = "0x18E2118", VA = "0x18E2118")]
			private bool BranchSequenceNode2319()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F53")]
			[Address(RVA = "0x18E21B8", Offset = "0x18E21B8", VA = "0x18E21B8")]
			private bool BranchSequenceNode2343()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F54")]
			[Address(RVA = "0x18E221C", Offset = "0x18E221C", VA = "0x18E221C")]
			private bool BranchSequenceNode2321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x18E2380", Offset = "0x18E2380", VA = "0x18E2380")]
			private bool BranchSequenceNode2322()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x18E24C8", Offset = "0x18E24C8", VA = "0x18E24C8")]
			private bool BranchSelectorNode2325()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x18E2508", Offset = "0x18E2508", VA = "0x18E2508")]
			private bool BranchSequenceNode2756()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x18E2654", Offset = "0x18E2654", VA = "0x18E2654")]
			private bool BranchSelectorNode2331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x18E26F4", Offset = "0x18E26F4", VA = "0x18E26F4")]
			private bool BranchSequenceNode2357()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x18E278C", Offset = "0x18E278C", VA = "0x18E278C")]
			private bool BranchSequenceNode2766()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5B")]
			[Address(RVA = "0x18E28D8", Offset = "0x18E28D8", VA = "0x18E28D8")]
			private bool BranchSequenceNode2358()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5C")]
			[Address(RVA = "0x18E2A50", Offset = "0x18E2A50", VA = "0x18E2A50")]
			private bool RangeCompareNode2359()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5D")]
			[Address(RVA = "0x18E2B80", Offset = "0x18E2B80", VA = "0x18E2B80")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0x18E2C60", Offset = "0x18E2C60", VA = "0x18E2C60")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F5F")]
			[Address(RVA = "0x18E2D7C", Offset = "0x18E2D7C", VA = "0x18E2D7C")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F60")]
			[Address(RVA = "0x18E2DF8", Offset = "0x18E2DF8", VA = "0x18E2DF8")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F61")]
			[Address(RVA = "0x18E2EA8", Offset = "0x18E2EA8", VA = "0x18E2EA8")]
			private bool BranchSequenceNode2188()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F62")]
			[Address(RVA = "0x18E2F50", Offset = "0x18E2F50", VA = "0x18E2F50")]
			private bool BranchSequenceNode2189()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F63")]
			[Address(RVA = "0x18E3020", Offset = "0x18E3020", VA = "0x18E3020")]
			private bool BranchSelectorNode2190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F64")]
			[Address(RVA = "0x18E30A4", Offset = "0x18E30A4", VA = "0x18E30A4")]
			private bool BranchSequenceNode2191()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F65")]
			[Address(RVA = "0x18E3148", Offset = "0x18E3148", VA = "0x18E3148")]
			private bool BranchSelectorNode2196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F66")]
			[Address(RVA = "0x18E319C", Offset = "0x18E319C", VA = "0x18E319C")]
			private bool BranchSelectorNode2198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F67")]
			[Address(RVA = "0x18E3278", Offset = "0x18E3278", VA = "0x18E3278")]
			private bool BranchSelectorNode2200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F68")]
			[Address(RVA = "0x18E3338", Offset = "0x18E3338", VA = "0x18E3338")]
			private bool BranchSelectorNode2204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F69")]
			[Address(RVA = "0x18E33BC", Offset = "0x18E33BC", VA = "0x18E33BC")]
			private bool BranchSequenceNode2234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6A")]
			[Address(RVA = "0x18E346C", Offset = "0x18E346C", VA = "0x18E346C")]
			private bool BranchSequenceNode2235()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6B")]
			[Address(RVA = "0x18E358C", Offset = "0x18E358C", VA = "0x18E358C")]
			private bool BranchSequenceNode2236()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6C")]
			[Address(RVA = "0x18E3620", Offset = "0x18E3620", VA = "0x18E3620")]
			private bool BranchSequenceNode2708()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6D")]
			[Address(RVA = "0x18E36CC", Offset = "0x18E36CC", VA = "0x18E36CC")]
			private bool BranchSequenceNode2728()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6E")]
			[Address(RVA = "0x18E3778", Offset = "0x18E3778", VA = "0x18E3778")]
			private bool BranchSequenceNode2776()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F6F")]
			[Address(RVA = "0x18E38C4", Offset = "0x18E38C4", VA = "0x18E38C4")]
			private bool BranchSequenceNode2746()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F70")]
			[Address(RVA = "0x18E3A10", Offset = "0x18E3A10", VA = "0x18E3A10")]
			private bool BranchSequenceNode2392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F71")]
			[Address(RVA = "0x18E3A9C", Offset = "0x18E3A9C", VA = "0x18E3A9C")]
			private bool BranchSequenceNode2786()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F72")]
			[Address(RVA = "0x18E3BE8", Offset = "0x18E3BE8", VA = "0x18E3BE8")]
			private bool BranchSequenceNode2127()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F73")]
			[Address(RVA = "0x18E3C9C", Offset = "0x18E3C9C", VA = "0x18E3C9C")]
			private bool BranchSequenceNode1908()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F74")]
			[Address(RVA = "0x18E3D38", Offset = "0x18E3D38", VA = "0x18E3D38")]
			private bool BranchSequenceNode2567()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F75")]
			[Address(RVA = "0x18E3D98", Offset = "0x18E3D98", VA = "0x18E3D98")]
			private bool BranchSequenceNode2575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F76")]
			[Address(RVA = "0x18E3E18", Offset = "0x18E3E18", VA = "0x18E3E18")]
			private bool BranchSequenceNode2576()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F77")]
			[Address(RVA = "0x18E3EBC", Offset = "0x18E3EBC", VA = "0x18E3EBC")]
			private bool BranchSequenceNode2570()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F78")]
			[Address(RVA = "0x18E3F0C", Offset = "0x18E3F0C", VA = "0x18E3F0C")]
			private bool BranchSequenceNode2579()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F79")]
			[Address(RVA = "0x18E3FAC", Offset = "0x18E3FAC", VA = "0x18E3FAC")]
			private bool BranchSequenceNode2572()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7A")]
			[Address(RVA = "0x18E3FE0", Offset = "0x18E3FE0", VA = "0x18E3FE0")]
			private bool BranchSequenceNode1794()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7B")]
			[Address(RVA = "0x18E4068", Offset = "0x18E4068", VA = "0x18E4068")]
			private bool BranchSequenceNode2437()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7C")]
			[Address(RVA = "0x18E40F0", Offset = "0x18E40F0", VA = "0x18E40F0")]
			private bool BranchSequenceNode1250()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7D")]
			[Address(RVA = "0x18E4150", Offset = "0x18E4150", VA = "0x18E4150")]
			private bool BranchSequenceNode2444()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x18E41B0", Offset = "0x18E41B0", VA = "0x18E41B0")]
			private bool BranchSelectorNode2445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x18E4260", Offset = "0x18E4260", VA = "0x18E4260")]
			private bool BranchSequenceNode2360()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x18E42C8", Offset = "0x18E42C8", VA = "0x18E42C8")]
			private bool RangeCompareNode2361()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x18E4400", Offset = "0x18E4400", VA = "0x18E4400")]
			private bool BranchSequenceNode2363()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x18E4468", Offset = "0x18E4468", VA = "0x18E4468")]
			private bool RangeCompareNode2364()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x18E45A0", Offset = "0x18E45A0", VA = "0x18E45A0")]
			private bool RangeCompareNode2353()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x18E46D8", Offset = "0x18E46D8", VA = "0x18E46D8")]
			private bool RangeCompareNode2354()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F85")]
			[Address(RVA = "0x18E4810", Offset = "0x18E4810", VA = "0x18E4810")]
			private bool BranchSequenceNode2763()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F86")]
			[Address(RVA = "0x18E4898", Offset = "0x18E4898", VA = "0x18E4898")]
			private bool RangeCompareNode2356()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F87")]
			[Address(RVA = "0x18E49D0", Offset = "0x18E49D0", VA = "0x18E49D0")]
			private bool BranchSequenceNode2773()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F88")]
			[Address(RVA = "0x18E4A58", Offset = "0x18E4A58", VA = "0x18E4A58")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F89")]
			[Address(RVA = "0x18E4ABC", Offset = "0x18E4ABC", VA = "0x18E4ABC")]
			private bool BranchSelectorNode1531()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0x18E4BD8", Offset = "0x18E4BD8", VA = "0x18E4BD8")]
			private bool BranchSequenceNode1547()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0x18E4CCC", Offset = "0x18E4CCC", VA = "0x18E4CCC")]
			private bool BranchSelectorNode1230()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8C")]
			[Address(RVA = "0x18E4D2C", Offset = "0x18E4D2C", VA = "0x18E4D2C")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8D")]
			[Address(RVA = "0x18E4E68", Offset = "0x18E4E68", VA = "0x18E4E68")]
			private bool BranchSequenceNode586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8E")]
			[Address(RVA = "0x18E4F44", Offset = "0x18E4F44", VA = "0x18E4F44")]
			private bool BranchSelectorNode1005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F8F")]
			[Address(RVA = "0x18E4FE4", Offset = "0x18E4FE4", VA = "0x18E4FE4")]
			private bool BranchSequenceNode1749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F90")]
			[Address(RVA = "0x18E50C0", Offset = "0x18E50C0", VA = "0x18E50C0")]
			private bool BranchSelectorNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F91")]
			[Address(RVA = "0x18E519C", Offset = "0x18E519C", VA = "0x18E519C")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F92")]
			[Address(RVA = "0x18E51EC", Offset = "0x18E51EC", VA = "0x18E51EC")]
			private bool BranchSequenceNode2237()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F93")]
			[Address(RVA = "0x18E523C", Offset = "0x18E523C", VA = "0x18E523C")]
			private bool BranchSequenceNode2216()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F94")]
			[Address(RVA = "0x18E52CC", Offset = "0x18E52CC", VA = "0x18E52CC")]
			private bool BranchSequenceNode2217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F95")]
			[Address(RVA = "0x18E535C", Offset = "0x18E535C", VA = "0x18E535C")]
			private bool BranchSequenceNode2218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x18E53EC", Offset = "0x18E53EC", VA = "0x18E53EC")]
			private bool BranchSequenceNode2219()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F97")]
			[Address(RVA = "0x18E547C", Offset = "0x18E547C", VA = "0x18E547C")]
			private bool BranchSequenceNode2224()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F98")]
			[Address(RVA = "0x18E5524", Offset = "0x18E5524", VA = "0x18E5524")]
			private bool BranchSequenceNode2225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F99")]
			[Address(RVA = "0x18E5564", Offset = "0x18E5564", VA = "0x18E5564")]
			private bool BranchSequenceNode2230()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9A")]
			[Address(RVA = "0x18E55DC", Offset = "0x18E55DC", VA = "0x18E55DC")]
			private bool BranchSequenceNode2231()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9B")]
			[Address(RVA = "0x18E5648", Offset = "0x18E5648", VA = "0x18E5648")]
			private bool BranchSequenceNode2232()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9C")]
			[Address(RVA = "0x18E5724", Offset = "0x18E5724", VA = "0x18E5724")]
			private bool BranchSequenceNode2233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9D")]
			[Address(RVA = "0x18E57A0", Offset = "0x18E57A0", VA = "0x18E57A0")]
			private bool RangeCompareNode2264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9E")]
			[Address(RVA = "0x18E58D8", Offset = "0x18E58D8", VA = "0x18E58D8")]
			private bool BranchSelectorNode2265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x18E59A4", Offset = "0x18E59A4", VA = "0x18E59A4")]
			private bool BranchSequenceNode2709()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA0")]
			[Address(RVA = "0x18E5A38", Offset = "0x18E5A38", VA = "0x18E5A38")]
			private bool BranchSequenceNode2718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x18E5AD4", Offset = "0x18E5AD4", VA = "0x18E5AD4")]
			private bool BranchSequenceNode2854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA2")]
			[Address(RVA = "0x18E5B90", Offset = "0x18E5B90", VA = "0x18E5B90")]
			private bool BranchSequenceNode2729()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA3")]
			[Address(RVA = "0x18E5C24", Offset = "0x18E5C24", VA = "0x18E5C24")]
			private bool BranchSequenceNode2738()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA4")]
			[Address(RVA = "0x18E5CC0", Offset = "0x18E5CC0", VA = "0x18E5CC0")]
			private bool BranchSequenceNode2864()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x18E5D7C", Offset = "0x18E5D7C", VA = "0x18E5D7C")]
			private bool BranchSequenceNode2783()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA6")]
			[Address(RVA = "0x18E5E04", Offset = "0x18E5E04", VA = "0x18E5E04")]
			private bool BranchSequenceNode2753()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x18E5E8C", Offset = "0x18E5E8C", VA = "0x18E5E8C")]
			private bool BranchSequenceNode2396()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA8")]
			[Address(RVA = "0x18E5F3C", Offset = "0x18E5F3C", VA = "0x18E5F3C")]
			private bool BranchSequenceNode2793()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FA9")]
			[Address(RVA = "0x18E5FC4", Offset = "0x18E5FC4", VA = "0x18E5FC4")]
			private bool BranchSequenceNode2128()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAA")]
			[Address(RVA = "0x18E604C", Offset = "0x18E604C", VA = "0x18E604C")]
			private bool ActionSendEventNode2023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAB")]
			[Address(RVA = "0x18E60AC", Offset = "0x18E60AC", VA = "0x18E60AC")]
			private bool BranchSequenceNode2796()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAC")]
			[Address(RVA = "0x18E61F8", Offset = "0x18E61F8", VA = "0x18E61F8")]
			private bool BranchSequenceNode2582()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAD")]
			[Address(RVA = "0x18E62CC", Offset = "0x18E62CC", VA = "0x18E62CC")]
			private bool BranchSequenceNode2583()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAE")]
			[Address(RVA = "0x18E632C", Offset = "0x18E632C", VA = "0x18E632C")]
			private bool BranchSequenceNode2599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x18E637C", Offset = "0x18E637C", VA = "0x18E637C")]
			private bool BranchSequenceNode2586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB0")]
			[Address(RVA = "0x18E63BC", Offset = "0x18E63BC", VA = "0x18E63BC")]
			private bool BranchSequenceNode2602()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB1")]
			[Address(RVA = "0x18E6438", Offset = "0x18E6438", VA = "0x18E6438")]
			private bool BranchSequenceNode2806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB2")]
			[Address(RVA = "0x18E651C", Offset = "0x18E651C", VA = "0x18E651C")]
			private bool BranchSequenceNode2589()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB3")]
			[Address(RVA = "0x18E6550", Offset = "0x18E6550", VA = "0x18E6550")]
			private bool BranchSequenceNode2590()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB4")]
			[Address(RVA = "0x18E65A0", Offset = "0x18E65A0", VA = "0x18E65A0")]
			private bool ActionWaitNode2607()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x18E6600", Offset = "0x18E6600", VA = "0x18E6600")]
			private bool BranchSequenceNode2836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB6")]
			[Address(RVA = "0x18E6718", Offset = "0x18E6718", VA = "0x18E6718")]
			private bool BranchSequenceNode2843()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB7")]
			[Address(RVA = "0x18E68D4", Offset = "0x18E68D4", VA = "0x18E68D4")]
			private bool BranchSequenceNode2594()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x18E69EC", Offset = "0x18E69EC", VA = "0x18E69EC")]
			private bool ActionSendEventNode1775()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x18E6A4C", Offset = "0x18E6A4C", VA = "0x18E6A4C")]
			private bool BranchSequenceNode1840()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBA")]
			[Address(RVA = "0x18E6AC8", Offset = "0x18E6AC8", VA = "0x18E6AC8")]
			private bool BranchSequenceNode1787()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x18E6B28", Offset = "0x18E6B28", VA = "0x18E6B28")]
			private bool ClearEnvironmentSettingsNode1811()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBC")]
			[Address(RVA = "0x18E6B88", Offset = "0x18E6B88", VA = "0x18E6B88")]
			private bool ActionLeapNode1255()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBD")]
			[Address(RVA = "0x18E6BE8", Offset = "0x18E6BE8", VA = "0x18E6BE8")]
			private bool ActionWaitNode1256()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x18E6C48", Offset = "0x18E6C48", VA = "0x18E6C48")]
			private bool BranchSequenceNode2446()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FBF")]
			[Address(RVA = "0x18E6D00", Offset = "0x18E6D00", VA = "0x18E6D00")]
			private bool BranchSequenceNode2447()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC0")]
			[Address(RVA = "0x18E6D88", Offset = "0x18E6D88", VA = "0x18E6D88")]
			private bool BranchSequenceNode2469()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x18E6E24", Offset = "0x18E6E24", VA = "0x18E6E24")]
			private bool EnvironmentSettingsNode2450()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x18E6E84", Offset = "0x18E6E84", VA = "0x18E6E84")]
			private bool ActionWaitNode2451()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC3")]
			[Address(RVA = "0x18E6EE4", Offset = "0x18E6EE4", VA = "0x18E6EE4")]
			private bool BranchSequenceNode2453()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x18E6F44", Offset = "0x18E6F44", VA = "0x18E6F44")]
			private bool BranchSequenceNode2474()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC5")]
			[Address(RVA = "0x18E6FBC", Offset = "0x18E6FBC", VA = "0x18E6FBC")]
			private bool BranchSequenceNode2457()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x18E701C", Offset = "0x18E701C", VA = "0x18E701C")]
			private bool BranchSequenceNode2488()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC7")]
			[Address(RVA = "0x18E70A0", Offset = "0x18E70A0", VA = "0x18E70A0")]
			private bool BranchSequenceNode2489()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC8")]
			[Address(RVA = "0x18E7198", Offset = "0x18E7198", VA = "0x18E7198")]
			private bool BranchSequenceNode2490()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FC9")]
			[Address(RVA = "0x18E7248", Offset = "0x18E7248", VA = "0x18E7248")]
			private bool BranchSequenceNode2461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCA")]
			[Address(RVA = "0x18E7328", Offset = "0x18E7328", VA = "0x18E7328")]
			private bool RangeCompareNode2377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x18E7460", Offset = "0x18E7460", VA = "0x18E7460")]
			private bool RangeCompareNode2379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCC")]
			[Address(RVA = "0x18E7598", Offset = "0x18E7598", VA = "0x18E7598")]
			private bool BranchSequenceNode3273()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x18E76E4", Offset = "0x18E76E4", VA = "0x18E76E4")]
			private bool BranchSequenceNode1697()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x18E7784", Offset = "0x18E7784", VA = "0x18E7784")]
			private bool BranchSequenceNode1533()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FCF")]
			[Address(RVA = "0x18E7824", Offset = "0x18E7824", VA = "0x18E7824")]
			private bool ActionSendEventNode1665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD0")]
			[Address(RVA = "0x18E7884", Offset = "0x18E7884", VA = "0x18E7884")]
			private bool BranchSequenceNode1540()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD1")]
			[Address(RVA = "0x18E78E4", Offset = "0x18E78E4", VA = "0x18E78E4")]
			private bool BranchSequenceNode1109()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD2")]
			[Address(RVA = "0x18E7944", Offset = "0x18E7944", VA = "0x18E7944")]
			private bool BranchSequenceNode1233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x18E7A08", Offset = "0x18E7A08", VA = "0x18E7A08")]
			private bool BranchSequenceNode1656()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD4")]
			[Address(RVA = "0x18E7A80", Offset = "0x18E7A80", VA = "0x18E7A80")]
			private bool BranchSequenceNode1766()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x18E7B3C", Offset = "0x18E7B3C", VA = "0x18E7B3C")]
			private bool BranchSequenceNode587()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD6")]
			[Address(RVA = "0x18E7C30", Offset = "0x18E7C30", VA = "0x18E7C30")]
			private bool StartAttackNode599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD7")]
			[Address(RVA = "0x18E7C90", Offset = "0x18E7C90", VA = "0x18E7C90")]
			private bool BranchSelectorNode2893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x18E7CE0", Offset = "0x18E7CE0", VA = "0x18E7CE0")]
			private bool BranchSequenceNode1457()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FD9")]
			[Address(RVA = "0x18E7D40", Offset = "0x18E7D40", VA = "0x18E7D40")]
			private bool BranchSequenceNode994()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDA")]
			[Address(RVA = "0x18E7D48", Offset = "0x18E7D48", VA = "0x18E7D48")]
			private bool BranchSequenceNode965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDB")]
			[Address(RVA = "0x18E7EC4", Offset = "0x18E7EC4", VA = "0x18E7EC4")]
			private bool BranchSequenceNode928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x18E7ECC", Offset = "0x18E7ECC", VA = "0x18E7ECC")]
			private bool BranchSequenceNode1025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDD")]
			[Address(RVA = "0x18E7F30", Offset = "0x18E7F30", VA = "0x18E7F30")]
			private bool BranchSequenceNode1053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDE")]
			[Address(RVA = "0x18E80C8", Offset = "0x18E80C8", VA = "0x18E80C8")]
			private bool BranchSequenceNode1853()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FDF")]
			[Address(RVA = "0x18E8158", Offset = "0x18E8158", VA = "0x18E8158")]
			private bool BranchSequenceNode1949()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x18E81E8", Offset = "0x18E81E8", VA = "0x18E81E8")]
			private bool RangeCompareNode1750()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE1")]
			[Address(RVA = "0x18E8320", Offset = "0x18E8320", VA = "0x18E8320")]
			private bool BranchSelectorNode1803()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE2")]
			[Address(RVA = "0x18E83A4", Offset = "0x18E83A4", VA = "0x18E83A4")]
			private bool BranchSequenceNode3219()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE3")]
			[Address(RVA = "0x18E8404", Offset = "0x18E8404", VA = "0x18E8404")]
			private bool BranchSequenceNode1063()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE4")]
			[Address(RVA = "0x18E8480", Offset = "0x18E8480", VA = "0x18E8480")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE5")]
			[Address(RVA = "0x18E84FC", Offset = "0x18E84FC", VA = "0x18E84FC")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE6")]
			[Address(RVA = "0x18E85B0", Offset = "0x18E85B0", VA = "0x18E85B0")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE7")]
			[Address(RVA = "0x18E8708", Offset = "0x18E8708", VA = "0x18E8708")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE8")]
			[Address(RVA = "0x18E8838", Offset = "0x18E8838", VA = "0x18E8838")]
			private bool BranchSequenceNode2250()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FE9")]
			[Address(RVA = "0x18E8918", Offset = "0x18E8918", VA = "0x18E8918")]
			private bool BranchSelectorNode2251()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FEA")]
			[Address(RVA = "0x18E8A90", Offset = "0x18E8A90", VA = "0x18E8A90")]
			private bool RangeCompareNode2257()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FEB")]
			[Address(RVA = "0x18E8BC8", Offset = "0x18E8BC8", VA = "0x18E8BC8")]
			private bool BranchSelectorNode2261()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x18E8C08", Offset = "0x18E8C08", VA = "0x18E8C08")]
			private bool BranchSequenceNode2286()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FED")]
			[Address(RVA = "0x18E8C80", Offset = "0x18E8C80", VA = "0x18E8C80")]
			private bool BranchSequenceNode2287()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FEE")]
			[Address(RVA = "0x18E8CF8", Offset = "0x18E8CF8", VA = "0x18E8CF8")]
			private bool BranchSelectorNode2719()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FEF")]
			[Address(RVA = "0x18E8DA4", Offset = "0x18E8DA4", VA = "0x18E8DA4")]
			private bool BranchSequenceNode3296()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0x18E8EF0", Offset = "0x18E8EF0", VA = "0x18E8EF0")]
			private bool BranchSequenceNode2858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0x18E8FC4", Offset = "0x18E8FC4", VA = "0x18E8FC4")]
			private bool BranchSelectorNode2739()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x18E9070", Offset = "0x18E9070", VA = "0x18E9070")]
			private bool BranchSequenceNode3306()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF3")]
			[Address(RVA = "0x18E91BC", Offset = "0x18E91BC", VA = "0x18E91BC")]
			private bool BranchSequenceNode2868()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x18E9290", Offset = "0x18E9290", VA = "0x18E9290")]
			private bool BranchSequenceNode2402()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF5")]
			[Address(RVA = "0x18E932C", Offset = "0x18E932C", VA = "0x18E932C")]
			private bool BranchSequenceNode3264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x18E93E8", Offset = "0x18E93E8", VA = "0x18E93E8")]
			private bool BranchSequenceNode2803()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF7")]
			[Address(RVA = "0x18E9470", Offset = "0x18E9470", VA = "0x18E9470")]
			private bool BranchSequenceNode2873()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0x18E948C", Offset = "0x18E948C", VA = "0x18E948C")]
			private bool BranchSequenceNode2614()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FF9")]
			[Address(RVA = "0x18E94CC", Offset = "0x18E94CC", VA = "0x18E94CC")]
			private bool BranchSelectorNode2630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFA")]
			[Address(RVA = "0x18E95B8", Offset = "0x18E95B8", VA = "0x18E95B8")]
			private bool BranchSequenceNode2600()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFB")]
			[Address(RVA = "0x18E966C", Offset = "0x18E966C", VA = "0x18E966C")]
			private bool BranchSequenceNode2619()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0x18E978C", Offset = "0x18E978C", VA = "0x18E978C")]
			private bool BranchSequenceNode2620()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFD")]
			[Address(RVA = "0x18E9878", Offset = "0x18E9878", VA = "0x18E9878")]
			private bool ActionWaitChoiceNode2621()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0x18E98D8", Offset = "0x18E98D8", VA = "0x18E98D8")]
			private bool BranchSequenceNode2622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6001FFF")]
			[Address(RVA = "0x18E9978", Offset = "0x18E9978", VA = "0x18E9978")]
			private bool BranchSequenceNode2810()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002000")]
			[Address(RVA = "0x18E99F8", Offset = "0x18E99F8", VA = "0x18E99F8")]
			private bool BranchSelectorNode2809()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002001")]
			[Address(RVA = "0x18E9A50", Offset = "0x18E9A50", VA = "0x18E9A50")]
			private bool BranchSelectorNode2605()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002002")]
			[Address(RVA = "0x18E9A90", Offset = "0x18E9A90", VA = "0x18E9A90")]
			private bool BranchSequenceNode2606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002003")]
			[Address(RVA = "0x18E9B28", Offset = "0x18E9B28", VA = "0x18E9B28")]
			private bool BranchSequenceNode2849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002004")]
			[Address(RVA = "0x18E9BA4", Offset = "0x18E9BA4", VA = "0x18E9BA4")]
			private bool ActionWaitNode1814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002005")]
			[Address(RVA = "0x18E9C04", Offset = "0x18E9C04", VA = "0x18E9C04")]
			private bool TimeScaleNode1815()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002006")]
			[Address(RVA = "0x18E9C64", Offset = "0x18E9C64", VA = "0x18E9C64")]
			private bool ActionWaitNode1789()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002007")]
			[Address(RVA = "0x18E9CC4", Offset = "0x18E9CC4", VA = "0x18E9CC4")]
			private bool ToggleHeadLookIK2466()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002008")]
			[Address(RVA = "0x18E9D24", Offset = "0x18E9D24", VA = "0x18E9D24")]
			private bool SetMovementColliderRadiusNode2468()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002009")]
			[Address(RVA = "0x18E9D84", Offset = "0x18E9D84", VA = "0x18E9D84")]
			private bool ActionWaitNode2501()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200A")]
			[Address(RVA = "0x18E9DE4", Offset = "0x18E9DE4", VA = "0x18E9DE4")]
			private bool TimeScaleNode2502()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200B")]
			[Address(RVA = "0x18E9E44", Offset = "0x18E9E44", VA = "0x18E9E44")]
			private bool ExposeHeartNode2471()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200C")]
			[Address(RVA = "0x18E9EA4", Offset = "0x18E9EA4", VA = "0x18E9EA4")]
			private bool BranchSequenceNode2503()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200D")]
			[Address(RVA = "0x18E9F40", Offset = "0x18E9F40", VA = "0x18E9F40")]
			private bool ActionSendEventNode2473()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200E")]
			[Address(RVA = "0x18E9FA0", Offset = "0x18E9FA0", VA = "0x18E9FA0")]
			private bool BranchSelectorNode2504()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600200F")]
			[Address(RVA = "0x18E9FE0", Offset = "0x18E9FE0", VA = "0x18E9FE0")]
			private bool BranchSequenceNode2475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002010")]
			[Address(RVA = "0x18EA0C4", Offset = "0x18EA0C4", VA = "0x18EA0C4")]
			private bool RecoverHeartNode2476()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002011")]
			[Address(RVA = "0x18EA124", Offset = "0x18EA124", VA = "0x18EA124")]
			private bool EnvironmentSettingsNode2477()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x18EA184", Offset = "0x18EA184", VA = "0x18EA184")]
			private bool RestoreMovementColliderRadius2478()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002013")]
			[Address(RVA = "0x18EA1E4", Offset = "0x18EA1E4", VA = "0x18EA1E4")]
			private bool ActionSendEventNode2479()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x18EA244", Offset = "0x18EA244", VA = "0x18EA244")]
			private bool StartAttackNode2480()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002015")]
			[Address(RVA = "0x18EA2A4", Offset = "0x18EA2A4", VA = "0x18EA2A4")]
			private bool ActionWaitNode2481()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x18EA304", Offset = "0x18EA304", VA = "0x18EA304")]
			private bool RestoreEnemyHealthNode2484()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x18EA364", Offset = "0x18EA364", VA = "0x18EA364")]
			private bool BranchSequenceNode2485()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x18EA3E0", Offset = "0x18EA3E0", VA = "0x18EA3E0")]
			private bool BranchSequenceNode2486()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002019")]
			[Address(RVA = "0x18EA480", Offset = "0x18EA480", VA = "0x18EA480")]
			private bool BranchSequenceNode2487()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x18EA548", Offset = "0x18EA548", VA = "0x18EA548")]
			private bool ActionSendEventNode2493()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201B")]
			[Address(RVA = "0x18EA5A8", Offset = "0x18EA5A8", VA = "0x18EA5A8")]
			private bool TimeScaleNode2496()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201C")]
			[Address(RVA = "0x18EA608", Offset = "0x18EA608", VA = "0x18EA608")]
			private bool BranchSequenceNode2533()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201D")]
			[Address(RVA = "0x18EA698", Offset = "0x18EA698", VA = "0x18EA698")]
			private bool BranchSequenceNode3280()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201E")]
			[Address(RVA = "0x18EA720", Offset = "0x18EA720", VA = "0x18EA720")]
			private bool BranchSequenceNode1699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600201F")]
			[Address(RVA = "0x18EA780", Offset = "0x18EA780", VA = "0x18EA780")]
			private bool BranchSequenceNode957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x18EA7E0", Offset = "0x18EA7E0", VA = "0x18EA7E0")]
			private bool BranchSequenceNode1772()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002021")]
			[Address(RVA = "0x18EA8F4", Offset = "0x18EA8F4", VA = "0x18EA8F4")]
			private bool ActionWaitNode1541()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x18EA954", Offset = "0x18EA954", VA = "0x18EA954")]
			private bool ActionWaitNode1748()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002023")]
			[Address(RVA = "0x18EA9B4", Offset = "0x18EA9B4", VA = "0x18EA9B4")]
			private bool BranchSequenceNode1846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002024")]
			[Address(RVA = "0x18EAA30", Offset = "0x18EAA30", VA = "0x18EAA30")]
			private bool ActionWaitNode1114()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002025")]
			[Address(RVA = "0x18EAA90", Offset = "0x18EAA90", VA = "0x18EAA90")]
			private bool EnvironmentSettingsNode1813()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x18EAAF0", Offset = "0x18EAAF0", VA = "0x18EAAF0")]
			private bool BranchSequenceNode1849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002027")]
			[Address(RVA = "0x18EAB6C", Offset = "0x18EAB6C", VA = "0x18EAB6C")]
			private bool BranchSequenceNode1852()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x18EABE8", Offset = "0x18EABE8", VA = "0x18EABE8")]
			private bool BranchSelectorNode816()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002029")]
			[Address(RVA = "0x18EAC3C", Offset = "0x18EAC3C", VA = "0x18EAC3C")]
			private bool BranchSequenceNode2894()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202A")]
			[Address(RVA = "0x18EAC7C", Offset = "0x18EAC7C", VA = "0x18EAC7C")]
			private bool BranchSequenceNode2895()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202B")]
			[Address(RVA = "0x18EAD60", Offset = "0x18EAD60", VA = "0x18EAD60")]
			private bool BranchSequenceNode1482()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x18EAE1C", Offset = "0x18EAE1C", VA = "0x18EAE1C")]
			private bool RangeCompareNode1465()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202D")]
			[Address(RVA = "0x18EAF54", Offset = "0x18EAF54", VA = "0x18EAF54")]
			private bool BranchSequenceNode1745()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x18EB004", Offset = "0x18EB004", VA = "0x18EB004")]
			private bool ActionLateralDisplace1819()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600202F")]
			[Address(RVA = "0x18EB064", Offset = "0x18EB064", VA = "0x18EB064")]
			private bool ActionWaitNode1751()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002030")]
			[Address(RVA = "0x18EB0C4", Offset = "0x18EB0C4", VA = "0x18EB0C4")]
			private bool BranchSelectorNode1472()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002031")]
			[Address(RVA = "0x18EB128", Offset = "0x18EB128", VA = "0x18EB128")]
			private bool BranchSequenceNode996()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x18EB130", Offset = "0x18EB130", VA = "0x18EB130")]
			private bool BranchSequenceNode989()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002033")]
			[Address(RVA = "0x18EB190", Offset = "0x18EB190", VA = "0x18EB190")]
			private bool BranchSequenceNode962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002034")]
			[Address(RVA = "0x18EB308", Offset = "0x18EB308", VA = "0x18EB308")]
			private bool BranchSelectorNode1439()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002035")]
			[Address(RVA = "0x18EB384", Offset = "0x18EB384", VA = "0x18EB384")]
			private bool BranchSelectorNode2047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002036")]
			[Address(RVA = "0x18EB3D4", Offset = "0x18EB3D4", VA = "0x18EB3D4")]
			private bool BranchSequenceNode1501()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002037")]
			[Address(RVA = "0x18EB428", Offset = "0x18EB428", VA = "0x18EB428")]
			private bool BranchSequenceNode929()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x18EB430", Offset = "0x18EB430", VA = "0x18EB430")]
			private bool BranchSequenceNode931()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002039")]
			[Address(RVA = "0x18EB490", Offset = "0x18EB490", VA = "0x18EB490")]
			private bool BranchRandomNode946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x18EB568", Offset = "0x18EB568", VA = "0x18EB568")]
			private bool BranchSequenceNode1015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x18EB67C", Offset = "0x18EB67C", VA = "0x18EB67C")]
			private bool BranchSequenceNode2035()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203C")]
			[Address(RVA = "0x18EB798", Offset = "0x18EB798", VA = "0x18EB798")]
			private bool BranchSequenceNode1056()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203D")]
			[Address(RVA = "0x18EB848", Offset = "0x18EB848", VA = "0x18EB848")]
			private bool BranchSelectorNode1150()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x18EB888", Offset = "0x18EB888", VA = "0x18EB888")]
			private bool BranchSequenceNode1497()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600203F")]
			[Address(RVA = "0x18EB8DC", Offset = "0x18EB8DC", VA = "0x18EB8DC")]
			private bool BranchSequenceNode1860()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x18EB998", Offset = "0x18EB998", VA = "0x18EB998")]
			private bool BranchSequenceNode1885()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002041")]
			[Address(RVA = "0x18EBA40", Offset = "0x18EBA40", VA = "0x18EBA40")]
			private bool BranchSequenceNode1881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002042")]
			[Address(RVA = "0x18EBAA0", Offset = "0x18EBAA0", VA = "0x18EBAA0")]
			private bool BranchSequenceNode1882()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002043")]
			[Address(RVA = "0x18EBB98", Offset = "0x18EBB98", VA = "0x18EBB98")]
			private bool BranchSequenceNode1889()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x18EBC60", Offset = "0x18EBC60", VA = "0x18EBC60")]
			private bool BranchSequenceNode1956()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002045")]
			[Address(RVA = "0x18EBD18", Offset = "0x18EBD18", VA = "0x18EBD18")]
			private bool BranchSequenceNode1950()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002046")]
			[Address(RVA = "0x18EBDC0", Offset = "0x18EBDC0", VA = "0x18EBDC0")]
			private bool BranchSequenceNode1939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002047")]
			[Address(RVA = "0x18EBE20", Offset = "0x18EBE20", VA = "0x18EBE20")]
			private bool BranchSequenceNode1943()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002048")]
			[Address(RVA = "0x18EBE58", Offset = "0x18EBE58", VA = "0x18EBE58")]
			private bool BranchSequenceNode2001()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002049")]
			[Address(RVA = "0x18EBF00", Offset = "0x18EBF00", VA = "0x18EBF00")]
			private bool BranchSequenceNode3220()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204A")]
			[Address(RVA = "0x18EBF88", Offset = "0x18EBF88", VA = "0x18EBF88")]
			private bool BranchSequenceNode3221()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204B")]
			[Address(RVA = "0x18EC124", Offset = "0x18EC124", VA = "0x18EC124")]
			private bool BranchSequenceNode3236()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204C")]
			[Address(RVA = "0x18EC1B0", Offset = "0x18EC1B0", VA = "0x18EC1B0")]
			private bool BranchSequenceNode3223()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204D")]
			[Address(RVA = "0x18EC2EC", Offset = "0x18EC2EC", VA = "0x18EC2EC")]
			private bool BranchSequenceNode1065()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204E")]
			[Address(RVA = "0x18EC444", Offset = "0x18EC444", VA = "0x18EC444")]
			private bool BranchSequenceNode1134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600204F")]
			[Address(RVA = "0x18EC4A4", Offset = "0x18EC4A4", VA = "0x18EC4A4")]
			private bool BranchSequenceNode1147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002050")]
			[Address(RVA = "0x18EC4F8", Offset = "0x18EC4F8", VA = "0x18EC4F8")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002051")]
			[Address(RVA = "0x18EC660", Offset = "0x18EC660", VA = "0x18EC660")]
			private bool BranchSequenceNode3283()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002052")]
			[Address(RVA = "0x18EC6C0", Offset = "0x18EC6C0", VA = "0x18EC6C0")]
			private bool BranchSequenceNode1117()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002053")]
			[Address(RVA = "0x18EC714", Offset = "0x18EC714", VA = "0x18EC714")]
			private bool BranchSequenceNode1124()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002054")]
			[Address(RVA = "0x18EC768", Offset = "0x18EC768", VA = "0x18EC768")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002055")]
			[Address(RVA = "0x18EC7F4", Offset = "0x18EC7F4", VA = "0x18EC7F4")]
			private bool BranchSequenceNode575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x18EC854", Offset = "0x18EC854", VA = "0x18EC854")]
			private bool BranchSequenceNode706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002057")]
			[Address(RVA = "0x18EC8B4", Offset = "0x18EC8B4", VA = "0x18EC8B4")]
			private bool BranchSequenceNode2282()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x18EC920", Offset = "0x18EC920", VA = "0x18EC920")]
			private bool BranchSequenceNode2284()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002059")]
			[Address(RVA = "0x18EC9FC", Offset = "0x18EC9FC", VA = "0x18EC9FC")]
			private bool BranchSequenceNode2285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205A")]
			[Address(RVA = "0x18ECB48", Offset = "0x18ECB48", VA = "0x18ECB48")]
			private bool BranchSequenceNode3303()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205B")]
			[Address(RVA = "0x18ECBD0", Offset = "0x18ECBD0", VA = "0x18ECBD0")]
			private bool BranchSequenceNode3313()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x18ECC58", Offset = "0x18ECC58", VA = "0x18ECC58")]
			private bool BranchSelectorNode2403()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205D")]
			[Address(RVA = "0x18ECD04", Offset = "0x18ECD04", VA = "0x18ECD04")]
			private bool BranchSequenceNode3336()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x18ECE50", Offset = "0x18ECE50", VA = "0x18ECE50")]
			private bool BranchSequenceNode3268()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600205F")]
			[Address(RVA = "0x18ECF24", Offset = "0x18ECF24", VA = "0x18ECF24")]
			private bool BranchSequenceNode2875()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002060")]
			[Address(RVA = "0x18ECFD0", Offset = "0x18ECFD0", VA = "0x18ECFD0")]
			private bool BranchSequenceNode2628()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x18ED07C", Offset = "0x18ED07C", VA = "0x18ED07C")]
			private bool BranchSequenceNode2629()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002062")]
			[Address(RVA = "0x18ED1B0", Offset = "0x18ED1B0", VA = "0x18ED1B0")]
			private bool BranchSequenceNode2665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002063")]
			[Address(RVA = "0x18ED240", Offset = "0x18ED240", VA = "0x18ED240")]
			private bool BranchSequenceNode2675()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002064")]
			[Address(RVA = "0x18ED2BC", Offset = "0x18ED2BC", VA = "0x18ED2BC")]
			private bool BranchSequenceNode3316()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002065")]
			[Address(RVA = "0x18ED408", Offset = "0x18ED408", VA = "0x18ED408")]
			private bool BranchSequenceNode3327()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002066")]
			[Address(RVA = "0x18ED4C4", Offset = "0x18ED4C4", VA = "0x18ED4C4")]
			private bool BranchSelectorNode2644()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002067")]
			[Address(RVA = "0x18ED540", Offset = "0x18ED540", VA = "0x18ED540")]
			private bool BranchSelectorNode2645()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002068")]
			[Address(RVA = "0x18ED580", Offset = "0x18ED580", VA = "0x18ED580")]
			private bool BranchSequenceNode2811()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002069")]
			[Address(RVA = "0x18ED5B4", Offset = "0x18ED5B4", VA = "0x18ED5B4")]
			private bool BranchSelectorNode2816()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206A")]
			[Address(RVA = "0x18ED64C", Offset = "0x18ED64C", VA = "0x18ED64C")]
			private bool BranchSequenceNode2623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206B")]
			[Address(RVA = "0x18ED710", Offset = "0x18ED710", VA = "0x18ED710")]
			private bool BranchSequenceNode2624()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206C")]
			[Address(RVA = "0x18ED804", Offset = "0x18ED804", VA = "0x18ED804")]
			private bool ActionSendEventNode2535()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206D")]
			[Address(RVA = "0x18ED864", Offset = "0x18ED864", VA = "0x18ED864")]
			private bool BranchSequenceNode2536()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206E")]
			[Address(RVA = "0x18ED918", Offset = "0x18ED918", VA = "0x18ED918")]
			private bool BranchSequenceNode2537()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600206F")]
			[Address(RVA = "0x18ED9E8", Offset = "0x18ED9E8", VA = "0x18ED9E8")]
			private bool StartAttackNode2548()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002070")]
			[Address(RVA = "0x18EDA48", Offset = "0x18EDA48", VA = "0x18EDA48")]
			private bool BranchSequenceNode1842()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002071")]
			[Address(RVA = "0x18EDAC4", Offset = "0x18EDAC4", VA = "0x18EDAC4")]
			private bool ListenGlobalEventNode1694()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002072")]
			[Address(RVA = "0x18EDB24", Offset = "0x18EDB24", VA = "0x18EDB24")]
			private bool ListenGlobalEventNode954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002073")]
			[Address(RVA = "0x18EDB84", Offset = "0x18EDB84", VA = "0x18EDB84")]
			private bool BranchSequenceNode2166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002074")]
			[Address(RVA = "0x18EDC28", Offset = "0x18EDC28", VA = "0x18EDC28")]
			private bool ActionLeapNode956()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002075")]
			[Address(RVA = "0x18EDC88", Offset = "0x18EDC88", VA = "0x18EDC88")]
			private bool ActionLeapNode1784()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002076")]
			[Address(RVA = "0x18EDCE8", Offset = "0x18EDCE8", VA = "0x18EDCE8")]
			private bool BranchSequenceNode2169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002077")]
			[Address(RVA = "0x18EDD90", Offset = "0x18EDD90", VA = "0x18EDD90")]
			private bool ActionSendEventNode2088()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002078")]
			[Address(RVA = "0x18EDDF0", Offset = "0x18EDDF0", VA = "0x18EDDF0")]
			private bool BranchSequenceNode1843()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002079")]
			[Address(RVA = "0x18EDE6C", Offset = "0x18EDE6C", VA = "0x18EDE6C")]
			private bool ActionLeapNode1701()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207A")]
			[Address(RVA = "0x18EDECC", Offset = "0x18EDECC", VA = "0x18EDECC")]
			private bool ActionSendEventNode1711()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207B")]
			[Address(RVA = "0x18EDF2C", Offset = "0x18EDF2C", VA = "0x18EDF2C")]
			private bool ClearEnvironmentSettingsNode1710()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207C")]
			[Address(RVA = "0x18EDF8C", Offset = "0x18EDF8C", VA = "0x18EDF8C")]
			private bool BranchSequenceNode2896()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207D")]
			[Address(RVA = "0x18EE094", Offset = "0x18EE094", VA = "0x18EE094")]
			private bool BranchSelectorNode2897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207E")]
			[Address(RVA = "0x18EE194", Offset = "0x18EE194", VA = "0x18EE194")]
			private bool BranchSequenceNode2898()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600207F")]
			[Address(RVA = "0x18EE320", Offset = "0x18EE320", VA = "0x18EE320")]
			private bool BranchSelectorNode2899()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002080")]
			[Address(RVA = "0x18EE3F8", Offset = "0x18EE3F8", VA = "0x18EE3F8")]
			private bool RangeCompareNode1474()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002081")]
			[Address(RVA = "0x18EE530", Offset = "0x18EE530", VA = "0x18EE530")]
			private bool ActionWaitNode1003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x18EE590", Offset = "0x18EE590", VA = "0x18EE590")]
			private bool EnvironmentSettingsNode1160()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002083")]
			[Address(RVA = "0x18EE5F0", Offset = "0x18EE5F0", VA = "0x18EE5F0")]
			private bool BranchSequenceNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002084")]
			[Address(RVA = "0x18EE62C", Offset = "0x18EE62C", VA = "0x18EE62C")]
			private bool BranchSelectorNode1630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002085")]
			[Address(RVA = "0x18EE730", Offset = "0x18EE730", VA = "0x18EE730")]
			private bool RangeCompareNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002086")]
			[Address(RVA = "0x18EE868", Offset = "0x18EE868", VA = "0x18EE868")]
			private bool BranchSequenceNode981()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002087")]
			[Address(RVA = "0x18EE938", Offset = "0x18EE938", VA = "0x18EE938")]
			private bool BranchRandomNode1175()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002088")]
			[Address(RVA = "0x18EE998", Offset = "0x18EE998", VA = "0x18EE998")]
			private bool BranchSequenceNode2048()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002089")]
			[Address(RVA = "0x18EEA58", Offset = "0x18EEA58", VA = "0x18EEA58")]
			private bool ActionLeapNode941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208A")]
			[Address(RVA = "0x18EEAB8", Offset = "0x18EEAB8", VA = "0x18EEAB8")]
			private bool ActionWaitNode933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208B")]
			[Address(RVA = "0x18EEB18", Offset = "0x18EEB18", VA = "0x18EEB18")]
			private bool BranchSequenceNode934()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208C")]
			[Address(RVA = "0x18EEB78", Offset = "0x18EEB78", VA = "0x18EEB78")]
			private bool BranchSequenceNode937()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208D")]
			[Address(RVA = "0x18EEBD8", Offset = "0x18EEBD8", VA = "0x18EEBD8")]
			private bool BranchSequenceNode1437()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208E")]
			[Address(RVA = "0x18EEC14", Offset = "0x18EEC14", VA = "0x18EEC14")]
			private bool BranchSequenceNode1477()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600208F")]
			[Address(RVA = "0x18EECC4", Offset = "0x18EECC4", VA = "0x18EECC4")]
			private bool BranchSequenceNode2043()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x18EED74", Offset = "0x18EED74", VA = "0x18EED74")]
			private bool BranchRandomNode1616()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x18EEEA0", Offset = "0x18EEEA0", VA = "0x18EEEA0")]
			private bool BranchSequenceNode2037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002092")]
			[Address(RVA = "0x18EEEE4", Offset = "0x18EEEE4", VA = "0x18EEEE4")]
			private bool BranchSequenceNode1451()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x18EEF20", Offset = "0x18EEF20", VA = "0x18EEF20")]
			private bool RangeCompareNode1149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x18EF058", Offset = "0x18EF058", VA = "0x18EF058")]
			private bool BranchSequenceNode1157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002095")]
			[Address(RVA = "0x18EF128", Offset = "0x18EF128", VA = "0x18EF128")]
			private bool BranchSequenceNode1049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x18EF1F8", Offset = "0x18EF1F8", VA = "0x18EF1F8")]
			private bool BranchSequenceNode2027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x18EF274", Offset = "0x18EF274", VA = "0x18EF274")]
			private bool BranchSequenceNode2071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x18EF304", Offset = "0x18EF304", VA = "0x18EF304")]
			private bool BranchSequenceNode2018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x18EF364", Offset = "0x18EF364", VA = "0x18EF364")]
			private bool BranchSequenceNode2141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x18EF3F0", Offset = "0x18EF3F0", VA = "0x18EF3F0")]
			private bool BranchSelectorNode1867()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209B")]
			[Address(RVA = "0x18EF450", Offset = "0x18EF450", VA = "0x18EF450")]
			private bool BranchSequenceNode1877()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209C")]
			[Address(RVA = "0x18EF4B0", Offset = "0x18EF4B0", VA = "0x18EF4B0")]
			private bool BranchSequenceNode2029()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209D")]
			[Address(RVA = "0x18EF52C", Offset = "0x18EF52C", VA = "0x18EF52C")]
			private bool BranchSequenceNode1959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209E")]
			[Address(RVA = "0x18EF58C", Offset = "0x18EF58C", VA = "0x18EF58C")]
			private bool BranchSequenceNode1993()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600209F")]
			[Address(RVA = "0x18EF5EC", Offset = "0x18EF5EC", VA = "0x18EF5EC")]
			private bool BranchSequenceNode1961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A0")]
			[Address(RVA = "0x18EF68C", Offset = "0x18EF68C", VA = "0x18EF68C")]
			private bool BranchSelectorNode3225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A1")]
			[Address(RVA = "0x18EF740", Offset = "0x18EF740", VA = "0x18EF740")]
			private bool BranchSequenceNode3248()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A2")]
			[Address(RVA = "0x18EF7EC", Offset = "0x18EF7EC", VA = "0x18EF7EC")]
			private bool BranchSelectorNode3247()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x18EF86C", Offset = "0x18EF86C", VA = "0x18EF86C")]
			private bool BranchSequenceNode1130()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A4")]
			[Address(RVA = "0x18EF8D0", Offset = "0x18EF8D0", VA = "0x18EF8D0")]
			private bool ActionDodge1129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A5")]
			[Address(RVA = "0x18EF930", Offset = "0x18EF930", VA = "0x18EF930")]
			private bool ActionWaitNode1135()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A6")]
			[Address(RVA = "0x18EF990", Offset = "0x18EF990", VA = "0x18EF990")]
			private bool BranchSelectorNode2116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A7")]
			[Address(RVA = "0x18EF9F4", Offset = "0x18EF9F4", VA = "0x18EF9F4")]
			private bool BranchSequenceNode3290()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A8")]
			[Address(RVA = "0x18EFA84", Offset = "0x18EFA84", VA = "0x18EFA84")]
			private bool ActionDisengage3285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020A9")]
			[Address(RVA = "0x18EFAE4", Offset = "0x18EFAE4", VA = "0x18EFAE4")]
			private bool ActionWaitNode3287()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AA")]
			[Address(RVA = "0x18EFB44", Offset = "0x18EFB44", VA = "0x18EFB44")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AB")]
			[Address(RVA = "0x18EFBC8", Offset = "0x18EFBC8", VA = "0x18EFBC8")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AC")]
			[Address(RVA = "0x18EFC90", Offset = "0x18EFC90", VA = "0x18EFC90")]
			private bool RangeCompareNode577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AD")]
			[Address(RVA = "0x18EFDC8", Offset = "0x18EFDC8", VA = "0x18EFDC8")]
			private bool BranchSelectorNode888()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AE")]
			[Address(RVA = "0x18EFE18", Offset = "0x18EFE18", VA = "0x18EFE18")]
			private bool RangeCompareNode578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020AF")]
			[Address(RVA = "0x18EFF50", Offset = "0x18EFF50", VA = "0x18EFF50")]
			private bool BranchSelectorNode905()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B0")]
			[Address(RVA = "0x18EFFA0", Offset = "0x18EFFA0", VA = "0x18EFFA0")]
			private bool RangeCompareNode2291()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B1")]
			[Address(RVA = "0x18F00D8", Offset = "0x18F00D8", VA = "0x18F00D8")]
			private bool BranchSequenceNode3343()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B2")]
			[Address(RVA = "0x18F0160", Offset = "0x18F0160", VA = "0x18F0160")]
			private bool BranchSequenceNode2876()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B3")]
			[Address(RVA = "0x18F01F4", Offset = "0x18F01F4", VA = "0x18F01F4")]
			private bool BranchSequenceNode2885()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B4")]
			[Address(RVA = "0x18F0290", Offset = "0x18F0290", VA = "0x18F0290")]
			private bool BranchSequenceNode3347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0x18F034C", Offset = "0x18F034C", VA = "0x18F034C")]
			private bool BranchSelectorNode2671()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0x18F03F4", Offset = "0x18F03F4", VA = "0x18F03F4")]
			private bool BranchSequenceNode2672()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0x18F04B4", Offset = "0x18F04B4", VA = "0x18F04B4")]
			private bool ActionWaitNode2687()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0x18F0514", Offset = "0x18F0514", VA = "0x18F0514")]
			private bool BranchSequenceNode2674()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020B9")]
			[Address(RVA = "0x18F0594", Offset = "0x18F0594", VA = "0x18F0594")]
			private bool BranchSequenceNode2691()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0x18F0644", Offset = "0x18F0644", VA = "0x18F0644")]
			private bool ActionWaitChoiceNode2692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0x18F06A4", Offset = "0x18F06A4", VA = "0x18F06A4")]
			private bool BranchSequenceNode2693()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0x18F06EC", Offset = "0x18F06EC", VA = "0x18F06EC")]
			private bool BranchSequenceNode3323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0x18F0774", Offset = "0x18F0774", VA = "0x18F0774")]
			private bool BranchSequenceNode3331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0x18F0848", Offset = "0x18F0848", VA = "0x18F0848")]
			private bool BranchSequenceNode2667()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0x18F08CC", Offset = "0x18F08CC", VA = "0x18F08CC")]
			private bool BranchSequenceNode2669()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0x18F09A0", Offset = "0x18F09A0", VA = "0x18F09A0")]
			private bool BranchSequenceNode2670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0x18F0A54", Offset = "0x18F0A54", VA = "0x18F0A54")]
			private bool BranchSequenceNode2817()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0x18F0A8C", Offset = "0x18F0A8C", VA = "0x18F0A8C")]
			private bool BranchSequenceNode2818()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0x18F0AD0", Offset = "0x18F0AD0", VA = "0x18F0AD0")]
			private bool BranchSequenceNode2819()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0x18F0C44", Offset = "0x18F0C44", VA = "0x18F0C44")]
			private bool BranchSequenceNode2831()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0x18F0CF0", Offset = "0x18F0CF0", VA = "0x18F0CF0")]
			private bool ToggleTargetableNode2168()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0x18F0D3C", Offset = "0x18F0D3C", VA = "0x18F0D3C")]
			private bool ToggleTargetableNode2172()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x18F0D8C", Offset = "0x18F0D8C", VA = "0x18F0D8C")]
			private bool BranchSelectorNode2900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0x18F0E6C", Offset = "0x18F0E6C", VA = "0x18F0E6C")]
			private bool ActionSendEventNode2904()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0x18F0ECC", Offset = "0x18F0ECC", VA = "0x18F0ECC")]
			private bool BranchSequenceNode2906()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CA")]
			[Address(RVA = "0x18F0F6C", Offset = "0x18F0F6C", VA = "0x18F0F6C")]
			private bool BranchSequenceNode2907()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CB")]
			[Address(RVA = "0x18F102C", Offset = "0x18F102C", VA = "0x18F102C")]
			private bool BranchSequenceNode2908()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0x18F108C", Offset = "0x18F108C", VA = "0x18F108C")]
			private bool ActionSendEventNode2914()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0x18F10EC", Offset = "0x18F10EC", VA = "0x18F10EC")]
			private bool BranchSequenceNode2916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CE")]
			[Address(RVA = "0x18F118C", Offset = "0x18F118C", VA = "0x18F118C")]
			private bool BranchSequenceNode2917()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020CF")]
			[Address(RVA = "0x18F11D8", Offset = "0x18F11D8", VA = "0x18F11D8")]
			private bool BranchSequenceNode1383()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0x18F1258", Offset = "0x18F1258", VA = "0x18F1258")]
			private bool BranchSequenceNode1631()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0x18F12D8", Offset = "0x18F12D8", VA = "0x18F12D8")]
			private bool StartAttackNode1170()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0x18F1338", Offset = "0x18F1338", VA = "0x18F1338")]
			private bool StartAttackNode1169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0x18F1398", Offset = "0x18F1398", VA = "0x18F1398")]
			private bool StartAttackNode982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0x18F13F8", Offset = "0x18F13F8", VA = "0x18F13F8")]
			private bool BranchSequenceNode2049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0x18F1478", Offset = "0x18F1478", VA = "0x18F1478")]
			private bool ActionLeapNode942()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0x18F14D8", Offset = "0x18F14D8", VA = "0x18F14D8")]
			private bool ActionLeapNode943()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0x18F1538", Offset = "0x18F1538", VA = "0x18F1538")]
			private bool RangeCompareNode2044()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0x18F1668", Offset = "0x18F1668", VA = "0x18F1668")]
			private bool BranchSequenceNode2102()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0x18F16F8", Offset = "0x18F16F8", VA = "0x18F16F8")]
			private bool StartAttackNode2095()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0x18F1758", Offset = "0x18F1758", VA = "0x18F1758")]
			private bool StartAttackNode2096()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0x18F17B8", Offset = "0x18F17B8", VA = "0x18F17B8")]
			private bool StartAttackNode2097()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0x18F1818", Offset = "0x18F1818", VA = "0x18F1818")]
			private bool StartAttackNode1050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0x18F1878", Offset = "0x18F1878", VA = "0x18F1878")]
			private bool BranchSelectorNode1155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0x18F18F8", Offset = "0x18F18F8", VA = "0x18F18F8")]
			private bool StartAttackNode1152()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0x18F1958", Offset = "0x18F1958", VA = "0x18F1958")]
			private bool BranchSelectorNode3393()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0x18F19B8", Offset = "0x18F19B8", VA = "0x18F19B8")]
			private bool ActionWaitNode2019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0x18F1A18", Offset = "0x18F1A18", VA = "0x18F1A18")]
			private bool BranchSequenceNode1925()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0x18F1A78", Offset = "0x18F1A78", VA = "0x18F1A78")]
			private bool BranchSequenceNode2079()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0x18F1AD8", Offset = "0x18F1AD8", VA = "0x18F1AD8")]
			private bool StartAttackNode1873()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E4")]
			[Address(RVA = "0x18F1B38", Offset = "0x18F1B38", VA = "0x18F1B38")]
			private bool StartAttackNode2125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0x18F1B98", Offset = "0x18F1B98", VA = "0x18F1B98")]
			private bool ActionWaitNode1960()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0x18F1BF8", Offset = "0x18F1BF8", VA = "0x18F1BF8")]
			private bool BranchSelectorNode1990()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0x18F1C94", Offset = "0x18F1C94", VA = "0x18F1C94")]
			private bool StartAttackNode1962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0x18F1CF4", Offset = "0x18F1CF4", VA = "0x18F1CF4")]
			private bool BranchSelectorNode3249()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0x18F1DA8", Offset = "0x18F1DA8", VA = "0x18F1DA8")]
			private bool BranchSequenceNode3250()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0x18F1E1C", Offset = "0x18F1E1C", VA = "0x18F1E1C")]
			private bool BranchSequenceNode3356()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0x18F1F68", Offset = "0x18F1F68", VA = "0x18F1F68")]
			private bool BranchSequenceNode2117()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0x18F2018", Offset = "0x18F2018", VA = "0x18F2018")]
			private bool BranchSelectorNode3292()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020ED")]
			[Address(RVA = "0x18F2098", Offset = "0x18F2098", VA = "0x18F2098")]
			private bool BranchSequenceNode3366()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0x18F21E4", Offset = "0x18F21E4", VA = "0x18F21E4")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020EF")]
			[Address(RVA = "0x18F2248", Offset = "0x18F2248", VA = "0x18F2248")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F0")]
			[Address(RVA = "0x18F228C", Offset = "0x18F228C", VA = "0x18F228C")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F1")]
			[Address(RVA = "0x18F2310", Offset = "0x18F2310", VA = "0x18F2310")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F2")]
			[Address(RVA = "0x18F2374", Offset = "0x18F2374", VA = "0x18F2374")]
			private bool BranchSequenceNode883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F3")]
			[Address(RVA = "0x18F2458", Offset = "0x18F2458", VA = "0x18F2458")]
			private bool BranchSequenceNode3433()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F4")]
			[Address(RVA = "0x18F2510", Offset = "0x18F2510", VA = "0x18F2510")]
			private bool BranchSequenceNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F5")]
			[Address(RVA = "0x18F25E8", Offset = "0x18F25E8", VA = "0x18F25E8")]
			private bool BranchSequenceNode900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F6")]
			[Address(RVA = "0x18F26CC", Offset = "0x18F26CC", VA = "0x18F26CC")]
			private bool BranchSequenceNode3439()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F7")]
			[Address(RVA = "0x18F2784", Offset = "0x18F2784", VA = "0x18F2784")]
			private bool BranchSequenceNode909()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F8")]
			[Address(RVA = "0x18F285C", Offset = "0x18F285C", VA = "0x18F285C")]
			private bool BranchSelectorNode2886()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020F9")]
			[Address(RVA = "0x18F2908", Offset = "0x18F2908", VA = "0x18F2908")]
			private bool BranchSequenceNode3376()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FA")]
			[Address(RVA = "0x18F2A54", Offset = "0x18F2A54", VA = "0x18F2A54")]
			private bool BranchSequenceNode3351()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FB")]
			[Address(RVA = "0x18F2B28", Offset = "0x18F2B28", VA = "0x18F2B28")]
			private bool BranchSequenceNode3386()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0x18F2C40", Offset = "0x18F2C40", VA = "0x18F2C40")]
			private bool BranchSequenceNode3445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0x18F2D8C", Offset = "0x18F2D8C", VA = "0x18F2D8C")]
			private bool BranchSelectorNode2699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0x18F2DCC", Offset = "0x18F2DCC", VA = "0x18F2DCC")]
			private bool BranchSequenceNode2919()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60020FF")]
			[Address(RVA = "0x18F2E44", Offset = "0x18F2E44", VA = "0x18F2E44")]
			private bool BranchSequenceNode2921()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002100")]
			[Address(RVA = "0x18F2EA4", Offset = "0x18F2EA4", VA = "0x18F2EA4")]
			private bool BranchSequenceNode2922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002101")]
			[Address(RVA = "0x18F2FC4", Offset = "0x18F2FC4", VA = "0x18F2FC4")]
			private bool BranchSequenceNode2923()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002102")]
			[Address(RVA = "0x18F2FFC", Offset = "0x18F2FFC", VA = "0x18F2FFC")]
			private bool BranchSequenceNode2955()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002103")]
			[Address(RVA = "0x18F3110", Offset = "0x18F3110", VA = "0x18F3110")]
			private bool BranchSequenceNode2925()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002104")]
			[Address(RVA = "0x18F318C", Offset = "0x18F318C", VA = "0x18F318C")]
			private bool BranchSequenceNode2926()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002105")]
			[Address(RVA = "0x18F33A4", Offset = "0x18F33A4", VA = "0x18F33A4")]
			private bool BranchSequenceNode2927()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002106")]
			[Address(RVA = "0x18F3404", Offset = "0x18F3404", VA = "0x18F3404")]
			private bool BranchSequenceNode2928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002107")]
			[Address(RVA = "0x18F35BC", Offset = "0x18F35BC", VA = "0x18F35BC")]
			private bool BranchSequenceNode2929()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002108")]
			[Address(RVA = "0x18F3628", Offset = "0x18F3628", VA = "0x18F3628")]
			private bool BranchSequenceNode2931()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002109")]
			[Address(RVA = "0x18F3688", Offset = "0x18F3688", VA = "0x18F3688")]
			private bool BranchSequenceNode2994()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210A")]
			[Address(RVA = "0x18F374C", Offset = "0x18F374C", VA = "0x18F374C")]
			private bool BranchSequenceNode2933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210B")]
			[Address(RVA = "0x18F379C", Offset = "0x18F379C", VA = "0x18F379C")]
			private bool BranchSequenceNode2934()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210C")]
			[Address(RVA = "0x18F38B0", Offset = "0x18F38B0", VA = "0x18F38B0")]
			private bool BranchSequenceNode3005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210D")]
			[Address(RVA = "0x18F3974", Offset = "0x18F3974", VA = "0x18F3974")]
			private bool BranchSequenceNode2936()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210E")]
			[Address(RVA = "0x18F3AE8", Offset = "0x18F3AE8", VA = "0x18F3AE8")]
			private bool BranchSelectorNode2110()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600210F")]
			[Address(RVA = "0x18F3B48", Offset = "0x18F3B48", VA = "0x18F3B48")]
			private bool BranchSequenceNode3394()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002110")]
			[Address(RVA = "0x18F3BA8", Offset = "0x18F3BA8", VA = "0x18F3BA8")]
			private bool BranchSequenceNode3395()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002111")]
			[Address(RVA = "0x18F3C28", Offset = "0x18F3C28", VA = "0x18F3C28")]
			private bool StartAttackNode1918()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002112")]
			[Address(RVA = "0x18F3C88", Offset = "0x18F3C88", VA = "0x18F3C88")]
			private bool BranchSequenceNode2157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002113")]
			[Address(RVA = "0x18F3D3C", Offset = "0x18F3D3C", VA = "0x18F3D3C")]
			private bool BranchSequenceNode1972()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002114")]
			[Address(RVA = "0x18F3E3C", Offset = "0x18F3E3C", VA = "0x18F3E3C")]
			private bool BranchSequenceNode1986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002115")]
			[Address(RVA = "0x18F3E9C", Offset = "0x18F3E9C", VA = "0x18F3E9C")]
			private bool BranchSequenceNode3255()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002116")]
			[Address(RVA = "0x18F3F0C", Offset = "0x18F3F0C", VA = "0x18F3F0C")]
			private bool BranchSequenceNode3404()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002117")]
			[Address(RVA = "0x18F3FC8", Offset = "0x18F3FC8", VA = "0x18F3FC8")]
			private bool BranchSequenceNode3413()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002118")]
			[Address(RVA = "0x18F3FE4", Offset = "0x18F3FE4", VA = "0x18F3FE4")]
			private bool BranchSequenceNode3363()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002119")]
			[Address(RVA = "0x18F406C", Offset = "0x18F406C", VA = "0x18F406C")]
			private bool BranchSequenceNode3373()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211A")]
			[Address(RVA = "0x18F40F4", Offset = "0x18F40F4", VA = "0x18F40F4")]
			private bool BranchSelectorNode2136()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211B")]
			[Address(RVA = "0x18F41BC", Offset = "0x18F41BC", VA = "0x18F41BC")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211C")]
			[Address(RVA = "0x18F41C4", Offset = "0x18F41C4", VA = "0x18F41C4")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211D")]
			[Address(RVA = "0x18F4208", Offset = "0x18F4208", VA = "0x18F4208")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211E")]
			[Address(RVA = "0x18F4368", Offset = "0x18F4368", VA = "0x18F4368")]
			private bool BranchSelectorNode825()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600211F")]
			[Address(RVA = "0x18F43BC", Offset = "0x18F43BC", VA = "0x18F43BC")]
			private bool BranchSelectorNode897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002120")]
			[Address(RVA = "0x18F4464", Offset = "0x18F4464", VA = "0x18F4464")]
			private bool BranchSelectorNode913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002121")]
			[Address(RVA = "0x18F450C", Offset = "0x18F450C", VA = "0x18F450C")]
			private bool BranchSequenceNode3383()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002122")]
			[Address(RVA = "0x18F4594", Offset = "0x18F4594", VA = "0x18F4594")]
			private bool BranchSequenceNode3452()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002123")]
			[Address(RVA = "0x18F461C", Offset = "0x18F461C", VA = "0x18F461C")]
			private bool BranchSequenceNode2700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002124")]
			[Address(RVA = "0x18F46F0", Offset = "0x18F46F0", VA = "0x18F46F0")]
			private bool BranchSequenceNode2701()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002125")]
			[Address(RVA = "0x18F47A4", Offset = "0x18F47A4", VA = "0x18F47A4")]
			private bool BranchSequenceNode2940()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002126")]
			[Address(RVA = "0x18F4820", Offset = "0x18F4820", VA = "0x18F4820")]
			private bool BranchSequenceNode2942()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002127")]
			[Address(RVA = "0x18F48A0", Offset = "0x18F48A0", VA = "0x18F48A0")]
			private bool ActionSendEventNode2944()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002128")]
			[Address(RVA = "0x18F4900", Offset = "0x18F4900", VA = "0x18F4900")]
			private bool EnvironmentSettingsNode2945()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002129")]
			[Address(RVA = "0x18F4960", Offset = "0x18F4960", VA = "0x18F4960")]
			private bool StartAttackNode2946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212A")]
			[Address(RVA = "0x18F49C0", Offset = "0x18F49C0", VA = "0x18F49C0")]
			private bool StartAttackNode2947()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212B")]
			[Address(RVA = "0x18F4A20", Offset = "0x18F4A20", VA = "0x18F4A20")]
			private bool BranchSequenceNode2949()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212C")]
			[Address(RVA = "0x18F4A9C", Offset = "0x18F4A9C", VA = "0x18F4A9C")]
			private bool BranchSequenceNode2952()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212D")]
			[Address(RVA = "0x18F4B10", Offset = "0x18F4B10", VA = "0x18F4B10")]
			private bool BranchSequenceNode3022()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212E")]
			[Address(RVA = "0x18F4B8C", Offset = "0x18F4B8C", VA = "0x18F4B8C")]
			private bool BranchSequenceNode3024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600212F")]
			[Address(RVA = "0x18F4BEC", Offset = "0x18F4BEC", VA = "0x18F4BEC")]
			private bool BranchSequenceNode2956()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002130")]
			[Address(RVA = "0x18F4C9C", Offset = "0x18F4C9C", VA = "0x18F4C9C")]
			private bool EnvironmentSettingsNode2957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002131")]
			[Address(RVA = "0x18F4CFC", Offset = "0x18F4CFC", VA = "0x18F4CFC")]
			private bool StartAttackNode2958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002132")]
			[Address(RVA = "0x18F4D5C", Offset = "0x18F4D5C", VA = "0x18F4D5C")]
			private bool BranchSequenceNode2960()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002133")]
			[Address(RVA = "0x18F4DD8", Offset = "0x18F4DD8", VA = "0x18F4DD8")]
			private bool BranchSequenceNode2964()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x18F4E4C", Offset = "0x18F4E4C", VA = "0x18F4E4C")]
			private bool BranchSequenceNode2970()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002135")]
			[Address(RVA = "0x18F4EF4", Offset = "0x18F4EF4", VA = "0x18F4EF4")]
			private bool BranchSequenceNode2972()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x18F4FBC", Offset = "0x18F4FBC", VA = "0x18F4FBC")]
			private bool BranchSequenceNode2973()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002137")]
			[Address(RVA = "0x18F501C", Offset = "0x18F501C", VA = "0x18F501C")]
			private bool BranchSequenceNode2974()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002138")]
			[Address(RVA = "0x18F507C", Offset = "0x18F507C", VA = "0x18F507C")]
			private bool BranchSequenceNode2976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002139")]
			[Address(RVA = "0x18F50DC", Offset = "0x18F50DC", VA = "0x18F50DC")]
			private bool BranchSequenceNode2977()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213A")]
			[Address(RVA = "0x18F5184", Offset = "0x18F5184", VA = "0x18F5184")]
			private bool BranchSequenceNode2979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x18F51F8", Offset = "0x18F51F8", VA = "0x18F51F8")]
			private bool BranchSequenceNode2986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213C")]
			[Address(RVA = "0x18F52A0", Offset = "0x18F52A0", VA = "0x18F52A0")]
			private bool BranchSequenceNode2987()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213D")]
			[Address(RVA = "0x18F5328", Offset = "0x18F5328", VA = "0x18F5328")]
			private bool BranchSequenceNode2988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213E")]
			[Address(RVA = "0x18F53F0", Offset = "0x18F53F0", VA = "0x18F53F0")]
			private bool BranchSequenceNode2989()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600213F")]
			[Address(RVA = "0x18F5450", Offset = "0x18F5450", VA = "0x18F5450")]
			private bool BranchSequenceNode2990()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002140")]
			[Address(RVA = "0x18F54B0", Offset = "0x18F54B0", VA = "0x18F54B0")]
			private bool BranchSelectorNode3078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x18F554C", Offset = "0x18F554C", VA = "0x18F554C")]
			private bool BranchSequenceNode2992()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002142")]
			[Address(RVA = "0x18F55AC", Offset = "0x18F55AC", VA = "0x18F55AC")]
			private bool BranchSequenceNode2993()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002143")]
			[Address(RVA = "0x18F5680", Offset = "0x18F5680", VA = "0x18F5680")]
			private bool BranchSequenceNode2995()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002144")]
			[Address(RVA = "0x18F57E4", Offset = "0x18F57E4", VA = "0x18F57E4")]
			private bool BranchSequenceNode2996()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002145")]
			[Address(RVA = "0x18F5948", Offset = "0x18F5948", VA = "0x18F5948")]
			private bool BranchSequenceNode2997()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002146")]
			[Address(RVA = "0x18F5B64", Offset = "0x18F5B64", VA = "0x18F5B64")]
			private bool BranchSequenceNode2999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002147")]
			[Address(RVA = "0x18F5BE0", Offset = "0x18F5BE0", VA = "0x18F5BE0")]
			private bool EnvironmentSettingsNode3001()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002148")]
			[Address(RVA = "0x18F5C40", Offset = "0x18F5C40", VA = "0x18F5C40")]
			private bool StartAttackNode3002()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002149")]
			[Address(RVA = "0x18F5CA0", Offset = "0x18F5CA0", VA = "0x18F5CA0")]
			private bool BranchSequenceNode3004()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214A")]
			[Address(RVA = "0x18F5D1C", Offset = "0x18F5D1C", VA = "0x18F5D1C")]
			private bool BranchSequenceNode3007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214B")]
			[Address(RVA = "0x18F5D90", Offset = "0x18F5D90", VA = "0x18F5D90")]
			private bool BranchSequenceNode2107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214C")]
			[Address(RVA = "0x18F5DF0", Offset = "0x18F5DF0", VA = "0x18F5DF0")]
			private bool BranchSequenceNode2114()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x18F5E70", Offset = "0x18F5E70", VA = "0x18F5E70")]
			private bool DistanceCompareNode3396()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214E")]
			[Address(RVA = "0x18F5ED0", Offset = "0x18F5ED0", VA = "0x18F5ED0")]
			private bool ActionLeapNode3398()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600214F")]
			[Address(RVA = "0x18F5F30", Offset = "0x18F5F30", VA = "0x18F5F30")]
			private bool ActionLeapNode3401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002150")]
			[Address(RVA = "0x18F5F90", Offset = "0x18F5F90", VA = "0x18F5F90")]
			private bool RangeCompareNode1971()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002151")]
			[Address(RVA = "0x18F60C0", Offset = "0x18F60C0", VA = "0x18F60C0")]
			private bool ActionWaitNode1989()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002152")]
			[Address(RVA = "0x18F6120", Offset = "0x18F6120", VA = "0x18F6120")]
			private bool RangeCompareNode1999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002153")]
			[Address(RVA = "0x18F6258", Offset = "0x18F6258", VA = "0x18F6258")]
			private bool BranchSequenceNode3456()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002154")]
			[Address(RVA = "0x18F6314", Offset = "0x18F6314", VA = "0x18F6314")]
			private bool BranchSequenceNode3408()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002155")]
			[Address(RVA = "0x18F63E8", Offset = "0x18F63E8", VA = "0x18F63E8")]
			private bool BranchSequenceNode3415()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002156")]
			[Address(RVA = "0x18F6494", Offset = "0x18F6494", VA = "0x18F6494")]
			private bool BranchSequenceNode2138()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002157")]
			[Address(RVA = "0x18F652C", Offset = "0x18F652C", VA = "0x18F652C")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002158")]
			[Address(RVA = "0x18F656C", Offset = "0x18F656C", VA = "0x18F656C")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002159")]
			[Address(RVA = "0x18F6788", Offset = "0x18F6788", VA = "0x18F6788")]
			private bool BranchSequenceNode823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215A")]
			[Address(RVA = "0x18F6894", Offset = "0x18F6894", VA = "0x18F6894")]
			private bool BranchSequenceNode894()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215B")]
			[Address(RVA = "0x18F691C", Offset = "0x18F691C", VA = "0x18F691C")]
			private bool BranchSequenceNode911()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215C")]
			[Address(RVA = "0x18F69A4", Offset = "0x18F69A4", VA = "0x18F69A4")]
			private bool ActionLeapNode3014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215D")]
			[Address(RVA = "0x18F6A04", Offset = "0x18F6A04", VA = "0x18F6A04")]
			private bool BranchSequenceNode3122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x18F6AE4", Offset = "0x18F6AE4", VA = "0x18F6AE4")]
			private bool BranchSequenceNode3125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600215F")]
			[Address(RVA = "0x18F6BAC", Offset = "0x18F6BAC", VA = "0x18F6BAC")]
			private bool BranchSequenceNode3126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002160")]
			[Address(RVA = "0x18F6C0C", Offset = "0x18F6C0C", VA = "0x18F6C0C")]
			private bool BranchSelectorNode3177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002161")]
			[Address(RVA = "0x18F6C6C", Offset = "0x18F6C6C", VA = "0x18F6C6C")]
			private bool ToggleTargetableNode3025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002162")]
			[Address(RVA = "0x18F6CD8", Offset = "0x18F6CD8", VA = "0x18F6CD8")]
			private bool ActionLeapNode3026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002163")]
			[Address(RVA = "0x18F6D38", Offset = "0x18F6D38", VA = "0x18F6D38")]
			private bool BranchSequenceNode3128()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002164")]
			[Address(RVA = "0x18F6E18", Offset = "0x18F6E18", VA = "0x18F6E18")]
			private bool BranchSequenceNode3033()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002165")]
			[Address(RVA = "0x18F6E94", Offset = "0x18F6E94", VA = "0x18F6E94")]
			private bool ToggleTargetableNode3035()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002166")]
			[Address(RVA = "0x18F6EFC", Offset = "0x18F6EFC", VA = "0x18F6EFC")]
			private bool ActionLeapNode3036()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002167")]
			[Address(RVA = "0x18F6F5C", Offset = "0x18F6F5C", VA = "0x18F6F5C")]
			private bool PlayerRestoreDeathsDoor3037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002168")]
			[Address(RVA = "0x18F6FBC", Offset = "0x18F6FBC", VA = "0x18F6FBC")]
			private bool ActionWaitNode3039()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002169")]
			[Address(RVA = "0x18F701C", Offset = "0x18F701C", VA = "0x18F701C")]
			private bool ActionWaitNode3042()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216A")]
			[Address(RVA = "0x18F707C", Offset = "0x18F707C", VA = "0x18F707C")]
			private bool EnvironmentSettingsNode3043()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216B")]
			[Address(RVA = "0x18F70DC", Offset = "0x18F70DC", VA = "0x18F70DC")]
			private bool ActionSendEventNode3044()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216C")]
			[Address(RVA = "0x18F713C", Offset = "0x18F713C", VA = "0x18F713C")]
			private bool ActionWaitNode3046()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216D")]
			[Address(RVA = "0x18F719C", Offset = "0x18F719C", VA = "0x18F719C")]
			private bool ActionWaitNode3049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216E")]
			[Address(RVA = "0x18F71FC", Offset = "0x18F71FC", VA = "0x18F71FC")]
			private bool BranchSequenceNode3050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600216F")]
			[Address(RVA = "0x18F725C", Offset = "0x18F725C", VA = "0x18F725C")]
			private bool ToggleTargetableNode3051()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x18F72C8", Offset = "0x18F72C8", VA = "0x18F72C8")]
			private bool ActionLeapNode3052()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002171")]
			[Address(RVA = "0x18F7328", Offset = "0x18F7328", VA = "0x18F7328")]
			private bool BranchSequenceNode3056()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x18F73A4", Offset = "0x18F73A4", VA = "0x18F73A4")]
			private bool BranchSequenceNode3138()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002173")]
			[Address(RVA = "0x18F7484", Offset = "0x18F7484", VA = "0x18F7484")]
			private bool BranchSequenceNode3060()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002174")]
			[Address(RVA = "0x18F7500", Offset = "0x18F7500", VA = "0x18F7500")]
			private bool EnvironmentSettingsNode3062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002175")]
			[Address(RVA = "0x18F7560", Offset = "0x18F7560", VA = "0x18F7560")]
			private bool ToggleTargetableNode3064()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002176")]
			[Address(RVA = "0x18F75C8", Offset = "0x18F75C8", VA = "0x18F75C8")]
			private bool ActionLeapNode3065()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002177")]
			[Address(RVA = "0x18F7628", Offset = "0x18F7628", VA = "0x18F7628")]
			private bool PlayerRestoreDeathsDoor3068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002178")]
			[Address(RVA = "0x18F7688", Offset = "0x18F7688", VA = "0x18F7688")]
			private bool ActionWaitNode3070()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002179")]
			[Address(RVA = "0x18F76E8", Offset = "0x18F76E8", VA = "0x18F76E8")]
			private bool ActionWaitNode3073()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217A")]
			[Address(RVA = "0x18F7748", Offset = "0x18F7748", VA = "0x18F7748")]
			private bool EnvironmentSettingsNode3074()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217B")]
			[Address(RVA = "0x18F77A8", Offset = "0x18F77A8", VA = "0x18F77A8")]
			private bool ActionWaitNode3075()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217C")]
			[Address(RVA = "0x18F7808", Offset = "0x18F7808", VA = "0x18F7808")]
			private bool ActionSendEventNode3076()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217D")]
			[Address(RVA = "0x18F7868", Offset = "0x18F7868", VA = "0x18F7868")]
			private bool BranchSequenceNode3183()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217E")]
			[Address(RVA = "0x18F78C8", Offset = "0x18F78C8", VA = "0x18F78C8")]
			private bool ActionWaitNode3079()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600217F")]
			[Address(RVA = "0x18F7928", Offset = "0x18F7928", VA = "0x18F7928")]
			private bool ToggleTargetableNode3080()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002180")]
			[Address(RVA = "0x18F79AC", Offset = "0x18F79AC", VA = "0x18F79AC")]
			private bool BranchSequenceNode3081()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x18F7A0C", Offset = "0x18F7A0C", VA = "0x18F7A0C")]
			private bool ToggleTargetableNode3082()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x18F7A94", Offset = "0x18F7A94", VA = "0x18F7A94")]
			private bool ActionLeapNode3083()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x18F7AF4", Offset = "0x18F7AF4", VA = "0x18F7AF4")]
			private bool EnvironmentSettingsNode3085()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002184")]
			[Address(RVA = "0x18F7B54", Offset = "0x18F7B54", VA = "0x18F7B54")]
			private bool BranchSequenceNode3087()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002185")]
			[Address(RVA = "0x18F7BD0", Offset = "0x18F7BD0", VA = "0x18F7BD0")]
			private bool BranchSequenceNode3098()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002186")]
			[Address(RVA = "0x18F7C3C", Offset = "0x18F7C3C", VA = "0x18F7C3C")]
			private bool BranchSequenceNode3100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002187")]
			[Address(RVA = "0x18F7CB0", Offset = "0x18F7CB0", VA = "0x18F7CB0")]
			private bool BranchSequenceNode3103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002188")]
			[Address(RVA = "0x18F7EF4", Offset = "0x18F7EF4", VA = "0x18F7EF4")]
			private bool BranchSequenceNode3104()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002189")]
			[Address(RVA = "0x18F7FD8", Offset = "0x18F7FD8", VA = "0x18F7FD8")]
			private bool BranchSequenceNode3166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218A")]
			[Address(RVA = "0x18F80B8", Offset = "0x18F80B8", VA = "0x18F80B8")]
			private bool DistanceCompareNode2106()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218B")]
			[Address(RVA = "0x18F8118", Offset = "0x18F8118", VA = "0x18F8118")]
			private bool ActionLeapNode2109()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218C")]
			[Address(RVA = "0x18F8178", Offset = "0x18F8178", VA = "0x18F8178")]
			private bool ActionLeapNode2113()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218D")]
			[Address(RVA = "0x18F81D8", Offset = "0x18F81D8", VA = "0x18F81D8")]
			private bool BranchSequenceNode3460()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x18F82AC", Offset = "0x18F82AC", VA = "0x18F82AC")]
			private bool BranchSequenceNode3416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600218F")]
			[Address(RVA = "0x18F8340", Offset = "0x18F8340", VA = "0x18F8340")]
			private bool BranchSequenceNode3425()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002190")]
			[Address(RVA = "0x18F83DC", Offset = "0x18F83DC", VA = "0x18F83DC")]
			private bool BranchSequenceNode3466()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002191")]
			[Address(RVA = "0x18F8498", Offset = "0x18F8498", VA = "0x18F8498")]
			private bool RangeCompareNode2139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002192")]
			[Address(RVA = "0x18F85D0", Offset = "0x18F85D0", VA = "0x18F85D0")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002193")]
			[Address(RVA = "0x18F86EC", Offset = "0x18F86EC", VA = "0x18F86EC")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002194")]
			[Address(RVA = "0x18F8784", Offset = "0x18F8784", VA = "0x18F8784")]
			private bool RangeCompareNode926()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002195")]
			[Address(RVA = "0x18F88BC", Offset = "0x18F88BC", VA = "0x18F88BC")]
			private bool BranchSequenceNode1141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002196")]
			[Address(RVA = "0x18F8910", Offset = "0x18F8910", VA = "0x18F8910")]
			private bool BranchSequenceNode1217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002197")]
			[Address(RVA = "0x18F8964", Offset = "0x18F8964", VA = "0x18F8964")]
			private bool BranchSequenceNode1221()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x18F89B8", Offset = "0x18F89B8", VA = "0x18F89B8")]
			private bool RangeCompareNode824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002199")]
			[Address(RVA = "0x18F8AF0", Offset = "0x18F8AF0", VA = "0x18F8AF0")]
			private bool ToggleTargetableNode3170()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219A")]
			[Address(RVA = "0x18F8B58", Offset = "0x18F8B58", VA = "0x18F8B58")]
			private bool ActionLeapNode3171()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219B")]
			[Address(RVA = "0x18F8BB8", Offset = "0x18F8BB8", VA = "0x18F8BB8")]
			private bool PlayerRestoreDeathsDoor3173()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219C")]
			[Address(RVA = "0x18F8C18", Offset = "0x18F8C18", VA = "0x18F8C18")]
			private bool ActionWaitNode3175()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219D")]
			[Address(RVA = "0x18F8C78", Offset = "0x18F8C78", VA = "0x18F8C78")]
			private bool BranchSequenceNode3197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219E")]
			[Address(RVA = "0x18F8CD8", Offset = "0x18F8CD8", VA = "0x18F8CD8")]
			private bool ActionWaitNode3134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600219F")]
			[Address(RVA = "0x18F8D38", Offset = "0x18F8D38", VA = "0x18F8D38")]
			private bool ActionWaitNode3191()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x18F8D98", Offset = "0x18F8D98", VA = "0x18F8D98")]
			private bool BranchSequenceNode3192()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x18F8E98", Offset = "0x18F8E98", VA = "0x18F8E98")]
			private bool ActionWaitNode3193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x18F8EF8", Offset = "0x18F8EF8", VA = "0x18F8EF8")]
			private bool ActionWaitNode3146()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x18F8F58", Offset = "0x18F8F58", VA = "0x18F8F58")]
			private bool BranchSequenceNode3185()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x18F9038", Offset = "0x18F9038", VA = "0x18F9038")]
			private bool BranchSelectorNode3426()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x18F90E4", Offset = "0x18F90E4", VA = "0x18F90E4")]
			private bool BranchSequenceNode3475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x18F9230", Offset = "0x18F9230", VA = "0x18F9230")]
			private bool BranchSequenceNode3470()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x18F9304", Offset = "0x18F9304", VA = "0x18F9304")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x18F9374", Offset = "0x18F9374", VA = "0x18F9374")]
			private bool BranchSelectorNode612()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x18F93AC", Offset = "0x18F93AC", VA = "0x18F93AC")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x18F94CC", Offset = "0x18F94CC", VA = "0x18F94CC")]
			private bool BranchSequenceNode3201()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x18F952C", Offset = "0x18F952C", VA = "0x18F952C")]
			private bool BranchSequenceNode3202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x18F958C", Offset = "0x18F958C", VA = "0x18F958C")]
			private bool BranchSequenceNode3203()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x18F95EC", Offset = "0x18F95EC", VA = "0x18F95EC")]
			private bool StartAttackNode3199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x18F964C", Offset = "0x18F964C", VA = "0x18F964C")]
			private bool BranchSequenceNode3482()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x18F96D4", Offset = "0x18F96D4", VA = "0x18F96D4")]
			private bool BranchSequenceNode614()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x18F97E4", Offset = "0x18F97E4", VA = "0x18F97E4")]
			private bool BranchSelectorNode845()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x18F993C", Offset = "0x18F993C", VA = "0x18F993C")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x18F99C0", Offset = "0x18F99C0", VA = "0x18F99C0")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x18F9A74", Offset = "0x18F9A74", VA = "0x18F9A74")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x18F9AF8", Offset = "0x18F9AF8", VA = "0x18F9AF8")]
			private bool StartAttackNode3206()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x18F9B58", Offset = "0x18F9B58", VA = "0x18F9B58")]
			private bool ActionWaitNode3207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x18F9BB8", Offset = "0x18F9BB8", VA = "0x18F9BB8")]
			private bool StartAttackNode3208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x18F9C18", Offset = "0x18F9C18", VA = "0x18F9C18")]
			private bool ActionWaitNode3209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x18F9C78", Offset = "0x18F9C78", VA = "0x18F9C78")]
			private bool StartAttackNode3210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x18F9CD8", Offset = "0x18F9CD8", VA = "0x18F9CD8")]
			private bool StartAttackNode3211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x18F9D38", Offset = "0x18F9D38", VA = "0x18F9D38")]
			private bool StartAttackNode3213()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x18F9D98", Offset = "0x18F9D98", VA = "0x18F9D98")]
			private bool StartAttackNode3214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x18F9DF8", Offset = "0x18F9DF8", VA = "0x18F9DF8")]
			private bool StartAttackNode3215()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x18F9E58", Offset = "0x18F9E58", VA = "0x18F9E58")]
			private bool StartAttackNode3216()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x18F9EB8", Offset = "0x18F9EB8", VA = "0x18F9EB8")]
			private bool BranchSelectorNode2121()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x18F9F50", Offset = "0x18F9F50", VA = "0x18F9F50")]
			private bool BranchSelectorNode826()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0x18FA008", Offset = "0x18FA008", VA = "0x18FA008")]
			private bool BranchSequenceNode1692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x18FA0A8", Offset = "0x18FA0A8", VA = "0x18FA0A8")]
			private bool BranchSequenceNode846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x18FA148", Offset = "0x18FA148", VA = "0x18FA148")]
			private bool BranchRandomNode1185()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x18FA1A8", Offset = "0x18FA1A8", VA = "0x18FA1A8")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x18FA220", Offset = "0x18FA220", VA = "0x18FA220")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x18FA2E4", Offset = "0x18FA2E4", VA = "0x18FA2E4")]
			private bool BranchSequenceNode2122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x18FA364", Offset = "0x18FA364", VA = "0x18FA364")]
			private bool BranchSequenceNode827()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x18FA418", Offset = "0x18FA418", VA = "0x18FA418")]
			private bool BranchSequenceNode1755()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x18FA4B8", Offset = "0x18FA4B8", VA = "0x18FA4B8")]
			private bool BranchRandomNode1688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x18FA518", Offset = "0x18FA518", VA = "0x18FA518")]
			private bool BranchRandomNode1040()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x18FA578", Offset = "0x18FA578", VA = "0x18FA578")]
			private bool StartAttackNode1178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x18FA5D8", Offset = "0x18FA5D8", VA = "0x18FA5D8")]
			private bool StartAttackNode1179()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x18FA638", Offset = "0x18FA638", VA = "0x18FA638")]
			private bool StartAttackNode1180()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x18FA698", Offset = "0x18FA698", VA = "0x18FA698")]
			private bool StartAttackNode1181()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x18FA6F8", Offset = "0x18FA6F8", VA = "0x18FA6F8")]
			private bool StartAttackNode1182()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x18FA758", Offset = "0x18FA758", VA = "0x18FA758")]
			private bool StartAttackNode1184()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x18FA7B8", Offset = "0x18FA7B8", VA = "0x18FA7B8")]
			private bool StartAttackNode1186()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x18FA818", Offset = "0x18FA818", VA = "0x18FA818")]
			private bool StartAttackNode1187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x18FA878", Offset = "0x18FA878", VA = "0x18FA878")]
			private bool StartAttackNode1188()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x18FA8D8", Offset = "0x18FA8D8", VA = "0x18FA8D8")]
			private bool StartAttackNode1189()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x18FA938", Offset = "0x18FA938", VA = "0x18FA938")]
			private bool StartAttackNode1190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x18FA998", Offset = "0x18FA998", VA = "0x18FA998")]
			private bool BranchSelectorNode2162()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x18FAA38", Offset = "0x18FAA38", VA = "0x18FAA38")]
			private bool BranchRandomNode90()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x18FAA98", Offset = "0x18FAA98", VA = "0x18FAA98")]
			private bool BranchRandomNode1206()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x18FAAF8", Offset = "0x18FAAF8", VA = "0x18FAAF8")]
			private bool StartAttackNode1690()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x18FAB58", Offset = "0x18FAB58", VA = "0x18FAB58")]
			private bool StartAttackNode1691()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x18FABB8", Offset = "0x18FABB8", VA = "0x18FABB8")]
			private bool StartAttackNode1689()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x18FAC18", Offset = "0x18FAC18", VA = "0x18FAC18")]
			private bool StartAttackNode1685()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x18FAC78", Offset = "0x18FAC78", VA = "0x18FAC78")]
			private bool StartAttackNode1686()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x18FACD8", Offset = "0x18FACD8", VA = "0x18FACD8")]
			private bool StartAttackNode1687()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x18FAD38", Offset = "0x18FAD38", VA = "0x18FAD38")]
			private bool StartAttackNode1683()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x18FAD98", Offset = "0x18FAD98", VA = "0x18FAD98")]
			private bool StartAttackNode1682()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x18FADF8", Offset = "0x18FADF8", VA = "0x18FADF8")]
			private bool StartAttackNode1029()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x18FAE58", Offset = "0x18FAE58", VA = "0x18FAE58")]
			private bool StartAttackNode1030()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x18FAEB8", Offset = "0x18FAEB8", VA = "0x18FAEB8")]
			private bool StartAttackNode1031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x18FAF18", Offset = "0x18FAF18", VA = "0x18FAF18")]
			private bool StartAttackNode1032()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x18FAF78", Offset = "0x18FAF78", VA = "0x18FAF78")]
			private bool StartAttackNode1033()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x18FAFD8", Offset = "0x18FAFD8", VA = "0x18FAFD8")]
			private bool StartAttackNode1034()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x18FB038", Offset = "0x18FB038", VA = "0x18FB038")]
			private bool StartAttackNode1046()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x18FB098", Offset = "0x18FB098", VA = "0x18FB098")]
			private bool StartAttackNode1177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x18FB0F8", Offset = "0x18FB0F8", VA = "0x18FB0F8")]
			private bool StartAttackNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x18FB158", Offset = "0x18FB158", VA = "0x18FB158")]
			private bool StartAttackNode1027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x18FB1B8", Offset = "0x18FB1B8", VA = "0x18FB1B8")]
			private bool StartAttackNode1028()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021EB")]
			[Address(RVA = "0x18FB218", Offset = "0x18FB218", VA = "0x18FB218")]
			private bool StartAttackNode1191()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x18FB278", Offset = "0x18FB278", VA = "0x18FB278")]
			private bool StartAttackNode1192()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x18FB2D8", Offset = "0x18FB2D8", VA = "0x18FB2D8")]
			private bool StartAttackNode1193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x18FB338", Offset = "0x18FB338", VA = "0x18FB338")]
			private bool StartAttackNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x18FB398", Offset = "0x18FB398", VA = "0x18FB398")]
			private bool StartAttackNode1195()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x18FB3F8", Offset = "0x18FB3F8", VA = "0x18FB3F8")]
			private bool StartAttackNode1196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x18FB458", Offset = "0x18FB458", VA = "0x18FB458")]
			private bool StartAttackNode1197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F2")]
			[Address(RVA = "0x18FB4B8", Offset = "0x18FB4B8", VA = "0x18FB4B8")]
			private bool StartAttackNode1198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x18FB518", Offset = "0x18FB518", VA = "0x18FB518")]
			private bool StartAttackNode1199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x18FB578", Offset = "0x18FB578", VA = "0x18FB578")]
			private bool StartAttackNode1200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x18FB5D8", Offset = "0x18FB5D8", VA = "0x18FB5D8")]
			private bool StartAttackNode1201()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x18FB638", Offset = "0x18FB638", VA = "0x18FB638")]
			private bool StartAttackNode1202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x18FB698", Offset = "0x18FB698", VA = "0x18FB698")]
			private bool StartAttackNode1203()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x18FB6F8", Offset = "0x18FB6F8", VA = "0x18FB6F8")]
			private bool StartAttackNode1204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x18FB758", Offset = "0x18FB758", VA = "0x18FB758")]
			private bool StartAttackNode1205()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x18FB7B8", Offset = "0x18FB7B8", VA = "0x18FB7B8")]
			private bool StartAttackNode1207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x18FB818", Offset = "0x18FB818", VA = "0x18FB818")]
			private bool StartAttackNode1208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x18FB878", Offset = "0x18FB878", VA = "0x18FB878")]
			private bool StartAttackNode1209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x18FB8D8", Offset = "0x18FB8D8", VA = "0x18FB8D8")]
			private bool StartAttackNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x18FB938", Offset = "0x18FB938", VA = "0x18FB938")]
			private bool StartAttackNode1211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x18FB998", Offset = "0x18FB998", VA = "0x18FB998")]
			private bool StartAttackNode1212()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002200")]
			[Address(RVA = "0x18FB9F8", Offset = "0x18FB9F8", VA = "0x18FB9F8")]
			private bool StartAttackNode1213()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable NumTimesHeartExposed;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IntVariable ArmamentInspectionUISuppression;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public FloatVariable In_GuardRestoreRate;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public IntVariable DifficultyLevel;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public IntVariable DifficultyLevel_Hard;

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x18DCDD0", Offset = "0x18DCDD0", VA = "0x18DCDD0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x18DCF60", Offset = "0x18DCF60", VA = "0x18DCF60", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x18DD068", Offset = "0x18DD068", VA = "0x18DD068")]
		public AetherHorrorCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A81B8", Offset = "0x8A81B8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A81B8", Offset = "0x8A81B8")]
	public class AngleDistanceUpdateNode : GeneratedActionNode
	{
		[Token(Token = "0x20005A7")]
		public class AngleDistanceUpdateNodeRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly AngleDistanceUpdateNode _source;

			[Token(Token = "0x6002201")]
			[Address(RVA = "0xB26678", Offset = "0xB26678", VA = "0xB26678")]
			public AngleDistanceUpdateNodeRuntime(AngleDistanceUpdateNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002202")]
			[Address(RVA = "0xB266B4", Offset = "0xB266B4", VA = "0xB266B4", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002203")]
			[Address(RVA = "0xB267D0", Offset = "0xB267D0", VA = "0xB267D0")]
			private bool BranchSelectorNode55()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002204")]
			[Address(RVA = "0xB2683C", Offset = "0xB2683C", VA = "0xB2683C")]
			private bool BranchSelectorNode42()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002205")]
			[Address(RVA = "0xB268A8", Offset = "0xB268A8", VA = "0xB268A8")]
			private bool BranchSelectorNode30()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002206")]
			[Address(RVA = "0xB268E8", Offset = "0xB268E8", VA = "0xB268E8")]
			private bool BranchSequenceNode18()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002207")]
			[Address(RVA = "0xB269F8", Offset = "0xB269F8", VA = "0xB269F8")]
			private bool BranchSequenceNode9()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002208")]
			[Address(RVA = "0xB26AE0", Offset = "0xB26AE0", VA = "0xB26AE0")]
			private bool BranchSequenceNode4()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002209")]
			[Address(RVA = "0xB26B38", Offset = "0xB26B38", VA = "0xB26B38")]
			private bool BranchSequenceNode59()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220A")]
			[Address(RVA = "0xB26BD8", Offset = "0xB26BD8", VA = "0xB26BD8")]
			private bool BranchSequenceNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220B")]
			[Address(RVA = "0xB26C3C", Offset = "0xB26C3C", VA = "0xB26C3C")]
			private bool BranchSequenceNode46()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220C")]
			[Address(RVA = "0xB26CDC", Offset = "0xB26CDC", VA = "0xB26CDC")]
			private bool BranchSequenceNode38()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220D")]
			[Address(RVA = "0xB26D40", Offset = "0xB26D40", VA = "0xB26D40")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220E")]
			[Address(RVA = "0xB26EA4", Offset = "0xB26EA4", VA = "0xB26EA4")]
			private bool BranchSequenceNode24()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600220F")]
			[Address(RVA = "0xB26FEC", Offset = "0xB26FEC", VA = "0xB26FEC")]
			private bool BranchSelectorNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002210")]
			[Address(RVA = "0xB2702C", Offset = "0xB2702C", VA = "0xB2702C")]
			private bool BranchSequenceNode79()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002211")]
			[Address(RVA = "0xB27178", Offset = "0xB27178", VA = "0xB27178")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002212")]
			[Address(RVA = "0xB27218", Offset = "0xB27218", VA = "0xB27218")]
			private bool BranchSequenceNode67()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002213")]
			[Address(RVA = "0xB272B0", Offset = "0xB272B0", VA = "0xB272B0")]
			private bool BranchSequenceNode89()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002214")]
			[Address(RVA = "0xB273FC", Offset = "0xB273FC", VA = "0xB273FC")]
			private bool BranchSequenceNode62()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002215")]
			[Address(RVA = "0xB27574", Offset = "0xB27574", VA = "0xB27574")]
			private bool RangeCompareNode1()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002216")]
			[Address(RVA = "0xB276A4", Offset = "0xB276A4", VA = "0xB276A4")]
			private bool BranchSequenceNode56()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002217")]
			[Address(RVA = "0xB2770C", Offset = "0xB2770C", VA = "0xB2770C")]
			private bool RangeCompareNode49()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002218")]
			[Address(RVA = "0xB27844", Offset = "0xB27844", VA = "0xB27844")]
			private bool BranchSequenceNode45()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002219")]
			[Address(RVA = "0xB278AC", Offset = "0xB278AC", VA = "0xB278AC")]
			private bool RangeCompareNode40()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221A")]
			[Address(RVA = "0xB279E4", Offset = "0xB279E4", VA = "0xB279E4")]
			private bool RangeCompareNode22()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221B")]
			[Address(RVA = "0xB27B1C", Offset = "0xB27B1C", VA = "0xB27B1C")]
			private bool RangeCompareNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221C")]
			[Address(RVA = "0xB27C54", Offset = "0xB27C54", VA = "0xB27C54")]
			private bool BranchSequenceNode86()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221D")]
			[Address(RVA = "0xB27CDC", Offset = "0xB27CDC", VA = "0xB27CDC")]
			private bool RangeCompareNode11()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221E")]
			[Address(RVA = "0xB27E14", Offset = "0xB27E14", VA = "0xB27E14")]
			private bool BranchSequenceNode96()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600221F")]
			[Address(RVA = "0xB27E9C", Offset = "0xB27E9C", VA = "0xB27E9C")]
			private bool RangeCompareNode58()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002220")]
			[Address(RVA = "0xB27FD4", Offset = "0xB27FD4", VA = "0xB27FD4")]
			private bool RangeCompareNode48()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xB265B4", Offset = "0xB265B4", VA = "0xB265B4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xB266AC", Offset = "0xB266AC", VA = "0xB266AC")]
		public AngleDistanceUpdateNode()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8274", Offset = "0x8A8274")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8274", Offset = "0x8A8274")]
	public class BossCaptainCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005A8")]
		public class BossCaptainCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000604")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly BossCaptainCombatantBehavior_hybrid _source;

			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x6002221")]
			[Address(RVA = "0xB28800", Offset = "0xB28800", VA = "0xB28800")]
			public BossCaptainCombatantBehavior_hybridRuntime(BossCaptainCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0xB29344", Offset = "0xB29344", VA = "0xB29344", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0xB28860", Offset = "0xB28860", VA = "0xB28860")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002224")]
			[Address(RVA = "0xB29374", Offset = "0xB29374", VA = "0xB29374", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002225")]
			[Address(RVA = "0xB293D4", Offset = "0xB293D4", VA = "0xB293D4")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002226")]
			[Address(RVA = "0xB295D4", Offset = "0xB295D4", VA = "0xB295D4")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002227")]
			[Address(RVA = "0xB29700", Offset = "0xB29700", VA = "0xB29700")]
			private bool BranchSequenceNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002228")]
			[Address(RVA = "0xB29708", Offset = "0xB29708", VA = "0xB29708")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002229")]
			[Address(RVA = "0xB2980C", Offset = "0xB2980C", VA = "0xB2980C")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222A")]
			[Address(RVA = "0xB29880", Offset = "0xB29880", VA = "0xB29880")]
			private bool BranchSelectorNode1432()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222B")]
			[Address(RVA = "0xB2994C", Offset = "0xB2994C", VA = "0xB2994C")]
			private bool BranchSelectorNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222C")]
			[Address(RVA = "0xB299E0", Offset = "0xB299E0", VA = "0xB299E0")]
			private bool BranchSelectorNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222D")]
			[Address(RVA = "0xB29A20", Offset = "0xB29A20", VA = "0xB29A20")]
			private bool BranchSelectorNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222E")]
			[Address(RVA = "0xB29AA8", Offset = "0xB29AA8", VA = "0xB29AA8")]
			private bool BranchSelectorNode1284()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600222F")]
			[Address(RVA = "0xB29AF4", Offset = "0xB29AF4", VA = "0xB29AF4")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002230")]
			[Address(RVA = "0xB29C5C", Offset = "0xB29C5C", VA = "0xB29C5C")]
			private bool BranchSelectorNode193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002231")]
			[Address(RVA = "0xB29D14", Offset = "0xB29D14", VA = "0xB29D14")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002232")]
			[Address(RVA = "0xB29DF0", Offset = "0xB29DF0", VA = "0xB29DF0")]
			private bool BranchSelectorNode1573()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002233")]
			[Address(RVA = "0xB29F0C", Offset = "0xB29F0C", VA = "0xB29F0C")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002234")]
			[Address(RVA = "0xB29F70", Offset = "0xB29F70", VA = "0xB29F70")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002235")]
			[Address(RVA = "0xB2A084", Offset = "0xB2A084", VA = "0xB2A084")]
			private bool BranchSelectorNode1436()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002236")]
			[Address(RVA = "0xB2A13C", Offset = "0xB2A13C", VA = "0xB2A13C")]
			private bool BranchSelectorNode1437()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002237")]
			[Address(RVA = "0xB2A1DC", Offset = "0xB2A1DC", VA = "0xB2A1DC")]
			private bool BranchSelectorNode1438()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002238")]
			[Address(RVA = "0xB2A2AC", Offset = "0xB2A2AC", VA = "0xB2A2AC")]
			private bool BranchSequenceNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002239")]
			[Address(RVA = "0xB2A32C", Offset = "0xB2A32C", VA = "0xB2A32C")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223A")]
			[Address(RVA = "0xB2A4AC", Offset = "0xB2A4AC", VA = "0xB2A4AC")]
			private bool BranchSequenceNode692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223B")]
			[Address(RVA = "0xB2A538", Offset = "0xB2A538", VA = "0xB2A538")]
			private bool BranchSequenceNode1839()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223C")]
			[Address(RVA = "0xB2A6B4", Offset = "0xB2A6B4", VA = "0xB2A6B4")]
			private bool BranchSequenceNode1391()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223D")]
			[Address(RVA = "0xB2A718", Offset = "0xB2A718", VA = "0xB2A718")]
			private bool BranchSelectorNode1650()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223E")]
			[Address(RVA = "0xB2A758", Offset = "0xB2A758", VA = "0xB2A758")]
			private bool BranchSequenceNode1285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600223F")]
			[Address(RVA = "0xB2A798", Offset = "0xB2A798", VA = "0xB2A798")]
			private bool BranchSequenceNode1679()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002240")]
			[Address(RVA = "0xB2A990", Offset = "0xB2A990", VA = "0xB2A990")]
			private bool BranchSequenceNode1820()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002241")]
			[Address(RVA = "0xB2AA4C", Offset = "0xB2AA4C", VA = "0xB2AA4C")]
			private bool BranchSequenceNode1829()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002242")]
			[Address(RVA = "0xB2AB98", Offset = "0xB2AB98", VA = "0xB2AB98")]
			private bool BranchSequenceNode194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002243")]
			[Address(RVA = "0xB2AC14", Offset = "0xB2AC14", VA = "0xB2AC14")]
			private bool ToggleHeadLookIK199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002244")]
			[Address(RVA = "0xB2AC74", Offset = "0xB2AC74", VA = "0xB2AC74")]
			private bool BranchSequenceNode1563()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002245")]
			[Address(RVA = "0xB2ADC0", Offset = "0xB2ADC0", VA = "0xB2ADC0")]
			private bool ActionWaitNode1236()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002246")]
			[Address(RVA = "0xB2AE20", Offset = "0xB2AE20", VA = "0xB2AE20")]
			private bool BranchSelectorNode1083()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002247")]
			[Address(RVA = "0xB2AEC0", Offset = "0xB2AEC0", VA = "0xB2AEC0")]
			private bool BranchSelectorNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002248")]
			[Address(RVA = "0xB2AF58", Offset = "0xB2AF58", VA = "0xB2AF58")]
			private bool BranchSelectorNode1580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002249")]
			[Address(RVA = "0xB2AFC4", Offset = "0xB2AFC4", VA = "0xB2AFC4")]
			private bool BranchSelectorNode1581()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224A")]
			[Address(RVA = "0xB2B030", Offset = "0xB2B030", VA = "0xB2B030")]
			private bool BranchSelectorNode1582()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224B")]
			[Address(RVA = "0xB2B070", Offset = "0xB2B070", VA = "0xB2B070")]
			private bool BranchSequenceNode1583()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224C")]
			[Address(RVA = "0xB2B180", Offset = "0xB2B180", VA = "0xB2B180")]
			private bool BranchSequenceNode1584()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224D")]
			[Address(RVA = "0xB2B268", Offset = "0xB2B268", VA = "0xB2B268")]
			private bool BranchSequenceNode1585()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224E")]
			[Address(RVA = "0xB2B2C0", Offset = "0xB2B2C0", VA = "0xB2B2C0")]
			private bool BranchSelectorNode1387()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600224F")]
			[Address(RVA = "0xB2B324", Offset = "0xB2B324", VA = "0xB2B324")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002250")]
			[Address(RVA = "0xB2B3B0", Offset = "0xB2B3B0", VA = "0xB2B3B0")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002251")]
			[Address(RVA = "0xB2B45C", Offset = "0xB2B45C", VA = "0xB2B45C")]
			private bool BranchSequenceNode1439()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002252")]
			[Address(RVA = "0xB2B508", Offset = "0xB2B508", VA = "0xB2B508")]
			private bool BranchSequenceNode1440()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002253")]
			[Address(RVA = "0xB2B5C0", Offset = "0xB2B5C0", VA = "0xB2B5C0")]
			private bool BranchSequenceNode1441()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002254")]
			[Address(RVA = "0xB2B648", Offset = "0xB2B648", VA = "0xB2B648")]
			private bool BranchSequenceNode1443()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002255")]
			[Address(RVA = "0xB2B6AC", Offset = "0xB2B6AC", VA = "0xB2B6AC")]
			private bool BranchSequenceNode1444()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002256")]
			[Address(RVA = "0xB2B72C", Offset = "0xB2B72C", VA = "0xB2B72C")]
			private bool BranchSequenceNode1445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002257")]
			[Address(RVA = "0xB2B870", Offset = "0xB2B870", VA = "0xB2B870")]
			private bool BranchSequenceNode1446()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002258")]
			[Address(RVA = "0xB2B954", Offset = "0xB2B954", VA = "0xB2B954")]
			private bool BranchSelectorNode770()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002259")]
			[Address(RVA = "0xB2B9B8", Offset = "0xB2B9B8", VA = "0xB2B9B8")]
			private bool BranchSelectorNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225A")]
			[Address(RVA = "0xB2BA80", Offset = "0xB2BA80", VA = "0xB2BA80")]
			private bool BranchSequenceNode1856()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225B")]
			[Address(RVA = "0xB2BA9C", Offset = "0xB2BA9C", VA = "0xB2BA9C")]
			private bool BranchSequenceNode1395()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225C")]
			[Address(RVA = "0xB2BBF8", Offset = "0xB2BBF8", VA = "0xB2BBF8")]
			private bool BranchSequenceNode1651()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225D")]
			[Address(RVA = "0xB2BCB4", Offset = "0xB2BCB4", VA = "0xB2BCB4")]
			private bool BranchSequenceNode1652()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225E")]
			[Address(RVA = "0xB2BD70", Offset = "0xB2BD70", VA = "0xB2BD70")]
			private bool BranchSequenceNode1407()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600225F")]
			[Address(RVA = "0xB2BE24", Offset = "0xB2BE24", VA = "0xB2BE24")]
			private bool BranchSequenceNode1292()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002260")]
			[Address(RVA = "0xB2BEE0", Offset = "0xB2BEE0", VA = "0xB2BEE0")]
			private bool BranchSequenceNode1680()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002261")]
			[Address(RVA = "0xB2BF40", Offset = "0xB2BF40", VA = "0xB2BF40")]
			private bool BranchSequenceNode1688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xB2BFC0", Offset = "0xB2BFC0", VA = "0xB2BFC0")]
			private bool BranchSequenceNode1689()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002263")]
			[Address(RVA = "0xB2C064", Offset = "0xB2C064", VA = "0xB2C064")]
			private bool BranchSequenceNode1683()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xB2C0B4", Offset = "0xB2C0B4", VA = "0xB2C0B4")]
			private bool BranchSequenceNode1692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002265")]
			[Address(RVA = "0xB2C154", Offset = "0xB2C154", VA = "0xB2C154")]
			private bool BranchSequenceNode1685()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002266")]
			[Address(RVA = "0xB2C188", Offset = "0xB2C188", VA = "0xB2C188")]
			private bool BranchSequenceNode1824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002267")]
			[Address(RVA = "0xB2C25C", Offset = "0xB2C25C", VA = "0xB2C25C")]
			private bool BranchSequenceNode1836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002268")]
			[Address(RVA = "0xB2C2E4", Offset = "0xB2C2E4", VA = "0xB2C2E4")]
			private bool BranchSelectorNode197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002269")]
			[Address(RVA = "0xB2C468", Offset = "0xB2C468", VA = "0xB2C468")]
			private bool ToggleHeadLookIK198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226A")]
			[Address(RVA = "0xB2C4C8", Offset = "0xB2C4C8", VA = "0xB2C4C8")]
			private bool BranchSequenceNode1570()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226B")]
			[Address(RVA = "0xB2C550", Offset = "0xB2C550", VA = "0xB2C550")]
			private bool BranchSequenceNode1084()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226C")]
			[Address(RVA = "0xB2C5E8", Offset = "0xB2C5E8", VA = "0xB2C5E8")]
			private bool BranchSequenceNode1178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226D")]
			[Address(RVA = "0xB2C6C4", Offset = "0xB2C6C4", VA = "0xB2C6C4")]
			private bool BranchSequenceNode1268()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226E")]
			[Address(RVA = "0xB2C740", Offset = "0xB2C740", VA = "0xB2C740")]
			private bool BranchSequenceNode1586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600226F")]
			[Address(RVA = "0xB2C7E0", Offset = "0xB2C7E0", VA = "0xB2C7E0")]
			private bool BranchSequenceNode1609()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002270")]
			[Address(RVA = "0xB2C844", Offset = "0xB2C844", VA = "0xB2C844")]
			private bool BranchSequenceNode1588()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002271")]
			[Address(RVA = "0xB2C8E4", Offset = "0xB2C8E4", VA = "0xB2C8E4")]
			private bool BranchSequenceNode1612()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002272")]
			[Address(RVA = "0xB2C948", Offset = "0xB2C948", VA = "0xB2C948")]
			private bool BranchSequenceNode1590()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002273")]
			[Address(RVA = "0xB2CAAC", Offset = "0xB2CAAC", VA = "0xB2CAAC")]
			private bool BranchSequenceNode1591()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002274")]
			[Address(RVA = "0xB2CBF4", Offset = "0xB2CBF4", VA = "0xB2CBF4")]
			private bool BranchSelectorNode1594()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002275")]
			[Address(RVA = "0xB2CC34", Offset = "0xB2CC34", VA = "0xB2CC34")]
			private bool BranchSequenceNode1886()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002276")]
			[Address(RVA = "0xB2CD80", Offset = "0xB2CD80", VA = "0xB2CD80")]
			private bool BranchSelectorNode1600()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002277")]
			[Address(RVA = "0xB2CE20", Offset = "0xB2CE20", VA = "0xB2CE20")]
			private bool BranchSequenceNode1626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002278")]
			[Address(RVA = "0xB2CEB8", Offset = "0xB2CEB8", VA = "0xB2CEB8")]
			private bool BranchSequenceNode1896()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002279")]
			[Address(RVA = "0xB2D004", Offset = "0xB2D004", VA = "0xB2D004")]
			private bool BranchSequenceNode1627()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227A")]
			[Address(RVA = "0xB2D17C", Offset = "0xB2D17C", VA = "0xB2D17C")]
			private bool RangeCompareNode1628()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227B")]
			[Address(RVA = "0xB2D2AC", Offset = "0xB2D2AC", VA = "0xB2D2AC")]
			private bool BranchSequenceNode1848()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227C")]
			[Address(RVA = "0xB2D3C8", Offset = "0xB2D3C8", VA = "0xB2D3C8")]
			private bool BranchSelectorNode1288()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227D")]
			[Address(RVA = "0xB2D4A8", Offset = "0xB2D4A8", VA = "0xB2D4A8")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227E")]
			[Address(RVA = "0xB2D58C", Offset = "0xB2D58C", VA = "0xB2D58C")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600227F")]
			[Address(RVA = "0xB2D5EC", Offset = "0xB2D5EC", VA = "0xB2D5EC")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002280")]
			[Address(RVA = "0xB2D6A4", Offset = "0xB2D6A4", VA = "0xB2D6A4")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002281")]
			[Address(RVA = "0xB2D744", Offset = "0xB2D744", VA = "0xB2D744")]
			private bool BranchSequenceNode1447()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002282")]
			[Address(RVA = "0xB2D7EC", Offset = "0xB2D7EC", VA = "0xB2D7EC")]
			private bool BranchSequenceNode1448()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002283")]
			[Address(RVA = "0xB2D8BC", Offset = "0xB2D8BC", VA = "0xB2D8BC")]
			private bool BranchSelectorNode1449()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002284")]
			[Address(RVA = "0xB2D940", Offset = "0xB2D940", VA = "0xB2D940")]
			private bool BranchSequenceNode1450()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002285")]
			[Address(RVA = "0xB2D9E4", Offset = "0xB2D9E4", VA = "0xB2D9E4")]
			private bool BranchSelectorNode1455()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002286")]
			[Address(RVA = "0xB2DA38", Offset = "0xB2DA38", VA = "0xB2DA38")]
			private bool BranchSelectorNode1457()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002287")]
			[Address(RVA = "0xB2DB14", Offset = "0xB2DB14", VA = "0xB2DB14")]
			private bool BranchSelectorNode1459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002288")]
			[Address(RVA = "0xB2DBD4", Offset = "0xB2DBD4", VA = "0xB2DBD4")]
			private bool BranchSelectorNode1463()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002289")]
			[Address(RVA = "0xB2DC58", Offset = "0xB2DC58", VA = "0xB2DC58")]
			private bool BranchSequenceNode1493()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228A")]
			[Address(RVA = "0xB2DD08", Offset = "0xB2DD08", VA = "0xB2DD08")]
			private bool BranchSequenceNode1494()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228B")]
			[Address(RVA = "0xB2DE28", Offset = "0xB2DE28", VA = "0xB2DE28")]
			private bool BranchSequenceNode1495()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228C")]
			[Address(RVA = "0xB2DEBC", Offset = "0xB2DEBC", VA = "0xB2DEBC")]
			private bool BranchSequenceNode902()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228D")]
			[Address(RVA = "0xB2DF68", Offset = "0xB2DF68", VA = "0xB2DF68")]
			private bool BranchSequenceNode980()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228E")]
			[Address(RVA = "0xB2DFC0", Offset = "0xB2DFC0", VA = "0xB2DFC0")]
			private bool BranchSequenceNode1150()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600228F")]
			[Address(RVA = "0xB2E054", Offset = "0xB2E054", VA = "0xB2E054")]
			private bool BranchSequenceNode1858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002290")]
			[Address(RVA = "0xB2E100", Offset = "0xB2E100", VA = "0xB2E100")]
			private bool BranchSequenceNode1906()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002291")]
			[Address(RVA = "0xB2E24C", Offset = "0xB2E24C", VA = "0xB2E24C")]
			private bool BranchSequenceNode1876()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002292")]
			[Address(RVA = "0xB2E398", Offset = "0xB2E398", VA = "0xB2E398")]
			private bool BranchSequenceNode1661()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002293")]
			[Address(RVA = "0xB2E424", Offset = "0xB2E424", VA = "0xB2E424")]
			private bool BranchSequenceNode1403()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002294")]
			[Address(RVA = "0xB2E4AC", Offset = "0xB2E4AC", VA = "0xB2E4AC")]
			private bool BranchSequenceNode1695()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002295")]
			[Address(RVA = "0xB2E580", Offset = "0xB2E580", VA = "0xB2E580")]
			private bool BranchSequenceNode1696()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002296")]
			[Address(RVA = "0xB2E5E0", Offset = "0xB2E5E0", VA = "0xB2E5E0")]
			private bool BranchSequenceNode1712()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002297")]
			[Address(RVA = "0xB2E630", Offset = "0xB2E630", VA = "0xB2E630")]
			private bool BranchSequenceNode1699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002298")]
			[Address(RVA = "0xB2E670", Offset = "0xB2E670", VA = "0xB2E670")]
			private bool BranchSequenceNode1715()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002299")]
			[Address(RVA = "0xB2E6EC", Offset = "0xB2E6EC", VA = "0xB2E6EC")]
			private bool BranchSequenceNode1916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229A")]
			[Address(RVA = "0xB2E7D0", Offset = "0xB2E7D0", VA = "0xB2E7D0")]
			private bool BranchSequenceNode1702()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229B")]
			[Address(RVA = "0xB2E804", Offset = "0xB2E804", VA = "0xB2E804")]
			private bool BranchSequenceNode1703()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229C")]
			[Address(RVA = "0xB2E854", Offset = "0xB2E854", VA = "0xB2E854")]
			private bool ActionWaitNode1720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229D")]
			[Address(RVA = "0xB2E8B4", Offset = "0xB2E8B4", VA = "0xB2E8B4")]
			private bool BranchSequenceNode1946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229E")]
			[Address(RVA = "0xB2E9CC", Offset = "0xB2E9CC", VA = "0xB2E9CC")]
			private bool BranchSequenceNode1953()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600229F")]
			[Address(RVA = "0xB2EB88", Offset = "0xB2EB88", VA = "0xB2EB88")]
			private bool BranchSequenceNode1707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0xB2ECA0", Offset = "0xB2ECA0", VA = "0xB2ECA0")]
			private bool BranchSequenceNode1305()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xB2ED24", Offset = "0xB2ED24", VA = "0xB2ED24")]
			private bool ActionSendEventNode1176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xB2ED84", Offset = "0xB2ED84", VA = "0xB2ED84")]
			private bool TimeScaleNode1086()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xB2EDE4", Offset = "0xB2EDE4", VA = "0xB2EDE4")]
			private bool BranchSequenceNode1429()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0xB2EE84", Offset = "0xB2EE84", VA = "0xB2EE84")]
			private bool ActionSendEventNode1177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xB2EEE4", Offset = "0xB2EEE4", VA = "0xB2EEE4")]
			private bool TimeScaleNode1087()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0xB2EF44", Offset = "0xB2EF44", VA = "0xB2EF44")]
			private bool ClearEnvironmentSettingsNode1332()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xB2EFA4", Offset = "0xB2EFA4", VA = "0xB2EFA4")]
			private bool BranchSequenceNode1271()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xB2F054", Offset = "0xB2F054", VA = "0xB2F054")]
			private bool ActionWaitNode1270()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xB2F0B4", Offset = "0xB2F0B4", VA = "0xB2F0B4")]
			private bool BranchSequenceNode1278()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AA")]
			[Address(RVA = "0xB2F114", Offset = "0xB2F114", VA = "0xB2F114")]
			private bool BranchSequenceNode1629()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xB2F17C", Offset = "0xB2F17C", VA = "0xB2F17C")]
			private bool RangeCompareNode1630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AC")]
			[Address(RVA = "0xB2F2B4", Offset = "0xB2F2B4", VA = "0xB2F2B4")]
			private bool BranchSequenceNode1632()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AD")]
			[Address(RVA = "0xB2F31C", Offset = "0xB2F31C", VA = "0xB2F31C")]
			private bool RangeCompareNode1633()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xB2F454", Offset = "0xB2F454", VA = "0xB2F454")]
			private bool RangeCompareNode1622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xB2F58C", Offset = "0xB2F58C", VA = "0xB2F58C")]
			private bool RangeCompareNode1623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0xB2F6C4", Offset = "0xB2F6C4", VA = "0xB2F6C4")]
			private bool BranchSequenceNode1893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xB2F74C", Offset = "0xB2F74C", VA = "0xB2F74C")]
			private bool RangeCompareNode1625()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0xB2F884", Offset = "0xB2F884", VA = "0xB2F884")]
			private bool BranchSequenceNode1903()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0xB2F90C", Offset = "0xB2F90C", VA = "0xB2F90C")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xB2F970", Offset = "0xB2F970", VA = "0xB2F970")]
			private bool BranchSequenceNode1030()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xB2F9D0", Offset = "0xB2F9D0", VA = "0xB2F9D0")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xB2FA9C", Offset = "0xB2FA9C", VA = "0xB2FA9C")]
			private bool BranchSelectorNode1104()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xB2FADC", Offset = "0xB2FADC", VA = "0xB2FADC")]
			private bool BranchSelectorNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0xB2FB58", Offset = "0xB2FB58", VA = "0xB2FB58")]
			private bool BranchSequenceNode207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xB2FBB8", Offset = "0xB2FBB8", VA = "0xB2FBB8")]
			private bool BranchSequenceNode830()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BA")]
			[Address(RVA = "0xB2FCD0", Offset = "0xB2FCD0", VA = "0xB2FCD0")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xB2FD4C", Offset = "0xB2FD4C", VA = "0xB2FD4C")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xB2FD9C", Offset = "0xB2FD9C", VA = "0xB2FD9C")]
			private bool BranchSequenceNode1496()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xB2FDEC", Offset = "0xB2FDEC", VA = "0xB2FDEC")]
			private bool BranchSequenceNode1475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0xB2FE7C", Offset = "0xB2FE7C", VA = "0xB2FE7C")]
			private bool BranchSequenceNode1476()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0xB2FF0C", Offset = "0xB2FF0C", VA = "0xB2FF0C")]
			private bool BranchSequenceNode1477()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C0")]
			[Address(RVA = "0xB2FF9C", Offset = "0xB2FF9C", VA = "0xB2FF9C")]
			private bool BranchSequenceNode1478()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C1")]
			[Address(RVA = "0xB3002C", Offset = "0xB3002C", VA = "0xB3002C")]
			private bool BranchSequenceNode1483()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C2")]
			[Address(RVA = "0xB300D4", Offset = "0xB300D4", VA = "0xB300D4")]
			private bool BranchSequenceNode1484()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C3")]
			[Address(RVA = "0xB30114", Offset = "0xB30114", VA = "0xB30114")]
			private bool BranchSequenceNode1489()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C4")]
			[Address(RVA = "0xB3018C", Offset = "0xB3018C", VA = "0xB3018C")]
			private bool BranchSequenceNode1490()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C5")]
			[Address(RVA = "0xB301F8", Offset = "0xB301F8", VA = "0xB301F8")]
			private bool BranchSequenceNode1491()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0xB302D4", Offset = "0xB302D4", VA = "0xB302D4")]
			private bool BranchSequenceNode1492()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0xB30350", Offset = "0xB30350", VA = "0xB30350")]
			private bool RangeCompareNode1523()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0xB30488", Offset = "0xB30488", VA = "0xB30488")]
			private bool BranchSelectorNode1524()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0xB30554", Offset = "0xB30554", VA = "0xB30554")]
			private bool BranchSequenceNode1963()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CA")]
			[Address(RVA = "0xB306A0", Offset = "0xB306A0", VA = "0xB306A0")]
			private bool BranchSelectorNode1419()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CB")]
			[Address(RVA = "0xB30750", Offset = "0xB30750", VA = "0xB30750")]
			private bool BranchSequenceNode1379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CC")]
			[Address(RVA = "0xB307F4", Offset = "0xB307F4", VA = "0xB307F4")]
			private bool BranchSequenceNode955()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CD")]
			[Address(RVA = "0xB30864", Offset = "0xB30864", VA = "0xB30864")]
			private bool BranchSequenceNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CE")]
			[Address(RVA = "0xB308F4", Offset = "0xB308F4", VA = "0xB308F4")]
			private bool BranchSequenceNode1859()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022CF")]
			[Address(RVA = "0xB30988", Offset = "0xB30988", VA = "0xB30988")]
			private bool BranchSequenceNode1868()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0xB30A24", Offset = "0xB30A24", VA = "0xB30A24")]
			private bool BranchSequenceNode1994()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0xB30AE0", Offset = "0xB30AE0", VA = "0xB30AE0")]
			private bool BranchSequenceNode1913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0xB30B68", Offset = "0xB30B68", VA = "0xB30B68")]
			private bool BranchSequenceNode1883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0xB30BF0", Offset = "0xB30BF0", VA = "0xB30BF0")]
			private bool BranchSequenceNode1665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D4")]
			[Address(RVA = "0xB30CA0", Offset = "0xB30CA0", VA = "0xB30CA0")]
			private bool BranchSequenceNode1973()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D5")]
			[Address(RVA = "0xB30CBC", Offset = "0xB30CBC", VA = "0xB30CBC")]
			private bool BranchSequenceNode1727()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D6")]
			[Address(RVA = "0xB30CFC", Offset = "0xB30CFC", VA = "0xB30CFC")]
			private bool BranchSelectorNode1743()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D7")]
			[Address(RVA = "0xB30DE8", Offset = "0xB30DE8", VA = "0xB30DE8")]
			private bool BranchSequenceNode1713()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D8")]
			[Address(RVA = "0xB30E9C", Offset = "0xB30E9C", VA = "0xB30E9C")]
			private bool BranchSequenceNode1732()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022D9")]
			[Address(RVA = "0xB30FBC", Offset = "0xB30FBC", VA = "0xB30FBC")]
			private bool BranchSequenceNode1733()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0xB310A8", Offset = "0xB310A8", VA = "0xB310A8")]
			private bool ActionWaitChoiceNode1734()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0xB31108", Offset = "0xB31108", VA = "0xB31108")]
			private bool BranchSequenceNode1735()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0xB311A8", Offset = "0xB311A8", VA = "0xB311A8")]
			private bool BranchSequenceNode1920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0xB31228", Offset = "0xB31228", VA = "0xB31228")]
			private bool BranchSelectorNode1919()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xB31280", Offset = "0xB31280", VA = "0xB31280")]
			private bool BranchSelectorNode1718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xB312C0", Offset = "0xB312C0", VA = "0xB312C0")]
			private bool BranchSequenceNode1719()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xB31358", Offset = "0xB31358", VA = "0xB31358")]
			private bool BranchSequenceNode1959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xB313D4", Offset = "0xB313D4", VA = "0xB313D4")]
			private bool ActionSendEventNode1431()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E2")]
			[Address(RVA = "0xB31434", Offset = "0xB31434", VA = "0xB31434")]
			private bool BranchRandomNode1280()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E3")]
			[Address(RVA = "0xB3150C", Offset = "0xB3150C", VA = "0xB3150C")]
			private bool RangeCompareNode1646()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xB31644", Offset = "0xB31644", VA = "0xB31644")]
			private bool RangeCompareNode1648()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xB3177C", Offset = "0xB3177C", VA = "0xB3177C")]
			private bool BranchSequenceNode2046()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E6")]
			[Address(RVA = "0xB318C8", Offset = "0xB318C8", VA = "0xB318C8")]
			private bool BranchSequenceNode1261()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xB31968", Offset = "0xB31968", VA = "0xB31968")]
			private bool BranchSequenceNode1298()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E8")]
			[Address(RVA = "0xB31A18", Offset = "0xB31A18", VA = "0xB31A18")]
			private bool BranchSelectorNode1195()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xB31B28", Offset = "0xB31B28", VA = "0xB31B28")]
			private bool ActionWaitNode1040()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xB31B88", Offset = "0xB31B88", VA = "0xB31B88")]
			private bool BranchSequenceNode1386()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022EB")]
			[Address(RVA = "0xB31C04", Offset = "0xB31C04", VA = "0xB31C04")]
			private bool BranchSequenceNode1166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xB31C9C", Offset = "0xB31C9C", VA = "0xB31C9C")]
			private bool BranchSequenceNode1290()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0xB31D18", Offset = "0xB31D18", VA = "0xB31D18")]
			private bool BranchSequenceNode1350()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022EE")]
			[Address(RVA = "0xB31E0C", Offset = "0xB31E0C", VA = "0xB31E0C")]
			private bool BranchSequenceNode586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022EF")]
			[Address(RVA = "0xB31EE8", Offset = "0xB31EE8", VA = "0xB31EE8")]
			private bool BranchSequenceNode1136()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xB31FC4", Offset = "0xB31FC4", VA = "0xB31FC4")]
			private bool BranchSequenceNode1074()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F1")]
			[Address(RVA = "0xB31FCC", Offset = "0xB31FCC", VA = "0xB31FCC")]
			private bool BranchSequenceNode1048()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xB3202C", Offset = "0xB3202C", VA = "0xB3202C")]
			private bool BranchSequenceNode208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xB320E4", Offset = "0xB320E4", VA = "0xB320E4")]
			private bool BranchSequenceNode209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xB3223C", Offset = "0xB3223C", VA = "0xB3223C")]
			private bool BranchSequenceNode225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xB322C8", Offset = "0xB322C8", VA = "0xB322C8")]
			private bool BranchSequenceNode211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xB32408", Offset = "0xB32408", VA = "0xB32408")]
			private bool BranchSequenceNode805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xB32508", Offset = "0xB32508", VA = "0xB32508")]
			private bool BranchSequenceNode810()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xB325CC", Offset = "0xB325CC", VA = "0xB325CC")]
			private bool BranchSequenceNode832()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022F9")]
			[Address(RVA = "0xB3262C", Offset = "0xB3262C", VA = "0xB3262C")]
			private bool BranchSequenceNode875()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FA")]
			[Address(RVA = "0xB32724", Offset = "0xB32724", VA = "0xB32724")]
			private bool BranchSequenceNode855()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FB")]
			[Address(RVA = "0xB32804", Offset = "0xB32804", VA = "0xB32804")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FC")]
			[Address(RVA = "0xB3297C", Offset = "0xB3297C", VA = "0xB3297C")]
			private bool BranchSequenceNode2003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FD")]
			[Address(RVA = "0xB329DC", Offset = "0xB329DC", VA = "0xB329DC")]
			private bool BranchSequenceNode1214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FE")]
			[Address(RVA = "0xB32AEC", Offset = "0xB32AEC", VA = "0xB32AEC")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60022FF")]
			[Address(RVA = "0xB32C18", Offset = "0xB32C18", VA = "0xB32C18")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002300")]
			[Address(RVA = "0xB32D10", Offset = "0xB32D10", VA = "0xB32D10")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002301")]
			[Address(RVA = "0xB32DD8", Offset = "0xB32DD8", VA = "0xB32DD8")]
			private bool BranchSequenceNode1509()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002302")]
			[Address(RVA = "0xB32EB8", Offset = "0xB32EB8", VA = "0xB32EB8")]
			private bool BranchSelectorNode1510()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002303")]
			[Address(RVA = "0xB33030", Offset = "0xB33030", VA = "0xB33030")]
			private bool RangeCompareNode1516()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002304")]
			[Address(RVA = "0xB33168", Offset = "0xB33168", VA = "0xB33168")]
			private bool BranchSelectorNode1520()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002305")]
			[Address(RVA = "0xB331A8", Offset = "0xB331A8", VA = "0xB331A8")]
			private bool BranchSequenceNode1545()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002306")]
			[Address(RVA = "0xB33220", Offset = "0xB33220", VA = "0xB33220")]
			private bool BranchSequenceNode1546()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002307")]
			[Address(RVA = "0xB33298", Offset = "0xB33298", VA = "0xB33298")]
			private bool BranchSequenceNode1970()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002308")]
			[Address(RVA = "0xB33320", Offset = "0xB33320", VA = "0xB33320")]
			private bool BranchSequenceNode975()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002309")]
			[Address(RVA = "0xB333F4", Offset = "0xB333F4", VA = "0xB333F4")]
			private bool BranchSelectorNode1869()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230A")]
			[Address(RVA = "0xB334A0", Offset = "0xB334A0", VA = "0xB334A0")]
			private bool BranchSequenceNode2066()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230B")]
			[Address(RVA = "0xB335EC", Offset = "0xB335EC", VA = "0xB335EC")]
			private bool BranchSequenceNode1998()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230C")]
			[Address(RVA = "0xB336C0", Offset = "0xB336C0", VA = "0xB336C0")]
			private bool BranchSequenceNode1671()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230D")]
			[Address(RVA = "0xB3375C", Offset = "0xB3375C", VA = "0xB3375C")]
			private bool BranchSequenceNode2017()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230E")]
			[Address(RVA = "0xB33818", Offset = "0xB33818", VA = "0xB33818")]
			private bool BranchSequenceNode1975()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600230F")]
			[Address(RVA = "0xB338C4", Offset = "0xB338C4", VA = "0xB338C4")]
			private bool BranchSequenceNode1741()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002310")]
			[Address(RVA = "0xB33970", Offset = "0xB33970", VA = "0xB33970")]
			private bool BranchSequenceNode1742()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002311")]
			[Address(RVA = "0xB33AA4", Offset = "0xB33AA4", VA = "0xB33AA4")]
			private bool BranchSequenceNode1778()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002312")]
			[Address(RVA = "0xB33B34", Offset = "0xB33B34", VA = "0xB33B34")]
			private bool BranchSequenceNode1788()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002313")]
			[Address(RVA = "0xB33BB0", Offset = "0xB33BB0", VA = "0xB33BB0")]
			private bool BranchSequenceNode2026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002314")]
			[Address(RVA = "0xB33CFC", Offset = "0xB33CFC", VA = "0xB33CFC")]
			private bool BranchSequenceNode2037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002315")]
			[Address(RVA = "0xB33DB8", Offset = "0xB33DB8", VA = "0xB33DB8")]
			private bool BranchSelectorNode1757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002316")]
			[Address(RVA = "0xB33E34", Offset = "0xB33E34", VA = "0xB33E34")]
			private bool BranchSelectorNode1758()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002317")]
			[Address(RVA = "0xB33E74", Offset = "0xB33E74", VA = "0xB33E74")]
			private bool BranchSequenceNode1921()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002318")]
			[Address(RVA = "0xB33EA8", Offset = "0xB33EA8", VA = "0xB33EA8")]
			private bool BranchSelectorNode1926()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002319")]
			[Address(RVA = "0xB33F40", Offset = "0xB33F40", VA = "0xB33F40")]
			private bool BranchSequenceNode1736()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231A")]
			[Address(RVA = "0xB34004", Offset = "0xB34004", VA = "0xB34004")]
			private bool BranchSequenceNode1737()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231B")]
			[Address(RVA = "0xB340F8", Offset = "0xB340F8", VA = "0xB340F8")]
			private bool ActionWaitNode1279()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231C")]
			[Address(RVA = "0xB34158", Offset = "0xB34158", VA = "0xB34158")]
			private bool ActionWaitNode1281()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231D")]
			[Address(RVA = "0xB341B8", Offset = "0xB341B8", VA = "0xB341B8")]
			private bool BranchSequenceNode2053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231E")]
			[Address(RVA = "0xB34240", Offset = "0xB34240", VA = "0xB34240")]
			private bool ListenGlobalEventNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600231F")]
			[Address(RVA = "0xB342A0", Offset = "0xB342A0", VA = "0xB342A0")]
			private bool ToggleTargetableNode1297()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002320")]
			[Address(RVA = "0xB34328", Offset = "0xB34328", VA = "0xB34328")]
			private bool BranchSequenceNode1037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002321")]
			[Address(RVA = "0xB343C0", Offset = "0xB343C0", VA = "0xB343C0")]
			private bool BranchSequenceNode1192()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002322")]
			[Address(RVA = "0xB3445C", Offset = "0xB3445C", VA = "0xB3445C")]
			private bool ActionSendEventNode1168()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002323")]
			[Address(RVA = "0xB344BC", Offset = "0xB344BC", VA = "0xB344BC")]
			private bool BranchSequenceNode587()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002324")]
			[Address(RVA = "0xB345B0", Offset = "0xB345B0", VA = "0xB345B0")]
			private bool StartAttackNode599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002325")]
			[Address(RVA = "0xB34610", Offset = "0xB34610", VA = "0xB34610")]
			private bool BranchSequenceNode1351()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002326")]
			[Address(RVA = "0xB34704", Offset = "0xB34704", VA = "0xB34704")]
			private bool BranchSequenceNode1131()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002327")]
			[Address(RVA = "0xB347F8", Offset = "0xB347F8", VA = "0xB347F8")]
			private bool StartAttackNode1148()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002328")]
			[Address(RVA = "0xB34858", Offset = "0xB34858", VA = "0xB34858")]
			private bool BranchSequenceNode2057()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002329")]
			[Address(RVA = "0xB34914", Offset = "0xB34914", VA = "0xB34914")]
			private bool BranchSequenceNode1354()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232A")]
			[Address(RVA = "0xB34A08", Offset = "0xB34A08", VA = "0xB34A08")]
			private bool BranchSequenceNode1069()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232B")]
			[Address(RVA = "0xB34AF4", Offset = "0xB34AF4", VA = "0xB34AF4")]
			private bool BranchSequenceNode1043()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232C")]
			[Address(RVA = "0xB34B54", Offset = "0xB34B54", VA = "0xB34B54")]
			private bool BranchSequenceNode1049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232D")]
			[Address(RVA = "0xB34BB4", Offset = "0xB34BB4", VA = "0xB34BB4")]
			private bool BranchSequenceNode1057()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232E")]
			[Address(RVA = "0xB34C24", Offset = "0xB34C24", VA = "0xB34C24")]
			private bool BranchSequenceNode1173()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600232F")]
			[Address(RVA = "0xB34C84", Offset = "0xB34C84", VA = "0xB34C84")]
			private bool BranchSequenceNode1226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002330")]
			[Address(RVA = "0xB34D0C", Offset = "0xB34D0C", VA = "0xB34D0C")]
			private bool BranchSelectorNode896()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002331")]
			[Address(RVA = "0xB34E04", Offset = "0xB34E04", VA = "0xB34E04")]
			private bool BranchSequenceNode924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002332")]
			[Address(RVA = "0xB34E40", Offset = "0xB34E40", VA = "0xB34E40")]
			private bool BranchSequenceNode226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002333")]
			[Address(RVA = "0xB34EEC", Offset = "0xB34EEC", VA = "0xB34EEC")]
			private bool BranchSelectorNode1242()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002334")]
			[Address(RVA = "0xB34F6C", Offset = "0xB34F6C", VA = "0xB34F6C")]
			private bool BranchSequenceNode1360()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002335")]
			[Address(RVA = "0xB35060", Offset = "0xB35060", VA = "0xB35060")]
			private bool BranchSelectorNode1079()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002336")]
			[Address(RVA = "0xB350C0", Offset = "0xB350C0", VA = "0xB350C0")]
			private bool RangeCompareNode808()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002337")]
			[Address(RVA = "0xB351F8", Offset = "0xB351F8", VA = "0xB351F8")]
			private bool BranchSelectorNode811()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002338")]
			[Address(RVA = "0xB352A0", Offset = "0xB352A0", VA = "0xB352A0")]
			private bool BranchSequenceNode1311()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002339")]
			[Address(RVA = "0xB353B4", Offset = "0xB353B4", VA = "0xB353B4")]
			private bool BranchSelectorNode866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233A")]
			[Address(RVA = "0xB35418", Offset = "0xB35418", VA = "0xB35418")]
			private bool BranchSequenceNode877()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233B")]
			[Address(RVA = "0xB35478", Offset = "0xB35478", VA = "0xB35478")]
			private bool BranchSequenceNode1313()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233C")]
			[Address(RVA = "0xB35520", Offset = "0xB35520", VA = "0xB35520")]
			private bool BranchSequenceNode1363()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233D")]
			[Address(RVA = "0xB35614", Offset = "0xB35614", VA = "0xB35614")]
			private bool BranchSequenceNode2010()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233E")]
			[Address(RVA = "0xB356A4", Offset = "0xB356A4", VA = "0xB356A4")]
			private bool ActionDisengage2005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600233F")]
			[Address(RVA = "0xB35704", Offset = "0xB35704", VA = "0xB35704")]
			private bool ActionWaitNode2007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002340")]
			[Address(RVA = "0xB35764", Offset = "0xB35764", VA = "0xB35764")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002341")]
			[Address(RVA = "0xB35868", Offset = "0xB35868", VA = "0xB35868")]
			private bool BranchSequenceNode922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002342")]
			[Address(RVA = "0xB358F8", Offset = "0xB358F8", VA = "0xB358F8")]
			private bool BranchSequenceNode575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002343")]
			[Address(RVA = "0xB35958", Offset = "0xB35958", VA = "0xB35958")]
			private bool BranchSequenceNode920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002344")]
			[Address(RVA = "0xB359E8", Offset = "0xB359E8", VA = "0xB359E8")]
			private bool BranchSequenceNode706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002345")]
			[Address(RVA = "0xB35A38", Offset = "0xB35A38", VA = "0xB35A38")]
			private bool BranchSequenceNode1541()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002346")]
			[Address(RVA = "0xB35AA4", Offset = "0xB35AA4", VA = "0xB35AA4")]
			private bool BranchSequenceNode1543()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002347")]
			[Address(RVA = "0xB35B80", Offset = "0xB35B80", VA = "0xB35B80")]
			private bool BranchSequenceNode1544()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002348")]
			[Address(RVA = "0xB35CCC", Offset = "0xB35CCC", VA = "0xB35CCC")]
			private bool BranchSequenceNode2073()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002349")]
			[Address(RVA = "0xB35D54", Offset = "0xB35D54", VA = "0xB35D54")]
			private bool BranchSelectorNode1672()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234A")]
			[Address(RVA = "0xB35E00", Offset = "0xB35E00", VA = "0xB35E00")]
			private bool BranchSequenceNode2086()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234B")]
			[Address(RVA = "0xB35F4C", Offset = "0xB35F4C", VA = "0xB35F4C")]
			private bool BranchSequenceNode2021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234C")]
			[Address(RVA = "0xB36020", Offset = "0xB36020", VA = "0xB36020")]
			private bool BranchSequenceNode1976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234D")]
			[Address(RVA = "0xB360B4", Offset = "0xB360B4", VA = "0xB360B4")]
			private bool BranchSequenceNode1985()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234E")]
			[Address(RVA = "0xB36150", Offset = "0xB36150", VA = "0xB36150")]
			private bool BranchSequenceNode2077()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600234F")]
			[Address(RVA = "0xB3620C", Offset = "0xB3620C", VA = "0xB3620C")]
			private bool BranchSelectorNode1784()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002350")]
			[Address(RVA = "0xB362B4", Offset = "0xB362B4", VA = "0xB362B4")]
			private bool BranchSequenceNode1785()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002351")]
			[Address(RVA = "0xB36374", Offset = "0xB36374", VA = "0xB36374")]
			private bool ActionWaitNode1800()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002352")]
			[Address(RVA = "0xB363D4", Offset = "0xB363D4", VA = "0xB363D4")]
			private bool BranchSequenceNode1787()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002353")]
			[Address(RVA = "0xB36454", Offset = "0xB36454", VA = "0xB36454")]
			private bool BranchSequenceNode1804()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002354")]
			[Address(RVA = "0xB36504", Offset = "0xB36504", VA = "0xB36504")]
			private bool ActionWaitChoiceNode1805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002355")]
			[Address(RVA = "0xB36564", Offset = "0xB36564", VA = "0xB36564")]
			private bool BranchSequenceNode1806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002356")]
			[Address(RVA = "0xB365AC", Offset = "0xB365AC", VA = "0xB365AC")]
			private bool BranchSequenceNode2033()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002357")]
			[Address(RVA = "0xB36634", Offset = "0xB36634", VA = "0xB36634")]
			private bool BranchSequenceNode2041()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002358")]
			[Address(RVA = "0xB36708", Offset = "0xB36708", VA = "0xB36708")]
			private bool BranchSequenceNode1780()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002359")]
			[Address(RVA = "0xB3678C", Offset = "0xB3678C", VA = "0xB3678C")]
			private bool BranchSequenceNode1782()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235A")]
			[Address(RVA = "0xB36860", Offset = "0xB36860", VA = "0xB36860")]
			private bool BranchSequenceNode1783()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235B")]
			[Address(RVA = "0xB36914", Offset = "0xB36914", VA = "0xB36914")]
			private bool BranchSequenceNode1927()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235C")]
			[Address(RVA = "0xB3694C", Offset = "0xB3694C", VA = "0xB3694C")]
			private bool BranchSequenceNode1928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235D")]
			[Address(RVA = "0xB36990", Offset = "0xB36990", VA = "0xB36990")]
			private bool BranchSequenceNode1929()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235E")]
			[Address(RVA = "0xB36B04", Offset = "0xB36B04", VA = "0xB36B04")]
			private bool BranchSequenceNode1941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600235F")]
			[Address(RVA = "0xB36BB0", Offset = "0xB36BB0", VA = "0xB36BB0")]
			private bool ActionWaitNode1039()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002360")]
			[Address(RVA = "0xB36C10", Offset = "0xB36C10", VA = "0xB36C10")]
			private bool ActionSendEventNode1035()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002361")]
			[Address(RVA = "0xB36C70", Offset = "0xB36C70", VA = "0xB36C70")]
			private bool ActionWaitNode1303()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002362")]
			[Address(RVA = "0xB36CD0", Offset = "0xB36CD0", VA = "0xB36CD0")]
			private bool ActionWaitNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002363")]
			[Address(RVA = "0xB36D30", Offset = "0xB36D30", VA = "0xB36D30")]
			private bool ActionSendEventNode1190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002364")]
			[Address(RVA = "0xB36D90", Offset = "0xB36D90", VA = "0xB36D90")]
			private bool ActionWaitNode1304()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002365")]
			[Address(RVA = "0xB36DF0", Offset = "0xB36DF0", VA = "0xB36DF0")]
			private bool BranchSelectorNode900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002366")]
			[Address(RVA = "0xB36E44", Offset = "0xB36E44", VA = "0xB36E44")]
			private bool BranchSequenceNode2061()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002367")]
			[Address(RVA = "0xB36F18", Offset = "0xB36F18", VA = "0xB36F18")]
			private bool PlayerRestoreDeathsDoor1423()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002368")]
			[Address(RVA = "0xB36F78", Offset = "0xB36F78", VA = "0xB36F78")]
			private bool BranchSelectorNode1180()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002369")]
			[Address(RVA = "0xB36FD8", Offset = "0xB36FD8", VA = "0xB36FD8")]
			private bool BranchSequenceNode1228()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236A")]
			[Address(RVA = "0xB37038", Offset = "0xB37038", VA = "0xB37038")]
			private bool BranchSequenceNode1383()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xB370B4", Offset = "0xB370B4", VA = "0xB370B4")]
			private bool BranchSequenceNode1062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236C")]
			[Address(RVA = "0xB3716C", Offset = "0xB3716C", VA = "0xB3716C")]
			private bool BranchSequenceNode1063()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236D")]
			[Address(RVA = "0xB37220", Offset = "0xB37220", VA = "0xB37220")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236E")]
			[Address(RVA = "0xB373DC", Offset = "0xB373DC", VA = "0xB373DC")]
			private bool BranchSequenceNode1202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600236F")]
			[Address(RVA = "0xB374CC", Offset = "0xB374CC", VA = "0xB374CC")]
			private bool BranchSequenceNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002370")]
			[Address(RVA = "0xB375C4", Offset = "0xB375C4", VA = "0xB375C4")]
			private bool ActionSendEventNode1172()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002371")]
			[Address(RVA = "0xB37624", Offset = "0xB37624", VA = "0xB37624")]
			private bool BranchSequenceNode2097()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002372")]
			[Address(RVA = "0xB376E0", Offset = "0xB376E0", VA = "0xB376E0")]
			private bool BranchSequenceNode1357()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002373")]
			[Address(RVA = "0xB377D4", Offset = "0xB377D4", VA = "0xB377D4")]
			private bool BranchSequenceNode910()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002374")]
			[Address(RVA = "0xB378AC", Offset = "0xB378AC", VA = "0xB378AC")]
			private bool BranchSequenceNode1014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002375")]
			[Address(RVA = "0xB3792C", Offset = "0xB3792C", VA = "0xB3792C")]
			private bool BranchSelectorNode218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002376")]
			[Address(RVA = "0xB37A24", Offset = "0xB37A24", VA = "0xB37A24")]
			private bool BranchSequenceNode1239()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002377")]
			[Address(RVA = "0xB37A98", Offset = "0xB37A98", VA = "0xB37A98")]
			private bool BranchSequenceNode1307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002378")]
			[Address(RVA = "0xB37B7C", Offset = "0xB37B7C", VA = "0xB37B7C")]
			private bool BranchSequenceNode812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002379")]
			[Address(RVA = "0xB37C1C", Offset = "0xB37C1C", VA = "0xB37C1C")]
			private bool BranchSequenceNode822()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237A")]
			[Address(RVA = "0xB37CDC", Offset = "0xB37CDC", VA = "0xB37CDC")]
			private bool StartAttackNode878()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237B")]
			[Address(RVA = "0xB37D3C", Offset = "0xB37D3C", VA = "0xB37D3C")]
			private bool BranchSelectorNode2012()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237C")]
			[Address(RVA = "0xB37DBC", Offset = "0xB37DBC", VA = "0xB37DBC")]
			private bool BranchSequenceNode2106()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237D")]
			[Address(RVA = "0xB37F08", Offset = "0xB37F08", VA = "0xB37F08")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237E")]
			[Address(RVA = "0xB37F9C", Offset = "0xB37F9C", VA = "0xB37F9C")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600237F")]
			[Address(RVA = "0xB3803C", Offset = "0xB3803C", VA = "0xB3803C")]
			private bool RangeCompareNode577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002380")]
			[Address(RVA = "0xB38174", Offset = "0xB38174", VA = "0xB38174")]
			private bool BranchSelectorNode749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002381")]
			[Address(RVA = "0xB381C4", Offset = "0xB381C4", VA = "0xB381C4")]
			private bool RangeCompareNode578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002382")]
			[Address(RVA = "0xB382FC", Offset = "0xB382FC", VA = "0xB382FC")]
			private bool BranchSelectorNode707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002383")]
			[Address(RVA = "0xB3833C", Offset = "0xB3833C", VA = "0xB3833C")]
			private bool RangeCompareNode1550()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002384")]
			[Address(RVA = "0xB38474", Offset = "0xB38474", VA = "0xB38474")]
			private bool BranchSequenceNode2093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002385")]
			[Address(RVA = "0xB384FC", Offset = "0xB384FC", VA = "0xB384FC")]
			private bool BranchSelectorNode1986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002386")]
			[Address(RVA = "0xB385A8", Offset = "0xB385A8", VA = "0xB385A8")]
			private bool BranchSequenceNode2116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002387")]
			[Address(RVA = "0xB386F4", Offset = "0xB386F4", VA = "0xB386F4")]
			private bool BranchSequenceNode2081()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002388")]
			[Address(RVA = "0xB387C8", Offset = "0xB387C8", VA = "0xB387C8")]
			private bool BranchSequenceNode2126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002389")]
			[Address(RVA = "0xB388E0", Offset = "0xB388E0", VA = "0xB388E0")]
			private bool BranchSequenceNode2163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238A")]
			[Address(RVA = "0xB38A2C", Offset = "0xB38A2C", VA = "0xB38A2C")]
			private bool BranchSelectorNode1812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238B")]
			[Address(RVA = "0xB38A6C", Offset = "0xB38A6C", VA = "0xB38A6C")]
			private bool ActionWaitNode1183()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238C")]
			[Address(RVA = "0xB38ACC", Offset = "0xB38ACC", VA = "0xB38ACC")]
			private bool ActionSendEventNode1171()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238D")]
			[Address(RVA = "0xB38B2C", Offset = "0xB38B2C", VA = "0xB38B2C")]
			private bool StartAttackNode1231()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238E")]
			[Address(RVA = "0xB38B8C", Offset = "0xB38B8C", VA = "0xB38B8C")]
			private bool EnvironmentSettingsNode1331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600238F")]
			[Address(RVA = "0xB38BEC", Offset = "0xB38BEC", VA = "0xB38BEC")]
			private bool BranchSequenceNode1334()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002390")]
			[Address(RVA = "0xB38D0C", Offset = "0xB38D0C", VA = "0xB38D0C")]
			private bool ActionWaitNode1324()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002391")]
			[Address(RVA = "0xB38D6C", Offset = "0xB38D6C", VA = "0xB38D6C")]
			private bool BranchSequenceNode1424()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002392")]
			[Address(RVA = "0xB38E4C", Offset = "0xB38E4C", VA = "0xB38E4C")]
			private bool BranchSequenceNode2101()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002393")]
			[Address(RVA = "0xB38F20", Offset = "0xB38F20", VA = "0xB38F20")]
			private bool RangeCompareNode1019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xB39058", Offset = "0xB39058", VA = "0xB39058")]
			private bool BranchSequenceNode234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xB390C8", Offset = "0xB390C8", VA = "0xB390C8")]
			private bool BranchSequenceNode1152()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002396")]
			[Address(RVA = "0xB39120", Offset = "0xB39120", VA = "0xB39120")]
			private bool BranchSequenceNode2134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002397")]
			[Address(RVA = "0xB391DC", Offset = "0xB391DC", VA = "0xB391DC")]
			private bool BranchSequenceNode2143()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002398")]
			[Address(RVA = "0xB391F8", Offset = "0xB391F8", VA = "0xB391F8")]
			private bool ActionDisengage814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002399")]
			[Address(RVA = "0xB39258", Offset = "0xB39258", VA = "0xB39258")]
			private bool ActionWaitNode815()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239A")]
			[Address(RVA = "0xB392B8", Offset = "0xB392B8", VA = "0xB392B8")]
			private bool StartAttackNode837()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239B")]
			[Address(RVA = "0xB39318", Offset = "0xB39318", VA = "0xB39318")]
			private bool BranchSequenceNode2113()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239C")]
			[Address(RVA = "0xB393A0", Offset = "0xB393A0", VA = "0xB393A0")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239D")]
			[Address(RVA = "0xB39404", Offset = "0xB39404", VA = "0xB39404")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239E")]
			[Address(RVA = "0xB39454", Offset = "0xB39454", VA = "0xB39454")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600239F")]
			[Address(RVA = "0xB394D8", Offset = "0xB394D8", VA = "0xB394D8")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A0")]
			[Address(RVA = "0xB39518", Offset = "0xB39518", VA = "0xB39518")]
			private bool BranchSequenceNode1090()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A1")]
			[Address(RVA = "0xB395FC", Offset = "0xB395FC", VA = "0xB395FC")]
			private bool BranchSequenceNode2183()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xB396B4", Offset = "0xB396B4", VA = "0xB396B4")]
			private bool BranchSequenceNode748()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A3")]
			[Address(RVA = "0xB3978C", Offset = "0xB3978C", VA = "0xB3978C")]
			private bool BranchSequenceNode712()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A4")]
			[Address(RVA = "0xB3987C", Offset = "0xB3987C", VA = "0xB3987C")]
			private bool BranchSequenceNode2189()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xB39934", Offset = "0xB39934", VA = "0xB39934")]
			private bool BranchSequenceNode2123()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A6")]
			[Address(RVA = "0xB399BC", Offset = "0xB399BC", VA = "0xB399BC")]
			private bool BranchSequenceNode2170()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xB39A44", Offset = "0xB39A44", VA = "0xB39A44")]
			private bool BranchSequenceNode1813()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xB39B18", Offset = "0xB39B18", VA = "0xB39B18")]
			private bool BranchSequenceNode1814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xB39BCC", Offset = "0xB39BCC", VA = "0xB39BCC")]
			private bool RestoreEnemyHealthNode1337()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AA")]
			[Address(RVA = "0xB39C2C", Offset = "0xB39C2C", VA = "0xB39C2C")]
			private bool BranchSequenceNode2174()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AB")]
			[Address(RVA = "0xB39CE8", Offset = "0xB39CE8", VA = "0xB39CE8")]
			private bool BranchSequenceNode2138()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AC")]
			[Address(RVA = "0xB39DBC", Offset = "0xB39DBC", VA = "0xB39DBC")]
			private bool BranchSequenceNode2145()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AD")]
			[Address(RVA = "0xB39E68", Offset = "0xB39E68", VA = "0xB39E68")]
			private bool BranchSelectorNode1414()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AE")]
			[Address(RVA = "0xB39F30", Offset = "0xB39F30", VA = "0xB39F30")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023AF")]
			[Address(RVA = "0xB39F38", Offset = "0xB39F38", VA = "0xB39F38")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B0")]
			[Address(RVA = "0xB39F88", Offset = "0xB39F88", VA = "0xB39F88")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B1")]
			[Address(RVA = "0xB3A0E8", Offset = "0xB3A0E8", VA = "0xB3A0E8")]
			private bool BranchSelectorNode1007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B2")]
			[Address(RVA = "0xB3A0F0", Offset = "0xB3A0F0", VA = "0xB3A0F0")]
			private bool BranchSelectorNode1184()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B3")]
			[Address(RVA = "0xB3A198", Offset = "0xB3A198", VA = "0xB3A198")]
			private bool BranchSequenceNode2178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B4")]
			[Address(RVA = "0xB3A26C", Offset = "0xB3A26C", VA = "0xB3A26C")]
			private bool BranchSequenceNode2146()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B5")]
			[Address(RVA = "0xB3A300", Offset = "0xB3A300", VA = "0xB3A300")]
			private bool BranchSequenceNode2155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B6")]
			[Address(RVA = "0xB3A39C", Offset = "0xB3A39C", VA = "0xB3A39C")]
			private bool BranchSequenceNode2196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0xB3A458", Offset = "0xB3A458", VA = "0xB3A458")]
			private bool BranchSequenceNode1412()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B8")]
			[Address(RVA = "0xB3A4F0", Offset = "0xB3A4F0", VA = "0xB3A4F0")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023B9")]
			[Address(RVA = "0xB3A530", Offset = "0xB3A530", VA = "0xB3A530")]
			private bool BranchSequenceNode580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BA")]
			[Address(RVA = "0xB3A5D0", Offset = "0xB3A5D0", VA = "0xB3A5D0")]
			private bool BranchSequenceNode915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BB")]
			[Address(RVA = "0xB3A660", Offset = "0xB3A660", VA = "0xB3A660")]
			private bool BranchSelectorNode932()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BC")]
			[Address(RVA = "0xB3A714", Offset = "0xB3A714", VA = "0xB3A714")]
			private bool BranchSequenceNode1003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BD")]
			[Address(RVA = "0xB3A824", Offset = "0xB3A824", VA = "0xB3A824")]
			private bool BranchSequenceNode1185()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BE")]
			[Address(RVA = "0xB3A8AC", Offset = "0xB3A8AC", VA = "0xB3A8AC")]
			private bool BranchSelectorNode2156()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023BF")]
			[Address(RVA = "0xB3A958", Offset = "0xB3A958", VA = "0xB3A958")]
			private bool BranchSequenceNode2211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C0")]
			[Address(RVA = "0xB3AAA4", Offset = "0xB3AAA4", VA = "0xB3AAA4")]
			private bool BranchSequenceNode2200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xB3AB78", Offset = "0xB3AB78", VA = "0xB3AB78")]
			private bool RangeCompareNode1413()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xB3ACB0", Offset = "0xB3ACB0", VA = "0xB3ACB0")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xB3ADA0", Offset = "0xB3ADA0", VA = "0xB3ADA0")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xB3AE80", Offset = "0xB3AE80", VA = "0xB3AE80")]
			private bool BranchSequenceNode2205()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xB3AF38", Offset = "0xB3AF38", VA = "0xB3AF38")]
			private bool BranchSequenceNode939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xB3AFE8", Offset = "0xB3AFE8", VA = "0xB3AFE8")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xB3B1B8", Offset = "0xB3B1B8", VA = "0xB3B1B8")]
			private bool RangeCompareNode1005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xB3B2F0", Offset = "0xB3B2F0", VA = "0xB3B2F0")]
			private bool BranchSequenceNode2218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023C9")]
			[Address(RVA = "0xB3B378", Offset = "0xB3B378", VA = "0xB3B378")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xB3B3E8", Offset = "0xB3B3E8", VA = "0xB3B3E8")]
			private bool BranchSelectorNode997()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CB")]
			[Address(RVA = "0xB3B464", Offset = "0xB3B464", VA = "0xB3B464")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xB3B5A4", Offset = "0xB3B5A4", VA = "0xB3B5A4")]
			private bool BranchSequenceNode933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xB3B794", Offset = "0xB3B794", VA = "0xB3B794")]
			private bool BranchSequenceNode940()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xB3B824", Offset = "0xB3B824", VA = "0xB3B824")]
			private bool BranchSequenceNode941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xB3B8E0", Offset = "0xB3B8E0", VA = "0xB3B8E0")]
			private bool BranchSequenceNode995()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xB3B994", Offset = "0xB3B994", VA = "0xB3B994")]
			private bool BranchRandomNode616()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xB3B9F4", Offset = "0xB3B9F4", VA = "0xB3B9F4")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xB3BA78", Offset = "0xB3BA78", VA = "0xB3BA78")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D3")]
			[Address(RVA = "0xB3BB2C", Offset = "0xB3BB2C", VA = "0xB3BB2C")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xB3BBB0", Offset = "0xB3BBB0", VA = "0xB3BBB0")]
			private bool StartAttackNode944()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xB3BC10", Offset = "0xB3BC10", VA = "0xB3BC10")]
			private bool BranchRandomNode976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xB3BC70", Offset = "0xB3BC70", VA = "0xB3BC70")]
			private bool StartAttackNode618()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xB3BCD0", Offset = "0xB3BCD0", VA = "0xB3BCD0")]
			private bool StartAttackNode619()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xB3BD30", Offset = "0xB3BD30", VA = "0xB3BD30")]
			private bool StartAttackNode957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xB3BD90", Offset = "0xB3BD90", VA = "0xB3BD90")]
			private bool StartAttackNode958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xB3BDF0", Offset = "0xB3BDF0", VA = "0xB3BDF0")]
			private bool StartAttackNode959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xB3BE50", Offset = "0xB3BE50", VA = "0xB3BE50")]
			private bool StartAttackNode960()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xB3BEB0", Offset = "0xB3BEB0", VA = "0xB3BEB0")]
			private bool StartAttackNode961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xB3BF10", Offset = "0xB3BF10", VA = "0xB3BF10")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xB3BF88", Offset = "0xB3BF88", VA = "0xB3BF88")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xB3C04C", Offset = "0xB3C04C", VA = "0xB3C04C")]
			private bool StartAttackNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xB3C0AC", Offset = "0xB3C0AC", VA = "0xB3C0AC")]
			private bool StartAttackNode985()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xB3C10C", Offset = "0xB3C10C", VA = "0xB3C10C")]
			private bool StartAttackNode986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xB3C16C", Offset = "0xB3C16C", VA = "0xB3C16C")]
			private bool StartAttackNode988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E3")]
			[Address(RVA = "0xB3C1CC", Offset = "0xB3C1CC", VA = "0xB3C1CC")]
			private bool StartAttackNode989()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E4")]
			[Address(RVA = "0xB3C22C", Offset = "0xB3C22C", VA = "0xB3C22C")]
			private bool StartAttackNode990()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0xB3C28C", Offset = "0xB3C28C", VA = "0xB3C28C")]
			private bool StartAttackNode991()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E6")]
			[Address(RVA = "0xB3C2EC", Offset = "0xB3C2EC", VA = "0xB3C2EC")]
			private bool StartAttackNode992()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0xB3C34C", Offset = "0xB3C34C", VA = "0xB3C34C")]
			private bool StartAttackNode982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E8")]
			[Address(RVA = "0xB3C3AC", Offset = "0xB3C3AC", VA = "0xB3C3AC")]
			private bool StartAttackNode983()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023E9")]
			[Address(RVA = "0xB3C40C", Offset = "0xB3C40C", VA = "0xB3C40C")]
			private bool StartAttackNode999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023EA")]
			[Address(RVA = "0xB3C46C", Offset = "0xB3C46C", VA = "0xB3C46C")]
			private bool StartAttackNode1000()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoolVariable Global_OtherCaptainBossKilled;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable BossCaptain_Version;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0xB28610", Offset = "0xB28610", VA = "0xB28610")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0xB28750", Offset = "0xB28750", VA = "0xB28750", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0xB28858", Offset = "0xB28858", VA = "0xB28858")]
		public BossCaptainCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8330", Offset = "0x8A8330")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8330", Offset = "0x8A8330")]
	public class CancelAttacksNode : GeneratedActionNode
	{
		[Token(Token = "0x20005A9")]
		public class CancelAttacksRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly CancelAttacksNode _source;

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0xB86974", Offset = "0xB86974", VA = "0xB86974")]
			public CancelAttacksRuntime(CancelAttacksNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023EC")]
			[Address(RVA = "0xB869B0", Offset = "0xB869B0", VA = "0xB869B0", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0xB86AFC", Offset = "0xB86AFC", VA = "0xB86AFC")]
			private bool BranchSequenceNode5()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xB868B0", Offset = "0xB868B0", VA = "0xB868B0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xB869A8", Offset = "0xB869A8", VA = "0xB869A8")]
		public CancelAttacksNode()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A83EC", Offset = "0x8A83EC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A83EC", Offset = "0x8A83EC")]
	public class CaptainCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005AA")]
		public class CaptainCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000605")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly CaptainCombatantBehavior_hybrid _source;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0xB86F5C", Offset = "0xB86F5C", VA = "0xB86F5C")]
			public CaptainCombatantBehavior_hybridRuntime(CaptainCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0xB87A40", Offset = "0xB87A40", VA = "0xB87A40", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0xB86FBC", Offset = "0xB86FBC", VA = "0xB86FBC")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F1")]
			[Address(RVA = "0xB87A70", Offset = "0xB87A70", VA = "0xB87A70", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F2")]
			[Address(RVA = "0xB87AD0", Offset = "0xB87AD0", VA = "0xB87AD0")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F3")]
			[Address(RVA = "0xB87C44", Offset = "0xB87C44", VA = "0xB87C44")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F4")]
			[Address(RVA = "0xB87DC0", Offset = "0xB87DC0", VA = "0xB87DC0")]
			private bool BranchSequenceNode1169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F5")]
			[Address(RVA = "0xB87E24", Offset = "0xB87E24", VA = "0xB87E24")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F6")]
			[Address(RVA = "0xB87F28", Offset = "0xB87F28", VA = "0xB87F28")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F7")]
			[Address(RVA = "0xB87FE4", Offset = "0xB87FE4", VA = "0xB87FE4")]
			private bool BranchSelectorNode1370()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F8")]
			[Address(RVA = "0xB880B0", Offset = "0xB880B0", VA = "0xB880B0")]
			private bool BranchSequenceNode1364()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023F9")]
			[Address(RVA = "0xB88178", Offset = "0xB88178", VA = "0xB88178")]
			private bool BranchSelectorNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FA")]
			[Address(RVA = "0xB881B8", Offset = "0xB881B8", VA = "0xB881B8")]
			private bool BranchSelectorNode1319()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FB")]
			[Address(RVA = "0xB88240", Offset = "0xB88240", VA = "0xB88240")]
			private bool BranchSelectorNode1334()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FC")]
			[Address(RVA = "0xB8828C", Offset = "0xB8828C", VA = "0xB8828C")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FD")]
			[Address(RVA = "0xB883F4", Offset = "0xB883F4", VA = "0xB883F4")]
			private bool BranchSelectorNode193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FE")]
			[Address(RVA = "0xB884AC", Offset = "0xB884AC", VA = "0xB884AC")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60023FF")]
			[Address(RVA = "0xB88670", Offset = "0xB88670", VA = "0xB88670")]
			private bool BranchSelectorNode1511()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002400")]
			[Address(RVA = "0xB8878C", Offset = "0xB8878C", VA = "0xB8878C")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002401")]
			[Address(RVA = "0xB88794", Offset = "0xB88794", VA = "0xB88794")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002402")]
			[Address(RVA = "0xB88838", Offset = "0xB88838", VA = "0xB88838")]
			private bool BranchSelectorNode1374()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002403")]
			[Address(RVA = "0xB888F0", Offset = "0xB888F0", VA = "0xB888F0")]
			private bool BranchSelectorNode1375()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002404")]
			[Address(RVA = "0xB88990", Offset = "0xB88990", VA = "0xB88990")]
			private bool BranchSelectorNode1376()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002405")]
			[Address(RVA = "0xB88A60", Offset = "0xB88A60", VA = "0xB88A60")]
			private bool ToggleTargetableNode1368()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002406")]
			[Address(RVA = "0xB88AE4", Offset = "0xB88AE4", VA = "0xB88AE4")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002407")]
			[Address(RVA = "0xB88C70", Offset = "0xB88C70", VA = "0xB88C70")]
			private bool BranchSequenceNode692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002408")]
			[Address(RVA = "0xB88CFC", Offset = "0xB88CFC", VA = "0xB88CFC")]
			private bool BranchSequenceNode1785()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002409")]
			[Address(RVA = "0xB88E78", Offset = "0xB88E78", VA = "0xB88E78")]
			private bool BranchSequenceNode1316()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240A")]
			[Address(RVA = "0xB88EDC", Offset = "0xB88EDC", VA = "0xB88EDC")]
			private bool BranchSelectorNode1588()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240B")]
			[Address(RVA = "0xB88F1C", Offset = "0xB88F1C", VA = "0xB88F1C")]
			private bool BranchSequenceNode1330()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240C")]
			[Address(RVA = "0xB88F5C", Offset = "0xB88F5C", VA = "0xB88F5C")]
			private bool BranchSequenceNode1617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240D")]
			[Address(RVA = "0xB89154", Offset = "0xB89154", VA = "0xB89154")]
			private bool BranchSequenceNode1758()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240E")]
			[Address(RVA = "0xB89210", Offset = "0xB89210", VA = "0xB89210")]
			private bool BranchSequenceNode1767()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600240F")]
			[Address(RVA = "0xB8935C", Offset = "0xB8935C", VA = "0xB8935C")]
			private bool BranchSequenceNode194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002410")]
			[Address(RVA = "0xB893D8", Offset = "0xB893D8", VA = "0xB893D8")]
			private bool ToggleHeadLookIK199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002411")]
			[Address(RVA = "0xB89438", Offset = "0xB89438", VA = "0xB89438")]
			private bool BranchSequenceNode1501()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002412")]
			[Address(RVA = "0xB89584", Offset = "0xB89584", VA = "0xB89584")]
			private bool BranchSelectorNode1306()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002413")]
			[Address(RVA = "0xB8961C", Offset = "0xB8961C", VA = "0xB8961C")]
			private bool BranchSelectorNode1518()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002414")]
			[Address(RVA = "0xB89688", Offset = "0xB89688", VA = "0xB89688")]
			private bool BranchSelectorNode1519()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002415")]
			[Address(RVA = "0xB896F4", Offset = "0xB896F4", VA = "0xB896F4")]
			private bool BranchSelectorNode1520()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002416")]
			[Address(RVA = "0xB89734", Offset = "0xB89734", VA = "0xB89734")]
			private bool BranchSequenceNode1521()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002417")]
			[Address(RVA = "0xB89844", Offset = "0xB89844", VA = "0xB89844")]
			private bool BranchSequenceNode1522()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002418")]
			[Address(RVA = "0xB8992C", Offset = "0xB8992C", VA = "0xB8992C")]
			private bool BranchSequenceNode1523()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002419")]
			[Address(RVA = "0xB89984", Offset = "0xB89984", VA = "0xB89984")]
			private bool BranchSequenceNode1777()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241A")]
			[Address(RVA = "0xB89AA0", Offset = "0xB89AA0", VA = "0xB89AA0")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241B")]
			[Address(RVA = "0xB89B2C", Offset = "0xB89B2C", VA = "0xB89B2C")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241C")]
			[Address(RVA = "0xB89B58", Offset = "0xB89B58", VA = "0xB89B58")]
			private bool BranchSequenceNode1377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241D")]
			[Address(RVA = "0xB89C04", Offset = "0xB89C04", VA = "0xB89C04")]
			private bool BranchSequenceNode1378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241E")]
			[Address(RVA = "0xB89CBC", Offset = "0xB89CBC", VA = "0xB89CBC")]
			private bool BranchSequenceNode1379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600241F")]
			[Address(RVA = "0xB89D44", Offset = "0xB89D44", VA = "0xB89D44")]
			private bool BranchSequenceNode1381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002420")]
			[Address(RVA = "0xB89DA8", Offset = "0xB89DA8", VA = "0xB89DA8")]
			private bool BranchSequenceNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002421")]
			[Address(RVA = "0xB89E28", Offset = "0xB89E28", VA = "0xB89E28")]
			private bool BranchSequenceNode1383()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002422")]
			[Address(RVA = "0xB89F6C", Offset = "0xB89F6C", VA = "0xB89F6C")]
			private bool BranchSequenceNode1384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002423")]
			[Address(RVA = "0xB8A050", Offset = "0xB8A050", VA = "0xB8A050")]
			private bool BranchSelectorNode770()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002424")]
			[Address(RVA = "0xB8A0B4", Offset = "0xB8A0B4", VA = "0xB8A0B4")]
			private bool BranchSelectorNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002425")]
			[Address(RVA = "0xB8A114", Offset = "0xB8A114", VA = "0xB8A114")]
			private bool BranchSequenceNode1794()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002426")]
			[Address(RVA = "0xB8A130", Offset = "0xB8A130", VA = "0xB8A130")]
			private bool BranchSequenceNode1317()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002427")]
			[Address(RVA = "0xB8A28C", Offset = "0xB8A28C", VA = "0xB8A28C")]
			private bool BranchSequenceNode1589()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002428")]
			[Address(RVA = "0xB8A348", Offset = "0xB8A348", VA = "0xB8A348")]
			private bool BranchSequenceNode1590()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002429")]
			[Address(RVA = "0xB8A404", Offset = "0xB8A404", VA = "0xB8A404")]
			private bool BranchSequenceNode1342()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242A")]
			[Address(RVA = "0xB8A4B8", Offset = "0xB8A4B8", VA = "0xB8A4B8")]
			private bool BranchSequenceNode1332()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242B")]
			[Address(RVA = "0xB8A574", Offset = "0xB8A574", VA = "0xB8A574")]
			private bool BranchSequenceNode1618()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242C")]
			[Address(RVA = "0xB8A5D4", Offset = "0xB8A5D4", VA = "0xB8A5D4")]
			private bool BranchSequenceNode1626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242D")]
			[Address(RVA = "0xB8A654", Offset = "0xB8A654", VA = "0xB8A654")]
			private bool BranchSequenceNode1627()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242E")]
			[Address(RVA = "0xB8A6F8", Offset = "0xB8A6F8", VA = "0xB8A6F8")]
			private bool BranchSequenceNode1621()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600242F")]
			[Address(RVA = "0xB8A748", Offset = "0xB8A748", VA = "0xB8A748")]
			private bool BranchSequenceNode1630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002430")]
			[Address(RVA = "0xB8A7E8", Offset = "0xB8A7E8", VA = "0xB8A7E8")]
			private bool BranchSequenceNode1623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002431")]
			[Address(RVA = "0xB8A81C", Offset = "0xB8A81C", VA = "0xB8A81C")]
			private bool BranchSequenceNode1762()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002432")]
			[Address(RVA = "0xB8A8F0", Offset = "0xB8A8F0", VA = "0xB8A8F0")]
			private bool BranchSequenceNode1774()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002433")]
			[Address(RVA = "0xB8A978", Offset = "0xB8A978", VA = "0xB8A978")]
			private bool BranchSelectorNode197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002434")]
			[Address(RVA = "0xB8AAD0", Offset = "0xB8AAD0", VA = "0xB8AAD0")]
			private bool ToggleHeadLookIK198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002435")]
			[Address(RVA = "0xB8AB30", Offset = "0xB8AB30", VA = "0xB8AB30")]
			private bool BranchSequenceNode1508()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002436")]
			[Address(RVA = "0xB8ABB8", Offset = "0xB8ABB8", VA = "0xB8ABB8")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002437")]
			[Address(RVA = "0xB8AC34", Offset = "0xB8AC34", VA = "0xB8AC34")]
			private bool BranchSequenceNode1524()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002438")]
			[Address(RVA = "0xB8ACD4", Offset = "0xB8ACD4", VA = "0xB8ACD4")]
			private bool BranchSequenceNode1547()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002439")]
			[Address(RVA = "0xB8AD38", Offset = "0xB8AD38", VA = "0xB8AD38")]
			private bool BranchSequenceNode1526()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243A")]
			[Address(RVA = "0xB8ADD8", Offset = "0xB8ADD8", VA = "0xB8ADD8")]
			private bool BranchSequenceNode1550()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243B")]
			[Address(RVA = "0xB8AE3C", Offset = "0xB8AE3C", VA = "0xB8AE3C")]
			private bool BranchSequenceNode1528()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243C")]
			[Address(RVA = "0xB8AFA0", Offset = "0xB8AFA0", VA = "0xB8AFA0")]
			private bool BranchSequenceNode1529()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243D")]
			[Address(RVA = "0xB8B0E8", Offset = "0xB8B0E8", VA = "0xB8B0E8")]
			private bool BranchSelectorNode1532()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243E")]
			[Address(RVA = "0xB8B128", Offset = "0xB8B128", VA = "0xB8B128")]
			private bool BranchSequenceNode1824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600243F")]
			[Address(RVA = "0xB8B274", Offset = "0xB8B274", VA = "0xB8B274")]
			private bool BranchSelectorNode1538()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002440")]
			[Address(RVA = "0xB8B314", Offset = "0xB8B314", VA = "0xB8B314")]
			private bool BranchSequenceNode1564()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002441")]
			[Address(RVA = "0xB8B3AC", Offset = "0xB8B3AC", VA = "0xB8B3AC")]
			private bool BranchSequenceNode1834()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002442")]
			[Address(RVA = "0xB8B4F8", Offset = "0xB8B4F8", VA = "0xB8B4F8")]
			private bool BranchSequenceNode1565()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002443")]
			[Address(RVA = "0xB8B670", Offset = "0xB8B670", VA = "0xB8B670")]
			private bool RangeCompareNode1566()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002444")]
			[Address(RVA = "0xB8B7A0", Offset = "0xB8B7A0", VA = "0xB8B7A0")]
			private bool BranchSelectorNode1307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002445")]
			[Address(RVA = "0xB8B8AC", Offset = "0xB8B8AC", VA = "0xB8B8AC")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002446")]
			[Address(RVA = "0xB8B98C", Offset = "0xB8B98C", VA = "0xB8B98C")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002447")]
			[Address(RVA = "0xB8B9EC", Offset = "0xB8B9EC", VA = "0xB8B9EC")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002448")]
			[Address(RVA = "0xB8BAD0", Offset = "0xB8BAD0", VA = "0xB8BAD0")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002449")]
			[Address(RVA = "0xB8BBBC", Offset = "0xB8BBBC", VA = "0xB8BBBC")]
			private bool BranchSequenceNode1385()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244A")]
			[Address(RVA = "0xB8BC64", Offset = "0xB8BC64", VA = "0xB8BC64")]
			private bool BranchSequenceNode1386()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244B")]
			[Address(RVA = "0xB8BD34", Offset = "0xB8BD34", VA = "0xB8BD34")]
			private bool BranchSelectorNode1387()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244C")]
			[Address(RVA = "0xB8BDB8", Offset = "0xB8BDB8", VA = "0xB8BDB8")]
			private bool BranchSequenceNode1388()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244D")]
			[Address(RVA = "0xB8BE5C", Offset = "0xB8BE5C", VA = "0xB8BE5C")]
			private bool BranchSelectorNode1393()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244E")]
			[Address(RVA = "0xB8BEB0", Offset = "0xB8BEB0", VA = "0xB8BEB0")]
			private bool BranchSelectorNode1395()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600244F")]
			[Address(RVA = "0xB8BF8C", Offset = "0xB8BF8C", VA = "0xB8BF8C")]
			private bool BranchSelectorNode1397()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002450")]
			[Address(RVA = "0xB8C04C", Offset = "0xB8C04C", VA = "0xB8C04C")]
			private bool BranchSelectorNode1401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002451")]
			[Address(RVA = "0xB8C0D0", Offset = "0xB8C0D0", VA = "0xB8C0D0")]
			private bool BranchSequenceNode1431()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002452")]
			[Address(RVA = "0xB8C180", Offset = "0xB8C180", VA = "0xB8C180")]
			private bool BranchSequenceNode1432()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002453")]
			[Address(RVA = "0xB8C2A0", Offset = "0xB8C2A0", VA = "0xB8C2A0")]
			private bool BranchSequenceNode1433()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002454")]
			[Address(RVA = "0xB8C334", Offset = "0xB8C334", VA = "0xB8C334")]
			private bool BranchSequenceNode902()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002455")]
			[Address(RVA = "0xB8C3E0", Offset = "0xB8C3E0", VA = "0xB8C3E0")]
			private bool BranchSequenceNode980()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002456")]
			[Address(RVA = "0xB8C438", Offset = "0xB8C438", VA = "0xB8C438")]
			private bool BranchSequenceNode1061()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002457")]
			[Address(RVA = "0xB8C538", Offset = "0xB8C538", VA = "0xB8C538")]
			private bool BranchSequenceNode1796()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002458")]
			[Address(RVA = "0xB8C5E4", Offset = "0xB8C5E4", VA = "0xB8C5E4")]
			private bool BranchSequenceNode1844()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002459")]
			[Address(RVA = "0xB8C730", Offset = "0xB8C730", VA = "0xB8C730")]
			private bool BranchSequenceNode1814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245A")]
			[Address(RVA = "0xB8C87C", Offset = "0xB8C87C", VA = "0xB8C87C")]
			private bool BranchSequenceNode1599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245B")]
			[Address(RVA = "0xB8C908", Offset = "0xB8C908", VA = "0xB8C908")]
			private bool BranchSequenceNode1338()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245C")]
			[Address(RVA = "0xB8C990", Offset = "0xB8C990", VA = "0xB8C990")]
			private bool BranchSequenceNode1633()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245D")]
			[Address(RVA = "0xB8CA64", Offset = "0xB8CA64", VA = "0xB8CA64")]
			private bool BranchSequenceNode1634()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245E")]
			[Address(RVA = "0xB8CAC4", Offset = "0xB8CAC4", VA = "0xB8CAC4")]
			private bool BranchSequenceNode1650()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600245F")]
			[Address(RVA = "0xB8CB14", Offset = "0xB8CB14", VA = "0xB8CB14")]
			private bool BranchSequenceNode1637()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002460")]
			[Address(RVA = "0xB8CB54", Offset = "0xB8CB54", VA = "0xB8CB54")]
			private bool BranchSequenceNode1653()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002461")]
			[Address(RVA = "0xB8CBD0", Offset = "0xB8CBD0", VA = "0xB8CBD0")]
			private bool BranchSequenceNode1854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002462")]
			[Address(RVA = "0xB8CCB4", Offset = "0xB8CCB4", VA = "0xB8CCB4")]
			private bool BranchSequenceNode1640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002463")]
			[Address(RVA = "0xB8CCE8", Offset = "0xB8CCE8", VA = "0xB8CCE8")]
			private bool BranchSequenceNode1641()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002464")]
			[Address(RVA = "0xB8CD38", Offset = "0xB8CD38", VA = "0xB8CD38")]
			private bool ActionWaitNode1658()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002465")]
			[Address(RVA = "0xB8CD98", Offset = "0xB8CD98", VA = "0xB8CD98")]
			private bool BranchSequenceNode1884()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002466")]
			[Address(RVA = "0xB8CEB0", Offset = "0xB8CEB0", VA = "0xB8CEB0")]
			private bool BranchSequenceNode1891()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002467")]
			[Address(RVA = "0xB8D06C", Offset = "0xB8D06C", VA = "0xB8D06C")]
			private bool BranchSequenceNode1645()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002468")]
			[Address(RVA = "0xB8D184", Offset = "0xB8D184", VA = "0xB8D184")]
			private bool BranchSequenceNode1145()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002469")]
			[Address(RVA = "0xB8D234", Offset = "0xB8D234", VA = "0xB8D234")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246A")]
			[Address(RVA = "0xB8D294", Offset = "0xB8D294", VA = "0xB8D294")]
			private bool BranchSequenceNode1152()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246B")]
			[Address(RVA = "0xB8D2F4", Offset = "0xB8D2F4", VA = "0xB8D2F4")]
			private bool BranchSequenceNode1567()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246C")]
			[Address(RVA = "0xB8D35C", Offset = "0xB8D35C", VA = "0xB8D35C")]
			private bool RangeCompareNode1568()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246D")]
			[Address(RVA = "0xB8D494", Offset = "0xB8D494", VA = "0xB8D494")]
			private bool BranchSequenceNode1570()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246E")]
			[Address(RVA = "0xB8D4FC", Offset = "0xB8D4FC", VA = "0xB8D4FC")]
			private bool RangeCompareNode1571()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600246F")]
			[Address(RVA = "0xB8D634", Offset = "0xB8D634", VA = "0xB8D634")]
			private bool RangeCompareNode1560()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002470")]
			[Address(RVA = "0xB8D76C", Offset = "0xB8D76C", VA = "0xB8D76C")]
			private bool RangeCompareNode1561()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002471")]
			[Address(RVA = "0xB8D8A4", Offset = "0xB8D8A4", VA = "0xB8D8A4")]
			private bool BranchSequenceNode1831()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002472")]
			[Address(RVA = "0xB8D92C", Offset = "0xB8D92C", VA = "0xB8D92C")]
			private bool RangeCompareNode1563()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002473")]
			[Address(RVA = "0xB8DA64", Offset = "0xB8DA64", VA = "0xB8DA64")]
			private bool BranchSequenceNode1841()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002474")]
			[Address(RVA = "0xB8DAEC", Offset = "0xB8DAEC", VA = "0xB8DAEC")]
			private bool BranchSequenceNode1309()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002475")]
			[Address(RVA = "0xB8DB70", Offset = "0xB8DB70", VA = "0xB8DB70")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002476")]
			[Address(RVA = "0xB8DBD4", Offset = "0xB8DBD4", VA = "0xB8DBD4")]
			private bool BranchSequenceNode1182()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002477")]
			[Address(RVA = "0xB8DC34", Offset = "0xB8DC34", VA = "0xB8DC34")]
			private bool BranchSequenceNode1158()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002478")]
			[Address(RVA = "0xB8DD98", Offset = "0xB8DD98", VA = "0xB8DD98")]
			private bool BranchRandomNode723()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002479")]
			[Address(RVA = "0xB8DF1C", Offset = "0xB8DF1C", VA = "0xB8DF1C")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247A")]
			[Address(RVA = "0xB8DFE0", Offset = "0xB8DFE0", VA = "0xB8DFE0")]
			private bool BranchSelectorNode1048()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247B")]
			[Address(RVA = "0xB8E020", Offset = "0xB8E020", VA = "0xB8E020")]
			private bool BranchSequenceNode1133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247C")]
			[Address(RVA = "0xB8E09C", Offset = "0xB8E09C", VA = "0xB8E09C")]
			private bool BranchSequenceNode207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247D")]
			[Address(RVA = "0xB8E0FC", Offset = "0xB8E0FC", VA = "0xB8E0FC")]
			private bool BranchSequenceNode830()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247E")]
			[Address(RVA = "0xB8E198", Offset = "0xB8E198", VA = "0xB8E198")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600247F")]
			[Address(RVA = "0xB8E214", Offset = "0xB8E214", VA = "0xB8E214")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002480")]
			[Address(RVA = "0xB8E264", Offset = "0xB8E264", VA = "0xB8E264")]
			private bool BranchSequenceNode1434()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002481")]
			[Address(RVA = "0xB8E2B4", Offset = "0xB8E2B4", VA = "0xB8E2B4")]
			private bool BranchSequenceNode1413()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002482")]
			[Address(RVA = "0xB8E344", Offset = "0xB8E344", VA = "0xB8E344")]
			private bool BranchSequenceNode1414()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002483")]
			[Address(RVA = "0xB8E3D4", Offset = "0xB8E3D4", VA = "0xB8E3D4")]
			private bool BranchSequenceNode1415()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002484")]
			[Address(RVA = "0xB8E464", Offset = "0xB8E464", VA = "0xB8E464")]
			private bool BranchSequenceNode1416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002485")]
			[Address(RVA = "0xB8E4F4", Offset = "0xB8E4F4", VA = "0xB8E4F4")]
			private bool BranchSequenceNode1421()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002486")]
			[Address(RVA = "0xB8E59C", Offset = "0xB8E59C", VA = "0xB8E59C")]
			private bool BranchSequenceNode1422()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002487")]
			[Address(RVA = "0xB8E5DC", Offset = "0xB8E5DC", VA = "0xB8E5DC")]
			private bool BranchSequenceNode1427()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002488")]
			[Address(RVA = "0xB8E654", Offset = "0xB8E654", VA = "0xB8E654")]
			private bool BranchSequenceNode1428()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002489")]
			[Address(RVA = "0xB8E6C0", Offset = "0xB8E6C0", VA = "0xB8E6C0")]
			private bool BranchSequenceNode1429()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248A")]
			[Address(RVA = "0xB8E79C", Offset = "0xB8E79C", VA = "0xB8E79C")]
			private bool BranchSequenceNode1430()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248B")]
			[Address(RVA = "0xB8E818", Offset = "0xB8E818", VA = "0xB8E818")]
			private bool RangeCompareNode1461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248C")]
			[Address(RVA = "0xB8E950", Offset = "0xB8E950", VA = "0xB8E950")]
			private bool BranchSelectorNode1462()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248D")]
			[Address(RVA = "0xB8EA1C", Offset = "0xB8EA1C", VA = "0xB8EA1C")]
			private bool BranchSequenceNode1901()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248E")]
			[Address(RVA = "0xB8EB68", Offset = "0xB8EB68", VA = "0xB8EB68")]
			private bool BranchSelectorNode1355()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600248F")]
			[Address(RVA = "0xB8EC18", Offset = "0xB8EC18", VA = "0xB8EC18")]
			private bool BranchSequenceNode1313()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002490")]
			[Address(RVA = "0xB8EC90", Offset = "0xB8EC90", VA = "0xB8EC90")]
			private bool BranchSequenceNode1053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002491")]
			[Address(RVA = "0xB8ED00", Offset = "0xB8ED00", VA = "0xB8ED00")]
			private bool BranchSelectorNode1284()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002492")]
			[Address(RVA = "0xB8ED60", Offset = "0xB8ED60", VA = "0xB8ED60")]
			private bool BranchSequenceNode1797()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002493")]
			[Address(RVA = "0xB8EDF4", Offset = "0xB8EDF4", VA = "0xB8EDF4")]
			private bool BranchSequenceNode1806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002494")]
			[Address(RVA = "0xB8EE90", Offset = "0xB8EE90", VA = "0xB8EE90")]
			private bool BranchSequenceNode1932()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002495")]
			[Address(RVA = "0xB8EF4C", Offset = "0xB8EF4C", VA = "0xB8EF4C")]
			private bool BranchSequenceNode1851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002496")]
			[Address(RVA = "0xB8EFD4", Offset = "0xB8EFD4", VA = "0xB8EFD4")]
			private bool BranchSequenceNode1821()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002497")]
			[Address(RVA = "0xB8F05C", Offset = "0xB8F05C", VA = "0xB8F05C")]
			private bool BranchSequenceNode1603()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002498")]
			[Address(RVA = "0xB8F10C", Offset = "0xB8F10C", VA = "0xB8F10C")]
			private bool BranchSequenceNode1911()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002499")]
			[Address(RVA = "0xB8F128", Offset = "0xB8F128", VA = "0xB8F128")]
			private bool BranchSequenceNode1665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249A")]
			[Address(RVA = "0xB8F168", Offset = "0xB8F168", VA = "0xB8F168")]
			private bool BranchSelectorNode1681()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249B")]
			[Address(RVA = "0xB8F254", Offset = "0xB8F254", VA = "0xB8F254")]
			private bool BranchSequenceNode1651()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249C")]
			[Address(RVA = "0xB8F308", Offset = "0xB8F308", VA = "0xB8F308")]
			private bool BranchSequenceNode1670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249D")]
			[Address(RVA = "0xB8F428", Offset = "0xB8F428", VA = "0xB8F428")]
			private bool BranchSequenceNode1671()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249E")]
			[Address(RVA = "0xB8F514", Offset = "0xB8F514", VA = "0xB8F514")]
			private bool ActionWaitChoiceNode1672()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600249F")]
			[Address(RVA = "0xB8F574", Offset = "0xB8F574", VA = "0xB8F574")]
			private bool BranchSequenceNode1673()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0xB8F614", Offset = "0xB8F614", VA = "0xB8F614")]
			private bool BranchSequenceNode1858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xB8F694", Offset = "0xB8F694", VA = "0xB8F694")]
			private bool BranchSelectorNode1857()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0xB8F6EC", Offset = "0xB8F6EC", VA = "0xB8F6EC")]
			private bool BranchSelectorNode1656()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A3")]
			[Address(RVA = "0xB8F72C", Offset = "0xB8F72C", VA = "0xB8F72C")]
			private bool BranchSequenceNode1657()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A4")]
			[Address(RVA = "0xB8F7C4", Offset = "0xB8F7C4", VA = "0xB8F7C4")]
			private bool BranchSequenceNode1897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A5")]
			[Address(RVA = "0xB8F840", Offset = "0xB8F840", VA = "0xB8F840")]
			private bool BranchRandomNode1154()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0xB8F918", Offset = "0xB8F918", VA = "0xB8F918")]
			private bool RangeCompareNode1584()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A7")]
			[Address(RVA = "0xB8FA50", Offset = "0xB8FA50", VA = "0xB8FA50")]
			private bool RangeCompareNode1586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0xB8FB88", Offset = "0xB8FB88", VA = "0xB8FB88")]
			private bool BranchSequenceNode2004()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024A9")]
			[Address(RVA = "0xB8FCD4", Offset = "0xB8FCD4", VA = "0xB8FCD4")]
			private bool BranchSelectorNode2014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AA")]
			[Address(RVA = "0xB8FF68", Offset = "0xB8FF68", VA = "0xB8FF68")]
			private bool BranchSequenceNode1942()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AB")]
			[Address(RVA = "0xB8FFC8", Offset = "0xB8FFC8", VA = "0xB8FFC8")]
			private bool BranchSequenceNode1160()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AC")]
			[Address(RVA = "0xB90068", Offset = "0xB90068", VA = "0xB90068")]
			private bool ActionWaitNode724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AD")]
			[Address(RVA = "0xB900C8", Offset = "0xB900C8", VA = "0xB900C8")]
			private bool ActionWaitNode725()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AE")]
			[Address(RVA = "0xB90128", Offset = "0xB90128", VA = "0xB90128")]
			private bool ActionWaitNode726()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024AF")]
			[Address(RVA = "0xB90188", Offset = "0xB90188", VA = "0xB90188")]
			private bool ActionWaitNode727()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0xB901E8", Offset = "0xB901E8", VA = "0xB901E8")]
			private bool BranchSequenceNode1040()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B1")]
			[Address(RVA = "0xB902C4", Offset = "0xB902C4", VA = "0xB902C4")]
			private bool BranchSequenceNode1034()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B2")]
			[Address(RVA = "0xB90360", Offset = "0xB90360", VA = "0xB90360")]
			private bool BranchSequenceNode1126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B3")]
			[Address(RVA = "0xB90478", Offset = "0xB90478", VA = "0xB90478")]
			private bool BranchSequenceNode1135()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B4")]
			[Address(RVA = "0xB904D8", Offset = "0xB904D8", VA = "0xB904D8")]
			private bool BranchSequenceNode1141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B5")]
			[Address(RVA = "0xB90590", Offset = "0xB90590", VA = "0xB90590")]
			private bool BranchSequenceNode208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B6")]
			[Address(RVA = "0xB90618", Offset = "0xB90618", VA = "0xB90618")]
			private bool BranchSequenceNode209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B7")]
			[Address(RVA = "0xB90770", Offset = "0xB90770", VA = "0xB90770")]
			private bool BranchSequenceNode225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B8")]
			[Address(RVA = "0xB907FC", Offset = "0xB907FC", VA = "0xB907FC")]
			private bool BranchSequenceNode211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024B9")]
			[Address(RVA = "0xB90938", Offset = "0xB90938", VA = "0xB90938")]
			private bool BranchSequenceNode805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BA")]
			[Address(RVA = "0xB90AB8", Offset = "0xB90AB8", VA = "0xB90AB8")]
			private bool BranchSequenceNode1223()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BB")]
			[Address(RVA = "0xB90AF8", Offset = "0xB90AF8", VA = "0xB90AF8")]
			private bool BranchSequenceNode1243()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BC")]
			[Address(RVA = "0xB90B58", Offset = "0xB90B58", VA = "0xB90B58")]
			private bool BranchSequenceNode1259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BD")]
			[Address(RVA = "0xB90C50", Offset = "0xB90C50", VA = "0xB90C50")]
			private bool BranchSequenceNode1267()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xB90D24", Offset = "0xB90D24", VA = "0xB90D24")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xB90E70", Offset = "0xB90E70", VA = "0xB90E70")]
			private bool BranchSequenceNode1961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xB90ED0", Offset = "0xB90ED0", VA = "0xB90ED0")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xB90F94", Offset = "0xB90F94", VA = "0xB90F94")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xB9108C", Offset = "0xB9108C", VA = "0xB9108C")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xB91164", Offset = "0xB91164", VA = "0xB91164")]
			private bool BranchSequenceNode1447()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xB91244", Offset = "0xB91244", VA = "0xB91244")]
			private bool BranchSelectorNode1448()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C5")]
			[Address(RVA = "0xB913BC", Offset = "0xB913BC", VA = "0xB913BC")]
			private bool RangeCompareNode1454()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C6")]
			[Address(RVA = "0xB914F4", Offset = "0xB914F4", VA = "0xB914F4")]
			private bool BranchSelectorNode1458()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0xB91534", Offset = "0xB91534", VA = "0xB91534")]
			private bool BranchSequenceNode1483()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C8")]
			[Address(RVA = "0xB915AC", Offset = "0xB915AC", VA = "0xB915AC")]
			private bool BranchSequenceNode1484()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024C9")]
			[Address(RVA = "0xB91624", Offset = "0xB91624", VA = "0xB91624")]
			private bool BranchSequenceNode1908()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CA")]
			[Address(RVA = "0xB916AC", Offset = "0xB916AC", VA = "0xB916AC")]
			private bool BranchSequenceNode1054()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CB")]
			[Address(RVA = "0xB9173C", Offset = "0xB9173C", VA = "0xB9173C")]
			private bool BranchSequenceNode1285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CC")]
			[Address(RVA = "0xB9178C", Offset = "0xB9178C", VA = "0xB9178C")]
			private bool BranchSelectorNode1807()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CD")]
			[Address(RVA = "0xB91838", Offset = "0xB91838", VA = "0xB91838")]
			private bool BranchSequenceNode2040()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CE")]
			[Address(RVA = "0xB91984", Offset = "0xB91984", VA = "0xB91984")]
			private bool BranchSequenceNode1936()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024CF")]
			[Address(RVA = "0xB91A58", Offset = "0xB91A58", VA = "0xB91A58")]
			private bool BranchSequenceNode1609()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D0")]
			[Address(RVA = "0xB91AF4", Offset = "0xB91AF4", VA = "0xB91AF4")]
			private bool BranchSequenceNode1975()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D1")]
			[Address(RVA = "0xB91BB0", Offset = "0xB91BB0", VA = "0xB91BB0")]
			private bool BranchSequenceNode1913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D2")]
			[Address(RVA = "0xB91C5C", Offset = "0xB91C5C", VA = "0xB91C5C")]
			private bool BranchSequenceNode1679()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D3")]
			[Address(RVA = "0xB91D08", Offset = "0xB91D08", VA = "0xB91D08")]
			private bool BranchSequenceNode1680()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D4")]
			[Address(RVA = "0xB91E3C", Offset = "0xB91E3C", VA = "0xB91E3C")]
			private bool BranchSequenceNode1716()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D5")]
			[Address(RVA = "0xB91ECC", Offset = "0xB91ECC", VA = "0xB91ECC")]
			private bool BranchSequenceNode1726()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D6")]
			[Address(RVA = "0xB91F48", Offset = "0xB91F48", VA = "0xB91F48")]
			private bool BranchSequenceNode1984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D7")]
			[Address(RVA = "0xB92094", Offset = "0xB92094", VA = "0xB92094")]
			private bool BranchSequenceNode1995()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D8")]
			[Address(RVA = "0xB92150", Offset = "0xB92150", VA = "0xB92150")]
			private bool BranchSelectorNode1695()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024D9")]
			[Address(RVA = "0xB921CC", Offset = "0xB921CC", VA = "0xB921CC")]
			private bool BranchSelectorNode1696()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DA")]
			[Address(RVA = "0xB9220C", Offset = "0xB9220C", VA = "0xB9220C")]
			private bool BranchSequenceNode1859()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DB")]
			[Address(RVA = "0xB92240", Offset = "0xB92240", VA = "0xB92240")]
			private bool BranchSelectorNode1864()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DC")]
			[Address(RVA = "0xB922D8", Offset = "0xB922D8", VA = "0xB922D8")]
			private bool BranchSequenceNode1674()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DD")]
			[Address(RVA = "0xB9239C", Offset = "0xB9239C", VA = "0xB9239C")]
			private bool BranchSequenceNode1675()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DE")]
			[Address(RVA = "0xB92490", Offset = "0xB92490", VA = "0xB92490")]
			private bool ActionWaitNode1153()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024DF")]
			[Address(RVA = "0xB924F0", Offset = "0xB924F0", VA = "0xB924F0")]
			private bool ActionWaitNode1155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E0")]
			[Address(RVA = "0xB92550", Offset = "0xB92550", VA = "0xB92550")]
			private bool BranchSequenceNode2011()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E1")]
			[Address(RVA = "0xB925D8", Offset = "0xB925D8", VA = "0xB925D8")]
			private bool BranchSequenceNode2015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E2")]
			[Address(RVA = "0xB92678", Offset = "0xB92678", VA = "0xB92678")]
			private bool BranchSequenceNode2016()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E3")]
			[Address(RVA = "0xB9271C", Offset = "0xB9271C", VA = "0xB9271C")]
			private bool BranchSequenceNode2017()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E4")]
			[Address(RVA = "0xB927C0", Offset = "0xB927C0", VA = "0xB927C0")]
			private bool BranchSequenceNode2018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E5")]
			[Address(RVA = "0xB92864", Offset = "0xB92864", VA = "0xB92864")]
			private bool BranchSequenceNode2019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E6")]
			[Address(RVA = "0xB92908", Offset = "0xB92908", VA = "0xB92908")]
			private bool BranchRandomNode1944()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E7")]
			[Address(RVA = "0xB92AD8", Offset = "0xB92AD8", VA = "0xB92AD8")]
			private bool BranchSequenceNode1945()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0xB92B44", Offset = "0xB92B44", VA = "0xB92B44")]
			private bool ActionWaitNode1946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024E9")]
			[Address(RVA = "0xB92BA4", Offset = "0xB92BA4", VA = "0xB92BA4")]
			private bool BranchSequenceNode1948()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024EA")]
			[Address(RVA = "0xB92C4C", Offset = "0xB92C4C", VA = "0xB92C4C")]
			private bool BranchSelectorNode1176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024EB")]
			[Address(RVA = "0xB92CAC", Offset = "0xB92CAC", VA = "0xB92CAC")]
			private bool BranchSequenceNode2071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024EC")]
			[Address(RVA = "0xB92D0C", Offset = "0xB92D0C", VA = "0xB92D0C")]
			private bool BranchSequenceNode1044()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024ED")]
			[Address(RVA = "0xB92E00", Offset = "0xB92E00", VA = "0xB92E00")]
			private bool StartAttackNode1038()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024EE")]
			[Address(RVA = "0xB92E60", Offset = "0xB92E60", VA = "0xB92E60")]
			private bool BranchSequenceNode1031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024EF")]
			[Address(RVA = "0xB92F54", Offset = "0xB92F54", VA = "0xB92F54")]
			private bool BranchSequenceNode1290()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F0")]
			[Address(RVA = "0xB92F94", Offset = "0xB92F94", VA = "0xB92F94")]
			private bool StartAttackNode1142()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F1")]
			[Address(RVA = "0xB92FF4", Offset = "0xB92FF4", VA = "0xB92FF4")]
			private bool ActionWaitNode1136()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F2")]
			[Address(RVA = "0xB93054", Offset = "0xB93054", VA = "0xB93054")]
			private bool BranchSequenceNode1359()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F3")]
			[Address(RVA = "0xB93134", Offset = "0xB93134", VA = "0xB93134")]
			private bool BranchSelectorNode896()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F4")]
			[Address(RVA = "0xB9322C", Offset = "0xB9322C", VA = "0xB9322C")]
			private bool BranchSequenceNode924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F5")]
			[Address(RVA = "0xB93268", Offset = "0xB93268", VA = "0xB93268")]
			private bool BranchSequenceNode226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F6")]
			[Address(RVA = "0xB93314", Offset = "0xB93314", VA = "0xB93314")]
			private bool BranchSelectorNode1107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F7")]
			[Address(RVA = "0xB93394", Offset = "0xB93394", VA = "0xB93394")]
			private bool RangeCompareNode1221()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F8")]
			[Address(RVA = "0xB934CC", Offset = "0xB934CC", VA = "0xB934CC")]
			private bool BranchSequenceNode1233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xB9358C", Offset = "0xB9358C", VA = "0xB9358C")]
			private bool BranchSequenceNode1239()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xB93634", Offset = "0xB93634", VA = "0xB93634")]
			private bool BranchSelectorNode1251()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xB936AC", Offset = "0xB936AC", VA = "0xB936AC")]
			private bool BranchSequenceNode1261()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xB9370C", Offset = "0xB9370C", VA = "0xB9370C")]
			private bool BranchSequenceNode1268()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xB937B4", Offset = "0xB937B4", VA = "0xB937B4")]
			private bool BranchSequenceNode1968()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xB93844", Offset = "0xB93844", VA = "0xB93844")]
			private bool ActionDisengage1963()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xB938A4", Offset = "0xB938A4", VA = "0xB938A4")]
			private bool ActionWaitNode1965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002500")]
			[Address(RVA = "0xB93904", Offset = "0xB93904", VA = "0xB93904")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002501")]
			[Address(RVA = "0xB939A0", Offset = "0xB939A0", VA = "0xB939A0")]
			private bool BranchSequenceNode922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002502")]
			[Address(RVA = "0xB93A30", Offset = "0xB93A30", VA = "0xB93A30")]
			private bool BranchSequenceNode575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002503")]
			[Address(RVA = "0xB93A90", Offset = "0xB93A90", VA = "0xB93A90")]
			private bool BranchSequenceNode920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002504")]
			[Address(RVA = "0xB93B20", Offset = "0xB93B20", VA = "0xB93B20")]
			private bool BranchSequenceNode706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002505")]
			[Address(RVA = "0xB93B80", Offset = "0xB93B80", VA = "0xB93B80")]
			private bool BranchSequenceNode1479()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002506")]
			[Address(RVA = "0xB93BEC", Offset = "0xB93BEC", VA = "0xB93BEC")]
			private bool BranchSequenceNode1481()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002507")]
			[Address(RVA = "0xB93CC8", Offset = "0xB93CC8", VA = "0xB93CC8")]
			private bool BranchSequenceNode1482()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002508")]
			[Address(RVA = "0xB93E14", Offset = "0xB93E14", VA = "0xB93E14")]
			private bool BranchSequenceNode1063()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002509")]
			[Address(RVA = "0xB93F0C", Offset = "0xB93F0C", VA = "0xB93F0C")]
			private bool BranchSequenceNode2031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250A")]
			[Address(RVA = "0xB93FC8", Offset = "0xB93FC8", VA = "0xB93FC8")]
			private bool BranchSequenceNode2047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250B")]
			[Address(RVA = "0xB94050", Offset = "0xB94050", VA = "0xB94050")]
			private bool BranchSelectorNode1610()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250C")]
			[Address(RVA = "0xB940FC", Offset = "0xB940FC", VA = "0xB940FC")]
			private bool BranchSequenceNode2060()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250D")]
			[Address(RVA = "0xB94248", Offset = "0xB94248", VA = "0xB94248")]
			private bool BranchSequenceNode1979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250E")]
			[Address(RVA = "0xB9431C", Offset = "0xB9431C", VA = "0xB9431C")]
			private bool BranchSequenceNode1914()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600250F")]
			[Address(RVA = "0xB943B0", Offset = "0xB943B0", VA = "0xB943B0")]
			private bool BranchSequenceNode1923()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002510")]
			[Address(RVA = "0xB9444C", Offset = "0xB9444C", VA = "0xB9444C")]
			private bool BranchSequenceNode2051()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002511")]
			[Address(RVA = "0xB94508", Offset = "0xB94508", VA = "0xB94508")]
			private bool BranchSelectorNode1722()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002512")]
			[Address(RVA = "0xB945B0", Offset = "0xB945B0", VA = "0xB945B0")]
			private bool BranchSequenceNode1723()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002513")]
			[Address(RVA = "0xB94670", Offset = "0xB94670", VA = "0xB94670")]
			private bool ActionWaitNode1738()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002514")]
			[Address(RVA = "0xB946D0", Offset = "0xB946D0", VA = "0xB946D0")]
			private bool BranchSequenceNode1725()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002515")]
			[Address(RVA = "0xB94750", Offset = "0xB94750", VA = "0xB94750")]
			private bool BranchSequenceNode1742()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002516")]
			[Address(RVA = "0xB94800", Offset = "0xB94800", VA = "0xB94800")]
			private bool ActionWaitChoiceNode1743()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002517")]
			[Address(RVA = "0xB94860", Offset = "0xB94860", VA = "0xB94860")]
			private bool BranchSequenceNode1744()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002518")]
			[Address(RVA = "0xB948A8", Offset = "0xB948A8", VA = "0xB948A8")]
			private bool BranchSequenceNode1991()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002519")]
			[Address(RVA = "0xB94930", Offset = "0xB94930", VA = "0xB94930")]
			private bool BranchSequenceNode1999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251A")]
			[Address(RVA = "0xB94A04", Offset = "0xB94A04", VA = "0xB94A04")]
			private bool BranchSequenceNode1718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251B")]
			[Address(RVA = "0xB94A88", Offset = "0xB94A88", VA = "0xB94A88")]
			private bool BranchSequenceNode1720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251C")]
			[Address(RVA = "0xB94B5C", Offset = "0xB94B5C", VA = "0xB94B5C")]
			private bool BranchSequenceNode1721()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251D")]
			[Address(RVA = "0xB94C10", Offset = "0xB94C10", VA = "0xB94C10")]
			private bool BranchSequenceNode1865()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251E")]
			[Address(RVA = "0xB94C48", Offset = "0xB94C48", VA = "0xB94C48")]
			private bool BranchSequenceNode1866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600251F")]
			[Address(RVA = "0xB94C8C", Offset = "0xB94C8C", VA = "0xB94C8C")]
			private bool BranchSequenceNode1867()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002520")]
			[Address(RVA = "0xB94E00", Offset = "0xB94E00", VA = "0xB94E00")]
			private bool BranchSequenceNode1879()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002521")]
			[Address(RVA = "0xB94EAC", Offset = "0xB94EAC", VA = "0xB94EAC")]
			private bool ListenGlobalEventNode2021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002522")]
			[Address(RVA = "0xB94F0C", Offset = "0xB94F0C", VA = "0xB94F0C")]
			private bool ListenGlobalEventNode2023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002523")]
			[Address(RVA = "0xB94F6C", Offset = "0xB94F6C", VA = "0xB94F6C")]
			private bool ListenGlobalEventNode2025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002524")]
			[Address(RVA = "0xB94FCC", Offset = "0xB94FCC", VA = "0xB94FCC")]
			private bool ListenGlobalEventNode2027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002525")]
			[Address(RVA = "0xB9502C", Offset = "0xB9502C", VA = "0xB9502C")]
			private bool ListenGlobalEventNode2029()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002526")]
			[Address(RVA = "0xB9508C", Offset = "0xB9508C", VA = "0xB9508C")]
			private bool ActionWaitNode1949()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002527")]
			[Address(RVA = "0xB950EC", Offset = "0xB950EC", VA = "0xB950EC")]
			private bool ActionWaitNode1950()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002528")]
			[Address(RVA = "0xB9514C", Offset = "0xB9514C", VA = "0xB9514C")]
			private bool ActionWaitNode1951()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002529")]
			[Address(RVA = "0xB951AC", Offset = "0xB951AC", VA = "0xB951AC")]
			private bool ActionWaitNode1952()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252A")]
			[Address(RVA = "0xB9520C", Offset = "0xB9520C", VA = "0xB9520C")]
			private bool ActionWaitNode1953()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252B")]
			[Address(RVA = "0xB9526C", Offset = "0xB9526C", VA = "0xB9526C")]
			private bool ToggleTargetableNode1954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252C")]
			[Address(RVA = "0xB952F4", Offset = "0xB952F4", VA = "0xB952F4")]
			private bool BranchSequenceNode1174()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252D")]
			[Address(RVA = "0xB9532C", Offset = "0xB9532C", VA = "0xB9532C")]
			private bool BranchSelectorNode2196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252E")]
			[Address(RVA = "0xB955C0", Offset = "0xB955C0", VA = "0xB955C0")]
			private bool BranchRandomNode2073()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600252F")]
			[Address(RVA = "0xB95790", Offset = "0xB95790", VA = "0xB95790")]
			private bool BranchSequenceNode2074()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002530")]
			[Address(RVA = "0xB957FC", Offset = "0xB957FC", VA = "0xB957FC")]
			private bool ActionWaitNode2075()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002531")]
			[Address(RVA = "0xB9585C", Offset = "0xB9585C", VA = "0xB9585C")]
			private bool BranchSequenceNode2077()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002532")]
			[Address(RVA = "0xB95904", Offset = "0xB95904", VA = "0xB95904")]
			private bool BranchSelectorNode1046()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002533")]
			[Address(RVA = "0xB95958", Offset = "0xB95958", VA = "0xB95958")]
			private bool RangeCompareNode1291()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002534")]
			[Address(RVA = "0xB95A90", Offset = "0xB95A90", VA = "0xB95A90")]
			private bool BranchSequenceNode1288()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002535")]
			[Address(RVA = "0xB95B84", Offset = "0xB95B84", VA = "0xB95B84")]
			private bool BranchSequenceNode910()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002536")]
			[Address(RVA = "0xB95C5C", Offset = "0xB95C5C", VA = "0xB95C5C")]
			private bool BranchSequenceNode1014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002537")]
			[Address(RVA = "0xB95CDC", Offset = "0xB95CDC", VA = "0xB95CDC")]
			private bool BranchSelectorNode218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002538")]
			[Address(RVA = "0xB95DD4", Offset = "0xB95DD4", VA = "0xB95DD4")]
			private bool BranchSequenceNode1103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002539")]
			[Address(RVA = "0xB95E48", Offset = "0xB95E48", VA = "0xB95E48")]
			private bool StartAttackNode1234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253A")]
			[Address(RVA = "0xB95EA8", Offset = "0xB95EA8", VA = "0xB95EA8")]
			private bool BranchSequenceNode1253()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253B")]
			[Address(RVA = "0xB95F64", Offset = "0xB95F64", VA = "0xB95F64")]
			private bool StartAttackNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253C")]
			[Address(RVA = "0xB95FC4", Offset = "0xB95FC4", VA = "0xB95FC4")]
			private bool BranchSelectorNode1970()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253D")]
			[Address(RVA = "0xB96044", Offset = "0xB96044", VA = "0xB96044")]
			private bool BranchSequenceNode2090()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253E")]
			[Address(RVA = "0xB96190", Offset = "0xB96190", VA = "0xB96190")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600253F")]
			[Address(RVA = "0xB96224", Offset = "0xB96224", VA = "0xB96224")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002540")]
			[Address(RVA = "0xB962EC", Offset = "0xB962EC", VA = "0xB962EC")]
			private bool RangeCompareNode577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002541")]
			[Address(RVA = "0xB96424", Offset = "0xB96424", VA = "0xB96424")]
			private bool BranchSelectorNode1073()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002542")]
			[Address(RVA = "0xB96474", Offset = "0xB96474", VA = "0xB96474")]
			private bool RangeCompareNode578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002543")]
			[Address(RVA = "0xB965AC", Offset = "0xB965AC", VA = "0xB965AC")]
			private bool BranchSelectorNode1090()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002544")]
			[Address(RVA = "0xB965FC", Offset = "0xB965FC", VA = "0xB965FC")]
			private bool RangeCompareNode1488()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002545")]
			[Address(RVA = "0xB96734", Offset = "0xB96734", VA = "0xB96734")]
			private bool BranchSequenceNode2035()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002546")]
			[Address(RVA = "0xB96808", Offset = "0xB96808", VA = "0xB96808")]
			private bool BranchSequenceNode2067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002547")]
			[Address(RVA = "0xB96890", Offset = "0xB96890", VA = "0xB96890")]
			private bool BranchSelectorNode1924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002548")]
			[Address(RVA = "0xB9693C", Offset = "0xB9693C", VA = "0xB9693C")]
			private bool BranchSequenceNode2100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002549")]
			[Address(RVA = "0xB96A88", Offset = "0xB96A88", VA = "0xB96A88")]
			private bool BranchSequenceNode2055()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254A")]
			[Address(RVA = "0xB96B5C", Offset = "0xB96B5C", VA = "0xB96B5C")]
			private bool BranchSequenceNode2110()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254B")]
			[Address(RVA = "0xB96C74", Offset = "0xB96C74", VA = "0xB96C74")]
			private bool BranchSequenceNode2157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254C")]
			[Address(RVA = "0xB96DC0", Offset = "0xB96DC0", VA = "0xB96DC0")]
			private bool BranchSelectorNode1750()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254D")]
			[Address(RVA = "0xB96E00", Offset = "0xB96E00", VA = "0xB96E00")]
			private bool BranchSequenceNode2197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254E")]
			[Address(RVA = "0xB96EA0", Offset = "0xB96EA0", VA = "0xB96EA0")]
			private bool BranchSequenceNode2198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600254F")]
			[Address(RVA = "0xB96F44", Offset = "0xB96F44", VA = "0xB96F44")]
			private bool BranchSequenceNode2199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002550")]
			[Address(RVA = "0xB96FE8", Offset = "0xB96FE8", VA = "0xB96FE8")]
			private bool BranchSequenceNode2200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002551")]
			[Address(RVA = "0xB9708C", Offset = "0xB9708C", VA = "0xB9708C")]
			private bool BranchSequenceNode2201()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002552")]
			[Address(RVA = "0xB97130", Offset = "0xB97130", VA = "0xB97130")]
			private bool ActionWaitNode2078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002553")]
			[Address(RVA = "0xB97190", Offset = "0xB97190", VA = "0xB97190")]
			private bool ActionWaitNode2079()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002554")]
			[Address(RVA = "0xB971F0", Offset = "0xB971F0", VA = "0xB971F0")]
			private bool ActionWaitNode2080()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002555")]
			[Address(RVA = "0xB97250", Offset = "0xB97250", VA = "0xB97250")]
			private bool ActionWaitNode2081()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002556")]
			[Address(RVA = "0xB972B0", Offset = "0xB972B0", VA = "0xB972B0")]
			private bool ActionWaitNode2082()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002557")]
			[Address(RVA = "0xB97310", Offset = "0xB97310", VA = "0xB97310")]
			private bool ToggleTargetableNode2083()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002558")]
			[Address(RVA = "0xB97398", Offset = "0xB97398", VA = "0xB97398")]
			private bool BranchSequenceNode2118()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002559")]
			[Address(RVA = "0xB97454", Offset = "0xB97454", VA = "0xB97454")]
			private bool StartAttackNode1025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255A")]
			[Address(RVA = "0xB974B4", Offset = "0xB974B4", VA = "0xB974B4")]
			private bool RangeCompareNode1019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255B")]
			[Address(RVA = "0xB975EC", Offset = "0xB975EC", VA = "0xB975EC")]
			private bool BranchSequenceNode234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255C")]
			[Address(RVA = "0xB9765C", Offset = "0xB9765C", VA = "0xB9765C")]
			private bool BranchSequenceNode1049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255D")]
			[Address(RVA = "0xB976B4", Offset = "0xB976B4", VA = "0xB976B4")]
			private bool BranchSequenceNode2128()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255E")]
			[Address(RVA = "0xB97770", Offset = "0xB97770", VA = "0xB97770")]
			private bool BranchSequenceNode2137()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600255F")]
			[Address(RVA = "0xB9778C", Offset = "0xB9778C", VA = "0xB9778C")]
			private bool ActionWaitNode1255()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002560")]
			[Address(RVA = "0xB977EC", Offset = "0xB977EC", VA = "0xB977EC")]
			private bool BranchSequenceNode2177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002561")]
			[Address(RVA = "0xB97904", Offset = "0xB97904", VA = "0xB97904")]
			private bool BranchSequenceNode2097()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002562")]
			[Address(RVA = "0xB9798C", Offset = "0xB9798C", VA = "0xB9798C")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002563")]
			[Address(RVA = "0xB979F0", Offset = "0xB979F0", VA = "0xB979F0")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002564")]
			[Address(RVA = "0xB97A40", Offset = "0xB97A40", VA = "0xB97A40")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002565")]
			[Address(RVA = "0xB97AC4", Offset = "0xB97AC4", VA = "0xB97AC4")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002566")]
			[Address(RVA = "0xB97B28", Offset = "0xB97B28", VA = "0xB97B28")]
			private bool BranchSequenceNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002567")]
			[Address(RVA = "0xB97C0C", Offset = "0xB97C0C", VA = "0xB97C0C")]
			private bool BranchSequenceNode2184()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002568")]
			[Address(RVA = "0xB97CC4", Offset = "0xB97CC4", VA = "0xB97CC4")]
			private bool BranchSequenceNode1078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002569")]
			[Address(RVA = "0xB97D9C", Offset = "0xB97D9C", VA = "0xB97D9C")]
			private bool BranchSequenceNode1085()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256A")]
			[Address(RVA = "0xB97E80", Offset = "0xB97E80", VA = "0xB97E80")]
			private bool BranchSequenceNode2190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256B")]
			[Address(RVA = "0xB97F38", Offset = "0xB97F38", VA = "0xB97F38")]
			private bool BranchSequenceNode1095()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256C")]
			[Address(RVA = "0xB98010", Offset = "0xB98010", VA = "0xB98010")]
			private bool BranchSequenceNode2107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256D")]
			[Address(RVA = "0xB98098", Offset = "0xB98098", VA = "0xB98098")]
			private bool BranchSequenceNode2164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256E")]
			[Address(RVA = "0xB98120", Offset = "0xB98120", VA = "0xB98120")]
			private bool BranchSequenceNode1751()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600256F")]
			[Address(RVA = "0xB981F4", Offset = "0xB981F4", VA = "0xB981F4")]
			private bool BranchSequenceNode1752()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002570")]
			[Address(RVA = "0xB982A8", Offset = "0xB982A8", VA = "0xB982A8")]
			private bool ListenGlobalEventNode2203()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002571")]
			[Address(RVA = "0xB98308", Offset = "0xB98308", VA = "0xB98308")]
			private bool ListenGlobalEventNode2205()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002572")]
			[Address(RVA = "0xB98368", Offset = "0xB98368", VA = "0xB98368")]
			private bool ListenGlobalEventNode2207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002573")]
			[Address(RVA = "0xB983C8", Offset = "0xB983C8", VA = "0xB983C8")]
			private bool ListenGlobalEventNode2209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002574")]
			[Address(RVA = "0xB98428", Offset = "0xB98428", VA = "0xB98428")]
			private bool ListenGlobalEventNode2211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002575")]
			[Address(RVA = "0xB98488", Offset = "0xB98488", VA = "0xB98488")]
			private bool BranchSequenceNode2122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002576")]
			[Address(RVA = "0xB9855C", Offset = "0xB9855C", VA = "0xB9855C")]
			private bool BranchSequenceNode2168()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002577")]
			[Address(RVA = "0xB98618", Offset = "0xB98618", VA = "0xB98618")]
			private bool BranchSequenceNode2132()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002578")]
			[Address(RVA = "0xB986EC", Offset = "0xB986EC", VA = "0xB986EC")]
			private bool BranchSequenceNode2139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002579")]
			[Address(RVA = "0xB98798", Offset = "0xB98798", VA = "0xB98798")]
			private bool BranchSelectorNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257A")]
			[Address(RVA = "0xB98860", Offset = "0xB98860", VA = "0xB98860")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257B")]
			[Address(RVA = "0xB98868", Offset = "0xB98868", VA = "0xB98868")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257C")]
			[Address(RVA = "0xB988B8", Offset = "0xB988B8", VA = "0xB988B8")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257D")]
			[Address(RVA = "0xB98A18", Offset = "0xB98A18", VA = "0xB98A18")]
			private bool BranchSelectorNode1007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257E")]
			[Address(RVA = "0xB98A6C", Offset = "0xB98A6C", VA = "0xB98A6C")]
			private bool BranchSelectorNode1082()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600257F")]
			[Address(RVA = "0xB98B14", Offset = "0xB98B14", VA = "0xB98B14")]
			private bool BranchSelectorNode1099()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002580")]
			[Address(RVA = "0xB98BBC", Offset = "0xB98BBC", VA = "0xB98BBC")]
			private bool BranchSequenceNode2172()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002581")]
			[Address(RVA = "0xB98C90", Offset = "0xB98C90", VA = "0xB98C90")]
			private bool BranchSequenceNode2140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002582")]
			[Address(RVA = "0xB98D24", Offset = "0xB98D24", VA = "0xB98D24")]
			private bool BranchSequenceNode2149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002583")]
			[Address(RVA = "0xB98DC0", Offset = "0xB98DC0", VA = "0xB98DC0")]
			private bool BranchSequenceNode2213()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002584")]
			[Address(RVA = "0xB98E7C", Offset = "0xB98E7C", VA = "0xB98E7C")]
			private bool BranchSequenceNode1348()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002585")]
			[Address(RVA = "0xB98F14", Offset = "0xB98F14", VA = "0xB98F14")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002586")]
			[Address(RVA = "0xB98F54", Offset = "0xB98F54", VA = "0xB98F54")]
			private bool BranchSequenceNode580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002587")]
			[Address(RVA = "0xB98FF4", Offset = "0xB98FF4", VA = "0xB98FF4")]
			private bool BranchSequenceNode915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002588")]
			[Address(RVA = "0xB99084", Offset = "0xB99084", VA = "0xB99084")]
			private bool BranchSelectorNode932()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002589")]
			[Address(RVA = "0xB99138", Offset = "0xB99138", VA = "0xB99138")]
			private bool BranchSequenceNode1003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258A")]
			[Address(RVA = "0xB99244", Offset = "0xB99244", VA = "0xB99244")]
			private bool BranchSequenceNode1079()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258B")]
			[Address(RVA = "0xB992CC", Offset = "0xB992CC", VA = "0xB992CC")]
			private bool BranchSequenceNode1096()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258C")]
			[Address(RVA = "0xB99354", Offset = "0xB99354", VA = "0xB99354")]
			private bool BranchSelectorNode2150()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258D")]
			[Address(RVA = "0xB99400", Offset = "0xB99400", VA = "0xB99400")]
			private bool BranchSequenceNode2228()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258E")]
			[Address(RVA = "0xB9954C", Offset = "0xB9954C", VA = "0xB9954C")]
			private bool BranchSequenceNode2217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600258F")]
			[Address(RVA = "0xB99620", Offset = "0xB99620", VA = "0xB99620")]
			private bool RangeCompareNode1346()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002590")]
			[Address(RVA = "0xB99758", Offset = "0xB99758", VA = "0xB99758")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002591")]
			[Address(RVA = "0xB99848", Offset = "0xB99848", VA = "0xB99848")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002592")]
			[Address(RVA = "0xB99928", Offset = "0xB99928", VA = "0xB99928")]
			private bool BranchSequenceNode2222()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002593")]
			[Address(RVA = "0xB999E0", Offset = "0xB999E0", VA = "0xB999E0")]
			private bool BranchSequenceNode939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002594")]
			[Address(RVA = "0xB99A90", Offset = "0xB99A90", VA = "0xB99A90")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002595")]
			[Address(RVA = "0xB99C60", Offset = "0xB99C60", VA = "0xB99C60")]
			private bool RangeCompareNode1005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002596")]
			[Address(RVA = "0xB99D98", Offset = "0xB99D98", VA = "0xB99D98")]
			private bool BranchSequenceNode2235()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002597")]
			[Address(RVA = "0xB99E20", Offset = "0xB99E20", VA = "0xB99E20")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002598")]
			[Address(RVA = "0xB99E90", Offset = "0xB99E90", VA = "0xB99E90")]
			private bool BranchSelectorNode997()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002599")]
			[Address(RVA = "0xB99F0C", Offset = "0xB99F0C", VA = "0xB99F0C")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259A")]
			[Address(RVA = "0xB9A01C", Offset = "0xB9A01C", VA = "0xB9A01C")]
			private bool BranchSequenceNode933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259B")]
			[Address(RVA = "0xB9A20C", Offset = "0xB9A20C", VA = "0xB9A20C")]
			private bool BranchSequenceNode940()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259C")]
			[Address(RVA = "0xB9A29C", Offset = "0xB9A29C", VA = "0xB9A29C")]
			private bool BranchSequenceNode941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259D")]
			[Address(RVA = "0xB9A32C", Offset = "0xB9A32C", VA = "0xB9A32C")]
			private bool BranchSequenceNode995()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259E")]
			[Address(RVA = "0xB9A3E0", Offset = "0xB9A3E0", VA = "0xB9A3E0")]
			private bool BranchRandomNode616()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600259F")]
			[Address(RVA = "0xB9A440", Offset = "0xB9A440", VA = "0xB9A440")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0xB9A4C4", Offset = "0xB9A4C4", VA = "0xB9A4C4")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A1")]
			[Address(RVA = "0xB9A578", Offset = "0xB9A578", VA = "0xB9A578")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0xB9A5FC", Offset = "0xB9A5FC", VA = "0xB9A5FC")]
			private bool StartAttackNode944()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A3")]
			[Address(RVA = "0xB9A65C", Offset = "0xB9A65C", VA = "0xB9A65C")]
			private bool BranchRandomNode976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A4")]
			[Address(RVA = "0xB9A6BC", Offset = "0xB9A6BC", VA = "0xB9A6BC")]
			private bool StartAttackNode618()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A5")]
			[Address(RVA = "0xB9A71C", Offset = "0xB9A71C", VA = "0xB9A71C")]
			private bool StartAttackNode619()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A6")]
			[Address(RVA = "0xB9A77C", Offset = "0xB9A77C", VA = "0xB9A77C")]
			private bool StartAttackNode957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A7")]
			[Address(RVA = "0xB9A7DC", Offset = "0xB9A7DC", VA = "0xB9A7DC")]
			private bool StartAttackNode958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A8")]
			[Address(RVA = "0xB9A83C", Offset = "0xB9A83C", VA = "0xB9A83C")]
			private bool StartAttackNode959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025A9")]
			[Address(RVA = "0xB9A89C", Offset = "0xB9A89C", VA = "0xB9A89C")]
			private bool StartAttackNode960()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AA")]
			[Address(RVA = "0xB9A8FC", Offset = "0xB9A8FC", VA = "0xB9A8FC")]
			private bool StartAttackNode961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AB")]
			[Address(RVA = "0xB9A95C", Offset = "0xB9A95C", VA = "0xB9A95C")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AC")]
			[Address(RVA = "0xB9A9D4", Offset = "0xB9A9D4", VA = "0xB9A9D4")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AD")]
			[Address(RVA = "0xB9AA98", Offset = "0xB9AA98", VA = "0xB9AA98")]
			private bool StartAttackNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0xB9AAF8", Offset = "0xB9AAF8", VA = "0xB9AAF8")]
			private bool StartAttackNode985()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025AF")]
			[Address(RVA = "0xB9AB58", Offset = "0xB9AB58", VA = "0xB9AB58")]
			private bool StartAttackNode986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0xB9ABB8", Offset = "0xB9ABB8", VA = "0xB9ABB8")]
			private bool StartAttackNode988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B1")]
			[Address(RVA = "0xB9AC18", Offset = "0xB9AC18", VA = "0xB9AC18")]
			private bool StartAttackNode989()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B2")]
			[Address(RVA = "0xB9AC78", Offset = "0xB9AC78", VA = "0xB9AC78")]
			private bool StartAttackNode990()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B3")]
			[Address(RVA = "0xB9ACD8", Offset = "0xB9ACD8", VA = "0xB9ACD8")]
			private bool StartAttackNode991()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B4")]
			[Address(RVA = "0xB9AD38", Offset = "0xB9AD38", VA = "0xB9AD38")]
			private bool StartAttackNode992()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0xB9AD98", Offset = "0xB9AD98", VA = "0xB9AD98")]
			private bool StartAttackNode982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B6")]
			[Address(RVA = "0xB9ADF8", Offset = "0xB9ADF8", VA = "0xB9ADF8")]
			private bool StartAttackNode983()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0xB9AE58", Offset = "0xB9AE58", VA = "0xB9AE58")]
			private bool StartAttackNode999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025B8")]
			[Address(RVA = "0xB9AEB8", Offset = "0xB9AEB8", VA = "0xB9AEB8")]
			private bool StartAttackNode1000()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xB86D9C", Offset = "0xB86D9C", VA = "0xB86D9C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xB86EAC", Offset = "0xB86EAC", VA = "0xB86EAC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xB86FB4", Offset = "0xB86FB4", VA = "0xB86FB4")]
		public CaptainCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A84A8", Offset = "0x8A84A8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A84A8", Offset = "0x8A84A8")]
	public class CheckCanTakeAnyAction : GeneratedActionNode
	{
		[Token(Token = "0x20005AB")]
		public class CheckCanTakeAnyActionRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly CheckCanTakeAnyAction _source;

			[Token(Token = "0x60025B9")]
			[Address(RVA = "0xB4BC60", Offset = "0xB4BC60", VA = "0xB4BC60")]
			public CheckCanTakeAnyActionRuntime(CheckCanTakeAnyAction node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025BA")]
			[Address(RVA = "0xB4BD18", Offset = "0xB4BD18", VA = "0xB4BD18", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xB4BBA0", Offset = "0xB4BBA0", VA = "0xB4BBA0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0xB4BC90", Offset = "0xB4BC90", VA = "0xB4BC90")]
		public CheckCanTakeAnyAction()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8564", Offset = "0x8A8564")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8564", Offset = "0x8A8564")]
	public class CheckInterruptearlyDashForward : GeneratedActionNode
	{
		[Token(Token = "0x20005AC")]
		public class CheckInterruptearlyDashForwardRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly CheckInterruptearlyDashForward _source;

			[Token(Token = "0x60025BB")]
			[Address(RVA = "0xB4C6C8", Offset = "0xB4C6C8", VA = "0xB4C6C8")]
			public CheckInterruptearlyDashForwardRuntime(CheckInterruptearlyDashForward node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0xB4C700", Offset = "0xB4C700", VA = "0xB4C700", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0xB4C608", Offset = "0xB4C608", VA = "0xB4C608", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0xB4C6F8", Offset = "0xB4C6F8", VA = "0xB4C6F8")]
		public CheckInterruptearlyDashForward()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8620", Offset = "0x8A8620")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8620", Offset = "0x8A8620")]
	public class DamageandCritChip : GeneratedActionNode
	{
		[Token(Token = "0x20005AD")]
		public class DamageandCritChipRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly DamageandCritChip _source;

			[Token(Token = "0x60025BD")]
			[Address(RVA = "0xB4E558", Offset = "0xB4E558", VA = "0xB4E558")]
			public DamageandCritChipRuntime(DamageandCritChip node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0xB4E590", Offset = "0xB4E590", VA = "0xB4E590", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xB4E674", Offset = "0xB4E674", VA = "0xB4E674")]
			private bool BranchSequenceNode4()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xB4E6F4", Offset = "0xB4E6F4", VA = "0xB4E6F4")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xB4E74C", Offset = "0xB4E74C", VA = "0xB4E74C")]
			private bool BranchSequenceNode8()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C2")]
			[Address(RVA = "0xB4E780", Offset = "0xB4E780", VA = "0xB4E780")]
			private bool BranchSelectorNode10()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0xB4E818", Offset = "0xB4E818", VA = "0xB4E818")]
			private bool BranchSequenceNode14()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C4")]
			[Address(RVA = "0xB4E850", Offset = "0xB4E850", VA = "0xB4E850")]
			private bool BranchSequenceNode13()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0xB4E894", Offset = "0xB4E894", VA = "0xB4E894")]
			private bool BranchSequenceNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C6")]
			[Address(RVA = "0xB4E9D4", Offset = "0xB4E9D4", VA = "0xB4E9D4")]
			private bool BranchSequenceNode28()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0xB4E498", Offset = "0xB4E498", VA = "0xB4E498", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xB4E588", Offset = "0xB4E588", VA = "0xB4E588")]
		public DamageandCritChip()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A86DC", Offset = "0x8A86DC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A86DC", Offset = "0x8A86DC")]
	public class DamageandCritCompleteGuardRestore : GeneratedActionNode
	{
		[Token(Token = "0x20005AE")]
		public class DamageandCritCompleteGuardRestoreRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly DamageandCritCompleteGuardRestore _source;

			[Token(Token = "0x60025C7")]
			[Address(RVA = "0xB4EB40", Offset = "0xB4EB40", VA = "0xB4EB40")]
			public DamageandCritCompleteGuardRestoreRuntime(DamageandCritCompleteGuardRestore node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C8")]
			[Address(RVA = "0xB4EB78", Offset = "0xB4EB78", VA = "0xB4EB78", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025C9")]
			[Address(RVA = "0xB4ED34", Offset = "0xB4ED34", VA = "0xB4ED34")]
			private bool BranchSequenceNode5()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xB4EA80", Offset = "0xB4EA80", VA = "0xB4EA80", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xB4EB70", Offset = "0xB4EB70", VA = "0xB4EB70")]
		public DamageandCritCompleteGuardRestore()
		{
		}
	}
	[Token(Token = "0x2000400")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8798", Offset = "0x8A8798")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8798", Offset = "0x8A8798")]
	public class DefaultStasisHandling : GeneratedActionNode
	{
		[Token(Token = "0x20005AF")]
		public class DefaultStasisHandlingRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly DefaultStasisHandling _source;

			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xB4EE70", Offset = "0xB4EE70", VA = "0xB4EE70")]
			public DefaultStasisHandlingRuntime(DefaultStasisHandling node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xB4EEA8", Offset = "0xB4EEA8", VA = "0xB4EEA8", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0xB4EEE8", Offset = "0xB4EEE8", VA = "0xB4EEE8")]
			private bool BranchSequenceNode4()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xB4EFA4", Offset = "0xB4EFA4", VA = "0xB4EFA4")]
			private bool BranchSequenceNode9()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xB4F060", Offset = "0xB4F060", VA = "0xB4F060")]
			private bool BranchSequenceNode17()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xB4F1AC", Offset = "0xB4F1AC", VA = "0xB4F1AC")]
			private bool BranchSequenceNode15()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D0")]
			[Address(RVA = "0xB4F238", Offset = "0xB4F238", VA = "0xB4F238")]
			private bool BranchSequenceNode24()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xB4F2C0", Offset = "0xB4F2C0", VA = "0xB4F2C0")]
			private bool BranchSequenceNode28()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xB4F388", Offset = "0xB4F388", VA = "0xB4F388")]
			private bool BranchSequenceNode29()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xB4F41C", Offset = "0xB4F41C", VA = "0xB4F41C")]
			private bool BranchSequenceNode38()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xB4F4B8", Offset = "0xB4F4B8", VA = "0xB4F4B8")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D5")]
			[Address(RVA = "0xB4F574", Offset = "0xB4F574", VA = "0xB4F574")]
			private bool BranchSelectorNode39()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D6")]
			[Address(RVA = "0xB4F620", Offset = "0xB4F620", VA = "0xB4F620")]
			private bool BranchSequenceNode56()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D7")]
			[Address(RVA = "0xB4F76C", Offset = "0xB4F76C", VA = "0xB4F76C")]
			private bool BranchSequenceNode51()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xB4F840", Offset = "0xB4F840", VA = "0xB4F840")]
			private bool BranchSequenceNode63()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0xB4EDB0", Offset = "0xB4EDB0", VA = "0xB4EDB0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A3B")]
		[Address(RVA = "0xB4EEA0", Offset = "0xB4EEA0", VA = "0xB4EEA0")]
		public DefaultStasisHandling()
		{
		}
	}
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8854", Offset = "0x8A8854")]
	public class GeneratedActionNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005B0")]
		public class NotImplementedGeneratedNodeException : NotImplementedException
		{
			[Token(Token = "0x60025D9")]
			[Address(RVA = "0xB51388", Offset = "0xB51388", VA = "0xB51388")]
			public NotImplementedGeneratedNodeException()
			{
			}
		}

		[Token(Token = "0x20005B1")]
		public class GeneratedActionNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly GeneratedActionNode _source;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			protected Enemy enemy;

			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			protected AIAgent aiAgent;

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0xB4BCA0", Offset = "0xB4BCA0", VA = "0xB4BCA0")]
			public GeneratedActionNodeRuntime(GeneratedActionNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xB512B8", Offset = "0xB512B8", VA = "0xB512B8", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xB51354", Offset = "0xB51354", VA = "0xB51354", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0xB51380", Offset = "0xB51380", VA = "0xB51380", Slot = "21")]
			protected virtual bool GraphEntry()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int EntryPoint;

		[Token(Token = "0x4001BCD")]
		public const string CLASS_NAME_REPLACE = "CLASS_NAME_REPLACE";

		[Token(Token = "0x4001BCE")]
		public const string GENERATED_NODE_CLASS_TEMPLATE = "\r\nusing System.Runtime.CompilerServices;\r\nusing SG.BehaviorTrees;\r\nusing SG.BehaviorTrees.Experimental;\r\nusing SG.Claymore.Combat.CritPoints;\r\nusing SG.Claymore.Targeting;\r\nusing SG.Core;\r\nusing SG.GlobalEvents.Variables;\r\nusing SG.Vignettitor;\r\nusing SG.Vignettitor.NodeViews;\r\nusing SG.Vignettitor.VignetteData;\r\nusing UnityEngine;\r\n\r\nnamespace SG.Claymore.AI.Nodes\r\n{\r\n    [NodeMenu(\"Generated/CLASS_NAME_REPLACE\", typeof(ClaymoreBehaviorTree))]\r\n    [NodeColor(GENERATED_NODE_COLOR, GENERATED_NODE_OUTLINE)]\r\n    public class CLASS_NAME_REPLACE : GeneratedActionNode\r\n    {\r\n        #region -- Generated Variables -----------------------------------------\r\n\r\n        #endregion -- Generated Variables --------------------------------------\r\n        \r\n        public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)\r\n            => new CLASS_NAME_REPLACERuntime(this,  graph as ClaymoreBehaviorTreeRuntime);\r\n\r\n        public class CLASS_NAME_REPLACERuntime : GeneratedActionNodeRuntime\r\n        {\r\n            private readonly CLASS_NAME_REPLACE _source;\r\n\r\n            private delegate bool NodeUpdater();\r\n            private NodeUpdater tick;\r\n\r\n            private bool Local_NextCritHorizontal;\r\n            private bool Local_ExpectingCrit;           \r\n            \r\n\r\n            public CLASS_NAME_REPLACERuntime(CLASS_NAME_REPLACE node, ClaymoreBehaviorTreeRuntime graph)\r\n                : base(node, graph)\r\n            {\r\n                _source = node;\r\n                FindEntry(_source.EntryPoint);\r\n            }\r\n            \r\n            public override NodeStatus UpdateStatus(float elapsed)\r\n            {\r\n                bool success = tick();\r\n                return success ? NodeStatus.Success : NodeStatus.Failure;\r\n            }\r\n            #region -- Auto-Generated Nodes ------------------------------------\r\n            \r\n            #endregion -- Auto-Generated Nodes ---------------------------------\r\n        }\r\n    }\r\n}\r\n";

		[Token(Token = "0x4001BCF")]
		public const string GENERATED_NODE_COLOR = "65000A";

		[Token(Token = "0x4001BD0")]
		public const string GENERATED_NODE_OUTLINE = "FFFFFF";

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xB50FD8", Offset = "0xB50FD8", VA = "0xB50FD8")]
		public static bool DefinesCode(BehaviorTreeNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xB51090", Offset = "0xB51090", VA = "0xB51090")]
		public static bool CanCollapse(BehaviorTreeNode n)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xB51208", Offset = "0xB51208", VA = "0xB51208", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xB4BC98", Offset = "0xB4BC98", VA = "0xB4BC98")]
		public GeneratedActionNode()
		{
		}
	}
	[Token(Token = "0x2000402")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A888C", Offset = "0x8A888C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A888C", Offset = "0x8A888C")]
	public class HuskCombatantBehavior : GeneratedActionNode
	{
		[Token(Token = "0x20005B2")]
		public class HuskCombatantBehaviorRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000606")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly HuskCombatantBehavior _source;

			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private NodeUpdater tick;

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xB522B4", Offset = "0xB522B4", VA = "0xB522B4")]
			public HuskCombatantBehaviorRuntime(HuskCombatantBehavior node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0xB52B34", Offset = "0xB52B34", VA = "0xB52B34", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0xB52310", Offset = "0xB52310", VA = "0xB52310")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xB52B64", Offset = "0xB52B64", VA = "0xB52B64", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xB52BC0", Offset = "0xB52BC0", VA = "0xB52BC0")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E3")]
			[Address(RVA = "0xB52D00", Offset = "0xB52D00", VA = "0xB52D00")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xB52E00", Offset = "0xB52E00", VA = "0xB52E00")]
			private bool BranchSequenceNode789()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E5")]
			[Address(RVA = "0xB52E64", Offset = "0xB52E64", VA = "0xB52E64")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E6")]
			[Address(RVA = "0xB52EFC", Offset = "0xB52EFC", VA = "0xB52EFC")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E7")]
			[Address(RVA = "0xB52F3C", Offset = "0xB52F3C", VA = "0xB52F3C")]
			private bool BranchSelectorNode854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E8")]
			[Address(RVA = "0xB53008", Offset = "0xB53008", VA = "0xB53008")]
			private bool BranchSequenceNode848()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xB530D0", Offset = "0xB530D0", VA = "0xB530D0")]
			private bool BranchSelectorNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xB53110", Offset = "0xB53110", VA = "0xB53110")]
			private bool BranchSelectorNode985()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xB53150", Offset = "0xB53150", VA = "0xB53150")]
			private bool BranchSequenceNode1014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xB53340", Offset = "0xB53340", VA = "0xB53340")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025ED")]
			[Address(RVA = "0xB53450", Offset = "0xB53450", VA = "0xB53450")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xB53530", Offset = "0xB53530", VA = "0xB53530")]
			private bool BranchSelectorNode1154()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xB5364C", Offset = "0xB5364C", VA = "0xB5364C")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xB53654", Offset = "0xB53654", VA = "0xB53654")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F1")]
			[Address(RVA = "0xB53740", Offset = "0xB53740", VA = "0xB53740")]
			private bool BranchSelectorNode858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F2")]
			[Address(RVA = "0xB537F8", Offset = "0xB537F8", VA = "0xB537F8")]
			private bool BranchSelectorNode859()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F3")]
			[Address(RVA = "0xB53898", Offset = "0xB53898", VA = "0xB53898")]
			private bool BranchSelectorNode860()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F4")]
			[Address(RVA = "0xB53968", Offset = "0xB53968", VA = "0xB53968")]
			private bool ToggleTargetableNode852()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xB539EC", Offset = "0xB539EC", VA = "0xB539EC")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xB53AFC", Offset = "0xB53AFC", VA = "0xB53AFC")]
			private bool BranchSequenceNode617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F7")]
			[Address(RVA = "0xB53B88", Offset = "0xB53B88", VA = "0xB53B88")]
			private bool BranchSequenceNode1269()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F8")]
			[Address(RVA = "0xB53D04", Offset = "0xB53D04", VA = "0xB53D04")]
			private bool BranchSequenceNode986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xB53DC0", Offset = "0xB53DC0", VA = "0xB53DC0")]
			private bool BranchSequenceNode987()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FA")]
			[Address(RVA = "0xB53E7C", Offset = "0xB53E7C", VA = "0xB53E7C")]
			private bool BranchSequenceNode1015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FB")]
			[Address(RVA = "0xB53EDC", Offset = "0xB53EDC", VA = "0xB53EDC")]
			private bool BranchSequenceNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xB53F5C", Offset = "0xB53F5C", VA = "0xB53F5C")]
			private bool BranchSequenceNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FD")]
			[Address(RVA = "0xB53FFC", Offset = "0xB53FFC", VA = "0xB53FFC")]
			private bool BranchSequenceNode1018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xB5404C", Offset = "0xB5404C", VA = "0xB5404C")]
			private bool BranchSequenceNode1027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60025FF")]
			[Address(RVA = "0xB540E8", Offset = "0xB540E8", VA = "0xB540E8")]
			private bool BranchSequenceNode1020()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002600")]
			[Address(RVA = "0xB5411C", Offset = "0xB5411C", VA = "0xB5411C")]
			private bool BranchSequenceNode1232()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002601")]
			[Address(RVA = "0xB541D8", Offset = "0xB541D8", VA = "0xB541D8")]
			private bool BranchSequenceNode1241()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002602")]
			[Address(RVA = "0xB54324", Offset = "0xB54324", VA = "0xB54324")]
			private bool BranchSequenceNode843()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002603")]
			[Address(RVA = "0xB54444", Offset = "0xB54444", VA = "0xB54444")]
			private bool BranchSelectorNode823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002604")]
			[Address(RVA = "0xB544D8", Offset = "0xB544D8", VA = "0xB544D8")]
			private bool BranchSelectorNode1161()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002605")]
			[Address(RVA = "0xB54544", Offset = "0xB54544", VA = "0xB54544")]
			private bool BranchSelectorNode1162()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002606")]
			[Address(RVA = "0xB545B0", Offset = "0xB545B0", VA = "0xB545B0")]
			private bool BranchSelectorNode1163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002607")]
			[Address(RVA = "0xB545F0", Offset = "0xB545F0", VA = "0xB545F0")]
			private bool BranchSequenceNode1164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002608")]
			[Address(RVA = "0xB54700", Offset = "0xB54700", VA = "0xB54700")]
			private bool BranchSequenceNode1165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002609")]
			[Address(RVA = "0xB547E8", Offset = "0xB547E8", VA = "0xB547E8")]
			private bool BranchSequenceNode1166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260A")]
			[Address(RVA = "0xB54840", Offset = "0xB54840", VA = "0xB54840")]
			private bool BranchSequenceNode1261()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260B")]
			[Address(RVA = "0xB5495C", Offset = "0xB5495C", VA = "0xB5495C")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260C")]
			[Address(RVA = "0xB549E4", Offset = "0xB549E4", VA = "0xB549E4")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260D")]
			[Address(RVA = "0xB54A6C", Offset = "0xB54A6C", VA = "0xB54A6C")]
			private bool BranchSequenceNode861()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260E")]
			[Address(RVA = "0xB54B18", Offset = "0xB54B18", VA = "0xB54B18")]
			private bool BranchSequenceNode862()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600260F")]
			[Address(RVA = "0xB54BD0", Offset = "0xB54BD0", VA = "0xB54BD0")]
			private bool BranchSequenceNode863()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002610")]
			[Address(RVA = "0xB54C58", Offset = "0xB54C58", VA = "0xB54C58")]
			private bool BranchSequenceNode865()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002611")]
			[Address(RVA = "0xB54CBC", Offset = "0xB54CBC", VA = "0xB54CBC")]
			private bool BranchSequenceNode866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002612")]
			[Address(RVA = "0xB54D3C", Offset = "0xB54D3C", VA = "0xB54D3C")]
			private bool BranchSequenceNode867()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002613")]
			[Address(RVA = "0xB54E80", Offset = "0xB54E80", VA = "0xB54E80")]
			private bool BranchSequenceNode868()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002614")]
			[Address(RVA = "0xB54F64", Offset = "0xB54F64", VA = "0xB54F64")]
			private bool BranchSelectorNode640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002615")]
			[Address(RVA = "0xB54FDC", Offset = "0xB54FDC", VA = "0xB54FDC")]
			private bool BranchSequenceNode1288()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002616")]
			[Address(RVA = "0xB54FF8", Offset = "0xB54FF8", VA = "0xB54FF8")]
			private bool BranchSequenceNode1308()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002617")]
			[Address(RVA = "0xB55014", Offset = "0xB55014", VA = "0xB55014")]
			private bool BranchSequenceNode1278()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002618")]
			[Address(RVA = "0xB55160", Offset = "0xB55160", VA = "0xB55160")]
			private bool BranchSequenceNode996()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002619")]
			[Address(RVA = "0xB551EC", Offset = "0xB551EC", VA = "0xB551EC")]
			private bool BranchSequenceNode1030()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261A")]
			[Address(RVA = "0xB552C0", Offset = "0xB552C0", VA = "0xB552C0")]
			private bool BranchSequenceNode1031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261B")]
			[Address(RVA = "0xB55320", Offset = "0xB55320", VA = "0xB55320")]
			private bool BranchSequenceNode1047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261C")]
			[Address(RVA = "0xB55370", Offset = "0xB55370", VA = "0xB55370")]
			private bool BranchSequenceNode1034()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261D")]
			[Address(RVA = "0xB553B0", Offset = "0xB553B0", VA = "0xB553B0")]
			private bool BranchSequenceNode1050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261E")]
			[Address(RVA = "0xB55428", Offset = "0xB55428", VA = "0xB55428")]
			private bool BranchSequenceNode1328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600261F")]
			[Address(RVA = "0xB5550C", Offset = "0xB5550C", VA = "0xB5550C")]
			private bool BranchSequenceNode1037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002620")]
			[Address(RVA = "0xB55540", Offset = "0xB55540", VA = "0xB55540")]
			private bool BranchSequenceNode1038()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002621")]
			[Address(RVA = "0xB55590", Offset = "0xB55590", VA = "0xB55590")]
			private bool ActionWaitNode1055()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002622")]
			[Address(RVA = "0xB555EC", Offset = "0xB555EC", VA = "0xB555EC")]
			private bool BranchSequenceNode1358()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002623")]
			[Address(RVA = "0xB55704", Offset = "0xB55704", VA = "0xB55704")]
			private bool BranchSequenceNode1365()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002624")]
			[Address(RVA = "0xB558C0", Offset = "0xB558C0", VA = "0xB558C0")]
			private bool BranchSequenceNode1042()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002625")]
			[Address(RVA = "0xB559D8", Offset = "0xB559D8", VA = "0xB559D8")]
			private bool BranchSequenceNode1236()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002626")]
			[Address(RVA = "0xB55AAC", Offset = "0xB55AAC", VA = "0xB55AAC")]
			private bool BranchSequenceNode1248()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002627")]
			[Address(RVA = "0xB55B34", Offset = "0xB55B34", VA = "0xB55B34")]
			private bool BranchSequenceNode1251()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002628")]
			[Address(RVA = "0xB55C80", Offset = "0xB55C80", VA = "0xB55C80")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002629")]
			[Address(RVA = "0xB55CF8", Offset = "0xB55CF8", VA = "0xB55CF8")]
			private bool BranchSequenceNode1167()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262A")]
			[Address(RVA = "0xB55D98", Offset = "0xB55D98", VA = "0xB55D98")]
			private bool BranchSequenceNode1190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262B")]
			[Address(RVA = "0xB55DFC", Offset = "0xB55DFC", VA = "0xB55DFC")]
			private bool BranchSequenceNode1169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262C")]
			[Address(RVA = "0xB55E9C", Offset = "0xB55E9C", VA = "0xB55E9C")]
			private bool BranchSequenceNode1193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262D")]
			[Address(RVA = "0xB55F00", Offset = "0xB55F00", VA = "0xB55F00")]
			private bool BranchSequenceNode1171()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262E")]
			[Address(RVA = "0xB56064", Offset = "0xB56064", VA = "0xB56064")]
			private bool BranchSequenceNode1172()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600262F")]
			[Address(RVA = "0xB561AC", Offset = "0xB561AC", VA = "0xB561AC")]
			private bool BranchSelectorNode1175()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002630")]
			[Address(RVA = "0xB561EC", Offset = "0xB561EC", VA = "0xB561EC")]
			private bool BranchSequenceNode1375()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002631")]
			[Address(RVA = "0xB56338", Offset = "0xB56338", VA = "0xB56338")]
			private bool BranchSelectorNode1181()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002632")]
			[Address(RVA = "0xB563D8", Offset = "0xB563D8", VA = "0xB563D8")]
			private bool BranchSequenceNode1207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002633")]
			[Address(RVA = "0xB56470", Offset = "0xB56470", VA = "0xB56470")]
			private bool BranchSequenceNode1385()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002634")]
			[Address(RVA = "0xB565BC", Offset = "0xB565BC", VA = "0xB565BC")]
			private bool BranchSequenceNode1208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002635")]
			[Address(RVA = "0xB56734", Offset = "0xB56734", VA = "0xB56734")]
			private bool RangeCompareNode1209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002636")]
			[Address(RVA = "0xB56864", Offset = "0xB56864", VA = "0xB56864")]
			private bool BranchSelectorNode827()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002637")]
			[Address(RVA = "0xB56970", Offset = "0xB56970", VA = "0xB56970")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002638")]
			[Address(RVA = "0xB56A7C", Offset = "0xB56A7C", VA = "0xB56A7C")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002639")]
			[Address(RVA = "0xB56AD8", Offset = "0xB56AD8", VA = "0xB56AD8")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263A")]
			[Address(RVA = "0xB56B94", Offset = "0xB56B94", VA = "0xB56B94")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263B")]
			[Address(RVA = "0xB56C0C", Offset = "0xB56C0C", VA = "0xB56C0C")]
			private bool BranchSequenceNode869()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263C")]
			[Address(RVA = "0xB56CB4", Offset = "0xB56CB4", VA = "0xB56CB4")]
			private bool BranchSequenceNode870()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263D")]
			[Address(RVA = "0xB56D84", Offset = "0xB56D84", VA = "0xB56D84")]
			private bool BranchSelectorNode871()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263E")]
			[Address(RVA = "0xB56E08", Offset = "0xB56E08", VA = "0xB56E08")]
			private bool BranchSequenceNode872()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600263F")]
			[Address(RVA = "0xB56EAC", Offset = "0xB56EAC", VA = "0xB56EAC")]
			private bool BranchSelectorNode877()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002640")]
			[Address(RVA = "0xB56F00", Offset = "0xB56F00", VA = "0xB56F00")]
			private bool BranchSelectorNode879()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002641")]
			[Address(RVA = "0xB56FDC", Offset = "0xB56FDC", VA = "0xB56FDC")]
			private bool BranchSelectorNode881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002642")]
			[Address(RVA = "0xB5709C", Offset = "0xB5709C", VA = "0xB5709C")]
			private bool BranchSelectorNode885()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002643")]
			[Address(RVA = "0xB57120", Offset = "0xB57120", VA = "0xB57120")]
			private bool BranchSequenceNode915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002644")]
			[Address(RVA = "0xB571D0", Offset = "0xB571D0", VA = "0xB571D0")]
			private bool BranchSequenceNode916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002645")]
			[Address(RVA = "0xB572F0", Offset = "0xB572F0", VA = "0xB572F0")]
			private bool BranchSequenceNode917()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002646")]
			[Address(RVA = "0xB57384", Offset = "0xB57384", VA = "0xB57384")]
			private bool BranchSequenceNode1290()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002647")]
			[Address(RVA = "0xB57430", Offset = "0xB57430", VA = "0xB57430")]
			private bool BranchSequenceNode1310()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002648")]
			[Address(RVA = "0xB574DC", Offset = "0xB574DC", VA = "0xB574DC")]
			private bool BranchSequenceNode1285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002649")]
			[Address(RVA = "0xB57564", Offset = "0xB57564", VA = "0xB57564")]
			private bool BranchSequenceNode1000()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264A")]
			[Address(RVA = "0xB57614", Offset = "0xB57614", VA = "0xB57614")]
			private bool BranchSequenceNode1395()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264B")]
			[Address(RVA = "0xB57630", Offset = "0xB57630", VA = "0xB57630")]
			private bool BranchSequenceNode1062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264C")]
			[Address(RVA = "0xB57670", Offset = "0xB57670", VA = "0xB57670")]
			private bool BranchSelectorNode1078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264D")]
			[Address(RVA = "0xB57754", Offset = "0xB57754", VA = "0xB57754")]
			private bool BranchSequenceNode1048()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264E")]
			[Address(RVA = "0xB57808", Offset = "0xB57808", VA = "0xB57808")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600264F")]
			[Address(RVA = "0xB57928", Offset = "0xB57928", VA = "0xB57928")]
			private bool BranchSequenceNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002650")]
			[Address(RVA = "0xB57A14", Offset = "0xB57A14", VA = "0xB57A14")]
			private bool ActionWaitChoiceNode1069()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002651")]
			[Address(RVA = "0xB57A70", Offset = "0xB57A70", VA = "0xB57A70")]
			private bool BranchSequenceNode1070()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002652")]
			[Address(RVA = "0xB57B10", Offset = "0xB57B10", VA = "0xB57B10")]
			private bool BranchSequenceNode1332()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002653")]
			[Address(RVA = "0xB57B90", Offset = "0xB57B90", VA = "0xB57B90")]
			private bool BranchSelectorNode1331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002654")]
			[Address(RVA = "0xB57BE8", Offset = "0xB57BE8", VA = "0xB57BE8")]
			private bool BranchSelectorNode1053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002655")]
			[Address(RVA = "0xB57C28", Offset = "0xB57C28", VA = "0xB57C28")]
			private bool BranchSequenceNode1054()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002656")]
			[Address(RVA = "0xB57CC0", Offset = "0xB57CC0", VA = "0xB57CC0")]
			private bool BranchSequenceNode1371()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002657")]
			[Address(RVA = "0xB57D3C", Offset = "0xB57D3C", VA = "0xB57D3C")]
			private bool BranchSequenceNode1258()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002658")]
			[Address(RVA = "0xB57DC4", Offset = "0xB57DC4", VA = "0xB57DC4")]
			private bool BranchSequenceNode760()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002659")]
			[Address(RVA = "0xB57E74", Offset = "0xB57E74", VA = "0xB57E74")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265A")]
			[Address(RVA = "0xB57ED0", Offset = "0xB57ED0", VA = "0xB57ED0")]
			private bool BranchSequenceNode757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265B")]
			[Address(RVA = "0xB57F2C", Offset = "0xB57F2C", VA = "0xB57F2C")]
			private bool BranchSequenceNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265C")]
			[Address(RVA = "0xB57F94", Offset = "0xB57F94", VA = "0xB57F94")]
			private bool RangeCompareNode1211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265D")]
			[Address(RVA = "0xB580CC", Offset = "0xB580CC", VA = "0xB580CC")]
			private bool BranchSequenceNode1213()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265E")]
			[Address(RVA = "0xB58134", Offset = "0xB58134", VA = "0xB58134")]
			private bool RangeCompareNode1214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600265F")]
			[Address(RVA = "0xB5826C", Offset = "0xB5826C", VA = "0xB5826C")]
			private bool RangeCompareNode1203()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002660")]
			[Address(RVA = "0xB583A4", Offset = "0xB583A4", VA = "0xB583A4")]
			private bool RangeCompareNode1204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002661")]
			[Address(RVA = "0xB584DC", Offset = "0xB584DC", VA = "0xB584DC")]
			private bool BranchSequenceNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002662")]
			[Address(RVA = "0xB58564", Offset = "0xB58564", VA = "0xB58564")]
			private bool RangeCompareNode1206()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002663")]
			[Address(RVA = "0xB5869C", Offset = "0xB5869C", VA = "0xB5869C")]
			private bool BranchSequenceNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002664")]
			[Address(RVA = "0xB58724", Offset = "0xB58724", VA = "0xB58724")]
			private bool BranchSequenceNode824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002665")]
			[Address(RVA = "0xB587A8", Offset = "0xB587A8", VA = "0xB587A8")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002666")]
			[Address(RVA = "0xB5880C", Offset = "0xB5880C", VA = "0xB5880C")]
			private bool BranchSequenceNode772()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002667")]
			[Address(RVA = "0xB58868", Offset = "0xB58868", VA = "0xB58868")]
			private bool BranchSequenceNode778()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002668")]
			[Address(RVA = "0xB589C8", Offset = "0xB589C8", VA = "0xB589C8")]
			private bool BranchSequenceNode844()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002669")]
			[Address(RVA = "0xB58A28", Offset = "0xB58A28", VA = "0xB58A28")]
			private bool BranchSequenceNode822()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266A")]
			[Address(RVA = "0xB58A84", Offset = "0xB58A84", VA = "0xB58A84")]
			private bool BranchSequenceNode586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266B")]
			[Address(RVA = "0xB58B5C", Offset = "0xB58B5C", VA = "0xB58B5C")]
			private bool BranchSequenceNode1415()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266C")]
			[Address(RVA = "0xB58BB8", Offset = "0xB58BB8", VA = "0xB58BB8")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266D")]
			[Address(RVA = "0xB58C30", Offset = "0xB58C30", VA = "0xB58C30")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266E")]
			[Address(RVA = "0xB58CA8", Offset = "0xB58CA8", VA = "0xB58CA8")]
			private bool BranchSequenceNode918()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600266F")]
			[Address(RVA = "0xB58CF8", Offset = "0xB58CF8", VA = "0xB58CF8")]
			private bool BranchSequenceNode897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002670")]
			[Address(RVA = "0xB58D88", Offset = "0xB58D88", VA = "0xB58D88")]
			private bool BranchSequenceNode898()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002671")]
			[Address(RVA = "0xB58E18", Offset = "0xB58E18", VA = "0xB58E18")]
			private bool BranchSequenceNode899()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002672")]
			[Address(RVA = "0xB58EA8", Offset = "0xB58EA8", VA = "0xB58EA8")]
			private bool BranchSequenceNode900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002673")]
			[Address(RVA = "0xB58F38", Offset = "0xB58F38", VA = "0xB58F38")]
			private bool BranchSequenceNode905()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002674")]
			[Address(RVA = "0xB58FE0", Offset = "0xB58FE0", VA = "0xB58FE0")]
			private bool BranchSequenceNode906()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002675")]
			[Address(RVA = "0xB59020", Offset = "0xB59020", VA = "0xB59020")]
			private bool BranchSequenceNode911()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002676")]
			[Address(RVA = "0xB59098", Offset = "0xB59098", VA = "0xB59098")]
			private bool BranchSequenceNode912()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002677")]
			[Address(RVA = "0xB59104", Offset = "0xB59104", VA = "0xB59104")]
			private bool BranchSequenceNode913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002678")]
			[Address(RVA = "0xB591E0", Offset = "0xB591E0", VA = "0xB591E0")]
			private bool BranchSequenceNode914()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002679")]
			[Address(RVA = "0xB5925C", Offset = "0xB5925C", VA = "0xB5925C")]
			private bool RangeCompareNode945()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267A")]
			[Address(RVA = "0xB59394", Offset = "0xB59394", VA = "0xB59394")]
			private bool BranchSelectorNode946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267B")]
			[Address(RVA = "0xB59460", Offset = "0xB59460", VA = "0xB59460")]
			private bool BranchSequenceNode1291()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267C")]
			[Address(RVA = "0xB594F4", Offset = "0xB594F4", VA = "0xB594F4")]
			private bool BranchSequenceNode1300()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267D")]
			[Address(RVA = "0xB59590", Offset = "0xB59590", VA = "0xB59590")]
			private bool BranchSequenceNode1460()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267E")]
			[Address(RVA = "0xB5964C", Offset = "0xB5964C", VA = "0xB5964C")]
			private bool BranchSequenceNode1311()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600267F")]
			[Address(RVA = "0xB596E0", Offset = "0xB596E0", VA = "0xB596E0")]
			private bool BranchSequenceNode1320()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002680")]
			[Address(RVA = "0xB5977C", Offset = "0xB5977C", VA = "0xB5977C")]
			private bool BranchSequenceNode1470()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002681")]
			[Address(RVA = "0xB59838", Offset = "0xB59838", VA = "0xB59838")]
			private bool BranchSequenceNode1006()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002682")]
			[Address(RVA = "0xB598D4", Offset = "0xB598D4", VA = "0xB598D4")]
			private bool BranchSequenceNode1480()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002683")]
			[Address(RVA = "0xB59990", Offset = "0xB59990", VA = "0xB59990")]
			private bool BranchSequenceNode1397()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002684")]
			[Address(RVA = "0xB59A3C", Offset = "0xB59A3C", VA = "0xB59A3C")]
			private bool BranchSequenceNode1076()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002685")]
			[Address(RVA = "0xB59AE8", Offset = "0xB59AE8", VA = "0xB59AE8")]
			private bool BranchSequenceNode1077()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002686")]
			[Address(RVA = "0xB59C1C", Offset = "0xB59C1C", VA = "0xB59C1C")]
			private bool BranchSequenceNode1113()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002687")]
			[Address(RVA = "0xB59CA8", Offset = "0xB59CA8", VA = "0xB59CA8")]
			private bool BranchSequenceNode1123()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002688")]
			[Address(RVA = "0xB59D20", Offset = "0xB59D20", VA = "0xB59D20")]
			private bool BranchSequenceNode1489()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002689")]
			[Address(RVA = "0xB59E6C", Offset = "0xB59E6C", VA = "0xB59E6C")]
			private bool BranchSequenceNode1500()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268A")]
			[Address(RVA = "0xB59F28", Offset = "0xB59F28", VA = "0xB59F28")]
			private bool BranchSelectorNode1092()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268B")]
			[Address(RVA = "0xB59FA4", Offset = "0xB59FA4", VA = "0xB59FA4")]
			private bool BranchSelectorNode1093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268C")]
			[Address(RVA = "0xB59FE4", Offset = "0xB59FE4", VA = "0xB59FE4")]
			private bool BranchSequenceNode1333()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268D")]
			[Address(RVA = "0xB5A018", Offset = "0xB5A018", VA = "0xB5A018")]
			private bool BranchSelectorNode1338()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268E")]
			[Address(RVA = "0xB5A0B0", Offset = "0xB5A0B0", VA = "0xB5A0B0")]
			private bool BranchSequenceNode1071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600268F")]
			[Address(RVA = "0xB5A174", Offset = "0xB5A174", VA = "0xB5A174")]
			private bool BranchSequenceNode1072()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002690")]
			[Address(RVA = "0xB5A268", Offset = "0xB5A268", VA = "0xB5A268")]
			private bool BranchRandomNode766()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002691")]
			[Address(RVA = "0xB5A338", Offset = "0xB5A338", VA = "0xB5A338")]
			private bool RangeCompareNode1227()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002692")]
			[Address(RVA = "0xB5A470", Offset = "0xB5A470", VA = "0xB5A470")]
			private bool RangeCompareNode1229()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002693")]
			[Address(RVA = "0xB5A5A8", Offset = "0xB5A5A8", VA = "0xB5A5A8")]
			private bool BranchSequenceNode1552()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002694")]
			[Address(RVA = "0xB5A6F4", Offset = "0xB5A6F4", VA = "0xB5A6F4")]
			private bool BranchSelectorNode1562()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002695")]
			[Address(RVA = "0xB5A974", Offset = "0xB5A974", VA = "0xB5A974")]
			private bool BranchSequenceNode1510()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002696")]
			[Address(RVA = "0xB5A9D0", Offset = "0xB5A9D0", VA = "0xB5A9D0")]
			private bool BranchSequenceNode780()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002697")]
			[Address(RVA = "0xB5AA6C", Offset = "0xB5AA6C", VA = "0xB5AA6C")]
			private bool BranchSelectorNode808()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002698")]
			[Address(RVA = "0xB5AAC8", Offset = "0xB5AAC8", VA = "0xB5AAC8")]
			private bool BranchSequenceNode587()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002699")]
			[Address(RVA = "0xB5ABBC", Offset = "0xB5ABBC", VA = "0xB5ABBC")]
			private bool BranchSequenceNode845()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269A")]
			[Address(RVA = "0xB5AC38", Offset = "0xB5AC38", VA = "0xB5AC38")]
			private bool StartAttackNode599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269B")]
			[Address(RVA = "0xB5AC94", Offset = "0xB5AC94", VA = "0xB5AC94")]
			private bool BranchSequenceNode846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269C")]
			[Address(RVA = "0xB5AD30", Offset = "0xB5AD30", VA = "0xB5AD30")]
			private bool BranchSequenceNode1416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269D")]
			[Address(RVA = "0xB5ADB8", Offset = "0xB5ADB8", VA = "0xB5ADB8")]
			private bool BranchSequenceNode1417()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269E")]
			[Address(RVA = "0xB5AF54", Offset = "0xB5AF54", VA = "0xB5AF54")]
			private bool BranchSequenceNode1432()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600269F")]
			[Address(RVA = "0xB5AFE0", Offset = "0xB5AFE0", VA = "0xB5AFE0")]
			private bool BranchSequenceNode1419()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xB5B11C", Offset = "0xB5B11C", VA = "0xB5B11C")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0xB5B294", Offset = "0xB5B294", VA = "0xB5B294")]
			private bool BranchSequenceNode1529()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xB5B2F0", Offset = "0xB5B2F0", VA = "0xB5B2F0")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0xB5B348", Offset = "0xB5B348", VA = "0xB5B348")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xB5B490", Offset = "0xB5B490", VA = "0xB5B490")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xB5B5B0", Offset = "0xB5B5B0", VA = "0xB5B5B0")]
			private bool BranchSequenceNode931()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xB5B690", Offset = "0xB5B690", VA = "0xB5B690")]
			private bool BranchSelectorNode932()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xB5B808", Offset = "0xB5B808", VA = "0xB5B808")]
			private bool RangeCompareNode938()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xB5B940", Offset = "0xB5B940", VA = "0xB5B940")]
			private bool BranchSelectorNode942()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xB5B980", Offset = "0xB5B980", VA = "0xB5B980")]
			private bool BranchSequenceNode967()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xB5B9F8", Offset = "0xB5B9F8", VA = "0xB5B9F8")]
			private bool BranchSequenceNode968()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xB5BA70", Offset = "0xB5BA70", VA = "0xB5BA70")]
			private bool BranchSelectorNode1301()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xB5BB1C", Offset = "0xB5BB1C", VA = "0xB5BB1C")]
			private bool BranchSequenceNode1578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xB5BC68", Offset = "0xB5BC68", VA = "0xB5BC68")]
			private bool BranchSequenceNode1464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xB5BD3C", Offset = "0xB5BD3C", VA = "0xB5BD3C")]
			private bool BranchSelectorNode1321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xB5BDE8", Offset = "0xB5BDE8", VA = "0xB5BDE8")]
			private bool BranchSequenceNode1588()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xB5BF34", Offset = "0xB5BF34", VA = "0xB5BF34")]
			private bool BranchSequenceNode1474()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xB5C008", Offset = "0xB5C008", VA = "0xB5C008")]
			private bool BranchSelectorNode1007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xB5C0B4", Offset = "0xB5C0B4", VA = "0xB5C0B4")]
			private bool BranchSequenceNode1598()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xB5C200", Offset = "0xB5C200", VA = "0xB5C200")]
			private bool BranchSequenceNode1484()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xB5C2D4", Offset = "0xB5C2D4", VA = "0xB5C2D4")]
			private bool BranchSequenceNode1398()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xB5C368", Offset = "0xB5C368", VA = "0xB5C368")]
			private bool BranchSequenceNode1407()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xB5C404", Offset = "0xB5C404", VA = "0xB5C404")]
			private bool BranchSequenceNode1543()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xB5C4C0", Offset = "0xB5C4C0", VA = "0xB5C4C0")]
			private bool BranchSelectorNode1119()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xB5C568", Offset = "0xB5C568", VA = "0xB5C568")]
			private bool BranchSequenceNode1120()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xB5C628", Offset = "0xB5C628", VA = "0xB5C628")]
			private bool ActionWaitNode1135()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BA")]
			[Address(RVA = "0xB5C684", Offset = "0xB5C684", VA = "0xB5C684")]
			private bool BranchSequenceNode1122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xB5C704", Offset = "0xB5C704", VA = "0xB5C704")]
			private bool BranchSequenceNode1139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xB5C7B4", Offset = "0xB5C7B4", VA = "0xB5C7B4")]
			private bool ActionWaitChoiceNode1140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xB5C810", Offset = "0xB5C810", VA = "0xB5C810")]
			private bool BranchSequenceNode1141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xB5C858", Offset = "0xB5C858", VA = "0xB5C858")]
			private bool BranchSequenceNode1496()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xB5C8E0", Offset = "0xB5C8E0", VA = "0xB5C8E0")]
			private bool BranchSequenceNode1504()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xB5C9B4", Offset = "0xB5C9B4", VA = "0xB5C9B4")]
			private bool BranchSequenceNode1115()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xB5CA38", Offset = "0xB5CA38", VA = "0xB5CA38")]
			private bool BranchSequenceNode1117()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xB5CB0C", Offset = "0xB5CB0C", VA = "0xB5CB0C")]
			private bool BranchSequenceNode1118()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xB5CBC0", Offset = "0xB5CBC0", VA = "0xB5CBC0")]
			private bool BranchSequenceNode1339()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xB5CBF8", Offset = "0xB5CBF8", VA = "0xB5CBF8")]
			private bool BranchSequenceNode1340()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xB5CC3C", Offset = "0xB5CC3C", VA = "0xB5CC3C")]
			private bool BranchSequenceNode1341()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xB5CDB0", Offset = "0xB5CDB0", VA = "0xB5CDB0")]
			private bool BranchSequenceNode1353()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xB5CE5C", Offset = "0xB5CE5C", VA = "0xB5CE5C")]
			private bool ActionWaitNode761()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xB5CEB8", Offset = "0xB5CEB8", VA = "0xB5CEB8")]
			private bool ActionWaitNode767()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0xB5CF14", Offset = "0xB5CF14", VA = "0xB5CF14")]
			private bool BranchSequenceNode1559()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xB5CF9C", Offset = "0xB5CF9C", VA = "0xB5CF9C")]
			private bool BranchSequenceNode1563()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0xB5D038", Offset = "0xB5D038", VA = "0xB5D038")]
			private bool BranchSequenceNode1564()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xB5D0D8", Offset = "0xB5D0D8", VA = "0xB5D0D8")]
			private bool BranchSequenceNode1565()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xB5D178", Offset = "0xB5D178", VA = "0xB5D178")]
			private bool BranchSequenceNode1566()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xB5D218", Offset = "0xB5D218", VA = "0xB5D218")]
			private bool BranchSequenceNode1567()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026CF")]
			[Address(RVA = "0xB5D2B8", Offset = "0xB5D2B8", VA = "0xB5D2B8")]
			private bool BranchRandomNode1512()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xB5D474", Offset = "0xB5D474", VA = "0xB5D474")]
			private bool BranchSequenceNode1513()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D1")]
			[Address(RVA = "0xB5D4E0", Offset = "0xB5D4E0", VA = "0xB5D4E0")]
			private bool ActionWaitNode1514()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xB5D53C", Offset = "0xB5D53C", VA = "0xB5D53C")]
			private bool BranchSequenceNode1516()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xB5D5E4", Offset = "0xB5D5E4", VA = "0xB5D5E4")]
			private bool BranchSelectorNode784()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xB5D640", Offset = "0xB5D640", VA = "0xB5D640")]
			private bool BranchSequenceNode1626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xB5D69C", Offset = "0xB5D69C", VA = "0xB5D69C")]
			private bool RangeCompareNode807()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xB5D7D4", Offset = "0xB5D7D4", VA = "0xB5D7D4")]
			private bool BranchRandomNode812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D7")]
			[Address(RVA = "0xB5D8F4", Offset = "0xB5D8F4", VA = "0xB5D8F4")]
			private bool BranchSelectorNode681()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xB5D948", Offset = "0xB5D948", VA = "0xB5D948")]
			private bool BranchSelectorNode1421()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0xB5D9FC", Offset = "0xB5D9FC", VA = "0xB5D9FC")]
			private bool BranchSequenceNode1444()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xB5DAA8", Offset = "0xB5DAA8", VA = "0xB5DAA8")]
			private bool BranchSelectorNode1443()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xB5DB28", Offset = "0xB5DB28", VA = "0xB5DB28")]
			private bool BranchSequenceNode1536()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xB5DBB8", Offset = "0xB5DBB8", VA = "0xB5DBB8")]
			private bool ActionDisengage1531()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0xB5DC14", Offset = "0xB5DC14", VA = "0xB5DC14")]
			private bool ActionWaitNode1533()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xB5DC70", Offset = "0xB5DC70", VA = "0xB5DC70")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0xB5DD28", Offset = "0xB5DD28", VA = "0xB5DD28")]
			private bool BranchSequenceNode707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0xB5DD78", Offset = "0xB5DD78", VA = "0xB5DD78")]
			private bool BranchSequenceNode718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xB5DDC8", Offset = "0xB5DDC8", VA = "0xB5DDC8")]
			private bool BranchSequenceNode963()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xB5DE34", Offset = "0xB5DE34", VA = "0xB5DE34")]
			private bool BranchSequenceNode965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0xB5DF10", Offset = "0xB5DF10", VA = "0xB5DF10")]
			private bool BranchSequenceNode966()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xB5E05C", Offset = "0xB5E05C", VA = "0xB5E05C")]
			private bool BranchSequenceNode1585()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0xB5E0E4", Offset = "0xB5E0E4", VA = "0xB5E0E4")]
			private bool BranchSequenceNode1595()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xB5E16C", Offset = "0xB5E16C", VA = "0xB5E16C")]
			private bool BranchSequenceNode1605()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xB5E1F4", Offset = "0xB5E1F4", VA = "0xB5E1F4")]
			private bool BranchSelectorNode1408()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xB5E2A0", Offset = "0xB5E2A0", VA = "0xB5E2A0")]
			private bool BranchSequenceNode1608()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026E9")]
			[Address(RVA = "0xB5E3EC", Offset = "0xB5E3EC", VA = "0xB5E3EC")]
			private bool BranchSequenceNode1547()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xB5E4C0", Offset = "0xB5E4C0", VA = "0xB5E4C0")]
			private bool BranchSequenceNode1618()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0xB5E5D8", Offset = "0xB5E5D8", VA = "0xB5E5D8")]
			private bool BranchSequenceNode1655()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xB5E724", Offset = "0xB5E724", VA = "0xB5E724")]
			private bool BranchSelectorNode1147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xB5E764", Offset = "0xB5E764", VA = "0xB5E764")]
			private bool ListenGlobalEventNode1569()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xB5E7C0", Offset = "0xB5E7C0", VA = "0xB5E7C0")]
			private bool ListenGlobalEventNode1571()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xB5E81C", Offset = "0xB5E81C", VA = "0xB5E81C")]
			private bool ListenGlobalEventNode1573()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xB5E878", Offset = "0xB5E878", VA = "0xB5E878")]
			private bool ListenGlobalEventNode1575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0xB5E8D4", Offset = "0xB5E8D4", VA = "0xB5E8D4")]
			private bool ListenGlobalEventNode1577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xB5E930", Offset = "0xB5E930", VA = "0xB5E930")]
			private bool ActionWaitNode1517()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0xB5E98C", Offset = "0xB5E98C", VA = "0xB5E98C")]
			private bool ActionWaitNode1518()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xB5E9E8", Offset = "0xB5E9E8", VA = "0xB5E9E8")]
			private bool ActionWaitNode1519()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F5")]
			[Address(RVA = "0xB5EA44", Offset = "0xB5EA44", VA = "0xB5EA44")]
			private bool ActionWaitNode1520()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xB5EAA0", Offset = "0xB5EAA0", VA = "0xB5EAA0")]
			private bool ActionWaitNode1521()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F7")]
			[Address(RVA = "0xB5EAFC", Offset = "0xB5EAFC", VA = "0xB5EAFC")]
			private bool ToggleTargetableNode1522()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xB5EB84", Offset = "0xB5EB84", VA = "0xB5EB84")]
			private bool BranchSequenceNode782()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026F9")]
			[Address(RVA = "0xB5EBBC", Offset = "0xB5EBBC", VA = "0xB5EBBC")]
			private bool BranchSelectorNode1717()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FA")]
			[Address(RVA = "0xB5EE3C", Offset = "0xB5EE3C", VA = "0xB5EE3C")]
			private bool BranchRandomNode1628()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FB")]
			[Address(RVA = "0xB5EFF8", Offset = "0xB5EFF8", VA = "0xB5EFF8")]
			private bool BranchSequenceNode1629()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xB5F064", Offset = "0xB5F064", VA = "0xB5F064")]
			private bool ActionWaitNode1630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xB5F0C0", Offset = "0xB5F0C0", VA = "0xB5F0C0")]
			private bool BranchSequenceNode1632()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xB5F168", Offset = "0xB5F168", VA = "0xB5F168")]
			private bool ActionWaitNode810()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60026FF")]
			[Address(RVA = "0xB5F1C4", Offset = "0xB5F1C4", VA = "0xB5F1C4")]
			private bool ActionWaitNode813()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002700")]
			[Address(RVA = "0xB5F220", Offset = "0xB5F220", VA = "0xB5F220")]
			private bool ActionWaitNode814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002701")]
			[Address(RVA = "0xB5F27C", Offset = "0xB5F27C", VA = "0xB5F27C")]
			private bool BranchSelectorNode1445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002702")]
			[Address(RVA = "0xB5F330", Offset = "0xB5F330", VA = "0xB5F330")]
			private bool BranchSequenceNode1446()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002703")]
			[Address(RVA = "0xB5F3A4", Offset = "0xB5F3A4", VA = "0xB5F3A4")]
			private bool BranchSelectorNode1538()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002704")]
			[Address(RVA = "0xB5F424", Offset = "0xB5F424", VA = "0xB5F424")]
			private bool BranchSequenceNode1645()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002705")]
			[Address(RVA = "0xB5F570", Offset = "0xB5F570", VA = "0xB5F570")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002706")]
			[Address(RVA = "0xB5F620", Offset = "0xB5F620", VA = "0xB5F620")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002707")]
			[Address(RVA = "0xB5F6E8", Offset = "0xB5F6E8", VA = "0xB5F6E8")]
			private bool RangeCompareNode708()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002708")]
			[Address(RVA = "0xB5F820", Offset = "0xB5F820", VA = "0xB5F820")]
			private bool BranchSelectorNode715()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002709")]
			[Address(RVA = "0xB5F860", Offset = "0xB5F860", VA = "0xB5F860")]
			private bool RangeCompareNode717()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270A")]
			[Address(RVA = "0xB5F998", Offset = "0xB5F998", VA = "0xB5F998")]
			private bool BranchSelectorNode724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270B")]
			[Address(RVA = "0xB5F9D8", Offset = "0xB5F9D8", VA = "0xB5F9D8")]
			private bool RangeCompareNode972()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270C")]
			[Address(RVA = "0xB5FB10", Offset = "0xB5FB10", VA = "0xB5FB10")]
			private bool BranchSequenceNode1615()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270D")]
			[Address(RVA = "0xB5FB98", Offset = "0xB5FB98", VA = "0xB5FB98")]
			private bool BranchSequenceNode1662()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270E")]
			[Address(RVA = "0xB5FC20", Offset = "0xB5FC20", VA = "0xB5FC20")]
			private bool BranchSequenceNode1148()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600270F")]
			[Address(RVA = "0xB5FCF4", Offset = "0xB5FCF4", VA = "0xB5FCF4")]
			private bool BranchSequenceNode1149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002710")]
			[Address(RVA = "0xB5FDA8", Offset = "0xB5FDA8", VA = "0xB5FDA8")]
			private bool BranchSequenceNode1718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002711")]
			[Address(RVA = "0xB5FE44", Offset = "0xB5FE44", VA = "0xB5FE44")]
			private bool BranchSequenceNode1719()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002712")]
			[Address(RVA = "0xB5FEE4", Offset = "0xB5FEE4", VA = "0xB5FEE4")]
			private bool BranchSequenceNode1720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002713")]
			[Address(RVA = "0xB5FF84", Offset = "0xB5FF84", VA = "0xB5FF84")]
			private bool BranchSequenceNode1721()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002714")]
			[Address(RVA = "0xB60024", Offset = "0xB60024", VA = "0xB60024")]
			private bool BranchSequenceNode1722()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002715")]
			[Address(RVA = "0xB600C4", Offset = "0xB600C4", VA = "0xB600C4")]
			private bool ActionWaitNode1633()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002716")]
			[Address(RVA = "0xB60120", Offset = "0xB60120", VA = "0xB60120")]
			private bool ActionWaitNode1634()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002717")]
			[Address(RVA = "0xB6017C", Offset = "0xB6017C", VA = "0xB6017C")]
			private bool ActionWaitNode1635()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002718")]
			[Address(RVA = "0xB601D8", Offset = "0xB601D8", VA = "0xB601D8")]
			private bool ActionWaitNode1636()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002719")]
			[Address(RVA = "0xB60234", Offset = "0xB60234", VA = "0xB60234")]
			private bool ActionWaitNode1637()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271A")]
			[Address(RVA = "0xB60290", Offset = "0xB60290", VA = "0xB60290")]
			private bool ToggleTargetableNode1638()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271B")]
			[Address(RVA = "0xB60318", Offset = "0xB60318", VA = "0xB60318")]
			private bool BranchSequenceNode1451()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271C")]
			[Address(RVA = "0xB60388", Offset = "0xB60388", VA = "0xB60388")]
			private bool BranchSequenceNode1666()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271D")]
			[Address(RVA = "0xB60444", Offset = "0xB60444", VA = "0xB60444")]
			private bool BranchSequenceNode1675()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271E")]
			[Address(RVA = "0xB60460", Offset = "0xB60460", VA = "0xB60460")]
			private bool BranchSequenceNode1652()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600271F")]
			[Address(RVA = "0xB604E8", Offset = "0xB604E8", VA = "0xB604E8")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002720")]
			[Address(RVA = "0xB60568", Offset = "0xB60568", VA = "0xB60568")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002721")]
			[Address(RVA = "0xB605B8", Offset = "0xB605B8", VA = "0xB605B8")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002722")]
			[Address(RVA = "0xB6063C", Offset = "0xB6063C", VA = "0xB6063C")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002723")]
			[Address(RVA = "0xB606A0", Offset = "0xB606A0", VA = "0xB606A0")]
			private bool BranchSequenceNode710()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002724")]
			[Address(RVA = "0xB60784", Offset = "0xB60784", VA = "0xB60784")]
			private bool BranchSequenceNode1705()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002725")]
			[Address(RVA = "0xB6083C", Offset = "0xB6083C", VA = "0xB6083C")]
			private bool BranchSequenceNode720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002726")]
			[Address(RVA = "0xB60920", Offset = "0xB60920", VA = "0xB60920")]
			private bool BranchSequenceNode1711()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002727")]
			[Address(RVA = "0xB609D8", Offset = "0xB609D8", VA = "0xB609D8")]
			private bool ListenGlobalEventNode1724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002728")]
			[Address(RVA = "0xB60A34", Offset = "0xB60A34", VA = "0xB60A34")]
			private bool ListenGlobalEventNode1726()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002729")]
			[Address(RVA = "0xB60A90", Offset = "0xB60A90", VA = "0xB60A90")]
			private bool ListenGlobalEventNode1728()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272A")]
			[Address(RVA = "0xB60AEC", Offset = "0xB60AEC", VA = "0xB60AEC")]
			private bool ListenGlobalEventNode1730()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272B")]
			[Address(RVA = "0xB60B48", Offset = "0xB60B48", VA = "0xB60B48")]
			private bool ListenGlobalEventNode1732()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272C")]
			[Address(RVA = "0xB60BA4", Offset = "0xB60BA4", VA = "0xB60BA4")]
			private bool BranchSequenceNode1696()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272D")]
			[Address(RVA = "0xB60C60", Offset = "0xB60C60", VA = "0xB60C60")]
			private bool BranchSequenceNode1670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272E")]
			[Address(RVA = "0xB60D34", Offset = "0xB60D34", VA = "0xB60D34")]
			private bool BranchSequenceNode1677()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600272F")]
			[Address(RVA = "0xB60DE0", Offset = "0xB60DE0", VA = "0xB60DE0")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002730")]
			[Address(RVA = "0xB60DE8", Offset = "0xB60DE8", VA = "0xB60DE8")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002731")]
			[Address(RVA = "0xB60E38", Offset = "0xB60E38", VA = "0xB60E38")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002732")]
			[Address(RVA = "0xB60F74", Offset = "0xB60F74", VA = "0xB60F74")]
			private bool BranchSelectorNode690()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002733")]
			[Address(RVA = "0xB60FC8", Offset = "0xB60FC8", VA = "0xB60FC8")]
			private bool BranchSequenceNode1700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002734")]
			[Address(RVA = "0xB6109C", Offset = "0xB6109C", VA = "0xB6109C")]
			private bool BranchSequenceNode1678()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002735")]
			[Address(RVA = "0xB61130", Offset = "0xB61130", VA = "0xB61130")]
			private bool BranchSequenceNode1687()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002736")]
			[Address(RVA = "0xB611CC", Offset = "0xB611CC", VA = "0xB611CC")]
			private bool BranchSequenceNode1734()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002737")]
			[Address(RVA = "0xB61288", Offset = "0xB61288", VA = "0xB61288")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002738")]
			[Address(RVA = "0xB612C8", Offset = "0xB612C8", VA = "0xB612C8")]
			private bool BranchSequenceNode580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002739")]
			[Address(RVA = "0xB61368", Offset = "0xB61368", VA = "0xB61368")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273A")]
			[Address(RVA = "0xB6150C", Offset = "0xB6150C", VA = "0xB6150C")]
			private bool BranchSequenceNode686()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273B")]
			[Address(RVA = "0xB61618", Offset = "0xB61618", VA = "0xB61618")]
			private bool BranchSelectorNode1688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273C")]
			[Address(RVA = "0xB616C4", Offset = "0xB616C4", VA = "0xB616C4")]
			private bool BranchSequenceNode1749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273D")]
			[Address(RVA = "0xB61810", Offset = "0xB61810", VA = "0xB61810")]
			private bool BranchSequenceNode1738()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273E")]
			[Address(RVA = "0xB618E4", Offset = "0xB618E4", VA = "0xB618E4")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600273F")]
			[Address(RVA = "0xB619D4", Offset = "0xB619D4", VA = "0xB619D4")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002740")]
			[Address(RVA = "0xB61AC4", Offset = "0xB61AC4", VA = "0xB61AC4")]
			private bool BranchSequenceNode1743()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002741")]
			[Address(RVA = "0xB61B7C", Offset = "0xB61B7C", VA = "0xB61B7C")]
			private bool RangeCompareNode688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002742")]
			[Address(RVA = "0xB61CB4", Offset = "0xB61CB4", VA = "0xB61CB4")]
			private bool BranchSequenceNode1756()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002743")]
			[Address(RVA = "0xB61D3C", Offset = "0xB61D3C", VA = "0xB61D3C")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002744")]
			[Address(RVA = "0xB61DAC", Offset = "0xB61DAC", VA = "0xB61DAC")]
			private bool BranchSelectorNode693()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002745")]
			[Address(RVA = "0xB61E80", Offset = "0xB61E80", VA = "0xB61E80")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002746")]
			[Address(RVA = "0xB61F18", Offset = "0xB61F18", VA = "0xB61F18")]
			private bool BranchSequenceNode694()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002747")]
			[Address(RVA = "0xB61FB4", Offset = "0xB61FB4", VA = "0xB61FB4")]
			private bool BranchRandomNode696()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002748")]
			[Address(RVA = "0xB62010", Offset = "0xB62010", VA = "0xB62010")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002749")]
			[Address(RVA = "0xB620C4", Offset = "0xB620C4", VA = "0xB620C4")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274A")]
			[Address(RVA = "0xB62178", Offset = "0xB62178", VA = "0xB62178")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274B")]
			[Address(RVA = "0xB621FC", Offset = "0xB621FC", VA = "0xB621FC")]
			private bool BranchRandomNode90()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274C")]
			[Address(RVA = "0xB62258", Offset = "0xB62258", VA = "0xB62258")]
			private bool StartAttackNode697()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274D")]
			[Address(RVA = "0xB622B4", Offset = "0xB622B4", VA = "0xB622B4")]
			private bool StartAttackNode698()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274E")]
			[Address(RVA = "0xB62310", Offset = "0xB62310", VA = "0xB62310")]
			private bool StartAttackNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600274F")]
			[Address(RVA = "0xB6236C", Offset = "0xB6236C", VA = "0xB6236C")]
			private bool StartAttackNode700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002750")]
			[Address(RVA = "0xB623C8", Offset = "0xB623C8", VA = "0xB623C8")]
			private bool StartAttackNode701()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002751")]
			[Address(RVA = "0xB62424", Offset = "0xB62424", VA = "0xB62424")]
			private bool StartAttackNode702()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002752")]
			[Address(RVA = "0xB62480", Offset = "0xB62480", VA = "0xB62480")]
			private bool StartAttackNode703()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002753")]
			[Address(RVA = "0xB624DC", Offset = "0xB624DC", VA = "0xB624DC")]
			private bool StartAttackNode704()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002754")]
			[Address(RVA = "0xB62538", Offset = "0xB62538", VA = "0xB62538")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002755")]
			[Address(RVA = "0xB625B0", Offset = "0xB625B0", VA = "0xB625B0")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002756")]
			[Address(RVA = "0xB62674", Offset = "0xB62674", VA = "0xB62674")]
			private bool StartAttackNode95()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002757")]
			[Address(RVA = "0xB626D0", Offset = "0xB626D0", VA = "0xB626D0")]
			private bool StartAttackNode333()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002758")]
			[Address(RVA = "0xB6272C", Offset = "0xB6272C", VA = "0xB6272C")]
			private bool StartAttackNode337()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002759")]
			[Address(RVA = "0xB62788", Offset = "0xB62788", VA = "0xB62788")]
			private bool StartAttackNode338()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xB520F4", Offset = "0xB520F4", VA = "0xB520F4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xB52204", Offset = "0xB52204", VA = "0xB52204", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xB52308", Offset = "0xB52308", VA = "0xB52308")]
		public HuskCombatantBehavior()
		{
		}
	}
	[Token(Token = "0x2000403")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8948", Offset = "0x8A8948")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8948", Offset = "0x8A8948")]
	public class InterruptBlocking : GeneratedActionNode
	{
		[Token(Token = "0x20005B3")]
		public class InterruptBlockingRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly InterruptBlocking _source;

			[Token(Token = "0x600275A")]
			[Address(RVA = "0xC53870", Offset = "0xC53870", VA = "0xC53870")]
			public InterruptBlockingRuntime(InterruptBlocking node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x600275B")]
			[Address(RVA = "0xC538AC", Offset = "0xC538AC", VA = "0xC538AC", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600275C")]
			[Address(RVA = "0xC53968", Offset = "0xC53968", VA = "0xC53968")]
			private bool BranchSequenceNode5()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xC537AC", Offset = "0xC537AC", VA = "0xC537AC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xC538A4", Offset = "0xC538A4", VA = "0xC538A4")]
		public InterruptBlocking()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8A04", Offset = "0x8A8A04")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8A04", Offset = "0x8A8A04")]
	public class KnightCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005B4")]
		public class KnightCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000607")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly KnightCombatantBehavior_hybrid _source;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private NodeUpdater tick;

			[Token(Token = "0x600275D")]
			[Address(RVA = "0xC54020", Offset = "0xC54020", VA = "0xC54020")]
			public KnightCombatantBehavior_hybridRuntime(KnightCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0xC54AC8", Offset = "0xC54AC8", VA = "0xC54AC8", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x600275F")]
			[Address(RVA = "0xC54080", Offset = "0xC54080", VA = "0xC54080")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002760")]
			[Address(RVA = "0xC54AF8", Offset = "0xC54AF8", VA = "0xC54AF8", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002761")]
			[Address(RVA = "0xC54B58", Offset = "0xC54B58", VA = "0xC54B58")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002762")]
			[Address(RVA = "0xC54D20", Offset = "0xC54D20", VA = "0xC54D20")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002763")]
			[Address(RVA = "0xC54E20", Offset = "0xC54E20", VA = "0xC54E20")]
			private bool BranchSequenceNode986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002764")]
			[Address(RVA = "0xC54E84", Offset = "0xC54E84", VA = "0xC54E84")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002765")]
			[Address(RVA = "0xC54F28", Offset = "0xC54F28", VA = "0xC54F28")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002766")]
			[Address(RVA = "0xC54F68", Offset = "0xC54F68", VA = "0xC54F68")]
			private bool BranchSelectorNode1082()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002767")]
			[Address(RVA = "0xC55034", Offset = "0xC55034", VA = "0xC55034")]
			private bool BranchSequenceNode1076()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002768")]
			[Address(RVA = "0xC550FC", Offset = "0xC550FC", VA = "0xC550FC")]
			private bool BranchSelectorNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002769")]
			[Address(RVA = "0xC5513C", Offset = "0xC5513C", VA = "0xC5513C")]
			private bool BranchSelectorNode1213()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276A")]
			[Address(RVA = "0xC5517C", Offset = "0xC5517C", VA = "0xC5517C")]
			private bool BranchSequenceNode1242()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276B")]
			[Address(RVA = "0xC55374", Offset = "0xC55374", VA = "0xC55374")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276C")]
			[Address(RVA = "0xC55484", Offset = "0xC55484", VA = "0xC55484")]
			private bool BranchSelectorNode193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276D")]
			[Address(RVA = "0xC5553C", Offset = "0xC5553C", VA = "0xC5553C")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276E")]
			[Address(RVA = "0xC55620", Offset = "0xC55620", VA = "0xC55620")]
			private bool BranchSelectorNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600276F")]
			[Address(RVA = "0xC5573C", Offset = "0xC5573C", VA = "0xC5573C")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002770")]
			[Address(RVA = "0xC55744", Offset = "0xC55744", VA = "0xC55744")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002771")]
			[Address(RVA = "0xC5580C", Offset = "0xC5580C", VA = "0xC5580C")]
			private bool BranchSelectorNode1086()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002772")]
			[Address(RVA = "0xC558C4", Offset = "0xC558C4", VA = "0xC558C4")]
			private bool BranchSelectorNode1087()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002773")]
			[Address(RVA = "0xC55964", Offset = "0xC55964", VA = "0xC55964")]
			private bool BranchSelectorNode1088()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002774")]
			[Address(RVA = "0xC55A34", Offset = "0xC55A34", VA = "0xC55A34")]
			private bool ToggleTargetableNode1080()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002775")]
			[Address(RVA = "0xC55AB8", Offset = "0xC55AB8", VA = "0xC55AB8")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002776")]
			[Address(RVA = "0xC55BC8", Offset = "0xC55BC8", VA = "0xC55BC8")]
			private bool BranchSequenceNode692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002777")]
			[Address(RVA = "0xC55C54", Offset = "0xC55C54", VA = "0xC55C54")]
			private bool BranchSequenceNode1487()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002778")]
			[Address(RVA = "0xC55DD0", Offset = "0xC55DD0", VA = "0xC55DD0")]
			private bool BranchSequenceNode1214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002779")]
			[Address(RVA = "0xC55E8C", Offset = "0xC55E8C", VA = "0xC55E8C")]
			private bool BranchSequenceNode1215()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277A")]
			[Address(RVA = "0xC55F48", Offset = "0xC55F48", VA = "0xC55F48")]
			private bool BranchSequenceNode1243()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277B")]
			[Address(RVA = "0xC55FA8", Offset = "0xC55FA8", VA = "0xC55FA8")]
			private bool BranchSequenceNode1251()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277C")]
			[Address(RVA = "0xC56028", Offset = "0xC56028", VA = "0xC56028")]
			private bool BranchSequenceNode1252()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277D")]
			[Address(RVA = "0xC560CC", Offset = "0xC560CC", VA = "0xC560CC")]
			private bool BranchSequenceNode1246()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277E")]
			[Address(RVA = "0xC5611C", Offset = "0xC5611C", VA = "0xC5611C")]
			private bool BranchSequenceNode1255()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600277F")]
			[Address(RVA = "0xC561BC", Offset = "0xC561BC", VA = "0xC561BC")]
			private bool BranchSequenceNode1248()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002780")]
			[Address(RVA = "0xC561F0", Offset = "0xC561F0", VA = "0xC561F0")]
			private bool BranchSequenceNode1460()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002781")]
			[Address(RVA = "0xC562AC", Offset = "0xC562AC", VA = "0xC562AC")]
			private bool BranchSequenceNode1469()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002782")]
			[Address(RVA = "0xC563F8", Offset = "0xC563F8", VA = "0xC563F8")]
			private bool BranchSequenceNode194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002783")]
			[Address(RVA = "0xC56474", Offset = "0xC56474", VA = "0xC56474")]
			private bool ToggleHeadLookIK199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002784")]
			[Address(RVA = "0xC564D4", Offset = "0xC564D4", VA = "0xC564D4")]
			private bool BranchSequenceNode1066()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002785")]
			[Address(RVA = "0xC5653C", Offset = "0xC5653C", VA = "0xC5653C")]
			private bool BranchSelectorNode1030()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002786")]
			[Address(RVA = "0xC565D4", Offset = "0xC565D4", VA = "0xC565D4")]
			private bool BranchSelectorNode1389()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002787")]
			[Address(RVA = "0xC56640", Offset = "0xC56640", VA = "0xC56640")]
			private bool BranchSelectorNode1390()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002788")]
			[Address(RVA = "0xC566AC", Offset = "0xC566AC", VA = "0xC566AC")]
			private bool BranchSelectorNode1391()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002789")]
			[Address(RVA = "0xC566EC", Offset = "0xC566EC", VA = "0xC566EC")]
			private bool BranchSequenceNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278A")]
			[Address(RVA = "0xC567FC", Offset = "0xC567FC", VA = "0xC567FC")]
			private bool BranchSequenceNode1393()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278B")]
			[Address(RVA = "0xC568E4", Offset = "0xC568E4", VA = "0xC568E4")]
			private bool BranchSequenceNode1394()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278C")]
			[Address(RVA = "0xC5693C", Offset = "0xC5693C", VA = "0xC5693C")]
			private bool BranchSequenceNode1479()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278D")]
			[Address(RVA = "0xC56A58", Offset = "0xC56A58", VA = "0xC56A58")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278E")]
			[Address(RVA = "0xC56AE4", Offset = "0xC56AE4", VA = "0xC56AE4")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600278F")]
			[Address(RVA = "0xC56B44", Offset = "0xC56B44", VA = "0xC56B44")]
			private bool BranchSequenceNode1089()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002790")]
			[Address(RVA = "0xC56BF0", Offset = "0xC56BF0", VA = "0xC56BF0")]
			private bool BranchSequenceNode1090()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002791")]
			[Address(RVA = "0xC56CA8", Offset = "0xC56CA8", VA = "0xC56CA8")]
			private bool BranchSequenceNode1091()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002792")]
			[Address(RVA = "0xC56D30", Offset = "0xC56D30", VA = "0xC56D30")]
			private bool BranchSequenceNode1093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002793")]
			[Address(RVA = "0xC56D94", Offset = "0xC56D94", VA = "0xC56D94")]
			private bool BranchSequenceNode1094()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002794")]
			[Address(RVA = "0xC56E14", Offset = "0xC56E14", VA = "0xC56E14")]
			private bool BranchSequenceNode1095()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002795")]
			[Address(RVA = "0xC56F58", Offset = "0xC56F58", VA = "0xC56F58")]
			private bool BranchSequenceNode1096()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002796")]
			[Address(RVA = "0xC5703C", Offset = "0xC5703C", VA = "0xC5703C")]
			private bool BranchSelectorNode770()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002797")]
			[Address(RVA = "0xC570B4", Offset = "0xC570B4", VA = "0xC570B4")]
			private bool BranchSequenceNode1516()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002798")]
			[Address(RVA = "0xC570D0", Offset = "0xC570D0", VA = "0xC570D0")]
			private bool BranchSequenceNode1536()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002799")]
			[Address(RVA = "0xC570EC", Offset = "0xC570EC", VA = "0xC570EC")]
			private bool BranchSequenceNode1496()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279A")]
			[Address(RVA = "0xC57238", Offset = "0xC57238", VA = "0xC57238")]
			private bool BranchSequenceNode1224()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279B")]
			[Address(RVA = "0xC572C4", Offset = "0xC572C4", VA = "0xC572C4")]
			private bool BranchSequenceNode1258()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279C")]
			[Address(RVA = "0xC57398", Offset = "0xC57398", VA = "0xC57398")]
			private bool BranchSequenceNode1259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279D")]
			[Address(RVA = "0xC573F8", Offset = "0xC573F8", VA = "0xC573F8")]
			private bool BranchSequenceNode1275()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279E")]
			[Address(RVA = "0xC57448", Offset = "0xC57448", VA = "0xC57448")]
			private bool BranchSequenceNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600279F")]
			[Address(RVA = "0xC57488", Offset = "0xC57488", VA = "0xC57488")]
			private bool BranchSequenceNode1278()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A0")]
			[Address(RVA = "0xC57504", Offset = "0xC57504", VA = "0xC57504")]
			private bool BranchSequenceNode1556()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xC575E8", Offset = "0xC575E8", VA = "0xC575E8")]
			private bool BranchSequenceNode1265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A2")]
			[Address(RVA = "0xC5761C", Offset = "0xC5761C", VA = "0xC5761C")]
			private bool BranchSequenceNode1266()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A3")]
			[Address(RVA = "0xC5766C", Offset = "0xC5766C", VA = "0xC5766C")]
			private bool ActionWaitNode1283()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xC576CC", Offset = "0xC576CC", VA = "0xC576CC")]
			private bool BranchSequenceNode1586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A5")]
			[Address(RVA = "0xC577E4", Offset = "0xC577E4", VA = "0xC577E4")]
			private bool BranchSequenceNode1593()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A6")]
			[Address(RVA = "0xC579A0", Offset = "0xC579A0", VA = "0xC579A0")]
			private bool BranchSequenceNode1270()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xC57AB8", Offset = "0xC57AB8", VA = "0xC57AB8")]
			private bool BranchSequenceNode1464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A8")]
			[Address(RVA = "0xC57B8C", Offset = "0xC57B8C", VA = "0xC57B8C")]
			private bool BranchSequenceNode1476()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027A9")]
			[Address(RVA = "0xC57C14", Offset = "0xC57C14", VA = "0xC57C14")]
			private bool BranchSelectorNode197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AA")]
			[Address(RVA = "0xC57D6C", Offset = "0xC57D6C", VA = "0xC57D6C")]
			private bool ToggleHeadLookIK198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AB")]
			[Address(RVA = "0xC57DCC", Offset = "0xC57DCC", VA = "0xC57DCC")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xC57EEC", Offset = "0xC57EEC", VA = "0xC57EEC")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xC57F68", Offset = "0xC57F68", VA = "0xC57F68")]
			private bool BranchSequenceNode1395()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xC58008", Offset = "0xC58008", VA = "0xC58008")]
			private bool BranchSequenceNode1418()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027AF")]
			[Address(RVA = "0xC5806C", Offset = "0xC5806C", VA = "0xC5806C")]
			private bool BranchSequenceNode1397()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B0")]
			[Address(RVA = "0xC5810C", Offset = "0xC5810C", VA = "0xC5810C")]
			private bool BranchSequenceNode1421()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B1")]
			[Address(RVA = "0xC58170", Offset = "0xC58170", VA = "0xC58170")]
			private bool BranchSequenceNode1399()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xC582D4", Offset = "0xC582D4", VA = "0xC582D4")]
			private bool BranchSequenceNode1400()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xC5841C", Offset = "0xC5841C", VA = "0xC5841C")]
			private bool BranchSelectorNode1403()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xC5845C", Offset = "0xC5845C", VA = "0xC5845C")]
			private bool BranchSequenceNode1603()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B5")]
			[Address(RVA = "0xC585A8", Offset = "0xC585A8", VA = "0xC585A8")]
			private bool BranchSelectorNode1409()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xC58648", Offset = "0xC58648", VA = "0xC58648")]
			private bool BranchSequenceNode1435()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B7")]
			[Address(RVA = "0xC586E0", Offset = "0xC586E0", VA = "0xC586E0")]
			private bool BranchSequenceNode1613()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xC5882C", Offset = "0xC5882C", VA = "0xC5882C")]
			private bool BranchSequenceNode1436()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xC589A4", Offset = "0xC589A4", VA = "0xC589A4")]
			private bool RangeCompareNode1437()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xC58AD4", Offset = "0xC58AD4", VA = "0xC58AD4")]
			private bool BranchSelectorNode1031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BB")]
			[Address(RVA = "0xC58BE0", Offset = "0xC58BE0", VA = "0xC58BE0")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xC58CC0", Offset = "0xC58CC0", VA = "0xC58CC0")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BD")]
			[Address(RVA = "0xC58D20", Offset = "0xC58D20", VA = "0xC58D20")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xC58D80", Offset = "0xC58D80", VA = "0xC58D80")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xC58E6C", Offset = "0xC58E6C", VA = "0xC58E6C")]
			private bool BranchSequenceNode1097()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xC58F14", Offset = "0xC58F14", VA = "0xC58F14")]
			private bool BranchSequenceNode1098()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C1")]
			[Address(RVA = "0xC58FE4", Offset = "0xC58FE4", VA = "0xC58FE4")]
			private bool BranchSelectorNode1099()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xC59068", Offset = "0xC59068", VA = "0xC59068")]
			private bool BranchSequenceNode1100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C3")]
			[Address(RVA = "0xC5910C", Offset = "0xC5910C", VA = "0xC5910C")]
			private bool BranchSelectorNode1105()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xC59160", Offset = "0xC59160", VA = "0xC59160")]
			private bool BranchSelectorNode1107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xC5923C", Offset = "0xC5923C", VA = "0xC5923C")]
			private bool BranchSelectorNode1109()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xC592FC", Offset = "0xC592FC", VA = "0xC592FC")]
			private bool BranchSelectorNode1113()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xC59380", Offset = "0xC59380", VA = "0xC59380")]
			private bool BranchSequenceNode1143()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xC59430", Offset = "0xC59430", VA = "0xC59430")]
			private bool BranchSequenceNode1144()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xC59550", Offset = "0xC59550", VA = "0xC59550")]
			private bool BranchSequenceNode1145()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xC595E4", Offset = "0xC595E4", VA = "0xC595E4")]
			private bool BranchSequenceNode1518()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xC59690", Offset = "0xC59690", VA = "0xC59690")]
			private bool BranchSequenceNode1538()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xC5973C", Offset = "0xC5973C", VA = "0xC5973C")]
			private bool BranchSequenceNode1503()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xC597C4", Offset = "0xC597C4", VA = "0xC597C4")]
			private bool BranchSequenceNode1228()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xC59874", Offset = "0xC59874", VA = "0xC59874")]
			private bool BranchSequenceNode1623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xC59890", Offset = "0xC59890", VA = "0xC59890")]
			private bool BranchSequenceNode1290()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xC598D0", Offset = "0xC598D0", VA = "0xC598D0")]
			private bool BranchSelectorNode1306()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xC599BC", Offset = "0xC599BC", VA = "0xC599BC")]
			private bool BranchSequenceNode1276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xC59A70", Offset = "0xC59A70", VA = "0xC59A70")]
			private bool BranchSequenceNode1295()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D3")]
			[Address(RVA = "0xC59B90", Offset = "0xC59B90", VA = "0xC59B90")]
			private bool BranchSequenceNode1296()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xC59C7C", Offset = "0xC59C7C", VA = "0xC59C7C")]
			private bool ActionWaitChoiceNode1297()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D5")]
			[Address(RVA = "0xC59CDC", Offset = "0xC59CDC", VA = "0xC59CDC")]
			private bool BranchSequenceNode1298()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xC59D7C", Offset = "0xC59D7C", VA = "0xC59D7C")]
			private bool BranchSequenceNode1560()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xC59DFC", Offset = "0xC59DFC", VA = "0xC59DFC")]
			private bool BranchSelectorNode1559()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xC59E54", Offset = "0xC59E54", VA = "0xC59E54")]
			private bool BranchSelectorNode1281()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027D9")]
			[Address(RVA = "0xC59E94", Offset = "0xC59E94", VA = "0xC59E94")]
			private bool BranchSequenceNode1282()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DA")]
			[Address(RVA = "0xC59F2C", Offset = "0xC59F2C", VA = "0xC59F2C")]
			private bool BranchSequenceNode1599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DB")]
			[Address(RVA = "0xC59FA8", Offset = "0xC59FA8", VA = "0xC59FA8")]
			private bool BranchSequenceNode1506()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DC")]
			[Address(RVA = "0xC5A0F4", Offset = "0xC5A0F4", VA = "0xC5A0F4")]
			private bool BranchSequenceNode965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xC5A1A4", Offset = "0xC5A1A4", VA = "0xC5A1A4")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DE")]
			[Address(RVA = "0xC5A204", Offset = "0xC5A204", VA = "0xC5A204")]
			private bool BranchSequenceNode955()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027DF")]
			[Address(RVA = "0xC5A264", Offset = "0xC5A264", VA = "0xC5A264")]
			private bool BranchSequenceNode1438()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xC5A2CC", Offset = "0xC5A2CC", VA = "0xC5A2CC")]
			private bool RangeCompareNode1439()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xC5A404", Offset = "0xC5A404", VA = "0xC5A404")]
			private bool BranchSequenceNode1441()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xC5A46C", Offset = "0xC5A46C", VA = "0xC5A46C")]
			private bool RangeCompareNode1442()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xC5A5A4", Offset = "0xC5A5A4", VA = "0xC5A5A4")]
			private bool RangeCompareNode1431()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xC5A6DC", Offset = "0xC5A6DC", VA = "0xC5A6DC")]
			private bool RangeCompareNode1432()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E5")]
			[Address(RVA = "0xC5A814", Offset = "0xC5A814", VA = "0xC5A814")]
			private bool BranchSequenceNode1610()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xC5A89C", Offset = "0xC5A89C", VA = "0xC5A89C")]
			private bool RangeCompareNode1434()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E7")]
			[Address(RVA = "0xC5A9D4", Offset = "0xC5A9D4", VA = "0xC5A9D4")]
			private bool BranchSequenceNode1620()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E8")]
			[Address(RVA = "0xC5AA5C", Offset = "0xC5AA5C", VA = "0xC5AA5C")]
			private bool BranchSequenceNode1033()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xC5AAE0", Offset = "0xC5AAE0", VA = "0xC5AAE0")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027EA")]
			[Address(RVA = "0xC5AB44", Offset = "0xC5AB44", VA = "0xC5AB44")]
			private bool BranchSequenceNode966()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027EB")]
			[Address(RVA = "0xC5ABA4", Offset = "0xC5ABA4", VA = "0xC5ABA4")]
			private bool BranchSequenceNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027EC")]
			[Address(RVA = "0xC5AC88", Offset = "0xC5AC88", VA = "0xC5AC88")]
			private bool BranchSequenceNode1069()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027ED")]
			[Address(RVA = "0xC5ACEC", Offset = "0xC5ACEC", VA = "0xC5ACEC")]
			private bool BranchSelectorNode1011()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xC5AD4C", Offset = "0xC5AD4C", VA = "0xC5AD4C")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027EF")]
			[Address(RVA = "0xC5ADF0", Offset = "0xC5ADF0", VA = "0xC5ADF0")]
			private bool BranchSequenceNode586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F0")]
			[Address(RVA = "0xC5AECC", Offset = "0xC5AECC", VA = "0xC5AECC")]
			private bool BranchSequenceNode871()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F1")]
			[Address(RVA = "0xC5AF5C", Offset = "0xC5AF5C", VA = "0xC5AF5C")]
			private bool BranchSequenceNode1643()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F2")]
			[Address(RVA = "0xC5AFBC", Offset = "0xC5AFBC", VA = "0xC5AFBC")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F3")]
			[Address(RVA = "0xC5B038", Offset = "0xC5B038", VA = "0xC5B038")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xC5B0B0", Offset = "0xC5B0B0", VA = "0xC5B0B0")]
			private bool BranchSequenceNode1146()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xC5B100", Offset = "0xC5B100", VA = "0xC5B100")]
			private bool BranchSequenceNode1125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xC5B190", Offset = "0xC5B190", VA = "0xC5B190")]
			private bool BranchSequenceNode1126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F7")]
			[Address(RVA = "0xC5B220", Offset = "0xC5B220", VA = "0xC5B220")]
			private bool BranchSequenceNode1127()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xC5B2B0", Offset = "0xC5B2B0", VA = "0xC5B2B0")]
			private bool BranchSequenceNode1128()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027F9")]
			[Address(RVA = "0xC5B340", Offset = "0xC5B340", VA = "0xC5B340")]
			private bool BranchSequenceNode1133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FA")]
			[Address(RVA = "0xC5B3E8", Offset = "0xC5B3E8", VA = "0xC5B3E8")]
			private bool BranchSequenceNode1134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xC5B428", Offset = "0xC5B428", VA = "0xC5B428")]
			private bool BranchSequenceNode1139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xC5B4A0", Offset = "0xC5B4A0", VA = "0xC5B4A0")]
			private bool BranchSequenceNode1140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FD")]
			[Address(RVA = "0xC5B50C", Offset = "0xC5B50C", VA = "0xC5B50C")]
			private bool BranchSequenceNode1141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xC5B5E8", Offset = "0xC5B5E8", VA = "0xC5B5E8")]
			private bool BranchSequenceNode1142()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60027FF")]
			[Address(RVA = "0xC5B664", Offset = "0xC5B664", VA = "0xC5B664")]
			private bool RangeCompareNode1173()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002800")]
			[Address(RVA = "0xC5B79C", Offset = "0xC5B79C", VA = "0xC5B79C")]
			private bool BranchSelectorNode1174()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002801")]
			[Address(RVA = "0xC5B868", Offset = "0xC5B868", VA = "0xC5B868")]
			private bool BranchSequenceNode1519()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002802")]
			[Address(RVA = "0xC5B8FC", Offset = "0xC5B8FC", VA = "0xC5B8FC")]
			private bool BranchSequenceNode1528()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002803")]
			[Address(RVA = "0xC5B998", Offset = "0xC5B998", VA = "0xC5B998")]
			private bool BranchSequenceNode1688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002804")]
			[Address(RVA = "0xC5BA54", Offset = "0xC5BA54", VA = "0xC5BA54")]
			private bool BranchSequenceNode1539()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002805")]
			[Address(RVA = "0xC5BAE8", Offset = "0xC5BAE8", VA = "0xC5BAE8")]
			private bool BranchSequenceNode1548()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002806")]
			[Address(RVA = "0xC5BB84", Offset = "0xC5BB84", VA = "0xC5BB84")]
			private bool BranchSequenceNode1698()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002807")]
			[Address(RVA = "0xC5BC40", Offset = "0xC5BC40", VA = "0xC5BC40")]
			private bool BranchSequenceNode1234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002808")]
			[Address(RVA = "0xC5BCDC", Offset = "0xC5BCDC", VA = "0xC5BCDC")]
			private bool BranchSequenceNode1708()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002809")]
			[Address(RVA = "0xC5BD98", Offset = "0xC5BD98", VA = "0xC5BD98")]
			private bool BranchSequenceNode1625()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280A")]
			[Address(RVA = "0xC5BE44", Offset = "0xC5BE44", VA = "0xC5BE44")]
			private bool BranchSequenceNode1304()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280B")]
			[Address(RVA = "0xC5BEF0", Offset = "0xC5BEF0", VA = "0xC5BEF0")]
			private bool BranchSequenceNode1305()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280C")]
			[Address(RVA = "0xC5C024", Offset = "0xC5C024", VA = "0xC5C024")]
			private bool BranchSequenceNode1341()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280D")]
			[Address(RVA = "0xC5C0B4", Offset = "0xC5C0B4", VA = "0xC5C0B4")]
			private bool BranchSequenceNode1351()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280E")]
			[Address(RVA = "0xC5C130", Offset = "0xC5C130", VA = "0xC5C130")]
			private bool BranchSequenceNode1717()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600280F")]
			[Address(RVA = "0xC5C27C", Offset = "0xC5C27C", VA = "0xC5C27C")]
			private bool BranchSequenceNode1728()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002810")]
			[Address(RVA = "0xC5C338", Offset = "0xC5C338", VA = "0xC5C338")]
			private bool BranchSelectorNode1320()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002811")]
			[Address(RVA = "0xC5C3B4", Offset = "0xC5C3B4", VA = "0xC5C3B4")]
			private bool BranchSelectorNode1321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002812")]
			[Address(RVA = "0xC5C3F4", Offset = "0xC5C3F4", VA = "0xC5C3F4")]
			private bool BranchSequenceNode1561()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002813")]
			[Address(RVA = "0xC5C428", Offset = "0xC5C428", VA = "0xC5C428")]
			private bool BranchSelectorNode1566()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002814")]
			[Address(RVA = "0xC5C4C0", Offset = "0xC5C4C0", VA = "0xC5C4C0")]
			private bool BranchSequenceNode1299()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002815")]
			[Address(RVA = "0xC5C584", Offset = "0xC5C584", VA = "0xC5C584")]
			private bool BranchSequenceNode1300()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002816")]
			[Address(RVA = "0xC5C678", Offset = "0xC5C678", VA = "0xC5C678")]
			private bool BranchSequenceNode1513()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002817")]
			[Address(RVA = "0xC5C700", Offset = "0xC5C700", VA = "0xC5C700")]
			private bool ActionWaitNode962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002818")]
			[Address(RVA = "0xC5C760", Offset = "0xC5C760", VA = "0xC5C760")]
			private bool RangeCompareNode1455()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002819")]
			[Address(RVA = "0xC5C898", Offset = "0xC5C898", VA = "0xC5C898")]
			private bool RangeCompareNode1457()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281A")]
			[Address(RVA = "0xC5C9D0", Offset = "0xC5C9D0", VA = "0xC5C9D0")]
			private bool BranchSequenceNode1780()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281B")]
			[Address(RVA = "0xC5CB1C", Offset = "0xC5CB1C", VA = "0xC5CB1C")]
			private bool BranchSelectorNode1790()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281C")]
			[Address(RVA = "0xC5CDB0", Offset = "0xC5CDB0", VA = "0xC5CDB0")]
			private bool BranchSequenceNode1738()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281D")]
			[Address(RVA = "0xC5CE10", Offset = "0xC5CE10", VA = "0xC5CE10")]
			private bool BranchSequenceNode977()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281E")]
			[Address(RVA = "0xC5CEB0", Offset = "0xC5CEB0", VA = "0xC5CEB0")]
			private bool BranchSequenceNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600281F")]
			[Address(RVA = "0xC5CF60", Offset = "0xC5CF60", VA = "0xC5CF60")]
			private bool RangeCompareNode1012()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002820")]
			[Address(RVA = "0xC5D090", Offset = "0xC5D090", VA = "0xC5D090")]
			private bool BranchRandomNode723()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002821")]
			[Address(RVA = "0xC5D214", Offset = "0xC5D214", VA = "0xC5D214")]
			private bool BranchSequenceNode587()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002822")]
			[Address(RVA = "0xC5D308", Offset = "0xC5D308", VA = "0xC5D308")]
			private bool BranchSequenceNode1070()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002823")]
			[Address(RVA = "0xC5D384", Offset = "0xC5D384", VA = "0xC5D384")]
			private bool StartAttackNode599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002824")]
			[Address(RVA = "0xC5D3E4", Offset = "0xC5D3E4", VA = "0xC5D3E4")]
			private bool BranchSequenceNode1071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002825")]
			[Address(RVA = "0xC5D480", Offset = "0xC5D480", VA = "0xC5D480")]
			private bool BranchSequenceNode866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002826")]
			[Address(RVA = "0xC5D598", Offset = "0xC5D598", VA = "0xC5D598")]
			private bool BranchSequenceNode936()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002827")]
			[Address(RVA = "0xC5D790", Offset = "0xC5D790", VA = "0xC5D790")]
			private bool BranchSequenceNode930()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002828")]
			[Address(RVA = "0xC5D7F0", Offset = "0xC5D7F0", VA = "0xC5D7F0")]
			private bool BranchSequenceNode1644()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002829")]
			[Address(RVA = "0xC5D878", Offset = "0xC5D878", VA = "0xC5D878")]
			private bool BranchSequenceNode1645()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282A")]
			[Address(RVA = "0xC5DA14", Offset = "0xC5DA14", VA = "0xC5DA14")]
			private bool BranchSequenceNode1660()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282B")]
			[Address(RVA = "0xC5DAA0", Offset = "0xC5DAA0", VA = "0xC5DAA0")]
			private bool BranchSequenceNode1647()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282C")]
			[Address(RVA = "0xC5DBDC", Offset = "0xC5DBDC", VA = "0xC5DBDC")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282D")]
			[Address(RVA = "0xC5DD28", Offset = "0xC5DD28", VA = "0xC5DD28")]
			private bool BranchSequenceNode1757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282E")]
			[Address(RVA = "0xC5DD88", Offset = "0xC5DD88", VA = "0xC5DD88")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600282F")]
			[Address(RVA = "0xC5DDE0", Offset = "0xC5DDE0", VA = "0xC5DDE0")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002830")]
			[Address(RVA = "0xC5DF38", Offset = "0xC5DF38", VA = "0xC5DF38")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002831")]
			[Address(RVA = "0xC5E068", Offset = "0xC5E068", VA = "0xC5E068")]
			private bool BranchSequenceNode1159()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002832")]
			[Address(RVA = "0xC5E148", Offset = "0xC5E148", VA = "0xC5E148")]
			private bool BranchSelectorNode1160()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002833")]
			[Address(RVA = "0xC5E2C0", Offset = "0xC5E2C0", VA = "0xC5E2C0")]
			private bool RangeCompareNode1166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002834")]
			[Address(RVA = "0xC5E3F8", Offset = "0xC5E3F8", VA = "0xC5E3F8")]
			private bool BranchSelectorNode1170()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002835")]
			[Address(RVA = "0xC5E438", Offset = "0xC5E438", VA = "0xC5E438")]
			private bool BranchSequenceNode1195()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002836")]
			[Address(RVA = "0xC5E4B0", Offset = "0xC5E4B0", VA = "0xC5E4B0")]
			private bool BranchSequenceNode1196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002837")]
			[Address(RVA = "0xC5E528", Offset = "0xC5E528", VA = "0xC5E528")]
			private bool BranchSelectorNode1529()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002838")]
			[Address(RVA = "0xC5E5D4", Offset = "0xC5E5D4", VA = "0xC5E5D4")]
			private bool BranchSequenceNode1806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002839")]
			[Address(RVA = "0xC5E720", Offset = "0xC5E720", VA = "0xC5E720")]
			private bool BranchSequenceNode1692()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283A")]
			[Address(RVA = "0xC5E7F4", Offset = "0xC5E7F4", VA = "0xC5E7F4")]
			private bool BranchSelectorNode1549()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283B")]
			[Address(RVA = "0xC5E8A0", Offset = "0xC5E8A0", VA = "0xC5E8A0")]
			private bool BranchSequenceNode1816()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283C")]
			[Address(RVA = "0xC5E9EC", Offset = "0xC5E9EC", VA = "0xC5E9EC")]
			private bool BranchSequenceNode1702()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283D")]
			[Address(RVA = "0xC5EAC0", Offset = "0xC5EAC0", VA = "0xC5EAC0")]
			private bool BranchSelectorNode1235()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283E")]
			[Address(RVA = "0xC5EB6C", Offset = "0xC5EB6C", VA = "0xC5EB6C")]
			private bool BranchSequenceNode1826()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600283F")]
			[Address(RVA = "0xC5ECB8", Offset = "0xC5ECB8", VA = "0xC5ECB8")]
			private bool BranchSequenceNode1712()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002840")]
			[Address(RVA = "0xC5ED8C", Offset = "0xC5ED8C", VA = "0xC5ED8C")]
			private bool BranchSequenceNode1626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002841")]
			[Address(RVA = "0xC5EE20", Offset = "0xC5EE20", VA = "0xC5EE20")]
			private bool BranchSequenceNode1635()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002842")]
			[Address(RVA = "0xC5EEBC", Offset = "0xC5EEBC", VA = "0xC5EEBC")]
			private bool BranchSequenceNode1771()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002843")]
			[Address(RVA = "0xC5EF78", Offset = "0xC5EF78", VA = "0xC5EF78")]
			private bool BranchSelectorNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002844")]
			[Address(RVA = "0xC5F020", Offset = "0xC5F020", VA = "0xC5F020")]
			private bool BranchSequenceNode1348()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002845")]
			[Address(RVA = "0xC5F0E0", Offset = "0xC5F0E0", VA = "0xC5F0E0")]
			private bool ActionWaitNode1363()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002846")]
			[Address(RVA = "0xC5F140", Offset = "0xC5F140", VA = "0xC5F140")]
			private bool BranchSequenceNode1350()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002847")]
			[Address(RVA = "0xC5F1C0", Offset = "0xC5F1C0", VA = "0xC5F1C0")]
			private bool BranchSequenceNode1367()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002848")]
			[Address(RVA = "0xC5F270", Offset = "0xC5F270", VA = "0xC5F270")]
			private bool ActionWaitChoiceNode1368()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002849")]
			[Address(RVA = "0xC5F2D0", Offset = "0xC5F2D0", VA = "0xC5F2D0")]
			private bool BranchSequenceNode1369()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284A")]
			[Address(RVA = "0xC5F318", Offset = "0xC5F318", VA = "0xC5F318")]
			private bool BranchSequenceNode1724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284B")]
			[Address(RVA = "0xC5F3A0", Offset = "0xC5F3A0", VA = "0xC5F3A0")]
			private bool BranchSequenceNode1732()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284C")]
			[Address(RVA = "0xC5F474", Offset = "0xC5F474", VA = "0xC5F474")]
			private bool BranchSequenceNode1343()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284D")]
			[Address(RVA = "0xC5F4F8", Offset = "0xC5F4F8", VA = "0xC5F4F8")]
			private bool BranchSequenceNode1345()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284E")]
			[Address(RVA = "0xC5F5CC", Offset = "0xC5F5CC", VA = "0xC5F5CC")]
			private bool BranchSequenceNode1346()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600284F")]
			[Address(RVA = "0xC5F680", Offset = "0xC5F680", VA = "0xC5F680")]
			private bool BranchSequenceNode1567()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002850")]
			[Address(RVA = "0xC5F6B8", Offset = "0xC5F6B8", VA = "0xC5F6B8")]
			private bool BranchSequenceNode1568()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002851")]
			[Address(RVA = "0xC5F6FC", Offset = "0xC5F6FC", VA = "0xC5F6FC")]
			private bool BranchSequenceNode1569()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002852")]
			[Address(RVA = "0xC5F870", Offset = "0xC5F870", VA = "0xC5F870")]
			private bool BranchSequenceNode1581()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002853")]
			[Address(RVA = "0xC5F91C", Offset = "0xC5F91C", VA = "0xC5F91C")]
			private bool BranchSequenceNode1787()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002854")]
			[Address(RVA = "0xC5F9A4", Offset = "0xC5F9A4", VA = "0xC5F9A4")]
			private bool BranchSequenceNode1791()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002855")]
			[Address(RVA = "0xC5FA44", Offset = "0xC5FA44", VA = "0xC5FA44")]
			private bool BranchSequenceNode1792()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002856")]
			[Address(RVA = "0xC5FAE8", Offset = "0xC5FAE8", VA = "0xC5FAE8")]
			private bool BranchSequenceNode1793()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002857")]
			[Address(RVA = "0xC5FB8C", Offset = "0xC5FB8C", VA = "0xC5FB8C")]
			private bool BranchSequenceNode1794()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002858")]
			[Address(RVA = "0xC5FC30", Offset = "0xC5FC30", VA = "0xC5FC30")]
			private bool BranchSequenceNode1795()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002859")]
			[Address(RVA = "0xC5FCD4", Offset = "0xC5FCD4", VA = "0xC5FCD4")]
			private bool BranchRandomNode1740()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285A")]
			[Address(RVA = "0xC5FEA4", Offset = "0xC5FEA4", VA = "0xC5FEA4")]
			private bool BranchSequenceNode1741()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285B")]
			[Address(RVA = "0xC5FF10", Offset = "0xC5FF10", VA = "0xC5FF10")]
			private bool ActionWaitNode1742()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285C")]
			[Address(RVA = "0xC5FF70", Offset = "0xC5FF70", VA = "0xC5FF70")]
			private bool BranchSequenceNode1744()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285D")]
			[Address(RVA = "0xC60018", Offset = "0xC60018", VA = "0xC60018")]
			private bool BranchSelectorNode976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285E")]
			[Address(RVA = "0xC60078", Offset = "0xC60078", VA = "0xC60078")]
			private bool BranchSequenceNode1854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600285F")]
			[Address(RVA = "0xC600D8", Offset = "0xC600D8", VA = "0xC600D8")]
			private bool ActionWaitNode724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002860")]
			[Address(RVA = "0xC60138", Offset = "0xC60138", VA = "0xC60138")]
			private bool ActionWaitNode725()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002861")]
			[Address(RVA = "0xC60198", Offset = "0xC60198", VA = "0xC60198")]
			private bool ActionWaitNode726()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002862")]
			[Address(RVA = "0xC601F8", Offset = "0xC601F8", VA = "0xC601F8")]
			private bool ActionWaitNode727()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002863")]
			[Address(RVA = "0xC60258", Offset = "0xC60258", VA = "0xC60258")]
			private bool BranchSelectorNode816()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002864")]
			[Address(RVA = "0xC602AC", Offset = "0xC602AC", VA = "0xC602AC")]
			private bool BranchSequenceNode1065()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002865")]
			[Address(RVA = "0xC60320", Offset = "0xC60320", VA = "0xC60320")]
			private bool BranchSequenceNode1072()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002866")]
			[Address(RVA = "0xC603C8", Offset = "0xC603C8", VA = "0xC603C8")]
			private bool ActionWaitNode935()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002867")]
			[Address(RVA = "0xC60428", Offset = "0xC60428", VA = "0xC60428")]
			private bool BranchSelectorNode1649()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002868")]
			[Address(RVA = "0xC604DC", Offset = "0xC604DC", VA = "0xC604DC")]
			private bool BranchSequenceNode1672()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002869")]
			[Address(RVA = "0xC60588", Offset = "0xC60588", VA = "0xC60588")]
			private bool BranchSelectorNode1671()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286A")]
			[Address(RVA = "0xC60608", Offset = "0xC60608", VA = "0xC60608")]
			private bool BranchSelectorNode857()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286B")]
			[Address(RVA = "0xC6063C", Offset = "0xC6063C", VA = "0xC6063C")]
			private bool BranchSequenceNode1764()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286C")]
			[Address(RVA = "0xC606CC", Offset = "0xC606CC", VA = "0xC606CC")]
			private bool ActionDisengage1759()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286D")]
			[Address(RVA = "0xC6072C", Offset = "0xC6072C", VA = "0xC6072C")]
			private bool ActionWaitNode1761()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286E")]
			[Address(RVA = "0xC6078C", Offset = "0xC6078C", VA = "0xC6078C")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600286F")]
			[Address(RVA = "0xC6085C", Offset = "0xC6085C", VA = "0xC6085C")]
			private bool BranchSequenceNode575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002870")]
			[Address(RVA = "0xC608BC", Offset = "0xC608BC", VA = "0xC608BC")]
			private bool BranchSequenceNode706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002871")]
			[Address(RVA = "0xC6091C", Offset = "0xC6091C", VA = "0xC6091C")]
			private bool BranchSequenceNode1191()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002872")]
			[Address(RVA = "0xC60988", Offset = "0xC60988", VA = "0xC60988")]
			private bool BranchSequenceNode1193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002873")]
			[Address(RVA = "0xC60A64", Offset = "0xC60A64", VA = "0xC60A64")]
			private bool BranchSequenceNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002874")]
			[Address(RVA = "0xC60BB0", Offset = "0xC60BB0", VA = "0xC60BB0")]
			private bool BranchSequenceNode1813()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002875")]
			[Address(RVA = "0xC60C38", Offset = "0xC60C38", VA = "0xC60C38")]
			private bool BranchSequenceNode1823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002876")]
			[Address(RVA = "0xC60CC0", Offset = "0xC60CC0", VA = "0xC60CC0")]
			private bool BranchSequenceNode1833()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002877")]
			[Address(RVA = "0xC60D48", Offset = "0xC60D48", VA = "0xC60D48")]
			private bool BranchSelectorNode1636()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002878")]
			[Address(RVA = "0xC60DF4", Offset = "0xC60DF4", VA = "0xC60DF4")]
			private bool BranchSequenceNode1836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002879")]
			[Address(RVA = "0xC60F40", Offset = "0xC60F40", VA = "0xC60F40")]
			private bool BranchSequenceNode1775()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287A")]
			[Address(RVA = "0xC61014", Offset = "0xC61014", VA = "0xC61014")]
			private bool BranchSequenceNode1846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287B")]
			[Address(RVA = "0xC6112C", Offset = "0xC6112C", VA = "0xC6112C")]
			private bool BranchSequenceNode1883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287C")]
			[Address(RVA = "0xC61278", Offset = "0xC61278", VA = "0xC61278")]
			private bool BranchSelectorNode1375()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287D")]
			[Address(RVA = "0xC612B8", Offset = "0xC612B8", VA = "0xC612B8")]
			private bool ListenGlobalEventNode1797()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287E")]
			[Address(RVA = "0xC61318", Offset = "0xC61318", VA = "0xC61318")]
			private bool ListenGlobalEventNode1799()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600287F")]
			[Address(RVA = "0xC61378", Offset = "0xC61378", VA = "0xC61378")]
			private bool ListenGlobalEventNode1801()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002880")]
			[Address(RVA = "0xC613D8", Offset = "0xC613D8", VA = "0xC613D8")]
			private bool ListenGlobalEventNode1803()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002881")]
			[Address(RVA = "0xC61438", Offset = "0xC61438", VA = "0xC61438")]
			private bool ListenGlobalEventNode1805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002882")]
			[Address(RVA = "0xC61498", Offset = "0xC61498", VA = "0xC61498")]
			private bool ActionWaitNode1745()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002883")]
			[Address(RVA = "0xC614F8", Offset = "0xC614F8", VA = "0xC614F8")]
			private bool ActionWaitNode1746()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002884")]
			[Address(RVA = "0xC61558", Offset = "0xC61558", VA = "0xC61558")]
			private bool ActionWaitNode1747()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002885")]
			[Address(RVA = "0xC615B8", Offset = "0xC615B8", VA = "0xC615B8")]
			private bool ActionWaitNode1748()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002886")]
			[Address(RVA = "0xC61618", Offset = "0xC61618", VA = "0xC61618")]
			private bool ActionWaitNode1749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002887")]
			[Address(RVA = "0xC61678", Offset = "0xC61678", VA = "0xC61678")]
			private bool ToggleTargetableNode1750()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002888")]
			[Address(RVA = "0xC61700", Offset = "0xC61700", VA = "0xC61700")]
			private bool BranchSequenceNode980()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002889")]
			[Address(RVA = "0xC61738", Offset = "0xC61738", VA = "0xC61738")]
			private bool BranchSelectorNode1945()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288A")]
			[Address(RVA = "0xC619CC", Offset = "0xC619CC", VA = "0xC619CC")]
			private bool BranchRandomNode1856()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288B")]
			[Address(RVA = "0xC61B9C", Offset = "0xC61B9C", VA = "0xC61B9C")]
			private bool BranchSequenceNode1857()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288C")]
			[Address(RVA = "0xC61C08", Offset = "0xC61C08", VA = "0xC61C08")]
			private bool ActionWaitNode1858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288D")]
			[Address(RVA = "0xC61C68", Offset = "0xC61C68", VA = "0xC61C68")]
			private bool BranchSequenceNode1860()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288E")]
			[Address(RVA = "0xC61D10", Offset = "0xC61D10", VA = "0xC61D10")]
			private bool BranchSequenceNode1062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600288F")]
			[Address(RVA = "0xC61DF0", Offset = "0xC61DF0", VA = "0xC61DF0")]
			private bool BranchSelectorNode1673()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002890")]
			[Address(RVA = "0xC61EA4", Offset = "0xC61EA4", VA = "0xC61EA4")]
			private bool BranchSequenceNode1674()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002891")]
			[Address(RVA = "0xC61F18", Offset = "0xC61F18", VA = "0xC61F18")]
			private bool BranchSelectorNode1766()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002892")]
			[Address(RVA = "0xC61F98", Offset = "0xC61F98", VA = "0xC61F98")]
			private bool BranchSequenceNode1873()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002893")]
			[Address(RVA = "0xC620E4", Offset = "0xC620E4", VA = "0xC620E4")]
			private bool BranchSequenceNode633()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002894")]
			[Address(RVA = "0xC6213C", Offset = "0xC6213C", VA = "0xC6213C")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002895")]
			[Address(RVA = "0xC621D0", Offset = "0xC621D0", VA = "0xC621D0")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002896")]
			[Address(RVA = "0xC62298", Offset = "0xC62298", VA = "0xC62298")]
			private bool RangeCompareNode577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002897")]
			[Address(RVA = "0xC623D0", Offset = "0xC623D0", VA = "0xC623D0")]
			private bool BranchSelectorNode888()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002898")]
			[Address(RVA = "0xC62420", Offset = "0xC62420", VA = "0xC62420")]
			private bool RangeCompareNode578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002899")]
			[Address(RVA = "0xC62558", Offset = "0xC62558", VA = "0xC62558")]
			private bool BranchSelectorNode905()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289A")]
			[Address(RVA = "0xC625A8", Offset = "0xC625A8", VA = "0xC625A8")]
			private bool RangeCompareNode1200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289B")]
			[Address(RVA = "0xC626E0", Offset = "0xC626E0", VA = "0xC626E0")]
			private bool BranchSequenceNode1843()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289C")]
			[Address(RVA = "0xC62768", Offset = "0xC62768", VA = "0xC62768")]
			private bool BranchSequenceNode1890()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289D")]
			[Address(RVA = "0xC627F0", Offset = "0xC627F0", VA = "0xC627F0")]
			private bool BranchSequenceNode1376()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289E")]
			[Address(RVA = "0xC628C4", Offset = "0xC628C4", VA = "0xC628C4")]
			private bool BranchSequenceNode1377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600289F")]
			[Address(RVA = "0xC62978", Offset = "0xC62978", VA = "0xC62978")]
			private bool BranchSequenceNode1946()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A0")]
			[Address(RVA = "0xC62A18", Offset = "0xC62A18", VA = "0xC62A18")]
			private bool BranchSequenceNode1947()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A1")]
			[Address(RVA = "0xC62ABC", Offset = "0xC62ABC", VA = "0xC62ABC")]
			private bool BranchSequenceNode1948()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A2")]
			[Address(RVA = "0xC62B60", Offset = "0xC62B60", VA = "0xC62B60")]
			private bool BranchSequenceNode1949()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A3")]
			[Address(RVA = "0xC62C04", Offset = "0xC62C04", VA = "0xC62C04")]
			private bool BranchSequenceNode1950()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A4")]
			[Address(RVA = "0xC62CA8", Offset = "0xC62CA8", VA = "0xC62CA8")]
			private bool ActionWaitNode1861()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A5")]
			[Address(RVA = "0xC62D08", Offset = "0xC62D08", VA = "0xC62D08")]
			private bool ActionWaitNode1862()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A6")]
			[Address(RVA = "0xC62D68", Offset = "0xC62D68", VA = "0xC62D68")]
			private bool ActionWaitNode1863()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A7")]
			[Address(RVA = "0xC62DC8", Offset = "0xC62DC8", VA = "0xC62DC8")]
			private bool ActionWaitNode1864()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A8")]
			[Address(RVA = "0xC62E28", Offset = "0xC62E28", VA = "0xC62E28")]
			private bool ActionWaitNode1865()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028A9")]
			[Address(RVA = "0xC62E88", Offset = "0xC62E88", VA = "0xC62E88")]
			private bool ToggleTargetableNode1866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AA")]
			[Address(RVA = "0xC62F10", Offset = "0xC62F10", VA = "0xC62F10")]
			private bool BranchSequenceNode1679()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AB")]
			[Address(RVA = "0xC62F80", Offset = "0xC62F80", VA = "0xC62F80")]
			private bool BranchSequenceNode1894()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AC")]
			[Address(RVA = "0xC6303C", Offset = "0xC6303C", VA = "0xC6303C")]
			private bool BranchSequenceNode1903()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AD")]
			[Address(RVA = "0xC63058", Offset = "0xC63058", VA = "0xC63058")]
			private bool BranchSequenceNode1880()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AE")]
			[Address(RVA = "0xC630E0", Offset = "0xC630E0", VA = "0xC630E0")]
			private bool BranchSequenceNode634()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028AF")]
			[Address(RVA = "0xC63340", Offset = "0xC63340", VA = "0xC63340")]
			private bool BranchSelectorNode677()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B0")]
			[Address(RVA = "0xC633F8", Offset = "0xC633F8", VA = "0xC633F8")]
			private bool BranchSequenceNode665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B1")]
			[Address(RVA = "0xC634AC", Offset = "0xC634AC", VA = "0xC634AC")]
			private bool BranchSequenceNode743()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B2")]
			[Address(RVA = "0xC634B4", Offset = "0xC634B4", VA = "0xC634B4")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B3")]
			[Address(RVA = "0xC63518", Offset = "0xC63518", VA = "0xC63518")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B4")]
			[Address(RVA = "0xC63568", Offset = "0xC63568", VA = "0xC63568")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B5")]
			[Address(RVA = "0xC635EC", Offset = "0xC635EC", VA = "0xC635EC")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B6")]
			[Address(RVA = "0xC63650", Offset = "0xC63650", VA = "0xC63650")]
			private bool BranchSequenceNode883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B7")]
			[Address(RVA = "0xC63734", Offset = "0xC63734", VA = "0xC63734")]
			private bool BranchSequenceNode1933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B8")]
			[Address(RVA = "0xC637EC", Offset = "0xC637EC", VA = "0xC637EC")]
			private bool BranchSequenceNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028B9")]
			[Address(RVA = "0xC638C4", Offset = "0xC638C4", VA = "0xC638C4")]
			private bool BranchSequenceNode900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BA")]
			[Address(RVA = "0xC639A8", Offset = "0xC639A8", VA = "0xC639A8")]
			private bool BranchSequenceNode1939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BB")]
			[Address(RVA = "0xC63A60", Offset = "0xC63A60", VA = "0xC63A60")]
			private bool BranchSequenceNode909()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BC")]
			[Address(RVA = "0xC63B38", Offset = "0xC63B38", VA = "0xC63B38")]
			private bool ListenGlobalEventNode1952()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BD")]
			[Address(RVA = "0xC63B98", Offset = "0xC63B98", VA = "0xC63B98")]
			private bool ListenGlobalEventNode1954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BE")]
			[Address(RVA = "0xC63BF8", Offset = "0xC63BF8", VA = "0xC63BF8")]
			private bool ListenGlobalEventNode1956()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028BF")]
			[Address(RVA = "0xC63C58", Offset = "0xC63C58", VA = "0xC63C58")]
			private bool ListenGlobalEventNode1958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C0")]
			[Address(RVA = "0xC63CB8", Offset = "0xC63CB8", VA = "0xC63CB8")]
			private bool ListenGlobalEventNode1960()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C1")]
			[Address(RVA = "0xC63D18", Offset = "0xC63D18", VA = "0xC63D18")]
			private bool BranchSequenceNode1924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C2")]
			[Address(RVA = "0xC63DD4", Offset = "0xC63DD4", VA = "0xC63DD4")]
			private bool BranchSequenceNode1898()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C3")]
			[Address(RVA = "0xC63EA8", Offset = "0xC63EA8", VA = "0xC63EA8")]
			private bool BranchSequenceNode1905()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C4")]
			[Address(RVA = "0xC63F54", Offset = "0xC63F54", VA = "0xC63F54")]
			private bool BranchSequenceNode649()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C5")]
			[Address(RVA = "0xC63FD0", Offset = "0xC63FD0", VA = "0xC63FD0")]
			private bool BranchSequenceNode678()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C6")]
			[Address(RVA = "0xC64030", Offset = "0xC64030", VA = "0xC64030")]
			private bool BranchSequenceNode664()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C7")]
			[Address(RVA = "0xC640B8", Offset = "0xC640B8", VA = "0xC640B8")]
			private bool BranchSequenceNode644()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C8")]
			[Address(RVA = "0xC64224", Offset = "0xC64224", VA = "0xC64224")]
			private bool BranchSelectorNode1043()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028C9")]
			[Address(RVA = "0xC642EC", Offset = "0xC642EC", VA = "0xC642EC")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CA")]
			[Address(RVA = "0xC642F4", Offset = "0xC642F4", VA = "0xC642F4")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CB")]
			[Address(RVA = "0xC64344", Offset = "0xC64344", VA = "0xC64344")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CC")]
			[Address(RVA = "0xC64480", Offset = "0xC64480", VA = "0xC64480")]
			private bool BranchSelectorNode825()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CD")]
			[Address(RVA = "0xC644D4", Offset = "0xC644D4", VA = "0xC644D4")]
			private bool BranchSelectorNode897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CE")]
			[Address(RVA = "0xC6457C", Offset = "0xC6457C", VA = "0xC6457C")]
			private bool BranchSelectorNode913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028CF")]
			[Address(RVA = "0xC64624", Offset = "0xC64624", VA = "0xC64624")]
			private bool BranchSequenceNode1928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D0")]
			[Address(RVA = "0xC646F8", Offset = "0xC646F8", VA = "0xC646F8")]
			private bool BranchSequenceNode1906()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D1")]
			[Address(RVA = "0xC6478C", Offset = "0xC6478C", VA = "0xC6478C")]
			private bool BranchSequenceNode1915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D2")]
			[Address(RVA = "0xC64828", Offset = "0xC64828", VA = "0xC64828")]
			private bool BranchSequenceNode1962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D3")]
			[Address(RVA = "0xC648E4", Offset = "0xC648E4", VA = "0xC648E4")]
			private bool RangeCompareNode654()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D4")]
			[Address(RVA = "0xC64A1C", Offset = "0xC64A1C", VA = "0xC64A1C")]
			private bool BranchSelectorNode655()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D5")]
			[Address(RVA = "0xC64A7C", Offset = "0xC64A7C", VA = "0xC64A7C")]
			private bool RangeCompareNode679()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D6")]
			[Address(RVA = "0xC64BB4", Offset = "0xC64BB4", VA = "0xC64BB4")]
			private bool RangeCompareNode683()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D7")]
			[Address(RVA = "0xC64CEC", Offset = "0xC64CEC", VA = "0xC64CEC")]
			private bool BranchSequenceNode638()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D8")]
			[Address(RVA = "0xC64D68", Offset = "0xC64D68", VA = "0xC64D68")]
			private bool BranchSelectorNode730()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028D9")]
			[Address(RVA = "0xC64E20", Offset = "0xC64E20", VA = "0xC64E20")]
			private bool BranchSequenceNode1044()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DA")]
			[Address(RVA = "0xC64EB8", Offset = "0xC64EB8", VA = "0xC64EB8")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DB")]
			[Address(RVA = "0xC64EF8", Offset = "0xC64EF8", VA = "0xC64EF8")]
			private bool BranchSequenceNode580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DC")]
			[Address(RVA = "0xC64FDC", Offset = "0xC64FDC", VA = "0xC64FDC")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DD")]
			[Address(RVA = "0xC6517C", Offset = "0xC6517C", VA = "0xC6517C")]
			private bool BranchSequenceNode823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DE")]
			[Address(RVA = "0xC65288", Offset = "0xC65288", VA = "0xC65288")]
			private bool BranchSequenceNode894()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028DF")]
			[Address(RVA = "0xC65310", Offset = "0xC65310", VA = "0xC65310")]
			private bool BranchSequenceNode911()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E0")]
			[Address(RVA = "0xC65398", Offset = "0xC65398", VA = "0xC65398")]
			private bool BranchSelectorNode1916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E1")]
			[Address(RVA = "0xC65444", Offset = "0xC65444", VA = "0xC65444")]
			private bool BranchSequenceNode1976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E2")]
			[Address(RVA = "0xC65590", Offset = "0xC65590", VA = "0xC65590")]
			private bool BranchSequenceNode1966()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E3")]
			[Address(RVA = "0xC65664", Offset = "0xC65664", VA = "0xC65664")]
			private bool BranchSequenceNode656()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E4")]
			[Address(RVA = "0xC656C4", Offset = "0xC656C4", VA = "0xC656C4")]
			private bool BranchSequenceNode663()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E5")]
			[Address(RVA = "0xC65784", Offset = "0xC65784", VA = "0xC65784")]
			private bool BranchSequenceNode731()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E6")]
			[Address(RVA = "0xC65800", Offset = "0xC65800", VA = "0xC65800")]
			private bool BranchRandomNode640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E7")]
			[Address(RVA = "0xC65860", Offset = "0xC65860", VA = "0xC65860")]
			private bool RangeCompareNode1042()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E8")]
			[Address(RVA = "0xC65998", Offset = "0xC65998", VA = "0xC65998")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028E9")]
			[Address(RVA = "0xC65A88", Offset = "0xC65A88", VA = "0xC65A88")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028EA")]
			[Address(RVA = "0xC65B30", Offset = "0xC65B30", VA = "0xC65B30")]
			private bool BranchSelectorNode859()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028EB")]
			[Address(RVA = "0xC65BA4", Offset = "0xC65BA4", VA = "0xC65BA4")]
			private bool RangeCompareNode824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028EC")]
			[Address(RVA = "0xC65CDC", Offset = "0xC65CDC", VA = "0xC65CDC")]
			private bool BranchSequenceNode1983()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028ED")]
			[Address(RVA = "0xC65D64", Offset = "0xC65D64", VA = "0xC65D64")]
			private bool ActionDisengage651()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028EE")]
			[Address(RVA = "0xC65DC4", Offset = "0xC65DC4", VA = "0xC65DC4")]
			private bool ActionWaitNode652()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028EF")]
			[Address(RVA = "0xC65E24", Offset = "0xC65E24", VA = "0xC65E24")]
			private bool BranchSequenceNode1073()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F0")]
			[Address(RVA = "0xC65EA0", Offset = "0xC65EA0", VA = "0xC65EA0")]
			private bool StartAttackNode659()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F1")]
			[Address(RVA = "0xC65F00", Offset = "0xC65F00", VA = "0xC65F00")]
			private bool BranchSequenceNode1074()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F2")]
			[Address(RVA = "0xC65F7C", Offset = "0xC65F7C", VA = "0xC65F7C")]
			private bool RangeCompareNode670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F3")]
			[Address(RVA = "0xC660B4", Offset = "0xC660B4", VA = "0xC660B4")]
			private bool BranchRandomNode732()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F4")]
			[Address(RVA = "0xC66114", Offset = "0xC66114", VA = "0xC66114")]
			private bool StartAttackNode641()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F5")]
			[Address(RVA = "0xC66174", Offset = "0xC66174", VA = "0xC66174")]
			private bool StartAttackNode642()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F6")]
			[Address(RVA = "0xC661D4", Offset = "0xC661D4", VA = "0xC661D4")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F7")]
			[Address(RVA = "0xC66244", Offset = "0xC66244", VA = "0xC66244")]
			private bool BranchSelectorNode612()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F8")]
			[Address(RVA = "0xC6628C", Offset = "0xC6628C", VA = "0xC6628C")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028F9")]
			[Address(RVA = "0xC66374", Offset = "0xC66374", VA = "0xC66374")]
			private bool BranchSequenceNode860()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FA")]
			[Address(RVA = "0xC663D8", Offset = "0xC663D8", VA = "0xC663D8")]
			private bool BranchSequenceNode1971()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FB")]
			[Address(RVA = "0xC66464", Offset = "0xC66464", VA = "0xC66464")]
			private bool StartAttackNode733()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FC")]
			[Address(RVA = "0xC664C4", Offset = "0xC664C4", VA = "0xC664C4")]
			private bool StartAttackNode734()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FD")]
			[Address(RVA = "0xC66524", Offset = "0xC66524", VA = "0xC66524")]
			private bool BranchSequenceNode614()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FE")]
			[Address(RVA = "0xC66564", Offset = "0xC66564", VA = "0xC66564")]
			private bool BranchSelectorNode845()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60028FF")]
			[Address(RVA = "0xC66640", Offset = "0xC66640", VA = "0xC66640")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002900")]
			[Address(RVA = "0xC666C4", Offset = "0xC666C4", VA = "0xC666C4")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002901")]
			[Address(RVA = "0xC66778", Offset = "0xC66778", VA = "0xC66778")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002902")]
			[Address(RVA = "0xC667FC", Offset = "0xC667FC", VA = "0xC667FC")]
			private bool BranchSequenceNode1986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002903")]
			[Address(RVA = "0xC668B4", Offset = "0xC668B4", VA = "0xC668B4")]
			private bool BranchSequenceNode1059()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002904")]
			[Address(RVA = "0xC66968", Offset = "0xC66968", VA = "0xC66968")]
			private bool BranchSelectorNode826()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002905")]
			[Address(RVA = "0xC66A44", Offset = "0xC66A44", VA = "0xC66A44")]
			private bool BranchSequenceNode846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002906")]
			[Address(RVA = "0xC66AE4", Offset = "0xC66AE4", VA = "0xC66AE4")]
			private bool BranchRandomNode850()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002907")]
			[Address(RVA = "0xC66B44", Offset = "0xC66B44", VA = "0xC66B44")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002908")]
			[Address(RVA = "0xC66BBC", Offset = "0xC66BBC", VA = "0xC66BBC")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002909")]
			[Address(RVA = "0xC66C80", Offset = "0xC66C80", VA = "0xC66C80")]
			private bool BranchSequenceNode827()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290A")]
			[Address(RVA = "0xC66D20", Offset = "0xC66D20", VA = "0xC66D20")]
			private bool BranchRandomNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290B")]
			[Address(RVA = "0xC66D80", Offset = "0xC66D80", VA = "0xC66D80")]
			private bool BranchRandomNode616()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290C")]
			[Address(RVA = "0xC66DE0", Offset = "0xC66DE0", VA = "0xC66DE0")]
			private bool StartAttackNode848()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290D")]
			[Address(RVA = "0xC66E40", Offset = "0xC66E40", VA = "0xC66E40")]
			private bool StartAttackNode849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290E")]
			[Address(RVA = "0xC66EA0", Offset = "0xC66EA0", VA = "0xC66EA0")]
			private bool StartAttackNode851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600290F")]
			[Address(RVA = "0xC66F00", Offset = "0xC66F00", VA = "0xC66F00")]
			private bool StartAttackNode852()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002910")]
			[Address(RVA = "0xC66F60", Offset = "0xC66F60", VA = "0xC66F60")]
			private bool StartAttackNode853()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002911")]
			[Address(RVA = "0xC66FC0", Offset = "0xC66FC0", VA = "0xC66FC0")]
			private bool StartAttackNode854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002912")]
			[Address(RVA = "0xC67020", Offset = "0xC67020", VA = "0xC67020")]
			private bool StartAttackNode855()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002913")]
			[Address(RVA = "0xC67080", Offset = "0xC67080", VA = "0xC67080")]
			private bool StartAttackNode1018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002914")]
			[Address(RVA = "0xC670E0", Offset = "0xC670E0", VA = "0xC670E0")]
			private bool BranchRandomNode90()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002915")]
			[Address(RVA = "0xC67140", Offset = "0xC67140", VA = "0xC67140")]
			private bool BranchRandomNode1022()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002916")]
			[Address(RVA = "0xC671A0", Offset = "0xC671A0", VA = "0xC671A0")]
			private bool BranchRandomNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002917")]
			[Address(RVA = "0xC67200", Offset = "0xC67200", VA = "0xC67200")]
			private bool StartAttackNode618()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002918")]
			[Address(RVA = "0xC67260", Offset = "0xC67260", VA = "0xC67260")]
			private bool StartAttackNode619()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002919")]
			[Address(RVA = "0xC672C0", Offset = "0xC672C0", VA = "0xC672C0")]
			private bool StartAttackNode620()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291A")]
			[Address(RVA = "0xC67320", Offset = "0xC67320", VA = "0xC67320")]
			private bool StartAttackNode621()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291B")]
			[Address(RVA = "0xC67380", Offset = "0xC67380", VA = "0xC67380")]
			private bool StartAttackNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291C")]
			[Address(RVA = "0xC673E0", Offset = "0xC673E0", VA = "0xC673E0")]
			private bool StartAttackNode1014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291D")]
			[Address(RVA = "0xC67440", Offset = "0xC67440", VA = "0xC67440")]
			private bool StartAttackNode623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291E")]
			[Address(RVA = "0xC674A0", Offset = "0xC674A0", VA = "0xC674A0")]
			private bool StartAttackNode624()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600291F")]
			[Address(RVA = "0xC67500", Offset = "0xC67500", VA = "0xC67500")]
			private bool StartAttackNode625()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002920")]
			[Address(RVA = "0xC67560", Offset = "0xC67560", VA = "0xC67560")]
			private bool StartAttackNode626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002921")]
			[Address(RVA = "0xC675C0", Offset = "0xC675C0", VA = "0xC675C0")]
			private bool StartAttackNode627()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002922")]
			[Address(RVA = "0xC67620", Offset = "0xC67620", VA = "0xC67620")]
			private bool StartAttackNode628()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002923")]
			[Address(RVA = "0xC67680", Offset = "0xC67680", VA = "0xC67680")]
			private bool StartAttackNode629()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002924")]
			[Address(RVA = "0xC676E0", Offset = "0xC676E0", VA = "0xC676E0")]
			private bool StartAttackNode630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002925")]
			[Address(RVA = "0xC67740", Offset = "0xC67740", VA = "0xC67740")]
			private bool StartAttackNode631()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002926")]
			[Address(RVA = "0xC677A0", Offset = "0xC677A0", VA = "0xC677A0")]
			private bool StartAttackNode1015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002927")]
			[Address(RVA = "0xC67800", Offset = "0xC67800", VA = "0xC67800")]
			private bool StartAttackNode1016()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002928")]
			[Address(RVA = "0xC67860", Offset = "0xC67860", VA = "0xC67860")]
			private bool StartAttackNode1017()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002929")]
			[Address(RVA = "0xC678C0", Offset = "0xC678C0", VA = "0xC678C0")]
			private bool StartAttackNode829()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292A")]
			[Address(RVA = "0xC67920", Offset = "0xC67920", VA = "0xC67920")]
			private bool StartAttackNode830()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292B")]
			[Address(RVA = "0xC67980", Offset = "0xC67980", VA = "0xC67980")]
			private bool StartAttackNode831()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292C")]
			[Address(RVA = "0xC679E0", Offset = "0xC679E0", VA = "0xC679E0")]
			private bool StartAttackNode832()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292D")]
			[Address(RVA = "0xC67A40", Offset = "0xC67A40", VA = "0xC67A40")]
			private bool StartAttackNode834()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292E")]
			[Address(RVA = "0xC67AA0", Offset = "0xC67AA0", VA = "0xC67AA0")]
			private bool StartAttackNode1020()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600292F")]
			[Address(RVA = "0xC67B00", Offset = "0xC67B00", VA = "0xC67B00")]
			private bool StartAttackNode1019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002930")]
			[Address(RVA = "0xC67B60", Offset = "0xC67B60", VA = "0xC67B60")]
			private bool StartAttackNode842()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002931")]
			[Address(RVA = "0xC67BC0", Offset = "0xC67BC0", VA = "0xC67BC0")]
			private bool StartAttackNode1027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002932")]
			[Address(RVA = "0xC67C20", Offset = "0xC67C20", VA = "0xC67C20")]
			private bool StartAttackNode835()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002933")]
			[Address(RVA = "0xC67C80", Offset = "0xC67C80", VA = "0xC67C80")]
			private bool StartAttackNode836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002934")]
			[Address(RVA = "0xC67CE0", Offset = "0xC67CE0", VA = "0xC67CE0")]
			private bool StartAttackNode837()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002935")]
			[Address(RVA = "0xC67D40", Offset = "0xC67D40", VA = "0xC67D40")]
			private bool StartAttackNode1021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002936")]
			[Address(RVA = "0xC67DA0", Offset = "0xC67DA0", VA = "0xC67DA0")]
			private bool StartAttackNode838()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002937")]
			[Address(RVA = "0xC67E00", Offset = "0xC67E00", VA = "0xC67E00")]
			private bool StartAttackNode841()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002938")]
			[Address(RVA = "0xC67E60", Offset = "0xC67E60", VA = "0xC67E60")]
			private bool StartAttackNode1025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002939")]
			[Address(RVA = "0xC67EC0", Offset = "0xC67EC0", VA = "0xC67EC0")]
			private bool StartAttackNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600293A")]
			[Address(RVA = "0xC67F20", Offset = "0xC67F20", VA = "0xC67F20")]
			private bool StartAttackNode1028()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IntVariable DifficultyLevel;

		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IntVariable DifficultyLevel_Medium;

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xC53E30", Offset = "0xC53E30", VA = "0xC53E30")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xC53F70", Offset = "0xC53F70", VA = "0xC53F70", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xC54078", Offset = "0xC54078", VA = "0xC54078")]
		public KnightCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x2000405")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8AC0", Offset = "0x8A8AC0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8AC0", Offset = "0x8A8AC0")]
	public class SpellswordCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005B5")]
		public class SpellswordCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000608")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly SpellswordCombatantBehavior_hybrid _source;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x600293B")]
			[Address(RVA = "0xAA77A0", Offset = "0xAA77A0", VA = "0xAA77A0")]
			public SpellswordCombatantBehavior_hybridRuntime(SpellswordCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x600293C")]
			[Address(RVA = "0xAA82B8", Offset = "0xAA82B8", VA = "0xAA82B8", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0xAA7800", Offset = "0xAA7800", VA = "0xAA7800")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x600293E")]
			[Address(RVA = "0xAA82E8", Offset = "0xAA82E8", VA = "0xAA82E8", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600293F")]
			[Address(RVA = "0xAA8348", Offset = "0xAA8348", VA = "0xAA8348")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002940")]
			[Address(RVA = "0xAA83F8", Offset = "0xAA83F8", VA = "0xAA83F8")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002941")]
			[Address(RVA = "0xAA84F8", Offset = "0xAA84F8", VA = "0xAA84F8")]
			private bool BranchSequenceNode1132()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002942")]
			[Address(RVA = "0xAA86C4", Offset = "0xAA86C4", VA = "0xAA86C4")]
			private bool BranchSequenceNode1112()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002943")]
			[Address(RVA = "0xAA8728", Offset = "0xAA8728", VA = "0xAA8728")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002944")]
			[Address(RVA = "0xAA87E4", Offset = "0xAA87E4", VA = "0xAA87E4")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002945")]
			[Address(RVA = "0xAA8824", Offset = "0xAA8824", VA = "0xAA8824")]
			private bool BranchSelectorNode1216()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002946")]
			[Address(RVA = "0xAA88F0", Offset = "0xAA88F0", VA = "0xAA88F0")]
			private bool BranchRandomNode1172()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002947")]
			[Address(RVA = "0xAA8998", Offset = "0xAA8998", VA = "0xAA8998")]
			private bool BranchSequenceNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002948")]
			[Address(RVA = "0xAA8A60", Offset = "0xAA8A60", VA = "0xAA8A60")]
			private bool BranchSelectorNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002949")]
			[Address(RVA = "0xAA8AA0", Offset = "0xAA8AA0", VA = "0xAA8AA0")]
			private bool BranchSelectorNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294A")]
			[Address(RVA = "0xAA8AE0", Offset = "0xAA8AE0", VA = "0xAA8AE0")]
			private bool BranchSequenceNode1376()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294B")]
			[Address(RVA = "0xAA8CD8", Offset = "0xAA8CD8", VA = "0xAA8CD8")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294C")]
			[Address(RVA = "0xAA8DEC", Offset = "0xAA8DEC", VA = "0xAA8DEC")]
			private bool BranchSelectorNode667()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294D")]
			[Address(RVA = "0xAA8EA4", Offset = "0xAA8EA4", VA = "0xAA8EA4")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294E")]
			[Address(RVA = "0xAA9068", Offset = "0xAA9068", VA = "0xAA9068")]
			private bool BranchSelectorNode596()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600294F")]
			[Address(RVA = "0xAA90A8", Offset = "0xAA90A8", VA = "0xAA90A8")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002950")]
			[Address(RVA = "0xAA90B0", Offset = "0xAA90B0", VA = "0xAA90B0")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002951")]
			[Address(RVA = "0xAA9178", Offset = "0xAA9178", VA = "0xAA9178")]
			private bool BranchSelectorNode1220()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002952")]
			[Address(RVA = "0xAA9230", Offset = "0xAA9230", VA = "0xAA9230")]
			private bool BranchSelectorNode1221()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002953")]
			[Address(RVA = "0xAA92D0", Offset = "0xAA92D0", VA = "0xAA92D0")]
			private bool BranchSelectorNode1222()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002954")]
			[Address(RVA = "0xAA93A0", Offset = "0xAA93A0", VA = "0xAA93A0")]
			private bool ToggleTargetableNode1214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002955")]
			[Address(RVA = "0xAA9424", Offset = "0xAA9424", VA = "0xAA9424")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002956")]
			[Address(RVA = "0xAA956C", Offset = "0xAA956C", VA = "0xAA956C")]
			private bool BranchSequenceNode617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002957")]
			[Address(RVA = "0xAA9624", Offset = "0xAA9624", VA = "0xAA9624")]
			private bool BranchSequenceNode1554()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002958")]
			[Address(RVA = "0xAA97A0", Offset = "0xAA97A0", VA = "0xAA97A0")]
			private bool BranchSequenceNode1348()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002959")]
			[Address(RVA = "0xAA985C", Offset = "0xAA985C", VA = "0xAA985C")]
			private bool BranchSequenceNode1349()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295A")]
			[Address(RVA = "0xAA9918", Offset = "0xAA9918", VA = "0xAA9918")]
			private bool BranchSequenceNode1377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295B")]
			[Address(RVA = "0xAA9978", Offset = "0xAA9978", VA = "0xAA9978")]
			private bool BranchSequenceNode1385()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295C")]
			[Address(RVA = "0xAA99F8", Offset = "0xAA99F8", VA = "0xAA99F8")]
			private bool BranchSequenceNode1386()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295D")]
			[Address(RVA = "0xAA9A9C", Offset = "0xAA9A9C", VA = "0xAA9A9C")]
			private bool BranchSequenceNode1380()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295E")]
			[Address(RVA = "0xAA9AEC", Offset = "0xAA9AEC", VA = "0xAA9AEC")]
			private bool BranchSequenceNode1389()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600295F")]
			[Address(RVA = "0xAA9B8C", Offset = "0xAA9B8C", VA = "0xAA9B8C")]
			private bool BranchSequenceNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002960")]
			[Address(RVA = "0xAA9BC0", Offset = "0xAA9BC0", VA = "0xAA9BC0")]
			private bool BranchSequenceNode1527()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002961")]
			[Address(RVA = "0xAA9C7C", Offset = "0xAA9C7C", VA = "0xAA9C7C")]
			private bool BranchSequenceNode1536()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002962")]
			[Address(RVA = "0xAA9DC8", Offset = "0xAA9DC8", VA = "0xAA9DC8")]
			private bool BranchSequenceNode665()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002963")]
			[Address(RVA = "0xAA9E44", Offset = "0xAA9E44", VA = "0xAA9E44")]
			private bool ToggleHeadLookIK670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002964")]
			[Address(RVA = "0xAA9EA4", Offset = "0xAA9EA4", VA = "0xAA9EA4")]
			private bool BranchSequenceNode1516()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002965")]
			[Address(RVA = "0xAA9FF0", Offset = "0xAA9FF0", VA = "0xAA9FF0")]
			private bool BranchSelectorNode1175()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002966")]
			[Address(RVA = "0xAAA088", Offset = "0xAAA088", VA = "0xAAA088")]
			private bool BranchSelectorNode1573()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002967")]
			[Address(RVA = "0xAAA1A4", Offset = "0xAAA1A4", VA = "0xAAA1A4")]
			private bool BranchSequenceNode729()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002968")]
			[Address(RVA = "0xAAA2A4", Offset = "0xAAA2A4", VA = "0xAAA2A4")]
			private bool BranchSequenceNode792()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002969")]
			[Address(RVA = "0xAAA3DC", Offset = "0xAAA3DC", VA = "0xAAA3DC")]
			private bool BranchSequenceNode1546()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296A")]
			[Address(RVA = "0xAAA4F8", Offset = "0xAAA4F8", VA = "0xAAA4F8")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296B")]
			[Address(RVA = "0xAAA584", Offset = "0xAAA584", VA = "0xAAA584")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296C")]
			[Address(RVA = "0xAAA5E4", Offset = "0xAAA5E4", VA = "0xAAA5E4")]
			private bool BranchSequenceNode1223()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296D")]
			[Address(RVA = "0xAAA690", Offset = "0xAAA690", VA = "0xAAA690")]
			private bool BranchSequenceNode1224()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296E")]
			[Address(RVA = "0xAAA748", Offset = "0xAAA748", VA = "0xAAA748")]
			private bool BranchSequenceNode1225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600296F")]
			[Address(RVA = "0xAAA7D0", Offset = "0xAAA7D0", VA = "0xAAA7D0")]
			private bool BranchSequenceNode1227()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002970")]
			[Address(RVA = "0xAAA834", Offset = "0xAAA834", VA = "0xAAA834")]
			private bool BranchSequenceNode1228()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002971")]
			[Address(RVA = "0xAAA8B4", Offset = "0xAAA8B4", VA = "0xAAA8B4")]
			private bool BranchSequenceNode1229()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002972")]
			[Address(RVA = "0xAAA9F8", Offset = "0xAAA9F8", VA = "0xAAA9F8")]
			private bool BranchSequenceNode1230()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002973")]
			[Address(RVA = "0xAAAADC", Offset = "0xAAAADC", VA = "0xAAAADC")]
			private bool BranchSelectorNode640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002974")]
			[Address(RVA = "0xAAAB54", Offset = "0xAAAB54", VA = "0xAAAB54")]
			private bool BranchSequenceNode1650()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002975")]
			[Address(RVA = "0xAAAB70", Offset = "0xAAAB70", VA = "0xAAAB70")]
			private bool BranchSequenceNode1042()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002976")]
			[Address(RVA = "0xAAAC64", Offset = "0xAAAC64", VA = "0xAAAC64")]
			private bool BranchSequenceNode1670()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002977")]
			[Address(RVA = "0xAAAC80", Offset = "0xAAAC80", VA = "0xAAAC80")]
			private bool BranchSequenceNode1563()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002978")]
			[Address(RVA = "0xAAADCC", Offset = "0xAAADCC", VA = "0xAAADCC")]
			private bool BranchSequenceNode1358()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002979")]
			[Address(RVA = "0xAAAE58", Offset = "0xAAAE58", VA = "0xAAAE58")]
			private bool BranchSequenceNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297A")]
			[Address(RVA = "0xAAAF2C", Offset = "0xAAAF2C", VA = "0xAAAF2C")]
			private bool BranchSequenceNode1393()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297B")]
			[Address(RVA = "0xAAAF8C", Offset = "0xAAAF8C", VA = "0xAAAF8C")]
			private bool BranchSequenceNode1409()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297C")]
			[Address(RVA = "0xAAAFDC", Offset = "0xAAAFDC", VA = "0xAAAFDC")]
			private bool BranchSequenceNode1396()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297D")]
			[Address(RVA = "0xAAB01C", Offset = "0xAAB01C", VA = "0xAAB01C")]
			private bool BranchSequenceNode1412()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297E")]
			[Address(RVA = "0xAAB098", Offset = "0xAAB098", VA = "0xAAB098")]
			private bool BranchSequenceNode1690()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600297F")]
			[Address(RVA = "0xAAB17C", Offset = "0xAAB17C", VA = "0xAAB17C")]
			private bool BranchSequenceNode1399()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002980")]
			[Address(RVA = "0xAAB1B0", Offset = "0xAAB1B0", VA = "0xAAB1B0")]
			private bool BranchSequenceNode1400()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002981")]
			[Address(RVA = "0xAAB200", Offset = "0xAAB200", VA = "0xAAB200")]
			private bool ActionWaitNode1417()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002982")]
			[Address(RVA = "0xAAB260", Offset = "0xAAB260", VA = "0xAAB260")]
			private bool BranchSequenceNode1720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002983")]
			[Address(RVA = "0xAAB378", Offset = "0xAAB378", VA = "0xAAB378")]
			private bool BranchSequenceNode1727()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002984")]
			[Address(RVA = "0xAAB534", Offset = "0xAAB534", VA = "0xAAB534")]
			private bool BranchSequenceNode1404()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002985")]
			[Address(RVA = "0xAAB64C", Offset = "0xAAB64C", VA = "0xAAB64C")]
			private bool BranchSequenceNode1531()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002986")]
			[Address(RVA = "0xAAB720", Offset = "0xAAB720", VA = "0xAAB720")]
			private bool BranchSequenceNode1543()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002987")]
			[Address(RVA = "0xAAB7A8", Offset = "0xAAB7A8", VA = "0xAAB7A8")]
			private bool BranchSelectorNode662()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002988")]
			[Address(RVA = "0xAAB900", Offset = "0xAAB900", VA = "0xAAB900")]
			private bool ToggleHeadLookIK668()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002989")]
			[Address(RVA = "0xAAB960", Offset = "0xAAB960", VA = "0xAAB960")]
			private bool BranchSequenceNode1523()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298A")]
			[Address(RVA = "0xAAB9E8", Offset = "0xAAB9E8", VA = "0xAAB9E8")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298B")]
			[Address(RVA = "0xAABA64", Offset = "0xAABA64", VA = "0xAABA64")]
			private bool BranchSelectorNode1580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298C")]
			[Address(RVA = "0xAABAD0", Offset = "0xAABAD0", VA = "0xAABAD0")]
			private bool BranchSelectorNode1581()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298D")]
			[Address(RVA = "0xAABB3C", Offset = "0xAABB3C", VA = "0xAABB3C")]
			private bool BranchSelectorNode1582()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298E")]
			[Address(RVA = "0xAABB7C", Offset = "0xAABB7C", VA = "0xAABB7C")]
			private bool BranchSequenceNode1583()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600298F")]
			[Address(RVA = "0xAABC8C", Offset = "0xAABC8C", VA = "0xAABC8C")]
			private bool BranchSequenceNode1584()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002990")]
			[Address(RVA = "0xAABD74", Offset = "0xAABD74", VA = "0xAABD74")]
			private bool BranchSequenceNode1585()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002991")]
			[Address(RVA = "0xAABDCC", Offset = "0xAABDCC", VA = "0xAABDCC")]
			private bool BranchSequenceNode1032()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002992")]
			[Address(RVA = "0xAABE48", Offset = "0xAABE48", VA = "0xAABE48")]
			private bool BranchSelectorNode791()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002993")]
			[Address(RVA = "0xAABEE4", Offset = "0xAABEE4", VA = "0xAABEE4")]
			private bool BranchSelectorNode1176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002994")]
			[Address(RVA = "0xAABFF0", Offset = "0xAABFF0", VA = "0xAABFF0")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002995")]
			[Address(RVA = "0xAAC0D0", Offset = "0xAAC0D0", VA = "0xAAC0D0")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002996")]
			[Address(RVA = "0xAAC130", Offset = "0xAAC130", VA = "0xAAC130")]
			private bool BranchSequenceNode683()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002997")]
			[Address(RVA = "0xAAC190", Offset = "0xAAC190", VA = "0xAAC190")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002998")]
			[Address(RVA = "0xAAC20C", Offset = "0xAAC20C", VA = "0xAAC20C")]
			private bool BranchSequenceNode1231()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002999")]
			[Address(RVA = "0xAAC2B4", Offset = "0xAAC2B4", VA = "0xAAC2B4")]
			private bool BranchSequenceNode1232()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299A")]
			[Address(RVA = "0xAAC384", Offset = "0xAAC384", VA = "0xAAC384")]
			private bool BranchSelectorNode1233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299B")]
			[Address(RVA = "0xAAC408", Offset = "0xAAC408", VA = "0xAAC408")]
			private bool BranchSequenceNode1234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299C")]
			[Address(RVA = "0xAAC4AC", Offset = "0xAAC4AC", VA = "0xAAC4AC")]
			private bool BranchSelectorNode1239()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299D")]
			[Address(RVA = "0xAAC500", Offset = "0xAAC500", VA = "0xAAC500")]
			private bool BranchSelectorNode1241()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299E")]
			[Address(RVA = "0xAAC5DC", Offset = "0xAAC5DC", VA = "0xAAC5DC")]
			private bool BranchSelectorNode1243()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x600299F")]
			[Address(RVA = "0xAAC69C", Offset = "0xAAC69C", VA = "0xAAC69C")]
			private bool BranchSelectorNode1247()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A0")]
			[Address(RVA = "0xAAC720", Offset = "0xAAC720", VA = "0xAAC720")]
			private bool BranchSequenceNode1277()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A1")]
			[Address(RVA = "0xAAC7D0", Offset = "0xAAC7D0", VA = "0xAAC7D0")]
			private bool BranchSequenceNode1278()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A2")]
			[Address(RVA = "0xAAC8F0", Offset = "0xAAC8F0", VA = "0xAAC8F0")]
			private bool BranchSequenceNode1279()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A3")]
			[Address(RVA = "0xAAC984", Offset = "0xAAC984", VA = "0xAAC984")]
			private bool BranchSequenceNode1652()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A4")]
			[Address(RVA = "0xAACA30", Offset = "0xAACA30", VA = "0xAACA30")]
			private bool BranchSequenceNode1045()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A5")]
			[Address(RVA = "0xAACA84", Offset = "0xAACA84", VA = "0xAACA84")]
			private bool BranchSequenceNode1049()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A6")]
			[Address(RVA = "0xAACAD8", Offset = "0xAACAD8", VA = "0xAACAD8")]
			private bool BranchSequenceNode1053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A7")]
			[Address(RVA = "0xAACB2C", Offset = "0xAACB2C", VA = "0xAACB2C")]
			private bool BranchSequenceNode1672()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A8")]
			[Address(RVA = "0xAACBD8", Offset = "0xAACBD8", VA = "0xAACBD8")]
			private bool BranchSequenceNode1570()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029A9")]
			[Address(RVA = "0xAACC60", Offset = "0xAACC60", VA = "0xAACC60")]
			private bool BranchSequenceNode1362()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AA")]
			[Address(RVA = "0xAACD10", Offset = "0xAACD10", VA = "0xAACD10")]
			private bool BranchSequenceNode1737()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AB")]
			[Address(RVA = "0xAACD2C", Offset = "0xAACD2C", VA = "0xAACD2C")]
			private bool BranchSequenceNode1424()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AC")]
			[Address(RVA = "0xAACD6C", Offset = "0xAACD6C", VA = "0xAACD6C")]
			private bool BranchSelectorNode1440()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AD")]
			[Address(RVA = "0xAACE58", Offset = "0xAACE58", VA = "0xAACE58")]
			private bool BranchSequenceNode1410()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AE")]
			[Address(RVA = "0xAACF0C", Offset = "0xAACF0C", VA = "0xAACF0C")]
			private bool BranchSequenceNode1429()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029AF")]
			[Address(RVA = "0xAAD02C", Offset = "0xAAD02C", VA = "0xAAD02C")]
			private bool BranchSequenceNode1430()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B0")]
			[Address(RVA = "0xAAD118", Offset = "0xAAD118", VA = "0xAAD118")]
			private bool ActionWaitChoiceNode1431()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B1")]
			[Address(RVA = "0xAAD178", Offset = "0xAAD178", VA = "0xAAD178")]
			private bool BranchSequenceNode1432()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B2")]
			[Address(RVA = "0xAAD218", Offset = "0xAAD218", VA = "0xAAD218")]
			private bool BranchSequenceNode1694()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B3")]
			[Address(RVA = "0xAAD298", Offset = "0xAAD298", VA = "0xAAD298")]
			private bool BranchSelectorNode1693()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B4")]
			[Address(RVA = "0xAAD2F0", Offset = "0xAAD2F0", VA = "0xAAD2F0")]
			private bool BranchSelectorNode1415()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B5")]
			[Address(RVA = "0xAAD330", Offset = "0xAAD330", VA = "0xAAD330")]
			private bool BranchSequenceNode1416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B6")]
			[Address(RVA = "0xAAD3C8", Offset = "0xAAD3C8", VA = "0xAAD3C8")]
			private bool BranchSequenceNode1733()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B7")]
			[Address(RVA = "0xAAD444", Offset = "0xAAD444", VA = "0xAAD444")]
			private bool BranchSequenceNode1091()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B8")]
			[Address(RVA = "0xAAD4F4", Offset = "0xAAD4F4", VA = "0xAAD4F4")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029B9")]
			[Address(RVA = "0xAAD554", Offset = "0xAAD554", VA = "0xAAD554")]
			private bool BranchSequenceNode1081()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BA")]
			[Address(RVA = "0xAAD5B4", Offset = "0xAAD5B4", VA = "0xAAD5B4")]
			private bool BranchSequenceNode1586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BB")]
			[Address(RVA = "0xAAD654", Offset = "0xAAD654", VA = "0xAAD654")]
			private bool BranchSequenceNode1609()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BC")]
			[Address(RVA = "0xAAD6B8", Offset = "0xAAD6B8", VA = "0xAAD6B8")]
			private bool BranchSequenceNode1588()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BD")]
			[Address(RVA = "0xAAD758", Offset = "0xAAD758", VA = "0xAAD758")]
			private bool BranchSequenceNode1612()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BE")]
			[Address(RVA = "0xAAD7BC", Offset = "0xAAD7BC", VA = "0xAAD7BC")]
			private bool BranchSequenceNode1590()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029BF")]
			[Address(RVA = "0xAAD920", Offset = "0xAAD920", VA = "0xAAD920")]
			private bool BranchSequenceNode1591()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C0")]
			[Address(RVA = "0xAADA68", Offset = "0xAADA68", VA = "0xAADA68")]
			private bool BranchSelectorNode1594()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C1")]
			[Address(RVA = "0xAADAA8", Offset = "0xAADAA8", VA = "0xAADAA8")]
			private bool BranchSequenceNode1757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C2")]
			[Address(RVA = "0xAADBF4", Offset = "0xAADBF4", VA = "0xAADBF4")]
			private bool BranchSelectorNode1600()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C3")]
			[Address(RVA = "0xAADC94", Offset = "0xAADC94", VA = "0xAADC94")]
			private bool BranchSequenceNode1626()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C4")]
			[Address(RVA = "0xAADD2C", Offset = "0xAADD2C", VA = "0xAADD2C")]
			private bool BranchSequenceNode1767()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C5")]
			[Address(RVA = "0xAADE78", Offset = "0xAADE78", VA = "0xAADE78")]
			private bool BranchSequenceNode1627()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C6")]
			[Address(RVA = "0xAADFF0", Offset = "0xAADFF0", VA = "0xAADFF0")]
			private bool RangeCompareNode1628()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C7")]
			[Address(RVA = "0xAAE120", Offset = "0xAAE120", VA = "0xAAE120")]
			private bool BranchSequenceNode797()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C8")]
			[Address(RVA = "0xAAE1D0", Offset = "0xAAE1D0", VA = "0xAAE1D0")]
			private bool BranchSequenceNode1117()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029C9")]
			[Address(RVA = "0xAAE258", Offset = "0xAAE258", VA = "0xAAE258")]
			private bool BranchSequenceNode1178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CA")]
			[Address(RVA = "0xAAE2DC", Offset = "0xAAE2DC", VA = "0xAAE2DC")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CB")]
			[Address(RVA = "0xAAE340", Offset = "0xAAE340", VA = "0xAAE340")]
			private bool BranchSequenceNode1094()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CC")]
			[Address(RVA = "0xAAE3A0", Offset = "0xAAE3A0", VA = "0xAAE3A0")]
			private bool BranchSequenceNode1101()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CD")]
			[Address(RVA = "0xAAE504", Offset = "0xAAE504", VA = "0xAAE504")]
			private bool BranchSequenceNode1126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CE")]
			[Address(RVA = "0xAAE540", Offset = "0xAAE540", VA = "0xAAE540")]
			private bool BranchSelectorNode1153()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029CF")]
			[Address(RVA = "0xAAE5A0", Offset = "0xAAE5A0", VA = "0xAAE5A0")]
			private bool BranchSequenceNode674()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D0")]
			[Address(RVA = "0xAAE644", Offset = "0xAAE644", VA = "0xAAE644")]
			private bool BranchSequenceNode1119()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D1")]
			[Address(RVA = "0xAAE6A4", Offset = "0xAAE6A4", VA = "0xAAE6A4")]
			private bool BranchSequenceNode586()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D2")]
			[Address(RVA = "0xAAE780", Offset = "0xAAE780", VA = "0xAAE780")]
			private bool BranchSequenceNode1777()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D3")]
			[Address(RVA = "0xAAE7E0", Offset = "0xAAE7E0", VA = "0xAAE7E0")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D4")]
			[Address(RVA = "0xAAE98C", Offset = "0xAAE98C", VA = "0xAAE98C")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D5")]
			[Address(RVA = "0xAAE9DC", Offset = "0xAAE9DC", VA = "0xAAE9DC")]
			private bool BranchSequenceNode1280()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D6")]
			[Address(RVA = "0xAAEA2C", Offset = "0xAAEA2C", VA = "0xAAEA2C")]
			private bool BranchSequenceNode1259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D7")]
			[Address(RVA = "0xAAEABC", Offset = "0xAAEABC", VA = "0xAAEABC")]
			private bool BranchSequenceNode1260()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D8")]
			[Address(RVA = "0xAAEB4C", Offset = "0xAAEB4C", VA = "0xAAEB4C")]
			private bool BranchSequenceNode1261()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029D9")]
			[Address(RVA = "0xAAEBDC", Offset = "0xAAEBDC", VA = "0xAAEBDC")]
			private bool BranchSequenceNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DA")]
			[Address(RVA = "0xAAEC6C", Offset = "0xAAEC6C", VA = "0xAAEC6C")]
			private bool BranchSequenceNode1267()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DB")]
			[Address(RVA = "0xAAED14", Offset = "0xAAED14", VA = "0xAAED14")]
			private bool BranchSequenceNode1268()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DC")]
			[Address(RVA = "0xAAED54", Offset = "0xAAED54", VA = "0xAAED54")]
			private bool BranchSequenceNode1273()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DD")]
			[Address(RVA = "0xAAEDCC", Offset = "0xAAEDCC", VA = "0xAAEDCC")]
			private bool BranchSequenceNode1274()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xAAEE38", Offset = "0xAAEE38", VA = "0xAAEE38")]
			private bool BranchSequenceNode1275()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029DF")]
			[Address(RVA = "0xAAEF14", Offset = "0xAAEF14", VA = "0xAAEF14")]
			private bool BranchSequenceNode1276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E0")]
			[Address(RVA = "0xAAEF90", Offset = "0xAAEF90", VA = "0xAAEF90")]
			private bool RangeCompareNode1307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E1")]
			[Address(RVA = "0xAAF0C8", Offset = "0xAAF0C8", VA = "0xAAF0C8")]
			private bool BranchSelectorNode1308()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E2")]
			[Address(RVA = "0xAAF194", Offset = "0xAAF194", VA = "0xAAF194")]
			private bool BranchSequenceNode1653()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E3")]
			[Address(RVA = "0xAAF228", Offset = "0xAAF228", VA = "0xAAF228")]
			private bool BranchSequenceNode1662()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E4")]
			[Address(RVA = "0xAAF2C4", Offset = "0xAAF2C4", VA = "0xAAF2C4")]
			private bool BranchSequenceNode1822()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E5")]
			[Address(RVA = "0xAAF380", Offset = "0xAAF380", VA = "0xAAF380")]
			private bool BranchSequenceNode1673()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E6")]
			[Address(RVA = "0xAAF414", Offset = "0xAAF414", VA = "0xAAF414")]
			private bool BranchSequenceNode1682()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E7")]
			[Address(RVA = "0xAAF4B0", Offset = "0xAAF4B0", VA = "0xAAF4B0")]
			private bool BranchSequenceNode1832()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E8")]
			[Address(RVA = "0xAAF56C", Offset = "0xAAF56C", VA = "0xAAF56C")]
			private bool BranchSequenceNode1368()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029E9")]
			[Address(RVA = "0xAAF608", Offset = "0xAAF608", VA = "0xAAF608")]
			private bool BranchSequenceNode1842()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xAAF6C4", Offset = "0xAAF6C4", VA = "0xAAF6C4")]
			private bool BranchSequenceNode1739()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029EB")]
			[Address(RVA = "0xAAF770", Offset = "0xAAF770", VA = "0xAAF770")]
			private bool BranchSequenceNode1438()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029EC")]
			[Address(RVA = "0xAAF81C", Offset = "0xAAF81C", VA = "0xAAF81C")]
			private bool BranchSequenceNode1439()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029ED")]
			[Address(RVA = "0xAAF950", Offset = "0xAAF950", VA = "0xAAF950")]
			private bool BranchSequenceNode1475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xAAF9E0", Offset = "0xAAF9E0", VA = "0xAAF9E0")]
			private bool BranchSequenceNode1485()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xAAFA5C", Offset = "0xAAFA5C", VA = "0xAAFA5C")]
			private bool BranchSequenceNode1851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xAAFBA8", Offset = "0xAAFBA8", VA = "0xAAFBA8")]
			private bool BranchSequenceNode1862()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xAAFC64", Offset = "0xAAFC64", VA = "0xAAFC64")]
			private bool BranchSelectorNode1454()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F2")]
			[Address(RVA = "0xAAFCE0", Offset = "0xAAFCE0", VA = "0xAAFCE0")]
			private bool BranchSelectorNode1455()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F3")]
			[Address(RVA = "0xAAFD20", Offset = "0xAAFD20", VA = "0xAAFD20")]
			private bool BranchSequenceNode1695()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F4")]
			[Address(RVA = "0xAAFD54", Offset = "0xAAFD54", VA = "0xAAFD54")]
			private bool BranchSelectorNode1700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xAAFDEC", Offset = "0xAAFDEC", VA = "0xAAFDEC")]
			private bool BranchSequenceNode1433()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F6")]
			[Address(RVA = "0xAAFEB0", Offset = "0xAAFEB0", VA = "0xAAFEB0")]
			private bool BranchSequenceNode1434()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F7")]
			[Address(RVA = "0xAAFFA4", Offset = "0xAAFFA4", VA = "0xAAFFA4")]
			private bool ActionWaitNode1084()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F8")]
			[Address(RVA = "0xAB0004", Offset = "0xAB0004", VA = "0xAB0004")]
			private bool BranchSequenceNode1629()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029F9")]
			[Address(RVA = "0xAB006C", Offset = "0xAB006C", VA = "0xAB006C")]
			private bool RangeCompareNode1630()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FA")]
			[Address(RVA = "0xAB01A4", Offset = "0xAB01A4", VA = "0xAB01A4")]
			private bool BranchSequenceNode1632()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FB")]
			[Address(RVA = "0xAB020C", Offset = "0xAB020C", VA = "0xAB020C")]
			private bool RangeCompareNode1633()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FC")]
			[Address(RVA = "0xAB0344", Offset = "0xAB0344", VA = "0xAB0344")]
			private bool RangeCompareNode1622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FD")]
			[Address(RVA = "0xAB047C", Offset = "0xAB047C", VA = "0xAB047C")]
			private bool RangeCompareNode1623()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FE")]
			[Address(RVA = "0xAB05B4", Offset = "0xAB05B4", VA = "0xAB05B4")]
			private bool BranchSequenceNode1764()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x60029FF")]
			[Address(RVA = "0xAB063C", Offset = "0xAB063C", VA = "0xAB063C")]
			private bool RangeCompareNode1625()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A00")]
			[Address(RVA = "0xAB0774", Offset = "0xAB0774", VA = "0xAB0774")]
			private bool BranchSequenceNode1774()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A01")]
			[Address(RVA = "0xAB07FC", Offset = "0xAB07FC", VA = "0xAB07FC")]
			private bool BranchSequenceNode1901()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A02")]
			[Address(RVA = "0xAB0948", Offset = "0xAB0948", VA = "0xAB0948")]
			private bool BranchSelectorNode1911()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A03")]
			[Address(RVA = "0xAB0BDC", Offset = "0xAB0BDC", VA = "0xAB0BDC")]
			private bool BranchSequenceNode1872()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A04")]
			[Address(RVA = "0xAB0C3C", Offset = "0xAB0C3C", VA = "0xAB0C3C")]
			private bool BranchSequenceNode1103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A05")]
			[Address(RVA = "0xAB0CDC", Offset = "0xAB0CDC", VA = "0xAB0CDC")]
			private bool RangeCompareNode1155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A06")]
			[Address(RVA = "0xAB0E0C", Offset = "0xAB0E0C", VA = "0xAB0E0C")]
			private bool BranchRandomNode1150()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A07")]
			[Address(RVA = "0xAB0F90", Offset = "0xAB0F90", VA = "0xAB0F90")]
			private bool ActionWaitNode1125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A08")]
			[Address(RVA = "0xAB0FF0", Offset = "0xAB0FF0", VA = "0xAB0FF0")]
			private bool BranchSelectorNode1121()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A09")]
			[Address(RVA = "0xAB10AC", Offset = "0xAB10AC", VA = "0xAB10AC")]
			private bool BranchSequenceNode587()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0xAB11A0", Offset = "0xAB11A0", VA = "0xAB11A0")]
			private bool StartAttackNode599()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0xAB1200", Offset = "0xAB1200", VA = "0xAB1200")]
			private bool BranchSequenceNode1778()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0xAB1288", Offset = "0xAB1288", VA = "0xAB1288")]
			private bool BranchSequenceNode1779()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0xAB1424", Offset = "0xAB1424", VA = "0xAB1424")]
			private bool BranchSequenceNode1794()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0xAB14B0", Offset = "0xAB14B0", VA = "0xAB14B0")]
			private bool BranchSequenceNode1781()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0xAB15EC", Offset = "0xAB15EC", VA = "0xAB15EC")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A10")]
			[Address(RVA = "0xAB17A8", Offset = "0xAB17A8", VA = "0xAB17A8")]
			private bool BranchSelectorNode705()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A11")]
			[Address(RVA = "0xAB18C8", Offset = "0xAB18C8", VA = "0xAB18C8")]
			private bool BranchSequenceNode807()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A12")]
			[Address(RVA = "0xAB1970", Offset = "0xAB1970", VA = "0xAB1970")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A13")]
			[Address(RVA = "0xAB1A40", Offset = "0xAB1A40", VA = "0xAB1A40")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A14")]
			[Address(RVA = "0xAB1B88", Offset = "0xAB1B88", VA = "0xAB1B88")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A15")]
			[Address(RVA = "0xAB1CA8", Offset = "0xAB1CA8", VA = "0xAB1CA8")]
			private bool BranchSequenceNode1293()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A16")]
			[Address(RVA = "0xAB1D88", Offset = "0xAB1D88", VA = "0xAB1D88")]
			private bool BranchSelectorNode1294()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A17")]
			[Address(RVA = "0xAB1F00", Offset = "0xAB1F00", VA = "0xAB1F00")]
			private bool RangeCompareNode1300()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A18")]
			[Address(RVA = "0xAB2038", Offset = "0xAB2038", VA = "0xAB2038")]
			private bool BranchSelectorNode1304()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A19")]
			[Address(RVA = "0xAB2078", Offset = "0xAB2078", VA = "0xAB2078")]
			private bool BranchSequenceNode1329()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0xAB20F0", Offset = "0xAB20F0", VA = "0xAB20F0")]
			private bool BranchSequenceNode1330()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1B")]
			[Address(RVA = "0xAB2168", Offset = "0xAB2168", VA = "0xAB2168")]
			private bool BranchSelectorNode1663()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0xAB2214", Offset = "0xAB2214", VA = "0xAB2214")]
			private bool BranchSequenceNode1927()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1D")]
			[Address(RVA = "0xAB2360", Offset = "0xAB2360", VA = "0xAB2360")]
			private bool BranchSequenceNode1826()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1E")]
			[Address(RVA = "0xAB2434", Offset = "0xAB2434", VA = "0xAB2434")]
			private bool BranchSelectorNode1683()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0xAB24E0", Offset = "0xAB24E0", VA = "0xAB24E0")]
			private bool BranchSequenceNode1937()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xAB262C", Offset = "0xAB262C", VA = "0xAB262C")]
			private bool BranchSequenceNode1836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A21")]
			[Address(RVA = "0xAB2700", Offset = "0xAB2700", VA = "0xAB2700")]
			private bool BranchSelectorNode1369()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A22")]
			[Address(RVA = "0xAB27AC", Offset = "0xAB27AC", VA = "0xAB27AC")]
			private bool BranchSequenceNode1947()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xAB28F8", Offset = "0xAB28F8", VA = "0xAB28F8")]
			private bool BranchSequenceNode1846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A24")]
			[Address(RVA = "0xAB29CC", Offset = "0xAB29CC", VA = "0xAB29CC")]
			private bool BranchSequenceNode1740()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A25")]
			[Address(RVA = "0xAB2A60", Offset = "0xAB2A60", VA = "0xAB2A60")]
			private bool BranchSequenceNode1749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A26")]
			[Address(RVA = "0xAB2AFC", Offset = "0xAB2AFC", VA = "0xAB2AFC")]
			private bool BranchSequenceNode1892()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A27")]
			[Address(RVA = "0xAB2BB8", Offset = "0xAB2BB8", VA = "0xAB2BB8")]
			private bool BranchSelectorNode1481()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A28")]
			[Address(RVA = "0xAB2C60", Offset = "0xAB2C60", VA = "0xAB2C60")]
			private bool BranchSequenceNode1482()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A29")]
			[Address(RVA = "0xAB2D20", Offset = "0xAB2D20", VA = "0xAB2D20")]
			private bool ActionWaitNode1497()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0xAB2D80", Offset = "0xAB2D80", VA = "0xAB2D80")]
			private bool BranchSequenceNode1484()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0xAB2E00", Offset = "0xAB2E00", VA = "0xAB2E00")]
			private bool BranchSequenceNode1501()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0xAB2EB0", Offset = "0xAB2EB0", VA = "0xAB2EB0")]
			private bool ActionWaitChoiceNode1502()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0xAB2F10", Offset = "0xAB2F10", VA = "0xAB2F10")]
			private bool BranchSequenceNode1503()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0xAB2F58", Offset = "0xAB2F58", VA = "0xAB2F58")]
			private bool BranchSequenceNode1858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0xAB2FE0", Offset = "0xAB2FE0", VA = "0xAB2FE0")]
			private bool BranchSequenceNode1866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A30")]
			[Address(RVA = "0xAB30B4", Offset = "0xAB30B4", VA = "0xAB30B4")]
			private bool BranchSequenceNode1477()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A31")]
			[Address(RVA = "0xAB3138", Offset = "0xAB3138", VA = "0xAB3138")]
			private bool BranchSequenceNode1479()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A32")]
			[Address(RVA = "0xAB3208", Offset = "0xAB3208", VA = "0xAB3208")]
			private bool BranchSequenceNode1480()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A33")]
			[Address(RVA = "0xAB32B8", Offset = "0xAB32B8", VA = "0xAB32B8")]
			private bool BranchSequenceNode1701()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A34")]
			[Address(RVA = "0xAB32F0", Offset = "0xAB32F0", VA = "0xAB32F0")]
			private bool BranchSequenceNode1702()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A35")]
			[Address(RVA = "0xAB3334", Offset = "0xAB3334", VA = "0xAB3334")]
			private bool BranchSequenceNode1703()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A36")]
			[Address(RVA = "0xAB34A8", Offset = "0xAB34A8", VA = "0xAB34A8")]
			private bool BranchSequenceNode1715()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A37")]
			[Address(RVA = "0xAB3554", Offset = "0xAB3554", VA = "0xAB3554")]
			private bool RangeCompareNode1646()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A38")]
			[Address(RVA = "0xAB368C", Offset = "0xAB368C", VA = "0xAB368C")]
			private bool RangeCompareNode1648()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A39")]
			[Address(RVA = "0xAB37C4", Offset = "0xAB37C4", VA = "0xAB37C4")]
			private bool BranchSequenceNode1908()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3A")]
			[Address(RVA = "0xAB384C", Offset = "0xAB384C", VA = "0xAB384C")]
			private bool BranchSequenceNode1912()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0xAB38EC", Offset = "0xAB38EC", VA = "0xAB38EC")]
			private bool BranchSequenceNode1913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3C")]
			[Address(RVA = "0xAB3990", Offset = "0xAB3990", VA = "0xAB3990")]
			private bool BranchSequenceNode1914()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0xAB3A34", Offset = "0xAB3A34", VA = "0xAB3A34")]
			private bool BranchSequenceNode1915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0xAB3AD8", Offset = "0xAB3AD8", VA = "0xAB3AD8")]
			private bool BranchSequenceNode1916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0xAB3B7C", Offset = "0xAB3B7C", VA = "0xAB3B7C")]
			private bool BranchRandomNode1874()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A40")]
			[Address(RVA = "0xAB3D4C", Offset = "0xAB3D4C", VA = "0xAB3D4C")]
			private bool BranchSequenceNode1875()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A41")]
			[Address(RVA = "0xAB3DB8", Offset = "0xAB3DB8", VA = "0xAB3DB8")]
			private bool ActionWaitNode1876()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A42")]
			[Address(RVA = "0xAB3E18", Offset = "0xAB3E18", VA = "0xAB3E18")]
			private bool BranchSequenceNode1878()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A43")]
			[Address(RVA = "0xAB3EC0", Offset = "0xAB3EC0", VA = "0xAB3EC0")]
			private bool BranchSelectorNode1106()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A44")]
			[Address(RVA = "0xAB3F20", Offset = "0xAB3F20", VA = "0xAB3F20")]
			private bool BranchSequenceNode2017()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A45")]
			[Address(RVA = "0xAB3F80", Offset = "0xAB3F80", VA = "0xAB3F80")]
			private bool ActionWaitNode1151()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A46")]
			[Address(RVA = "0xAB3FE0", Offset = "0xAB3FE0", VA = "0xAB3FE0")]
			private bool ActionWaitNode1152()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A47")]
			[Address(RVA = "0xAB4040", Offset = "0xAB4040", VA = "0xAB4040")]
			private bool ActionWaitNode1149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A48")]
			[Address(RVA = "0xAB40A0", Offset = "0xAB40A0", VA = "0xAB40A0")]
			private bool ActionWaitNode1148()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A49")]
			[Address(RVA = "0xAB4100", Offset = "0xAB4100", VA = "0xAB4100")]
			private bool BranchSelectorNode965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0xAB4154", Offset = "0xAB4154", VA = "0xAB4154")]
			private bool BranchSelectorNode1783()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0xAB4208", Offset = "0xAB4208", VA = "0xAB4208")]
			private bool BranchSequenceNode1806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4C")]
			[Address(RVA = "0xAB42B4", Offset = "0xAB42B4", VA = "0xAB42B4")]
			private bool BranchSelectorNode1805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0xAB4334", Offset = "0xAB4334", VA = "0xAB4334")]
			private bool BranchSequenceNode706()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4E")]
			[Address(RVA = "0xAB43CC", Offset = "0xAB43CC", VA = "0xAB43CC")]
			private bool BranchSequenceNode707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0xAB4460", Offset = "0xAB4460", VA = "0xAB4460")]
			private bool BranchSequenceNode709()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A50")]
			[Address(RVA = "0xAB44F8", Offset = "0xAB44F8", VA = "0xAB44F8")]
			private bool BranchSequenceNode1986()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A51")]
			[Address(RVA = "0xAB4558", Offset = "0xAB4558", VA = "0xAB4558")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A52")]
			[Address(RVA = "0xAB4600", Offset = "0xAB4600", VA = "0xAB4600")]
			private bool BranchSequenceNode575()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A53")]
			[Address(RVA = "0xAB4650", Offset = "0xAB4650", VA = "0xAB4650")]
			private bool BranchSequenceNode579()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A54")]
			[Address(RVA = "0xAB46A0", Offset = "0xAB46A0", VA = "0xAB46A0")]
			private bool BranchSequenceNode1325()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A55")]
			[Address(RVA = "0xAB470C", Offset = "0xAB470C", VA = "0xAB470C")]
			private bool BranchSequenceNode1327()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A56")]
			[Address(RVA = "0xAB47E8", Offset = "0xAB47E8", VA = "0xAB47E8")]
			private bool BranchSequenceNode1328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A57")]
			[Address(RVA = "0xAB4934", Offset = "0xAB4934", VA = "0xAB4934")]
			private bool BranchSequenceNode1934()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A58")]
			[Address(RVA = "0xAB49BC", Offset = "0xAB49BC", VA = "0xAB49BC")]
			private bool BranchSequenceNode1944()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A59")]
			[Address(RVA = "0xAB4A44", Offset = "0xAB4A44", VA = "0xAB4A44")]
			private bool BranchSequenceNode1954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0xAB4ACC", Offset = "0xAB4ACC", VA = "0xAB4ACC")]
			private bool BranchSelectorNode1750()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5B")]
			[Address(RVA = "0xAB4B78", Offset = "0xAB4B78", VA = "0xAB4B78")]
			private bool BranchSequenceNode1999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0xAB4CC4", Offset = "0xAB4CC4", VA = "0xAB4CC4")]
			private bool BranchSequenceNode1896()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5D")]
			[Address(RVA = "0xAB4D98", Offset = "0xAB4D98", VA = "0xAB4D98")]
			private bool BranchSequenceNode2009()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0xAB4EB0", Offset = "0xAB4EB0", VA = "0xAB4EB0")]
			private bool BranchSequenceNode2036()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0xAB4FFC", Offset = "0xAB4FFC", VA = "0xAB4FFC")]
			private bool BranchSelectorNode1509()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A60")]
			[Address(RVA = "0xAB503C", Offset = "0xAB503C", VA = "0xAB503C")]
			private bool ListenGlobalEventNode1918()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A61")]
			[Address(RVA = "0xAB509C", Offset = "0xAB509C", VA = "0xAB509C")]
			private bool ListenGlobalEventNode1920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A62")]
			[Address(RVA = "0xAB50FC", Offset = "0xAB50FC", VA = "0xAB50FC")]
			private bool ListenGlobalEventNode1922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A63")]
			[Address(RVA = "0xAB515C", Offset = "0xAB515C", VA = "0xAB515C")]
			private bool ListenGlobalEventNode1924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A64")]
			[Address(RVA = "0xAB51BC", Offset = "0xAB51BC", VA = "0xAB51BC")]
			private bool ListenGlobalEventNode1926()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A65")]
			[Address(RVA = "0xAB521C", Offset = "0xAB521C", VA = "0xAB521C")]
			private bool ActionWaitNode1879()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A66")]
			[Address(RVA = "0xAB527C", Offset = "0xAB527C", VA = "0xAB527C")]
			private bool ActionWaitNode1880()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A67")]
			[Address(RVA = "0xAB52DC", Offset = "0xAB52DC", VA = "0xAB52DC")]
			private bool ActionWaitNode1881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A68")]
			[Address(RVA = "0xAB533C", Offset = "0xAB533C", VA = "0xAB533C")]
			private bool ActionWaitNode1882()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A69")]
			[Address(RVA = "0xAB539C", Offset = "0xAB539C", VA = "0xAB539C")]
			private bool ActionWaitNode1883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0xAB53FC", Offset = "0xAB53FC", VA = "0xAB53FC")]
			private bool ToggleTargetableNode1884()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0xAB5484", Offset = "0xAB5484", VA = "0xAB5484")]
			private bool BranchSequenceNode1100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0xAB54BC", Offset = "0xAB54BC", VA = "0xAB54BC")]
			private bool BranchSelectorNode2154()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0xAB5750", Offset = "0xAB5750", VA = "0xAB5750")]
			private bool BranchRandomNode2019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0xAB5920", Offset = "0xAB5920", VA = "0xAB5920")]
			private bool BranchSequenceNode2020()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A6F")]
			[Address(RVA = "0xAB598C", Offset = "0xAB598C", VA = "0xAB598C")]
			private bool ActionWaitNode2021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A70")]
			[Address(RVA = "0xAB59EC", Offset = "0xAB59EC", VA = "0xAB59EC")]
			private bool BranchSequenceNode2023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A71")]
			[Address(RVA = "0xAB5A94", Offset = "0xAB5A94", VA = "0xAB5A94")]
			private bool BranchSelectorNode1807()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A72")]
			[Address(RVA = "0xAB5B48", Offset = "0xAB5B48", VA = "0xAB5B48")]
			private bool BranchSequenceNode1808()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A73")]
			[Address(RVA = "0xAB5BBC", Offset = "0xAB5BBC", VA = "0xAB5BBC")]
			private bool BranchSequenceNode1957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A74")]
			[Address(RVA = "0xAB5C1C", Offset = "0xAB5C1C", VA = "0xAB5C1C")]
			private bool BranchSelectorNode1157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A75")]
			[Address(RVA = "0xAB5C5C", Offset = "0xAB5C5C", VA = "0xAB5C5C")]
			private bool BranchSequenceNode1970()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A76")]
			[Address(RVA = "0xAB5CBC", Offset = "0xAB5CBC", VA = "0xAB5CBC")]
			private bool BranchSequenceNode1993()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A77")]
			[Address(RVA = "0xAB5D4C", Offset = "0xAB5D4C", VA = "0xAB5D4C")]
			private bool ActionDisengage1988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A78")]
			[Address(RVA = "0xAB5DAC", Offset = "0xAB5DAC", VA = "0xAB5DAC")]
			private bool ActionWaitNode1990()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A79")]
			[Address(RVA = "0xAB5E0C", Offset = "0xAB5E0C", VA = "0xAB5E0C")]
			private bool BranchSequenceNode743()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7A")]
			[Address(RVA = "0xAB5EAC", Offset = "0xAB5EAC", VA = "0xAB5EAC")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7B")]
			[Address(RVA = "0xAB5F74", Offset = "0xAB5F74", VA = "0xAB5F74")]
			private bool RangeCompareNode577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7C")]
			[Address(RVA = "0xAB60AC", Offset = "0xAB60AC", VA = "0xAB60AC")]
			private bool BranchSelectorNode886()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7D")]
			[Address(RVA = "0xAB60EC", Offset = "0xAB60EC", VA = "0xAB60EC")]
			private bool RangeCompareNode578()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7E")]
			[Address(RVA = "0xAB6224", Offset = "0xAB6224", VA = "0xAB6224")]
			private bool BranchSelectorNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A7F")]
			[Address(RVA = "0xAB6264", Offset = "0xAB6264", VA = "0xAB6264")]
			private bool RangeCompareNode1334()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A80")]
			[Address(RVA = "0xAB639C", Offset = "0xAB639C", VA = "0xAB639C")]
			private bool BranchSequenceNode2006()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A81")]
			[Address(RVA = "0xAB6424", Offset = "0xAB6424", VA = "0xAB6424")]
			private bool BranchSequenceNode2043()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A82")]
			[Address(RVA = "0xAB64AC", Offset = "0xAB64AC", VA = "0xAB64AC")]
			private bool BranchSequenceNode1510()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A83")]
			[Address(RVA = "0xAB657C", Offset = "0xAB657C", VA = "0xAB657C")]
			private bool BranchSequenceNode1511()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A84")]
			[Address(RVA = "0xAB662C", Offset = "0xAB662C", VA = "0xAB662C")]
			private bool BranchSequenceNode2155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A85")]
			[Address(RVA = "0xAB66CC", Offset = "0xAB66CC", VA = "0xAB66CC")]
			private bool BranchSequenceNode2156()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A86")]
			[Address(RVA = "0xAB6770", Offset = "0xAB6770", VA = "0xAB6770")]
			private bool BranchSequenceNode2157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A87")]
			[Address(RVA = "0xAB6814", Offset = "0xAB6814", VA = "0xAB6814")]
			private bool BranchSequenceNode2158()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A88")]
			[Address(RVA = "0xAB68B8", Offset = "0xAB68B8", VA = "0xAB68B8")]
			private bool BranchSequenceNode2159()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A89")]
			[Address(RVA = "0xAB695C", Offset = "0xAB695C", VA = "0xAB695C")]
			private bool ActionWaitNode2024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8A")]
			[Address(RVA = "0xAB69BC", Offset = "0xAB69BC", VA = "0xAB69BC")]
			private bool ActionWaitNode2025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8B")]
			[Address(RVA = "0xAB6A1C", Offset = "0xAB6A1C", VA = "0xAB6A1C")]
			private bool ActionWaitNode2026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8C")]
			[Address(RVA = "0xAB6A7C", Offset = "0xAB6A7C", VA = "0xAB6A7C")]
			private bool ActionWaitNode2027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8D")]
			[Address(RVA = "0xAB6ADC", Offset = "0xAB6ADC", VA = "0xAB6ADC")]
			private bool ActionWaitNode2028()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8E")]
			[Address(RVA = "0xAB6B3C", Offset = "0xAB6B3C", VA = "0xAB6B3C")]
			private bool ToggleTargetableNode2029()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0xAB6BC4", Offset = "0xAB6BC4", VA = "0xAB6BC4")]
			private bool BranchSequenceNode1813()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A90")]
			[Address(RVA = "0xAB6C34", Offset = "0xAB6C34", VA = "0xAB6C34")]
			private bool BranchSequenceNode2047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A91")]
			[Address(RVA = "0xAB6CF0", Offset = "0xAB6CF0", VA = "0xAB6CF0")]
			private bool BranchSequenceNode2056()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A92")]
			[Address(RVA = "0xAB6D0C", Offset = "0xAB6D0C", VA = "0xAB6D0C")]
			private bool BranchSequenceNode1964()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A93")]
			[Address(RVA = "0xAB6D9C", Offset = "0xAB6D9C", VA = "0xAB6D9C")]
			private bool ActionDisengage1959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0xAB6DFC", Offset = "0xAB6DFC", VA = "0xAB6DFC")]
			private bool ActionWaitNode1961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A95")]
			[Address(RVA = "0xAB6E5C", Offset = "0xAB6E5C", VA = "0xAB6E5C")]
			private bool BranchSequenceNode1158()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A96")]
			[Address(RVA = "0xAB6F38", Offset = "0xAB6F38", VA = "0xAB6F38")]
			private bool BranchSequenceNode1160()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A97")]
			[Address(RVA = "0xAB7014", Offset = "0xAB7014", VA = "0xAB7014")]
			private bool BranchSequenceNode1980()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A98")]
			[Address(RVA = "0xAB70A4", Offset = "0xAB70A4", VA = "0xAB70A4")]
			private bool ActionFlipOver1972()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A99")]
			[Address(RVA = "0xAB7104", Offset = "0xAB7104", VA = "0xAB7104")]
			private bool ActionWaitNode1976()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0xAB7164", Offset = "0xAB7164", VA = "0xAB7164")]
			private bool BranchSelectorNode1995()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0xAB71E4", Offset = "0xAB71E4", VA = "0xAB71E4")]
			private bool BranchSequenceNode2132()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0xAB7330", Offset = "0xAB7330", VA = "0xAB7330")]
			private bool BranchSequenceNode740()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0xAB73B0", Offset = "0xAB73B0", VA = "0xAB73B0")]
			private bool BranchSequenceNode744()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0xAB73F0", Offset = "0xAB73F0", VA = "0xAB73F0")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002A9F")]
			[Address(RVA = "0xAB7474", Offset = "0xAB7474", VA = "0xAB7474")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0xAB74D8", Offset = "0xAB74D8", VA = "0xAB74D8")]
			private bool BranchSequenceNode881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA1")]
			[Address(RVA = "0xAB75DC", Offset = "0xAB75DC", VA = "0xAB75DC")]
			private bool BranchSequenceNode2142()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0xAB7694", Offset = "0xAB7694", VA = "0xAB7694")]
			private bool BranchSequenceNode889()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0xAB7798", Offset = "0xAB7798", VA = "0xAB7798")]
			private bool BranchSequenceNode2148()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0xAB7850", Offset = "0xAB7850", VA = "0xAB7850")]
			private bool ListenGlobalEventNode2161()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA5")]
			[Address(RVA = "0xAB78B0", Offset = "0xAB78B0", VA = "0xAB78B0")]
			private bool ListenGlobalEventNode2163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0xAB7910", Offset = "0xAB7910", VA = "0xAB7910")]
			private bool ListenGlobalEventNode2165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA7")]
			[Address(RVA = "0xAB7970", Offset = "0xAB7970", VA = "0xAB7970")]
			private bool ListenGlobalEventNode2167()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0xAB79D0", Offset = "0xAB79D0", VA = "0xAB79D0")]
			private bool ListenGlobalEventNode2169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0xAB7A30", Offset = "0xAB7A30", VA = "0xAB7A30")]
			private bool BranchSequenceNode2103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0xAB7AEC", Offset = "0xAB7AEC", VA = "0xAB7AEC")]
			private bool BranchSequenceNode2051()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAB")]
			[Address(RVA = "0xAB7BC0", Offset = "0xAB7BC0", VA = "0xAB7BC0")]
			private bool BranchSequenceNode2058()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0xAB7C6C", Offset = "0xAB7C6C", VA = "0xAB7C6C")]
			private bool BranchSelectorNode1966()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAD")]
			[Address(RVA = "0xAB7CEC", Offset = "0xAB7CEC", VA = "0xAB7CEC")]
			private bool BranchSequenceNode2112()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAE")]
			[Address(RVA = "0xAB7E38", Offset = "0xAB7E38", VA = "0xAB7E38")]
			private bool BranchSequenceNode2076()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0xAB7E98", Offset = "0xAB7E98", VA = "0xAB7E98")]
			private bool BranchSequenceNode2089()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0xAB7EF8", Offset = "0xAB7EF8", VA = "0xAB7EF8")]
			private bool BranchSelectorNode1982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0xAB7F78", Offset = "0xAB7F78", VA = "0xAB7F78")]
			private bool BranchSequenceNode2122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB2")]
			[Address(RVA = "0xAB80C4", Offset = "0xAB80C4", VA = "0xAB80C4")]
			private bool BranchSequenceNode2139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0xAB814C", Offset = "0xAB814C", VA = "0xAB814C")]
			private bool BranchSequenceNode746()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB4")]
			[Address(RVA = "0xAB8154", Offset = "0xAB8154", VA = "0xAB8154")]
			private bool BranchSelectorNode785()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0xAB8194", Offset = "0xAB8194", VA = "0xAB8194")]
			private bool BranchSequenceNode695()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0xAB82EC", Offset = "0xAB82EC", VA = "0xAB82EC")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0xAB845C", Offset = "0xAB845C", VA = "0xAB845C")]
			private bool BranchRandomNode895()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB8")]
			[Address(RVA = "0xAB8518", Offset = "0xAB8518", VA = "0xAB8518")]
			private bool BranchRandomNode898()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0xAB85D4", Offset = "0xAB85D4", VA = "0xAB85D4")]
			private bool BranchSequenceNode2107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABA")]
			[Address(RVA = "0xAB86A8", Offset = "0xAB86A8", VA = "0xAB86A8")]
			private bool BranchSequenceNode2059()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0xAB873C", Offset = "0xAB873C", VA = "0xAB873C")]
			private bool BranchSequenceNode2068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0xAB87D8", Offset = "0xAB87D8", VA = "0xAB87D8")]
			private bool BranchSequenceNode2171()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0xAB8894", Offset = "0xAB8894", VA = "0xAB8894")]
			private bool BranchSequenceNode2119()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABE")]
			[Address(RVA = "0xAB891C", Offset = "0xAB891C", VA = "0xAB891C")]
			private bool BranchSequenceNode2083()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0xAB89AC", Offset = "0xAB89AC", VA = "0xAB89AC")]
			private bool ActionDodge2078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC0")]
			[Address(RVA = "0xAB8A0C", Offset = "0xAB8A0C", VA = "0xAB8A0C")]
			private bool ActionWaitNode2080()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0xAB8A6C", Offset = "0xAB8A6C", VA = "0xAB8A6C")]
			private bool BranchSequenceNode2096()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0xAB8AFC", Offset = "0xAB8AFC", VA = "0xAB8AFC")]
			private bool ActionLateralDisplace2091()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0xAB8B5C", Offset = "0xAB8B5C", VA = "0xAB8B5C")]
			private bool ActionWaitNode2093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC4")]
			[Address(RVA = "0xAB8BBC", Offset = "0xAB8BBC", VA = "0xAB8BBC")]
			private bool BranchSequenceNode2129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0xAB8C44", Offset = "0xAB8C44", VA = "0xAB8C44")]
			private bool BranchSequenceNode779()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC6")]
			[Address(RVA = "0xAB8D24", Offset = "0xAB8D24", VA = "0xAB8D24")]
			private bool BranchSequenceNode780()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0xAB8DD4", Offset = "0xAB8DD4", VA = "0xAB8DD4")]
			private bool BranchSequenceNode844()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0xAB8EEC", Offset = "0xAB8EEC", VA = "0xAB8EEC")]
			private bool BranchSequenceNode700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0xAB8F4C", Offset = "0xAB8F4C", VA = "0xAB8F4C")]
			private bool BranchSequenceNode843()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACA")]
			[Address(RVA = "0xAB8FA4", Offset = "0xAB8FA4", VA = "0xAB8FA4")]
			private bool BranchSequenceNode833()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0xAB9004", Offset = "0xAB9004", VA = "0xAB9004")]
			private bool BranchSequenceNode2200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACC")]
			[Address(RVA = "0xAB9064", Offset = "0xAB9064", VA = "0xAB9064")]
			private bool BranchSequenceNode2213()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACD")]
			[Address(RVA = "0xAB90C4", Offset = "0xAB90C4", VA = "0xAB90C4")]
			private bool BranchSelectorNode2069()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACE")]
			[Address(RVA = "0xAB9170", Offset = "0xAB9170", VA = "0xAB9170")]
			private bool BranchSequenceNode2226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ACF")]
			[Address(RVA = "0xAB92BC", Offset = "0xAB92BC", VA = "0xAB92BC")]
			private bool BranchSequenceNode2175()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD0")]
			[Address(RVA = "0xAB9390", Offset = "0xAB9390", VA = "0xAB9390")]
			private bool BranchSelectorNode2085()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD1")]
			[Address(RVA = "0xAB9410", Offset = "0xAB9410", VA = "0xAB9410")]
			private bool BranchSequenceNode2180()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD2")]
			[Address(RVA = "0xAB955C", Offset = "0xAB955C", VA = "0xAB955C")]
			private bool BranchSelectorNode2098()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD3")]
			[Address(RVA = "0xAB95DC", Offset = "0xAB95DC", VA = "0xAB95DC")]
			private bool BranchSequenceNode2190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD4")]
			[Address(RVA = "0xAB9728", Offset = "0xAB9728", VA = "0xAB9728")]
			private bool BranchSequenceNode786()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD5")]
			[Address(RVA = "0xAB9884", Offset = "0xAB9884", VA = "0xAB9884")]
			private bool BranchSequenceNode763()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD6")]
			[Address(RVA = "0xAB994C", Offset = "0xAB994C", VA = "0xAB994C")]
			private bool BranchSelectorNode908()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD7")]
			[Address(RVA = "0xAB998C", Offset = "0xAB998C", VA = "0xAB998C")]
			private bool BranchSelectorNode722()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD8")]
			[Address(RVA = "0xAB99F8", Offset = "0xAB99F8", VA = "0xAB99F8")]
			private bool ActionWaitNode817()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0xAB9A58", Offset = "0xAB9A58", VA = "0xAB9A58")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0xAB9C38", Offset = "0xAB9C38", VA = "0xAB9C38")]
			private bool BranchSelectorNode837()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0xAB9CC4", Offset = "0xAB9CC4", VA = "0xAB9CC4")]
			private bool BranchSequenceNode823()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0xAB9D40", Offset = "0xAB9D40", VA = "0xAB9D40")]
			private bool BranchSequenceNode2207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0xAB9DD0", Offset = "0xAB9DD0", VA = "0xAB9DD0")]
			private bool ActionDodge2202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xAB9E30", Offset = "0xAB9E30", VA = "0xAB9E30")]
			private bool ActionWaitNode2204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0xAB9E90", Offset = "0xAB9E90", VA = "0xAB9E90")]
			private bool BranchSequenceNode2220()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xAB9F20", Offset = "0xAB9F20", VA = "0xAB9F20")]
			private bool ActionDodge2215()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE1")]
			[Address(RVA = "0xAB9F80", Offset = "0xAB9F80", VA = "0xAB9F80")]
			private bool ActionWaitNode2217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE2")]
			[Address(RVA = "0xAB9FE0", Offset = "0xAB9FE0", VA = "0xAB9FE0")]
			private bool BranchSequenceNode2233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE3")]
			[Address(RVA = "0xABA068", Offset = "0xABA068", VA = "0xABA068")]
			private bool BranchSequenceNode2187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE4")]
			[Address(RVA = "0xABA0F0", Offset = "0xABA0F0", VA = "0xABA0F0")]
			private bool BranchSequenceNode2197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0xABA178", Offset = "0xABA178", VA = "0xABA178")]
			private bool BranchSequenceNode776()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0xABA2B8", Offset = "0xABA2B8", VA = "0xABA2B8")]
			private bool BranchSelectorNode978()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0xABA368", Offset = "0xABA368", VA = "0xABA368")]
			private bool BranchSequenceNode757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0xABA3FC", Offset = "0xABA3FC", VA = "0xABA3FC")]
			private bool BranchSequenceNode903()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0xABA478", Offset = "0xABA478", VA = "0xABA478")]
			private bool BranchSequenceNode2236()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0xABA530", Offset = "0xABA530", VA = "0xABA530")]
			private bool ActionWaitNode814()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0xABA590", Offset = "0xABA590", VA = "0xABA590")]
			private bool BranchSequenceNode851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0xABA6D4", Offset = "0xABA6D4", VA = "0xABA6D4")]
			private bool BranchSequenceNode830()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AED")]
			[Address(RVA = "0xABA734", Offset = "0xABA734", VA = "0xABA734")]
			private bool BranchSelectorNode2209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0xABA7B4", Offset = "0xABA7B4", VA = "0xABA7B4")]
			private bool BranchSequenceNode2242()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0xABA900", Offset = "0xABA900", VA = "0xABA900")]
			private bool BranchSelectorNode2222()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0xABA980", Offset = "0xABA980", VA = "0xABA980")]
			private bool BranchSequenceNode2252()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0xABAACC", Offset = "0xABAACC", VA = "0xABAACC")]
			private bool BranchSequenceNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0xABAB88", Offset = "0xABAB88", VA = "0xABAB88")]
			private bool BranchSelectorNode988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0xABAC28", Offset = "0xABAC28", VA = "0xABAC28")]
			private bool BranchSequenceNode767()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0xABACAC", Offset = "0xABACAC", VA = "0xABACAC")]
			private bool BranchSequenceNode761()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0xABAD60", Offset = "0xABAD60", VA = "0xABAD60")]
			private bool BranchSelectorNode751()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0xABAE04", Offset = "0xABAE04", VA = "0xABAE04")]
			private bool BranchRandomNode904()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0xABAEC0", Offset = "0xABAEC0", VA = "0xABAEC0")]
			private bool RangeCompareNode1134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0xABAFF8", Offset = "0xABAFF8", VA = "0xABAFF8")]
			private bool BranchRandomNode848()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0xABB058", Offset = "0xABB058", VA = "0xABB058")]
			private bool BranchSelectorNode1025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0xABB118", Offset = "0xABB118", VA = "0xABB118")]
			private bool BranchSequenceNode2249()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0xABB1A0", Offset = "0xABB1A0", VA = "0xABB1A0")]
			private bool BranchSequenceNode2259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0xABB228", Offset = "0xABB228", VA = "0xABB228")]
			private bool BranchSelectorNode935()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0xABB2A4", Offset = "0xABB2A4", VA = "0xABB2A4")]
			private bool BranchSequenceNode981()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0xABB36C", Offset = "0xABB36C", VA = "0xABB36C")]
			private bool BranchSelectorNode1016()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0xABB3FC", Offset = "0xABB3FC", VA = "0xABB3FC")]
			private bool BranchSequenceNode755()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B00")]
			[Address(RVA = "0xABB474", Offset = "0xABB474", VA = "0xABB474")]
			private bool BranchSequenceNode875()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B01")]
			[Address(RVA = "0xABB51C", Offset = "0xABB51C", VA = "0xABB51C")]
			private bool BranchSequenceNode2262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B02")]
			[Address(RVA = "0xABB57C", Offset = "0xABB57C", VA = "0xABB57C")]
			private bool StartAttackNode850()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B03")]
			[Address(RVA = "0xABB5DC", Offset = "0xABB5DC", VA = "0xABB5DC")]
			private bool StartAttackNode821()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B04")]
			[Address(RVA = "0xABB63C", Offset = "0xABB63C", VA = "0xABB63C")]
			private bool StartAttackNode849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B05")]
			[Address(RVA = "0xABB69C", Offset = "0xABB69C", VA = "0xABB69C")]
			private bool BranchSequenceNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B06")]
			[Address(RVA = "0xABB734", Offset = "0xABB734", VA = "0xABB734")]
			private bool BranchSelectorNode1165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B07")]
			[Address(RVA = "0xABB774", Offset = "0xABB774", VA = "0xABB774")]
			private bool BranchSequenceNode1186()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B08")]
			[Address(RVA = "0xABB838", Offset = "0xABB838", VA = "0xABB838")]
			private bool BranchRandomNode938()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B09")]
			[Address(RVA = "0xABB898", Offset = "0xABB898", VA = "0xABB898")]
			private bool BranchSelectorNode1004()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0xABB928", Offset = "0xABB928", VA = "0xABB928")]
			private bool BranchSequenceNode1203()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0xABB9EC", Offset = "0xABB9EC", VA = "0xABB9EC")]
			private bool BranchSequenceNode1015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0xABBAC8", Offset = "0xABBAC8", VA = "0xABBAC8")]
			private bool BranchRandomNode1019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0xABBB28", Offset = "0xABBB28", VA = "0xABBB28")]
			private bool BranchSequenceNode2269()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xABBBB8", Offset = "0xABBBB8", VA = "0xABBBB8")]
			private bool ActionDodge2264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0xABBC18", Offset = "0xABBC18", VA = "0xABBC18")]
			private bool ActionWaitNode2266()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B10")]
			[Address(RVA = "0xABBC78", Offset = "0xABBC78", VA = "0xABBC78")]
			private bool BranchSequenceNode2285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B11")]
			[Address(RVA = "0xABBCD8", Offset = "0xABBCD8", VA = "0xABBCD8")]
			private bool BranchSequenceNode1164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xABBDB4", Offset = "0xABBDB4", VA = "0xABBDB4")]
			private bool BranchSequenceNode1169()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0xABBE90", Offset = "0xABBE90", VA = "0xABBE90")]
			private bool BranchRandomNode1191()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xABBEF0", Offset = "0xABBEF0", VA = "0xABBEF0")]
			private bool StartAttackNode939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xABBF50", Offset = "0xABBF50", VA = "0xABBF50")]
			private bool StartAttackNode940()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xABBFB0", Offset = "0xABBFB0", VA = "0xABBFB0")]
			private bool StartAttackNode941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xABC010", Offset = "0xABC010", VA = "0xABC010")]
			private bool StartAttackNode942()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xABC070", Offset = "0xABC070", VA = "0xABC070")]
			private bool StartAttackNode943()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xABC0D0", Offset = "0xABC0D0", VA = "0xABC0D0")]
			private bool BranchSequenceNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xABC194", Offset = "0xABC194", VA = "0xABC194")]
			private bool BranchSequenceNode1006()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0xABC270", Offset = "0xABC270", VA = "0xABC270")]
			private bool BranchRandomNode1007()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xABC2D0", Offset = "0xABC2D0", VA = "0xABC2D0")]
			private bool BranchRandomNode1206()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xABC330", Offset = "0xABC330", VA = "0xABC330")]
			private bool BranchRandomNode991()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0xABC390", Offset = "0xABC390", VA = "0xABC390")]
			private bool StartAttackNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0xABC3F0", Offset = "0xABC3F0", VA = "0xABC3F0")]
			private bool StartAttackNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xABC450", Offset = "0xABC450", VA = "0xABC450")]
			private bool BranchSelectorNode2271()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B21")]
			[Address(RVA = "0xABC4D0", Offset = "0xABC4D0", VA = "0xABC4D0")]
			private bool BranchSequenceNode2275()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B22")]
			[Address(RVA = "0xABC61C", Offset = "0xABC61C", VA = "0xABC61C")]
			private bool BranchSequenceNode2295()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B23")]
			[Address(RVA = "0xABC6AC", Offset = "0xABC6AC", VA = "0xABC6AC")]
			private bool ActionFlipOver2287()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B24")]
			[Address(RVA = "0xABC70C", Offset = "0xABC70C", VA = "0xABC70C")]
			private bool ActionWaitNode2291()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B25")]
			[Address(RVA = "0xABC76C", Offset = "0xABC76C", VA = "0xABC76C")]
			private bool BranchSequenceNode2301()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B26")]
			[Address(RVA = "0xABC7CC", Offset = "0xABC7CC", VA = "0xABC7CC")]
			private bool BranchSequenceNode2314()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B27")]
			[Address(RVA = "0xABC82C", Offset = "0xABC82C", VA = "0xABC82C")]
			private bool StartAttackNode1188()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B28")]
			[Address(RVA = "0xABC88C", Offset = "0xABC88C", VA = "0xABC88C")]
			private bool StartAttackNode1189()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B29")]
			[Address(RVA = "0xABC8EC", Offset = "0xABC8EC", VA = "0xABC8EC")]
			private bool StartAttackNode1197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0xABC94C", Offset = "0xABC94C", VA = "0xABC94C")]
			private bool BranchRandomNode1196()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0xABC9AC", Offset = "0xABC9AC", VA = "0xABC9AC")]
			private bool BranchRandomNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0xABCA0C", Offset = "0xABCA0C", VA = "0xABCA0C")]
			private bool StartAttackNode1012()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2D")]
			[Address(RVA = "0xABCA6C", Offset = "0xABCA6C", VA = "0xABCA6C")]
			private bool StartAttackNode1013()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0xABCACC", Offset = "0xABCACC", VA = "0xABCACC")]
			private bool StartAttackNode1205()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B2F")]
			[Address(RVA = "0xABCB2C", Offset = "0xABCB2C", VA = "0xABCB2C")]
			private bool StartAttackNode1204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B30")]
			[Address(RVA = "0xABCB8C", Offset = "0xABCB8C", VA = "0xABCB8C")]
			private bool StartAttackNode1207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B31")]
			[Address(RVA = "0xABCBEC", Offset = "0xABCBEC", VA = "0xABCBEC")]
			private bool StartAttackNode1001()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B32")]
			[Address(RVA = "0xABCC4C", Offset = "0xABCC4C", VA = "0xABCC4C")]
			private bool StartAttackNode1000()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B33")]
			[Address(RVA = "0xABCCAC", Offset = "0xABCCAC", VA = "0xABCCAC")]
			private bool StartAttackNode999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B34")]
			[Address(RVA = "0xABCD0C", Offset = "0xABCD0C", VA = "0xABCD0C")]
			private bool StartAttackNode1002()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B35")]
			[Address(RVA = "0xABCD6C", Offset = "0xABCD6C", VA = "0xABCD6C")]
			private bool StartAttackNode1003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B36")]
			[Address(RVA = "0xABCDCC", Offset = "0xABCDCC", VA = "0xABCDCC")]
			private bool BranchSequenceNode2282()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B37")]
			[Address(RVA = "0xABCE54", Offset = "0xABCE54", VA = "0xABCE54")]
			private bool BranchSelectorNode2297()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B38")]
			[Address(RVA = "0xABCED4", Offset = "0xABCED4", VA = "0xABCED4")]
			private bool BranchSequenceNode2327()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B39")]
			[Address(RVA = "0xABD020", Offset = "0xABD020", VA = "0xABD020")]
			private bool BranchSequenceNode2308()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3A")]
			[Address(RVA = "0xABD0B0", Offset = "0xABD0B0", VA = "0xABD0B0")]
			private bool ActionDodge2303()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0xABD110", Offset = "0xABD110", VA = "0xABD110")]
			private bool ActionWaitNode2305()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3C")]
			[Address(RVA = "0xABD170", Offset = "0xABD170", VA = "0xABD170")]
			private bool BranchSequenceNode2321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0xABD200", Offset = "0xABD200", VA = "0xABD200")]
			private bool ActionLateralDisplace2316()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0xABD260", Offset = "0xABD260", VA = "0xABD260")]
			private bool ActionWaitNode2318()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0xABD2C0", Offset = "0xABD2C0", VA = "0xABD2C0")]
			private bool StartAttackNode1198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B40")]
			[Address(RVA = "0xABD320", Offset = "0xABD320", VA = "0xABD320")]
			private bool StartAttackNode1199()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B41")]
			[Address(RVA = "0xABD380", Offset = "0xABD380", VA = "0xABD380")]
			private bool StartAttackNode1200()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B42")]
			[Address(RVA = "0xABD3E0", Offset = "0xABD3E0", VA = "0xABD3E0")]
			private bool StartAttackNode996()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B43")]
			[Address(RVA = "0xABD440", Offset = "0xABD440", VA = "0xABD440")]
			private bool StartAttackNode997()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B44")]
			[Address(RVA = "0xABD4A0", Offset = "0xABD4A0", VA = "0xABD4A0")]
			private bool StartAttackNode998()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B45")]
			[Address(RVA = "0xABD500", Offset = "0xABD500", VA = "0xABD500")]
			private bool BranchSequenceNode2334()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B46")]
			[Address(RVA = "0xABD588", Offset = "0xABD588", VA = "0xABD588")]
			private bool BranchSelectorNode2310()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B47")]
			[Address(RVA = "0xABD608", Offset = "0xABD608", VA = "0xABD608")]
			private bool BranchSequenceNode2337()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B48")]
			[Address(RVA = "0xABD754", Offset = "0xABD754", VA = "0xABD754")]
			private bool BranchSelectorNode2323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B49")]
			[Address(RVA = "0xABD7D4", Offset = "0xABD7D4", VA = "0xABD7D4")]
			private bool BranchSequenceNode2347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0xABD920", Offset = "0xABD920", VA = "0xABD920")]
			private bool BranchSequenceNode2344()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0xABD9A8", Offset = "0xABD9A8", VA = "0xABD9A8")]
			private bool BranchSequenceNode2354()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public BoolVariable Global_DebugSuppressAttacks;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public IntVariable DifficultyLevel;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IntVariable DifficultyLevel_Easy;

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xAA75B0", Offset = "0xAA75B0", VA = "0xAA75B0")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xAA76F0", Offset = "0xAA76F0", VA = "0xAA76F0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xAA77F8", Offset = "0xAA77F8", VA = "0xAA77F8")]
		public SpellswordCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x2000406")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8B7C", Offset = "0x8A8B7C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8B7C", Offset = "0x8A8B7C")]
	public class TrainingDummyCombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005B6")]
		public class TrainingDummyCombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x2000609")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly TrainingDummyCombatantBehavior_hybrid _source;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0xA75918", Offset = "0xA75918", VA = "0xA75918")]
			public TrainingDummyCombatantBehavior_hybridRuntime(TrainingDummyCombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0xA75D9C", Offset = "0xA75D9C", VA = "0xA75D9C", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0xA75978", Offset = "0xA75978", VA = "0xA75978")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0xA75FF4", Offset = "0xA75FF4", VA = "0xA75FF4", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B50")]
			[Address(RVA = "0xA76054", Offset = "0xA76054", VA = "0xA76054")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B51")]
			[Address(RVA = "0xA76134", Offset = "0xA76134", VA = "0xA76134")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B52")]
			[Address(RVA = "0xA76244", Offset = "0xA76244", VA = "0xA76244")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B53")]
			[Address(RVA = "0xA76304", Offset = "0xA76304", VA = "0xA76304")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B54")]
			[Address(RVA = "0xA76354", Offset = "0xA76354", VA = "0xA76354")]
			private bool BranchSelectorNode740()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B55")]
			[Address(RVA = "0xA76420", Offset = "0xA76420", VA = "0xA76420")]
			private bool BranchSelectorNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B56")]
			[Address(RVA = "0xA76454", Offset = "0xA76454", VA = "0xA76454")]
			private bool BranchSelectorNode871()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B57")]
			[Address(RVA = "0xA76494", Offset = "0xA76494", VA = "0xA76494")]
			private bool BranchSelectorNode700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B58")]
			[Address(RVA = "0xA764E4", Offset = "0xA764E4", VA = "0xA764E4")]
			private bool BranchSequenceNode900()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B59")]
			[Address(RVA = "0xA766DC", Offset = "0xA766DC", VA = "0xA766DC")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5A")]
			[Address(RVA = "0xA76798", Offset = "0xA76798", VA = "0xA76798")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5B")]
			[Address(RVA = "0xA76978", Offset = "0xA76978", VA = "0xA76978")]
			private bool BranchSelectorNode1050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0xA76A94", Offset = "0xA76A94", VA = "0xA76A94")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0xA76A9C", Offset = "0xA76A9C", VA = "0xA76A9C")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0xA76AD4", Offset = "0xA76AD4", VA = "0xA76AD4")]
			private bool BranchSelectorNode744()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B5F")]
			[Address(RVA = "0xA76B8C", Offset = "0xA76B8C", VA = "0xA76B8C")]
			private bool BranchSelectorNode745()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B60")]
			[Address(RVA = "0xA76C2C", Offset = "0xA76C2C", VA = "0xA76C2C")]
			private bool BranchSelectorNode746()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B61")]
			[Address(RVA = "0xA76CFC", Offset = "0xA76CFC", VA = "0xA76CFC")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B62")]
			[Address(RVA = "0xA76E0C", Offset = "0xA76E0C", VA = "0xA76E0C")]
			private bool BranchSequenceNode617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B63")]
			[Address(RVA = "0xA76E98", Offset = "0xA76E98", VA = "0xA76E98")]
			private bool BranchSequenceNode872()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B64")]
			[Address(RVA = "0xA76F54", Offset = "0xA76F54", VA = "0xA76F54")]
			private bool BranchSequenceNode873()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B65")]
			[Address(RVA = "0xA77010", Offset = "0xA77010", VA = "0xA77010")]
			private bool BranchSequenceNode695()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B66")]
			[Address(RVA = "0xA770B4", Offset = "0xA770B4", VA = "0xA770B4")]
			private bool BranchSequenceNode703()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B67")]
			[Address(RVA = "0xA771A4", Offset = "0xA771A4", VA = "0xA771A4")]
			private bool BranchSelectorNode717()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B68")]
			[Address(RVA = "0xA771E4", Offset = "0xA771E4", VA = "0xA771E4")]
			private bool BranchSequenceNode901()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B69")]
			[Address(RVA = "0xA77244", Offset = "0xA77244", VA = "0xA77244")]
			private bool BranchSequenceNode909()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0xA772C4", Offset = "0xA772C4", VA = "0xA772C4")]
			private bool BranchSequenceNode910()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0xA77368", Offset = "0xA77368", VA = "0xA77368")]
			private bool BranchSequenceNode904()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0xA773B8", Offset = "0xA773B8", VA = "0xA773B8")]
			private bool BranchSequenceNode913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0xA77458", Offset = "0xA77458", VA = "0xA77458")]
			private bool BranchSequenceNode906()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6E")]
			[Address(RVA = "0xA7748C", Offset = "0xA7748C", VA = "0xA7748C")]
			private bool BranchSequenceNode1128()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B6F")]
			[Address(RVA = "0xA77548", Offset = "0xA77548", VA = "0xA77548")]
			private bool BranchSequenceNode1137()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B70")]
			[Address(RVA = "0xA77694", Offset = "0xA77694", VA = "0xA77694")]
			private bool BranchSequenceNode1040()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B71")]
			[Address(RVA = "0xA777E0", Offset = "0xA777E0", VA = "0xA777E0")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B72")]
			[Address(RVA = "0xA77880", Offset = "0xA77880", VA = "0xA77880")]
			private bool BranchSelectorNode1057()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B73")]
			[Address(RVA = "0xA778EC", Offset = "0xA778EC", VA = "0xA778EC")]
			private bool BranchSelectorNode1058()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B74")]
			[Address(RVA = "0xA77958", Offset = "0xA77958", VA = "0xA77958")]
			private bool BranchSelectorNode1059()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B75")]
			[Address(RVA = "0xA77998", Offset = "0xA77998", VA = "0xA77998")]
			private bool BranchSequenceNode1060()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B76")]
			[Address(RVA = "0xA77AA8", Offset = "0xA77AA8", VA = "0xA77AA8")]
			private bool BranchSequenceNode1061()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B77")]
			[Address(RVA = "0xA77B90", Offset = "0xA77B90", VA = "0xA77B90")]
			private bool BranchSequenceNode1062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B78")]
			[Address(RVA = "0xA77BE8", Offset = "0xA77BE8", VA = "0xA77BE8")]
			private bool BranchSequenceNode1147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B79")]
			[Address(RVA = "0xA77D04", Offset = "0xA77D04", VA = "0xA77D04")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0xA77DC4", Offset = "0xA77DC4", VA = "0xA77DC4")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0xA77DE0", Offset = "0xA77DE0", VA = "0xA77DE0")]
			private bool BranchSequenceNode747()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0xA77E8C", Offset = "0xA77E8C", VA = "0xA77E8C")]
			private bool BranchSequenceNode748()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0xA77F44", Offset = "0xA77F44", VA = "0xA77F44")]
			private bool BranchSequenceNode749()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0xA77FCC", Offset = "0xA77FCC", VA = "0xA77FCC")]
			private bool BranchSequenceNode751()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0xA78030", Offset = "0xA78030", VA = "0xA78030")]
			private bool BranchSequenceNode752()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B80")]
			[Address(RVA = "0xA780B0", Offset = "0xA780B0", VA = "0xA780B0")]
			private bool BranchSequenceNode753()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B81")]
			[Address(RVA = "0xA781F4", Offset = "0xA781F4", VA = "0xA781F4")]
			private bool BranchSequenceNode754()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B82")]
			[Address(RVA = "0xA782D8", Offset = "0xA782D8", VA = "0xA782D8")]
			private bool BranchSelectorNode640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B83")]
			[Address(RVA = "0xA78350", Offset = "0xA78350", VA = "0xA78350")]
			private bool BranchSequenceNode1165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B84")]
			[Address(RVA = "0xA7836C", Offset = "0xA7836C", VA = "0xA7836C")]
			private bool BranchSequenceNode1185()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B85")]
			[Address(RVA = "0xA78388", Offset = "0xA78388", VA = "0xA78388")]
			private bool BranchSequenceNode1155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B86")]
			[Address(RVA = "0xA784D4", Offset = "0xA784D4", VA = "0xA784D4")]
			private bool BranchSequenceNode882()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B87")]
			[Address(RVA = "0xA78560", Offset = "0xA78560", VA = "0xA78560")]
			private bool BranchSelectorNode697()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B88")]
			[Address(RVA = "0xA785E0", Offset = "0xA785E0", VA = "0xA785E0")]
			private bool RestoreEnemyHealthNode707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B89")]
			[Address(RVA = "0xA78640", Offset = "0xA78640", VA = "0xA78640")]
			private bool BranchSequenceNode719()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8A")]
			[Address(RVA = "0xA7877C", Offset = "0xA7877C", VA = "0xA7877C")]
			private bool BranchSequenceNode723()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0xA78914", Offset = "0xA78914", VA = "0xA78914")]
			private bool BranchSequenceNode916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0xA789E8", Offset = "0xA789E8", VA = "0xA789E8")]
			private bool BranchSequenceNode917()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0xA78A48", Offset = "0xA78A48", VA = "0xA78A48")]
			private bool BranchSequenceNode933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8E")]
			[Address(RVA = "0xA78A98", Offset = "0xA78A98", VA = "0xA78A98")]
			private bool BranchSequenceNode920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0xA78AD8", Offset = "0xA78AD8", VA = "0xA78AD8")]
			private bool BranchSequenceNode936()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B90")]
			[Address(RVA = "0xA78B54", Offset = "0xA78B54", VA = "0xA78B54")]
			private bool BranchSequenceNode1205()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B91")]
			[Address(RVA = "0xA78C38", Offset = "0xA78C38", VA = "0xA78C38")]
			private bool BranchSequenceNode923()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B92")]
			[Address(RVA = "0xA78C6C", Offset = "0xA78C6C", VA = "0xA78C6C")]
			private bool BranchSequenceNode924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B93")]
			[Address(RVA = "0xA78CBC", Offset = "0xA78CBC", VA = "0xA78CBC")]
			private bool ActionWaitNode941()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B94")]
			[Address(RVA = "0xA78D1C", Offset = "0xA78D1C", VA = "0xA78D1C")]
			private bool BranchSequenceNode1235()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B95")]
			[Address(RVA = "0xA78E34", Offset = "0xA78E34", VA = "0xA78E34")]
			private bool BranchSequenceNode1242()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B96")]
			[Address(RVA = "0xA78FF0", Offset = "0xA78FF0", VA = "0xA78FF0")]
			private bool BranchSequenceNode928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B97")]
			[Address(RVA = "0xA79108", Offset = "0xA79108", VA = "0xA79108")]
			private bool BranchSequenceNode1132()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B98")]
			[Address(RVA = "0xA791DC", Offset = "0xA791DC", VA = "0xA791DC")]
			private bool BranchSequenceNode1144()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B99")]
			[Address(RVA = "0xA79264", Offset = "0xA79264", VA = "0xA79264")]
			private bool BranchSequenceNode1047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9A")]
			[Address(RVA = "0xA792EC", Offset = "0xA792EC", VA = "0xA792EC")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9B")]
			[Address(RVA = "0xA7934C", Offset = "0xA7934C", VA = "0xA7934C")]
			private bool BranchSequenceNode1063()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9C")]
			[Address(RVA = "0xA793EC", Offset = "0xA793EC", VA = "0xA793EC")]
			private bool BranchSequenceNode1086()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0xA79450", Offset = "0xA79450", VA = "0xA79450")]
			private bool BranchSequenceNode1065()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0xA794F0", Offset = "0xA794F0", VA = "0xA794F0")]
			private bool BranchSequenceNode1089()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0xA79554", Offset = "0xA79554", VA = "0xA79554")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0xA796B8", Offset = "0xA796B8", VA = "0xA796B8")]
			private bool BranchSequenceNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0xA79800", Offset = "0xA79800", VA = "0xA79800")]
			private bool BranchSelectorNode1071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0xA79840", Offset = "0xA79840", VA = "0xA79840")]
			private bool BranchSequenceNode1252()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0xA7998C", Offset = "0xA7998C", VA = "0xA7998C")]
			private bool BranchSelectorNode1077()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0xA79A2C", Offset = "0xA79A2C", VA = "0xA79A2C")]
			private bool BranchSequenceNode1103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0xA79AC4", Offset = "0xA79AC4", VA = "0xA79AC4")]
			private bool BranchSequenceNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0xA79C10", Offset = "0xA79C10", VA = "0xA79C10")]
			private bool BranchSequenceNode1104()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0xA79D88", Offset = "0xA79D88", VA = "0xA79D88")]
			private bool RangeCompareNode1105()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0xA79EB8", Offset = "0xA79EB8", VA = "0xA79EB8")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0xA79F98", Offset = "0xA79F98", VA = "0xA79F98")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0xA79FA0", Offset = "0xA79FA0", VA = "0xA79FA0")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0xA7A044", Offset = "0xA7A044", VA = "0xA7A044")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0xA7A04C", Offset = "0xA7A04C", VA = "0xA7A04C")]
			private bool BranchSequenceNode755()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0xA7A0F4", Offset = "0xA7A0F4", VA = "0xA7A0F4")]
			private bool BranchSequenceNode756()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAE")]
			[Address(RVA = "0xA7A1C4", Offset = "0xA7A1C4", VA = "0xA7A1C4")]
			private bool BranchSelectorNode757()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0xA7A248", Offset = "0xA7A248", VA = "0xA7A248")]
			private bool BranchSequenceNode758()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB0")]
			[Address(RVA = "0xA7A2EC", Offset = "0xA7A2EC", VA = "0xA7A2EC")]
			private bool BranchSelectorNode763()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0xA7A340", Offset = "0xA7A340", VA = "0xA7A340")]
			private bool BranchSelectorNode765()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0xA7A41C", Offset = "0xA7A41C", VA = "0xA7A41C")]
			private bool BranchSelectorNode767()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0xA7A4DC", Offset = "0xA7A4DC", VA = "0xA7A4DC")]
			private bool BranchSelectorNode771()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB4")]
			[Address(RVA = "0xA7A560", Offset = "0xA7A560", VA = "0xA7A560")]
			private bool BranchSequenceNode801()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0xA7A610", Offset = "0xA7A610", VA = "0xA7A610")]
			private bool BranchSequenceNode802()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB6")]
			[Address(RVA = "0xA7A730", Offset = "0xA7A730", VA = "0xA7A730")]
			private bool BranchSequenceNode803()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0xA7A7C4", Offset = "0xA7A7C4", VA = "0xA7A7C4")]
			private bool BranchSequenceNode1167()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0xA7A870", Offset = "0xA7A870", VA = "0xA7A870")]
			private bool BranchSequenceNode1187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0xA7A91C", Offset = "0xA7A91C", VA = "0xA7A91C")]
			private bool BranchSequenceNode1162()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBA")]
			[Address(RVA = "0xA7A9A4", Offset = "0xA7A9A4", VA = "0xA7A9A4")]
			private bool BranchSequenceNode886()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0xA7AA54", Offset = "0xA7AA54", VA = "0xA7AA54")]
			private bool RangeCompareNode718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBC")]
			[Address(RVA = "0xA7AB18", Offset = "0xA7AB18", VA = "0xA7AB18")]
			private bool RangeCompareNode727()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0xA7ABDC", Offset = "0xA7ABDC", VA = "0xA7ABDC")]
			private bool BranchSequenceNode1272()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBE")]
			[Address(RVA = "0xA7ABF8", Offset = "0xA7ABF8", VA = "0xA7ABF8")]
			private bool BranchSequenceNode948()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0xA7AC38", Offset = "0xA7AC38", VA = "0xA7AC38")]
			private bool BranchSelectorNode964()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0xA7AD24", Offset = "0xA7AD24", VA = "0xA7AD24")]
			private bool BranchSequenceNode934()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0xA7ADD8", Offset = "0xA7ADD8", VA = "0xA7ADD8")]
			private bool BranchSequenceNode953()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0xA7AEF8", Offset = "0xA7AEF8", VA = "0xA7AEF8")]
			private bool BranchSequenceNode954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0xA7AFE4", Offset = "0xA7AFE4", VA = "0xA7AFE4")]
			private bool ActionWaitChoiceNode955()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0xA7B044", Offset = "0xA7B044", VA = "0xA7B044")]
			private bool BranchSequenceNode956()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0xA7B0E4", Offset = "0xA7B0E4", VA = "0xA7B0E4")]
			private bool BranchSequenceNode1209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0xA7B164", Offset = "0xA7B164", VA = "0xA7B164")]
			private bool BranchSelectorNode1208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0xA7B1BC", Offset = "0xA7B1BC", VA = "0xA7B1BC")]
			private bool BranchSelectorNode939()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0xA7B1FC", Offset = "0xA7B1FC", VA = "0xA7B1FC")]
			private bool BranchSequenceNode940()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0xA7B294", Offset = "0xA7B294", VA = "0xA7B294")]
			private bool BranchSequenceNode1248()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCA")]
			[Address(RVA = "0xA7B310", Offset = "0xA7B310", VA = "0xA7B310")]
			private bool BranchSequenceNode1106()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0xA7B378", Offset = "0xA7B378", VA = "0xA7B378")]
			private bool RangeCompareNode1107()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCC")]
			[Address(RVA = "0xA7B4B0", Offset = "0xA7B4B0", VA = "0xA7B4B0")]
			private bool BranchSequenceNode1109()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0xA7B518", Offset = "0xA7B518", VA = "0xA7B518")]
			private bool RangeCompareNode1110()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0xA7B650", Offset = "0xA7B650", VA = "0xA7B650")]
			private bool RangeCompareNode1099()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0xA7B788", Offset = "0xA7B788", VA = "0xA7B788")]
			private bool RangeCompareNode1100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD0")]
			[Address(RVA = "0xA7B8C0", Offset = "0xA7B8C0", VA = "0xA7B8C0")]
			private bool BranchSequenceNode1259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0xA7B948", Offset = "0xA7B948", VA = "0xA7B948")]
			private bool RangeCompareNode1102()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD2")]
			[Address(RVA = "0xA7BA80", Offset = "0xA7BA80", VA = "0xA7BA80")]
			private bool BranchSequenceNode1269()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0xA7BB08", Offset = "0xA7BB08", VA = "0xA7BB08")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0xA7BB6C", Offset = "0xA7BB6C", VA = "0xA7BB6C")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0xA7BBA4", Offset = "0xA7BBA4", VA = "0xA7BBA4")]
			private bool BranchSequenceNode804()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD6")]
			[Address(RVA = "0xA7BBF4", Offset = "0xA7BBF4", VA = "0xA7BBF4")]
			private bool BranchSequenceNode783()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0xA7BC84", Offset = "0xA7BC84", VA = "0xA7BC84")]
			private bool BranchSequenceNode784()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD8")]
			[Address(RVA = "0xA7BD14", Offset = "0xA7BD14", VA = "0xA7BD14")]
			private bool BranchSequenceNode785()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0xA7BDA4", Offset = "0xA7BDA4", VA = "0xA7BDA4")]
			private bool BranchSequenceNode786()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xA7BE34", Offset = "0xA7BE34", VA = "0xA7BE34")]
			private bool BranchSequenceNode791()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xA7BEDC", Offset = "0xA7BEDC", VA = "0xA7BEDC")]
			private bool BranchSequenceNode792()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xA7BF1C", Offset = "0xA7BF1C", VA = "0xA7BF1C")]
			private bool BranchSequenceNode797()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xA7BF94", Offset = "0xA7BF94", VA = "0xA7BF94")]
			private bool BranchSequenceNode798()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0xA7C000", Offset = "0xA7C000", VA = "0xA7C000")]
			private bool BranchSequenceNode799()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0xA7C0DC", Offset = "0xA7C0DC", VA = "0xA7C0DC")]
			private bool BranchSequenceNode800()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0xA7C158", Offset = "0xA7C158", VA = "0xA7C158")]
			private bool RangeCompareNode831()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xA7C290", Offset = "0xA7C290", VA = "0xA7C290")]
			private bool BranchSelectorNode832()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xA7C35C", Offset = "0xA7C35C", VA = "0xA7C35C")]
			private bool BranchSequenceNode1168()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xA7C3F0", Offset = "0xA7C3F0", VA = "0xA7C3F0")]
			private bool BranchSequenceNode1177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xA7C48C", Offset = "0xA7C48C", VA = "0xA7C48C")]
			private bool BranchSequenceNode1293()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xA7C548", Offset = "0xA7C548", VA = "0xA7C548")]
			private bool BranchSequenceNode1188()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xA7C5DC", Offset = "0xA7C5DC", VA = "0xA7C5DC")]
			private bool BranchSequenceNode1197()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xA7C678", Offset = "0xA7C678", VA = "0xA7C678")]
			private bool BranchSequenceNode1303()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xA7C734", Offset = "0xA7C734", VA = "0xA7C734")]
			private bool BranchSequenceNode892()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xA7C7D0", Offset = "0xA7C7D0", VA = "0xA7C7D0")]
			private bool BranchSequenceNode1313()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xA7C88C", Offset = "0xA7C88C", VA = "0xA7C88C")]
			private bool BranchSequenceNode1274()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xA7C938", Offset = "0xA7C938", VA = "0xA7C938")]
			private bool BranchSequenceNode962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xA7C9E4", Offset = "0xA7C9E4", VA = "0xA7C9E4")]
			private bool BranchSequenceNode963()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xA7CB18", Offset = "0xA7CB18", VA = "0xA7CB18")]
			private bool BranchSequenceNode999()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xA7CBA8", Offset = "0xA7CBA8", VA = "0xA7CBA8")]
			private bool BranchSequenceNode1009()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xA7CC24", Offset = "0xA7CC24", VA = "0xA7CC24")]
			private bool BranchSequenceNode1322()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xA7CD70", Offset = "0xA7CD70", VA = "0xA7CD70")]
			private bool BranchSequenceNode1333()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xA7CE2C", Offset = "0xA7CE2C", VA = "0xA7CE2C")]
			private bool BranchSelectorNode978()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xA7CEA8", Offset = "0xA7CEA8", VA = "0xA7CEA8")]
			private bool BranchSelectorNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xA7CEE8", Offset = "0xA7CEE8", VA = "0xA7CEE8")]
			private bool BranchSequenceNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xA7CF1C", Offset = "0xA7CF1C", VA = "0xA7CF1C")]
			private bool BranchSelectorNode1215()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xA7CFB4", Offset = "0xA7CFB4", VA = "0xA7CFB4")]
			private bool BranchSequenceNode957()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0xA7D078", Offset = "0xA7D078", VA = "0xA7D078")]
			private bool BranchSequenceNode958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xA7D16C", Offset = "0xA7D16C", VA = "0xA7D16C")]
			private bool RangeCompareNode1123()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF8")]
			[Address(RVA = "0xA7D2A4", Offset = "0xA7D2A4", VA = "0xA7D2A4")]
			private bool RangeCompareNode1125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xA7D3DC", Offset = "0xA7D3DC", VA = "0xA7D3DC")]
			private bool BranchSequenceNode1352()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xA7D528", Offset = "0xA7D528", VA = "0xA7D528")]
			private bool BranchSequenceNode817()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xA7D608", Offset = "0xA7D608", VA = "0xA7D608")]
			private bool BranchSelectorNode818()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xA7D780", Offset = "0xA7D780", VA = "0xA7D780")]
			private bool RangeCompareNode824()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xA7D8B8", Offset = "0xA7D8B8", VA = "0xA7D8B8")]
			private bool BranchSelectorNode828()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xA7D8F8", Offset = "0xA7D8F8", VA = "0xA7D8F8")]
			private bool BranchSequenceNode853()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xA7D970", Offset = "0xA7D970", VA = "0xA7D970")]
			private bool BranchSequenceNode854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xA7D9E8", Offset = "0xA7D9E8", VA = "0xA7D9E8")]
			private bool BranchSelectorNode1178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xA7DA94", Offset = "0xA7DA94", VA = "0xA7DA94")]
			private bool BranchSequenceNode1362()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xA7DBE0", Offset = "0xA7DBE0", VA = "0xA7DBE0")]
			private bool BranchSequenceNode1297()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xA7DCB4", Offset = "0xA7DCB4", VA = "0xA7DCB4")]
			private bool BranchSelectorNode1198()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xA7DD60", Offset = "0xA7DD60", VA = "0xA7DD60")]
			private bool BranchSequenceNode1372()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xA7DEAC", Offset = "0xA7DEAC", VA = "0xA7DEAC")]
			private bool BranchSequenceNode1307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xA7DF80", Offset = "0xA7DF80", VA = "0xA7DF80")]
			private bool BranchSelectorNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xA7E02C", Offset = "0xA7E02C", VA = "0xA7E02C")]
			private bool BranchSequenceNode1382()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xA7E178", Offset = "0xA7E178", VA = "0xA7E178")]
			private bool BranchSequenceNode1317()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xA7E24C", Offset = "0xA7E24C", VA = "0xA7E24C")]
			private bool BranchSequenceNode1275()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xA7E2E0", Offset = "0xA7E2E0", VA = "0xA7E2E0")]
			private bool BranchSequenceNode1284()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xA7E37C", Offset = "0xA7E37C", VA = "0xA7E37C")]
			private bool BranchSequenceNode1343()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xA7E438", Offset = "0xA7E438", VA = "0xA7E438")]
			private bool BranchSelectorNode1005()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xA7E4E0", Offset = "0xA7E4E0", VA = "0xA7E4E0")]
			private bool BranchSequenceNode1006()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xA7E5A0", Offset = "0xA7E5A0", VA = "0xA7E5A0")]
			private bool ActionWaitNode1021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xA7E600", Offset = "0xA7E600", VA = "0xA7E600")]
			private bool BranchSequenceNode1008()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xA7E680", Offset = "0xA7E680", VA = "0xA7E680")]
			private bool BranchSequenceNode1025()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C11")]
			[Address(RVA = "0xA7E730", Offset = "0xA7E730", VA = "0xA7E730")]
			private bool ActionWaitChoiceNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xA7E790", Offset = "0xA7E790", VA = "0xA7E790")]
			private bool BranchSequenceNode1027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C13")]
			[Address(RVA = "0xA7E7D8", Offset = "0xA7E7D8", VA = "0xA7E7D8")]
			private bool BranchSequenceNode1329()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xA7E860", Offset = "0xA7E860", VA = "0xA7E860")]
			private bool BranchSequenceNode1337()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xA7E934", Offset = "0xA7E934", VA = "0xA7E934")]
			private bool BranchSequenceNode1001()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xA7E9B8", Offset = "0xA7E9B8", VA = "0xA7E9B8")]
			private bool BranchSequenceNode1003()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C17")]
			[Address(RVA = "0xA7EA8C", Offset = "0xA7EA8C", VA = "0xA7EA8C")]
			private bool BranchSequenceNode1004()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xA7EB40", Offset = "0xA7EB40", VA = "0xA7EB40")]
			private bool BranchSequenceNode1216()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C19")]
			[Address(RVA = "0xA7EB78", Offset = "0xA7EB78", VA = "0xA7EB78")]
			private bool BranchSequenceNode1217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0xA7EBBC", Offset = "0xA7EBBC", VA = "0xA7EBBC")]
			private bool BranchSequenceNode1218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0xA7ED30", Offset = "0xA7ED30", VA = "0xA7ED30")]
			private bool BranchSequenceNode1230()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0xA7EDDC", Offset = "0xA7EDDC", VA = "0xA7EDDC")]
			private bool BranchSequenceNode1359()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0xA7EE64", Offset = "0xA7EE64", VA = "0xA7EE64")]
			private bool BranchSequenceNode849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0xA7EED0", Offset = "0xA7EED0", VA = "0xA7EED0")]
			private bool BranchSequenceNode851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0xA7EFAC", Offset = "0xA7EFAC", VA = "0xA7EFAC")]
			private bool BranchSequenceNode852()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C20")]
			[Address(RVA = "0xA7F0F8", Offset = "0xA7F0F8", VA = "0xA7F0F8")]
			private bool BranchSequenceNode1369()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C21")]
			[Address(RVA = "0xA7F180", Offset = "0xA7F180", VA = "0xA7F180")]
			private bool BranchSequenceNode1379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C22")]
			[Address(RVA = "0xA7F208", Offset = "0xA7F208", VA = "0xA7F208")]
			private bool BranchSequenceNode1389()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C23")]
			[Address(RVA = "0xA7F290", Offset = "0xA7F290", VA = "0xA7F290")]
			private bool BranchSelectorNode1285()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0xA7F33C", Offset = "0xA7F33C", VA = "0xA7F33C")]
			private bool BranchSequenceNode1392()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C25")]
			[Address(RVA = "0xA7F488", Offset = "0xA7F488", VA = "0xA7F488")]
			private bool BranchSequenceNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C26")]
			[Address(RVA = "0xA7F55C", Offset = "0xA7F55C", VA = "0xA7F55C")]
			private bool BranchSequenceNode1402()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C27")]
			[Address(RVA = "0xA7F674", Offset = "0xA7F674", VA = "0xA7F674")]
			private bool BranchSequenceNode1409()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C28")]
			[Address(RVA = "0xA7F7C0", Offset = "0xA7F7C0", VA = "0xA7F7C0")]
			private bool BranchSelectorNode1033()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C29")]
			[Address(RVA = "0xA7F800", Offset = "0xA7F800", VA = "0xA7F800")]
			private bool RangeCompareNode858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C2A")]
			[Address(RVA = "0xA7F938", Offset = "0xA7F938", VA = "0xA7F938")]
			private bool BranchSequenceNode1399()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0xA7F9C0", Offset = "0xA7F9C0", VA = "0xA7F9C0")]
			private bool BranchSequenceNode1416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0xA7FA48", Offset = "0xA7FA48", VA = "0xA7FA48")]
			private bool BranchSequenceNode1034()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0xA7FB1C", Offset = "0xA7FB1C", VA = "0xA7FB1C")]
			private bool BranchSequenceNode1035()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xA75790", Offset = "0xA75790", VA = "0xA75790")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xA75868", Offset = "0xA75868", VA = "0xA75868", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0xA75970", Offset = "0xA75970", VA = "0xA75970")]
		public TrainingDummyCombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x2000407")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8C38", Offset = "0x8A8C38")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8C38", Offset = "0x8A8C38")]
	public class TriggerFumbleLongNode : GeneratedActionNode
	{
		[Token(Token = "0x20005B7")]
		public class TriggerFumbleLongNodeRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly TriggerFumbleLongNode _source;

			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0xA7FCEC", Offset = "0xA7FCEC", VA = "0xA7FCEC")]
			public TriggerFumbleLongNodeRuntime(TriggerFumbleLongNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C2F")]
			[Address(RVA = "0xA7FD28", Offset = "0xA7FD28", VA = "0xA7FD28", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C30")]
			[Address(RVA = "0xA7FDF0", Offset = "0xA7FDF0", VA = "0xA7FDF0")]
			private bool BranchSequenceNode27()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C31")]
			[Address(RVA = "0xA7FE84", Offset = "0xA7FE84", VA = "0xA7FE84")]
			private bool BranchSequenceNode24()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C32")]
			[Address(RVA = "0xA7FF20", Offset = "0xA7FF20", VA = "0xA7FF20")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C33")]
			[Address(RVA = "0xA7FFDC", Offset = "0xA7FFDC", VA = "0xA7FFDC")]
			private bool BranchSelectorNode30()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C34")]
			[Address(RVA = "0xA80088", Offset = "0xA80088", VA = "0xA80088")]
			private bool BranchSequenceNode44()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C35")]
			[Address(RVA = "0xA801D4", Offset = "0xA801D4", VA = "0xA801D4")]
			private bool BranchSequenceNode39()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C36")]
			[Address(RVA = "0xA802A8", Offset = "0xA802A8", VA = "0xA802A8")]
			private bool BranchSequenceNode51()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xA7FC28", Offset = "0xA7FC28", VA = "0xA7FC28", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xA7FD20", Offset = "0xA7FD20", VA = "0xA7FD20")]
		public TriggerFumbleLongNode()
		{
		}
	}
	[Token(Token = "0x2000408")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8CF4", Offset = "0x8A8CF4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8CF4", Offset = "0x8A8CF4")]
	public class TriggerFumbleNode : GeneratedActionNode
	{
		[Token(Token = "0x20005B8")]
		public class TriggerFumbleNodeRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly TriggerFumbleNode _source;

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0xA803F4", Offset = "0xA803F4", VA = "0xA803F4")]
			public TriggerFumbleNodeRuntime(TriggerFumbleNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C38")]
			[Address(RVA = "0xA80430", Offset = "0xA80430", VA = "0xA80430", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C39")]
			[Address(RVA = "0xA8044C", Offset = "0xA8044C", VA = "0xA8044C")]
			private bool BranchSequenceNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0xA804F8", Offset = "0xA804F8", VA = "0xA804F8")]
			private bool BranchSequenceNode27()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0xA8058C", Offset = "0xA8058C", VA = "0xA8058C")]
			private bool BranchSequenceNode24()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0xA80628", Offset = "0xA80628", VA = "0xA80628")]
			private bool BranchSequenceNode36()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0xA806E4", Offset = "0xA806E4", VA = "0xA806E4")]
			private bool BranchSelectorNode30()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3E")]
			[Address(RVA = "0xA80790", Offset = "0xA80790", VA = "0xA80790")]
			private bool BranchSequenceNode45()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0xA808DC", Offset = "0xA808DC", VA = "0xA808DC")]
			private bool BranchSequenceNode40()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C40")]
			[Address(RVA = "0xA809B0", Offset = "0xA809B0", VA = "0xA809B0")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xA80330", Offset = "0xA80330", VA = "0xA80330", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0xA80428", Offset = "0xA80428", VA = "0xA80428")]
		public TriggerFumbleNode()
		{
		}
	}
	[Token(Token = "0x2000409")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8DB0", Offset = "0x8A8DB0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8DB0", Offset = "0x8A8DB0")]
	public class TutorialHusk_Blocking_CombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005B9")]
		public class TutorialHusk_Blocking_CombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x200060A")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly TutorialHusk_Blocking_CombatantBehavior_hybrid _source;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x6002C41")]
			[Address(RVA = "0xA80E8C", Offset = "0xA80E8C", VA = "0xA80E8C")]
			public TutorialHusk_Blocking_CombatantBehavior_hybridRuntime(TutorialHusk_Blocking_CombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002C42")]
			[Address(RVA = "0xA815F8", Offset = "0xA815F8", VA = "0xA815F8", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6002C43")]
			[Address(RVA = "0xA80EEC", Offset = "0xA80EEC", VA = "0xA80EEC")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C44")]
			[Address(RVA = "0xA81628", Offset = "0xA81628", VA = "0xA81628", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C45")]
			[Address(RVA = "0xA81688", Offset = "0xA81688", VA = "0xA81688")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C46")]
			[Address(RVA = "0xA81760", Offset = "0xA81760", VA = "0xA81760")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C47")]
			[Address(RVA = "0xA818C4", Offset = "0xA818C4", VA = "0xA818C4")]
			private bool BranchSequenceNode859()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C48")]
			[Address(RVA = "0xA81930", Offset = "0xA81930", VA = "0xA81930")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C49")]
			[Address(RVA = "0xA81A20", Offset = "0xA81A20", VA = "0xA81A20")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0xA81AC4", Offset = "0xA81AC4", VA = "0xA81AC4")]
			private bool BranchSelectorNode870()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0xA81B90", Offset = "0xA81B90", VA = "0xA81B90")]
			private bool BranchSelectorNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4C")]
			[Address(RVA = "0xA81BD0", Offset = "0xA81BD0", VA = "0xA81BD0")]
			private bool BranchSelectorNode735()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0xA81C24", Offset = "0xA81C24", VA = "0xA81C24")]
			private bool BranchSelectorNode752()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4E")]
			[Address(RVA = "0xA81C88", Offset = "0xA81C88", VA = "0xA81C88")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0xA81D44", Offset = "0xA81D44", VA = "0xA81D44")]
			private bool BranchSequenceNode103()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C50")]
			[Address(RVA = "0xA81F08", Offset = "0xA81F08", VA = "0xA81F08")]
			private bool BranchSelectorNode1011()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C51")]
			[Address(RVA = "0xA82024", Offset = "0xA82024", VA = "0xA82024")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C52")]
			[Address(RVA = "0xA8202C", Offset = "0xA8202C", VA = "0xA8202C")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C53")]
			[Address(RVA = "0xA820B8", Offset = "0xA820B8", VA = "0xA820B8")]
			private bool BranchSelectorNode874()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C54")]
			[Address(RVA = "0xA82170", Offset = "0xA82170", VA = "0xA82170")]
			private bool BranchSelectorNode875()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C55")]
			[Address(RVA = "0xA82210", Offset = "0xA82210", VA = "0xA82210")]
			private bool BranchSelectorNode876()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C56")]
			[Address(RVA = "0xA822E0", Offset = "0xA822E0", VA = "0xA822E0")]
			private bool BranchSequenceNode111()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C57")]
			[Address(RVA = "0xA82410", Offset = "0xA82410", VA = "0xA82410")]
			private bool BranchSequenceNode617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C58")]
			[Address(RVA = "0xA8249C", Offset = "0xA8249C", VA = "0xA8249C")]
			private bool BranchSequenceNode1116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C59")]
			[Address(RVA = "0xA82618", Offset = "0xA82618", VA = "0xA82618")]
			private bool BranchSelectorNode1125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5A")]
			[Address(RVA = "0xA82658", Offset = "0xA82658", VA = "0xA82658")]
			private bool BranchSelectorNode738()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0xA82698", Offset = "0xA82698", VA = "0xA82698")]
			private bool BranchSequenceNode755()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0xA827A0", Offset = "0xA827A0", VA = "0xA827A0")]
			private bool BranchSequenceNode798()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0xA828A0", Offset = "0xA828A0", VA = "0xA828A0")]
			private bool BranchSequenceNode803()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5E")]
			[Address(RVA = "0xA82970", Offset = "0xA82970", VA = "0xA82970")]
			private bool BranchSequenceNode806()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0xA82A78", Offset = "0xA82A78", VA = "0xA82A78")]
			private bool BranchSequenceNode834()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C60")]
			[Address(RVA = "0xA82B4C", Offset = "0xA82B4C", VA = "0xA82B4C")]
			private bool BranchSequenceNode1154()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C61")]
			[Address(RVA = "0xA82D44", Offset = "0xA82D44", VA = "0xA82D44")]
			private bool BranchSequenceNode1089()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C62")]
			[Address(RVA = "0xA82E00", Offset = "0xA82E00", VA = "0xA82E00")]
			private bool BranchSequenceNode1098()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C63")]
			[Address(RVA = "0xA82F4C", Offset = "0xA82F4C", VA = "0xA82F4C")]
			private bool BranchSequenceNode1001()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C64")]
			[Address(RVA = "0xA83098", Offset = "0xA83098", VA = "0xA83098")]
			private bool BranchSelectorNode865()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C65")]
			[Address(RVA = "0xA83130", Offset = "0xA83130", VA = "0xA83130")]
			private bool BranchSelectorNode1018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C66")]
			[Address(RVA = "0xA8319C", Offset = "0xA8319C", VA = "0xA8319C")]
			private bool BranchSelectorNode1019()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C67")]
			[Address(RVA = "0xA83208", Offset = "0xA83208", VA = "0xA83208")]
			private bool BranchSelectorNode1020()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C68")]
			[Address(RVA = "0xA83248", Offset = "0xA83248", VA = "0xA83248")]
			private bool BranchSequenceNode1021()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C69")]
			[Address(RVA = "0xA83358", Offset = "0xA83358", VA = "0xA83358")]
			private bool BranchSequenceNode1022()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6A")]
			[Address(RVA = "0xA83440", Offset = "0xA83440", VA = "0xA83440")]
			private bool BranchSequenceNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0xA83498", Offset = "0xA83498", VA = "0xA83498")]
			private bool BranchSequenceNode1108()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6C")]
			[Address(RVA = "0xA835B4", Offset = "0xA835B4", VA = "0xA835B4")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0xA83674", Offset = "0xA83674", VA = "0xA83674")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0xA836DC", Offset = "0xA836DC", VA = "0xA836DC")]
			private bool BranchSequenceNode877()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0xA83788", Offset = "0xA83788", VA = "0xA83788")]
			private bool BranchSequenceNode878()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C70")]
			[Address(RVA = "0xA83840", Offset = "0xA83840", VA = "0xA83840")]
			private bool BranchSequenceNode879()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C71")]
			[Address(RVA = "0xA838C8", Offset = "0xA838C8", VA = "0xA838C8")]
			private bool BranchSequenceNode881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C72")]
			[Address(RVA = "0xA8392C", Offset = "0xA8392C", VA = "0xA8392C")]
			private bool BranchSequenceNode882()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C73")]
			[Address(RVA = "0xA839AC", Offset = "0xA839AC", VA = "0xA839AC")]
			private bool BranchSequenceNode883()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C74")]
			[Address(RVA = "0xA83AF0", Offset = "0xA83AF0", VA = "0xA83AF0")]
			private bool BranchSequenceNode884()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C75")]
			[Address(RVA = "0xA83BD4", Offset = "0xA83BD4", VA = "0xA83BD4")]
			private bool BranchSelectorNode640()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C76")]
			[Address(RVA = "0xA83C4C", Offset = "0xA83C4C", VA = "0xA83C4C")]
			private bool BranchSequenceNode763()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C77")]
			[Address(RVA = "0xA83CA8", Offset = "0xA83CA8", VA = "0xA83CA8")]
			private bool BranchSequenceNode1294()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C78")]
			[Address(RVA = "0xA83CC4", Offset = "0xA83CC4", VA = "0xA83CC4")]
			private bool BranchSequenceNode1126()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C79")]
			[Address(RVA = "0xA83D80", Offset = "0xA83D80", VA = "0xA83D80")]
			private bool BranchSequenceNode1127()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7A")]
			[Address(RVA = "0xA83E3C", Offset = "0xA83E3C", VA = "0xA83E3C")]
			private bool BranchSequenceNode739()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7B")]
			[Address(RVA = "0xA83EE8", Offset = "0xA83EE8", VA = "0xA83EE8")]
			private bool BranchSequenceNode742()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7C")]
			[Address(RVA = "0xA83F70", Offset = "0xA83F70", VA = "0xA83F70")]
			private bool BranchSequenceNode812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7D")]
			[Address(RVA = "0xA83FE4", Offset = "0xA83FE4", VA = "0xA83FE4")]
			private bool ActionSendEventNode801()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7E")]
			[Address(RVA = "0xA84044", Offset = "0xA84044", VA = "0xA84044")]
			private bool ActionSendEventNode805()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C7F")]
			[Address(RVA = "0xA840A4", Offset = "0xA840A4", VA = "0xA840A4")]
			private bool ActionSendEventNode810()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C80")]
			[Address(RVA = "0xA84104", Offset = "0xA84104", VA = "0xA84104")]
			private bool ActionSendEventNode836()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C81")]
			[Address(RVA = "0xA84164", Offset = "0xA84164", VA = "0xA84164")]
			private bool BranchSequenceNode1155()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C82")]
			[Address(RVA = "0xA841C4", Offset = "0xA841C4", VA = "0xA841C4")]
			private bool BranchSequenceNode1163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C83")]
			[Address(RVA = "0xA84244", Offset = "0xA84244", VA = "0xA84244")]
			private bool BranchSequenceNode1164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C84")]
			[Address(RVA = "0xA842E8", Offset = "0xA842E8", VA = "0xA842E8")]
			private bool BranchSequenceNode1158()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C85")]
			[Address(RVA = "0xA84338", Offset = "0xA84338", VA = "0xA84338")]
			private bool BranchSequenceNode1167()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C86")]
			[Address(RVA = "0xA843D8", Offset = "0xA843D8", VA = "0xA843D8")]
			private bool BranchSequenceNode1160()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C87")]
			[Address(RVA = "0xA8440C", Offset = "0xA8440C", VA = "0xA8440C")]
			private bool BranchSequenceNode1093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C88")]
			[Address(RVA = "0xA844E0", Offset = "0xA844E0", VA = "0xA844E0")]
			private bool BranchSequenceNode1105()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C89")]
			[Address(RVA = "0xA84568", Offset = "0xA84568", VA = "0xA84568")]
			private bool BranchSequenceNode1008()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8A")]
			[Address(RVA = "0xA845F0", Offset = "0xA845F0", VA = "0xA845F0")]
			private bool BranchSequenceNode459()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8B")]
			[Address(RVA = "0xA8466C", Offset = "0xA8466C", VA = "0xA8466C")]
			private bool BranchSequenceNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8C")]
			[Address(RVA = "0xA8470C", Offset = "0xA8470C", VA = "0xA8470C")]
			private bool BranchSequenceNode1047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8D")]
			[Address(RVA = "0xA84770", Offset = "0xA84770", VA = "0xA84770")]
			private bool BranchSequenceNode1026()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8E")]
			[Address(RVA = "0xA84810", Offset = "0xA84810", VA = "0xA84810")]
			private bool BranchSequenceNode1050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C8F")]
			[Address(RVA = "0xA84874", Offset = "0xA84874", VA = "0xA84874")]
			private bool BranchSequenceNode1028()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C90")]
			[Address(RVA = "0xA849D8", Offset = "0xA849D8", VA = "0xA849D8")]
			private bool BranchSequenceNode1029()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C91")]
			[Address(RVA = "0xA84B20", Offset = "0xA84B20", VA = "0xA84B20")]
			private bool BranchSelectorNode1032()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C92")]
			[Address(RVA = "0xA84B60", Offset = "0xA84B60", VA = "0xA84B60")]
			private bool BranchSequenceNode1314()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C93")]
			[Address(RVA = "0xA84CAC", Offset = "0xA84CAC", VA = "0xA84CAC")]
			private bool BranchSelectorNode1038()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C94")]
			[Address(RVA = "0xA84D4C", Offset = "0xA84D4C", VA = "0xA84D4C")]
			private bool BranchSequenceNode1064()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C95")]
			[Address(RVA = "0xA84DE4", Offset = "0xA84DE4", VA = "0xA84DE4")]
			private bool BranchSequenceNode1324()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C96")]
			[Address(RVA = "0xA84F30", Offset = "0xA84F30", VA = "0xA84F30")]
			private bool BranchSequenceNode1065()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C97")]
			[Address(RVA = "0xA850A8", Offset = "0xA850A8", VA = "0xA850A8")]
			private bool RangeCompareNode1066()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C98")]
			[Address(RVA = "0xA851D8", Offset = "0xA851D8", VA = "0xA851D8")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C99")]
			[Address(RVA = "0xA852E4", Offset = "0xA852E4", VA = "0xA852E4")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9A")]
			[Address(RVA = "0xA85420", Offset = "0xA85420", VA = "0xA85420")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9B")]
			[Address(RVA = "0xA85480", Offset = "0xA85480", VA = "0xA85480")]
			private bool BranchSequenceNode885()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9C")]
			[Address(RVA = "0xA85528", Offset = "0xA85528", VA = "0xA85528")]
			private bool BranchSequenceNode886()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9D")]
			[Address(RVA = "0xA855F8", Offset = "0xA855F8", VA = "0xA855F8")]
			private bool BranchSelectorNode887()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9E")]
			[Address(RVA = "0xA8567C", Offset = "0xA8567C", VA = "0xA8567C")]
			private bool BranchSequenceNode888()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002C9F")]
			[Address(RVA = "0xA85720", Offset = "0xA85720", VA = "0xA85720")]
			private bool BranchSelectorNode893()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA0")]
			[Address(RVA = "0xA85774", Offset = "0xA85774", VA = "0xA85774")]
			private bool BranchSelectorNode895()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA1")]
			[Address(RVA = "0xA85850", Offset = "0xA85850", VA = "0xA85850")]
			private bool BranchSelectorNode897()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA2")]
			[Address(RVA = "0xA85910", Offset = "0xA85910", VA = "0xA85910")]
			private bool BranchSelectorNode901()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA3")]
			[Address(RVA = "0xA85994", Offset = "0xA85994", VA = "0xA85994")]
			private bool BranchSequenceNode931()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA4")]
			[Address(RVA = "0xA85A44", Offset = "0xA85A44", VA = "0xA85A44")]
			private bool BranchSequenceNode932()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA5")]
			[Address(RVA = "0xA85B64", Offset = "0xA85B64", VA = "0xA85B64")]
			private bool BranchSequenceNode933()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA6")]
			[Address(RVA = "0xA85BF8", Offset = "0xA85BF8", VA = "0xA85BF8")]
			private bool BranchSequenceNode1344()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA7")]
			[Address(RVA = "0xA85C14", Offset = "0xA85C14", VA = "0xA85C14")]
			private bool BranchSequenceNode1296()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA8")]
			[Address(RVA = "0xA85CC0", Offset = "0xA85CC0", VA = "0xA85CC0")]
			private bool BranchSequenceNode1334()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CA9")]
			[Address(RVA = "0xA85E0C", Offset = "0xA85E0C", VA = "0xA85E0C")]
			private bool BranchSequenceNode1136()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAA")]
			[Address(RVA = "0xA85E98", Offset = "0xA85E98", VA = "0xA85E98")]
			private bool BranchSequenceNode791()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAB")]
			[Address(RVA = "0xA85F3C", Offset = "0xA85F3C", VA = "0xA85F3C")]
			private bool BranchSequenceNode1170()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAC")]
			[Address(RVA = "0xA86010", Offset = "0xA86010", VA = "0xA86010")]
			private bool BranchSequenceNode1171()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAD")]
			[Address(RVA = "0xA86070", Offset = "0xA86070", VA = "0xA86070")]
			private bool BranchSequenceNode1187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAE")]
			[Address(RVA = "0xA860C0", Offset = "0xA860C0", VA = "0xA860C0")]
			private bool BranchSequenceNode1174()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CAF")]
			[Address(RVA = "0xA86100", Offset = "0xA86100", VA = "0xA86100")]
			private bool BranchSequenceNode1190()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB0")]
			[Address(RVA = "0xA8617C", Offset = "0xA8617C", VA = "0xA8617C")]
			private bool BranchSequenceNode1364()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB1")]
			[Address(RVA = "0xA86260", Offset = "0xA86260", VA = "0xA86260")]
			private bool BranchSequenceNode1177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB2")]
			[Address(RVA = "0xA86294", Offset = "0xA86294", VA = "0xA86294")]
			private bool BranchSequenceNode1178()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB3")]
			[Address(RVA = "0xA862E4", Offset = "0xA862E4", VA = "0xA862E4")]
			private bool ActionWaitNode1195()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB4")]
			[Address(RVA = "0xA86344", Offset = "0xA86344", VA = "0xA86344")]
			private bool BranchSequenceNode1394()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB5")]
			[Address(RVA = "0xA8645C", Offset = "0xA8645C", VA = "0xA8645C")]
			private bool BranchSequenceNode1401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB6")]
			[Address(RVA = "0xA86618", Offset = "0xA86618", VA = "0xA86618")]
			private bool BranchSequenceNode1182()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB7")]
			[Address(RVA = "0xA86730", Offset = "0xA86730", VA = "0xA86730")]
			private bool BranchSequenceNode837()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB8")]
			[Address(RVA = "0xA867E0", Offset = "0xA867E0", VA = "0xA867E0")]
			private bool ActionWaitNode461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CB9")]
			[Address(RVA = "0xA86840", Offset = "0xA86840", VA = "0xA86840")]
			private bool BranchSequenceNode844()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBA")]
			[Address(RVA = "0xA868A0", Offset = "0xA868A0", VA = "0xA868A0")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBB")]
			[Address(RVA = "0xA86908", Offset = "0xA86908", VA = "0xA86908")]
			private bool RangeCompareNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBC")]
			[Address(RVA = "0xA86A40", Offset = "0xA86A40", VA = "0xA86A40")]
			private bool BranchSequenceNode1070()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBD")]
			[Address(RVA = "0xA86AA8", Offset = "0xA86AA8", VA = "0xA86AA8")]
			private bool RangeCompareNode1071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBE")]
			[Address(RVA = "0xA86BE0", Offset = "0xA86BE0", VA = "0xA86BE0")]
			private bool RangeCompareNode1060()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CBF")]
			[Address(RVA = "0xA86D18", Offset = "0xA86D18", VA = "0xA86D18")]
			private bool RangeCompareNode1061()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC0")]
			[Address(RVA = "0xA86E50", Offset = "0xA86E50", VA = "0xA86E50")]
			private bool BranchSequenceNode1321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC1")]
			[Address(RVA = "0xA86ED8", Offset = "0xA86ED8", VA = "0xA86ED8")]
			private bool RangeCompareNode1063()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC2")]
			[Address(RVA = "0xA87010", Offset = "0xA87010", VA = "0xA87010")]
			private bool BranchSequenceNode1331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC3")]
			[Address(RVA = "0xA87098", Offset = "0xA87098", VA = "0xA87098")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC4")]
			[Address(RVA = "0xA870FC", Offset = "0xA870FC", VA = "0xA870FC")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC5")]
			[Address(RVA = "0xA8717C", Offset = "0xA8717C", VA = "0xA8717C")]
			private bool BranchSequenceNode829()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC6")]
			[Address(RVA = "0xA87228", Offset = "0xA87228", VA = "0xA87228")]
			private bool BranchSequenceNode207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC7")]
			[Address(RVA = "0xA87288", Offset = "0xA87288", VA = "0xA87288")]
			private bool BranchSequenceNode116()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC8")]
			[Address(RVA = "0xA87304", Offset = "0xA87304", VA = "0xA87304")]
			private bool BranchSelectorNode378()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CC9")]
			[Address(RVA = "0xA8737C", Offset = "0xA8737C", VA = "0xA8737C")]
			private bool BranchSequenceNode934()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCA")]
			[Address(RVA = "0xA873CC", Offset = "0xA873CC", VA = "0xA873CC")]
			private bool BranchSequenceNode913()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCB")]
			[Address(RVA = "0xA8745C", Offset = "0xA8745C", VA = "0xA8745C")]
			private bool BranchSequenceNode914()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCC")]
			[Address(RVA = "0xA874EC", Offset = "0xA874EC", VA = "0xA874EC")]
			private bool BranchSequenceNode915()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCD")]
			[Address(RVA = "0xA8757C", Offset = "0xA8757C", VA = "0xA8757C")]
			private bool BranchSequenceNode916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCE")]
			[Address(RVA = "0xA8760C", Offset = "0xA8760C", VA = "0xA8760C")]
			private bool BranchSequenceNode921()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CCF")]
			[Address(RVA = "0xA876B4", Offset = "0xA876B4", VA = "0xA876B4")]
			private bool BranchSequenceNode922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD0")]
			[Address(RVA = "0xA876F4", Offset = "0xA876F4", VA = "0xA876F4")]
			private bool BranchSequenceNode927()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD1")]
			[Address(RVA = "0xA8776C", Offset = "0xA8776C", VA = "0xA8776C")]
			private bool BranchSequenceNode928()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD2")]
			[Address(RVA = "0xA877D8", Offset = "0xA877D8", VA = "0xA877D8")]
			private bool BranchSequenceNode929()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD3")]
			[Address(RVA = "0xA878B4", Offset = "0xA878B4", VA = "0xA878B4")]
			private bool BranchSequenceNode930()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD4")]
			[Address(RVA = "0xA87930", Offset = "0xA87930", VA = "0xA87930")]
			private bool RangeCompareNode961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD5")]
			[Address(RVA = "0xA87A68", Offset = "0xA87A68", VA = "0xA87A68")]
			private bool BranchSelectorNode962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD6")]
			[Address(RVA = "0xA87B34", Offset = "0xA87B34", VA = "0xA87B34")]
			private bool BranchSequenceNode1346()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD7")]
			[Address(RVA = "0xA87BE0", Offset = "0xA87BE0", VA = "0xA87BE0")]
			private bool BranchSequenceNode1297()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD8")]
			[Address(RVA = "0xA87C74", Offset = "0xA87C74", VA = "0xA87C74")]
			private bool BranchSequenceNode1306()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CD9")]
			[Address(RVA = "0xA87D10", Offset = "0xA87D10", VA = "0xA87D10")]
			private bool BranchSequenceNode1412()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDA")]
			[Address(RVA = "0xA87DCC", Offset = "0xA87DCC", VA = "0xA87DCC")]
			private bool BranchSequenceNode1341()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDB")]
			[Address(RVA = "0xA87E54", Offset = "0xA87E54", VA = "0xA87E54")]
			private bool BranchSequenceNode1140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDC")]
			[Address(RVA = "0xA87F04", Offset = "0xA87F04", VA = "0xA87F04")]
			private bool BranchSequenceNode1421()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDD")]
			[Address(RVA = "0xA87F20", Offset = "0xA87F20", VA = "0xA87F20")]
			private bool BranchSequenceNode1202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDE")]
			[Address(RVA = "0xA87F60", Offset = "0xA87F60", VA = "0xA87F60")]
			private bool BranchSelectorNode1218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CDF")]
			[Address(RVA = "0xA8804C", Offset = "0xA8804C", VA = "0xA8804C")]
			private bool BranchSequenceNode1188()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE0")]
			[Address(RVA = "0xA88100", Offset = "0xA88100", VA = "0xA88100")]
			private bool BranchSequenceNode1207()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE1")]
			[Address(RVA = "0xA88220", Offset = "0xA88220", VA = "0xA88220")]
			private bool BranchSequenceNode1208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE2")]
			[Address(RVA = "0xA8830C", Offset = "0xA8830C", VA = "0xA8830C")]
			private bool ActionWaitChoiceNode1209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE3")]
			[Address(RVA = "0xA8836C", Offset = "0xA8836C", VA = "0xA8836C")]
			private bool BranchSequenceNode1210()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE4")]
			[Address(RVA = "0xA8840C", Offset = "0xA8840C", VA = "0xA8840C")]
			private bool BranchSequenceNode1368()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE5")]
			[Address(RVA = "0xA8848C", Offset = "0xA8848C", VA = "0xA8848C")]
			private bool BranchSelectorNode1367()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE6")]
			[Address(RVA = "0xA884E4", Offset = "0xA884E4", VA = "0xA884E4")]
			private bool BranchSelectorNode1193()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE7")]
			[Address(RVA = "0xA88524", Offset = "0xA88524", VA = "0xA88524")]
			private bool BranchSequenceNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE8")]
			[Address(RVA = "0xA885BC", Offset = "0xA885BC", VA = "0xA885BC")]
			private bool BranchSequenceNode1407()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CE9")]
			[Address(RVA = "0xA88638", Offset = "0xA88638", VA = "0xA88638")]
			private bool BranchRandomNode846()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CEA")]
			[Address(RVA = "0xA88710", Offset = "0xA88710", VA = "0xA88710")]
			private bool RangeCompareNode1084()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CEB")]
			[Address(RVA = "0xA88848", Offset = "0xA88848", VA = "0xA88848")]
			private bool RangeCompareNode1086()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CEC")]
			[Address(RVA = "0xA88980", Offset = "0xA88980", VA = "0xA88980")]
			private bool BranchSequenceNode1454()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CED")]
			[Address(RVA = "0xA88ACC", Offset = "0xA88ACC", VA = "0xA88ACC")]
			private bool BranchSequenceNode828()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CEE")]
			[Address(RVA = "0xA88BC0", Offset = "0xA88BC0", VA = "0xA88BC0")]
			private bool ListenGlobalEventNode830()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CEF")]
			[Address(RVA = "0xA88C20", Offset = "0xA88C20", VA = "0xA88C20")]
			private bool ListenGlobalEventNode832()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF0")]
			[Address(RVA = "0xA88C80", Offset = "0xA88C80", VA = "0xA88C80")]
			private bool BranchSequenceNode851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF1")]
			[Address(RVA = "0xA88D50", Offset = "0xA88D50", VA = "0xA88D50")]
			private bool BranchSequenceNode208()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF2")]
			[Address(RVA = "0xA88DD8", Offset = "0xA88DD8", VA = "0xA88DD8")]
			private bool BranchSequenceNode209()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF3")]
			[Address(RVA = "0xA88F54", Offset = "0xA88F54", VA = "0xA88F54")]
			private bool BranchSequenceNode225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF4")]
			[Address(RVA = "0xA88FF0", Offset = "0xA88FF0", VA = "0xA88FF0")]
			private bool BranchSequenceNode211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF5")]
			[Address(RVA = "0xA89150", Offset = "0xA89150", VA = "0xA89150")]
			private bool BranchSequenceNode475()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF6")]
			[Address(RVA = "0xA8929C", Offset = "0xA8929C", VA = "0xA8929C")]
			private bool BranchSequenceNode1441()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF7")]
			[Address(RVA = "0xA892FC", Offset = "0xA892FC", VA = "0xA892FC")]
			private bool BranchSequenceNode379()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF8")]
			[Address(RVA = "0xA89354", Offset = "0xA89354", VA = "0xA89354")]
			private bool BranchSequenceNode381()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CF9")]
			[Address(RVA = "0xA8949C", Offset = "0xA8949C", VA = "0xA8949C")]
			private bool BranchSequenceNode384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFA")]
			[Address(RVA = "0xA895BC", Offset = "0xA895BC", VA = "0xA895BC")]
			private bool BranchSequenceNode947()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFB")]
			[Address(RVA = "0xA8969C", Offset = "0xA8969C", VA = "0xA8969C")]
			private bool BranchSelectorNode948()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFC")]
			[Address(RVA = "0xA89814", Offset = "0xA89814", VA = "0xA89814")]
			private bool RangeCompareNode954()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFD")]
			[Address(RVA = "0xA8994C", Offset = "0xA8994C", VA = "0xA8994C")]
			private bool BranchSelectorNode958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFE")]
			[Address(RVA = "0xA8998C", Offset = "0xA8998C", VA = "0xA8998C")]
			private bool BranchSequenceNode983()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002CFF")]
			[Address(RVA = "0xA89A04", Offset = "0xA89A04", VA = "0xA89A04")]
			private bool BranchSequenceNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D00")]
			[Address(RVA = "0xA89A7C", Offset = "0xA89A7C", VA = "0xA89A7C")]
			private bool BranchSequenceNode1347()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D01")]
			[Address(RVA = "0xA89B10", Offset = "0xA89B10", VA = "0xA89B10")]
			private bool BranchSequenceNode1356()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D02")]
			[Address(RVA = "0xA89BAC", Offset = "0xA89BAC", VA = "0xA89BAC")]
			private bool BranchSequenceNode1465()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D03")]
			[Address(RVA = "0xA89C68", Offset = "0xA89C68", VA = "0xA89C68")]
			private bool BranchSelectorNode1307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D04")]
			[Address(RVA = "0xA89D14", Offset = "0xA89D14", VA = "0xA89D14")]
			private bool BranchSequenceNode1474()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D05")]
			[Address(RVA = "0xA89E60", Offset = "0xA89E60", VA = "0xA89E60")]
			private bool BranchSequenceNode1416()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D06")]
			[Address(RVA = "0xA89F34", Offset = "0xA89F34", VA = "0xA89F34")]
			private bool BranchSequenceNode1146()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D07")]
			[Address(RVA = "0xA89FD0", Offset = "0xA89FD0", VA = "0xA89FD0")]
			private bool BranchSequenceNode1485()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D08")]
			[Address(RVA = "0xA8A08C", Offset = "0xA8A08C", VA = "0xA8A08C")]
			private bool BranchSequenceNode1423()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D09")]
			[Address(RVA = "0xA8A138", Offset = "0xA8A138", VA = "0xA8A138")]
			private bool BranchSequenceNode1216()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0A")]
			[Address(RVA = "0xA8A1E4", Offset = "0xA8A1E4", VA = "0xA8A1E4")]
			private bool BranchSequenceNode1217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0B")]
			[Address(RVA = "0xA8A318", Offset = "0xA8A318", VA = "0xA8A318")]
			private bool BranchSequenceNode1253()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0C")]
			[Address(RVA = "0xA8A3A8", Offset = "0xA8A3A8", VA = "0xA8A3A8")]
			private bool BranchSequenceNode1263()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0D")]
			[Address(RVA = "0xA8A424", Offset = "0xA8A424", VA = "0xA8A424")]
			private bool BranchSequenceNode1494()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0E")]
			[Address(RVA = "0xA8A570", Offset = "0xA8A570", VA = "0xA8A570")]
			private bool BranchSequenceNode1505()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D0F")]
			[Address(RVA = "0xA8A62C", Offset = "0xA8A62C", VA = "0xA8A62C")]
			private bool BranchSelectorNode1232()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D10")]
			[Address(RVA = "0xA8A6A8", Offset = "0xA8A6A8", VA = "0xA8A6A8")]
			private bool BranchSelectorNode1233()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D11")]
			[Address(RVA = "0xA8A6E8", Offset = "0xA8A6E8", VA = "0xA8A6E8")]
			private bool BranchSequenceNode1369()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D12")]
			[Address(RVA = "0xA8A71C", Offset = "0xA8A71C", VA = "0xA8A71C")]
			private bool BranchSelectorNode1374()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D13")]
			[Address(RVA = "0xA8A7B4", Offset = "0xA8A7B4", VA = "0xA8A7B4")]
			private bool BranchSequenceNode1211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D14")]
			[Address(RVA = "0xA8A878", Offset = "0xA8A878", VA = "0xA8A878")]
			private bool BranchSequenceNode1212()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D15")]
			[Address(RVA = "0xA8A96C", Offset = "0xA8A96C", VA = "0xA8A96C")]
			private bool ActionWaitNode845()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D16")]
			[Address(RVA = "0xA8A9CC", Offset = "0xA8A9CC", VA = "0xA8A9CC")]
			private bool ActionWaitNode847()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D17")]
			[Address(RVA = "0xA8AA2C", Offset = "0xA8AA2C", VA = "0xA8AA2C")]
			private bool BranchSequenceNode1461()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D18")]
			[Address(RVA = "0xA8AAB4", Offset = "0xA8AAB4", VA = "0xA8AAB4")]
			private bool ListenGlobalEventNode852()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D19")]
			[Address(RVA = "0xA8AB14", Offset = "0xA8AB14", VA = "0xA8AB14")]
			private bool ListenGlobalEventNode849()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1A")]
			[Address(RVA = "0xA8AB74", Offset = "0xA8AB74", VA = "0xA8AB74")]
			private bool BranchSelectorNode679()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1B")]
			[Address(RVA = "0xA8AC28", Offset = "0xA8AC28", VA = "0xA8AC28")]
			private bool BranchSequenceNode748()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1C")]
			[Address(RVA = "0xA8ACA8", Offset = "0xA8ACA8", VA = "0xA8ACA8")]
			private bool BranchSequenceNode226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1D")]
			[Address(RVA = "0xA8AD54", Offset = "0xA8AD54", VA = "0xA8AD54")]
			private bool BranchSelectorNode218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1E")]
			[Address(RVA = "0xA8ADDC", Offset = "0xA8ADDC", VA = "0xA8ADDC")]
			private bool BranchSequenceNode745()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D1F")]
			[Address(RVA = "0xA8AE58", Offset = "0xA8AE58", VA = "0xA8AE58")]
			private bool BranchSequenceNode1448()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D20")]
			[Address(RVA = "0xA8AEE8", Offset = "0xA8AEE8", VA = "0xA8AEE8")]
			private bool ActionDisengage1443()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D21")]
			[Address(RVA = "0xA8AF48", Offset = "0xA8AF48", VA = "0xA8AF48")]
			private bool ActionWaitNode1445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D22")]
			[Address(RVA = "0xA8AFA8", Offset = "0xA8AFA8", VA = "0xA8AFA8")]
			private bool BranchSelectorNode133()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D23")]
			[Address(RVA = "0xA8B060", Offset = "0xA8B060", VA = "0xA8B060")]
			private bool BranchSequenceNode707()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D24")]
			[Address(RVA = "0xA8B0B0", Offset = "0xA8B0B0", VA = "0xA8B0B0")]
			private bool BranchSequenceNode718()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D25")]
			[Address(RVA = "0xA8B100", Offset = "0xA8B100", VA = "0xA8B100")]
			private bool BranchSequenceNode979()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D26")]
			[Address(RVA = "0xA8B16C", Offset = "0xA8B16C", VA = "0xA8B16C")]
			private bool BranchSequenceNode981()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D27")]
			[Address(RVA = "0xA8B248", Offset = "0xA8B248", VA = "0xA8B248")]
			private bool BranchSequenceNode982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D28")]
			[Address(RVA = "0xA8B394", Offset = "0xA8B394", VA = "0xA8B394")]
			private bool BranchSelectorNode1357()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D29")]
			[Address(RVA = "0xA8B440", Offset = "0xA8B440", VA = "0xA8B440")]
			private bool BranchSequenceNode1534()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2A")]
			[Address(RVA = "0xA8B58C", Offset = "0xA8B58C", VA = "0xA8B58C")]
			private bool BranchSequenceNode1469()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2B")]
			[Address(RVA = "0xA8B660", Offset = "0xA8B660", VA = "0xA8B660")]
			private bool BranchSequenceNode1481()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2C")]
			[Address(RVA = "0xA8B6E8", Offset = "0xA8B6E8", VA = "0xA8B6E8")]
			private bool BranchSelectorNode1147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2D")]
			[Address(RVA = "0xA8B794", Offset = "0xA8B794", VA = "0xA8B794")]
			private bool BranchSequenceNode1544()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2E")]
			[Address(RVA = "0xA8B8E0", Offset = "0xA8B8E0", VA = "0xA8B8E0")]
			private bool BranchSequenceNode1489()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D2F")]
			[Address(RVA = "0xA8B9B4", Offset = "0xA8B9B4", VA = "0xA8B9B4")]
			private bool BranchSequenceNode1424()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D30")]
			[Address(RVA = "0xA8BA48", Offset = "0xA8BA48", VA = "0xA8BA48")]
			private bool BranchSequenceNode1433()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D31")]
			[Address(RVA = "0xA8BAE4", Offset = "0xA8BAE4", VA = "0xA8BAE4")]
			private bool BranchSequenceNode1515()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D32")]
			[Address(RVA = "0xA8BBA0", Offset = "0xA8BBA0", VA = "0xA8BBA0")]
			private bool BranchSelectorNode1259()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D33")]
			[Address(RVA = "0xA8BC48", Offset = "0xA8BC48", VA = "0xA8BC48")]
			private bool BranchSequenceNode1260()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D34")]
			[Address(RVA = "0xA8BD08", Offset = "0xA8BD08", VA = "0xA8BD08")]
			private bool ActionWaitNode1275()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D35")]
			[Address(RVA = "0xA8BD68", Offset = "0xA8BD68", VA = "0xA8BD68")]
			private bool BranchSequenceNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D36")]
			[Address(RVA = "0xA8BDE8", Offset = "0xA8BDE8", VA = "0xA8BDE8")]
			private bool BranchSequenceNode1279()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D37")]
			[Address(RVA = "0xA8BE98", Offset = "0xA8BE98", VA = "0xA8BE98")]
			private bool ActionWaitChoiceNode1280()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D38")]
			[Address(RVA = "0xA8BEF8", Offset = "0xA8BEF8", VA = "0xA8BEF8")]
			private bool BranchSequenceNode1281()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D39")]
			[Address(RVA = "0xA8BF40", Offset = "0xA8BF40", VA = "0xA8BF40")]
			private bool BranchSequenceNode1501()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3A")]
			[Address(RVA = "0xA8BFC8", Offset = "0xA8BFC8", VA = "0xA8BFC8")]
			private bool BranchSequenceNode1509()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3B")]
			[Address(RVA = "0xA8C09C", Offset = "0xA8C09C", VA = "0xA8C09C")]
			private bool BranchSequenceNode1255()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3C")]
			[Address(RVA = "0xA8C120", Offset = "0xA8C120", VA = "0xA8C120")]
			private bool BranchSequenceNode1257()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3D")]
			[Address(RVA = "0xA8C1F4", Offset = "0xA8C1F4", VA = "0xA8C1F4")]
			private bool BranchSequenceNode1258()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3E")]
			[Address(RVA = "0xA8C2A8", Offset = "0xA8C2A8", VA = "0xA8C2A8")]
			private bool BranchSequenceNode1375()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D3F")]
			[Address(RVA = "0xA8C2E0", Offset = "0xA8C2E0", VA = "0xA8C2E0")]
			private bool BranchSequenceNode1376()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D40")]
			[Address(RVA = "0xA8C324", Offset = "0xA8C324", VA = "0xA8C324")]
			private bool BranchSequenceNode1377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D41")]
			[Address(RVA = "0xA8C498", Offset = "0xA8C498", VA = "0xA8C498")]
			private bool BranchSequenceNode1389()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D42")]
			[Address(RVA = "0xA8C544", Offset = "0xA8C544", VA = "0xA8C544")]
			private bool BranchSequenceNode234()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D43")]
			[Address(RVA = "0xA8C57C", Offset = "0xA8C57C", VA = "0xA8C57C")]
			private bool BranchSelectorNode1450()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D44")]
			[Address(RVA = "0xA8C5FC", Offset = "0xA8C5FC", VA = "0xA8C5FC")]
			private bool BranchSequenceNode1524()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D45")]
			[Address(RVA = "0xA8C748", Offset = "0xA8C748", VA = "0xA8C748")]
			private bool BranchSequenceNode134()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D46")]
			[Address(RVA = "0xA8C7F8", Offset = "0xA8C7F8", VA = "0xA8C7F8")]
			private bool BranchSequenceNode176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D47")]
			[Address(RVA = "0xA8C8C0", Offset = "0xA8C8C0", VA = "0xA8C8C0")]
			private bool RangeCompareNode708()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D48")]
			[Address(RVA = "0xA8C9F8", Offset = "0xA8C9F8", VA = "0xA8C9F8")]
			private bool BranchSelectorNode715()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D49")]
			[Address(RVA = "0xA8CA38", Offset = "0xA8CA38", VA = "0xA8CA38")]
			private bool RangeCompareNode717()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4A")]
			[Address(RVA = "0xA8CB70", Offset = "0xA8CB70", VA = "0xA8CB70")]
			private bool BranchSelectorNode724()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4B")]
			[Address(RVA = "0xA8CBB0", Offset = "0xA8CBB0", VA = "0xA8CBB0")]
			private bool RangeCompareNode988()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4C")]
			[Address(RVA = "0xA8CCE8", Offset = "0xA8CCE8", VA = "0xA8CCE8")]
			private bool BranchSequenceNode1541()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4D")]
			[Address(RVA = "0xA8CD70", Offset = "0xA8CD70", VA = "0xA8CD70")]
			private bool BranchSequenceNode1551()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4E")]
			[Address(RVA = "0xA8CDF8", Offset = "0xA8CDF8", VA = "0xA8CDF8")]
			private bool BranchSelectorNode1434()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D4F")]
			[Address(RVA = "0xA8CEA4", Offset = "0xA8CEA4", VA = "0xA8CEA4")]
			private bool BranchSequenceNode1554()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D50")]
			[Address(RVA = "0xA8CFF0", Offset = "0xA8CFF0", VA = "0xA8CFF0")]
			private bool BranchSequenceNode1519()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D51")]
			[Address(RVA = "0xA8D0C4", Offset = "0xA8D0C4", VA = "0xA8D0C4")]
			private bool BranchSequenceNode1564()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D52")]
			[Address(RVA = "0xA8D1DC", Offset = "0xA8D1DC", VA = "0xA8D1DC")]
			private bool BranchSequenceNode1583()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D53")]
			[Address(RVA = "0xA8D328", Offset = "0xA8D328", VA = "0xA8D328")]
			private bool BranchSelectorNode1287()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D54")]
			[Address(RVA = "0xA8D368", Offset = "0xA8D368", VA = "0xA8D368")]
			private bool BranchSequenceNode1531()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D55")]
			[Address(RVA = "0xA8D3F0", Offset = "0xA8D3F0", VA = "0xA8D3F0")]
			private bool BranchSequenceNode163()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D56")]
			[Address(RVA = "0xA8D470", Offset = "0xA8D470", VA = "0xA8D470")]
			private bool BranchSequenceNode164()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D57")]
			[Address(RVA = "0xA8D4C0", Offset = "0xA8D4C0", VA = "0xA8D4C0")]
			private bool BranchSequenceNode177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D58")]
			[Address(RVA = "0xA8D544", Offset = "0xA8D544", VA = "0xA8D544")]
			private bool BranchSelectorNode315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D59")]
			[Address(RVA = "0xA8D5A8", Offset = "0xA8D5A8", VA = "0xA8D5A8")]
			private bool BranchSequenceNode710()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5A")]
			[Address(RVA = "0xA8D68C", Offset = "0xA8D68C", VA = "0xA8D68C")]
			private bool BranchSequenceNode1571()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5B")]
			[Address(RVA = "0xA8D744", Offset = "0xA8D744", VA = "0xA8D744")]
			private bool BranchSequenceNode720()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5C")]
			[Address(RVA = "0xA8D828", Offset = "0xA8D828", VA = "0xA8D828")]
			private bool BranchSequenceNode1577()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5D")]
			[Address(RVA = "0xA8D8E0", Offset = "0xA8D8E0", VA = "0xA8D8E0")]
			private bool BranchSequenceNode1561()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5E")]
			[Address(RVA = "0xA8D968", Offset = "0xA8D968", VA = "0xA8D968")]
			private bool BranchSequenceNode1590()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D5F")]
			[Address(RVA = "0xA8D9F0", Offset = "0xA8D9F0", VA = "0xA8D9F0")]
			private bool BranchSequenceNode1288()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D60")]
			[Address(RVA = "0xA8DAC4", Offset = "0xA8DAC4", VA = "0xA8DAC4")]
			private bool BranchSequenceNode1289()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D61")]
			[Address(RVA = "0xA8DB78", Offset = "0xA8DB78", VA = "0xA8DB78")]
			private bool BranchSequenceNode165()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D62")]
			[Address(RVA = "0xA8DB80", Offset = "0xA8DB80", VA = "0xA8DB80")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D63")]
			[Address(RVA = "0xA8DBD0", Offset = "0xA8DBD0", VA = "0xA8DBD0")]
			private bool BranchSequenceNode52()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D64")]
			[Address(RVA = "0xA8DD00", Offset = "0xA8DD00", VA = "0xA8DD00")]
			private bool BranchSelectorNode690()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D65")]
			[Address(RVA = "0xA8DD54", Offset = "0xA8DD54", VA = "0xA8DD54")]
			private bool BranchSequenceNode31()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D66")]
			[Address(RVA = "0xA8DD94", Offset = "0xA8DD94", VA = "0xA8DD94")]
			private bool BranchSequenceNode580()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D67")]
			[Address(RVA = "0xA8DE34", Offset = "0xA8DE34", VA = "0xA8DE34")]
			private bool BranchSequenceNode464()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D68")]
			[Address(RVA = "0xA8DFAC", Offset = "0xA8DFAC", VA = "0xA8DFAC")]
			private bool BranchSequenceNode686()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D69")]
			[Address(RVA = "0xA8E0B8", Offset = "0xA8E0B8", VA = "0xA8E0B8")]
			private bool BranchSequenceNode129()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6A")]
			[Address(RVA = "0xA8E184", Offset = "0xA8E184", VA = "0xA8E184")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6B")]
			[Address(RVA = "0xA8E20C", Offset = "0xA8E20C", VA = "0xA8E20C")]
			private bool BranchSequenceNode1593()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6C")]
			[Address(RVA = "0xA8E2C4", Offset = "0xA8E2C4", VA = "0xA8E2C4")]
			private bool RangeCompareNode688()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6D")]
			[Address(RVA = "0xA8E3FC", Offset = "0xA8E3FC", VA = "0xA8E3FC")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6E")]
			[Address(RVA = "0xA8E46C", Offset = "0xA8E46C", VA = "0xA8E46C")]
			private bool BranchSelectorNode693()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D6F")]
			[Address(RVA = "0xA8E5BC", Offset = "0xA8E5BC", VA = "0xA8E5BC")]
			private bool BranchSequenceNode35()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D70")]
			[Address(RVA = "0xA8E6A4", Offset = "0xA8E6A4", VA = "0xA8E6A4")]
			private bool BranchSequenceNode728()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D71")]
			[Address(RVA = "0xA8E73C", Offset = "0xA8E73C", VA = "0xA8E73C")]
			private bool BranchSequenceNode694()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D72")]
			[Address(RVA = "0xA8E7DC", Offset = "0xA8E7DC", VA = "0xA8E7DC")]
			private bool BranchRandomNode696()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D73")]
			[Address(RVA = "0xA8E83C", Offset = "0xA8E83C", VA = "0xA8E83C")]
			private bool BranchSequenceNode323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D74")]
			[Address(RVA = "0xA8E8C0", Offset = "0xA8E8C0", VA = "0xA8E8C0")]
			private bool BranchSequenceNode276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D75")]
			[Address(RVA = "0xA8E974", Offset = "0xA8E974", VA = "0xA8E974")]
			private bool BranchSelectorNode264()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D76")]
			[Address(RVA = "0xA8E9F8", Offset = "0xA8E9F8", VA = "0xA8E9F8")]
			private bool ActionSendEventNode759()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D77")]
			[Address(RVA = "0xA8EA58", Offset = "0xA8EA58", VA = "0xA8EA58")]
			private bool BranchRandomNode769()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D78")]
			[Address(RVA = "0xA8EAB8", Offset = "0xA8EAB8", VA = "0xA8EAB8")]
			private bool BranchRandomNode90()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D79")]
			[Address(RVA = "0xA8EB18", Offset = "0xA8EB18", VA = "0xA8EB18")]
			private bool StartAttackNode697()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7A")]
			[Address(RVA = "0xA8EB78", Offset = "0xA8EB78", VA = "0xA8EB78")]
			private bool StartAttackNode698()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7B")]
			[Address(RVA = "0xA8EBD8", Offset = "0xA8EBD8", VA = "0xA8EBD8")]
			private bool StartAttackNode699()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7C")]
			[Address(RVA = "0xA8EC38", Offset = "0xA8EC38", VA = "0xA8EC38")]
			private bool StartAttackNode700()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7D")]
			[Address(RVA = "0xA8EC98", Offset = "0xA8EC98", VA = "0xA8EC98")]
			private bool StartAttackNode701()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7E")]
			[Address(RVA = "0xA8ECF8", Offset = "0xA8ECF8", VA = "0xA8ECF8")]
			private bool StartAttackNode702()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D7F")]
			[Address(RVA = "0xA8ED58", Offset = "0xA8ED58", VA = "0xA8ED58")]
			private bool StartAttackNode703()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D80")]
			[Address(RVA = "0xA8EDB8", Offset = "0xA8EDB8", VA = "0xA8EDB8")]
			private bool StartAttackNode704()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D81")]
			[Address(RVA = "0xA8EE18", Offset = "0xA8EE18", VA = "0xA8EE18")]
			private bool BranchSequenceNode265()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D82")]
			[Address(RVA = "0xA8EE90", Offset = "0xA8EE90", VA = "0xA8EE90")]
			private bool BranchRandomNode307()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D83")]
			[Address(RVA = "0xA8EF54", Offset = "0xA8EF54", VA = "0xA8EF54")]
			private bool StartAttackNode731()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D84")]
			[Address(RVA = "0xA8EFB4", Offset = "0xA8EFB4", VA = "0xA8EFB4")]
			private bool StartAttackNode734()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D85")]
			[Address(RVA = "0xA8F014", Offset = "0xA8F014", VA = "0xA8F014")]
			private bool StartAttackNode730()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D86")]
			[Address(RVA = "0xA8F074", Offset = "0xA8F074", VA = "0xA8F074")]
			private bool StartAttackNode732()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D87")]
			[Address(RVA = "0xA8F0D4", Offset = "0xA8F0D4", VA = "0xA8F0D4")]
			private bool StartAttackNode95()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D88")]
			[Address(RVA = "0xA8F134", Offset = "0xA8F134", VA = "0xA8F134")]
			private bool StartAttackNode333()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D89")]
			[Address(RVA = "0xA8F194", Offset = "0xA8F194", VA = "0xA8F194")]
			private bool StartAttackNode337()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D8A")]
			[Address(RVA = "0xA8F1F4", Offset = "0xA8F1F4", VA = "0xA8F1F4")]
			private bool StartAttackNode338()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoolVariable Global_Tutorial_01_InTutorialCombatMode;

		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BoolVariable Global_Tutorial_Blocking_Husk;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public IntVariable Global_Tutorial_NumTutorialAttacksBlocked;

		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BoolVariable Global_Tutorial_01_Pause_Advance_Sequence;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TimerVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BoolVariable Out_PlayerIsDashing;

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xA80C84", Offset = "0xA80C84", VA = "0xA80C84")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0xA80DDC", Offset = "0xA80DDC", VA = "0xA80DDC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xA80EE4", Offset = "0xA80EE4", VA = "0xA80EE4")]
		public TutorialHusk_Blocking_CombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x200040A")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8E6C", Offset = "0x8A8E6C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8E6C", Offset = "0x8A8E6C")]
	public class TutorialHusk_Intro_CombatantBehavior_hybrid : GeneratedActionNode
	{
		[Token(Token = "0x20005BA")]
		public class TutorialHusk_Intro_CombatantBehavior_hybridRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x200060B")]
			private delegate bool NodeUpdater();

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly TutorialHusk_Intro_CombatantBehavior_hybrid _source;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private NodeUpdater tick;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			private bool Local_NextCritHorizontal;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
			private bool Local_ExpectingCrit;

			[Token(Token = "0x6002D8B")]
			[Address(RVA = "0xACA9A8", Offset = "0xACA9A8", VA = "0xACA9A8")]
			public TutorialHusk_Intro_CombatantBehavior_hybridRuntime(TutorialHusk_Intro_CombatantBehavior_hybrid node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002D8C")]
			[Address(RVA = "0xACAEF8", Offset = "0xACAEF8", VA = "0xACAEF8", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6002D8D")]
			[Address(RVA = "0xACAA08", Offset = "0xACAA08", VA = "0xACAA08")]
			public void FindEntry(int entryPoint)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D8E")]
			[Address(RVA = "0xACB150", Offset = "0xACB150", VA = "0xACB150", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D8F")]
			[Address(RVA = "0xACB1B0", Offset = "0xACB1B0", VA = "0xACB1B0")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D90")]
			[Address(RVA = "0xACB2F0", Offset = "0xACB2F0", VA = "0xACB2F0")]
			private bool BranchSelectorNode5()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D91")]
			[Address(RVA = "0xACB3B4", Offset = "0xACB3B4", VA = "0xACB3B4")]
			private bool BranchSequenceNode789()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D92")]
			[Address(RVA = "0xACB418", Offset = "0xACB418", VA = "0xACB418")]
			private bool BranchSelectorNode12()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D93")]
			[Address(RVA = "0xACB4B8", Offset = "0xACB4B8", VA = "0xACB4B8")]
			private bool BranchSequenceNode19()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D94")]
			[Address(RVA = "0xACB56C", Offset = "0xACB56C", VA = "0xACB56C")]
			private bool BranchSequenceNode874()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D95")]
			[Address(RVA = "0xACB634", Offset = "0xACB634", VA = "0xACB634")]
			private bool BranchSelectorNode622()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D96")]
			[Address(RVA = "0xACB650", Offset = "0xACB650", VA = "0xACB650")]
			private bool BranchSelectorNode880()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D97")]
			[Address(RVA = "0xACB690", Offset = "0xACB690", VA = "0xACB690")]
			private bool BranchSelectorNode809()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D98")]
			[Address(RVA = "0xACB6F4", Offset = "0xACB6F4", VA = "0xACB6F4")]
			private bool BranchSequenceNode606()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D99")]
			[Address(RVA = "0xACB7CC", Offset = "0xACB7CC", VA = "0xACB7CC")]
			private bool BranchSelectorNode909()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9A")]
			[Address(RVA = "0xACB8E8", Offset = "0xACB8E8", VA = "0xACB8E8")]
			private bool BranchSequenceNode202()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9B")]
			[Address(RVA = "0xACB8F0", Offset = "0xACB8F0", VA = "0xACB8F0")]
			private bool BranchSelectorNode20()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9C")]
			[Address(RVA = "0xACB98C", Offset = "0xACB98C", VA = "0xACB98C")]
			private bool ToggleTargetableNode878()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9D")]
			[Address(RVA = "0xACBA10", Offset = "0xACBA10", VA = "0xACBA10")]
			private bool BranchSequenceNode617()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9E")]
			[Address(RVA = "0xACBA9C", Offset = "0xACBA9C", VA = "0xACBA9C")]
			private bool BranchSequenceNode881()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002D9F")]
			[Address(RVA = "0xACBB58", Offset = "0xACBB58", VA = "0xACBB58")]
			private bool BranchSequenceNode882()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA0")]
			[Address(RVA = "0xACBC14", Offset = "0xACBC14", VA = "0xACBC14")]
			private bool BranchSequenceNode812()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA1")]
			[Address(RVA = "0xACBC74", Offset = "0xACBC74", VA = "0xACBC74")]
			private bool BranchSequenceNode1014()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA2")]
			[Address(RVA = "0xACBE6C", Offset = "0xACBE6C", VA = "0xACBE6C")]
			private bool BranchSequenceNode987()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA3")]
			[Address(RVA = "0xACBF28", Offset = "0xACBF28", VA = "0xACBF28")]
			private bool BranchSelectorNode916()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA4")]
			[Address(RVA = "0xACBF94", Offset = "0xACBF94", VA = "0xACBF94")]
			private bool BranchSelectorNode917()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA5")]
			[Address(RVA = "0xACC000", Offset = "0xACC000", VA = "0xACC000")]
			private bool BranchSelectorNode918()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA6")]
			[Address(RVA = "0xACC040", Offset = "0xACC040", VA = "0xACC040")]
			private bool BranchSequenceNode919()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA7")]
			[Address(RVA = "0xACC150", Offset = "0xACC150", VA = "0xACC150")]
			private bool BranchSequenceNode920()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA8")]
			[Address(RVA = "0xACC238", Offset = "0xACC238", VA = "0xACC238")]
			private bool BranchSequenceNode921()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DA9")]
			[Address(RVA = "0xACC290", Offset = "0xACC290", VA = "0xACC290")]
			private bool BranchSequenceNode996()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAA")]
			[Address(RVA = "0xACC3AC", Offset = "0xACC3AC", VA = "0xACC3AC")]
			private bool BranchSequenceNode23()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAB")]
			[Address(RVA = "0xACC4B8", Offset = "0xACC4B8", VA = "0xACC4B8")]
			private bool BranchSequenceNode21()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAC")]
			[Address(RVA = "0xACC544", Offset = "0xACC544", VA = "0xACC544")]
			private bool BranchSequenceNode1154()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAD")]
			[Address(RVA = "0xACC560", Offset = "0xACC560", VA = "0xACC560")]
			private bool BranchSequenceNode1004()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAE")]
			[Address(RVA = "0xACC6AC", Offset = "0xACC6AC", VA = "0xACC6AC")]
			private bool BranchSequenceNode891()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DAF")]
			[Address(RVA = "0xACC738", Offset = "0xACC738", VA = "0xACC738")]
			private bool BranchSequenceNode1174()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB0")]
			[Address(RVA = "0xACC754", Offset = "0xACC754", VA = "0xACC754")]
			private bool BranchSequenceNode1015()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB1")]
			[Address(RVA = "0xACC7B4", Offset = "0xACC7B4", VA = "0xACC7B4")]
			private bool BranchSequenceNode1023()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB2")]
			[Address(RVA = "0xACC834", Offset = "0xACC834", VA = "0xACC834")]
			private bool BranchSequenceNode1024()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB3")]
			[Address(RVA = "0xACC8D8", Offset = "0xACC8D8", VA = "0xACC8D8")]
			private bool BranchSequenceNode1018()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB4")]
			[Address(RVA = "0xACC928", Offset = "0xACC928", VA = "0xACC928")]
			private bool BranchSequenceNode1027()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB5")]
			[Address(RVA = "0xACC9C8", Offset = "0xACC9C8", VA = "0xACC9C8")]
			private bool BranchSequenceNode1020()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB6")]
			[Address(RVA = "0xACC9FC", Offset = "0xACC9FC", VA = "0xACC9FC")]
			private bool BranchSequenceNode991()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB7")]
			[Address(RVA = "0xACCAD0", Offset = "0xACCAD0", VA = "0xACCAD0")]
			private bool BranchSequenceNode922()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB8")]
			[Address(RVA = "0xACCB70", Offset = "0xACCB70", VA = "0xACCB70")]
			private bool BranchSequenceNode945()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DB9")]
			[Address(RVA = "0xACCBD4", Offset = "0xACCBD4", VA = "0xACCBD4")]
			private bool BranchSequenceNode924()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBA")]
			[Address(RVA = "0xACCC74", Offset = "0xACCC74", VA = "0xACCC74")]
			private bool BranchSequenceNode948()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBB")]
			[Address(RVA = "0xACCCD8", Offset = "0xACCCD8", VA = "0xACCCD8")]
			private bool BranchSequenceNode926()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBC")]
			[Address(RVA = "0xACCE3C", Offset = "0xACCE3C", VA = "0xACCE3C")]
			private bool BranchSequenceNode927()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBD")]
			[Address(RVA = "0xACCF84", Offset = "0xACCF84", VA = "0xACCF84")]
			private bool BranchSelectorNode930()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBE")]
			[Address(RVA = "0xACCFC4", Offset = "0xACCFC4", VA = "0xACCFC4")]
			private bool BranchSequenceNode1194()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DBF")]
			[Address(RVA = "0xACD110", Offset = "0xACD110", VA = "0xACD110")]
			private bool BranchSelectorNode936()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC0")]
			[Address(RVA = "0xACD1B0", Offset = "0xACD1B0", VA = "0xACD1B0")]
			private bool BranchSequenceNode962()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC1")]
			[Address(RVA = "0xACD248", Offset = "0xACD248", VA = "0xACD248")]
			private bool BranchSequenceNode1204()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC2")]
			[Address(RVA = "0xACD394", Offset = "0xACD394", VA = "0xACD394")]
			private bool BranchSequenceNode963()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC3")]
			[Address(RVA = "0xACD50C", Offset = "0xACD50C", VA = "0xACD50C")]
			private bool RangeCompareNode964()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC4")]
			[Address(RVA = "0xACD63C", Offset = "0xACD63C", VA = "0xACD63C")]
			private bool BranchSequenceNode64()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC5")]
			[Address(RVA = "0xACD748", Offset = "0xACD748", VA = "0xACD748")]
			private bool BranchSequenceNode68()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC6")]
			[Address(RVA = "0xACD7A8", Offset = "0xACD7A8", VA = "0xACD7A8")]
			private bool BranchSequenceNode72()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC7")]
			[Address(RVA = "0xACD8A4", Offset = "0xACD8A4", VA = "0xACD8A4")]
			private bool BranchSelectorNode401()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC8")]
			[Address(RVA = "0xACD920", Offset = "0xACD920", VA = "0xACD920")]
			private bool BranchSequenceNode1156()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DC9")]
			[Address(RVA = "0xACD9CC", Offset = "0xACD9CC", VA = "0xACD9CC")]
			private bool BranchSequenceNode1011()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCA")]
			[Address(RVA = "0xACDA54", Offset = "0xACDA54", VA = "0xACDA54")]
			private bool BranchSequenceNode895()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCB")]
			[Address(RVA = "0xACDB04", Offset = "0xACDB04", VA = "0xACDB04")]
			private bool BranchSequenceNode1176()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCC")]
			[Address(RVA = "0xACDBB0", Offset = "0xACDBB0", VA = "0xACDBB0")]
			private bool BranchSequenceNode1030()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCD")]
			[Address(RVA = "0xACDC84", Offset = "0xACDC84", VA = "0xACDC84")]
			private bool BranchSequenceNode1031()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCE")]
			[Address(RVA = "0xACDCE4", Offset = "0xACDCE4", VA = "0xACDCE4")]
			private bool BranchSequenceNode1047()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DCF")]
			[Address(RVA = "0xACDD34", Offset = "0xACDD34", VA = "0xACDD34")]
			private bool BranchSequenceNode1034()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD0")]
			[Address(RVA = "0xACDD74", Offset = "0xACDD74", VA = "0xACDD74")]
			private bool BranchSequenceNode1050()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD1")]
			[Address(RVA = "0xACDDF0", Offset = "0xACDDF0", VA = "0xACDDF0")]
			private bool BranchSequenceNode1214()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD2")]
			[Address(RVA = "0xACDED4", Offset = "0xACDED4", VA = "0xACDED4")]
			private bool BranchSequenceNode1037()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD3")]
			[Address(RVA = "0xACDF08", Offset = "0xACDF08", VA = "0xACDF08")]
			private bool BranchSequenceNode1038()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD4")]
			[Address(RVA = "0xACDF58", Offset = "0xACDF58", VA = "0xACDF58")]
			private bool ActionWaitNode1055()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD5")]
			[Address(RVA = "0xACDFB8", Offset = "0xACDFB8", VA = "0xACDFB8")]
			private bool BranchSequenceNode1244()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD6")]
			[Address(RVA = "0xACE0D0", Offset = "0xACE0D0", VA = "0xACE0D0")]
			private bool BranchSequenceNode1251()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD7")]
			[Address(RVA = "0xACE28C", Offset = "0xACE28C", VA = "0xACE28C")]
			private bool BranchSequenceNode1042()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD8")]
			[Address(RVA = "0xACE3A4", Offset = "0xACE3A4", VA = "0xACE3A4")]
			private bool BranchSequenceNode965()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DD9")]
			[Address(RVA = "0xACE40C", Offset = "0xACE40C", VA = "0xACE40C")]
			private bool RangeCompareNode966()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDA")]
			[Address(RVA = "0xACE544", Offset = "0xACE544", VA = "0xACE544")]
			private bool BranchSequenceNode968()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDB")]
			[Address(RVA = "0xACE5AC", Offset = "0xACE5AC", VA = "0xACE5AC")]
			private bool RangeCompareNode969()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDC")]
			[Address(RVA = "0xACE6E4", Offset = "0xACE6E4", VA = "0xACE6E4")]
			private bool RangeCompareNode958()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDD")]
			[Address(RVA = "0xACE81C", Offset = "0xACE81C", VA = "0xACE81C")]
			private bool RangeCompareNode959()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDE")]
			[Address(RVA = "0xACE954", Offset = "0xACE954", VA = "0xACE954")]
			private bool BranchSequenceNode1201()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DDF")]
			[Address(RVA = "0xACE9DC", Offset = "0xACE9DC", VA = "0xACE9DC")]
			private bool RangeCompareNode961()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE0")]
			[Address(RVA = "0xACEB14", Offset = "0xACEB14", VA = "0xACEB14")]
			private bool BranchSequenceNode1211()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE1")]
			[Address(RVA = "0xACEB9C", Offset = "0xACEB9C", VA = "0xACEB9C")]
			private bool BranchSequenceNode47()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE2")]
			[Address(RVA = "0xACEC00", Offset = "0xACEC00", VA = "0xACEC00")]
			private bool BranchSequenceNode772()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE3")]
			[Address(RVA = "0xACEC60", Offset = "0xACEC60", VA = "0xACEC60")]
			private bool BranchSequenceNode778()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE4")]
			[Address(RVA = "0xACED68", Offset = "0xACED68", VA = "0xACED68")]
			private bool BranchSequenceNode821()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE5")]
			[Address(RVA = "0xACEDE4", Offset = "0xACEDE4", VA = "0xACEDE4")]
			private bool BranchSequenceNode328()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE6")]
			[Address(RVA = "0xACEE1C", Offset = "0xACEE1C", VA = "0xACEE1C")]
			private bool BranchSequenceNode853()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE7")]
			[Address(RVA = "0xACEE98", Offset = "0xACEE98", VA = "0xACEE98")]
			private bool BranchSequenceNode1157()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE8")]
			[Address(RVA = "0xACEF2C", Offset = "0xACEF2C", VA = "0xACEF2C")]
			private bool BranchSequenceNode1166()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DE9")]
			[Address(RVA = "0xACEFC8", Offset = "0xACEFC8", VA = "0xACEFC8")]
			private bool BranchSequenceNode1262()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DEA")]
			[Address(RVA = "0xACF084", Offset = "0xACF084", VA = "0xACF084")]
			private bool BranchSequenceNode901()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DEB")]
			[Address(RVA = "0xACF120", Offset = "0xACF120", VA = "0xACF120")]
			private bool BranchSequenceNode1272()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DEC")]
			[Address(RVA = "0xACF1DC", Offset = "0xACF1DC", VA = "0xACF1DC")]
			private bool BranchSequenceNode1177()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DED")]
			[Address(RVA = "0xACF270", Offset = "0xACF270", VA = "0xACF270")]
			private bool BranchSequenceNode1186()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DEE")]
			[Address(RVA = "0xACF30C", Offset = "0xACF30C", VA = "0xACF30C")]
			private bool BranchSequenceNode1282()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DEF")]
			[Address(RVA = "0xACF3C8", Offset = "0xACF3C8", VA = "0xACF3C8")]
			private bool BranchSequenceNode1291()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF0")]
			[Address(RVA = "0xACF3E4", Offset = "0xACF3E4", VA = "0xACF3E4")]
			private bool BranchSequenceNode1062()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF1")]
			[Address(RVA = "0xACF424", Offset = "0xACF424", VA = "0xACF424")]
			private bool BranchSelectorNode1078()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF2")]
			[Address(RVA = "0xACF510", Offset = "0xACF510", VA = "0xACF510")]
			private bool BranchSequenceNode1048()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF3")]
			[Address(RVA = "0xACF5C4", Offset = "0xACF5C4", VA = "0xACF5C4")]
			private bool BranchSequenceNode1067()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF4")]
			[Address(RVA = "0xACF6E4", Offset = "0xACF6E4", VA = "0xACF6E4")]
			private bool BranchSequenceNode1068()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF5")]
			[Address(RVA = "0xACF7D0", Offset = "0xACF7D0", VA = "0xACF7D0")]
			private bool ActionWaitChoiceNode1069()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF6")]
			[Address(RVA = "0xACF830", Offset = "0xACF830", VA = "0xACF830")]
			private bool BranchSequenceNode1070()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF7")]
			[Address(RVA = "0xACF8D0", Offset = "0xACF8D0", VA = "0xACF8D0")]
			private bool BranchSequenceNode1218()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF8")]
			[Address(RVA = "0xACF950", Offset = "0xACF950", VA = "0xACF950")]
			private bool BranchSelectorNode1217()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DF9")]
			[Address(RVA = "0xACF9A8", Offset = "0xACF9A8", VA = "0xACF9A8")]
			private bool BranchSelectorNode1053()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFA")]
			[Address(RVA = "0xACF9E8", Offset = "0xACF9E8", VA = "0xACF9E8")]
			private bool BranchSequenceNode1054()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFB")]
			[Address(RVA = "0xACFA80", Offset = "0xACFA80", VA = "0xACFA80")]
			private bool BranchSequenceNode1257()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFC")]
			[Address(RVA = "0xACFAFC", Offset = "0xACFAFC", VA = "0xACFAFC")]
			private bool RangeCompareNode982()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFD")]
			[Address(RVA = "0xACFC34", Offset = "0xACFC34", VA = "0xACFC34")]
			private bool RangeCompareNode984()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFE")]
			[Address(RVA = "0xACFD6C", Offset = "0xACFD6C", VA = "0xACFD6C")]
			private bool BranchSequenceNode1331()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002DFF")]
			[Address(RVA = "0xACFEB8", Offset = "0xACFEB8", VA = "0xACFEB8")]
			private bool BranchSelectorNode1341()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E00")]
			[Address(RVA = "0xAD014C", Offset = "0xAD014C", VA = "0xAD014C")]
			private bool BranchSequenceNode1312()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E01")]
			[Address(RVA = "0xAD01AC", Offset = "0xAD01AC", VA = "0xAD01AC")]
			private bool BranchSequenceNode780()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E02")]
			[Address(RVA = "0xAD024C", Offset = "0xAD024C", VA = "0xAD024C")]
			private bool BranchSequenceNode851()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E03")]
			[Address(RVA = "0xAD0340", Offset = "0xAD0340", VA = "0xAD0340")]
			private bool BranchSequenceNode856()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E04")]
			[Address(RVA = "0xAD03A0", Offset = "0xAD03A0", VA = "0xAD03A0")]
			private bool BranchSelectorNode1167()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E05")]
			[Address(RVA = "0xAD044C", Offset = "0xAD044C", VA = "0xAD044C")]
			private bool BranchSequenceNode1357()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E06")]
			[Address(RVA = "0xAD0598", Offset = "0xAD0598", VA = "0xAD0598")]
			private bool BranchSequenceNode1266()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E07")]
			[Address(RVA = "0xAD066C", Offset = "0xAD066C", VA = "0xAD066C")]
			private bool BranchSelectorNode902()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E08")]
			[Address(RVA = "0xAD0718", Offset = "0xAD0718", VA = "0xAD0718")]
			private bool BranchSequenceNode1367()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E09")]
			[Address(RVA = "0xAD0864", Offset = "0xAD0864", VA = "0xAD0864")]
			private bool BranchSequenceNode1276()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0A")]
			[Address(RVA = "0xAD0938", Offset = "0xAD0938", VA = "0xAD0938")]
			private bool BranchSelectorNode1187()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0B")]
			[Address(RVA = "0xAD09E4", Offset = "0xAD09E4", VA = "0xAD09E4")]
			private bool BranchSequenceNode1377()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0C")]
			[Address(RVA = "0xAD0B30", Offset = "0xAD0B30", VA = "0xAD0B30")]
			private bool BranchSequenceNode1286()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0D")]
			[Address(RVA = "0xAD0C04", Offset = "0xAD0C04", VA = "0xAD0C04")]
			private bool BranchSequenceNode1293()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0E")]
			[Address(RVA = "0xAD0CB0", Offset = "0xAD0CB0", VA = "0xAD0CB0")]
			private bool BranchSequenceNode1076()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E0F")]
			[Address(RVA = "0xAD0D5C", Offset = "0xAD0D5C", VA = "0xAD0D5C")]
			private bool BranchSequenceNode1077()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E10")]
			[Address(RVA = "0xAD0E90", Offset = "0xAD0E90", VA = "0xAD0E90")]
			private bool BranchSequenceNode1113()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E11")]
			[Address(RVA = "0xAD0F20", Offset = "0xAD0F20", VA = "0xAD0F20")]
			private bool BranchSequenceNode1123()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E12")]
			[Address(RVA = "0xAD0F9C", Offset = "0xAD0F9C", VA = "0xAD0F9C")]
			private bool BranchSequenceNode1387()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E13")]
			[Address(RVA = "0xAD10E8", Offset = "0xAD10E8", VA = "0xAD10E8")]
			private bool BranchSequenceNode1398()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E14")]
			[Address(RVA = "0xAD11A4", Offset = "0xAD11A4", VA = "0xAD11A4")]
			private bool BranchSelectorNode1092()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E15")]
			[Address(RVA = "0xAD1220", Offset = "0xAD1220", VA = "0xAD1220")]
			private bool BranchSelectorNode1093()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E16")]
			[Address(RVA = "0xAD1260", Offset = "0xAD1260", VA = "0xAD1260")]
			private bool BranchSequenceNode1219()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E17")]
			[Address(RVA = "0xAD1294", Offset = "0xAD1294", VA = "0xAD1294")]
			private bool BranchSelectorNode1224()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E18")]
			[Address(RVA = "0xAD132C", Offset = "0xAD132C", VA = "0xAD132C")]
			private bool BranchSequenceNode1071()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E19")]
			[Address(RVA = "0xAD13F0", Offset = "0xAD13F0", VA = "0xAD13F0")]
			private bool BranchSequenceNode1072()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1A")]
			[Address(RVA = "0xAD14E4", Offset = "0xAD14E4", VA = "0xAD14E4")]
			private bool BranchSequenceNode1338()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1B")]
			[Address(RVA = "0xAD156C", Offset = "0xAD156C", VA = "0xAD156C")]
			private bool BranchSequenceNode1342()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1C")]
			[Address(RVA = "0xAD160C", Offset = "0xAD160C", VA = "0xAD160C")]
			private bool BranchSequenceNode1343()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1D")]
			[Address(RVA = "0xAD16B0", Offset = "0xAD16B0", VA = "0xAD16B0")]
			private bool BranchSequenceNode1344()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1E")]
			[Address(RVA = "0xAD1754", Offset = "0xAD1754", VA = "0xAD1754")]
			private bool BranchSequenceNode1345()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E1F")]
			[Address(RVA = "0xAD17F8", Offset = "0xAD17F8", VA = "0xAD17F8")]
			private bool BranchSequenceNode1346()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E20")]
			[Address(RVA = "0xAD189C", Offset = "0xAD189C", VA = "0xAD189C")]
			private bool BranchRandomNode1314()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E21")]
			[Address(RVA = "0xAD1A6C", Offset = "0xAD1A6C", VA = "0xAD1A6C")]
			private bool BranchSequenceNode1315()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E22")]
			[Address(RVA = "0xAD1AD8", Offset = "0xAD1AD8", VA = "0xAD1AD8")]
			private bool ActionWaitNode1316()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E23")]
			[Address(RVA = "0xAD1B38", Offset = "0xAD1B38", VA = "0xAD1B38")]
			private bool BranchSequenceNode1318()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E24")]
			[Address(RVA = "0xAD1BE0", Offset = "0xAD1BE0", VA = "0xAD1BE0")]
			private bool BranchSelectorNode784()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E25")]
			[Address(RVA = "0xAD1C40", Offset = "0xAD1C40", VA = "0xAD1C40")]
			private bool BranchSequenceNode841()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E26")]
			[Address(RVA = "0xAD1CA0", Offset = "0xAD1CA0", VA = "0xAD1CA0")]
			private bool ActionSendEventNode854()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E27")]
			[Address(RVA = "0xAD1D00", Offset = "0xAD1D00", VA = "0xAD1D00")]
			private bool ListenGlobalEventNode857()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E28")]
			[Address(RVA = "0xAD1D60", Offset = "0xAD1D60", VA = "0xAD1D60")]
			private bool StartAttackNode858()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E29")]
			[Address(RVA = "0xAD1DC0", Offset = "0xAD1DC0", VA = "0xAD1DC0")]
			private bool BranchSequenceNode860()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2A")]
			[Address(RVA = "0xAD1E20", Offset = "0xAD1E20", VA = "0xAD1E20")]
			private bool BranchSequenceNode1364()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2B")]
			[Address(RVA = "0xAD1EA8", Offset = "0xAD1EA8", VA = "0xAD1EA8")]
			private bool BranchSequenceNode1374()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2C")]
			[Address(RVA = "0xAD1F30", Offset = "0xAD1F30", VA = "0xAD1F30")]
			private bool BranchSequenceNode1384()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2D")]
			[Address(RVA = "0xAD1FB8", Offset = "0xAD1FB8", VA = "0xAD1FB8")]
			private bool BranchSequenceNode1294()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2E")]
			[Address(RVA = "0xAD204C", Offset = "0xAD204C", VA = "0xAD204C")]
			private bool BranchSequenceNode1303()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E2F")]
			[Address(RVA = "0xAD20E8", Offset = "0xAD20E8", VA = "0xAD20E8")]
			private bool BranchSequenceNode1408()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E30")]
			[Address(RVA = "0xAD21A4", Offset = "0xAD21A4", VA = "0xAD21A4")]
			private bool BranchSelectorNode1119()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E31")]
			[Address(RVA = "0xAD224C", Offset = "0xAD224C", VA = "0xAD224C")]
			private bool BranchSequenceNode1120()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E32")]
			[Address(RVA = "0xAD230C", Offset = "0xAD230C", VA = "0xAD230C")]
			private bool ActionWaitNode1135()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E33")]
			[Address(RVA = "0xAD236C", Offset = "0xAD236C", VA = "0xAD236C")]
			private bool BranchSequenceNode1122()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E34")]
			[Address(RVA = "0xAD23EC", Offset = "0xAD23EC", VA = "0xAD23EC")]
			private bool BranchSequenceNode1139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E35")]
			[Address(RVA = "0xAD249C", Offset = "0xAD249C", VA = "0xAD249C")]
			private bool ActionWaitChoiceNode1140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E36")]
			[Address(RVA = "0xAD24FC", Offset = "0xAD24FC", VA = "0xAD24FC")]
			private bool BranchSequenceNode1141()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E37")]
			[Address(RVA = "0xAD2544", Offset = "0xAD2544", VA = "0xAD2544")]
			private bool BranchSequenceNode1394()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E38")]
			[Address(RVA = "0xAD25CC", Offset = "0xAD25CC", VA = "0xAD25CC")]
			private bool BranchSequenceNode1402()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E39")]
			[Address(RVA = "0xAD26A0", Offset = "0xAD26A0", VA = "0xAD26A0")]
			private bool BranchSequenceNode1115()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3A")]
			[Address(RVA = "0xAD2724", Offset = "0xAD2724", VA = "0xAD2724")]
			private bool BranchSequenceNode1117()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3B")]
			[Address(RVA = "0xAD27F8", Offset = "0xAD27F8", VA = "0xAD27F8")]
			private bool BranchSequenceNode1118()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3C")]
			[Address(RVA = "0xAD28AC", Offset = "0xAD28AC", VA = "0xAD28AC")]
			private bool BranchSequenceNode1225()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3D")]
			[Address(RVA = "0xAD28E4", Offset = "0xAD28E4", VA = "0xAD28E4")]
			private bool BranchSequenceNode1226()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3E")]
			[Address(RVA = "0xAD2928", Offset = "0xAD2928", VA = "0xAD2928")]
			private bool BranchSequenceNode1227()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E3F")]
			[Address(RVA = "0xAD2A9C", Offset = "0xAD2A9C", VA = "0xAD2A9C")]
			private bool BranchSequenceNode1239()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E40")]
			[Address(RVA = "0xAD2B48", Offset = "0xAD2B48", VA = "0xAD2B48")]
			private bool ListenGlobalEventNode1348()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E41")]
			[Address(RVA = "0xAD2BA8", Offset = "0xAD2BA8", VA = "0xAD2BA8")]
			private bool ListenGlobalEventNode1350()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E42")]
			[Address(RVA = "0xAD2C08", Offset = "0xAD2C08", VA = "0xAD2C08")]
			private bool ListenGlobalEventNode1352()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E43")]
			[Address(RVA = "0xAD2C68", Offset = "0xAD2C68", VA = "0xAD2C68")]
			private bool ListenGlobalEventNode1354()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E44")]
			[Address(RVA = "0xAD2CC8", Offset = "0xAD2CC8", VA = "0xAD2CC8")]
			private bool ListenGlobalEventNode1356()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E45")]
			[Address(RVA = "0xAD2D28", Offset = "0xAD2D28", VA = "0xAD2D28")]
			private bool ActionWaitNode1319()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E46")]
			[Address(RVA = "0xAD2D88", Offset = "0xAD2D88", VA = "0xAD2D88")]
			private bool ActionWaitNode1320()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E47")]
			[Address(RVA = "0xAD2DE8", Offset = "0xAD2DE8", VA = "0xAD2DE8")]
			private bool ActionWaitNode1321()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E48")]
			[Address(RVA = "0xAD2E48", Offset = "0xAD2E48", VA = "0xAD2E48")]
			private bool ActionWaitNode1322()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E49")]
			[Address(RVA = "0xAD2EA8", Offset = "0xAD2EA8", VA = "0xAD2EA8")]
			private bool ActionWaitNode1323()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4A")]
			[Address(RVA = "0xAD2F08", Offset = "0xAD2F08", VA = "0xAD2F08")]
			private bool ToggleTargetableNode1324()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4B")]
			[Address(RVA = "0xAD2F90", Offset = "0xAD2F90", VA = "0xAD2F90")]
			private bool BranchSequenceNode782()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4C")]
			[Address(RVA = "0xAD2FC8", Offset = "0xAD2FC8", VA = "0xAD2FC8")]
			private bool BranchSelectorNode1444()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4D")]
			[Address(RVA = "0xAD325C", Offset = "0xAD325C", VA = "0xAD325C")]
			private bool ToggleTargetableNode842()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4E")]
			[Address(RVA = "0xAD32E4", Offset = "0xAD32E4", VA = "0xAD32E4")]
			private bool ActionWaitNode844()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E4F")]
			[Address(RVA = "0xAD3344", Offset = "0xAD3344", VA = "0xAD3344")]
			private bool PlayMusicTrackNode861()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E50")]
			[Address(RVA = "0xAD33A4", Offset = "0xAD33A4", VA = "0xAD33A4")]
			private bool SetAnimatorSpeedNode866()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E51")]
			[Address(RVA = "0xAD3404", Offset = "0xAD3404", VA = "0xAD3404")]
			private bool ScreenFadeToNode870()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E52")]
			[Address(RVA = "0xAD3464", Offset = "0xAD3464", VA = "0xAD3464")]
			private bool PlayAudioNode868()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E53")]
			[Address(RVA = "0xAD34C4", Offset = "0xAD34C4", VA = "0xAD34C4")]
			private bool ScreenFadeToNode871()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E54")]
			[Address(RVA = "0xAD3524", Offset = "0xAD3524", VA = "0xAD3524")]
			private bool ActionWaitNode872()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E55")]
			[Address(RVA = "0xAD3584", Offset = "0xAD3584", VA = "0xAD3584")]
			private bool SkipLevelNode869()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E56")]
			[Address(RVA = "0xAD35E4", Offset = "0xAD35E4", VA = "0xAD35E4")]
			private bool BranchSelectorNode1304()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E57")]
			[Address(RVA = "0xAD3690", Offset = "0xAD3690", VA = "0xAD3690")]
			private bool BranchSequenceNode1417()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E58")]
			[Address(RVA = "0xAD37DC", Offset = "0xAD37DC", VA = "0xAD37DC")]
			private bool BranchSequenceNode1412()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E59")]
			[Address(RVA = "0xAD38B0", Offset = "0xAD38B0", VA = "0xAD38B0")]
			private bool BranchSequenceNode1427()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5A")]
			[Address(RVA = "0xAD39C8", Offset = "0xAD39C8", VA = "0xAD39C8")]
			private bool BranchSequenceNode1434()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5B")]
			[Address(RVA = "0xAD3B14", Offset = "0xAD3B14", VA = "0xAD3B14")]
			private bool BranchSelectorNode1147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5C")]
			[Address(RVA = "0xAD3B54", Offset = "0xAD3B54", VA = "0xAD3B54")]
			private bool BranchSequenceNode1445()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5D")]
			[Address(RVA = "0xAD3BF4", Offset = "0xAD3BF4", VA = "0xAD3BF4")]
			private bool BranchSequenceNode1446()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5E")]
			[Address(RVA = "0xAD3C98", Offset = "0xAD3C98", VA = "0xAD3C98")]
			private bool BranchSequenceNode1447()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E5F")]
			[Address(RVA = "0xAD3D3C", Offset = "0xAD3D3C", VA = "0xAD3D3C")]
			private bool BranchSequenceNode1448()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E60")]
			[Address(RVA = "0xAD3DE0", Offset = "0xAD3DE0", VA = "0xAD3DE0")]
			private bool BranchSequenceNode1449()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E61")]
			[Address(RVA = "0xAD3E84", Offset = "0xAD3E84", VA = "0xAD3E84")]
			private bool BranchSequenceNode1424()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E62")]
			[Address(RVA = "0xAD3F0C", Offset = "0xAD3F0C", VA = "0xAD3F0C")]
			private bool BranchSequenceNode1441()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E63")]
			[Address(RVA = "0xAD3F94", Offset = "0xAD3F94", VA = "0xAD3F94")]
			private bool BranchSequenceNode1148()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E64")]
			[Address(RVA = "0xAD4068", Offset = "0xAD4068", VA = "0xAD4068")]
			private bool BranchSequenceNode1149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E65")]
			[Address(RVA = "0xAD411C", Offset = "0xAD411C", VA = "0xAD411C")]
			private bool ListenGlobalEventNode1451()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E66")]
			[Address(RVA = "0xAD417C", Offset = "0xAD417C", VA = "0xAD417C")]
			private bool ListenGlobalEventNode1453()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E67")]
			[Address(RVA = "0xAD41DC", Offset = "0xAD41DC", VA = "0xAD41DC")]
			private bool ListenGlobalEventNode1455()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E68")]
			[Address(RVA = "0xAD423C", Offset = "0xAD423C", VA = "0xAD423C")]
			private bool ListenGlobalEventNode1457()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E69")]
			[Address(RVA = "0xAD429C", Offset = "0xAD429C", VA = "0xAD429C")]
			private bool ListenGlobalEventNode1459()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TimerVariable Global_SuperAttackCooldown;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable PlayerComboLimit;

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xACA858", Offset = "0xACA858", VA = "0xACA858")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xACA8F8", Offset = "0xACA8F8", VA = "0xACA8F8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0xACAA00", Offset = "0xACAA00", VA = "0xACAA00")]
		public TutorialHusk_Intro_CombatantBehavior_hybrid()
		{
		}
	}
	[Token(Token = "0x200040B")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8F28", Offset = "0x8A8F28")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8F28", Offset = "0x8A8F28")]
	public class UpdateTicketsNode : GeneratedActionNode
	{
		[Token(Token = "0x20005BB")]
		public class UpdateTicketsNodeRuntime : GeneratedActionNodeRuntime
		{
			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private readonly UpdateTicketsNode _source;

			[Token(Token = "0x6002E6A")]
			[Address(RVA = "0xAD4664", Offset = "0xAD4664", VA = "0xAD4664")]
			public UpdateTicketsNodeRuntime(UpdateTicketsNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E6B")]
			[Address(RVA = "0xAD46A0", Offset = "0xAD46A0", VA = "0xAD46A0", Slot = "21")]
			protected override bool GraphEntry()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E6C")]
			[Address(RVA = "0xAD480C", Offset = "0xAD480C", VA = "0xAD480C")]
			private bool BranchSelectorNode10()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E6D")]
			[Address(RVA = "0xAD48C4", Offset = "0xAD48C4", VA = "0xAD48C4")]
			private bool BranchSelectorNode56()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E6E")]
			[Address(RVA = "0xAD4964", Offset = "0xAD4964", VA = "0xAD4964")]
			private bool BranchSelectorNode69()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E6F")]
			[Address(RVA = "0xAD4A34", Offset = "0xAD4A34", VA = "0xAD4A34")]
			private bool BranchSequenceNode2()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E70")]
			[Address(RVA = "0xAD4AE0", Offset = "0xAD4AE0", VA = "0xAD4AE0")]
			private bool BranchSequenceNode32()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E71")]
			[Address(RVA = "0xAD4B98", Offset = "0xAD4B98", VA = "0xAD4B98")]
			private bool BranchSequenceNode51()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E72")]
			[Address(RVA = "0xAD4C20", Offset = "0xAD4C20", VA = "0xAD4C20")]
			private bool BranchSequenceNode71()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E73")]
			[Address(RVA = "0xAD4C84", Offset = "0xAD4C84", VA = "0xAD4C84")]
			private bool BranchSequenceNode74()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E74")]
			[Address(RVA = "0xAD4D04", Offset = "0xAD4D04", VA = "0xAD4D04")]
			private bool BranchSequenceNode81()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E75")]
			[Address(RVA = "0xAD4E48", Offset = "0xAD4E48", VA = "0xAD4E48")]
			private bool BranchSequenceNode95()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E76")]
			[Address(RVA = "0xAD4F2C", Offset = "0xAD4F2C", VA = "0xAD4F2C")]
			private bool BranchSequenceNode7()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E77")]
			[Address(RVA = "0xAD4FD4", Offset = "0xAD4FD4", VA = "0xAD4FD4")]
			private bool BranchSequenceNode149()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E78")]
			[Address(RVA = "0xAD50A4", Offset = "0xAD50A4", VA = "0xAD50A4")]
			private bool BranchSelectorNode13()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E79")]
			[Address(RVA = "0xAD5128", Offset = "0xAD5128", VA = "0xAD5128")]
			private bool BranchSequenceNode33()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7A")]
			[Address(RVA = "0xAD51CC", Offset = "0xAD51CC", VA = "0xAD51CC")]
			private bool BranchSelectorNode50()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7B")]
			[Address(RVA = "0xAD5220", Offset = "0xAD5220", VA = "0xAD5220")]
			private bool BranchSelectorNode65()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7C")]
			[Address(RVA = "0xAD52FC", Offset = "0xAD52FC", VA = "0xAD52FC")]
			private bool BranchSelectorNode73()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7D")]
			[Address(RVA = "0xAD53BC", Offset = "0xAD53BC", VA = "0xAD53BC")]
			private bool BranchSelectorNode140()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7E")]
			[Address(RVA = "0xAD5440", Offset = "0xAD5440", VA = "0xAD5440")]
			private bool BranchSequenceNode86()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E7F")]
			[Address(RVA = "0xAD54F0", Offset = "0xAD54F0", VA = "0xAD54F0")]
			private bool BranchSequenceNode94()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E80")]
			[Address(RVA = "0xAD5610", Offset = "0xAD5610", VA = "0xAD5610")]
			private bool BranchSequenceNode100()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E81")]
			[Address(RVA = "0xAD56A4", Offset = "0xAD56A4", VA = "0xAD56A4")]
			private bool BranchSequenceNode137()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E82")]
			[Address(RVA = "0xAD56F4", Offset = "0xAD56F4", VA = "0xAD56F4")]
			private bool BranchSequenceNode14()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E83")]
			[Address(RVA = "0xAD5784", Offset = "0xAD5784", VA = "0xAD5784")]
			private bool BranchSequenceNode15()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E84")]
			[Address(RVA = "0xAD5814", Offset = "0xAD5814", VA = "0xAD5814")]
			private bool BranchSequenceNode16()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E85")]
			[Address(RVA = "0xAD58A4", Offset = "0xAD58A4", VA = "0xAD58A4")]
			private bool BranchSequenceNode25()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E86")]
			[Address(RVA = "0xAD5934", Offset = "0xAD5934", VA = "0xAD5934")]
			private bool BranchSequenceNode46()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E87")]
			[Address(RVA = "0xAD59DC", Offset = "0xAD59DC", VA = "0xAD59DC")]
			private bool BranchSequenceNode36()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E88")]
			[Address(RVA = "0xAD5A1C", Offset = "0xAD5A1C", VA = "0xAD5A1C")]
			private bool BranchSequenceNode66()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E89")]
			[Address(RVA = "0xAD5A94", Offset = "0xAD5A94", VA = "0xAD5A94")]
			private bool BranchSequenceNode76()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8A")]
			[Address(RVA = "0xAD5B00", Offset = "0xAD5B00", VA = "0xAD5B00")]
			private bool BranchSequenceNode119()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8B")]
			[Address(RVA = "0xAD5BDC", Offset = "0xAD5BDC", VA = "0xAD5BDC")]
			private bool BranchSequenceNode143()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8C")]
			[Address(RVA = "0xAD5C58", Offset = "0xAD5C58", VA = "0xAD5C58")]
			private bool RangeCompareNode89()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8D")]
			[Address(RVA = "0xAD5D90", Offset = "0xAD5D90", VA = "0xAD5D90")]
			private bool BranchSelectorNode144()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8E")]
			[Address(RVA = "0xAD5E5C", Offset = "0xAD5E5C", VA = "0xAD5E5C")]
			private bool BranchSequenceNode139()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E8F")]
			[Address(RVA = "0xAD5F3C", Offset = "0xAD5F3C", VA = "0xAD5F3C")]
			private bool BranchSelectorNode38()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E90")]
			[Address(RVA = "0xAD60B4", Offset = "0xAD60B4", VA = "0xAD60B4")]
			private bool RangeCompareNode79()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E91")]
			[Address(RVA = "0xAD61EC", Offset = "0xAD61EC", VA = "0xAD61EC")]
			private bool BranchSelectorNode124()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E92")]
			[Address(RVA = "0xAD622C", Offset = "0xAD622C", VA = "0xAD622C")]
			private bool BranchSequenceNode145()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E93")]
			[Address(RVA = "0xAD62A4", Offset = "0xAD62A4", VA = "0xAD62A4")]
			private bool BranchSequenceNode147()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E94")]
			[Address(RVA = "0xAD631C", Offset = "0xAD631C", VA = "0xAD631C")]
			private bool BranchSequenceNode39()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E95")]
			[Address(RVA = "0xAD6388", Offset = "0xAD6388", VA = "0xAD6388")]
			private bool BranchSequenceNode125()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E96")]
			[Address(RVA = "0xAD6474", Offset = "0xAD6474", VA = "0xAD6474")]
			private bool BranchSequenceNode131()
			{
				return default(bool);
			}

			[MethodImpl(256)]
			[Token(Token = "0x6002E97")]
			[Address(RVA = "0xAD65C0", Offset = "0xAD65C0", VA = "0xAD65C0")]
			private bool RangeCompareNode122()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatVariable Global_RangedAttackCooldown;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public IntVariable Out_EnemiesInCombat;

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xAD45A0", Offset = "0xAD45A0", VA = "0xAD45A0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xAD4698", Offset = "0xAD4698", VA = "0xAD4698")]
		public UpdateTicketsNode()
		{
		}
	}
	[Token(Token = "0x200040C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A8FE4", Offset = "0x8A8FE4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A8FE4", Offset = "0x8A8FE4")]
	public class GiveArmamentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005BC")]
		public class GiveArmamentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private GiveArmamentNode _source;

			[Token(Token = "0x6002E98")]
			[Address(RVA = "0xB51440", Offset = "0xB51440", VA = "0xB51440")]
			public GiveArmamentNodeRuntime(GiveArmamentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002E99")]
			[Address(RVA = "0xB514C8", Offset = "0xB514C8", VA = "0xB514C8", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DAFF4", Offset = "0x8DAFF4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DAFF4", Offset = "0x8DAFF4")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB054", Offset = "0x8DB054")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB054", Offset = "0x8DB054")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB054", Offset = "0x8DB054")]
		[SerializeField]
		private int _level;

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xB51390", Offset = "0xB51390", VA = "0xB51390", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xB514B8", Offset = "0xB514B8", VA = "0xB514B8")]
		public GiveArmamentNode()
		{
		}
	}
	[Token(Token = "0x200040D")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A908C", Offset = "0x8A908C")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8A908C", Offset = "0x8A908C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A908C", Offset = "0x8A908C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A908C", Offset = "0x8A908C")]
	public class HistoryCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005BD")]
		private class HistoryCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly HistoryCompareNode source;

			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool cached;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private FloatVariable valueCache;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private HistoryVariable historyCache;

			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private FloatVariable timeCache;

			[Token(Token = "0x6002E9A")]
			[Address(RVA = "0xB51B14", Offset = "0xB51B14", VA = "0xB51B14")]
			public HistoryCompareNodeRuntime(HistoryCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002E9B")]
			[Address(RVA = "0xB51C3C", Offset = "0xB51C3C", VA = "0xB51C3C")]
			private bool Evaluate()
			{
				return default(bool);
			}

			[Token(Token = "0x6002E9C")]
			[Address(RVA = "0xB520D4", Offset = "0xB520D4", VA = "0xB520D4", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool OutputValueToLog;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB0D8", Offset = "0x8DB0D8")]
		public HistoryVariable HistoryVariable;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool UseDefaultQueryPeriod;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8DB0E8", Offset = "0x8DB0E8")]
		public FloatCompareNode.FloatQualifiedVariable TimeToCheck;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB12C", Offset = "0x8DB12C")]
		public ComparisonOperator Comparison;

		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB13C", Offset = "0x8DB13C")]
		public FloatCompareNode.FloatQualifiedVariable Value;

		[Token(Token = "0x170003D9")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A5C")]
			[Address(RVA = "0xB51548", Offset = "0xB51548", VA = "0xB51548", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xB51550", Offset = "0xB51550", VA = "0xB51550", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xB51830", Offset = "0xB51830", VA = "0xB51830", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xB51978", Offset = "0xB51978", VA = "0xB51978", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xB51A64", Offset = "0xB51A64", VA = "0xB51A64", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xB51B8C", Offset = "0xB51B8C", VA = "0xB51B8C")]
		public HistoryCompareNode()
		{
		}
	}
	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9194", Offset = "0x8A9194")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9194", Offset = "0x8A9194")]
	public class IncrementAchievementProgressNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005BE")]
		private class IncrementAchievementProgressNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly IncrementAchievementProgressNode _source;

			[Token(Token = "0x6002E9D")]
			[Address(RVA = "0xC536B0", Offset = "0xC536B0", VA = "0xC536B0")]
			public IncrementAchievementProgressNodeRuntime(IncrementAchievementProgressNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002E9E")]
			[Address(RVA = "0xC53730", Offset = "0xC53730", VA = "0xC53730", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB14C", Offset = "0x8DB14C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB14C", Offset = "0x8DB14C")]
		[SerializeField]
		private AchievementAsset _achievement;

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xC53600", Offset = "0xC53600", VA = "0xC53600", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xC53728", Offset = "0xC53728", VA = "0xC53728")]
		public IncrementAchievementProgressNode()
		{
		}
	}
	[Token(Token = "0x200040F")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A923C", Offset = "0x8A923C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A923C", Offset = "0x8A923C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A923C", Offset = "0x8A923C")]
	public class KillEntityNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005BF")]
		public class KillEntityNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002E9F")]
			[Address(RVA = "0xC53B44", Offset = "0xC53B44", VA = "0xC53B44")]
			public KillEntityNodeRuntime(KillEntityNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EA0")]
			[Address(RVA = "0xC53BB4", Offset = "0xC53BB4", VA = "0xC53BB4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FloatCompareNode.FloatQualifiedVariable MinKillTime;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FloatCompareNode.FloatQualifiedVariable MaxKillTime;

		[Token(Token = "0x170003DA")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001A64")]
			[Address(RVA = "0xC53A3C", Offset = "0xC53A3C", VA = "0xC53A3C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DB")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0xC53A44", Offset = "0xC53A44", VA = "0xC53A44", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xC53A4C", Offset = "0xC53A4C", VA = "0xC53A4C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0xC53A94", Offset = "0xC53A94", VA = "0xC53A94", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0xC53BAC", Offset = "0xC53BAC", VA = "0xC53BAC")]
		public KillEntityNode()
		{
		}
	}
	[Token(Token = "0x2000410")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9308", Offset = "0x8A9308")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9308", Offset = "0x8A9308")]
	public class KillStartNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C0")]
		public class KillStartNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002EA1")]
			[Address(RVA = "0xC53D40", Offset = "0xC53D40", VA = "0xC53D40")]
			public KillStartNodeRuntime(KillStartNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EA2")]
			[Address(RVA = "0xC53DB0", Offset = "0xC53DB0", VA = "0xC53DB0", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x170003DC")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xC53C38", Offset = "0xC53C38", VA = "0xC53C38", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DD")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0xC53C40", Offset = "0xC53C40", VA = "0xC53C40", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xC53C48", Offset = "0xC53C48", VA = "0xC53C48", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xC53C90", Offset = "0xC53C90", VA = "0xC53C90", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xC53DA8", Offset = "0xC53DA8", VA = "0xC53DA8")]
		public KillStartNode()
		{
		}
	}
	[Token(Token = "0x2000411")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A93B0", Offset = "0x8A93B0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A93B0", Offset = "0x8A93B0")]
	public class ListenAbilityDefinitionGlobalEventNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C1")]
		private class ListenAbilityDefinitionGlobalEventNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly ListenAbilityDefinitionGlobalEventNode _source;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool _isRegistered;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
			private bool _fired;

			[Token(Token = "0x170004B2")]
			public override bool UsesJustExecuted
			{
				[Token(Token = "0x6002EA6")]
				[Address(RVA = "0xAA1858", Offset = "0xAA1858", VA = "0xAA1858", Slot = "18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002EA3")]
			[Address(RVA = "0xAA1590", Offset = "0xAA1590", VA = "0xAA1590")]
			public ListenAbilityDefinitionGlobalEventNodeRuntime(ListenAbilityDefinitionGlobalEventNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EA4")]
			[Address(RVA = "0xAA1684", Offset = "0xAA1684", VA = "0xAA1684", Slot = "5")]
			public override void OnBeforeGraphEnd()
			{
			}

			[Token(Token = "0x6002EA5")]
			[Address(RVA = "0xAA176C", Offset = "0xAA176C", VA = "0xAA176C", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EA7")]
			[Address(RVA = "0xAA1860", Offset = "0xAA1860", VA = "0xAA1860", Slot = "17")]
			public override void JustExecutedNode()
			{
			}

			[Token(Token = "0x6002EA8")]
			[Address(RVA = "0xAA189C", Offset = "0xAA189C", VA = "0xAA189C")]
			private void OnGlobalEventRaised(ArmamentAbilityDefinition definition)
			{
			}

			[Token(Token = "0x6002EA9")]
			[Address(RVA = "0xAA16C0", Offset = "0xAA16C0", VA = "0xAA16C0")]
			private void ResetEvent()
			{
			}
		}

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB194", Offset = "0x8DB194")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB194", Offset = "0x8DB194")]
		[SerializeField]
		private ArmamentAbilityDefinitionGlobalEvent _armamentAbilityDefinitionGlobalEvent;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DB1DC", Offset = "0x8DB1DC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB1DC", Offset = "0x8DB1DC")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB1DC", Offset = "0x8DB1DC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB1DC", Offset = "0x8DB1DC")]
		[SerializeField]
		private List<ArmamentAbilityDefinition> _definitions;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xAA1398", Offset = "0xAA1398", VA = "0xAA1398", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xAA14E0", Offset = "0xAA14E0", VA = "0xAA14E0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xAA1608", Offset = "0xAA1608", VA = "0xAA1608")]
		public ListenAbilityDefinitionGlobalEventNode()
		{
		}
	}
	[Token(Token = "0x2000412")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9458", Offset = "0x8A9458")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9458", Offset = "0x8A9458")]
	public class ListenGlobalEventNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C2")]
		public class ListenGlobalEventNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ListenGlobalEventNode _source;

			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool _isRegistered;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
			private bool _fired;

			[Token(Token = "0x170004B3")]
			public override bool UsesJustExecuted
			{
				[Token(Token = "0x6002EAD")]
				[Address(RVA = "0xAA1D64", Offset = "0xAA1D64", VA = "0xAA1D64", Slot = "18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002EAA")]
			[Address(RVA = "0xAA19E0", Offset = "0xAA19E0", VA = "0xAA19E0")]
			public ListenGlobalEventNodeRuntime(ListenGlobalEventNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EAB")]
			[Address(RVA = "0xAA1BA8", Offset = "0xAA1BA8", VA = "0xAA1BA8", Slot = "5")]
			public override void OnBeforeGraphEnd()
			{
			}

			[Token(Token = "0x6002EAC")]
			[Address(RVA = "0xAA1C84", Offset = "0xAA1C84", VA = "0xAA1C84", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EAE")]
			[Address(RVA = "0xAA1D6C", Offset = "0xAA1D6C", VA = "0xAA1D6C", Slot = "17")]
			public override void JustExecutedNode()
			{
			}

			[Token(Token = "0x6002EAF")]
			[Address(RVA = "0xAA1DA8", Offset = "0xAA1DA8", VA = "0xAA1DA8")]
			private void OnGlobalEventRaised()
			{
			}

			[Token(Token = "0x6002EB0")]
			[Address(RVA = "0xAA1BE4", Offset = "0xAA1BE4", VA = "0xAA1BE4")]
			private void ResetEvent()
			{
			}
		}

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB26C", Offset = "0x8DB26C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB26C", Offset = "0x8DB26C")]
		[SerializeField]
		private BaseGlobalEvent _globalEvent;

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xAA1930", Offset = "0xAA1930", VA = "0xAA1930", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0xAA1A58", Offset = "0xAA1A58", VA = "0xAA1A58", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0xAA1BA0", Offset = "0xAA1BA0", VA = "0xAA1BA0")]
		public ListenGlobalEventNode()
		{
		}
	}
	[Token(Token = "0x2000413")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9500", Offset = "0x8A9500")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9500", Offset = "0x8A9500")]
	public class ListenVariableChangeNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C3")]
		public class ListenVariableChangeNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ListenVariableChangeNode _source;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool _isRegistered;

			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
			private bool _fired;

			[Token(Token = "0x170004B4")]
			public override bool UsesJustExecuted
			{
				[Token(Token = "0x6002EB4")]
				[Address(RVA = "0xAA2258", Offset = "0xAA2258", VA = "0xAA2258", Slot = "18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002EB1")]
			[Address(RVA = "0xAA1E6C", Offset = "0xAA1E6C", VA = "0xAA1E6C")]
			public ListenVariableChangeNodeRuntime(ListenVariableChangeNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EB2")]
			[Address(RVA = "0xAA2034", Offset = "0xAA2034", VA = "0xAA2034", Slot = "5")]
			public override void OnBeforeGraphEnd()
			{
			}

			[Token(Token = "0x6002EB3")]
			[Address(RVA = "0xAA2148", Offset = "0xAA2148", VA = "0xAA2148", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EB5")]
			[Address(RVA = "0xAA2260", Offset = "0xAA2260", VA = "0xAA2260", Slot = "17")]
			public override void JustExecutedNode()
			{
			}

			[Token(Token = "0x6002EB6")]
			[Address(RVA = "0xAA229C", Offset = "0xAA229C", VA = "0xAA229C")]
			private void OnGlobalEventRaised()
			{
			}

			[Token(Token = "0x6002EB7")]
			[Address(RVA = "0xAA2070", Offset = "0xAA2070", VA = "0xAA2070")]
			private void ResetEvent()
			{
			}
		}

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB2B4", Offset = "0x8DB2B4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB2B4", Offset = "0x8DB2B4")]
		[SerializeField]
		private Variable variable;

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xAA1DBC", Offset = "0xAA1DBC", VA = "0xAA1DBC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xAA1EE4", Offset = "0xAA1EE4", VA = "0xAA1EE4", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xAA202C", Offset = "0xAA202C", VA = "0xAA202C")]
		public ListenVariableChangeNode()
		{
		}
	}
	[Token(Token = "0x2000414")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A95A8", Offset = "0x8A95A8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A95A8", Offset = "0x8A95A8")]
	public class MaxDifficultyCompletionCompareNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C4")]
		private class MaxDifficultyCompletionCompareNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly MaxDifficultyCompletionCompareNode source;

			[Token(Token = "0x6002EB8")]
			[Address(RVA = "0xAA2360", Offset = "0xAA2360", VA = "0xAA2360")]
			public MaxDifficultyCompletionCompareNodeRuntime(MaxDifficultyCompletionCompareNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EB9")]
			[Address(RVA = "0xAA23E0", Offset = "0xAA23E0", VA = "0xAA23E0", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EBA")]
			[Address(RVA = "0xAA2478", Offset = "0xAA2478", VA = "0xAA2478")]
			private bool Evaluate(int x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private CampaignDatabase campaignDatabase;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB30C", Offset = "0x8DB30C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB30C", Offset = "0x8DB30C")]
		[SerializeField]
		private Campaign campaign;

		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB354", Offset = "0x8DB354")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB354", Offset = "0x8DB354")]
		[SerializeField]
		private ComparisonOperator comparison;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB39C", Offset = "0x8DB39C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB39C", Offset = "0x8DB39C")]
		[SerializeField]
		private IntReference y;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xAA22B0", Offset = "0xAA22B0", VA = "0xAA22B0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xAA23D8", Offset = "0xAA23D8", VA = "0xAA23D8")]
		public MaxDifficultyCompletionCompareNode()
		{
		}
	}
	[Token(Token = "0x2000415")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A9650", Offset = "0x8A9650")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8A9650", Offset = "0x8A9650")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9650", Offset = "0x8A9650")]
	public class MoveToRangeNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x20005C5")]
		public class PointThresholdQualifiedVariable : QualifiedVariable<DistanceThresholdVariable, DistanceThreshold>
		{
			[Token(Token = "0x6002EBB")]
			[Address(RVA = "0xAA2D44", Offset = "0xAA2D44", VA = "0xAA2D44")]
			public PointThresholdQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x20005C6")]
		public class MoveToRangeNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly MoveToRangeNode source;

			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool cached;

			[Token(Token = "0x4002357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private DistanceThreshold cache;

			[Token(Token = "0x6002EBC")]
			[Address(RVA = "0xAA2BA0", Offset = "0xAA2BA0", VA = "0xAA2BA0")]
			public MoveToRangeNodeRuntime(MoveToRangeNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EBD")]
			[Address(RVA = "0xAA2C20", Offset = "0xAA2C20", VA = "0xAA2C20", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB3E4", Offset = "0x8DB3E4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB3E4", Offset = "0x8DB3E4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB3E4", Offset = "0x8DB3E4")]
		public PointThresholdQualifiedVariable Range;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool requireLoA;

		[Token(Token = "0x170003DE")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001A79")]
			[Address(RVA = "0xAA25B4", Offset = "0xAA25B4", VA = "0xAA25B4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003DF")]
		public override bool UseInline
		{
			[Token(Token = "0x6001A7A")]
			[Address(RVA = "0xAA25BC", Offset = "0xAA25BC", VA = "0xAA25BC", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0xAA25C4", Offset = "0xAA25C4", VA = "0xAA25C4", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0xAA299C", Offset = "0xAA299C", VA = "0xAA299C", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0xAA2A58", Offset = "0xAA2A58", VA = "0xAA2A58")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xAA2AF0", Offset = "0xAA2AF0", VA = "0xAA2AF0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xAA2C18", Offset = "0xAA2C18", VA = "0xAA2C18")]
		public MoveToRangeNode()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9734", Offset = "0x8A9734")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9734", Offset = "0x8A9734")]
	public class PlayAudioNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C7")]
		public class PlayAudioNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x200060C")]
			private enum ClipState
			{
				[Token(Token = "0x40023DB")]
				NotReady = -1,
				[Token(Token = "0x40023DC")]
				Queued,
				[Token(Token = "0x40023DD")]
				Playing,
				[Token(Token = "0x40023DE")]
				EndPlay,
				[Token(Token = "0x40023DF")]
				Canceled
			}

			[Token(Token = "0x4002358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private PlayAudioNode _source;

			[Token(Token = "0x4002359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private ClipState _clipstate;

			[Token(Token = "0x400235A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			private float _targetTime;

			[Token(Token = "0x400235B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private AudioRuntime _audioRuntime;

			[Token(Token = "0x400235C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float requestTime;

			[Token(Token = "0x400235D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private EffectRequestState _requestState;

			[Token(Token = "0x170004B5")]
			public override bool UsesJustExecuted
			{
				[Token(Token = "0x6002EC4")]
				[Address(RVA = "0xAA3C04", Offset = "0xAA3C04", VA = "0xAA3C04", Slot = "18")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002EBE")]
			[Address(RVA = "0xAA2F8C", Offset = "0xAA2F8C", VA = "0xAA2F8C")]
			public PlayAudioNodeRuntime(PlayAudioNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EBF")]
			[Address(RVA = "0xAA304C", Offset = "0xAA304C", VA = "0xAA304C", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EC0")]
			[Address(RVA = "0xAA356C", Offset = "0xAA356C", VA = "0xAA356C")]
			private void OnBeginPlay(EffectRuntime runtime)
			{
			}

			[Token(Token = "0x6002EC1")]
			[Address(RVA = "0xAA36A0", Offset = "0xAA36A0", VA = "0xAA36A0")]
			private void OnEndPlay()
			{
			}

			[Token(Token = "0x6002EC2")]
			[Address(RVA = "0xAA36B4", Offset = "0xAA36B4", VA = "0xAA36B4")]
			private void OnCancel()
			{
			}

			[Token(Token = "0x6002EC3")]
			[Address(RVA = "0xAA38BC", Offset = "0xAA38BC", VA = "0xAA38BC", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}

			[Token(Token = "0x6002EC5")]
			[Address(RVA = "0xAA3C0C", Offset = "0xAA3C0C", VA = "0xAA3C0C", Slot = "17")]
			public override void JustExecutedNode()
			{
			}

			[Token(Token = "0x6002EC6")]
			[Address(RVA = "0xAA3BC4", Offset = "0xAA3BC4", VA = "0xAA3BC4")]
			private void ChangeStatus()
			{
			}

			[Token(Token = "0x6002EC7")]
			[Address(RVA = "0xAA3E68", Offset = "0xAA3E68", VA = "0xAA3E68", Slot = "5")]
			public override void OnBeforeGraphEnd()
			{
			}
		}

		[Token(Token = "0x4001C0E")]
		public const float WarningTimeout = 40f;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioRuntimeGlobalEvent _audioRuntimeGlobalEvent;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB468", Offset = "0x8DB468")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB468", Offset = "0x8DB468")]
		[SerializeField]
		private AudioKeyData _audioKey;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB4B0", Offset = "0x8DB4B0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB4B0", Offset = "0x8DB4B0")]
		[SerializeField]
		private float _playTimeOffset;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB4F8", Offset = "0x8DB4F8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB4F8", Offset = "0x8DB4F8")]
		[SerializeField]
		private TransformVariable _transform;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB540", Offset = "0x8DB540")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB540", Offset = "0x8DB540")]
		[SerializeField]
		private bool _ignoreTimeout;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB588", Offset = "0x8DB588")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB588", Offset = "0x8DB588")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB588", Offset = "0x8DB588")]
		[SerializeField]
		private bool _successOnClipCancel;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xAA2D94", Offset = "0xAA2D94", VA = "0xAA2D94", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xAA2EDC", Offset = "0xAA2EDC", VA = "0xAA2EDC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xAA303C", Offset = "0xAA303C", VA = "0xAA303C")]
		public PlayAudioNode()
		{
		}
	}
	[Token(Token = "0x2000417")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A97DC", Offset = "0x8A97DC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A97DC", Offset = "0x8A97DC")]
	public class PlayMusicTrackNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C8")]
		public class PlayMusicTrackNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400235E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private PlayMusicTrackNode _source;

			[Token(Token = "0x6002EC8")]
			[Address(RVA = "0xAA400C", Offset = "0xAA400C", VA = "0xAA400C")]
			public PlayMusicTrackNodeRuntime(PlayMusicTrackNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EC9")]
			[Address(RVA = "0xAA408C", Offset = "0xAA408C", VA = "0xAA408C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB5F4", Offset = "0x8DB5F4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB5F4", Offset = "0x8DB5F4")]
		[SerializeField]
		private MusicTrack musicTrack;

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xAA3F5C", Offset = "0xAA3F5C", VA = "0xAA3F5C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xAA4084", Offset = "0xAA4084", VA = "0xAA4084")]
		public PlayMusicTrackNode()
		{
		}
	}
	[Token(Token = "0x2000418")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9884", Offset = "0x8A9884")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9884", Offset = "0x8A9884")]
	public class PlayerRestoreDeathsDoor : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005C9")]
		private class PlayerRestoreDeathsDoorRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400235F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly PlayerRestoreDeathsDoor _source;

			[Token(Token = "0x6002ECA")]
			[Address(RVA = "0xAA41B4", Offset = "0xAA41B4", VA = "0xAA41B4")]
			public PlayerRestoreDeathsDoorRuntime(PlayerRestoreDeathsDoor node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002ECB")]
			[Address(RVA = "0xAA4234", Offset = "0xAA4234", VA = "0xAA4234", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayerEntityVariable _playerEntity;

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xAA4104", Offset = "0xAA4104", VA = "0xAA4104", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xAA422C", Offset = "0xAA422C", VA = "0xAA422C")]
		public PlayerRestoreDeathsDoor()
		{
		}
	}
	[Token(Token = "0x2000419")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A992C", Offset = "0x8A992C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A992C", Offset = "0x8A992C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A992C", Offset = "0x8A992C")]
	public class RangeCompareNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x20005CA")]
		public class RangeQualifiedVariable : QualifiedVariable<DistanceThresholdVariable, DistanceThreshold>
		{
			[Token(Token = "0x6002ECC")]
			[Address(RVA = "0xAA4D30", Offset = "0xAA4D30", VA = "0xAA4D30")]
			public RangeQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		private class RangeCompareNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly RangeCompareNode source;

			[Token(Token = "0x4002361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool cached;

			[Token(Token = "0x4002362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
			private bool distanceLiteral;

			[Token(Token = "0x4002363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private FloatVariable distanceCache;

			[Token(Token = "0x4002364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool rangeLiteral;

			[Token(Token = "0x4002365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			private DistanceThresholdVariable rangeCache;

			[Token(Token = "0x6002ECD")]
			[Address(RVA = "0xAA4C1C", Offset = "0xAA4C1C", VA = "0xAA4C1C")]
			public RangeCompareNodeRuntime(RangeCompareNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002ECE")]
			[Address(RVA = "0xAA4D80", Offset = "0xAA4D80", VA = "0xAA4D80")]
			private bool Evaluate()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ECF")]
			[Address(RVA = "0xAA5018", Offset = "0xAA5018", VA = "0xAA5018", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB64C", Offset = "0x8DB64C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB64C", Offset = "0x8DB64C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB64C", Offset = "0x8DB64C")]
		public RangeQualifiedVariable Range;

		[Token(Token = "0x4001C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB6C0", Offset = "0x8DB6C0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB6C0", Offset = "0x8DB6C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB6C0", Offset = "0x8DB6C0")]
		public ComparisonOperator Comparison;

		[Token(Token = "0x4001C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB734", Offset = "0x8DB734")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB734", Offset = "0x8DB734")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB734", Offset = "0x8DB734")]
		public FloatCompareNode.FloatQualifiedVariable Distance;

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xAA432C", Offset = "0xAA432C", VA = "0xAA432C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xAA49C8", Offset = "0xAA49C8", VA = "0xAA49C8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xAA4A78", Offset = "0xAA4A78", VA = "0xAA4A78", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xAA4B6C", Offset = "0xAA4B6C", VA = "0xAA4B6C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xAA4C94", Offset = "0xAA4C94", VA = "0xAA4C94")]
		public RangeCompareNode()
		{
		}
	}
	[Token(Token = "0x200041A")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A99F8", Offset = "0x8A99F8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A99F8", Offset = "0x8A99F8")]
	public class RecoverHeartNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005CC")]
		public class RecoverHeartNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002ED0")]
			[Address(RVA = "0xAA50E8", Offset = "0xAA50E8", VA = "0xAA50E8")]
			public RecoverHeartNodeRuntime(RecoverHeartNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002ED1")]
			[Address(RVA = "0xAA5158", Offset = "0xAA5158", VA = "0xAA5158", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xAA5038", Offset = "0xAA5038", VA = "0xAA5038", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xAA5150", Offset = "0xAA5150", VA = "0xAA5150")]
		public RecoverHeartNode()
		{
		}
	}
	[Token(Token = "0x200041B")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8A9AA0", Offset = "0x8A9AA0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9AA0", Offset = "0x8A9AA0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9AA0", Offset = "0x8A9AA0")]
	public class ReleaseFightTicketNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x20005CD")]
		public class ClaymoreEntityQualifiedVariable : QualifiedVariable<ClaymoreEntityVariable>
		{
			[Token(Token = "0x6002ED2")]
			[Address(RVA = "0xAA5408", Offset = "0xAA5408", VA = "0xAA5408")]
			public ClaymoreEntityQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x20005CE")]
		public class ReleaseFightTicketRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002ED3")]
			[Address(RVA = "0xAA5398", Offset = "0xAA5398", VA = "0xAA5398")]
			public ReleaseFightTicketRuntime(ReleaseFightTicketNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002ED4")]
			[Address(RVA = "0xAA5458", Offset = "0xAA5458", VA = "0xAA5458", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB7A8", Offset = "0x8DB7A8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB7A8", Offset = "0x8DB7A8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DB7A8", Offset = "0x8DB7A8")]
		public ClaymoreEntityQualifiedVariable Target;

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xAA523C", Offset = "0xAA523C", VA = "0xAA523C", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xAA52E8", Offset = "0xAA52E8", VA = "0xAA52E8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xAA5400", Offset = "0xAA5400", VA = "0xAA5400")]
		public ReleaseFightTicketNode()
		{
		}
	}
	[Token(Token = "0x200041C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9B84", Offset = "0x8A9B84")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9B84", Offset = "0x8A9B84")]
	public class RemoveArmamentNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005CF")]
		public class RemoveArmamentNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private RemoveArmamentNode _source;

			[Token(Token = "0x6002ED5")]
			[Address(RVA = "0xAA551C", Offset = "0xAA551C", VA = "0xAA551C")]
			public RemoveArmamentNodeRuntime(RemoveArmamentNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002ED6")]
			[Address(RVA = "0xAA559C", Offset = "0xAA559C", VA = "0xAA559C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ArmamentInventory _ownedArmaments;

		[Token(Token = "0x4001C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ArmamentID _armamentID;

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xAA546C", Offset = "0xAA546C", VA = "0xAA546C", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0xAA5594", Offset = "0xAA5594", VA = "0xAA5594")]
		public RemoveArmamentNode()
		{
		}
	}
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9C2C", Offset = "0x8A9C2C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9C2C", Offset = "0x8A9C2C")]
	public class RestoreEnemyHealthNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D0")]
		public class RestoreEnemyHealthNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002367")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private RestoreEnemyHealthNode source;

			[Token(Token = "0x6002ED7")]
			[Address(RVA = "0xAA56C8", Offset = "0xAA56C8", VA = "0xAA56C8")]
			public RestoreEnemyHealthNodeRuntime(RestoreEnemyHealthNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002ED8")]
			[Address(RVA = "0xAA5748", Offset = "0xAA5748", VA = "0xAA5748", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private IntReference restoreAmount;

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0xAA5618", Offset = "0xAA5618", VA = "0xAA5618", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0xAA5740", Offset = "0xAA5740", VA = "0xAA5740")]
		public RestoreEnemyHealthNode()
		{
		}
	}
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9CD4", Offset = "0x8A9CD4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9CD4", Offset = "0x8A9CD4")]
	public class RestoreMovementColliderRadius : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D1")]
		public class RestoreMovementColliderRadiusRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002ED9")]
			[Address(RVA = "0xAA58A8", Offset = "0xAA58A8", VA = "0xAA58A8")]
			public RestoreMovementColliderRadiusRuntime(RestoreMovementColliderRadius node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EDA")]
			[Address(RVA = "0xAA5918", Offset = "0xAA5918", VA = "0xAA5918", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0xAA57F8", Offset = "0xAA57F8", VA = "0xAA57F8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0xAA5910", Offset = "0xAA5910", VA = "0xAA5910")]
		public RestoreMovementColliderRadius()
		{
		}
	}
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9D7C", Offset = "0x8A9D7C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9D7C", Offset = "0x8A9D7C")]
	public class SaveDataNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D2")]
		public class SaveDataNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002368")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private SaveDataNode _source;

			[Token(Token = "0x6002EDB")]
			[Address(RVA = "0xAA5A48", Offset = "0xAA5A48", VA = "0xAA5A48")]
			public SaveDataNodeRuntime(SaveDataNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EDC")]
			[Address(RVA = "0xAA5B2C", Offset = "0xAA5B2C", VA = "0xAA5B2C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SaveManager _saveManager;

		[Token(Token = "0x4001C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB85C", Offset = "0x8DB85C")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB85C", Offset = "0x8DB85C")]
		[SerializeField]
		private SaveData[] _data;

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0xAA5998", Offset = "0xAA5998", VA = "0xAA5998", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xAA5AC0", Offset = "0xAA5AC0", VA = "0xAA5AC0")]
		public SaveDataNode()
		{
		}
	}
	[Token(Token = "0x2000420")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9E24", Offset = "0x8A9E24")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9E24", Offset = "0x8A9E24")]
	public class ScreenFadeToNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D3")]
		public class ScreenFadeToNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002369")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ScreenFadeToNode _source;

			[Token(Token = "0x6002EDD")]
			[Address(RVA = "0xAA5C98", Offset = "0xAA5C98", VA = "0xAA5C98")]
			public ScreenFadeToNodeRuntime(ScreenFadeToNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EDE")]
			[Address(RVA = "0xAA5D18", Offset = "0xAA5D18", VA = "0xAA5D18", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScreenFadeController _screenFadeController;

		[Token(Token = "0x4001C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB8B4", Offset = "0x8DB8B4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB8B4", Offset = "0x8DB8B4")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB8FC", Offset = "0x8DB8FC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB8FC", Offset = "0x8DB8FC")]
		[SerializeField]
		private bool _useRate;

		[Token(Token = "0x4001C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB944", Offset = "0x8DB944")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB944", Offset = "0x8DB944")]
		[SerializeField]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8DB944", Offset = "0x8DB944")]
		private float _rate;

		[Token(Token = "0x4001C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DB9B0", Offset = "0x8DB9B0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DB9B0", Offset = "0x8DB9B0")]
		[SerializeField]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8DB9B0", Offset = "0x8DB9B0")]
		private float _duration;

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0xAA5BE8", Offset = "0xAA5BE8", VA = "0xAA5BE8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0xAA5D10", Offset = "0xAA5D10", VA = "0xAA5D10")]
		public ScreenFadeToNode()
		{
		}
	}
	[Token(Token = "0x2000421")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8A9ECC", Offset = "0x8A9ECC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9ECC", Offset = "0x8A9ECC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9ECC", Offset = "0x8A9ECC")]
	public class ScreenFlashNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D4")]
		public class ScreenFlashNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x400236A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ScreenFlashNode source;

			[Token(Token = "0x6002EDF")]
			[Address(RVA = "0xAA5F38", Offset = "0xAA5F38", VA = "0xAA5F38")]
			public ScreenFlashNodeRuntime(ScreenFlashNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EE0")]
			[Address(RVA = "0xAA6018", Offset = "0xAA6018", VA = "0xAA6018", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScreenFlashRequestGlobalEvent _screenFlashRequest;

		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Color _color;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AnimationCurve _fadeCurve;

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0xAA5DC4", Offset = "0xAA5DC4", VA = "0xAA5DC4")]
		private void Raise()
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0xAA5E88", Offset = "0xAA5E88", VA = "0xAA5E88", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0xAA5FB0", Offset = "0xAA5FB0", VA = "0xAA5FB0")]
		public ScreenFlashNode()
		{
		}
	}
	[Token(Token = "0x2000422")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8A9F98", Offset = "0x8A9F98")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8A9F98", Offset = "0x8A9F98")]
	public class SetAnimatorSpeedNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D5")]
		private class SetAnimatorSpeedNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x400236B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly SetAnimatorSpeedNode _source;

			[Token(Token = "0x6002EE1")]
			[Address(RVA = "0xAA6134", Offset = "0xAA6134", VA = "0xAA6134")]
			public SetAnimatorSpeedNodeRuntime(SetAnimatorSpeedNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EE2")]
			[Address(RVA = "0xAA61C4", Offset = "0xAA61C4", VA = "0xAA61C4", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBA68", Offset = "0x8DBA68")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBA68", Offset = "0x8DBA68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBA68", Offset = "0x8DBA68")]
		[SerializeField]
		private float _speed;

		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBAE0", Offset = "0x8DBAE0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBAE0", Offset = "0x8DBAE0")]
		[SerializeField]
		private bool _isManualControl;

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0xAA6084", Offset = "0xAA6084", VA = "0xAA6084", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0xAA61AC", Offset = "0xAA61AC", VA = "0xAA61AC")]
		public SetAnimatorSpeedNode()
		{
		}
	}
	[Token(Token = "0x2000423")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA040", Offset = "0x8AA040")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA040", Offset = "0x8AA040")]
	public class SetMovementColliderRadiusNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D6")]
		private class SetMovementColliderRadiusNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x400236C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly SetMovementColliderRadiusNode _source;

			[Token(Token = "0x400236D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool _cached;

			[Token(Token = "0x400236E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private FloatVariable _cachedRadiusVariable;

			[Token(Token = "0x6002EE3")]
			[Address(RVA = "0xAA6328", Offset = "0xAA6328", VA = "0xAA6328")]
			public SetMovementColliderRadiusNodeRuntime(SetMovementColliderRadiusNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EE4")]
			[Address(RVA = "0xAA6418", Offset = "0xAA6418", VA = "0xAA6418", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBB40", Offset = "0x8DBB40")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBB40", Offset = "0x8DBB40")]
		[SerializeField]
		private FloatReference _radius;

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0xAA6278", Offset = "0xAA6278", VA = "0xAA6278", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0xAA63A0", Offset = "0xAA63A0", VA = "0xAA63A0")]
		public SetMovementColliderRadiusNode()
		{
		}
	}
	[Token(Token = "0x2000424")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA0E8", Offset = "0x8AA0E8")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8AA0E8", Offset = "0x8AA0E8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA0E8", Offset = "0x8AA0E8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA0E8", Offset = "0x8AA0E8")]
	public class SetTargetNode : BehaviorTreeActionNode
	{
		[Serializable]
		[Token(Token = "0x20005D7")]
		public class ClaymoreEntityQualifiedVariable : QualifiedVariable<ClaymoreEntityVariable>
		{
			[Token(Token = "0x6002EE5")]
			[Address(RVA = "0xAA67C8", Offset = "0xAA67C8", VA = "0xAA67C8")]
			public ClaymoreEntityQualifiedVariable()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		public class SetTargetNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x400236F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly SetTargetNode source;

			[Token(Token = "0x6002EE6")]
			[Address(RVA = "0xAA6748", Offset = "0xAA6748", VA = "0xAA6748")]
			public SetTargetNodeRuntime(SetTargetNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EE7")]
			[Address(RVA = "0xAA6818", Offset = "0xAA6818", VA = "0xAA6818", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBBA0", Offset = "0x8DBBA0")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBBA0", Offset = "0x8DBBA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBBA0", Offset = "0x8DBBA0")]
		public ClaymoreEntityQualifiedVariable Target;

		[Token(Token = "0x170003E0")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AA2")]
			[Address(RVA = "0xAA6594", Offset = "0xAA6594", VA = "0xAA6594", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E1")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AA3")]
			[Address(RVA = "0xAA659C", Offset = "0xAA659C", VA = "0xAA659C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xAA65A4", Offset = "0xAA65A4", VA = "0xAA65A4", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xAA65EC", Offset = "0xAA65EC", VA = "0xAA65EC", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xAA6698", Offset = "0xAA6698", VA = "0xAA6698", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xAA67C0", Offset = "0xAA67C0", VA = "0xAA67C0")]
		public SetTargetNode()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA1F0", Offset = "0x8AA1F0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA1F0", Offset = "0x8AA1F0")]
	public class ShowPopupUINode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005D9")]
		public class ShowPopupUINodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002370")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ShowPopupUINode source;

			[Token(Token = "0x6002EE8")]
			[Address(RVA = "0xAA696C", Offset = "0xAA696C", VA = "0xAA696C")]
			public ShowPopupUINodeRuntime(ShowPopupUINode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EE9")]
			[Address(RVA = "0xAA6B34", Offset = "0xAA6B34", VA = "0xAA6B34", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8DBC14", Offset = "0x8DBC14")]
		[SerializeField]
		private PopupUIAssetGlobalEvent _showPopupUIGlobalEvent;

		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBC60", Offset = "0x8DBC60")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBC60", Offset = "0x8DBC60")]
		[SerializeField]
		private PopupUIAsset _popupUIAsset;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBCA8", Offset = "0x8DBCA8")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBCA8", Offset = "0x8DBCA8")]
		[SerializeField]
		private TransformVariable _parent;

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xAA68BC", Offset = "0xAA68BC", VA = "0xAA68BC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xAA69E4", Offset = "0xAA69E4", VA = "0xAA69E4", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xAA6B2C", Offset = "0xAA6B2C", VA = "0xAA6B2C")]
		public ShowPopupUINode()
		{
		}
	}
	[Token(Token = "0x2000426")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA298", Offset = "0x8AA298")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA298", Offset = "0x8AA298")]
	public class SkipLevelNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DA")]
		public class SkipSceneNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002371")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private SkipLevelNode _source;

			[Token(Token = "0x6002EEA")]
			[Address(RVA = "0xAA6C84", Offset = "0xAA6C84", VA = "0xAA6C84")]
			public SkipSceneNodeRuntime(SkipLevelNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EEB")]
			[Address(RVA = "0xAA6D04", Offset = "0xAA6D04", VA = "0xAA6D04", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private LevelManager _levelManager;

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xAA6BD4", Offset = "0xAA6BD4", VA = "0xAA6BD4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xAA6CFC", Offset = "0xAA6CFC", VA = "0xAA6CFC")]
		public SkipLevelNode()
		{
		}
	}
	[Token(Token = "0x2000427")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA340", Offset = "0x8AA340")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA340", Offset = "0x8AA340")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA340", Offset = "0x8AA340")]
	public class SpawnCritPointNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DB")]
		public class SpawnCritPointNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002372")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private SpawnCritPointNode source;

			[Token(Token = "0x4002373")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private FloatVariable preCrit;

			[Token(Token = "0x4002374")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private FloatVariable critDuration;

			[Token(Token = "0x6002EEC")]
			[Address(RVA = "0xAA72B0", Offset = "0xAA72B0", VA = "0xAA72B0")]
			public SpawnCritPointNodeRuntime(SpawnCritPointNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EED")]
			[Address(RVA = "0xAA7480", Offset = "0xAA7480", VA = "0xAA7480", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CritType[] PossibleCritTypes;

		[Token(Token = "0x4001C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public CritType CritType;

		[Token(Token = "0x4001C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBD00", Offset = "0x8DBD00")]
		public FloatReference PreCritDuration;

		[Token(Token = "0x4001C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBD10", Offset = "0x8DBD10")]
		public FloatReference CritDuration;

		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBD20", Offset = "0x8DBD20")]
		public float MinAngle;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBD30", Offset = "0x8DBD30")]
		public float MaxAngle;

		[Token(Token = "0x170003E2")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0xAA6D7C", Offset = "0xAA6D7C", VA = "0xAA6D7C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E3")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0xAA6D84", Offset = "0xAA6D84", VA = "0xAA6D84", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xAA6D8C", Offset = "0xAA6D8C", VA = "0xAA6D8C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xAA6FA8", Offset = "0xAA6FA8", VA = "0xAA6FA8")]
		public static void SpawnCrit(float maxAngle, float minAngle, float preCritDuration, float duration, Enemy enemy, CritType critType)
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xAA7130", Offset = "0xAA7130", VA = "0xAA7130")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xAA7200", Offset = "0xAA7200", VA = "0xAA7200", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xAA73CC", Offset = "0xAA73CC", VA = "0xAA73CC")]
		public SpawnCritPointNode()
		{
		}
	}
	[Token(Token = "0x2000428")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA40C", Offset = "0x8AA40C")]
	[AttributeAttribute(Name = "AutoNodeAttribute", RVA = "0x8AA40C", Offset = "0x8AA40C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA40C", Offset = "0x8AA40C")]
	public class StartAttackNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DC")]
		public class StartAttackNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002375")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly StartAttackNode source;

			[Token(Token = "0x4002376")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private bool pendingAttack;

			[Token(Token = "0x6002EEE")]
			[Address(RVA = "0xA736F8", Offset = "0xA736F8", VA = "0xA736F8")]
			public StartAttackNodeRuntime(StartAttackNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EEF")]
			[Address(RVA = "0xA73778", Offset = "0xA73778", VA = "0xA73778")]
			private void OnFinished(bool success)
			{
			}

			[Token(Token = "0x6002EF0")]
			[Address(RVA = "0xA7379C", Offset = "0xA7379C", VA = "0xA7379C", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EF1")]
			[Address(RVA = "0xA73888", Offset = "0xA73888", VA = "0xA73888", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBD40", Offset = "0x8DBD40")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBD40", Offset = "0x8DBD40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBD40", Offset = "0x8DBD40")]
		public AttackSequence Attack;

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xA735A4", Offset = "0xA735A4", VA = "0xA735A4", Slot = "10")]
		public override void AutoPopulate(UnityEngine.Object asset)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xA73648", Offset = "0xA73648", VA = "0xA73648", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xA73770", Offset = "0xA73770", VA = "0xA73770")]
		public StartAttackNode()
		{
		}
	}
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA4F0", Offset = "0x8AA4F0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA4F0", Offset = "0x8AA4F0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA4F0", Offset = "0x8AA4F0")]
	public class StartStrafeNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DD")]
		public class StartStrafeNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002EF2")]
			[Address(RVA = "0xA73A7C", Offset = "0xA73A7C", VA = "0xA73A7C")]
			public StartStrafeNodeRuntime(StartStrafeNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EF3")]
			[Address(RVA = "0xA73AF8", Offset = "0xA73AF8", VA = "0xA73AF8", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float maxDegrees;

		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float timeout;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool invert;

		[Token(Token = "0x170003E4")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AB7")]
			[Address(RVA = "0xA738FC", Offset = "0xA738FC", VA = "0xA738FC", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E5")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AB8")]
			[Address(RVA = "0xA73904", Offset = "0xA73904", VA = "0xA73904", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xA7390C", Offset = "0xA7390C", VA = "0xA7390C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xA739CC", Offset = "0xA739CC", VA = "0xA739CC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xA73AE4", Offset = "0xA73AE4", VA = "0xA73AE4")]
		public StartStrafeNode()
		{
		}
	}
	[Token(Token = "0x200042A")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA5BC", Offset = "0x8AA5BC")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA5BC", Offset = "0x8AA5BC")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA5BC", Offset = "0x8AA5BC")]
	public class StopAttacksNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DE")]
		public class StopAttacksNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x6002EF4")]
			[Address(RVA = "0xA73CD8", Offset = "0xA73CD8", VA = "0xA73CD8")]
			public StopAttacksNodeRuntime(StopAttacksNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EF5")]
			[Address(RVA = "0xA73D48", Offset = "0xA73D48", VA = "0xA73D48", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x170003E6")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0xA73BD0", Offset = "0xA73BD0", VA = "0xA73BD0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E7")]
		public override bool UseInline
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0xA73BD8", Offset = "0xA73BD8", VA = "0xA73BD8", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xA73BE0", Offset = "0xA73BE0", VA = "0xA73BE0", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xA73C28", Offset = "0xA73C28", VA = "0xA73C28", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xA73D40", Offset = "0xA73D40", VA = "0xA73D40")]
		public StopAttacksNode()
		{
		}
	}
	[Token(Token = "0x200042B")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA688", Offset = "0x8AA688")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA688", Offset = "0x8AA688")]
	public class StopAudioNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005DF")]
		public class StopAudioNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002377")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private StopAudioNode _source;

			[Token(Token = "0x6002EF6")]
			[Address(RVA = "0xA73FC0", Offset = "0xA73FC0", VA = "0xA73FC0")]
			public StopAudioNodeRuntime(StopAudioNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EF7")]
			[Address(RVA = "0xA74040", Offset = "0xA74040", VA = "0xA74040", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBDB4", Offset = "0x8DBDB4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBDB4", Offset = "0x8DBDB4")]
		[SerializeField]
		private AudioKeyData _audioKey;

		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBDFC", Offset = "0x8DBDFC")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBDFC", Offset = "0x8DBDFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8DBDFC", Offset = "0x8DBDFC")]
		private TransformVariable _transform;

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xA73DC8", Offset = "0xA73DC8", VA = "0xA73DC8", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xA73F10", Offset = "0xA73F10", VA = "0xA73F10", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xA74038", Offset = "0xA74038", VA = "0xA74038")]
		public StopAudioNode()
		{
		}
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA730", Offset = "0x8AA730")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA730", Offset = "0x8AA730")]
	public class StopMoveNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E0")]
		public class StopMoveNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002378")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private StopMoveNode source;

			[Token(Token = "0x6002EF8")]
			[Address(RVA = "0xA7426C", Offset = "0xA7426C", VA = "0xA7426C")]
			public StopMoveNodeRuntime(StopMoveNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002EF9")]
			[Address(RVA = "0xA7432C", Offset = "0xA7432C", VA = "0xA7432C", Slot = "20")]
			public override NodeStatus UpdateStatus(float elapsed)
			{
				return default(NodeStatus);
			}
		}

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool stopRotation;

		[Token(Token = "0x170003E8")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AC4")]
			[Address(RVA = "0xA7412C", Offset = "0xA7412C", VA = "0xA7412C", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003E9")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AC5")]
			[Address(RVA = "0xA74134", Offset = "0xA74134", VA = "0xA74134", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xA7413C", Offset = "0xA7413C", VA = "0xA7413C", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xA741BC", Offset = "0xA741BC", VA = "0xA741BC", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xA74324", Offset = "0xA74324", VA = "0xA74324")]
		public StopMoveNode()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA7D8", Offset = "0x8AA7D8")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA7D8", Offset = "0x8AA7D8")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA7D8", Offset = "0x8AA7D8")]
	public class TimeScaleNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E1")]
		public class TimeScaleNodeRuntime : BehaviorTreeActionRuntimeNode<BehaviorRuntimeTree>
		{
			[Token(Token = "0x4002379")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TimeScaleNode source;

			[Token(Token = "0x6002EFA")]
			[Address(RVA = "0xA74538", Offset = "0xA74538", VA = "0xA74538")]
			public TimeScaleNodeRuntime(TimeScaleNode node, BehaviorRuntimeTree graph)
			{
			}

			[Token(Token = "0x6002EFB")]
			[Address(RVA = "0xA74754", Offset = "0xA74754", VA = "0xA74754", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TimeScaleRequestGlobalEvent _timeScaleGlobalEvent;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8DBE78", Offset = "0x8DBE78")]
		[SerializeField]
		private float _timeScale;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool _isPersistent;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8DBEC8", Offset = "0x8DBEC8")]
		[SerializeField]
		private float _length;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AnimationCurve _rampCurve;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float _rampTime;

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xA743CC", Offset = "0xA743CC", VA = "0xA743CC")]
		private void Raise()
		{
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xA74488", Offset = "0xA74488", VA = "0xA74488", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xA745B0", Offset = "0xA745B0", VA = "0xA745B0", Slot = "6")]
		public override ContentValidation Validate()
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xA746F8", Offset = "0xA746F8", VA = "0xA746F8")]
		public TimeScaleNode()
		{
		}
	}
	[Token(Token = "0x200042E")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AA8A4", Offset = "0x8AA8A4")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA8A4", Offset = "0x8AA8A4")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA8A4", Offset = "0x8AA8A4")]
	public class ToggleHeadLookIK : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E2")]
		public enum LookState
		{
			[Token(Token = "0x400237B")]
			LookAtCurrentTarget,
			[Token(Token = "0x400237C")]
			CancelHeadLookIK
		}

		[Token(Token = "0x20005E3")]
		public class ToggleHeadLookIKRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x200060D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8AB34C", Offset = "0x8AB34C")]
			private sealed class <DoTemporaryHeadlookToggle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x40023E0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x40023E1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x40023E2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public LookState toggleState;

				[Token(Token = "0x40023E3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
				public NPCHeadLookIK headLook;

				[Token(Token = "0x40023E4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
				public float duration;

				[Token(Token = "0x170004B8")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x6002F3E")]
					[Address(RVA = "0xA74C48", Offset = "0xA74C48", VA = "0xA74C48", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x170004B9")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x6002F40")]
					[Address(RVA = "0xA74CB0", Offset = "0xA74CB0", VA = "0xA74CB0", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002F3B")]
				[Address(RVA = "0xA74B00", Offset = "0xA74B00", VA = "0xA74B00")]
				[DebuggerHidden]
				public <DoTemporaryHeadlookToggle>d__4(int <>1__state)
				{
				}

				[Token(Token = "0x6002F3C")]
				[Address(RVA = "0xA74B2C", Offset = "0xA74B2C", VA = "0xA74B2C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x6002F3D")]
				[Address(RVA = "0xA74B30", Offset = "0xA74B30", VA = "0xA74B30", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x6002F3F")]
				[Address(RVA = "0xA74C50", Offset = "0xA74C50", VA = "0xA74C50", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x400237D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ToggleHeadLookIK source;

			[Token(Token = "0x400237E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IEnumerator headlookCoroutine;

			[Token(Token = "0x6002EFC")]
			[Address(RVA = "0xA74870", Offset = "0xA74870", VA = "0xA74870")]
			public ToggleHeadLookIKRuntime(ToggleHeadLookIK node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002EFD")]
			[Address(RVA = "0xA748F0", Offset = "0xA748F0", VA = "0xA748F0", Slot = "15")]
			public override void InitializeNode()
			{
			}

			[Token(Token = "0x6002EFE")]
			[Address(RVA = "0xA74A64", Offset = "0xA74A64", VA = "0xA74A64")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8E4F5C", Offset = "0x8E4F5C")]
			private IEnumerator DoTemporaryHeadlookToggle(NPCHeadLookIK headLook, LookState toggleState, float duration)
			{
				return null;
			}
		}

		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public LookState State;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool OverridesTemporaryDisable;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool TemporaryDisable;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "BoolConditionalDrawAttribute", RVA = "0x8DBF3C", Offset = "0x8DBF3C")]
		public float DisableDuration;

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xA747C0", Offset = "0xA747C0", VA = "0xA747C0", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xA748E8", Offset = "0xA748E8", VA = "0xA748E8")]
		public ToggleHeadLookIK()
		{
		}
	}
	[Token(Token = "0x200042F")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AA970", Offset = "0x8AA970")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AA970", Offset = "0x8AA970")]
	public class ToggleHitCollidersNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E4")]
		private class ToggleHitCollisionNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x400237F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private readonly ToggleHitCollidersNode _source;

			[Token(Token = "0x6002EFF")]
			[Address(RVA = "0xA74DF8", Offset = "0xA74DF8", VA = "0xA74DF8")]
			public ToggleHitCollisionNodeRuntime(ToggleHitCollidersNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002F00")]
			[Address(RVA = "0xA74E78", Offset = "0xA74E78", VA = "0xA74E78", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBF74", Offset = "0x8DBF74")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBF74", Offset = "0x8DBF74")]
		[SerializeField]
		private bool _enable;

		[Token(Token = "0x170003EA")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001ACF")]
			[Address(RVA = "0xA74CB8", Offset = "0xA74CB8", VA = "0xA74CB8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EB")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AD0")]
			[Address(RVA = "0xA74CC0", Offset = "0xA74CC0", VA = "0xA74CC0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0xA74CC8", Offset = "0xA74CC8", VA = "0xA74CC8", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0xA74D48", Offset = "0xA74D48", VA = "0xA74D48", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0xA74E70", Offset = "0xA74E70", VA = "0xA74E70")]
		public ToggleHitCollidersNode()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AAA18", Offset = "0x8AAA18")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AAA18", Offset = "0x8AAA18")]
	public class ToggleTargetableNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E5")]
		public class ToggleTargetableNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002380")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private ToggleTargetableNode _source;

			[Token(Token = "0x6002F01")]
			[Address(RVA = "0xA755C4", Offset = "0xA755C4", VA = "0xA755C4")]
			public ToggleTargetableNodeRuntime(ToggleTargetableNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002F02")]
			[Address(RVA = "0xA7564C", Offset = "0xA7564C", VA = "0xA7564C", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DBFD4", Offset = "0x8DBFD4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DBFD4", Offset = "0x8DBFD4")]
		[SerializeField]
		private bool _enable;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC034", Offset = "0x8DC034")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC034", Offset = "0x8DC034")]
		[SerializeField]
		private bool setDashTargetable;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC094", Offset = "0x8DC094")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC094", Offset = "0x8DC094")]
		[SerializeField]
		private bool setRotateTargetable;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC0F4", Offset = "0x8DC0F4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC0F4", Offset = "0x8DC0F4")]
		[SerializeField]
		private bool setProjectileTargetable;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC154", Offset = "0x8DC154")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC154", Offset = "0x8DC154")]
		[SerializeField]
		private bool setLOSBlocker;

		[Token(Token = "0x170003EC")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AD4")]
			[Address(RVA = "0xA74F04", Offset = "0xA74F04", VA = "0xA74F04", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003ED")]
		public override bool UseInline
		{
			[Token(Token = "0x6001AD5")]
			[Address(RVA = "0xA74F0C", Offset = "0xA74F0C", VA = "0xA74F0C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0xA74F14", Offset = "0xA74F14", VA = "0xA74F14", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0xA75514", Offset = "0xA75514", VA = "0xA75514", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xA7563C", Offset = "0xA7563C", VA = "0xA7563C")]
		public ToggleTargetableNode()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "NodeIconAttribute", RVA = "0x8AAAC0", Offset = "0x8AAAC0")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AAAC0", Offset = "0x8AAAC0")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AAAC0", Offset = "0x8AAAC0")]
	public class TriggerHitReactionNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E6")]
		public enum HitReactionType
		{
			[Token(Token = "0x4002382")]
			Stagger,
			[Token(Token = "0x4002383")]
			Flinch,
			[Token(Token = "0x4002384")]
			Knockback
		}

		[Token(Token = "0x20005E7")]
		public class TriggerHitReactionNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002385")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private TriggerHitReactionNode source;

			[Token(Token = "0x6002F03")]
			[Address(RVA = "0xA80B78", Offset = "0xA80B78", VA = "0xA80B78")]
			public TriggerHitReactionNodeRuntime(TriggerHitReactionNode node, ClaymoreBehaviorTreeRuntime runtimeGraph)
			{
			}

			[Token(Token = "0x6002F04")]
			[Address(RVA = "0xA80BF8", Offset = "0xA80BF8", VA = "0xA80BF8", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC1B4", Offset = "0x8DC1B4")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC1B4", Offset = "0x8DC1B4")]
		public HitReactionType ReactionType;

		[Token(Token = "0x170003EE")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001AD9")]
			[Address(RVA = "0xA80A38", Offset = "0xA80A38", VA = "0xA80A38", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003EF")]
		public override bool UseInline
		{
			[Token(Token = "0x6001ADA")]
			[Address(RVA = "0xA80A40", Offset = "0xA80A40", VA = "0xA80A40", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xA80A48", Offset = "0xA80A48", VA = "0xA80A48", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xA80AC8", Offset = "0xA80AC8", VA = "0xA80AC8", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xA80BF0", Offset = "0xA80BF0", VA = "0xA80BF0")]
		public TriggerHitReactionNode()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "NodeMenuAttribute", RVA = "0x8AAB8C", Offset = "0x8AAB8C")]
	[AttributeAttribute(Name = "NodeColorAttribute", RVA = "0x8AAB8C", Offset = "0x8AAB8C")]
	public class UnplantFeetNode : BehaviorTreeActionNode
	{
		[Token(Token = "0x20005E8")]
		public class UnplantFeetNodeRuntime : BehaviorTreeActionRuntimeNode<ClaymoreBehaviorTreeRuntime>
		{
			[Token(Token = "0x4002386")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private UnplantFeetNode _source;

			[Token(Token = "0x6002F05")]
			[Address(RVA = "0xAD4494", Offset = "0xAD4494", VA = "0xAD4494")]
			public UnplantFeetNodeRuntime(UnplantFeetNode node, ClaymoreBehaviorTreeRuntime graph)
			{
			}

			[Token(Token = "0x6002F06")]
			[Address(RVA = "0xAD4514", Offset = "0xAD4514", VA = "0xAD4514", Slot = "15")]
			public override void InitializeNode()
			{
			}
		}

		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "NodeViewFieldAttribute", RVA = "0x8DC200", Offset = "0x8DC200")]
		[AttributeAttribute(Name = "NodeEditViewFieldAttribute", RVA = "0x8DC200", Offset = "0x8DC200")]
		[SerializeField]
		private bool _forceUnplant;

		[Token(Token = "0x170003F0")]
		public override bool AlwaysSucceed
		{
			[Token(Token = "0x6001ADE")]
			[Address(RVA = "0xAD4354", Offset = "0xAD4354", VA = "0xAD4354", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003F1")]
		public override bool UseInline
		{
			[Token(Token = "0x6001ADF")]
			[Address(RVA = "0xAD435C", Offset = "0xAD435C", VA = "0xAD435C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xAD4364", Offset = "0xAD4364", VA = "0xAD4364", Slot = "15")]
		public override string GetBody(string indent)
		{
			return null;
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xAD43E4", Offset = "0xAD43E4", VA = "0xAD43E4", Slot = "11")]
		public override VignetteRuntimeNode GetRuntime(VignetteRuntimeGraph graph)
		{
			return null;
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xAD450C", Offset = "0xAD450C", VA = "0xAD450C")]
		public UnplantFeetNode()
		{
		}
	}
}
