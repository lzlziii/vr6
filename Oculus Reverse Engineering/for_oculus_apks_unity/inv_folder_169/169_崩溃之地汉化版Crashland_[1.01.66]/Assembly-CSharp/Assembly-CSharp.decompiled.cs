using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Net.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Security.Cryptography;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using Ara;
using Bolt;
using DigitalOpus.MB.Core;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using LIV.SDK.Unity;
using Lexic;
using NatCorder;
using NatCorder.Clocks;
using NatCorder.Inputs;
using NatCorder.Internal;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Realtime;
using TButt;
using TButt.Input;
using TButt.Services;
using TButt.Settings;
using TMPro;
using UdpKit;
using Unity.XRTools.Rendering;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.UI.Michsky.UI.Frost;
using UnityEngine.Video;
using UnityEngine.XR;
using Valve.VR;
using Viveport;
using Viveport.Internal;
using Weelco.VRKeyboard;
using wvr;
using wvr.render;
using wvr.render.thread;
using wvr.render.utils;

[assembly: AssemblyVersion("3.7.1.6")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C0C18", Offset = "0x5C0C18")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C36AC", Offset = "0x5C36AC")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C36C0", Offset = "0x5C36C0")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C0C28", Offset = "0x5C0C28")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C36D4", Offset = "0x5C36D4")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C36E8", Offset = "0x5C36E8")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C36FC", Offset = "0x5C36FC")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C0C38", Offset = "0x5C0C38")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C3710", Offset = "0x5C3710")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C3724", Offset = "0x5C3724")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C3738", Offset = "0x5C3738")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C374C", Offset = "0x5C374C")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C3760", Offset = "0x5C3760")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x5C3774", Offset = "0x5C3774")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C0C48", Offset = "0x5C0C48")]
public class Camera360 : MonoBehaviour
{
	[Token(Token = "0x200047B")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002595")]
		MouseXAndY,
		[Token(Token = "0x4002596")]
		MouseX,
		[Token(Token = "0x4002597")]
		MouseY
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RotationAxes axes;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityX;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sensitivityY;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumX;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumX;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumY;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumY;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationY;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x228C9B4", Offset = "0x228C9B4", VA = "0x228C9B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x228CC9C", Offset = "0x228CC9C", VA = "0x228CC9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x228CD80", Offset = "0x228CD80", VA = "0x228CD80")]
	public Camera360()
	{
	}
}
[Token(Token = "0x2000006")]
public class WobblePath : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float speed;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float amplitude;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 offset;

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x2308C18", Offset = "0x2308C18", VA = "0x2308C18")]
	private void Update()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x2308DBC", Offset = "0x2308DBC", VA = "0x2308DBC")]
	public WobblePath()
	{
	}
}
[Token(Token = "0x2000007")]
public class OldGUIExamplesCS : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D grumpy;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D beauty;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float w;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float h;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LTRect buttonRect1;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LTRect buttonRect2;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LTRect buttonRect3;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LTRect buttonRect4;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private LTRect grumpyRect;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LTRect beautyTileRect;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x2366B00", Offset = "0x2366B00", VA = "0x2366B00")]
	private void Start()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x2366F70", Offset = "0x2366F70", VA = "0x2366F70")]
	public void catMoved()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x2366FFC", Offset = "0x2366FFC", VA = "0x2366FFC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x236800C", Offset = "0x236800C", VA = "0x236800C")]
	public OldGUIExamplesCS()
	{
	}
}
[Token(Token = "0x2000008")]
public class TestingPunch : MonoBehaviour
{
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27E8", Offset = "0x5C27E8")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Light lt;

		[Token(Token = "0x60023BD")]
		[Address(RVA = "0x218A554", Offset = "0x218A554", VA = "0x218A554")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60023BE")]
		[Address(RVA = "0x218B524", Offset = "0x218B524", VA = "0x218B524")]
		internal void <Update>b__2(float val)
		{
		}
	}

	[Token(Token = "0x200047D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C27F8", Offset = "0x5C27F8")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x4002599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float start;

		[Token(Token = "0x400259A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TestingPunch <>4__this;

		[Token(Token = "0x60023BF")]
		[Address(RVA = "0x218A720", Offset = "0x218A720", VA = "0x218A720")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x60023C0")]
		[Address(RVA = "0x218B558", Offset = "0x218B558", VA = "0x218B558")]
		internal void <Update>b__6()
		{
		}
	}

	[Token(Token = "0x200047E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2808", Offset = "0x5C2808")]
	private sealed class <>c__DisplayClass4_2
	{
		[Token(Token = "0x400259B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject l;

		[Token(Token = "0x400259C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TestingPunch <>4__this;

		[Token(Token = "0x60023C1")]
		[Address(RVA = "0x218A728", Offset = "0x218A728", VA = "0x218A728")]
		public <>c__DisplayClass4_2()
		{
		}

		[Token(Token = "0x60023C2")]
		[Address(RVA = "0x218BA1C", Offset = "0x218BA1C", VA = "0x218BA1C")]
		internal void <Update>b__8(Vector2 val)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200047F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2818", Offset = "0x5C2818")]
	private sealed class <>c
	{
		[Token(Token = "0x400259D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400259E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action <>9__4_1;

		[Token(Token = "0x400259F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<float> <>9__4_4;

		[Token(Token = "0x40025A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Action <>9__4_5;

		[Token(Token = "0x40025A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<float> <>9__5_0;

		[Token(Token = "0x60023C4")]
		[Address(RVA = "0x218B330", Offset = "0x218B330", VA = "0x218B330")]
		public <>c()
		{
		}

		[Token(Token = "0x60023C5")]
		[Address(RVA = "0x218B338", Offset = "0x218B338", VA = "0x218B338")]
		internal void <Update>b__4_1()
		{
		}

		[Token(Token = "0x60023C6")]
		[Address(RVA = "0x218B3C4", Offset = "0x218B3C4", VA = "0x218B3C4")]
		internal void <Update>b__4_4(float v)
		{
		}

		[Token(Token = "0x60023C7")]
		[Address(RVA = "0x218B3C8", Offset = "0x218B3C8", VA = "0x218B3C8")]
		internal void <Update>b__4_5()
		{
		}

		[Token(Token = "0x60023C8")]
		[Address(RVA = "0x218B454", Offset = "0x218B454", VA = "0x218B454")]
		internal void <tweenStatically>b__5_0(float val)
		{
		}
	}

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve exportCurve;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float overShootValue;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LTDescr descr;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x2188824", Offset = "0x2188824", VA = "0x2188824")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x2188D84", Offset = "0x2188D84", VA = "0x2188D84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x218A55C", Offset = "0x218A55C", VA = "0x218A55C")]
	private static void tweenStatically(GameObject gameObject)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x218A730", Offset = "0x218A730", VA = "0x218A730")]
	private void enterMiniGameStart(object val)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x218A9AC", Offset = "0x218A9AC", VA = "0x218A9AC")]
	private void updateColor(Color c)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x218AAA0", Offset = "0x218AAA0", VA = "0x218AAA0")]
	private void delayedMethod(object myVal)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x218AD38", Offset = "0x218AD38", VA = "0x218AD38")]
	private void destroyOnComp(object p)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x21888D0", Offset = "0x21888D0", VA = "0x21888D0")]
	private string curveToString(AnimationCurve curve)
	{
		return null;
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x218AE40", Offset = "0x218AE40", VA = "0x218AE40")]
	public TestingPunch()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x218AE50", Offset = "0x218AE50", VA = "0x218AE50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3A8", Offset = "0x5CB3A8")]
	private void <Update>b__4_0()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x218AFA0", Offset = "0x218AFA0", VA = "0x218AFA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3B8", Offset = "0x5CB3B8")]
	private void <Update>b__4_3()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x218B1D8", Offset = "0x218B1D8", VA = "0x218B1D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3C8", Offset = "0x5CB3C8")]
	private void <Update>b__4_7(Vector2 val)
	{
	}
}
[Token(Token = "0x2000009")]
public class TestingRigidbodyCS : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject ball1;

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x218BBA8", Offset = "0x218BBA8", VA = "0x218BBA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x218BD34", Offset = "0x218BD34", VA = "0x218BD34")]
	private void Update()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x218BD38", Offset = "0x218BD38", VA = "0x218BD38")]
	public TestingRigidbodyCS()
	{
	}
}
[Token(Token = "0x200000A")]
public class GeneralAdvancedTechniques : MonoBehaviour
{
	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject avatarRecursive;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject avatar2dRecursive;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RectTransform wingPersonPanel;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform textField;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject avatarMove;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] movePts;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject[] avatarSpeed;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject[] avatarSpeed2;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3[] circleSm;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] circleLrg;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x22528D4", Offset = "0x22528D4", VA = "0x22528D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x2252F14", Offset = "0x2252F14", VA = "0x2252F14")]
	public GeneralAdvancedTechniques()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x2254640", Offset = "0x2254640", VA = "0x2254640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3D8", Offset = "0x5CB3D8")]
	private void <Start>b__10_0(float val)
	{
	}
}
[Token(Token = "0x200000B")]
public class GeneralBasicCS : MonoBehaviour
{
	[Token(Token = "0x2000480")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2828", Offset = "0x5C2828")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40025A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject rotator;

		[Token(Token = "0x60023C9")]
		[Address(RVA = "0x22557B4", Offset = "0x22557B4", VA = "0x22557B4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x60023CA")]
		[Address(RVA = "0x22557BC", Offset = "0x22557BC", VA = "0x22557BC")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x60023CB")]
		[Address(RVA = "0x22558A4", Offset = "0x22558A4", VA = "0x22558A4")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject prefabAvatar;

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x2254908", Offset = "0x2254908", VA = "0x2254908")]
	private void Start()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x2254DE0", Offset = "0x2254DE0", VA = "0x2254DE0")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x2254F00", Offset = "0x2254F00", VA = "0x2254F00")]
	public GeneralBasicCS()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x2254F08", Offset = "0x2254F08", VA = "0x2254F08")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3E8", Offset = "0x5CB3E8")]
	private void <advancedExamples>b__2_0()
	{
	}
}
[Token(Token = "0x200000C")]
public class GeneralBasics2dCS : MonoBehaviour
{
	[Token(Token = "0x2000481")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2838", Offset = "0x5C2838")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40025A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject rotator;

		[Token(Token = "0x60023CC")]
		[Address(RVA = "0x2256C60", Offset = "0x2256C60", VA = "0x2256C60")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60023CD")]
		[Address(RVA = "0x2256C68", Offset = "0x2256C68", VA = "0x2256C68")]
		internal void <advancedExamples>b__1()
		{
		}

		[Token(Token = "0x60023CE")]
		[Address(RVA = "0x2256D50", Offset = "0x2256D50", VA = "0x2256D50")]
		internal void <advancedExamples>b__2()
		{
		}
	}

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D dudeTexture;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject prefabParticles;

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x225592C", Offset = "0x225592C", VA = "0x225592C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x2255ED0", Offset = "0x2255ED0", VA = "0x2255ED0")]
	private GameObject createSpriteDude(string name, Vector3 pos, bool hasParticles = true)
	{
		return null;
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x2256300", Offset = "0x2256300", VA = "0x2256300")]
	private void advancedExamples()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x2256420", Offset = "0x2256420", VA = "0x2256420")]
	public GeneralBasics2dCS()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x2256428", Offset = "0x2256428", VA = "0x2256428")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB3F8", Offset = "0x5CB3F8")]
	private void <advancedExamples>b__4_0()
	{
	}
}
[Token(Token = "0x200000D")]
public class GeneralCameraShake : MonoBehaviour
{
	[Token(Token = "0x2000482")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2848", Offset = "0x5C2848")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40025A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeneralCameraShake <>4__this;

		[Token(Token = "0x40025A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float height;

		[Token(Token = "0x40025A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Action <>9__1;

		[Token(Token = "0x60023CF")]
		[Address(RVA = "0x2257484", Offset = "0x2257484", VA = "0x2257484")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60023D0")]
		[Address(RVA = "0x22574A0", Offset = "0x22574A0", VA = "0x22574A0")]
		internal void <bigGuyJump>b__0()
		{
		}

		[Token(Token = "0x60023D1")]
		[Address(RVA = "0x22575D8", Offset = "0x22575D8", VA = "0x22575D8")]
		internal void <bigGuyJump>b__1()
		{
		}
	}

	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2858", Offset = "0x5C2858")]
	private sealed class <>c__DisplayClass4_1
	{
		[Token(Token = "0x40025A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LTDescr shakeTween;

		[Token(Token = "0x60023D2")]
		[Address(RVA = "0x2257CCC", Offset = "0x2257CCC", VA = "0x2257CCC")]
		public <>c__DisplayClass4_1()
		{
		}

		[Token(Token = "0x60023D3")]
		[Address(RVA = "0x2257CD4", Offset = "0x2257CD4", VA = "0x2257CD4")]
		internal void <bigGuyJump>b__2(float val)
		{
		}
	}

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private GameObject avatarBig;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float jumpIter;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private AudioClip boomAudioClip;

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x2256DD8", Offset = "0x2256DD8", VA = "0x2256DD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x22572C4", Offset = "0x22572C4", VA = "0x22572C4")]
	private void bigGuyJump()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x225748C", Offset = "0x225748C", VA = "0x225748C")]
	public GeneralCameraShake()
	{
	}
}
[Token(Token = "0x200000E")]
public class GeneralEasingTypes : MonoBehaviour
{
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2868", Offset = "0x5C2868")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40025A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform obj1;

		[Token(Token = "0x40025A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float obj1val;

		[Token(Token = "0x40025AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GeneralEasingTypes <>4__this;

		[Token(Token = "0x60023D4")]
		[Address(RVA = "0x22582AC", Offset = "0x22582AC", VA = "0x22582AC")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x60023D5")]
		[Address(RVA = "0x2259370", Offset = "0x2259370", VA = "0x2259370")]
		internal void <demoEaseTypes>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float lineDrawScale;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AnimationCurve animationCurve;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string[] easeTypes;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x2257DB4", Offset = "0x2257DB4", VA = "0x2257DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x2257DB8", Offset = "0x2257DB8", VA = "0x2257DB8")]
	private void demoEaseTypes()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x22582B4", Offset = "0x22582B4", VA = "0x22582B4")]
	private void resetLines()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x2258418", Offset = "0x2258418", VA = "0x2258418")]
	public GeneralEasingTypes()
	{
	}
}
[Token(Token = "0x200000F")]
public class GeneralEventsListenersCS : MonoBehaviour
{
	[Token(Token = "0x2000485")]
	public enum MyEvents
	{
		[Token(Token = "0x40025AC")]
		CHANGE_COLOR,
		[Token(Token = "0x40025AD")]
		JUMP,
		[Token(Token = "0x40025AE")]
		LENGTH
	}

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 towardsRotation;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float turnForLength;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float turnForIter;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color fromColor;

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x225946C", Offset = "0x225946C", VA = "0x225946C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x2259584", Offset = "0x2259584", VA = "0x2259584")]
	private void Start()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x22596CC", Offset = "0x22596CC", VA = "0x22596CC")]
	private void jumpUp(LTEvent e)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x22597B8", Offset = "0x22597B8", VA = "0x22597B8")]
	private void changeColor(LTEvent e)
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x2259B98", Offset = "0x2259B98", VA = "0x2259B98")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x2259C48", Offset = "0x2259C48", VA = "0x2259C48")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x2259CBC", Offset = "0x2259CBC", VA = "0x2259CBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x2259F34", Offset = "0x2259F34", VA = "0x2259F34")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x225A01C", Offset = "0x225A01C", VA = "0x225A01C")]
	public GeneralEventsListenersCS()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x225A02C", Offset = "0x225A02C", VA = "0x225A02C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB408", Offset = "0x5CB408")]
	private void <changeColor>b__8_0(Color col)
	{
	}
}
[Token(Token = "0x2000010")]
public class GeneralSequencer : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject avatar1;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject star;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject dustCloudPrefab;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedScale;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x225A0FC", Offset = "0x225A0FC", VA = "0x225A0FC")]
	public void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x225A4B4", Offset = "0x225A4B4", VA = "0x225A4B4")]
	public GeneralSequencer()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x225A4C4", Offset = "0x225A4C4", VA = "0x225A4C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB418", Offset = "0x5CB418")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x2000011")]
public class GeneralSimpleUiCS : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000486")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2878", Offset = "0x5C2878")]
	private sealed class <>c
	{
		[Token(Token = "0x40025AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40025B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<float> <>9__1_1;

		[Token(Token = "0x60023D7")]
		[Address(RVA = "0x225B460", Offset = "0x225B460", VA = "0x225B460")]
		public <>c()
		{
		}

		[Token(Token = "0x60023D8")]
		[Address(RVA = "0x225B468", Offset = "0x225B468", VA = "0x225B468")]
		internal void <Start>b__1_1(float volume)
		{
		}
	}

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RectTransform button;

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x225A8F4", Offset = "0x225A8F4", VA = "0x225A8F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x225B104", Offset = "0x225B104", VA = "0x225B104")]
	public GeneralSimpleUiCS()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x225B10C", Offset = "0x225B10C", VA = "0x225B10C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB428", Offset = "0x5CB428")]
	private void <Start>b__1_0(Vector2 val)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x225B148", Offset = "0x225B148", VA = "0x225B148")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB438", Offset = "0x5CB438")]
	private void <Start>b__1_2(Vector3 val)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x225B1C0", Offset = "0x225B1C0", VA = "0x225B1C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB448", Offset = "0x5CB448")]
	private void <Start>b__1_3(Color val)
	{
	}
}
[Token(Token = "0x2000012")]
public class GeneralUISpaceCS : MonoBehaviour
{
	[Token(Token = "0x2000487")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2888", Offset = "0x5C2888")]
	private sealed class <>c__DisplayClass15_0
	{
		[Token(Token = "0x40025B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GeneralUISpaceCS <>4__this;

		[Token(Token = "0x40025B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string origText;

		[Token(Token = "0x60023D9")]
		[Address(RVA = "0x225C3B4", Offset = "0x225C3B4", VA = "0x225C3B4")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x60023DA")]
		[Address(RVA = "0x225C3C4", Offset = "0x225C3C4", VA = "0x225C3C4")]
		internal void <Start>b__0(float val)
		{
		}
	}

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RectTransform mainWindow;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RectTransform mainParagraphText;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RectTransform mainTitleText;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform mainButton1;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RectTransform mainButton2;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform pauseRing1;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RectTransform pauseRing2;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform pauseWindow;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RectTransform chatWindow;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform chatRect;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Sprite[] chatSprites;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform chatBar1;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public RectTransform chatBar2;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text chatText;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RectTransform rawImageRect;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x225B538", Offset = "0x225B538", VA = "0x225B538")]
	private void Start()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x225C3BC", Offset = "0x225C3BC", VA = "0x225C3BC")]
	public GeneralUISpaceCS()
	{
	}
}
[Token(Token = "0x2000013")]
public class LogoCinematic : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject lean;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject tween;

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x2460FA4", Offset = "0x2460FA4", VA = "0x2460FA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x2460FA8", Offset = "0x2460FA8", VA = "0x2460FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x24615A8", Offset = "0x24615A8", VA = "0x24615A8")]
	private void playBoom()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x2461E58", Offset = "0x2461E58", VA = "0x2461E58")]
	public LogoCinematic()
	{
	}
}
[Token(Token = "0x2000014")]
public class PathBezier2d : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] cubes;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dude1;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject dude2;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LTBezierPath visualizePath;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x20CF9F4", Offset = "0x20CF9F4", VA = "0x20CF9F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0x20CFD50", Offset = "0x20CFD50", VA = "0x20CFD50")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0x20CFDA4", Offset = "0x20CFDA4", VA = "0x20CFDA4")]
	public PathBezier2d()
	{
	}
}
[Token(Token = "0x2000015")]
public class ExampleSpline : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] trans;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LTSpline spline;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject ltLogo;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject ltLogo2;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float iter;

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x21D9FD4", Offset = "0x21D9FD4", VA = "0x21D9FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x21DA614", Offset = "0x21DA614", VA = "0x21DA614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x21DA6E0", Offset = "0x21DA6E0", VA = "0x21DA6E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x21DA6FC", Offset = "0x21DA6FC", VA = "0x21DA6FC")]
	public ExampleSpline()
	{
	}
}
[Token(Token = "0x2000016")]
public class PathSpline2d : MonoBehaviour
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] cubes;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject dude1;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject dude2;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LTSpline visualizePath;

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x20CFDAC", Offset = "0x20CFDAC", VA = "0x20CFDAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x20D01D0", Offset = "0x20D01D0", VA = "0x20D01D0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x20D0224", Offset = "0x20D0224", VA = "0x20D0224")]
	public PathSpline2d()
	{
	}
}
[Token(Token = "0x2000017")]
public class PathSplineEndlessCS : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject car;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject carInternal;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] cubes;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int cubesIter;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] trees;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int treesIter;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomIterWidth;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private LTSpline track;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> trackPts;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int zIter;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float carIter;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float carAdd;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int trackMaxItems;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int trackIter;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float pushTrackAhead;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float randomIter;

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x20D022C", Offset = "0x20D022C", VA = "0x20D022C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x20D0848", Offset = "0x20D0848", VA = "0x20D0848")]
	private void Update()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x20D10C8", Offset = "0x20D10C8", VA = "0x20D10C8")]
	private GameObject objectQueue(GameObject[] arr, ref int lastIter)
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x20D0360", Offset = "0x20D0360", VA = "0x20D0360")]
	private void addRandomTrackPoint()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x20D0708", Offset = "0x20D0708", VA = "0x20D0708")]
	private void refreshSpline()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x20D0B44", Offset = "0x20D0B44", VA = "0x20D0B44")]
	private void playSwish()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x20D12C8", Offset = "0x20D12C8", VA = "0x20D12C8")]
	public PathSplineEndlessCS()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x20D1370", Offset = "0x20D1370", VA = "0x20D1370")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB458", Offset = "0x5CB458")]
	private void <Start>b__17_0(float val)
	{
	}
}
[Token(Token = "0x2000018")]
public class PathSplinePerformanceCS : MonoBehaviour
{
	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject car;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject carInternal;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float circleLength;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float randomRange;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int trackNodes;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float carSpeed;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float tracerSpeed;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private LTSpline track;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int trackIter;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float carAdd;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float trackPosition;

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x20D1378", Offset = "0x20D1378", VA = "0x20D1378")]
	private void Start()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x20D17FC", Offset = "0x20D17FC", VA = "0x20D17FC")]
	private void Update()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x20D1F5C", Offset = "0x20D1F5C", VA = "0x20D1F5C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x20D19D8", Offset = "0x20D19D8", VA = "0x20D19D8")]
	private void playSwish()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x20D1FA4", Offset = "0x20D1FA4", VA = "0x20D1FA4")]
	public PathSplinePerformanceCS()
	{
	}
}
[Token(Token = "0x2000019")]
public class PathSplines : MonoBehaviour
{
	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform[] trans;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LTSpline cr;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject avatar1;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float iter;

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x20D2CEC", Offset = "0x20D2CEC", VA = "0x20D2CEC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x20D3020", Offset = "0x20D3020", VA = "0x20D3020")]
	private void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x20D319C", Offset = "0x20D319C", VA = "0x20D319C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x20D31F0", Offset = "0x20D31F0", VA = "0x20D31F0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x20D3254", Offset = "0x20D3254", VA = "0x20D3254")]
	public PathSplines()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0x20D325C", Offset = "0x20D325C", VA = "0x20D325C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB468", Offset = "0x5CB468")]
	private void <Start>b__4_0()
	{
	}
}
[Token(Token = "0x200001A")]
public class PathSplineTrackCS : MonoBehaviour
{
	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject car;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject carInternal;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject trackTrailRenderers;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] trackOnePoints;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LTSpline track;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int trackIter;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float trackPosition;

	[Token(Token = "0x6000078")]
	[Address(RVA = "0x20D1FF0", Offset = "0x20D1FF0", VA = "0x20D1FF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0x20D24B4", Offset = "0x20D24B4", VA = "0x20D24B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x20D2C30", Offset = "0x20D2C30", VA = "0x20D2C30")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x20D26AC", Offset = "0x20D26AC", VA = "0x20D26AC")]
	private void playSwish()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x20D2CDC", Offset = "0x20D2CDC", VA = "0x20D2CDC")]
	public PathSplineTrackCS()
	{
	}
}
[Token(Token = "0x200001B")]
public class TestingAllCS : MonoBehaviour
{
	[Token(Token = "0x2000488")]
	public delegate void NextFunc();

	[Token(Token = "0x2000489")]
	public enum TimingType
	{
		[Token(Token = "0x40025B4")]
		SteadyNormalTime,
		[Token(Token = "0x40025B5")]
		IgnoreTimeScale,
		[Token(Token = "0x40025B6")]
		HalfTimeScale,
		[Token(Token = "0x40025B7")]
		VariableTimeScale,
		[Token(Token = "0x40025B8")]
		Length
	}

	[Serializable]
	[Token(Token = "0x200048A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2898", Offset = "0x5C2898")]
	private sealed class <>c
	{
		[Token(Token = "0x40025B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40025BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Action<float> <>9__20_0;

		[Token(Token = "0x60023E0")]
		[Address(RVA = "0x2185DB0", Offset = "0x2185DB0", VA = "0x2185DB0")]
		public <>c()
		{
		}

		[Token(Token = "0x60023E1")]
		[Address(RVA = "0x2185DB8", Offset = "0x2185DB8", VA = "0x2185DB8")]
		internal void <cycleThroughExamples>b__20_0(float val)
		{
		}
	}

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AnimationCurve customAnimationCurve;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform pt1;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform pt2;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform pt3;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform pt4;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pt5;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int exampleIter;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string[] exampleFunctions;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool useEstimatedTime;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject ltLogo;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private TimingType timingType;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int descrTimeScaleChangeId;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 origin;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x2182844", Offset = "0x2182844", VA = "0x2182844")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x2182848", Offset = "0x2182848", VA = "0x2182848")]
	private void Start()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x218297C", Offset = "0x218297C", VA = "0x218297C")]
	private void pauseNow()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x2182A14", Offset = "0x2182A14", VA = "0x2182A14")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x2182BA8", Offset = "0x2182BA8", VA = "0x2182BA8")]
	private void endlessCallback()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x2182C34", Offset = "0x2182C34", VA = "0x2182C34")]
	private void cycleThroughExamples()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x21830CC", Offset = "0x21830CC", VA = "0x21830CC")]
	public void updateValue3Example()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x21833B8", Offset = "0x21833B8", VA = "0x21833B8")]
	public void updateValue3ExampleUpdate(Vector3 val)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x21833BC", Offset = "0x21833BC", VA = "0x21833BC")]
	public void updateValue3ExampleCallback(Vector3 val)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x218342C", Offset = "0x218342C", VA = "0x218342C")]
	public void loopTestClamp()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x2183668", Offset = "0x2183668", VA = "0x2183668")]
	public void loopTestPingPong()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x2183884", Offset = "0x2183884", VA = "0x2183884")]
	public void colorExample()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x2183A00", Offset = "0x2183A00", VA = "0x2183A00")]
	public void moveOnACurveExample()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x2183E00", Offset = "0x2183E00", VA = "0x2183E00")]
	public void customTweenExample()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x218420C", Offset = "0x218420C", VA = "0x218420C")]
	public void moveExample()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x21843BC", Offset = "0x21843BC", VA = "0x21843BC")]
	public void rotateExample()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x218469C", Offset = "0x218469C", VA = "0x218469C")]
	public void rotateOnUpdate(float val)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x21846A0", Offset = "0x21846A0", VA = "0x21846A0")]
	public void rotateFinished(object hash)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0x21847B4", Offset = "0x21847B4", VA = "0x21847B4")]
	public void scaleExample()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x218497C", Offset = "0x218497C", VA = "0x218497C")]
	public void updateValueExample()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x2184BE4", Offset = "0x2184BE4", VA = "0x2184BE4")]
	public void updateValueExampleCallback(float val, object hash)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x2184C9C", Offset = "0x2184C9C", VA = "0x2184C9C")]
	public void delayedCallExample()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x2184DD0", Offset = "0x2184DD0", VA = "0x2184DD0")]
	public void delayedCallExampleCallback()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x2184F98", Offset = "0x2184F98", VA = "0x2184F98")]
	public void alphaExample()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0x218511C", Offset = "0x218511C", VA = "0x218511C")]
	public void moveLocalExample()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0x2185334", Offset = "0x2185334", VA = "0x2185334")]
	public void rotateAroundExample()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0x21854A4", Offset = "0x21854A4", VA = "0x21854A4")]
	public void loopPause()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0x2185540", Offset = "0x2185540", VA = "0x2185540")]
	public void loopResume()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x21855DC", Offset = "0x21855DC", VA = "0x21855DC")]
	public void punchTest()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0x21856C4", Offset = "0x21856C4", VA = "0x21856C4")]
	public TestingAllCS()
	{
	}
}
[Token(Token = "0x200001C")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float elapsedTime;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MB3_TextureBaker.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0x2281048", Offset = "0x2281048", VA = "0x2281048")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x2281594", Offset = "0x2281594", VA = "0x2281594")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x2281838", Offset = "0x2281838", VA = "0x2281838")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200001D")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x600009E")]
	[Address(RVA = "0x2343568", Offset = "0x2343568", VA = "0x2343568")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x23435E0", Offset = "0x23435E0", VA = "0x23435E0")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200001E")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x2345EAC", Offset = "0x2345EAC", VA = "0x2345EAC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x23460A0", Offset = "0x23460A0", VA = "0x23460A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x23461B8", Offset = "0x23461B8", VA = "0x23461B8")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x2346850", Offset = "0x2346850", VA = "0x2346850")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x200001F")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x23447F0", Offset = "0x23447F0", VA = "0x23447F0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x2344868", Offset = "0x2344868", VA = "0x2344868")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x2000020")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x200048B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28A8", Offset = "0x5C28A8")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x17000281")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x234407C", Offset = "0x234407C", VA = "0x234407C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000282")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x234410C", Offset = "0x234410C", VA = "0x234410C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E2")]
		[Address(RVA = "0x2343D40", Offset = "0x2343D40", VA = "0x2343D40")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60023E3")]
		[Address(RVA = "0x2343E64", Offset = "0x2343E64", VA = "0x2343E64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023E4")]
		[Address(RVA = "0x2343E68", Offset = "0x2343E68", VA = "0x2343E68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023E6")]
		[Address(RVA = "0x2344084", Offset = "0x2344084", VA = "0x2344084", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject prefab;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject[] objs;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x23435E8", Offset = "0x23435E8", VA = "0x23435E8")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x23436F8", Offset = "0x23436F8", VA = "0x23436F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x2343CB4", Offset = "0x2343CB4", VA = "0x2343CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB478", Offset = "0x5CB478")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x2343D60", Offset = "0x2343D60", VA = "0x2343D60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x2343DD8", Offset = "0x2343DD8", VA = "0x2343DD8")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x2000021")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x2344114", Offset = "0x2344114", VA = "0x2344114")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x2344194", Offset = "0x2344194", VA = "0x2344194")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x2344268", Offset = "0x2344268", VA = "0x2344268")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x23442E0", Offset = "0x23442E0", VA = "0x23442E0")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x2000022")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int axis;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x23442E8", Offset = "0x23442E8", VA = "0x23442E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x2344430", Offset = "0x2344430", VA = "0x2344430")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x2000023")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x2344438", Offset = "0x2344438", VA = "0x2344438")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x23444B0", Offset = "0x23444B0", VA = "0x23444B0")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x2000024")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject swordPrefab;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject hatPrefab;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject glassesPrefab;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject workerPrefab;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject targetCharacter;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject swordInstance;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject glassesInstance;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject hatInstance;

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x2344870", Offset = "0x2344870", VA = "0x2344870")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x2344B60", Offset = "0x2344B60", VA = "0x2344B60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x2345D54", Offset = "0x2345D54", VA = "0x2345D54")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x2345EA4", Offset = "0x2345EA4", VA = "0x2345EA4")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x2000025")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Material[] materials;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x2346858", Offset = "0x2346858", VA = "0x2346858")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x23468D0", Offset = "0x23468D0", VA = "0x23468D0")]
	public void Start()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x23469C8", Offset = "0x23469C8", VA = "0x23469C8")]
	public void Update()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x2346D2C", Offset = "0x2346D2C", VA = "0x2346D2C")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x2000026")]
public class MB2_TestShowHide : MonoBehaviour
{
	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBaker mb;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] objs;

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x2461E60", Offset = "0x2461E60", VA = "0x2461E60")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x246200C", Offset = "0x246200C", VA = "0x246200C")]
	public MB2_TestShowHide()
	{
	}
}
[Token(Token = "0x2000027")]
public class MB2_TestUpdate : MonoBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB3_MultiMeshBaker multiMeshBaker;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[] objsToMove;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objWithChangingUVs;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector2[] uvs;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh m;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x2462014", Offset = "0x2462014", VA = "0x2462014")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x2462390", Offset = "0x2462390", VA = "0x2462390")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x2462A04", Offset = "0x2462A04", VA = "0x2462A04")]
	public MB2_TestUpdate()
	{
	}
}
[Token(Token = "0x2000028")]
public class MB3_TestAddingRemovingSkinnedMeshes : MonoBehaviour
{
	[Token(Token = "0x200048C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28B8", Offset = "0x5C28B8")]
	private sealed class <TestScript>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MB3_TestAddingRemovingSkinnedMeshes <>4__this;

		[Token(Token = "0x17000283")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x233DDDC", Offset = "0x233DDDC", VA = "0x233DDDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000284")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x233DE6C", Offset = "0x233DE6C", VA = "0x233DE6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023E8")]
		[Address(RVA = "0x233CE1C", Offset = "0x233CE1C", VA = "0x233CE1C")]
		[DebuggerHidden]
		public <TestScript>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60023E9")]
		[Address(RVA = "0x233CE44", Offset = "0x233CE44", VA = "0x233CE44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60023EA")]
		[Address(RVA = "0x233CE48", Offset = "0x233CE48", VA = "0x233CE48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60023EC")]
		[Address(RVA = "0x233DDE4", Offset = "0x233DDE4", VA = "0x233DDE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] g;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x233CD6C", Offset = "0x233CD6C", VA = "0x233CD6C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x233CD90", Offset = "0x233CD90", VA = "0x233CD90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB4F0", Offset = "0x5CB4F0")]
	private IEnumerator TestScript()
	{
		return null;
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x233CE3C", Offset = "0x233CE3C", VA = "0x233CE3C")]
	public MB3_TestAddingRemovingSkinnedMeshes()
	{
	}
}
[Token(Token = "0x2000029")]
public class MB3_TestBakeAllWithSameMaterial : MonoBehaviour
{
	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] listOfObjsToCombineGood;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] listOfObjsToCombineBad;

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x233DE74", Offset = "0x233DE74", VA = "0x233DE74")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x233DE78", Offset = "0x233DE78", VA = "0x233DE78")]
	private void testCombine()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x233E448", Offset = "0x233E448", VA = "0x233E448")]
	public MB3_TestBakeAllWithSameMaterial()
	{
	}
}
[Token(Token = "0x200002A")]
public class MB3_TestRenderTextureTestHarness : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D input;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool doColor;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color32 color;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x233E450", Offset = "0x233E450", VA = "0x233E450")]
	public Texture2D Create3x3Tex()
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x233E5DC", Offset = "0x233E5DC", VA = "0x233E5DC")]
	public Texture2D Create3x3Clone()
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x233E95C", Offset = "0x233E95C", VA = "0x233E95C")]
	public static void TestRender(Texture2D input, Texture2D output)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x233F5C0", Offset = "0x233F5C0", VA = "0x233F5C0")]
	public MB3_TestRenderTextureTestHarness()
	{
	}
}
[Token(Token = "0x200002B")]
public class AssemblyInfo
{
	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x227F104", Offset = "0x227F104", VA = "0x227F104")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x227F108", Offset = "0x227F108", VA = "0x227F108")]
	private void Update()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x227F10C", Offset = "0x227F10C", VA = "0x227F10C")]
	public AssemblyInfo()
	{
	}
}
[Token(Token = "0x200002C")]
public class MB3_KMeansClustering
{
	[Token(Token = "0x200048D")]
	private class DataPoint
	{
		[Token(Token = "0x40025C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 center;

		[Token(Token = "0x40025C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject gameObject;

		[Token(Token = "0x40025C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Cluster;

		[Token(Token = "0x60023EE")]
		[Address(RVA = "0x2339968", Offset = "0x2339968", VA = "0x2339968")]
		public DataPoint(GameObject go)
		{
		}
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<DataPoint> _normalizedDataToCluster;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3[] _clusters;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _numberOfClusters;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x2466240", Offset = "0x2466240", VA = "0x2466240")]
	public MB3_KMeansClustering(List<GameObject> gos, int numClusters)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x2466604", Offset = "0x2466604", VA = "0x2466604")]
	private void InitializeCentroids()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x2466750", Offset = "0x2466750", VA = "0x2466750")]
	private bool UpdateDataPointMeans(bool force)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x2466B50", Offset = "0x2466B50", VA = "0x2466B50")]
	private bool AnyAreEmpty(List<DataPoint> data)
	{
		return default(bool);
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x2466CD4", Offset = "0x2466CD4", VA = "0x2466CD4")]
	private bool UpdateClusterMembership()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x2466F64", Offset = "0x2466F64", VA = "0x2466F64")]
	private float ElucidanDistance(DataPoint dataPoint, Vector3 mean)
	{
		return default(float);
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x246702C", Offset = "0x246702C", VA = "0x246702C")]
	private int MinIndex(float[] distances)
	{
		return default(int);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x2467104", Offset = "0x2467104", VA = "0x2467104")]
	public List<Renderer> GetCluster(int idx, out Vector3 mean, out float size)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x2467574", Offset = "0x2467574", VA = "0x2467574")]
	public void Cluster()
	{
	}
}
[Token(Token = "0x200002D")]
public class MB_TextureCombinerRenderTexture
{
	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Material mat;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private RenderTexture _destinationTexture;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Camera myCamera;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _padding;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool _isNormalMap;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool _fixOutOfBoundsUVs;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool _doRenderAtlas;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rect[] rs;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<MB_TexSet> textureSets;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int indexOfTexSetToRender;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ShaderTextureProperty _texPropertyName;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MB3_TextureCombinerNonTextureProperties _resultMaterialTextureBlender;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Texture2D targTex;

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x2346D34", Offset = "0x2346D34", VA = "0x2346D34")]
	public Texture2D DoRenderAtlas(GameObject gameObject, int width, int height, int padding, Rect[] rss, List<MB_TexSet> textureSetss, int indexOfTexSetToRenders, ShaderTextureProperty texPropertyname, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender, bool isNormalMap, bool fixOutOfBoundsUVs, bool considerNonTextureProperties, MB3_TextureCombiner texCombiner, MB2_LogLevel LOG_LEV)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x2347560", Offset = "0x2347560", VA = "0x2347560")]
	public void OnRenderObject()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x234A718", Offset = "0x234A718", VA = "0x234A718")]
	private Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
	{
		return default(Color32);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x2348B54", Offset = "0x2348B54", VA = "0x2348B54")]
	public bool YisFlipped()
	{
		return default(bool);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x2348C7C", Offset = "0x2348C7C", VA = "0x2348C7C")]
	private void CopyScaledAndTiledToAtlas(MB_TexSet texSet, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, Rect rec, ShaderTextureProperty texturePropertyName, MB3_TextureCombinerNonTextureProperties resultMatTexBlender, bool yIsFlipped)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x234A388", Offset = "0x234A388", VA = "0x234A388")]
	private void _printTexture(Texture2D t)
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x234A8BC", Offset = "0x234A8BC", VA = "0x234A8BC")]
	public MB_TextureCombinerRenderTexture()
	{
	}
}
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C0C7C", Offset = "0x5C0C7C")]
public class MB3_AtlasPackerRenderTexture : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MB_TextureCombinerRenderTexture fastRenderer;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _doRenderAtlas;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int width;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int height;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int padding;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isNormalMap;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool fixOutOfBoundsUVs;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool considerNonTextureProperties;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Rect[] rects;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Texture2D tex1;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MB_TexSet> textureSets;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int indexOfTexSetToRender;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ShaderTextureProperty texPropertyName;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D testTex;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Material testMat;

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x2465BD8", Offset = "0x2465BD8", VA = "0x2465BD8")]
	public Texture2D OnRenderAtlas(MB3_TextureCombiner combiner)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x2465D54", Offset = "0x2465D54", VA = "0x2465D54")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x2465D98", Offset = "0x2465D98", VA = "0x2465D98")]
	public MB3_AtlasPackerRenderTexture()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
public class MB_AtlasesAndRects
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Texture2D[] atlases;

	[NonSerialized]
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<MB_MaterialAndUVRect> mat2rect_map;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string[] texPropertyNames;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x2342B2C", Offset = "0x2342B2C", VA = "0x2342B2C")]
	public MB_AtlasesAndRects()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class MB_MultiMaterial
{
	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Material combinedMaterial;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool considerMeshUVs;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Material> sourceMaterials;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x2342B34", Offset = "0x2342B34", VA = "0x2342B34")]
	public MB_MultiMaterial()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class MB_MaterialAndUVRect
{
	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Material material;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Rect atlasRect;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string srcObjName;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allPropsUseSameTiling;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5C3788", Offset = "0x5C3788")]
	public Rect allPropsUseSameTiling_sourceMaterialTiling;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x5C37CC", Offset = "0x5C37CC")]
	public Rect allPropsUseSameTiling_samplingEncapsulatinRect;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Rect propsUseDifferntTiling_srcUVsamplingRect;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public MB_TextureTilingTreatment tilingTreatment;

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x23444B8", Offset = "0x23444B8", VA = "0x23444B8")]
	public MB_MaterialAndUVRect(Material mat, Rect destRect, bool allPropsUseSameTiling, Rect sourceMaterialTiling, Rect samplingEncapsulatingRect, Rect srcUVsamplingRect, MB_TextureTilingTreatment treatment, string objName)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x2344580", Offset = "0x2344580", VA = "0x2344580", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x23445D4", Offset = "0x23445D4", VA = "0x23445D4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x234477C", Offset = "0x234477C", VA = "0x234477C")]
	public Rect GetEncapsulatingRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x2344798", Offset = "0x2344798", VA = "0x2344798")]
	public Rect GetMaterialTilingRect()
	{
		return default(Rect);
	}
}
[Token(Token = "0x2000032")]
public class MB2_TextureBakeResults : ScriptableObject
{
	[Token(Token = "0x200048E")]
	public class Material2AtlasRectangleMapper
	{
		[Token(Token = "0x40025C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private MB2_TextureBakeResults tbr;

		[Token(Token = "0x40025C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int[] numTimesMatAppearsInAtlas;

		[Token(Token = "0x40025C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB_MaterialAndUVRect[] matsAndSrcUVRect;

		[Token(Token = "0x60023EF")]
		[Address(RVA = "0x24643D8", Offset = "0x24643D8", VA = "0x24643D8")]
		public Material2AtlasRectangleMapper(MB2_TextureBakeResults res)
		{
		}

		[Token(Token = "0x60023F0")]
		[Address(RVA = "0x24647B4", Offset = "0x24647B4", VA = "0x24647B4")]
		public bool TryMapMaterialToUVRect(Material mat, Mesh m, int submeshIdx, int idxInResultMats, MB3_MeshCombinerSingle.MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisCache, out MB_TextureTilingTreatment tilingTreatment, out Rect rectInAtlas, out Rect encapsulatingRectOut, out Rect sourceMaterialTilingOut, ref string errorMsg, MB2_LogLevel logLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60023F1")]
		[Address(RVA = "0x2465468", Offset = "0x2465468", VA = "0x2465468")]
		private void UpgradeToCurrentVersion(MB2_TextureBakeResults tbr)
		{
		}
	}

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int version;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB_MaterialAndUVRect[] materialsAndUVRects;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool doMultiMaterial;

	[Token(Token = "0x1700000C")]
	public static int VERSION
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x2462A0C", Offset = "0x2462A0C", VA = "0x2462A0C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x2462A14", Offset = "0x2462A14", VA = "0x2462A14")]
	public MB2_TextureBakeResults()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x2462A34", Offset = "0x2462A34", VA = "0x2462A34")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x2462AD8", Offset = "0x2462AD8", VA = "0x2462AD8")]
	public static MB2_TextureBakeResults CreateForMaterialsOnRenderer(GameObject[] gos, List<Material> matsOnTargetRenderer)
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x24635DC", Offset = "0x24635DC", VA = "0x24635DC")]
	public bool DoAnyResultMatsUseConsiderMeshUVs()
	{
		return default(bool);
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x2463684", Offset = "0x2463684", VA = "0x2463684")]
	public bool ContainsMaterial(Material m)
	{
		return default(bool);
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x2463798", Offset = "0x2463798", VA = "0x2463798")]
	public string GetDescription()
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x2463D58", Offset = "0x2463D58", VA = "0x2463D58")]
	public static bool IsMeshAndMaterialRectEnclosedByAtlasRect(MB_TextureTilingTreatment tilingTreatment, Rect uvR, Rect sourceMaterialTiling, Rect samplingEncapsulatinRect, MB2_LogLevel logLevel)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000033")]
public class MB2_UpdateSkinnedMeshBoundsFromBones : MonoBehaviour
{
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform[] bones;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x2465514", Offset = "0x2465514", VA = "0x2465514")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x246569C", Offset = "0x246569C", VA = "0x246569C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x2465740", Offset = "0x2465740", VA = "0x2465740")]
	public MB2_UpdateSkinnedMeshBoundsFromBones()
	{
	}
}
[Token(Token = "0x2000034")]
public class MB2_UpdateSkinnedMeshBoundsFromBounds : MonoBehaviour
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<GameObject> objects;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x2465748", Offset = "0x2465748", VA = "0x2465748")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x2465B20", Offset = "0x2465B20", VA = "0x2465B20")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x2465BD0", Offset = "0x2465BD0", VA = "0x2465BD0")]
	public MB2_UpdateSkinnedMeshBoundsFromBounds()
	{
	}
}
[Token(Token = "0x2000035")]
public class MB3_BatchPrefabBaker : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200048F")]
	public class MB3_PrefabBakerRow
	{
		[Token(Token = "0x40025C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject sourcePrefab;

		[Token(Token = "0x40025C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject resultPrefab;

		[Token(Token = "0x60023F2")]
		[Address(RVA = "0x2465DB8", Offset = "0x2465DB8", VA = "0x2465DB8")]
		public MB3_PrefabBakerRow()
		{
		}
	}

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MB3_PrefabBakerRow[] prefabRows;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string outputPrefabFolder;

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x2465DA8", Offset = "0x2465DA8", VA = "0x2465DA8")]
	public MB3_BatchPrefabBaker()
	{
	}
}
[Token(Token = "0x2000036")]
public class MB3_BoneWeightCopier : MonoBehaviour
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject inputGameObject;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject outputPrefab;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float radius;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SkinnedMeshRenderer seamMesh;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string outputFolder;

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x2465DC0", Offset = "0x2465DC0", VA = "0x2465DC0")]
	public MB3_BoneWeightCopier()
	{
	}
}
[Token(Token = "0x2000037")]
public class MB3_DisableHiddenAnimations : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Animation> animationsToCull;

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x2465DD4", Offset = "0x2465DD4", VA = "0x2465DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x2465EF4", Offset = "0x2465EF4", VA = "0x2465EF4")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x2466054", Offset = "0x2466054", VA = "0x2466054")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x24661B4", Offset = "0x24661B4", VA = "0x24661B4")]
	public MB3_DisableHiddenAnimations()
	{
	}
}
[Token(Token = "0x2000038")]
public class MB3_MeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB3_MeshCombinerSingle _meshCombiner;

	[Token(Token = "0x1700000D")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x2339AE4", Offset = "0x2339AE4", VA = "0x2339AE4", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x2339AEC", Offset = "0x2339AEC", VA = "0x2339AEC")]
	public void BuildSceneMeshObject()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x2339B20", Offset = "0x2339B20", VA = "0x2339B20", Slot = "23")]
	public virtual bool ShowHide(GameObject[] gos, GameObject[] deleteGOs)
	{
		return default(bool);
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x2339B5C", Offset = "0x2339B5C", VA = "0x2339B5C", Slot = "24")]
	public virtual void ApplyShowHide()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x2339B90", Offset = "0x2339B90", VA = "0x2339B90", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x2339C74", Offset = "0x2339C74", VA = "0x2339C74", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x2339D58", Offset = "0x2339D58", VA = "0x2339D58")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x2339D8C", Offset = "0x2339D8C", VA = "0x2339D8C")]
	public MB3_MeshBaker()
	{
	}
}
[Token(Token = "0x2000039")]
public abstract class MB3_MeshBakerCommon : MB3_MeshBakerRoot
{
	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useObjsToMeshFromTexBaker;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool clearBuffersAfterBake;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string bakeAssetsInPlaceFolderPath;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C3824", Offset = "0x5C3824")]
	public GameObject resultPrefab;

	[Token(Token = "0x1700000E")]
	public abstract MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000103")]
		get;
	}

	[Token(Token = "0x1700000F")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000104")]
		[Address(RVA = "0x2339E90", Offset = "0x2339E90", VA = "0x2339E90", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000105")]
		[Address(RVA = "0x2339ED4", Offset = "0x2339ED4", VA = "0x2339ED4", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x2339F20", Offset = "0x2339F20", VA = "0x2339F20", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x233A19C", Offset = "0x233A19C", VA = "0x233A19C")]
	public void EnableDisableSourceObjectRenderers(bool show)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x233A5AC", Offset = "0x233A5AC", VA = "0x233A5AC", Slot = "8")]
	public virtual void ClearMesh()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x233A5F0", Offset = "0x233A5F0", VA = "0x233A5F0", Slot = "9")]
	public virtual void DestroyMesh()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x233A634", Offset = "0x233A634", VA = "0x233A634", Slot = "10")]
	public virtual void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x233A680", Offset = "0x233A680", VA = "0x233A680", Slot = "11")]
	public virtual int GetNumObjectsInCombined()
	{
		return default(int);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x233A6C4", Offset = "0x233A6C4", VA = "0x233A6C4", Slot = "12")]
	public virtual int GetNumVerticesFor(GameObject go)
	{
		return default(int);
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x233A710", Offset = "0x233A710", VA = "0x233A710")]
	public MB3_TextureBaker GetTextureBaker()
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

	[Token(Token = "0x600010F")]
	public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true);

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x233A894", Offset = "0x233A894", VA = "0x233A894", Slot = "15")]
	public virtual void Apply([Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x233A984", Offset = "0x233A984", VA = "0x233A984", Slot = "16")]
	public virtual void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] MB3_MeshCombiner.GenerateUV2Delegate uv2GenerationMethod)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x233AAD4", Offset = "0x233AAD4", VA = "0x233AAD4", Slot = "17")]
	public virtual bool CombinedMeshContains(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x233AB20", Offset = "0x233AB20", VA = "0x233AB20", Slot = "18")]
	public virtual void UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV1 = false, bool updateUV2 = false, bool updateColors = false, bool updateSkinningInfo = false)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x233AC68", Offset = "0x233AC68", VA = "0x233AC68", Slot = "19")]
	public virtual void UpdateSkinnedMeshApproximateBounds()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x233ACD0", Offset = "0x233ACD0", VA = "0x233ACD0", Slot = "20")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBones()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x233AD38", Offset = "0x233AD38", VA = "0x233AD38", Slot = "21")]
	public virtual void UpdateSkinnedMeshApproximateBoundsFromBounds()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x233ADA0", Offset = "0x233ADA0", VA = "0x233ADA0", Slot = "22")]
	protected virtual bool _ValidateForUpdateSkinnedMeshBounds()
	{
		return default(bool);
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x2339E04", Offset = "0x2339E04", VA = "0x2339E04")]
	protected MB3_MeshBakerCommon()
	{
	}
}
[Token(Token = "0x200003A")]
public class MB3_MeshBakerGrouper : MonoBehaviour
{
	[Token(Token = "0x2000490")]
	public enum ClusterType
	{
		[Token(Token = "0x40025CA")]
		none,
		[Token(Token = "0x40025CB")]
		grid,
		[Token(Token = "0x40025CC")]
		pie,
		[Token(Token = "0x40025CD")]
		agglomerative
	}

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MB3_MeshBakerGrouperCore grouper;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ClusterType clusterType;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GrouperData data;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C3834", Offset = "0x5C3834")]
	public Bounds sourceObjectBounds;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x233B034", Offset = "0x233B034", VA = "0x233B034")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x233B0F8", Offset = "0x233B0F8", VA = "0x233B0F8")]
	public MB3_MeshBakerGrouperCore CreateGrouper(ClusterType t, GrouperData data)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x233B2E0", Offset = "0x233B2E0", VA = "0x233B2E0")]
	public MB3_MeshBakerGrouper()
	{
	}
}
[Token(Token = "0x200003B")]
public abstract class MB3_MeshBakerRoot : MonoBehaviour
{
	[Token(Token = "0x2000491")]
	public class ZSortObjects
	{
		[Token(Token = "0x20006E0")]
		public class Item
		{
			[Token(Token = "0x400327C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject go;

			[Token(Token = "0x400327D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 point;

			[Token(Token = "0x6002C23")]
			[Address(RVA = "0x233C810", Offset = "0x233C810", VA = "0x233C810")]
			public Item()
			{
			}
		}

		[Token(Token = "0x20006E1")]
		public class ItemComparer : IComparer<Item>
		{
			[Token(Token = "0x6002C24")]
			[Address(RVA = "0x233C828", Offset = "0x233C828", VA = "0x233C828", Slot = "4")]
			public int Compare(Item a, Item b)
			{
				return default(int);
			}

			[Token(Token = "0x6002C25")]
			[Address(RVA = "0x233C818", Offset = "0x233C818", VA = "0x233C818")]
			public ItemComparer()
			{
			}
		}

		[Token(Token = "0x40025CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 sortAxis;

		[Token(Token = "0x60023F3")]
		[Address(RVA = "0x233C20C", Offset = "0x233C20C", VA = "0x233C20C")]
		public void SortByDistanceAlongAxis(List<GameObject> gos)
		{
		}

		[Token(Token = "0x60023F4")]
		[Address(RVA = "0x233C820", Offset = "0x233C820", VA = "0x233C820")]
		public ZSortObjects()
		{
		}
	}

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool DO_INTEGRITY_CHECKS;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 sortAxis;

	[Token(Token = "0x17000010")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D687C", Offset = "0x5D687C")]
	public abstract MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x600011C")]
		get;
		[Token(Token = "0x600011D")]
		set;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x233B408", Offset = "0x233B408", VA = "0x233B408", Slot = "6")]
	public virtual List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x233B410", Offset = "0x233B410", VA = "0x233B410")]
	public static bool DoCombinedValidate(MB3_MeshBakerRoot mom, MB_ObjsToCombineTypes objToCombineType, MB2_EditorMethodsInterface editorMethods, MB2_ValidationLevel validationLevel)
	{
		return default(bool);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x233B02C", Offset = "0x233B02C", VA = "0x233B02C")]
	protected MB3_MeshBakerRoot()
	{
	}
}
[Token(Token = "0x200003C")]
public class MB3_MultiMeshBaker : MB3_MeshBakerCommon
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected MB3_MultiMeshCombiner _meshCombiner;

	[Token(Token = "0x17000011")]
	public override MB3_MeshCombiner meshCombiner
	{
		[Token(Token = "0x6000122")]
		[Address(RVA = "0x233C8F0", Offset = "0x233C8F0", VA = "0x233C8F0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x233C8F8", Offset = "0x233C8F8", VA = "0x233C8F8", Slot = "13")]
	public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x233CADC", Offset = "0x233CADC", VA = "0x233CADC", Slot = "14")]
	public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOs, bool disableRendererInSource)
	{
		return default(bool);
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x233CCC0", Offset = "0x233CCC0", VA = "0x233CCC0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x233CCF4", Offset = "0x233CCF4", VA = "0x233CCF4")]
	public MB3_MultiMeshBaker()
	{
	}
}
[Token(Token = "0x200003D")]
public class MB3_TextureBaker : MB3_MeshBakerRoot
{
	[Token(Token = "0x2000492")]
	public delegate void OnCombinedTexturesCoroutineSuccess();

	[Token(Token = "0x2000493")]
	public delegate void OnCombinedTexturesCoroutineFail();

	[Token(Token = "0x2000494")]
	public class CreateAtlasesCoroutineResult
	{
		[Token(Token = "0x40025CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool success;

		[Token(Token = "0x40025D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool isFinished;

		[Token(Token = "0x60023FD")]
		[Address(RVA = "0x233FDD8", Offset = "0x233FDD8", VA = "0x233FDD8")]
		public CreateAtlasesCoroutineResult()
		{
		}
	}

	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28C8", Offset = "0x5C28C8")]
	private sealed class <CreateAtlasesCoroutine>d__94 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreateAtlasesCoroutineResult coroutineResult;

		[Token(Token = "0x40025D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MB3_TextureBaker <>4__this;

		[Token(Token = "0x40025D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxTimePerFrame;

		[Token(Token = "0x40025D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool saveAtlasesAsAssets;

		[Token(Token = "0x40025D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ProgressUpdateDelegate progressInfo;

		[Token(Token = "0x40025D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public MB2_EditorMethodsInterface editorMethods;

		[Token(Token = "0x40025D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MB3_TextureCombiner <combiner>5__2;

		[Token(Token = "0x40025DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <i>5__3;

		[Token(Token = "0x40025DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult <coroutineResult2>5__4;

		[Token(Token = "0x17000285")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002401")]
			[Address(RVA = "0x2343438", Offset = "0x2343438", VA = "0x2343438", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000286")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002403")]
			[Address(RVA = "0x23434C8", Offset = "0x23434C8", VA = "0x23434C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60023FE")]
		[Address(RVA = "0x233FDB8", Offset = "0x233FDB8", VA = "0x233FDB8")]
		[DebuggerHidden]
		public <CreateAtlasesCoroutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x60023FF")]
		[Address(RVA = "0x2341958", Offset = "0x2341958", VA = "0x2341958", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002400")]
		[Address(RVA = "0x234195C", Offset = "0x234195C", VA = "0x234195C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002402")]
		[Address(RVA = "0x2343440", Offset = "0x2343440", VA = "0x2343440", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB2_LogLevel LOG_LEVEL;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected MB2_TextureBakeResults _textureBakeResults;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected int _atlasPadding;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	protected int _maxAtlasSize;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected bool _useMaxAtlasWidthOverride;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	protected int _maxAtlasWidthOverride;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected bool _useMaxAtlasHeightOverride;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected int _maxAtlasHeightOverride;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected bool _resizePowerOfTwoTextures;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[SerializeField]
	protected bool _fixOutOfBoundsUVs;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	protected int _maxTilingBakeSize;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected MB2_PackingAlgorithmEnum _packingAlgorithm;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	protected bool _meshBakerTexturePackerForcePowerOfTwo;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected List<ShaderTextureProperty> _customShaderProperties;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected List<string> _customShaderPropNames_Depricated;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	protected bool _doMultiMaterial;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfTooBig;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	[SerializeField]
	protected bool _doMultiMaterialSplitAtlasesIfOBUVs;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	protected Material _resultMaterial;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected bool _considerNonTextureProperties;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[SerializeField]
	protected bool _doSuggestTreatment;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private CreateAtlasesCoroutineResult _coroutineResult;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MB_MultiMaterial[] resultMaterials;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<GameObject> objsToMesh;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public OnCombinedTexturesCoroutineSuccess onBuiltAtlasesSuccess;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public OnCombinedTexturesCoroutineFail onBuiltAtlasesFail;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MB_AtlasesAndRects[] OnCombinedTexturesCoroutineAtlasesAndRects;

	[Token(Token = "0x17000012")]
	public override MB2_TextureBakeResults textureBakeResults
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0x233F5C8", Offset = "0x233F5C8", VA = "0x233F5C8", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0x233F5D0", Offset = "0x233F5D0", VA = "0x233F5D0", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public virtual int atlasPadding
	{
		[Token(Token = "0x6000129")]
		[Address(RVA = "0x233F5D8", Offset = "0x233F5D8", VA = "0x233F5D8", Slot = "7")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012A")]
		[Address(RVA = "0x233F5E0", Offset = "0x233F5E0", VA = "0x233F5E0", Slot = "8")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public virtual int maxAtlasSize
	{
		[Token(Token = "0x600012B")]
		[Address(RVA = "0x233F5E8", Offset = "0x233F5E8", VA = "0x233F5E8", Slot = "9")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x233F5F0", Offset = "0x233F5F0", VA = "0x233F5F0", Slot = "10")]
		set
		{
		}
	}

	[Token(Token = "0x17000015")]
	public virtual bool useMaxAtlasWidthOverride
	{
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x233F5F8", Offset = "0x233F5F8", VA = "0x233F5F8", Slot = "11")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x233F600", Offset = "0x233F600", VA = "0x233F600", Slot = "12")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public virtual int maxAtlasWidthOverride
	{
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x233F608", Offset = "0x233F608", VA = "0x233F608", Slot = "13")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000130")]
		[Address(RVA = "0x233F610", Offset = "0x233F610", VA = "0x233F610", Slot = "14")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public virtual bool useMaxAtlasHeightOverride
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x233F618", Offset = "0x233F618", VA = "0x233F618", Slot = "15")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x233F620", Offset = "0x233F620", VA = "0x233F620", Slot = "16")]
		set
		{
		}
	}

	[Token(Token = "0x17000018")]
	public virtual int maxAtlasHeightOverride
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x233F628", Offset = "0x233F628", VA = "0x233F628", Slot = "17")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000134")]
		[Address(RVA = "0x233F630", Offset = "0x233F630", VA = "0x233F630", Slot = "18")]
		set
		{
		}
	}

	[Token(Token = "0x17000019")]
	public virtual bool resizePowerOfTwoTextures
	{
		[Token(Token = "0x6000135")]
		[Address(RVA = "0x233F638", Offset = "0x233F638", VA = "0x233F638", Slot = "19")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x233F640", Offset = "0x233F640", VA = "0x233F640", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public virtual bool fixOutOfBoundsUVs
	{
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x233F648", Offset = "0x233F648", VA = "0x233F648", Slot = "21")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x233F650", Offset = "0x233F650", VA = "0x233F650", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public virtual int maxTilingBakeSize
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x233F658", Offset = "0x233F658", VA = "0x233F658", Slot = "23")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600013A")]
		[Address(RVA = "0x233F660", Offset = "0x233F660", VA = "0x233F660", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public virtual MB2_PackingAlgorithmEnum packingAlgorithm
	{
		[Token(Token = "0x600013B")]
		[Address(RVA = "0x233F668", Offset = "0x233F668", VA = "0x233F668", Slot = "25")]
		get
		{
			return default(MB2_PackingAlgorithmEnum);
		}
		[Token(Token = "0x600013C")]
		[Address(RVA = "0x233F670", Offset = "0x233F670", VA = "0x233F670", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public bool meshBakerTexturePackerForcePowerOfTwo
	{
		[Token(Token = "0x600013D")]
		[Address(RVA = "0x233F678", Offset = "0x233F678", VA = "0x233F678")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600013E")]
		[Address(RVA = "0x233F680", Offset = "0x233F680", VA = "0x233F680")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public virtual List<ShaderTextureProperty> customShaderProperties
	{
		[Token(Token = "0x600013F")]
		[Address(RVA = "0x233F688", Offset = "0x233F688", VA = "0x233F688", Slot = "27")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000140")]
		[Address(RVA = "0x233F690", Offset = "0x233F690", VA = "0x233F690", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public virtual List<string> customShaderPropNames
	{
		[Token(Token = "0x6000141")]
		[Address(RVA = "0x233F698", Offset = "0x233F698", VA = "0x233F698", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000142")]
		[Address(RVA = "0x233F6A0", Offset = "0x233F6A0", VA = "0x233F6A0", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000020")]
	public virtual bool doMultiMaterial
	{
		[Token(Token = "0x6000143")]
		[Address(RVA = "0x233F6A8", Offset = "0x233F6A8", VA = "0x233F6A8", Slot = "31")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000144")]
		[Address(RVA = "0x233F6B0", Offset = "0x233F6B0", VA = "0x233F6B0", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public virtual bool doMultiMaterialSplitAtlasesIfTooBig
	{
		[Token(Token = "0x6000145")]
		[Address(RVA = "0x233F6B8", Offset = "0x233F6B8", VA = "0x233F6B8", Slot = "33")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000146")]
		[Address(RVA = "0x233F6C0", Offset = "0x233F6C0", VA = "0x233F6C0", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x17000022")]
	public virtual bool doMultiMaterialSplitAtlasesIfOBUVs
	{
		[Token(Token = "0x6000147")]
		[Address(RVA = "0x233F6C8", Offset = "0x233F6C8", VA = "0x233F6C8", Slot = "35")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x233F6D0", Offset = "0x233F6D0", VA = "0x233F6D0", Slot = "36")]
		set
		{
		}
	}

	[Token(Token = "0x17000023")]
	public virtual Material resultMaterial
	{
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x233F6D8", Offset = "0x233F6D8", VA = "0x233F6D8", Slot = "37")]
		get
		{
			return null;
		}
		[Token(Token = "0x600014A")]
		[Address(RVA = "0x233F6E0", Offset = "0x233F6E0", VA = "0x233F6E0", Slot = "38")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public bool considerNonTextureProperties
	{
		[Token(Token = "0x600014B")]
		[Address(RVA = "0x233F6E8", Offset = "0x233F6E8", VA = "0x233F6E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x233F6F0", Offset = "0x233F6F0", VA = "0x233F6F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public bool doSuggestTreatment
	{
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x233F6F8", Offset = "0x233F6F8", VA = "0x233F6F8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x233F700", Offset = "0x233F700", VA = "0x233F700")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public CreateAtlasesCoroutineResult CoroutineResult
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x233F708", Offset = "0x233F708", VA = "0x233F708")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x233F710", Offset = "0x233F710", VA = "0x233F710", Slot = "6")]
	public override List<GameObject> GetObjectsToCombine()
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x233F7A0", Offset = "0x233F7A0", VA = "0x233F7A0")]
	public MB_AtlasesAndRects[] CreateAtlases()
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x233FCA0", Offset = "0x233FCA0", VA = "0x233FCA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB568", Offset = "0x5CB568")]
	public IEnumerator CreateAtlasesCoroutine(ProgressUpdateDelegate progressInfo, CreateAtlasesCoroutineResult coroutineResult, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods, float maxTimePerFrame = 0.01f)
	{
		return null;
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x233F7C4", Offset = "0x233F7C4", VA = "0x233F7C4")]
	public MB_AtlasesAndRects[] CreateAtlases(ProgressUpdateDelegate progressInfo, bool saveAtlasesAsAssets = false, [Optional] MB2_EditorMethodsInterface editorMethods)
	{
		return null;
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x233FDE8", Offset = "0x233FDE8", VA = "0x233FDE8")]
	private void unpackMat2RectMap(MB2_TextureBakeResults tbr)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x2340170", Offset = "0x2340170", VA = "0x2340170")]
	public MB3_TextureCombiner CreateAndConfigureTextureCombiner()
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x2340454", Offset = "0x2340454", VA = "0x2340454")]
	public static void ConfigureNewMaterialToMatchOld(Material newMat, Material original)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x234097C", Offset = "0x234097C", VA = "0x234097C")]
	private string PrintSet(HashSet<Material> s)
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x2340B38", Offset = "0x2340B38", VA = "0x2340B38")]
	private bool _ValidateResultMaterials()
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x2341814", Offset = "0x2341814", VA = "0x2341814")]
	public MB3_TextureBaker()
	{
	}
}
[Token(Token = "0x200003E")]
public class TBAudioListener : MonoBehaviour
{
	[Token(Token = "0x600015A")]
	[Address(RVA = "0x23A6644", Offset = "0x23A6644", VA = "0x23A6644")]
	private void Update()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x23A6788", Offset = "0x23A6788", VA = "0x23A6788")]
	public TBAudioListener()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C0C8C", Offset = "0x5C0C8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0C8C", Offset = "0x5C0C8C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0C8C", Offset = "0x5C0C8C")]
public class TBPlayArea : MonoBehaviour
{
	[Token(Token = "0x2000496")]
	public struct Quad
	{
		[Token(Token = "0x40025DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 corner0;

		[Token(Token = "0x40025DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 corner1;

		[Token(Token = "0x40025DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 corner2;

		[Token(Token = "0x40025DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 corner3;
	}

	[Token(Token = "0x2000497")]
	public enum Size
	{
		[Token(Token = "0x40025E1")]
		_200x150,
		[Token(Token = "0x40025E2")]
		_300x225,
		[Token(Token = "0x40025E3")]
		_400x300
	}

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Size size;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightOffset;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float edgeHeight;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool drawInGame;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C3994", Offset = "0x5C3994")]
	public Vector3[] vertices;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C39A4", Offset = "0x5C39A4")]
	public Vector3[] edgeVertices;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C39B4", Offset = "0x5C39B4")]
	public float width;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C39C4", Offset = "0x5C39C4")]
	public float depth;

	[Token(Token = "0x600015C")]
	[Address(RVA = "0x23A6B48", Offset = "0x23A6B48", VA = "0x23A6B48")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x23A6BFC", Offset = "0x23A6BFC", VA = "0x23A6BFC")]
	private void BuildMesh()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x23A7298", Offset = "0x23A7298", VA = "0x23A7298")]
	private Mesh BuildGround()
	{
		return null;
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x23A7738", Offset = "0x23A7738", VA = "0x23A7738")]
	private Mesh BuildEdges()
	{
		return null;
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x23A7FFC", Offset = "0x23A7FFC", VA = "0x23A7FFC")]
	private bool GetBounds(Size size, ref Quad quad)
	{
		return default(bool);
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x23A8390", Offset = "0x23A8390", VA = "0x23A8390")]
	public TBPlayArea()
	{
	}
}
[Token(Token = "0x2000040")]
public static class TBArrayExtensions
{
	[Token(Token = "0x6000162")]
	public static T[] AddToArray<T>(T[] array, T item)
	{
		return null;
	}

	[Token(Token = "0x6000163")]
	public static T[] RemoveFromArray<T>(T[] array, int index)
	{
		return null;
	}
}
[Token(Token = "0x2000041")]
public static class TBRendererExtensions
{
	[Token(Token = "0x6000164")]
	[Address(RVA = "0x23A8404", Offset = "0x23A8404", VA = "0x23A8404")]
	public static void SetInstancedProperty(this Renderer r, int propertyID, Color color, ref MaterialPropertyBlock block)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x23A84B4", Offset = "0x23A84B4", VA = "0x23A84B4")]
	public static void SetInstancedProperty(this Renderer r, int propertyID, float value, ref MaterialPropertyBlock block)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x23A8540", Offset = "0x23A8540", VA = "0x23A8540")]
	public static void SetInstancedProperty(this Renderer r, int propertyID, Vector3 value, ref MaterialPropertyBlock block)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x23A866C", Offset = "0x23A866C", VA = "0x23A866C")]
	public static void SetInstancedProperty(this Renderer[] renderers, int propertyID, Color color, ref MaterialPropertyBlock block)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x23A87A0", Offset = "0x23A87A0", VA = "0x23A87A0")]
	public static void SetInstancedProperty(this Renderer[] renderers, int propertyID, float value, ref MaterialPropertyBlock block)
	{
	}
}
[Token(Token = "0x2000042")]
public static class TBTransformExtensions
{
	[Token(Token = "0x6000169")]
	[Address(RVA = "0x23A88BC", Offset = "0x23A88BC", VA = "0x23A88BC")]
	public static void ResetLocalPositionAndRotation(this Transform t)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x23A89D4", Offset = "0x23A89D4", VA = "0x23A89D4")]
	public static void MakeZeroedChildOf(this Transform t, Transform parent)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x23A8A10", Offset = "0x23A8A10", VA = "0x23A8A10")]
	public static void FaceCamera(this Transform billboard)
	{
	}
}
[Token(Token = "0x2000043")]
public static class TBYielders
{
	[Token(Token = "0x2000498")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28D8", Offset = "0x5C28D8")]
	private sealed class <WaitForRealSeconds>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40025E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40025E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float time;

		[Token(Token = "0x40025E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <start>5__2;

		[Token(Token = "0x17000287")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002407")]
			[Address(RVA = "0x23A90B4", Offset = "0x23A90B4", VA = "0x23A90B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000288")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002409")]
			[Address(RVA = "0x23A9144", Offset = "0x23A9144", VA = "0x23A9144", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002404")]
		[Address(RVA = "0x23A8F20", Offset = "0x23A8F20", VA = "0x23A8F20")]
		[DebuggerHidden]
		public <WaitForRealSeconds>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002405")]
		[Address(RVA = "0x23A902C", Offset = "0x23A902C", VA = "0x23A902C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002406")]
		[Address(RVA = "0x23A9030", Offset = "0x23A9030", VA = "0x23A9030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002408")]
		[Address(RVA = "0x23A90BC", Offset = "0x23A90BC", VA = "0x23A90BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<float, WaitForSeconds> _timeInterval;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaitForEndOfFrame _endOfFrame;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaitForFixedUpdate _fixedUpdate;

	[Token(Token = "0x17000027")]
	public static WaitForEndOfFrame EndOfFrame
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x23A8BA4", Offset = "0x23A8BA4", VA = "0x23A8BA4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000028")]
	public static WaitForFixedUpdate FixedUpdate
	{
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x23A8C30", Offset = "0x23A8C30", VA = "0x23A8C30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x23A8CBC", Offset = "0x23A8CBC", VA = "0x23A8CBC")]
	public static WaitForSeconds WaitForSeconds(float seconds)
	{
		return null;
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x23A8E88", Offset = "0x23A8E88", VA = "0x23A8E88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB660", Offset = "0x5CB660")]
	public static IEnumerator WaitForRealSeconds(float time)
	{
		return null;
	}
}
[Token(Token = "0x2000044")]
public static class TBLogging
{
	[Token(Token = "0x6000171")]
	[Address(RVA = "0x23A6790", Offset = "0x23A6790", VA = "0x23A6790")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CB6D8", Offset = "0x5CB6D8")]
	public static void LogMessage(string message, [Optional] UnityEngine.Object obj, string end = "")
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x23A693C", Offset = "0x23A693C", VA = "0x23A693C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CB70C", Offset = "0x5CB70C")]
	public static void LogWarning(string message, [Optional] UnityEngine.Object obj, string end = "")
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x23A6A80", Offset = "0x23A6A80", VA = "0x23A6A80")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CB740", Offset = "0x5CB740")]
	public static void LogError(string message, [Optional] UnityEngine.Object obj, string end = "")
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x23A68D4", Offset = "0x23A68D4", VA = "0x23A68D4")]
	private static string FormatForEditor(string text)
	{
		return null;
	}
}
[Token(Token = "0x2000045")]
public class NameGenDemo : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject nameGenObject;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Text txt;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private NameGenerator namegen;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x2154554", Offset = "0x2154554", VA = "0x2154554")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x2154684", Offset = "0x2154684", VA = "0x2154684")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x2154688", Offset = "0x2154688", VA = "0x2154688")]
	public NameGenDemo()
	{
	}
}
[Token(Token = "0x2000046")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C0D60", Offset = "0x5C0D60")]
public class FastList<T>
{
	[Token(Token = "0x2000499")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200049A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28E8", Offset = "0x5C28E8")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40025E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40025E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40025EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40025EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000289")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6002411")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700028A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002413")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600240E")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x600240F")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002410")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002412")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000029")]
	public int Count
	{
		[Token(Token = "0x600017A")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600017B")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public T Item
	{
		[Token(Token = "0x600017C")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x600017D")]
		set
		{
		}
	}

	[Token(Token = "0x6000178")]
	public FastList()
	{
	}

	[Token(Token = "0x6000179")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x600017E")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x600017F")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000180")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000181")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000182")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000183")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x6000184")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000186")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000187")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000188")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000189")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x600018A")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600018B")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x600018C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB774", Offset = "0x5CB774")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x600018E")]
	private void Allocate()
	{
	}

	[Token(Token = "0x600018F")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000190")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000191")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000047")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly string header;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public readonly string message;

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x221BDF0", Offset = "0x221BDF0", VA = "0x221BDF0")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000048")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly string message;

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x221BDD0", Offset = "0x221BDD0", VA = "0x221BDD0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000049")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 headPos;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion headRot;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float voiceAmplitude;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x2385494", Offset = "0x2385494", VA = "0x2385494")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x2385620", Offset = "0x2385620", VA = "0x2385620")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x2385A40", Offset = "0x2385A40", VA = "0x2385A40")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x2385C38", Offset = "0x2385C38", VA = "0x2385C38", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x2385C5C", Offset = "0x2385C5C", VA = "0x2385C5C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200004A")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform poseRoot;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x20DD094", Offset = "0x20DD094", VA = "0x20DD094")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x20DD134", Offset = "0x20DD134", VA = "0x20DD134")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x20DD330", Offset = "0x20DD330", VA = "0x20DD330")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200004B")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int RadiusMultiplier;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x1700002B")]
	public bool IsVisible
	{
		[Token(Token = "0x600019C")]
		[Address(RVA = "0x2252414", Offset = "0x2252414", VA = "0x2252414")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600019D")]
		[Address(RVA = "0x225241C", Offset = "0x225241C", VA = "0x225241C")]
		set
		{
		}
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x22525A8", Offset = "0x22525A8", VA = "0x22525A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x22528B4", Offset = "0x22528B4", VA = "0x22528B4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x22528BC", Offset = "0x22528BC", VA = "0x22528BC")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200004C")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200049B")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40025EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte[] PacketData;

		[Token(Token = "0x40025ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float FakeLatency;

		[Token(Token = "0x6002414")]
		[Address(RVA = "0x22A0F00", Offset = "0x22A0F00", VA = "0x22A0F00")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200049C")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40025EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CAAC0", Offset = "0x5CAAC0")]
		public float FakeLatencyMax;

		[Token(Token = "0x40025EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CAAD8", Offset = "0x5CAAD8")]
		public float FakeLatencyMin;

		[Token(Token = "0x40025F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CAAF0", Offset = "0x5CAAF0")]
		public float LatencyWeight;

		[Token(Token = "0x40025F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CAB08", Offset = "0x5CAB08")]
		public int MaxSamples;

		[Token(Token = "0x40025F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal float AverageWindow;

		[Token(Token = "0x40025F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		internal float LatencySum;

		[Token(Token = "0x40025F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6002415")]
		[Address(RVA = "0x22A0F08", Offset = "0x22A0F08", VA = "0x22A0F08")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002416")]
		[Address(RVA = "0x22A1188", Offset = "0x22A1188", VA = "0x22A1188")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int PacketSequence;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x22A0210", Offset = "0x22A0210", VA = "0x22A0210")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x22A0450", Offset = "0x22A0450", VA = "0x22A0450")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x22A0894", Offset = "0x22A0894", VA = "0x22A0894")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x22A07C0", Offset = "0x22A07C0", VA = "0x22A07C0")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x22A0BEC", Offset = "0x22A0BEC", VA = "0x22A0BEC")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x22A10DC", Offset = "0x22A10DC", VA = "0x22A10DC")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class P2PManager
{
	[Token(Token = "0x200049D")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40025F6")]
		Update = 1
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x20CE1F8", Offset = "0x20CE1F8", VA = "0x20CE1F8")]
	public P2PManager()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x20CE2D8", Offset = "0x20CE2D8", VA = "0x20CE2D8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x20CE3F4", Offset = "0x20CE3F4", VA = "0x20CE3F4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x20CE4A4", Offset = "0x20CE4A4", VA = "0x20CE4A4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x20CE720", Offset = "0x20CE720", VA = "0x20CE720")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x20CECD8", Offset = "0x20CECD8", VA = "0x20CECD8")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x20CF1EC", Offset = "0x20CF1EC", VA = "0x20CF1EC")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x20CF574", Offset = "0x20CF574", VA = "0x20CF574")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x20CEF54", Offset = "0x20CEF54", VA = "0x20CEF54")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x20CF480", Offset = "0x20CF480", VA = "0x20CF480")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x20CF074", Offset = "0x20CF074", VA = "0x20CF074")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x20CF8A8", Offset = "0x20CF8A8", VA = "0x20CF8A8")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x20CEFB0", Offset = "0x20CEFB0", VA = "0x20CEFB0")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x20CF4D8", Offset = "0x20CF4D8", VA = "0x20CF4D8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x20CF130", Offset = "0x20CF130", VA = "0x20CF130")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x20CF944", Offset = "0x20CF944", VA = "0x20CF944")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200004E")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Camera spyCamera;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject cameraRig;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool showUI;

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x20DAC74", Offset = "0x20DAC74", VA = "0x20DAC74", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x20DACB0", Offset = "0x20DACB0", VA = "0x20DACB0", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x20DACEC", Offset = "0x20DACEC", VA = "0x20DACEC", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x20DAD0C", Offset = "0x20DAD0C", VA = "0x20DAD0C")]
	private void checkInput()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x20DAF34", Offset = "0x20DAF34", VA = "0x20DAF34")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x20DB01C", Offset = "0x20DB01C", VA = "0x20DB01C")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x20DB094", Offset = "0x20DB094", VA = "0x20DB094")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200004F")]
public class RemotePlayer
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong remoteUserID;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool stillInRoom;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x22A1234", Offset = "0x22A1234", VA = "0x22A1234")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000050")]
public class RoomManager
{
	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong roomID;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool amIServer;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool startupDone;

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x22DCD78", Offset = "0x22DCD78", VA = "0x22DCD78")]
	public RoomManager()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x22DCE78", Offset = "0x22DCE78", VA = "0x22DCE78")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x22DD040", Offset = "0x22DD040", VA = "0x22DD040")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x22DD194", Offset = "0x22DD194", VA = "0x22DD194")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x22DD268", Offset = "0x22DD268", VA = "0x22DD268")]
	private void CreateAndJoinPrivateRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x22DD490", Offset = "0x22DD490", VA = "0x22DD490")]
	private void OnLaunchInviteWorkflowComplete(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x22DD080", Offset = "0x22DD080", VA = "0x22DD080")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x22DD538", Offset = "0x22DD538", VA = "0x22DD538")]
	private void JoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x22DE178", Offset = "0x22DE178", VA = "0x22DE178")]
	private void RoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x22DE6D8", Offset = "0x22DE6D8", VA = "0x22DE6D8")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x22DDA9C", Offset = "0x22DDA9C", VA = "0x22DDA9C")]
	private void ProcessRoomData(Message<Oculus.Platform.Models.Room> msg)
	{
	}
}
[Token(Token = "0x2000051")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200049E")]
	public enum State
	{
		[Token(Token = "0x40025F8")]
		INITIALIZING,
		[Token(Token = "0x40025F9")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40025FA")]
		CREATING_A_ROOM,
		[Token(Token = "0x40025FB")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40025FC")]
		JOINING_A_ROOM,
		[Token(Token = "0x40025FD")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40025FE")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40025FF")]
		SHUTDOWN
	}

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private float voiceCurrent;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private uint packetSequence;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject helpPanel;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material riftMaterial;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material gearMaterial;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject roomSphere;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject roomFloor;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected State currentState;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected VoipManager voipManager;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected ulong myID;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected string myOculusID;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x1700002C")]
	public static State CurrentState
	{
		[Token(Token = "0x60001D6")]
		[Address(RVA = "0x210E8BC", Offset = "0x210E8BC", VA = "0x210E8BC")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x1700002D")]
	public static ulong MyID
	{
		[Token(Token = "0x60001D7")]
		[Address(RVA = "0x210E95C", Offset = "0x210E95C", VA = "0x210E95C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700002E")]
	public static string MyOculusID
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x210EA94", Offset = "0x210EA94", VA = "0x210EA94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x210BAB0", Offset = "0x210BAB0", VA = "0x210BAB0", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x210C204", Offset = "0x210C204", VA = "0x210C204", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x210CC2C", Offset = "0x210CC2C", VA = "0x210CC2C")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x210CFD8", Offset = "0x210CFD8", VA = "0x210CFD8", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x210CFDC", Offset = "0x210CFDC", VA = "0x210CFDC")]
	private void IsEntitledCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x210D104", Offset = "0x210D104", VA = "0x210D104")]
	private void GetLoggedInUserCallback(Message<Oculus.Platform.Models.User> msg)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x210DC60", Offset = "0x210DC60", VA = "0x210DC60")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x210E2E4", Offset = "0x210E2E4", VA = "0x210E2E4")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x210E5C0", Offset = "0x210E5C0", VA = "0x210E5C0")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x210E81C", Offset = "0x210E81C", VA = "0x210E81C")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x210C634", Offset = "0x210C634", VA = "0x210C634")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x210CDD8", Offset = "0x210CDD8", VA = "0x210CDD8")]
	public static void TerminateWithError(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x210C708", Offset = "0x210C708", VA = "0x210C708")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x210EC38", Offset = "0x210EC38", VA = "0x210EC38")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x210EF28", Offset = "0x210EF28", VA = "0x210EF28")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x210F0E0", Offset = "0x210F0E0", VA = "0x210F0E0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x210F2CC", Offset = "0x210F2CC", VA = "0x210F2CC")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x210F400", Offset = "0x210F400", VA = "0x210F400")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x210CEE0", Offset = "0x210CEE0", VA = "0x210CEE0")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x210FAD4", Offset = "0x210FAD4", VA = "0x210FAD4")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x210FBB8", Offset = "0x210FBB8", VA = "0x210FBB8")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x210F7EC", Offset = "0x210F7EC", VA = "0x210F7EC")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x210FF60", Offset = "0x210FF60", VA = "0x210FF60")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x210B9FC", Offset = "0x210B9FC", VA = "0x210B9FC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CB7EC", Offset = "0x5CB7EC")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x2110100", Offset = "0x2110100", VA = "0x2110100")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x211021C", Offset = "0x211021C", VA = "0x211021C")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000052")]
public class VoipManager
{
	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x2484104", Offset = "0x2484104", VA = "0x2484104")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x24841E4", Offset = "0x24841E4", VA = "0x24841E4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x2484300", Offset = "0x2484300", VA = "0x2484300")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x24843B0", Offset = "0x24843B0", VA = "0x24843B0")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x248462C", Offset = "0x248462C", VA = "0x248462C")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000053")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x2251FA0", Offset = "0x2251FA0", VA = "0x2251FA0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x2252024", Offset = "0x2252024", VA = "0x2252024")]
	private void Start()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x225222C", Offset = "0x225222C", VA = "0x225222C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x22522A4", Offset = "0x22522A4", VA = "0x22522A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x2252068", Offset = "0x2252068", VA = "0x2252068")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x22523A8", Offset = "0x22523A8", VA = "0x22523A8")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x225240C", Offset = "0x225240C", VA = "0x225240C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000054")]
public class AvatarLayer
{
	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int layerIndex;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x2281040", Offset = "0x2281040", VA = "0x2281040")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000055")]
public class PacketRecordSettings
{
	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	internal bool RecordingFrames;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float UpdateRate;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal float AccumulatedTime;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x20CF9E0", Offset = "0x20CF9E0", VA = "0x20CF9E0")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000056")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200049F")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4002600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6002417")]
		[Address(RVA = "0x236FEE0", Offset = "0x236FEE0", VA = "0x236FEE0")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x20004A0")]
	public enum HandType
	{
		[Token(Token = "0x4002602")]
		Right,
		[Token(Token = "0x4002603")]
		Left,
		[Token(Token = "0x4002604")]
		Max
	}

	[Token(Token = "0x20004A1")]
	public enum HandJoint
	{
		[Token(Token = "0x4002606")]
		HandBase,
		[Token(Token = "0x4002607")]
		IndexBase,
		[Token(Token = "0x4002608")]
		IndexTip,
		[Token(Token = "0x4002609")]
		ThumbBase,
		[Token(Token = "0x400260A")]
		ThumbTip,
		[Token(Token = "0x400260B")]
		Max
	}

	[Token(Token = "0x20004A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C28F8", Offset = "0x5C28F8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400260C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400260D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400260E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x1700028B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600241B")]
			[Address(RVA = "0x237328C", Offset = "0x237328C", VA = "0x237328C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600241D")]
			[Address(RVA = "0x237331C", Offset = "0x237331C", VA = "0x237331C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002418")]
		[Address(RVA = "0x2372B10", Offset = "0x2372B10", VA = "0x2372B10")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6002419")]
		[Address(RVA = "0x2372FE0", Offset = "0x2372FE0", VA = "0x2372FE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600241A")]
		[Address(RVA = "0x2372FE4", Offset = "0x2372FE4", VA = "0x2372FE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600241C")]
		[Address(RVA = "0x2373294", Offset = "0x2373294", VA = "0x2373294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C39E4", Offset = "0x5C39E4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string oculusUserID;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3A18", Offset = "0x5C3A18")]
	public bool EnableBody;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableHands;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool EnableBase;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool EnableExpressive;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3A54", Offset = "0x5C3A54")]
	public bool RecordPackets;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool UseSDKPackets;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3A88", Offset = "0x5C3A88")]
	public bool StartWithControllers;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ShowFirstPerson;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3AC0", Offset = "0x5C3AC0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3AC0", Offset = "0x5C3AC0")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3B34", Offset = "0x5C3B34")]
	private bool CombineMeshes;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3B68", Offset = "0x5C3B68")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3B9C", Offset = "0x5C3B9C")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Shader EyeLens;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Shader ControllerShader;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C3BD0", Offset = "0x5C3BD0")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3C04", Offset = "0x5C3C04")]
	public bool EnableLaughter;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float[] visemes;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private AudioSource audioSource;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool showLeftController;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	private bool showRightController;

	[Token(Token = "0x40001BE")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40001C0")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40001C1")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40001C2")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40001C3")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40001C4")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string[,] HandJoints;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string NECK_JONT;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float VoiceAmplitude;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x2369F28", Offset = "0x2369F28", VA = "0x2369F28")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x236A4AC", Offset = "0x236A4AC", VA = "0x236A4AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x236A54C", Offset = "0x236A54C", VA = "0x236A54C")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x236A5F0", Offset = "0x236A5F0", VA = "0x236A5F0")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x236A778", Offset = "0x236A778", VA = "0x236A778")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x236AA54", Offset = "0x236AA54", VA = "0x236AA54")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x236AD10", Offset = "0x236AD10", VA = "0x236AD10")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x236B468", Offset = "0x236B468", VA = "0x236B468")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x236B54C", Offset = "0x236B54C", VA = "0x236B54C")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x236B5E0", Offset = "0x236B5E0", VA = "0x236B5E0")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x236B76C", Offset = "0x236B76C", VA = "0x236B76C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x236B844", Offset = "0x236B844", VA = "0x236B844")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x236B970", Offset = "0x236B970", VA = "0x236B970")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x236B9D4", Offset = "0x236B9D4", VA = "0x236B9D4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x6000204")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x236C0E0", Offset = "0x236C0E0", VA = "0x236C0E0")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x236C538", Offset = "0x236C538", VA = "0x236C538")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x236C72C", Offset = "0x236C72C", VA = "0x236C72C")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x236CA64", Offset = "0x236CA64", VA = "0x236CA64")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x236CB6C", Offset = "0x236CB6C", VA = "0x236CB6C")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x236DA24", Offset = "0x236DA24", VA = "0x236DA24")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x236DF54", Offset = "0x236DF54", VA = "0x236DF54")]
	private void Update()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x236EE40", Offset = "0x236EE40", VA = "0x236EE40")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x236EECC", Offset = "0x236EECC", VA = "0x236EECC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x236CEA8", Offset = "0x236CEA8", VA = "0x236CEA8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x236CF54", Offset = "0x236CF54", VA = "0x236CF54")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x236EEF0", Offset = "0x236EEF0", VA = "0x236EEF0")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x236E3E0", Offset = "0x236E3E0", VA = "0x236E3E0")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x236F22C", Offset = "0x236F22C", VA = "0x236F22C")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x236EF70", Offset = "0x236EF70", VA = "0x236EF70")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x2370068", Offset = "0x2370068", VA = "0x2370068")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x2370638", Offset = "0x2370638", VA = "0x2370638")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x2370BEC", Offset = "0x2370BEC", VA = "0x2370BEC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x2370D68", Offset = "0x2370D68", VA = "0x2370D68")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x2370FEC", Offset = "0x2370FEC", VA = "0x2370FEC")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x236E6A4", Offset = "0x236E6A4", VA = "0x236E6A4")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x2371104", Offset = "0x2371104", VA = "0x2371104")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x236E3F4", Offset = "0x236E3F4", VA = "0x236E3F4")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x2371228", Offset = "0x2371228", VA = "0x2371228")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x2371B1C", Offset = "0x2371B1C", VA = "0x2371B1C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x2372318", Offset = "0x2372318", VA = "0x2372318")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x2372398", Offset = "0x2372398", VA = "0x2372398")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x237241C", Offset = "0x237241C", VA = "0x237241C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x236EC84", Offset = "0x236EC84", VA = "0x236EC84")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x2371328", Offset = "0x2371328", VA = "0x2371328")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x2372A84", Offset = "0x2372A84", VA = "0x2372A84")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB864", Offset = "0x5CB864")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x2372B30", Offset = "0x2372B30", VA = "0x2372B30")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x2372884", Offset = "0x2372884", VA = "0x2372884")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x2372C1C", Offset = "0x2372C1C", VA = "0x2372C1C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x2372D2C", Offset = "0x2372D2C", VA = "0x2372D2C")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x23724DC", Offset = "0x23724DC", VA = "0x23724DC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x2372E3C", Offset = "0x2372E3C", VA = "0x2372E3C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000057")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong assetID;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x2373324", Offset = "0x2373324", VA = "0x2373324")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000058")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Mesh mesh;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string[] jointNames;

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x23733EC", Offset = "0x23733EC", VA = "0x23733EC")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x2374F68", Offset = "0x2374F68", VA = "0x2374F68")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x2374948", Offset = "0x2374948", VA = "0x2374948")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x237469C", Offset = "0x237469C", VA = "0x237469C")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x237479C", Offset = "0x237479C", VA = "0x237479C")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x2375328", Offset = "0x2375328", VA = "0x2375328")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000059")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D texture;

	[Token(Token = "0x40001E1")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x2375DF8", Offset = "0x2375DF8", VA = "0x2375DF8")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x200005A")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x237612C", Offset = "0x237612C", VA = "0x237612C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x2376980", Offset = "0x2376980", VA = "0x2376980")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200005B")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x23709C4", Offset = "0x23709C4", VA = "0x23709C4")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x2376AC0", Offset = "0x2376AC0", VA = "0x2376AC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x2376C18", Offset = "0x2376C18", VA = "0x2376C18")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200005C")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	protected OvrAvatar owner;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x2376C98", Offset = "0x2376C98", VA = "0x2376C98")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x2376284", Offset = "0x2376284", VA = "0x2376284")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x237747C", Offset = "0x237747C", VA = "0x237747C")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x2377504", Offset = "0x2377504", VA = "0x2377504")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x2378440", Offset = "0x2378440", VA = "0x2378440")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x2376A00", Offset = "0x2376A00", VA = "0x2376A00")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200005D")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x20004A3")]
	public enum PacketMode
	{
		[Token(Token = "0x4002610")]
		SDK,
		[Token(Token = "0x4002611")]
		Unity
	}

	[Token(Token = "0x20004A4")]
	public struct ControllerPose
	{
		[Token(Token = "0x4002612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4002613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4002614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4002615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4002616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4002617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x600241E")]
		[Address(RVA = "0x237A7A8", Offset = "0x237A7A8", VA = "0x237A7A8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x20004A5")]
	public struct PoseFrame
	{
		[Token(Token = "0x4002618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4002619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400261A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x400261B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x400261C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x400261D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x400261E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x400261F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4002620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x600241F")]
		[Address(RVA = "0x236FA08", Offset = "0x236FA08", VA = "0x236FA08")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public PacketMode Mode;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x236F58C", Offset = "0x236F58C", VA = "0x236F58C")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x600023F")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x237A6E0", Offset = "0x237A6E0", VA = "0x237A6E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x236D000", Offset = "0x236D000", VA = "0x236D000")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x237A790", Offset = "0x237A790", VA = "0x237A790")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x237A798", Offset = "0x237A798", VA = "0x237A798")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200005E")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isLeftHand;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x237A974", Offset = "0x237A974", VA = "0x237A974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x237AB18", Offset = "0x237AB18", VA = "0x237AB18")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200005F")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float voiceAmplitude;

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x237ABA0", Offset = "0x237ABA0", VA = "0x237ABA0")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x237AD2C", Offset = "0x237AD2C", VA = "0x237AD2C")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x237B14C", Offset = "0x237B14C", VA = "0x237B14C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x237B3A8", Offset = "0x237B3A8", VA = "0x237B3A8", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x237B3CC", Offset = "0x237B3CC", VA = "0x237B3CC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x2000060")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x20004A6")]
	public enum TextureType
	{
		[Token(Token = "0x4002622")]
		DiffuseTextures,
		[Token(Token = "0x4002623")]
		NormalMaps,
		[Token(Token = "0x4002624")]
		RoughnessMaps,
		[Token(Token = "0x4002625")]
		Count
	}

	[Token(Token = "0x20004A7")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4002626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4002627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4002628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Texture2D[] Textures;

		[Token(Token = "0x4002629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DiffuseIntensity;

		[Token(Token = "0x400262A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RimIntensity;

		[Token(Token = "0x400262B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x20004A8")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x400262C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x400262D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x20004A9")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x400262E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x400262F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4002630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] RimIntensities;

		[Token(Token = "0x4002631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x20004AA")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4002632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4002633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6002420")]
		[Address(RVA = "0x237EBE8", Offset = "0x237EBE8", VA = "0x237EBE8")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x20004AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2908", Offset = "0x5C2908")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4002637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Action callBack;

		[Token(Token = "0x4002638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4002639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int <dstBlend>5__3;

		[Token(Token = "0x400263A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x400263B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x400263C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x400263D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x400263E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <renderQueue>5__8;

		[Token(Token = "0x400263F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x1700028D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002424")]
			[Address(RVA = "0x237FA94", Offset = "0x237FA94", VA = "0x237FA94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700028E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002426")]
			[Address(RVA = "0x237FB24", Offset = "0x237FB24", VA = "0x237FB24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002421")]
		[Address(RVA = "0x237E9A4", Offset = "0x237E9A4", VA = "0x237E9A4")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002422")]
		[Address(RVA = "0x237EF18", Offset = "0x237EF18", VA = "0x237EF18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002423")]
		[Address(RVA = "0x237EF1C", Offset = "0x237EF1C", VA = "0x237EF1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002425")]
		[Address(RVA = "0x237FA9C", Offset = "0x237FA9C", VA = "0x237FA9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shader CombinedShader;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000215")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000216")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000217")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000218")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x237B4C8", Offset = "0x237B4C8", VA = "0x237B4C8")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x237B6D0", Offset = "0x237B6D0", VA = "0x237B6D0")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x237B708", Offset = "0x237B708", VA = "0x237B708")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x237C414", Offset = "0x237C414", VA = "0x237C414")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x237C818", Offset = "0x237C818", VA = "0x237C818")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x237B7B8", Offset = "0x237B7B8", VA = "0x237B7B8")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x237C944", Offset = "0x237C944", VA = "0x237C944")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x237BF80", Offset = "0x237BF80", VA = "0x237BF80")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x237CCD4", Offset = "0x237CCD4", VA = "0x237CCD4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x237D154", Offset = "0x237D154", VA = "0x237D154")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x237D2C4", Offset = "0x237D2C4", VA = "0x237D2C4")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x237D31C", Offset = "0x237D31C", VA = "0x237D31C")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x237C36C", Offset = "0x237C36C", VA = "0x237C36C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB8DC", Offset = "0x5CB8DC")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x237E9C4", Offset = "0x237E9C4", VA = "0x237E9C4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000061")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<float> frameTimes;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700002F")]
	public float Duration
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x236F758", Offset = "0x236F758", VA = "0x236F758")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000030")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x600025B")]
		[Address(RVA = "0x236F940", Offset = "0x236F940", VA = "0x236F940")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x236FF6C", Offset = "0x236FF6C", VA = "0x236FF6C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x236F5A4", Offset = "0x236F5A4", VA = "0x236F5A4")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x237FB2C", Offset = "0x237FB2C", VA = "0x237FB2C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x236F818", Offset = "0x236F818", VA = "0x236F818")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x237FC38", Offset = "0x237FC38", VA = "0x237FC38")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x237FEE4", Offset = "0x237FEE4", VA = "0x237FEE4")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x23801B4", Offset = "0x23801B4", VA = "0x23801B4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000062")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000263")]
	[Address(RVA = "0x2287164", Offset = "0x2287164", VA = "0x2287164")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x2287284", Offset = "0x2287284", VA = "0x2287284")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x22874F4", Offset = "0x22874F4", VA = "0x22874F4")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x2287318", Offset = "0x2287318", VA = "0x2287318")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x22873D8", Offset = "0x22873D8", VA = "0x22873D8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000063")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000268")]
	[Address(RVA = "0x2286C88", Offset = "0x2286C88", VA = "0x2286C88")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x22870F4", Offset = "0x22870F4", VA = "0x22870F4")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x2286E4C", Offset = "0x2286E4C", VA = "0x2286E4C")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x2286EEC", Offset = "0x2286EEC", VA = "0x2286EEC")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x2286FBC", Offset = "0x2286FBC", VA = "0x2286FBC")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000064")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000220")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000221")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int CurrentSequence;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool isStreaming;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x2380460", Offset = "0x2380460", VA = "0x2380460")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x23804F4", Offset = "0x23804F4", VA = "0x23804F4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x2380510", Offset = "0x2380510", VA = "0x2380510")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x2380788", Offset = "0x2380788", VA = "0x2380788")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x2380A4C", Offset = "0x2380A4C", VA = "0x2380A4C")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000065")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform[] bones;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isBodyComponent;

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x2380AF0", Offset = "0x2380AF0", VA = "0x2380AF0")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x2380C3C", Offset = "0x2380C3C", VA = "0x2380C3C")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x2380F1C", Offset = "0x2380F1C", VA = "0x2380F1C")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x23814A4", Offset = "0x23814A4", VA = "0x23814A4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x23815D8", Offset = "0x23815D8", VA = "0x23815D8")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000066")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400022A")]
	Body = 1,
	[Token(Token = "0x400022B")]
	Hands = 2,
	[Token(Token = "0x400022C")]
	Base = 4,
	[Token(Token = "0x400022D")]
	BodyTilt = 0x10,
	[Token(Token = "0x400022E")]
	Expressive = 0x20,
	[Token(Token = "0x400022F")]
	All = -1
}
[Token(Token = "0x2000067")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000231")]
	AvatarSpecification,
	[Token(Token = "0x4000232")]
	AssetLoaded,
	[Token(Token = "0x4000233")]
	Count
}
[Token(Token = "0x2000068")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000069")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200006A")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000239")]
	Mesh,
	[Token(Token = "0x400023A")]
	Texture,
	[Token(Token = "0x400023B")]
	Pose,
	[Token(Token = "0x400023C")]
	Material,
	[Token(Token = "0x400023D")]
	CombinedMesh,
	[Token(Token = "0x400023E")]
	PBSMaterial,
	[Token(Token = "0x400023F")]
	FailedLoad,
	[Token(Token = "0x4000240")]
	Count
}
[Token(Token = "0x200006B")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float[] blendWeights;
}
[Token(Token = "0x200006C")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float[] blendWeights;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200006E")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint indexCount;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200006F")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint indexCount;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x2000070")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x4000275")]
	RGB24,
	[Token(Token = "0x4000276")]
	DXT1,
	[Token(Token = "0x4000277")]
	DXT5,
	[Token(Token = "0x4000278")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000279")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x400027A")]
	Count
}
[Token(Token = "0x2000071")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000072")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000282")]
	SkinnedMeshRender,
	[Token(Token = "0x4000283")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x4000284")]
	ProjectorRender,
	[Token(Token = "0x4000285")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x4000286")]
	Count
}
[Token(Token = "0x2000073")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x4000288")]
	Unknown,
	[Token(Token = "0x4000289")]
	Default,
	[Token(Token = "0x400028A")]
	Verbose,
	[Token(Token = "0x400028B")]
	Debug,
	[Token(Token = "0x400028C")]
	Info,
	[Token(Token = "0x400028D")]
	Warn,
	[Token(Token = "0x400028E")]
	Error,
	[Token(Token = "0x400028F")]
	Fatal,
	[Token(Token = "0x4000290")]
	Silent
}
[Token(Token = "0x2000074")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000075")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x4000295")]
	One = 1,
	[Token(Token = "0x4000296")]
	Two = 2,
	[Token(Token = "0x4000297")]
	Three = 4,
	[Token(Token = "0x4000298")]
	Joystick = 8
}
[Token(Token = "0x2000076")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x400029A")]
	One = 1,
	[Token(Token = "0x400029B")]
	Two = 2,
	[Token(Token = "0x400029C")]
	Joystick = 4,
	[Token(Token = "0x400029D")]
	ThumbRest = 8,
	[Token(Token = "0x400029E")]
	Index = 0x10,
	[Token(Token = "0x400029F")]
	Pointing = 0x40,
	[Token(Token = "0x40002A0")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000077")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000078")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public IntPtr renderParts;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000079")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x200007A")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200007B")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200007C")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200007D")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200007E")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200007F")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40002C0")]
	Add,
	[Token(Token = "0x40002C1")]
	Multiply,
	[Token(Token = "0x40002C2")]
	Count
}
[Token(Token = "0x2000080")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40002C4")]
	Color,
	[Token(Token = "0x40002C5")]
	Texture,
	[Token(Token = "0x40002C6")]
	TextureSingleChannel,
	[Token(Token = "0x40002C7")]
	Parallax,
	[Token(Token = "0x40002C8")]
	Count
}
[Token(Token = "0x2000081")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40002CA")]
	None,
	[Token(Token = "0x40002CB")]
	Positional,
	[Token(Token = "0x40002CC")]
	ViewReflection,
	[Token(Token = "0x40002CD")]
	Fresnel,
	[Token(Token = "0x40002CE")]
	Pulse,
	[Token(Token = "0x40002CF")]
	Count
}
[Token(Token = "0x2000082")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40002D1")]
	Touch,
	[Token(Token = "0x40002D2")]
	Malibu,
	[Token(Token = "0x40002D3")]
	Go,
	[Token(Token = "0x40002D4")]
	Quest,
	[Token(Token = "0x40002D5")]
	Count
}
[Token(Token = "0x2000083")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40002D7")]
	Lowest = 1,
	[Token(Token = "0x40002D8")]
	Medium = 3,
	[Token(Token = "0x40002D9")]
	Highest = 5
}
[Token(Token = "0x2000084")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40002DB")]
	Unknown = -1,
	[Token(Token = "0x40002DC")]
	One,
	[Token(Token = "0x40002DD")]
	Two
}
[Token(Token = "0x2000085")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x230AAF8", Offset = "0x230AAF8", VA = "0x230AAF8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x5D88D8", Offset = "0x5D88D8", VA = "0x5D88D8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x5D88E0", Offset = "0x5D88E0", VA = "0x5D88E0", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000086")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x230AE50", Offset = "0x230AE50", VA = "0x230AE50")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x5D8B8C", Offset = "0x5D8B8C", VA = "0x5D8B8C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x5D8B94", Offset = "0x5D8B94", VA = "0x5D8B94", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000087")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x230A07C", Offset = "0x230A07C", VA = "0x230A07C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x5D85F8", Offset = "0x5D85F8", VA = "0x5D85F8", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x5D8600", Offset = "0x5D8600", VA = "0x5D8600", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000088")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x230B420", Offset = "0x230B420", VA = "0x230B420")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x5D950C", Offset = "0x5D950C", VA = "0x5D950C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x5D9514", Offset = "0x5D9514", VA = "0x5D9514", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000089")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x237332C", Offset = "0x237332C", VA = "0x237332C")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x200008A")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int[] jointParents;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200008B")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000312")]
	FirstPerson = 1,
	[Token(Token = "0x4000313")]
	ThirdPerson = 2,
	[Token(Token = "0x4000314")]
	SelfOccluding = 4
}
[Token(Token = "0x200008C")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200008D")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200008E")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200008F")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x2000090")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400032A")]
	Default,
	[Token(Token = "0x400032B")]
	GripSphere,
	[Token(Token = "0x400032C")]
	GripCube,
	[Token(Token = "0x400032D")]
	Count
}
[Token(Token = "0x2000091")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400032F")]
	Body,
	[Token(Token = "0x4000330")]
	Clothing,
	[Token(Token = "0x4000331")]
	Eyewear,
	[Token(Token = "0x4000332")]
	Hair,
	[Token(Token = "0x4000333")]
	Beard,
	[Token(Token = "0x4000334")]
	Count
}
[Token(Token = "0x2000092")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float[] blendShapeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000093")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000094")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float[] visemeParams;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000095")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000096")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400033E")]
	AvatarHead,
	[Token(Token = "0x400033F")]
	AvatarHand,
	[Token(Token = "0x4000340")]
	Object,
	[Token(Token = "0x4000341")]
	ObjectStatic,
	[Token(Token = "0x4000342")]
	Count
}
[Token(Token = "0x2000097")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x2000098")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000099")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarGazeTarget[] targets;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200009A")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200009B")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x400034E")]
	Point,
	[Token(Token = "0x400034F")]
	Direction,
	[Token(Token = "0x4000350")]
	Spot,
	[Token(Token = "0x4000351")]
	Count
}
[Token(Token = "0x200009C")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200009D")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200009E")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[StructLayout(0, Size = 1)]
[Token(Token = "0x200009F")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000A0")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000367")]
	None = 0u,
	[Token(Token = "0x4000368")]
	GazeTarget = 1u,
	[Token(Token = "0x4000369")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public IntPtr text;
}
[Token(Token = "0x20000A3")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000A4")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000A5")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000A6")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20004AC")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4002640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4002641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4002642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4002643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4002644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4002645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4002646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4002647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _enableExpressive;

		[Token(Token = "0x6002427")]
		[Address(RVA = "0x5DAA9C", Offset = "0x5DAA9C", VA = "0x5DAA9C")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool initialized;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<int> loadingAvatars;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x400037E")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000031")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000298")]
		[Address(RVA = "0x236D438", Offset = "0x236D438", VA = "0x236D438")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x23815E8", Offset = "0x23815E8", VA = "0x23815E8")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x2381894", Offset = "0x2381894", VA = "0x2381894")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x2381924", Offset = "0x2381924", VA = "0x2381924")]
	private void Update()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x2382594", Offset = "0x2382594", VA = "0x2382594")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x238261C", Offset = "0x238261C", VA = "0x238261C")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x236DED4", Offset = "0x236DED4", VA = "0x236DED4")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x236E624", Offset = "0x236E624", VA = "0x236E624")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x236DDF4", Offset = "0x236DDF4", VA = "0x236DDF4")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x2382314", Offset = "0x2382314", VA = "0x2382314")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x236D764", Offset = "0x236D764", VA = "0x236D764")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x236D8F8", Offset = "0x236D8F8", VA = "0x236D8F8")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x236D6B4", Offset = "0x236D6B4", VA = "0x236D6B4")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x2382708", Offset = "0x2382708", VA = "0x2382708")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x238186C", Offset = "0x238186C", VA = "0x238186C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x237C494", Offset = "0x237C494", VA = "0x237C494")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x238282C", Offset = "0x238282C", VA = "0x238282C")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000A7")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x17000032")]
	public static string AppID
	{
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x23827DC", Offset = "0x23827DC", VA = "0x23827DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x23829B8", Offset = "0x23829B8", VA = "0x23829B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public static string MobileAppID
	{
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x2382804", Offset = "0x2382804", VA = "0x2382804")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x23829E4", Offset = "0x23829E4", VA = "0x23829E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x2382844", Offset = "0x2382844", VA = "0x2382844")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x2382A10", Offset = "0x2382A10", VA = "0x2382A10")]
		set
		{
		}
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x2382A74", Offset = "0x2382A74", VA = "0x2382A74")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000A8")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Shader surface;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool previouslyActive;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x236A8B0", Offset = "0x236A8B0", VA = "0x236A8B0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x2376CA0", Offset = "0x2376CA0", VA = "0x2376CA0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x23852B4", Offset = "0x23852B4", VA = "0x23852B4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x2385474", Offset = "0x2385474", VA = "0x2385474")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000A9")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool isMaterialInitilized;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x236AB84", Offset = "0x236AB84", VA = "0x236AB84")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x2376F74", Offset = "0x2376F74", VA = "0x2376F74")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x2385484", Offset = "0x2385484", VA = "0x2385484")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000AA")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool previouslyActive;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool EnableExpressive;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int blendShapeCount;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x400038D")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x400038E")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x400038F")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x236AF38", Offset = "0x236AF38", VA = "0x236AF38")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x23771A0", Offset = "0x23771A0", VA = "0x23771A0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x238419C", Offset = "0x238419C", VA = "0x238419C")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x2382FCC", Offset = "0x2382FCC", VA = "0x2382FCC")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x2382AE4", Offset = "0x2382AE4", VA = "0x2382AE4")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x2382D4C", Offset = "0x2382D4C", VA = "0x2382D4C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x23852A4", Offset = "0x23852A4", VA = "0x23852A4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000AB")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004AD")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4002648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4002649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x400264A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20004AE")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400264B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400264C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Texture Dst;

		[Token(Token = "0x400264D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Mip;

		[Token(Token = "0x400264E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int SrcSize;

		[Token(Token = "0x400264F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int DstElement;

		[Token(Token = "0x6002428")]
		[Address(RVA = "0x5D709C", Offset = "0x5D709C", VA = "0x5D709C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20004AF")]
	public struct TextureSet
	{
		[Token(Token = "0x4002650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4002651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsProcessed;

		[Token(Token = "0x6002429")]
		[Address(RVA = "0x5D717C", Offset = "0x5D717C", VA = "0x5D717C")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20004B0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2918", Offset = "0x5C2918")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4002655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4002656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int gameobjectID;

		[Token(Token = "0x1700028F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600242D")]
			[Address(RVA = "0x2387250", Offset = "0x2387250", VA = "0x2387250", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600242F")]
			[Address(RVA = "0x23872E0", Offset = "0x23872E0", VA = "0x23872E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600242A")]
		[Address(RVA = "0x238670C", Offset = "0x238670C", VA = "0x238670C")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x600242B")]
		[Address(RVA = "0x238694C", Offset = "0x238694C", VA = "0x238694C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600242C")]
		[Address(RVA = "0x2386950", Offset = "0x2386950", VA = "0x2386950", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600242E")]
		[Address(RVA = "0x2387258", Offset = "0x2387258", VA = "0x2387258", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x4000393")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x4000394")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000397")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000398")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000399")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x400039A")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x400039B")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x400039C")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x400039D")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x2385D4C", Offset = "0x2385D4C", VA = "0x2385D4C")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x238639C", Offset = "0x238639C", VA = "0x238639C")]
	public void Update()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x237FA1C", Offset = "0x237FA1C", VA = "0x237FA1C")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x237CA98", Offset = "0x237CA98", VA = "0x237CA98")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x238658C", Offset = "0x238658C", VA = "0x238658C")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x237C530", Offset = "0x237C530", VA = "0x237C530")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x237C878", Offset = "0x237C878", VA = "0x237C878")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x238663C", Offset = "0x238663C", VA = "0x238663C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CB9F4", Offset = "0x5CB9F4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x23826A4", Offset = "0x23826A4", VA = "0x23826A4")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x238672C", Offset = "0x238672C", VA = "0x238672C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isLeftHand;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x20CDFC4", Offset = "0x20CDFC4", VA = "0x20CDFC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x20CE16C", Offset = "0x20CE16C", VA = "0x20CE16C")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000AD")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60002CA")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x21D9FCC", Offset = "0x21D9FCC", VA = "0x21D9FCC")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x20000AE")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3C90", Offset = "0x5C3C90")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3CC4", Offset = "0x5C3CC4")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3CF8", Offset = "0x5C3CF8")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float resetRotation;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rotationAmount;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotationMax;

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x2440B60", Offset = "0x2440B60", VA = "0x2440B60")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x2440B64", Offset = "0x2440B64", VA = "0x2440B64")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x2440BE0", Offset = "0x2440BE0", VA = "0x2440BE0")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x2440F50", Offset = "0x2440F50", VA = "0x2440F50")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x20000AF")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int targetSet;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int maxTarget;

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x2440FA0", Offset = "0x2440FA0", VA = "0x2440FA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x2441130", Offset = "0x2441130", VA = "0x2441130")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x2441210", Offset = "0x2441210", VA = "0x2441210")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x244171C", Offset = "0x244171C", VA = "0x244171C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x2441768", Offset = "0x2441768", VA = "0x2441768")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x20000B0")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ArrayList messages;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int maxMessages;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text textMsg;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float clearTimeout;

	[Token(Token = "0x17000035")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x12021FC", Offset = "0x12021FC", VA = "0x12021FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x12025CC", Offset = "0x12025CC", VA = "0x12025CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x120276C", Offset = "0x120276C", VA = "0x120276C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1202664", Offset = "0x1202664", VA = "0x1202664")]
	public void Init()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x11FFA78", Offset = "0x11FFA78", VA = "0x11FFA78")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x120294C", Offset = "0x120294C", VA = "0x120294C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x11FF9E4", Offset = "0x11FF9E4", VA = "0x11FF9E4")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x11FFB3C", Offset = "0x11FFB3C", VA = "0x11FFB3C")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x120282C", Offset = "0x120282C", VA = "0x120282C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1202A0C", Offset = "0x1202A0C", VA = "0x1202A0C")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1202A4C", Offset = "0x1202A4C", VA = "0x1202A4C")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1202D04", Offset = "0x1202D04", VA = "0x1202D04")]
	private void Prune()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1202A5C", Offset = "0x1202A5C", VA = "0x1202A5C")]
	private void Display()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1202DE0", Offset = "0x1202DE0", VA = "0x1202DE0")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x20000B1")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public readonly string[] names;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1203B8C", Offset = "0x1203B8C", VA = "0x1203B8C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x20000B2")]
public static class OVRTouchpad
{
	[Token(Token = "0x20004B1")]
	public enum TouchEvent
	{
		[Token(Token = "0x4002658")]
		SingleTap,
		[Token(Token = "0x4002659")]
		DoubleTap,
		[Token(Token = "0x400265A")]
		Left,
		[Token(Token = "0x400265B")]
		Right,
		[Token(Token = "0x400265C")]
		Up,
		[Token(Token = "0x400265D")]
		Down
	}

	[Token(Token = "0x20004B2")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x9D17B4", Offset = "0x9D17B4", VA = "0x9D17B4")]
	public static void Create()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x9D17B8", Offset = "0x9D17B8", VA = "0x9D17B8")]
	public static void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x9D1B88", Offset = "0x9D1B88", VA = "0x9D1B88")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x9D1958", Offset = "0x9D1958", VA = "0x9D1958")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x9D1B8C", Offset = "0x9D1B8C", VA = "0x9D1B8C")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x20000B3")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x9D1E2C", Offset = "0x9D1E2C", VA = "0x9D1E2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x9D1EC0", Offset = "0x9D1EC0", VA = "0x9D1EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x9D1F84", Offset = "0x9D1F84", VA = "0x9D1F84")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x9D1FFC", Offset = "0x9D1FFC", VA = "0x9D1FFC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x9D2074", Offset = "0x9D2074", VA = "0x9D2074")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x9D2078", Offset = "0x9D2078", VA = "0x9D2078")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x20004B3")]
	public enum Result
	{
		[Token(Token = "0x400265F")]
		Success = 0,
		[Token(Token = "0x4002660")]
		Unknown = -2200,
		[Token(Token = "0x4002661")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4002662")]
		InvalidParam = -2202,
		[Token(Token = "0x4002663")]
		BadSampleRate = -2203,
		[Token(Token = "0x4002664")]
		MissingDLL = -2204,
		[Token(Token = "0x4002665")]
		BadVersion = -2205,
		[Token(Token = "0x4002666")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x20004B4")]
	public enum AudioDataType
	{
		[Token(Token = "0x4002668")]
		S16_Mono,
		[Token(Token = "0x4002669")]
		S16_Stereo,
		[Token(Token = "0x400266A")]
		F32_Mono,
		[Token(Token = "0x400266B")]
		F32_Stereo
	}

	[Token(Token = "0x20004B5")]
	public enum Viseme
	{
		[Token(Token = "0x400266D")]
		sil,
		[Token(Token = "0x400266E")]
		PP,
		[Token(Token = "0x400266F")]
		FF,
		[Token(Token = "0x4002670")]
		TH,
		[Token(Token = "0x4002671")]
		DD,
		[Token(Token = "0x4002672")]
		kk,
		[Token(Token = "0x4002673")]
		CH,
		[Token(Token = "0x4002674")]
		SS,
		[Token(Token = "0x4002675")]
		nn,
		[Token(Token = "0x4002676")]
		RR,
		[Token(Token = "0x4002677")]
		aa,
		[Token(Token = "0x4002678")]
		E,
		[Token(Token = "0x4002679")]
		ih,
		[Token(Token = "0x400267A")]
		oh,
		[Token(Token = "0x400267B")]
		ou
	}

	[Token(Token = "0x20004B6")]
	public enum Signals
	{
		[Token(Token = "0x400267D")]
		VisemeOn,
		[Token(Token = "0x400267E")]
		VisemeOff,
		[Token(Token = "0x400267F")]
		VisemeAmount,
		[Token(Token = "0x4002680")]
		VisemeSmoothing,
		[Token(Token = "0x4002681")]
		LaughterAmount
	}

	[Token(Token = "0x20004B7")]
	public enum ContextProviders
	{
		[Token(Token = "0x4002683")]
		Original,
		[Token(Token = "0x4002684")]
		Enhanced,
		[Token(Token = "0x4002685")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x20004B8")]
	public class Frame
	{
		[Token(Token = "0x4002686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int frameNumber;

		[Token(Token = "0x4002687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int frameDelay;

		[Token(Token = "0x4002688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] Visemes;

		[Token(Token = "0x4002689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float laughterScore;

		[Token(Token = "0x6002434")]
		[Address(RVA = "0x11FF150", Offset = "0x11FF150", VA = "0x11FF150")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6002435")]
		[Address(RVA = "0x11FF1E4", Offset = "0x11FF1E4", VA = "0x11FF1E4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6002436")]
		[Address(RVA = "0x11FF298", Offset = "0x11FF298", VA = "0x11FF298")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40003B7")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x11FD648", Offset = "0x11FD648", VA = "0x11FD648")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x11FD768", Offset = "0x11FD768", VA = "0x11FD768")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x11FD870", Offset = "0x11FD870", VA = "0x11FD870")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x11FD998", Offset = "0x11FD998", VA = "0x11FD998")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60002F5")]
	[Address(RVA = "0x11FDA90", Offset = "0x11FDA90", VA = "0x11FDA90")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11FDBC0", Offset = "0x11FDBC0", VA = "0x11FDBC0")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x11FDCA0", Offset = "0x11FDCA0", VA = "0x11FDCA0")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x11FDD80", Offset = "0x11FDD80", VA = "0x11FDD80")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x11FDEB0", Offset = "0x11FDEB0", VA = "0x11FDEB0")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x11FDFF0", Offset = "0x11FDFF0", VA = "0x11FDFF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x11FE488", Offset = "0x11FE488", VA = "0x11FE488")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x11FE324", Offset = "0x11FE324", VA = "0x11FE324")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x11FE5A0", Offset = "0x11FE5A0", VA = "0x11FE5A0")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x11FE6DC", Offset = "0x11FE6DC", VA = "0x11FE6DC")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x11FE298", Offset = "0x11FE298", VA = "0x11FE298")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x11FE774", Offset = "0x11FE774", VA = "0x11FE774")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x11FE894", Offset = "0x11FE894", VA = "0x11FE894")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x11FE9BC", Offset = "0x11FE9BC", VA = "0x11FE9BC")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x11FEA7C", Offset = "0x11FEA7C", VA = "0x11FEA7C")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x11FEB3C", Offset = "0x11FEB3C", VA = "0x11FEB3C")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x11FEC24", Offset = "0x11FEC24", VA = "0x11FEC24")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x11FEE08", Offset = "0x11FEE08", VA = "0x11FEE08")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x11FEFE0", Offset = "0x11FEFE0", VA = "0x11FEFE0")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x20000B5")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0E04", Offset = "0x5C0E04")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3D4C", Offset = "0x5C3D4C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3DB0", Offset = "0x5C3DB0")]
	public bool enableTouchInput;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3DE4", Offset = "0x5C3DE4")]
	public bool audioLoopback;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3E3C", Offset = "0x5C3E3C")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3E88", Offset = "0x5C3E88")]
	public bool showVisemes;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3EF0", Offset = "0x5C3EF0")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3F40", Offset = "0x5C3F40")]
	public bool skipAudioSource;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3F74", Offset = "0x5C3F74")]
	public float gain;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasDebugConsole;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool showLaughter;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float laughterScore;

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x11FF34C", Offset = "0x11FF34C", VA = "0x11FF34C")]
	private void Start()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x11FF4C0", Offset = "0x11FF4C0", VA = "0x11FF4C0")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11FFBE4", Offset = "0x11FFBE4", VA = "0x11FFBE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x11FFF84", Offset = "0x11FFF84", VA = "0x11FFF84")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1200010", Offset = "0x1200010", VA = "0x1200010")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x12000A8", Offset = "0x12000A8", VA = "0x12000A8")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1200268", Offset = "0x1200268", VA = "0x1200268")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1200420", Offset = "0x1200420", VA = "0x1200420")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1200520", Offset = "0x1200520", VA = "0x1200520")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x11FFC30", Offset = "0x11FFC30", VA = "0x11FFC30")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x11FF8D0", Offset = "0x11FF8D0", VA = "0x11FF8D0")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1200530", Offset = "0x1200530", VA = "0x1200530")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x12006B8", Offset = "0x12006B8", VA = "0x12006B8")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0E7C", Offset = "0x5C0E7C")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSource audioSource;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C3FA8", Offset = "0x5C3FA8")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C400C", Offset = "0x5C400C")]
	public bool enableAcceleration;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint context;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _smoothing;

	[Token(Token = "0x17000036")]
	public int Smoothing
	{
		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1200898", Offset = "0x1200898", VA = "0x1200898")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x1200760", Offset = "0x1200760", VA = "0x1200760")]
		set
		{
		}
	}

	[Token(Token = "0x17000037")]
	public uint Context
	{
		[Token(Token = "0x6000318")]
		[Address(RVA = "0x1200260", Offset = "0x1200260", VA = "0x1200260")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000038")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x6000319")]
		[Address(RVA = "0x11FFC28", Offset = "0x11FFC28", VA = "0x11FFC28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x12008A0", Offset = "0x12008A0", VA = "0x12008A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1200AA0", Offset = "0x1200AA0", VA = "0x1200AA0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1200C14", Offset = "0x1200C14", VA = "0x1200C14")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1200C1C", Offset = "0x1200C1C", VA = "0x1200C1C")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1200D50", Offset = "0x1200D50", VA = "0x1200D50")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1200E3C", Offset = "0x1200E3C", VA = "0x1200E3C")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x12006DC", Offset = "0x12006DC", VA = "0x12006DC")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x20000B7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0EF4", Offset = "0x5C0EF4")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C406C", Offset = "0x5C406C")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1200EDC", Offset = "0x1200EDC", VA = "0x1200EDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x120113C", Offset = "0x120113C", VA = "0x120113C")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x20000B8")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C40A0", Offset = "0x5C40A0")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4108", Offset = "0x5C4108")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4164", Offset = "0x5C4164")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4198", Offset = "0x5C4198")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C41CC", Offset = "0x5C41CC")]
	public KeyCode laughterKey;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4200", Offset = "0x5C4200")]
	public int laughterBlendTarget;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4258", Offset = "0x5C4258")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4258", Offset = "0x5C4258")]
	public float laughterThreshold;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C42A8", Offset = "0x5C42A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C42A8", Offset = "0x5C42A8")]
	public float laughterMultiplier;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C42FC", Offset = "0x5C42FC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C42FC", Offset = "0x5C42FC")]
	public int smoothAmount;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1201140", Offset = "0x1201140", VA = "0x1201140")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x12012E0", Offset = "0x12012E0", VA = "0x12012E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x12016B0", Offset = "0x12016B0", VA = "0x12016B0")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1201448", Offset = "0x1201448", VA = "0x1201448")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1201584", Offset = "0x1201584", VA = "0x1201584")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x12017B8", Offset = "0x12017B8", VA = "0x12017B8")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x12018B4", Offset = "0x12018B4", VA = "0x12018B4")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x120192C", Offset = "0x120192C", VA = "0x120192C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x20000B9")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Material material;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4350", Offset = "0x5C4350")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x5C4350", Offset = "0x5C4350")]
	public Texture[] Textures;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4500", Offset = "0x5C4500")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4500", Offset = "0x5C4500")]
	public int smoothAmount;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1201A64", Offset = "0x1201A64", VA = "0x1201A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1201C0C", Offset = "0x1201C0C", VA = "0x1201C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1201EF0", Offset = "0x1201EF0", VA = "0x1201EF0")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1202120", Offset = "0x1202120", VA = "0x1202120")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x20000BA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0F6C", Offset = "0x5C0F6C")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x20004B9")]
	public enum micActivation
	{
		[Token(Token = "0x400268B")]
		HoldToSpeak,
		[Token(Token = "0x400268C")]
		PushToSpeak,
		[Token(Token = "0x400268D")]
		ConstantSpeak
	}

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4554", Offset = "0x5C4554")]
	public AudioSource audioSource;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4588", Offset = "0x5C4588")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C45BC", Offset = "0x5C45BC")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4620", Offset = "0x5C4620")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4620", Offset = "0x5C4620")]
	private float micInputVolume;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C46A0", Offset = "0x5C46A0")]
	private int micFrequency;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4708", Offset = "0x5C4708")]
	public micActivation micControl;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C473C", Offset = "0x5C473C")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4770", Offset = "0x5C4770")]
	public string selectedDevice;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool micSelected;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int minFreq;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int maxFreq;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool focused;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool initialized;

	[Token(Token = "0x17000039")]
	public float MicFrequency
	{
		[Token(Token = "0x600032F")]
		[Address(RVA = "0x1202E68", Offset = "0x1202E68", VA = "0x1202E68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000330")]
		[Address(RVA = "0x1202E78", Offset = "0x1202E78", VA = "0x1202E78")]
		set
		{
		}
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1202F18", Offset = "0x1202F18", VA = "0x1202F18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1203008", Offset = "0x1203008", VA = "0x1203008")]
	private void Start()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1203068", Offset = "0x1203068", VA = "0x1203068")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1203208", Offset = "0x1203208", VA = "0x1203208")]
	private void Update()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x120377C", Offset = "0x120377C", VA = "0x120377C")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x120378C", Offset = "0x120378C", VA = "0x120378C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x120379C", Offset = "0x120379C", VA = "0x120379C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x12037A0", Offset = "0x12037A0", VA = "0x12037A0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x120382C", Offset = "0x120382C", VA = "0x120382C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1203128", Offset = "0x1203128", VA = "0x1203128")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x1203560", Offset = "0x1203560", VA = "0x1203560")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1203394", Offset = "0x1203394", VA = "0x1203394")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1203AB0", Offset = "0x1203AB0", VA = "0x1203AB0")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1203AB8", Offset = "0x1203AB8", VA = "0x1203AB8")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x20000BB")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float length;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1201004", Offset = "0x1201004", VA = "0x1201004")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1203B00", Offset = "0x1203B00", VA = "0x1203B00")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x20000BC")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20004BA")]
	public delegate void OnClick();

	[Token(Token = "0x20004BB")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20004BC")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20004BD")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20004BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2928", Offset = "0x5C2928")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x400268E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnClick handler;

		[Token(Token = "0x6002447")]
		[Address(RVA = "0xFA7DC8", Offset = "0xFA7DC8", VA = "0xFA7DC8")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6002448")]
		[Address(RVA = "0xFA7DD0", Offset = "0xFA7DD0", VA = "0xFA7DD0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20004BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2938", Offset = "0x5C2938")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x400268F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6002449")]
		[Address(RVA = "0xFA8234", Offset = "0xFA8234", VA = "0xFA8234")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600244A")]
		[Address(RVA = "0xFA823C", Offset = "0xFA823C", VA = "0xFA823C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20004C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2948", Offset = "0x5C2948")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4002690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle t;

		[Token(Token = "0x600244B")]
		[Address(RVA = "0xFA86D0", Offset = "0xFA86D0", VA = "0xFA86D0")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x600244C")]
		[Address(RVA = "0xFA86D8", Offset = "0xFA86D8", VA = "0xFA86D8")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2958", Offset = "0x5C2958")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4002692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4002693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle t;

		[Token(Token = "0x600244D")]
		[Address(RVA = "0xFA8F30", Offset = "0xFA8F30", VA = "0xFA8F30")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600244E")]
		[Address(RVA = "0xFA8F38", Offset = "0xFA8F38", VA = "0xFA8F38")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20004C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2968", Offset = "0x5C2968")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4002694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4002695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Toggle tb;

		[Token(Token = "0x600244F")]
		[Address(RVA = "0xFA8F68", Offset = "0xFA8F68", VA = "0xFA8F68")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6002450")]
		[Address(RVA = "0xFA8F70", Offset = "0xFA8F70", VA = "0xFA8F70")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40003EB")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40003EC")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40003ED")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool[] reEnable;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40003FA")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40003FB")]
	private const float marginH = 16f;

	[Token(Token = "0x40003FC")]
	private const float marginV = 16f;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private LaserPointer lp;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lr;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x2249FE0", Offset = "0x2249FE0", VA = "0x2249FE0")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x224A600", Offset = "0x224A600", VA = "0x224A600")]
	public void Show()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x224AF60", Offset = "0x224AF60", VA = "0x224AF60")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x224ABD8", Offset = "0x224ABD8", VA = "0x224ABD8")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x224B1AC", Offset = "0x224B1AC", VA = "0x224B1AC")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x224B600", Offset = "0x224B600", VA = "0x224B600")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x224B98C", Offset = "0x224B98C", VA = "0x224B98C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x224BAC0", Offset = "0x224BAC0", VA = "0x224BAC0")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x224BCEC", Offset = "0x224BCEC", VA = "0x224BCEC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x224BD9C", Offset = "0x224BD9C", VA = "0x224BD9C")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x224BF90", Offset = "0x224BF90", VA = "0x224BF90")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x224C1AC", Offset = "0x224C1AC", VA = "0x224C1AC")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x224C508", Offset = "0x224C508", VA = "0x224C508")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x224C5C8", Offset = "0x224C5C8", VA = "0x224C5C8")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000BD")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x2274D9C", Offset = "0x2274D9C", VA = "0x2274D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x2274E44", Offset = "0x2274E44", VA = "0x2274E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x2274ED8", Offset = "0x2274ED8", VA = "0x2274ED8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x2274F38", Offset = "0x2274F38", VA = "0x2274F38")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000BE")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20004C3")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4002697")]
		On,
		[Token(Token = "0x4002698")]
		Off,
		[Token(Token = "0x4002699")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxLength;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 _startPoint;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _forward;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _endPoint;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool _hitTarget;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700003A")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x23E9F38", Offset = "0x23E9F38", VA = "0x23E9F38")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000353")]
		[Address(RVA = "0x23E9EDC", Offset = "0x23E9EDC", VA = "0x23E9EDC")]
		set
		{
		}
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x23E9F40", Offset = "0x23E9F40", VA = "0x23E9F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x23E9FA8", Offset = "0x23E9FA8", VA = "0x23E9FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x23EA110", Offset = "0x23EA110", VA = "0x23EA110", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x23EA144", Offset = "0x23EA144", VA = "0x23EA144", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x23EA1C4", Offset = "0x23EA1C4", VA = "0x23EA1C4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x23EA530", Offset = "0x23EA530", VA = "0x23EA530")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x23EA6E4", Offset = "0x23EA6E4", VA = "0x23EA6E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x23EA798", Offset = "0x23EA798", VA = "0x23EA798")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x23EA8A4", Offset = "0x23EA8A4", VA = "0x23EA8A4")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x23EA988", Offset = "0x23EA988", VA = "0x23EA988")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x23EAA88", Offset = "0x23EAA88", VA = "0x23EAA88")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x22884E4", Offset = "0x22884E4", VA = "0x22884E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x228879C", Offset = "0x228879C", VA = "0x228879C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x2288DAC", Offset = "0x2288DAC", VA = "0x2288DAC")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x20000C0")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x226B2E4", Offset = "0x226B2E4", VA = "0x226B2E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x226B49C", Offset = "0x226B49C", VA = "0x226B49C")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x226B764", Offset = "0x226B764", VA = "0x226B764")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x20000C1")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_framecount;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x1700003B")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x226B878", Offset = "0x226B878", VA = "0x226B878")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event Action TrackingChanged
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0x226B390", Offset = "0x226B390", VA = "0x226B390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBA6C", Offset = "0x5CBA6C")]
		add
		{
		}
		[Token(Token = "0x6000367")]
		[Address(RVA = "0x226B76C", Offset = "0x226B76C", VA = "0x226B76C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBA7C", Offset = "0x5CBA7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x226B888", Offset = "0x226B888", VA = "0x226B888")]
	private void Start()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x226B9F0", Offset = "0x226B9F0", VA = "0x226B9F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x226BC24", Offset = "0x226BC24", VA = "0x226BC24")]
	private void Recentered()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x226BC30", Offset = "0x226BC30", VA = "0x226BC30")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x20000C2")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4854", Offset = "0x5C4854")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4888", Offset = "0x5C4888")]
	public bool EnableCollision;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C48BC", Offset = "0x5C48BC")]
	public float MaxFade;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C48F0", Offset = "0x5C48F0")]
	public float FadeMinDistance;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PreferredHeight;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4924", Offset = "0x5C4924")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x2223918", Offset = "0x2223918", VA = "0x2223918")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x22239CC", Offset = "0x22239CC", VA = "0x22239CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x2223A50", Offset = "0x2223A50", VA = "0x2223A50")]
	private void Start()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x2223A54", Offset = "0x2223A54", VA = "0x2223A54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x2223A88", Offset = "0x2223A88", VA = "0x2223A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x2223ABC", Offset = "0x2223ABC", VA = "0x2223ABC")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x20000C3")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x245C408", Offset = "0x245C408", VA = "0x245C408")]
	private void Start()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x245C4E0", Offset = "0x245C4E0", VA = "0x245C4E0")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000C4")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20004C4")]
	public enum States
	{
		[Token(Token = "0x400269B")]
		Ready,
		[Token(Token = "0x400269C")]
		Aim,
		[Token(Token = "0x400269D")]
		CancelAim,
		[Token(Token = "0x400269E")]
		PreTeleport,
		[Token(Token = "0x400269F")]
		CancelTeleport,
		[Token(Token = "0x40026A0")]
		Teleporting,
		[Token(Token = "0x40026A1")]
		PostTeleport
	}

	[Token(Token = "0x20004C5")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x40026A3")]
		None,
		[Token(Token = "0x40026A4")]
		Aim,
		[Token(Token = "0x40026A5")]
		PreTeleport,
		[Token(Token = "0x40026A6")]
		Teleport
	}

	[Token(Token = "0x20004C6")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x40026A8")]
		Point,
		[Token(Token = "0x40026A9")]
		Sphere,
		[Token(Token = "0x40026AA")]
		Capsule
	}

	[Token(Token = "0x20004C7")]
	public class AimData
	{
		[Token(Token = "0x40026AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x40026AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool TargetValid;

		[Token(Token = "0x40026AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3? Destination;

		[Token(Token = "0x40026AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float Radius;

		[Token(Token = "0x40026AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB24", Offset = "0x5CAB24")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000291")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6002452")]
			[Address(RVA = "0x2460F10", Offset = "0x2460F10", VA = "0x2460F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2B84", Offset = "0x5D2B84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002453")]
			[Address(RVA = "0x2460F08", Offset = "0x2460F08", VA = "0x2460F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2B94", Offset = "0x5D2B94")]
			private set
			{
			}
		}

		[Token(Token = "0x6002451")]
		[Address(RVA = "0x2460E7C", Offset = "0x2460E7C", VA = "0x2460E7C")]
		public AimData()
		{
		}

		[Token(Token = "0x6002454")]
		[Address(RVA = "0x2460F18", Offset = "0x2460F18", VA = "0x2460F18")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20004C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2978", Offset = "0x5C2978")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000292")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002458")]
			[Address(RVA = "0x2460C00", Offset = "0x2460C00", VA = "0x2460C00", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000293")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600245A")]
			[Address(RVA = "0x2460C90", Offset = "0x2460C90", VA = "0x2460C90", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002455")]
		[Address(RVA = "0x245E270", Offset = "0x245E270", VA = "0x245E270")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6002456")]
		[Address(RVA = "0x2460A78", Offset = "0x2460A78", VA = "0x2460A78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002457")]
		[Address(RVA = "0x2460A7C", Offset = "0x2460A7C", VA = "0x2460A7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002459")]
		[Address(RVA = "0x2460C08", Offset = "0x2460C08", VA = "0x2460C08", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2988", Offset = "0x5C2988")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000294")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600245E")]
			[Address(RVA = "0x24602C4", Offset = "0x24602C4", VA = "0x24602C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000295")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002460")]
			[Address(RVA = "0x2460354", Offset = "0x2460354", VA = "0x2460354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600245B")]
		[Address(RVA = "0x245E9D8", Offset = "0x245E9D8", VA = "0x245E9D8")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600245C")]
		[Address(RVA = "0x24600C8", Offset = "0x24600C8", VA = "0x24600C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600245D")]
		[Address(RVA = "0x24600CC", Offset = "0x24600CC", VA = "0x24600CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600245F")]
		[Address(RVA = "0x24602CC", Offset = "0x24602CC", VA = "0x24602CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2998", Offset = "0x5C2998")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000296")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002464")]
			[Address(RVA = "0x2460448", Offset = "0x2460448", VA = "0x2460448", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000297")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002466")]
			[Address(RVA = "0x24604D8", Offset = "0x24604D8", VA = "0x24604D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002461")]
		[Address(RVA = "0x245EC9C", Offset = "0x245EC9C", VA = "0x245EC9C")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002462")]
		[Address(RVA = "0x246035C", Offset = "0x246035C", VA = "0x246035C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002463")]
		[Address(RVA = "0x2460360", Offset = "0x2460360", VA = "0x2460360", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002465")]
		[Address(RVA = "0x2460450", Offset = "0x2460450", VA = "0x2460450", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29A8", Offset = "0x5C29A8")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000298")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600246A")]
			[Address(RVA = "0x24609E0", Offset = "0x24609E0", VA = "0x24609E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000299")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600246C")]
			[Address(RVA = "0x2460A70", Offset = "0x2460A70", VA = "0x2460A70", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002467")]
		[Address(RVA = "0x245EF60", Offset = "0x245EF60", VA = "0x245EF60")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002468")]
		[Address(RVA = "0x2460878", Offset = "0x2460878", VA = "0x2460878", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002469")]
		[Address(RVA = "0x246087C", Offset = "0x246087C", VA = "0x246087C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600246B")]
		[Address(RVA = "0x24609E8", Offset = "0x24609E8", VA = "0x24609E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29B8", Offset = "0x5C29B8")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700029A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002470")]
			[Address(RVA = "0x24605CC", Offset = "0x24605CC", VA = "0x24605CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002472")]
			[Address(RVA = "0x246065C", Offset = "0x246065C", VA = "0x246065C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600246D")]
		[Address(RVA = "0x245F224", Offset = "0x245F224", VA = "0x245F224")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600246E")]
		[Address(RVA = "0x24604E0", Offset = "0x24604E0", VA = "0x24604E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600246F")]
		[Address(RVA = "0x24604E4", Offset = "0x24604E4", VA = "0x24604E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002471")]
		[Address(RVA = "0x24605D4", Offset = "0x24605D4", VA = "0x24605D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29C8", Offset = "0x5C29C8")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700029C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002476")]
			[Address(RVA = "0x2460DE4", Offset = "0x2460DE4", VA = "0x2460DE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002478")]
			[Address(RVA = "0x2460E74", Offset = "0x2460E74", VA = "0x2460E74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002473")]
		[Address(RVA = "0x245F4E8", Offset = "0x245F4E8", VA = "0x245F4E8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002474")]
		[Address(RVA = "0x2460C98", Offset = "0x2460C98", VA = "0x2460C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002475")]
		[Address(RVA = "0x2460C9C", Offset = "0x2460C9C", VA = "0x2460C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002477")]
		[Address(RVA = "0x2460DEC", Offset = "0x2460DEC", VA = "0x2460DEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29D8", Offset = "0x5C29D8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700029E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600247C")]
			[Address(RVA = "0x24607E0", Offset = "0x24607E0", VA = "0x24607E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600247E")]
			[Address(RVA = "0x2460870", Offset = "0x2460870", VA = "0x2460870", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002479")]
		[Address(RVA = "0x245F7AC", Offset = "0x245F7AC", VA = "0x245F7AC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x600247A")]
		[Address(RVA = "0x2460664", Offset = "0x2460664", VA = "0x2460664", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600247B")]
		[Address(RVA = "0x2460668", Offset = "0x2460668", VA = "0x2460668", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600247D")]
		[Address(RVA = "0x24607E8", Offset = "0x24607E8", VA = "0x24607E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4958", Offset = "0x5C4958")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C498C", Offset = "0x5C498C")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C49C0", Offset = "0x5C49C0")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C49F4", Offset = "0x5C49F4")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4A28", Offset = "0x5C4A28")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4A94", Offset = "0x5C4A94")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4AC8", Offset = "0x5C4AC8")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4AFC", Offset = "0x5C4AFC")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4B30", Offset = "0x5C4B30")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4B40", Offset = "0x5C4B40")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4B74", Offset = "0x5C4B74")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4BF0", Offset = "0x5C4BF0")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4C00", Offset = "0x5C4C00")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4C34", Offset = "0x5C4C34")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4C68", Offset = "0x5C4C68")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4C9C", Offset = "0x5C4C9C")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700003C")]
	public States CurrentState
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x245D3F8", Offset = "0x245D3F8", VA = "0x245D3F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBA8C", Offset = "0x5CBA8C")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x245D400", Offset = "0x245D400", VA = "0x245D400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBA9C", Offset = "0x5CBA9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x245D704", Offset = "0x245D704", VA = "0x245D704")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700003E")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x245D74C", Offset = "0x245D74C", VA = "0x245D74C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBACC", Offset = "0x5CBACC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x245D754", Offset = "0x245D754", VA = "0x245D754")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBADC", Offset = "0x5CBADC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x245D408", Offset = "0x245D408", VA = "0x245D408")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBAAC", Offset = "0x5CBAAC")]
		add
		{
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x245D514", Offset = "0x245D514", VA = "0x245D514")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBABC", Offset = "0x5CBABC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x245E058", Offset = "0x245E058", VA = "0x245E058")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBB30", Offset = "0x5CBB30")]
		add
		{
		}
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x245E164", Offset = "0x245E164", VA = "0x245E164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBB40", Offset = "0x5CBB40")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x245E290", Offset = "0x245E290", VA = "0x245E290")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBBC8", Offset = "0x5CBBC8")]
		add
		{
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x245E39C", Offset = "0x245E39C", VA = "0x245E39C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBBD8", Offset = "0x5CBBD8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x245E4A8", Offset = "0x245E4A8", VA = "0x245E4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBBE8", Offset = "0x5CBBE8")]
		add
		{
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x245E5B4", Offset = "0x245E5B4", VA = "0x245E5B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBBF8", Offset = "0x5CBBF8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x245E734", Offset = "0x245E734", VA = "0x245E734")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBC08", Offset = "0x5CBC08")]
		add
		{
		}
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x245E840", Offset = "0x245E840", VA = "0x245E840")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBC18", Offset = "0x5CBC18")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x245E9F8", Offset = "0x245E9F8", VA = "0x245E9F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBCA0", Offset = "0x5CBCA0")]
		add
		{
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x245EB04", Offset = "0x245EB04", VA = "0x245EB04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBCB0", Offset = "0x5CBCB0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x245ECBC", Offset = "0x245ECBC", VA = "0x245ECBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBD38", Offset = "0x5CBD38")]
		add
		{
		}
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x245EDC8", Offset = "0x245EDC8", VA = "0x245EDC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBD48", Offset = "0x5CBD48")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000399")]
		[Address(RVA = "0x245EF80", Offset = "0x245EF80", VA = "0x245EF80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBDD0", Offset = "0x5CBDD0")]
		add
		{
		}
		[Token(Token = "0x600039A")]
		[Address(RVA = "0x245F08C", Offset = "0x245F08C", VA = "0x245F08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBDE0", Offset = "0x5CBDE0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600039C")]
		[Address(RVA = "0x245F244", Offset = "0x245F244", VA = "0x245F244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBE68", Offset = "0x5CBE68")]
		add
		{
		}
		[Token(Token = "0x600039D")]
		[Address(RVA = "0x245F350", Offset = "0x245F350", VA = "0x245F350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBE78", Offset = "0x5CBE78")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x245F508", Offset = "0x245F508", VA = "0x245F508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBF00", Offset = "0x5CBF00")]
		add
		{
		}
		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x245F614", Offset = "0x245F614", VA = "0x245F614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBF10", Offset = "0x5CBF10")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x245F7CC", Offset = "0x245F7CC", VA = "0x245F7CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBF98", Offset = "0x5CBF98")]
		add
		{
		}
		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x245F8D8", Offset = "0x245F8D8", VA = "0x245F8D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFA8", Offset = "0x5CBFA8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x245CF78", Offset = "0x245CF78", VA = "0x245CF78")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x245CF90", Offset = "0x245CF90", VA = "0x245CF90")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x245D620", Offset = "0x245D620", VA = "0x245D620")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x245D75C", Offset = "0x245D75C", VA = "0x245D75C")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x245DB6C", Offset = "0x245DB6C", VA = "0x245DB6C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CBAEC", Offset = "0x5CBAEC")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x245DC40", Offset = "0x245DC40", VA = "0x245DC40")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x245DD94", Offset = "0x245DD94", VA = "0x245DD94")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x245DDC0", Offset = "0x245DDC0", VA = "0x245DDC0")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x245DEB4", Offset = "0x245DEB4", VA = "0x245DEB4")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x245DF24", Offset = "0x245DF24", VA = "0x245DF24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x245DF94", Offset = "0x245DF94", VA = "0x245DF94", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x245E050", Offset = "0x245E050", VA = "0x245E050", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x245DFC4", Offset = "0x245DFC4", VA = "0x245DFC4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBB50", Offset = "0x5CBB50")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x245E6C0", Offset = "0x245E6C0", VA = "0x245E6C0")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x245E94C", Offset = "0x245E94C", VA = "0x245E94C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBC28", Offset = "0x5CBC28")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x245EC10", Offset = "0x245EC10", VA = "0x245EC10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBCC0", Offset = "0x5CBCC0")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x245EED4", Offset = "0x245EED4", VA = "0x245EED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBD58", Offset = "0x5CBD58")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x245F198", Offset = "0x245F198", VA = "0x245F198")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBDF0", Offset = "0x5CBDF0")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x245F45C", Offset = "0x245F45C", VA = "0x245F45C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBE88", Offset = "0x5CBE88")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x245F720", Offset = "0x245F720", VA = "0x245F720")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CBF20", Offset = "0x5CBF20")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x245F9E4", Offset = "0x245F9E4", VA = "0x245F9E4")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x245FBD0", Offset = "0x245FBD0", VA = "0x245FBD0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x245FC38", Offset = "0x245FC38", VA = "0x245FC38")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x245FEF0", Offset = "0x245FEF0", VA = "0x245FEF0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x24600B0", Offset = "0x24600B0", VA = "0x24600B0")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x20000C5")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool EnableRotation;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float RotationAngle;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float Speed;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x22ECA50", Offset = "0x22ECA50", VA = "0x22ECA50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFB8", Offset = "0x5CBFB8")]
		add
		{
		}
		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x22ECB5C", Offset = "0x22ECB5C", VA = "0x22ECB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFC8", Offset = "0x5CBFC8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x22ECC68", Offset = "0x22ECC68", VA = "0x22ECC68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFD8", Offset = "0x5CBFD8")]
		add
		{
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x22ECD74", Offset = "0x22ECD74", VA = "0x22ECD74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFE8", Offset = "0x5CBFE8")]
		remove
		{
		}
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x22ECE80", Offset = "0x22ECE80", VA = "0x22ECE80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x22ECF4C", Offset = "0x22ECF4C", VA = "0x22ECF4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x22ECF50", Offset = "0x22ECF50", VA = "0x22ECF50")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x22ECFBC", Offset = "0x22ECFBC", VA = "0x22ECFBC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x22ED210", Offset = "0x22ED210", VA = "0x22ED210")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x22ED588", Offset = "0x22ED588", VA = "0x22ED588")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x22ED834", Offset = "0x22ED834", VA = "0x22ED834")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x20000C6")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x21770B4", Offset = "0x21770B4", VA = "0x21770B4", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x2177164", Offset = "0x2177164", VA = "0x2177164", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003B6")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x2177270", Offset = "0x2177270", VA = "0x2177270")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x20000C7")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4D90", Offset = "0x5C4D90")]
	public float Range;

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x2177280", Offset = "0x2177280", VA = "0x2177280", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x217744C", Offset = "0x217744C", VA = "0x217744C")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x20000C8")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4DC4", Offset = "0x5C4DC4")]
	public float Range;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4DF8", Offset = "0x5C4DF8")]
	public float MinimumElevation;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4E5C", Offset = "0x5C4E5C")]
	public float Gravity;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4E90", Offset = "0x5C4E90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4E90", Offset = "0x5C4E90")]
	public float AimVelocity;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4F20", Offset = "0x5C4F20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C4F20", Offset = "0x5C4F20")]
	public float AimStep;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x2177460", Offset = "0x2177460", VA = "0x2177460", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x2177788", Offset = "0x2177788", VA = "0x2177788")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x20000C9")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4FA4", Offset = "0x5C4FA4")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _linePoints;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x21777B0", Offset = "0x21777B0", VA = "0x21777B0")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x21778BC", Offset = "0x21778BC", VA = "0x21778BC")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x217790C", Offset = "0x217790C", VA = "0x217790C")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x217795C", Offset = "0x217795C", VA = "0x217795C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x2177A38", Offset = "0x2177A38", VA = "0x2177A38", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x2177AD4", Offset = "0x2177AD4", VA = "0x2177AD4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x2177B70", Offset = "0x2177B70", VA = "0x2177B70")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x20000CA")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C4FD8", Offset = "0x5C4FD8")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C4FE8", Offset = "0x5C4FE8")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C501C", Offset = "0x5C501C")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5050", Offset = "0x5C5050")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _eventsActive;

	[Token(Token = "0x1700003F")]
	public bool IsValidDestination
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x2177D70", Offset = "0x2177D70", VA = "0x2177D70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CBFF8", Offset = "0x5CBFF8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x2177D78", Offset = "0x2177D78", VA = "0x2177D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC008", Offset = "0x5CC008")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x2177FC4", Offset = "0x2177FC4", VA = "0x2177FC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC018", Offset = "0x5CC018")]
		add
		{
		}
		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x21780D0", Offset = "0x21780D0", VA = "0x21780D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC028", Offset = "0x5CC028")]
		remove
		{
		}
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x2177D80", Offset = "0x2177D80", VA = "0x2177D80")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x2177E28", Offset = "0x2177E28", VA = "0x2177E28")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x2177F74", Offset = "0x2177F74", VA = "0x2177F74")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x2177FC0", Offset = "0x2177FC0", VA = "0x2177FC0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x21781DC", Offset = "0x21781DC", VA = "0x21781DC")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x2178258", Offset = "0x2178258", VA = "0x2178258")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x217828C", Offset = "0x217828C", VA = "0x217828C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20004CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29E8", Offset = "0x5C29E8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170002A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002482")]
			[Address(RVA = "0x2178BF4", Offset = "0x2178BF4", VA = "0x2178BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002484")]
			[Address(RVA = "0x2178C84", Offset = "0x2178C84", VA = "0x2178C84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600247F")]
		[Address(RVA = "0x2178908", Offset = "0x2178908", VA = "0x2178908")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6002480")]
		[Address(RVA = "0x2178B60", Offset = "0x2178B60", VA = "0x2178B60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002481")]
		[Address(RVA = "0x2178B64", Offset = "0x2178B64", VA = "0x2178B64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002483")]
		[Address(RVA = "0x2178BFC", Offset = "0x2178BFC", VA = "0x2178BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C29F8", Offset = "0x5C29F8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170002A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002488")]
			[Address(RVA = "0x2178AC8", Offset = "0x2178AC8", VA = "0x2178AC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600248A")]
			[Address(RVA = "0x2178B58", Offset = "0x2178B58", VA = "0x2178B58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002485")]
		[Address(RVA = "0x21789B4", Offset = "0x21789B4", VA = "0x21789B4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002486")]
		[Address(RVA = "0x2178A1C", Offset = "0x2178A1C", VA = "0x2178A1C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002487")]
		[Address(RVA = "0x2178A20", Offset = "0x2178A20", VA = "0x2178A20", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002489")]
		[Address(RVA = "0x2178AD0", Offset = "0x2178AD0", VA = "0x2178AD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Action _startAimAction;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x217861C", Offset = "0x217861C", VA = "0x217861C")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x21786E0", Offset = "0x21786E0", VA = "0x21786E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x2178760", Offset = "0x2178760", VA = "0x2178760", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x217887C", Offset = "0x217887C", VA = "0x217887C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC038", Offset = "0x5CC038")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x2178928", Offset = "0x2178928", VA = "0x2178928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC0B0", Offset = "0x5CC0B0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003D3")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60003D4")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x21789D4", Offset = "0x21789D4", VA = "0x21789D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC128", Offset = "0x5CC128")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x21789F8", Offset = "0x21789F8", VA = "0x21789F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC138", Offset = "0x5CC138")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x20000CC")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C5094", Offset = "0x5C5094")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C50A4", Offset = "0x5C50A4")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5100", Offset = "0x5C5100")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5134", Offset = "0x5C5134")]
	public bool FastTeleport;

	[Token(Token = "0x17000040")]
	public Transform Pointer
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x2178C8C", Offset = "0x2178C8C", VA = "0x2178C8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC148", Offset = "0x5CC148")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x2178C94", Offset = "0x2178C94", VA = "0x2178C94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC158", Offset = "0x5CC158")]
		private set
		{
		}
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x2178C9C", Offset = "0x2178C9C", VA = "0x2178C9C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x2178E54", Offset = "0x2178E54", VA = "0x2178E54", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x2178F58", Offset = "0x2178F58", VA = "0x2178F58")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x20000CD")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20004D1")]
	public enum InputModes
	{
		[Token(Token = "0x40026CC")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40026CD")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40026CE")]
		ThumbstickTeleport,
		[Token(Token = "0x40026CF")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20004D2")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40026D1")]
		A,
		[Token(Token = "0x40026D2")]
		B,
		[Token(Token = "0x40026D3")]
		LeftTrigger,
		[Token(Token = "0x40026D4")]
		LeftThumbstick,
		[Token(Token = "0x40026D5")]
		RightTrigger,
		[Token(Token = "0x40026D6")]
		RightThumbstick,
		[Token(Token = "0x40026D7")]
		X,
		[Token(Token = "0x40026D8")]
		Y
	}

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform LeftHand;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RightHand;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5168", Offset = "0x5C5168")]
	public InputModes InputMode;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C519C", Offset = "0x5C519C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C51D0", Offset = "0x5C51D0")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5204", Offset = "0x5C5204")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x2178F5C", Offset = "0x2178F5C", VA = "0x2178F5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x2178F60", Offset = "0x2178F60", VA = "0x2178F60", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x21794E8", Offset = "0x21794E8", VA = "0x21794E8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x21795B0", Offset = "0x21795B0", VA = "0x21795B0")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x20000CE")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20004D3")]
	public enum OrientationModes
	{
		[Token(Token = "0x40026DA")]
		HeadRelative,
		[Token(Token = "0x40026DB")]
		ForwardFacing
	}

	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A08", Offset = "0x5C2A08")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170002A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600248E")]
			[Address(RVA = "0x2179B88", Offset = "0x2179B88", VA = "0x2179B88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002490")]
			[Address(RVA = "0x2179C18", Offset = "0x2179C18", VA = "0x2179C18", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600248B")]
		[Address(RVA = "0x21798C4", Offset = "0x21798C4", VA = "0x21798C4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600248C")]
		[Address(RVA = "0x2179A88", Offset = "0x2179A88", VA = "0x2179A88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600248D")]
		[Address(RVA = "0x2179A8C", Offset = "0x2179A8C", VA = "0x2179A8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600248F")]
		[Address(RVA = "0x2179B90", Offset = "0x2179B90", VA = "0x2179B90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x2179684", Offset = "0x2179684", VA = "0x2179684")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x2179760", Offset = "0x2179760", VA = "0x2179760")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x2179768", Offset = "0x2179768", VA = "0x2179768", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x21797D0", Offset = "0x21797D0", VA = "0x21797D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x2179838", Offset = "0x2179838", VA = "0x2179838")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC168", Offset = "0x5CC168")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003E5")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60003E6")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0x21798E4", Offset = "0x21798E4", VA = "0x21798E4")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x2179A64", Offset = "0x2179A64", VA = "0x2179A64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC1E0", Offset = "0x5CC1E0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000CF")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x2179C20", Offset = "0x2179C20", VA = "0x2179C20", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x2179C24", Offset = "0x2179C24", VA = "0x2179C24", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x2179CE4", Offset = "0x2179CE4", VA = "0x2179CE4")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x20000D0")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5238", Offset = "0x5C5238")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C526C", Offset = "0x5C526C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C52A0", Offset = "0x5C52A0")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C52D4", Offset = "0x5C52D4")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x2179CE8", Offset = "0x2179CE8", VA = "0x2179CE8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x2179D88", Offset = "0x2179D88", VA = "0x2179D88", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x217A524", Offset = "0x217A524", VA = "0x217A524")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000D1")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5308", Offset = "0x5C5308")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C533C", Offset = "0x5C533C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5370", Offset = "0x5C5370")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x217A528", Offset = "0x217A528", VA = "0x217A528", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x217A584", Offset = "0x217A584", VA = "0x217A584", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x217AC50", Offset = "0x217AC50", VA = "0x217AC50")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000D2")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float dimmingSpeed;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fullIntensity;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float lowIntensity;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform destTransform;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastLookAtTime;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0x217AC60", Offset = "0x217AC60", VA = "0x217AC60")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x217AC64", Offset = "0x217AC64", VA = "0x217AC64")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x217AC6C", Offset = "0x217AC6C", VA = "0x217AC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x217AD98", Offset = "0x217AD98", VA = "0x217AD98")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x217ADB4", Offset = "0x217ADB4", VA = "0x217ADB4")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000D3")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C53A4", Offset = "0x5C53A4")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool _eventsActive;

	[Token(Token = "0x17000041")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x217715C", Offset = "0x217715C", VA = "0x217715C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC1F0", Offset = "0x5CC1F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x217ADD0", Offset = "0x217ADD0", VA = "0x217ADD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC200", Offset = "0x5CC200")]
		private set
		{
		}
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x21770E0", Offset = "0x21770E0", VA = "0x21770E0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0x2177244", Offset = "0x2177244", VA = "0x2177244", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0x217ADD8", Offset = "0x217ADD8", VA = "0x217ADD8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CC210", Offset = "0x5CC210")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x2177AC8", Offset = "0x2177AC8", VA = "0x2177AC8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x2177B64", Offset = "0x2177B64", VA = "0x2177B64", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x2177278", Offset = "0x2177278", VA = "0x2177278")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000D4")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20004D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A18", Offset = "0x5C2A18")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170002A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002494")]
			[Address(RVA = "0x217B710", Offset = "0x217B710", VA = "0x217B710", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002496")]
			[Address(RVA = "0x217B7A0", Offset = "0x217B7A0", VA = "0x217B7A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002491")]
		[Address(RVA = "0x217B0C4", Offset = "0x217B0C4", VA = "0x217B0C4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002492")]
		[Address(RVA = "0x217B2D0", Offset = "0x217B2D0", VA = "0x217B2D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002493")]
		[Address(RVA = "0x217B2D4", Offset = "0x217B2D4", VA = "0x217B2D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002495")]
		[Address(RVA = "0x217B718", Offset = "0x217B718", VA = "0x217B718", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C53B4", Offset = "0x5C53B4")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000495")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x217AED4", Offset = "0x217AED4", VA = "0x217AED4")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x217AFC0", Offset = "0x217AFC0", VA = "0x217AFC0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x217AFFC", Offset = "0x217AFFC", VA = "0x217AFFC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x217B038", Offset = "0x217B038", VA = "0x217B038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC25C", Offset = "0x5CC25C")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x217B0E4", Offset = "0x217B0E4", VA = "0x217B0E4", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000404")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x217B110", Offset = "0x217B110", VA = "0x217B110", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x217B2AC", Offset = "0x217B2AC", VA = "0x217B2AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC2D4", Offset = "0x5CC2D4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000D5")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private NavMeshPath _path;

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x217B7A8", Offset = "0x217B7A8", VA = "0x217B7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x217B818", Offset = "0x217B818", VA = "0x217B818", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x217BA18", Offset = "0x217BA18", VA = "0x217BA18", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x217BB8C", Offset = "0x217BB8C", VA = "0x217BB8C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CC2E4", Offset = "0x5CC2E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x217BB90", Offset = "0x217BB90", VA = "0x217BB90")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000D6")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C53E8", Offset = "0x5C53E8")]
	public float LOSOffset;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C541C", Offset = "0x5C541C")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x217BB9C", Offset = "0x217BB9C", VA = "0x217BB9C", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x217BE78", Offset = "0x217BE78", VA = "0x217BE78")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000D7")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x600040E")]
	[Address(RVA = "0x217BE84", Offset = "0x217BE84", VA = "0x217BE84", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x217C084", Offset = "0x217C084", VA = "0x217C084")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000D8")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000410")]
	[Address(RVA = "0x217C088", Offset = "0x217C088", VA = "0x217C088", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x217C140", Offset = "0x217C140", VA = "0x217C140", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000412")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x217C1F8", Offset = "0x217C1F8", VA = "0x217C1F8")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000D9")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20004D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A28", Offset = "0x5C2A28")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x40026E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x40026E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <teleportTime>5__3;

		[Token(Token = "0x40026E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool <teleported>5__4;

		[Token(Token = "0x170002A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600249A")]
			[Address(RVA = "0x217C62C", Offset = "0x217C62C", VA = "0x217C62C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600249C")]
			[Address(RVA = "0x217C6BC", Offset = "0x217C6BC", VA = "0x217C6BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002497")]
		[Address(RVA = "0x217C2B0", Offset = "0x217C2B0", VA = "0x217C2B0")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002498")]
		[Address(RVA = "0x217C4CC", Offset = "0x217C4CC", VA = "0x217C4CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002499")]
		[Address(RVA = "0x217C4D0", Offset = "0x217C4D0", VA = "0x217C4D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600249B")]
		[Address(RVA = "0x217C634", Offset = "0x217C634", VA = "0x217C634", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5450", Offset = "0x5C5450")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5450", Offset = "0x5C5450")]
	public float TransitionDuration;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C54A4", Offset = "0x5C54A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C54A4", Offset = "0x5C54A4")]
	public float TeleportDelay;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C54F4", Offset = "0x5C54F4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x217C200", Offset = "0x217C200", VA = "0x217C200", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x217C224", Offset = "0x217C224", VA = "0x217C224")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC324", Offset = "0x5CC324")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x217C2D0", Offset = "0x217C2D0", VA = "0x217C2D0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000DA")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x217C6C4", Offset = "0x217C6C4", VA = "0x217C6C4", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x217C6F0", Offset = "0x217C6F0", VA = "0x217C6F0")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000DB")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20004D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A38", Offset = "0x5C2A38")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40026E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40026E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40026EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x40026EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x40026EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170002AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x217C9FC", Offset = "0x217C9FC", VA = "0x217C9FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x217CA8C", Offset = "0x217CA8C", VA = "0x217CA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600249D")]
		[Address(RVA = "0x217C7A8", Offset = "0x217C7A8", VA = "0x217C7A8")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600249E")]
		[Address(RVA = "0x217C814", Offset = "0x217C814", VA = "0x217C814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600249F")]
		[Address(RVA = "0x217C818", Offset = "0x217C818", VA = "0x217C818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A1")]
		[Address(RVA = "0x217CA04", Offset = "0x217CA04", VA = "0x217CA04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5554", Offset = "0x5C5554")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5554", Offset = "0x5C5554")]
	public float TransitionDuration;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C55D8", Offset = "0x5C55D8")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x217C6F8", Offset = "0x217C6F8", VA = "0x217C6F8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x217C71C", Offset = "0x217C71C", VA = "0x217C71C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC39C", Offset = "0x5CC39C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x217C7C8", Offset = "0x217C7C8", VA = "0x217C7C8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000DC")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20004D8")]
	public enum PlabackState
	{
		[Token(Token = "0x40026EE")]
		Idle = 1,
		[Token(Token = "0x40026EF")]
		Preparing,
		[Token(Token = "0x40026F0")]
		Buffering,
		[Token(Token = "0x40026F1")]
		Ready,
		[Token(Token = "0x40026F2")]
		Ended
	}

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000042")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x21A34D0", Offset = "0x21A34D0", VA = "0x21A34D0")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000043")]
	private static IntPtr Activity
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x21A38A4", Offset = "0x21A38A4", VA = "0x21A38A4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000044")]
	public static bool IsAvailable
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x21A3BD8", Offset = "0x21A3BD8", VA = "0x21A3BD8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000045")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x21A3C5C", Offset = "0x21A3C5C", VA = "0x21A3C5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000046")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x21A3DB8", Offset = "0x21A3DB8", VA = "0x21A3DB8")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000047")]
	public static long Duration
	{
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x21A3F14", Offset = "0x21A3F14", VA = "0x21A3F14")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000048")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x21A4070", Offset = "0x21A4070", VA = "0x21A4070")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x21A41CC", Offset = "0x21A41CC", VA = "0x21A41CC")]
		set
		{
		}
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x21A439C", Offset = "0x21A439C", VA = "0x21A439C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x21A4690", Offset = "0x21A4690", VA = "0x21A4690")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x21A47EC", Offset = "0x21A47EC", VA = "0x21A47EC")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x21A4948", Offset = "0x21A4948", VA = "0x21A4948")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x21A4AA4", Offset = "0x21A4AA4", VA = "0x21A4AA4")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x21A4C7C", Offset = "0x21A4C7C", VA = "0x21A4C7C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x21A4E48", Offset = "0x21A4E48", VA = "0x21A4E48")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000DD")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event Action onButtonDown
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x228BFC4", Offset = "0x228BFC4", VA = "0x228BFC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC414", Offset = "0x5CC414")]
		add
		{
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x228C0D0", Offset = "0x228C0D0", VA = "0x228C0D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC424", Offset = "0x5CC424")]
		remove
		{
		}
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x228C1DC", Offset = "0x228C1DC", VA = "0x228C1DC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x228C1F0", Offset = "0x228C1F0", VA = "0x228C1F0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000DE")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20004D9")]
	public enum ButtonType
	{
		[Token(Token = "0x40026F4")]
		Play,
		[Token(Token = "0x40026F5")]
		Pause,
		[Token(Token = "0x40026F6")]
		FastForward,
		[Token(Token = "0x40026F7")]
		Rewind,
		[Token(Token = "0x40026F8")]
		SkipForward,
		[Token(Token = "0x40026F9")]
		SkipBack,
		[Token(Token = "0x40026FA")]
		Stop
	}

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000049")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0x212DE50", Offset = "0x212DE50", VA = "0x212DE50")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x212DE58", Offset = "0x212DE58", VA = "0x212DE58")]
		set
		{
		}
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x212DE78", Offset = "0x212DE78", VA = "0x212DE78", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x212FCEC", Offset = "0x212FCEC", VA = "0x212FCEC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000DF")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20004DA")]
	public enum VideoShape
	{
		[Token(Token = "0x40026FC")]
		_360,
		[Token(Token = "0x40026FD")]
		_180,
		[Token(Token = "0x40026FE")]
		Quad
	}

	[Token(Token = "0x20004DB")]
	public enum VideoStereo
	{
		[Token(Token = "0x4002700")]
		Mono,
		[Token(Token = "0x4002701")]
		TopBottom,
		[Token(Token = "0x4002702")]
		LeftRight
	}

	[Token(Token = "0x20004DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A48", Offset = "0x5C2A48")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170002AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x2142CD0", Offset = "0x2142CD0", VA = "0x2142CD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x2142D60", Offset = "0x2142D60", VA = "0x2142D60", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024A3")]
		[Address(RVA = "0x21418A0", Offset = "0x21418A0", VA = "0x21418A0")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60024A4")]
		[Address(RVA = "0x2142AD4", Offset = "0x2142AD4", VA = "0x2142AD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024A5")]
		[Address(RVA = "0x2142AD8", Offset = "0x2142AD8", VA = "0x2142AD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024A7")]
		[Address(RVA = "0x2142CD8", Offset = "0x2142CD8", VA = "0x2142CD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A58", Offset = "0x5C2A58")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4002706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string moviePath;

		[Token(Token = "0x4002707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string drmLicencesUrl;

		[Token(Token = "0x4002708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x60024A9")]
		[Address(RVA = "0x2141C2C", Offset = "0x2141C2C", VA = "0x2141C2C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60024AA")]
		[Address(RVA = "0x21429B4", Offset = "0x21429B4", VA = "0x21429B4")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private OVROverlay overlay;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C5608", Offset = "0x5C5608")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C5618", Offset = "0x5C5618")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C5628", Offset = "0x5C5628")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string MovieName;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool LoopVideo;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public VideoShape Shape;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VideoStereo Stereo;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool DisplayMono;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VideoShape _LastShape;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700004A")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000434")]
		[Address(RVA = "0x2141194", Offset = "0x2141194", VA = "0x2141194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC434", Offset = "0x5CC434")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000435")]
		[Address(RVA = "0x214119C", Offset = "0x214119C", VA = "0x214119C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC444", Offset = "0x5CC444")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public long Duration
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0x21411A4", Offset = "0x21411A4", VA = "0x21411A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC454", Offset = "0x5CC454")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000437")]
		[Address(RVA = "0x21411AC", Offset = "0x21411AC", VA = "0x21411AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC464", Offset = "0x5CC464")]
		private set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000438")]
		[Address(RVA = "0x21411BC", Offset = "0x21411BC", VA = "0x21411BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC474", Offset = "0x5CC474")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000439")]
		[Address(RVA = "0x21411C4", Offset = "0x21411C4", VA = "0x21411C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC484", Offset = "0x5CC484")]
		private set
		{
		}
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x21411D4", Offset = "0x21411D4", VA = "0x21411D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x21414BC", Offset = "0x21414BC", VA = "0x21414BC")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x2141538", Offset = "0x2141538", VA = "0x2141538")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x2141814", Offset = "0x2141814", VA = "0x2141814")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC494", Offset = "0x5CC494")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x21418C0", Offset = "0x21418C0", VA = "0x21418C0")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x2141C34", Offset = "0x2141C34", VA = "0x2141C34")]
	public void Play()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x2141D00", Offset = "0x2141D00", VA = "0x2141D00")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x2141DD0", Offset = "0x2141DD0", VA = "0x2141DD0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0x2141F50", Offset = "0x2141F50", VA = "0x2141F50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0x21426C4", Offset = "0x21426C4", VA = "0x21426C4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0x21427D4", Offset = "0x21427D4", VA = "0x21427D4")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0x21428A0", Offset = "0x21428A0", VA = "0x21428A0")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0x21429A0", Offset = "0x21429A0", VA = "0x21429A0")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000E0")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20004DE")]
	private enum PlaybackState
	{
		[Token(Token = "0x400270A")]
		Playing,
		[Token(Token = "0x400270B")]
		Paused,
		[Token(Token = "0x400270C")]
		Rewinding,
		[Token(Token = "0x400270D")]
		FastForwarding
	}

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LeftHand;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject RightHand;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Canvas Canvas;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Slider ProgressBar;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float TimeoutTime;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _isVisible;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _lastButtonTime;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _didSeek;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private long _rewindStartPosition;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _rewindStartTime;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private PlaybackState _state;

	[Token(Token = "0x6000447")]
	[Address(RVA = "0x2142D68", Offset = "0x2142D68", VA = "0x2142D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0x2143164", Offset = "0x2143164", VA = "0x2143164")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0x2143408", Offset = "0x2143408", VA = "0x2143408")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x2143604", Offset = "0x2143604", VA = "0x2143604")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x2143780", Offset = "0x2143780", VA = "0x2143780")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x214358C", Offset = "0x214358C", VA = "0x214358C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x21438A0", Offset = "0x21438A0", VA = "0x21438A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x214301C", Offset = "0x214301C", VA = "0x214301C")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x2143DEC", Offset = "0x2143DEC", VA = "0x2143DEC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000E1")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C0FE4", Offset = "0x5C0FE4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C0FE4", Offset = "0x5C0FE4")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x20004DF")]
	private enum CubeFace
	{
		[Token(Token = "0x400270F")]
		Right,
		[Token(Token = "0x4002710")]
		Left,
		[Token(Token = "0x4002711")]
		Top,
		[Token(Token = "0x4002712")]
		Bottom,
		[Token(Token = "0x4002713")]
		Front,
		[Token(Token = "0x4002714")]
		Back,
		[Token(Token = "0x4002715")]
		COUNT
	}

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Mesh _Mesh;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<Vector2> _UV;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<int> _Tris;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private OVROverlay _Overlay;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _CameraRoot;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Transform _Transform;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _LastPosition;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion _LastRotation;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 _LastScale;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Rect _LastRectRight;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _Awake;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x1206128", Offset = "0x1206128", VA = "0x1206128")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1206304", Offset = "0x1206304", VA = "0x1206304")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x120652C", Offset = "0x120652C", VA = "0x120652C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1206C14", Offset = "0x1206C14", VA = "0x1206C14")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x120707C", Offset = "0x120707C", VA = "0x120707C")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x12089D8", Offset = "0x12089D8", VA = "0x12089D8")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0x1208A40", Offset = "0x1208A40", VA = "0x1208A40")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0x1207368", Offset = "0x1207368", VA = "0x1207368")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1208B44", Offset = "0x1208B44", VA = "0x1208B44")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1208DD0", Offset = "0x1208DD0", VA = "0x1208DD0")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x12079EC", Offset = "0x12079EC", VA = "0x12079EC")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1207ECC", Offset = "0x1207ECC", VA = "0x1207ECC")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1208430", Offset = "0x1208430", VA = "0x1208430")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1209008", Offset = "0x1209008", VA = "0x1209008")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000E2")]
public static class VectorUtil
{
	[Token(Token = "0x600045F")]
	[Address(RVA = "0x232CDE0", Offset = "0x232CDE0", VA = "0x232CDE0")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000E3")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool inMenu;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Text sliderText;

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xFA95E0", Offset = "0xFA95E0", VA = "0xFA95E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xFA9C68", Offset = "0xFA9C68", VA = "0xFA9C68")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xFA9D48", Offset = "0xFA9D48", VA = "0xFA9D48")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xFAA084", Offset = "0xFAA084", VA = "0xFAA084")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xFAA198", Offset = "0xFAA198", VA = "0xFAA198")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xFAA2C0", Offset = "0xFAA2C0", VA = "0xFAA2C0")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xFAA34C", Offset = "0xFAA34C", VA = "0xFAA34C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xFAA354", Offset = "0xFAA354", VA = "0xFAA354")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC51C", Offset = "0x5CC51C")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xFAA3D0", Offset = "0xFAA3D0", VA = "0xFAA3D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC52C", Offset = "0x5CC52C")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xFAA44C", Offset = "0xFAA44C", VA = "0xFAA44C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC53C", Offset = "0x5CC53C")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xFAA4C8", Offset = "0xFAA4C8", VA = "0xFAA4C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CC54C", Offset = "0x5CC54C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000E4")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20004E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A68", Offset = "0x5C2A68")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170002AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60024AE")]
			[Address(RVA = "0x22754A4", Offset = "0x22754A4", VA = "0x22754A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x2275534", Offset = "0x2275534", VA = "0x2275534", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60024AB")]
		[Address(RVA = "0x22752F8", Offset = "0x22752F8", VA = "0x22752F8")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60024AC")]
		[Address(RVA = "0x2275320", Offset = "0x2275320", VA = "0x2275320", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60024AD")]
		[Address(RVA = "0x2275324", Offset = "0x2275324", VA = "0x2275324", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60024AF")]
		[Address(RVA = "0x22754AC", Offset = "0x22754AC", VA = "0x22754AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject _notification;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform _centerEye;

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x2274F40", Offset = "0x2274F40", VA = "0x2274F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x227507C", Offset = "0x227507C", VA = "0x227507C")]
	private void Update()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x2274FF0", Offset = "0x2274FF0", VA = "0x2274FF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC55C", Offset = "0x5CC55C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x2275318", Offset = "0x2275318", VA = "0x2275318")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000E5")]
[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C107C", Offset = "0x5C107C")]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private CharacterController _character;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float _height;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _radius;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5648", Offset = "0x5C5648")]
	public int SubdivisionsU;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5664", Offset = "0x5C5664")]
	public int SubdivisionsV;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _subdivisionU;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _subdivisionV;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3[] _vertices;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int[] _triangles;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x2223EC4", Offset = "0x2223EC4", VA = "0x2223EC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x2225468", Offset = "0x2225468", VA = "0x2225468")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000E6")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private LocomotionController lc;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool inMenu;

	[Token(Token = "0x1700004D")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000471")]
		[Address(RVA = "0x245C4E8", Offset = "0x245C4E8", VA = "0x245C4E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0x245C560", Offset = "0x245C560", VA = "0x245C560")]
	public void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0x245CA40", Offset = "0x245CA40", VA = "0x245CA40")]
	public void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0x245CB68", Offset = "0x245CB68", VA = "0x245CB68")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5CC5D4", Offset = "0x5CC5D4")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000475")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000477")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000478")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000479")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x600047A")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x600047B")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x600047C")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x245CBEC", Offset = "0x245CBEC", VA = "0x245CBEC")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x245CC48", Offset = "0x245CC48", VA = "0x245CC48")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x245CD18", Offset = "0x245CD18", VA = "0x245CD18")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x245CFA8", Offset = "0x245CFA8", VA = "0x245CFA8")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x245D0BC", Offset = "0x245D0BC", VA = "0x245D0BC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x245C898", Offset = "0x245C898", VA = "0x245C898")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x245D1D8", Offset = "0x245D1D8", VA = "0x245D1D8")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x245D278", Offset = "0x245D278", VA = "0x245D278")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0x245D3F0", Offset = "0x245D3F0", VA = "0x245D3F0")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C108C", Offset = "0x5C108C")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20004E1")]
	public enum DrawMode
	{
		[Token(Token = "0x400271A")]
		Opaque,
		[Token(Token = "0x400271B")]
		OpaqueWithClip,
		[Token(Token = "0x400271C")]
		TransparentDefaultAlpha,
		[Token(Token = "0x400271D")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C5680", Offset = "0x5C5680")]
	private Shader _transparentShader;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C56B0", Offset = "0x5C56B0")]
	private Shader _opaqueShader;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas _canvas;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Camera _camera;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Mesh _quad;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material _defaultMat;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int MaxTextureSize;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int MinTextureSize;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float PixelsPerUnit;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int DrawRate;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int DrawFrameOffset;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Expensive;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int Layer;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public DrawMode Opacity;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool ScaleViewport;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700004E")]
	public bool overlayEnabled
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0x1205E94", Offset = "0x1205E94", VA = "0x1205E94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600048D")]
		[Address(RVA = "0x1205F48", Offset = "0x1205F48", VA = "0x1205F48")]
		set
		{
		}
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1203BAC", Offset = "0x1203BAC", VA = "0x1203BAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1204EB8", Offset = "0x1204EB8", VA = "0x1204EB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1204F58", Offset = "0x1204F58", VA = "0x1204F58")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1205098", Offset = "0x1205098", VA = "0x1205098")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x12051D8", Offset = "0x12051D8", VA = "0x12051D8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1205648", Offset = "0x1205648", VA = "0x1205648")]
	private void Update()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1206068", Offset = "0x1206068", VA = "0x1206068")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000E8")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20004E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2A78", Offset = "0x5C2A78")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400271E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int sceneIndex;

		[Token(Token = "0x400271F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public StartMenu <>4__this;

		[Token(Token = "0x60024B1")]
		[Address(RVA = "0x2389C8C", Offset = "0x2389C8C", VA = "0x2389C8C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60024B2")]
		[Address(RVA = "0x2389DA4", Offset = "0x2389DA4", VA = "0x2389DA4")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public OVROverlay overlay;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public OVROverlay text;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x2389A54", Offset = "0x2389A54", VA = "0x2389A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x2389C94", Offset = "0x2389C94", VA = "0x2389C94")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x2389D9C", Offset = "0x2389D9C", VA = "0x2389D9C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000E9")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1104", Offset = "0x5C1104")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20004E3")]
	public enum RotationAxes
	{
		[Token(Token = "0x4002721")]
		MouseXAndY,
		[Token(Token = "0x4002722")]
		MouseX,
		[Token(Token = "0x4002723")]
		MouseY
	}

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RotationAxes axes;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float sensitivityX;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float sensitivityY;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minimumX;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maximumX;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minimumY;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maximumY;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationY;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0x2140BB0", Offset = "0x2140BB0", VA = "0x2140BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x2140E98", Offset = "0x2140E98", VA = "0x2140E98")]
	private void Start()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x2140F80", Offset = "0x2140F80", VA = "0x2140F80")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000EA")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float fadeTime;
}
[Token(Token = "0x20000EB")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float fadeTime;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x11EFD44", Offset = "0x11EFD44", VA = "0x11EFD44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x11EFD48", Offset = "0x11EFD48", VA = "0x11EFD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x11EFD4C", Offset = "0x11EFD4C", VA = "0x11EFD4C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x11EFF14", Offset = "0x11EFF14", VA = "0x11EFF14")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0x11EFD94", Offset = "0x11EFD94", VA = "0x11EFD94")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x11EFE48", Offset = "0x11EFE48", VA = "0x11EFE48")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x11EFF5C", Offset = "0x11EFF5C", VA = "0x11EFF5C")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x11F0034", Offset = "0x11F0034", VA = "0x11F0034")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x11F0210", Offset = "0x11F0210", VA = "0x11F0210")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x11F03EC", Offset = "0x11F03EC", VA = "0x11F03EC")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000EC")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20004E4")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LayerMask layerMask;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool visualizeRoom;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int raysPerSecond;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float roomInterpSpeed;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxWallDistance;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rayCacheSize;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float particleSize;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float particleOffset;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject room;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float[] dims;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float[] coefs;

	[Token(Token = "0x4000534")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] points;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3[] normals;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem sys;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400053A")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x2363658", Offset = "0x2363658", VA = "0x2363658")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x23633CC", Offset = "0x23633CC", VA = "0x23633CC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CC618", Offset = "0x5CC618")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x2363688", Offset = "0x2363688", VA = "0x2363688")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x2363838", Offset = "0x2363838", VA = "0x2363838")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x236398C", Offset = "0x236398C", VA = "0x236398C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x2364968", Offset = "0x2364968", VA = "0x2364968")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x2363758", Offset = "0x2363758", VA = "0x2363758")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x23638B8", Offset = "0x23638B8", VA = "0x23638B8")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x23644A8", Offset = "0x23644A8", VA = "0x23644A8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x2364590", Offset = "0x2364590", VA = "0x2364590")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x2364678", Offset = "0x2364678", VA = "0x2364678")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x2364760", Offset = "0x2364760", VA = "0x2364760")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x2364850", Offset = "0x2364850", VA = "0x2364850")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x2366030", Offset = "0x2366030", VA = "0x2366030")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x2366130", Offset = "0x2366130", VA = "0x2366130")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x2366268", Offset = "0x2366268", VA = "0x2366268")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000ED")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20004E5")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4002725")]
		Uninitialized = -1,
		[Token(Token = "0x4002726")]
		NotEnabled,
		[Token(Token = "0x4002727")]
		Success,
		[Token(Token = "0x4002728")]
		StreamError,
		[Token(Token = "0x4002729")]
		ProcessError,
		[Token(Token = "0x400272A")]
		MaxStatValue
	}

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AudioSource source;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700004F")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x21BF3D0", Offset = "0x21BF3D0", VA = "0x21BF3D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x21BF3D8", Offset = "0x21BF3D8", VA = "0x21BF3D8")]
		set
		{
		}
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x21BF3E0", Offset = "0x21BF3E0", VA = "0x21BF3E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x21BF6DC", Offset = "0x21BF6DC", VA = "0x21BF6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x21BFA40", Offset = "0x21BFA40", VA = "0x21BFA40")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000EE")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20004E6")]
	private enum Parameters
	{
		[Token(Token = "0x400272C")]
		P_GAIN,
		[Token(Token = "0x400272D")]
		P_USEINVSQR,
		[Token(Token = "0x400272E")]
		P_NEAR,
		[Token(Token = "0x400272F")]
		P_FAR,
		[Token(Token = "0x4002730")]
		P_RADIUS,
		[Token(Token = "0x4002731")]
		P_DISABLE_RFL,
		[Token(Token = "0x4002732")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4002733")]
		P_AMBISTAT,
		[Token(Token = "0x4002734")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4002735")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4002736")]
		P_SENDLEVEL,
		[Token(Token = "0x4002737")]
		P_NUM
	}

	[Token(Token = "0x4000541")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000050")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60004BA")]
		[Address(RVA = "0x21BFDBC", Offset = "0x21BFDBC", VA = "0x21BFDBC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x21BFDC4", Offset = "0x21BFDC4", VA = "0x21BFDC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float Gain
	{
		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x21BFDCC", Offset = "0x21BFDCC", VA = "0x21BFDCC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x21BFDD4", Offset = "0x21BFDD4", VA = "0x21BFDD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x21BFE6C", Offset = "0x21BFE6C", VA = "0x21BFE6C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x21BFE74", Offset = "0x21BFE74", VA = "0x21BFE74")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public float Near
	{
		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x21BFE7C", Offset = "0x21BFE7C", VA = "0x21BFE7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x21BFE84", Offset = "0x21BFE84", VA = "0x21BFE84")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float Far
	{
		[Token(Token = "0x60004C2")]
		[Address(RVA = "0x21BFF1C", Offset = "0x21BFF1C", VA = "0x21BFF1C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0x21BFF24", Offset = "0x21BFF24", VA = "0x21BFF24")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0x21BFFBC", Offset = "0x21BFFBC", VA = "0x21BFFBC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x21BFFC4", Offset = "0x21BFFC4", VA = "0x21BFFC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float ReverbSend
	{
		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x21C005C", Offset = "0x21C005C", VA = "0x21C005C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x21C0064", Offset = "0x21C0064", VA = "0x21C0064")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public bool EnableRfl
	{
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x21C0100", Offset = "0x21C0100", VA = "0x21C0100")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x21C0108", Offset = "0x21C0108", VA = "0x21C0108")]
		set
		{
		}
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x21BFAD4", Offset = "0x21BFAD4", VA = "0x21BFAD4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5CC690", Offset = "0x5CC690")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x21BFC88", Offset = "0x21BFC88", VA = "0x21BFC88")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x21C0110", Offset = "0x21C0110", VA = "0x21C0110")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x21C031C", Offset = "0x21C031C", VA = "0x21C031C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x21C0320", Offset = "0x21C0320", VA = "0x21C0320")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x21C018C", Offset = "0x21C018C", VA = "0x21C018C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x21C042C", Offset = "0x21C042C", VA = "0x21C042C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x21C0A8C", Offset = "0x21C0A8C", VA = "0x21C0A8C")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x21BFB70", Offset = "0x21BFB70", VA = "0x21BFB70")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x21C0BA8", Offset = "0x21C0BA8", VA = "0x21C0BA8")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000EF")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool profilerEnabled;

	[Token(Token = "0x400054C")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int port;

	[Token(Token = "0x400054E")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x21C0BD0", Offset = "0x21C0BD0", VA = "0x21C0BD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x21C0BDC", Offset = "0x21C0BDC", VA = "0x21C0BDC")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x21C0D18", Offset = "0x21C0D18", VA = "0x21C0D18")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x21C0C08", Offset = "0x21C0C08", VA = "0x21C0C08")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x21C0E2C", Offset = "0x21C0E2C", VA = "0x21C0E2C")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000F0")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20004E7")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4002738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4002739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20004E8")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400273A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x400273B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x400273C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string filePathRelative;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool fileEnabled;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int OSPSuccess;

	[Token(Token = "0x4000555")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int terrainDecimation;

	[Token(Token = "0x17000058")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x21C47B0", Offset = "0x21C47B0", VA = "0x21C47B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000059")]
	public string filePath
	{
		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x21C4864", Offset = "0x21C4864", VA = "0x21C4864")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x21C48FC", Offset = "0x21C48FC", VA = "0x21C48FC")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x21C4ACC", Offset = "0x21C4ACC", VA = "0x21C4ACC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x21C4AD0", Offset = "0x21C4AD0", VA = "0x21C4AD0")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x21C520C", Offset = "0x21C520C", VA = "0x21C520C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x21C5750", Offset = "0x21C5750", VA = "0x21C5750")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x21C5904", Offset = "0x21C5904", VA = "0x21C5904")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x21C62FC", Offset = "0x21C62FC", VA = "0x21C62FC")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x21C639C", Offset = "0x21C639C", VA = "0x21C639C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x21C863C", Offset = "0x21C863C", VA = "0x21C863C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x21C84F8", Offset = "0x21C84F8", VA = "0x21C84F8")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x21C4F4C", Offset = "0x21C4F4C", VA = "0x21C4F4C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x21C4D10", Offset = "0x21C4D10", VA = "0x21C4D10")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x21C8DC8", Offset = "0x21C8DC8", VA = "0x21C8DC8")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x21C93F0", Offset = "0x21C93F0", VA = "0x21C93F0")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000F1")]
internal class ONSPPropagation
{
	[Token(Token = "0x20004E9")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x400273E")]
		Int8,
		[Token(Token = "0x400273F")]
		UInt8,
		[Token(Token = "0x4002740")]
		Int16,
		[Token(Token = "0x4002741")]
		UInt16,
		[Token(Token = "0x4002742")]
		Int32,
		[Token(Token = "0x4002743")]
		UInt32,
		[Token(Token = "0x4002744")]
		Int64,
		[Token(Token = "0x4002745")]
		UInt64,
		[Token(Token = "0x4002746")]
		Float16,
		[Token(Token = "0x4002747")]
		Float32,
		[Token(Token = "0x4002748")]
		Float64
	}

	[Token(Token = "0x20004EA")]
	public class ClientType
	{
		[Token(Token = "0x4002749")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x400274A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x400274B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x400274C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x400274D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x400274E")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x400274F")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4002750")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4002751")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4002752")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4002753")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4002754")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4002755")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4002756")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4002757")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x60024B7")]
		[Address(RVA = "0x21C144C", Offset = "0x21C144C", VA = "0x21C144C")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20004EB")]
	public interface PropagationInterface
	{
		[Token(Token = "0x60024B8")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x60024B9")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x60024BA")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x60024BB")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60024BC")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x60024BD")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60024BE")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60024BF")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024C0")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024C1")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60024C2")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60024C3")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x60024C4")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60024C5")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60024C6")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20004EC")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4002758")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4002759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170002B0")]
		private IntPtr context
		{
			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x21C2528", Offset = "0x21C2528", VA = "0x21C2528")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60024C8")]
		[Address(RVA = "0x21C25A0", Offset = "0x21C25A0", VA = "0x21C25A0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60024C9")]
		[Address(RVA = "0x21C2678", Offset = "0x21C2678", VA = "0x21C2678")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60024CA")]
		[Address(RVA = "0x21C274C", Offset = "0x21C274C", VA = "0x21C274C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024CB")]
		[Address(RVA = "0x21C2768", Offset = "0x21C2768", VA = "0x21C2768")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60024CC")]
		[Address(RVA = "0x21C2844", Offset = "0x21C2844", VA = "0x21C2844", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024CD")]
		[Address(RVA = "0x21C2870", Offset = "0x21C2870", VA = "0x21C2870")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60024CE")]
		[Address(RVA = "0x21C2944", Offset = "0x21C2944", VA = "0x21C2944", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024CF")]
		[Address(RVA = "0x21C2960", Offset = "0x21C2960", VA = "0x21C2960")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60024D0")]
		[Address(RVA = "0x21C2A2C", Offset = "0x21C2A2C", VA = "0x21C2A2C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024D1")]
		[Address(RVA = "0x21C2A38", Offset = "0x21C2A38", VA = "0x21C2A38")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60024D2")]
		[Address(RVA = "0x21C2B64", Offset = "0x21C2B64", VA = "0x21C2B64", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024D3")]
		[Address(RVA = "0x21C2C70", Offset = "0x21C2C70", VA = "0x21C2C70")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60024D4")]
		[Address(RVA = "0x21C2D4C", Offset = "0x21C2D4C", VA = "0x21C2D4C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024D5")]
		[Address(RVA = "0x21C2D58", Offset = "0x21C2D58", VA = "0x21C2D58")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60024D6")]
		[Address(RVA = "0x21C2EEC", Offset = "0x21C2EEC", VA = "0x21C2EEC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024D7")]
		[Address(RVA = "0x21C2EF8", Offset = "0x21C2EF8", VA = "0x21C2EF8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024D8")]
		[Address(RVA = "0x21C2FF0", Offset = "0x21C2FF0", VA = "0x21C2FF0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024D9")]
		[Address(RVA = "0x21C3000", Offset = "0x21C3000", VA = "0x21C3000")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024DA")]
		[Address(RVA = "0x21C30F8", Offset = "0x21C30F8", VA = "0x21C30F8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024DB")]
		[Address(RVA = "0x21C3108", Offset = "0x21C3108", VA = "0x21C3108")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60024DC")]
		[Address(RVA = "0x21C3200", Offset = "0x21C3200", VA = "0x21C3200", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024DD")]
		[Address(RVA = "0x21C3210", Offset = "0x21C3210", VA = "0x21C3210")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60024DE")]
		[Address(RVA = "0x21C32E4", Offset = "0x21C32E4", VA = "0x21C32E4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024DF")]
		[Address(RVA = "0x21C3300", Offset = "0x21C3300", VA = "0x21C3300")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60024E0")]
		[Address(RVA = "0x21C33CC", Offset = "0x21C33CC", VA = "0x21C33CC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024E1")]
		[Address(RVA = "0x21C33D8", Offset = "0x21C33D8", VA = "0x21C33D8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60024E2")]
		[Address(RVA = "0x21C34BC", Offset = "0x21C34BC", VA = "0x21C34BC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024E3")]
		[Address(RVA = "0x21C34E8", Offset = "0x21C34E8", VA = "0x21C34E8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60024E4")]
		[Address(RVA = "0x21C35CC", Offset = "0x21C35CC", VA = "0x21C35CC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024E5")]
		[Address(RVA = "0x21C35F8", Offset = "0x21C35F8", VA = "0x21C35F8")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60024E6")]
		[Address(RVA = "0x21C36CC", Offset = "0x21C36CC", VA = "0x21C36CC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60024E7")]
		[Address(RVA = "0x21C13E4", Offset = "0x21C13E4", VA = "0x21C13E4")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20004ED")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x400275A")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x400275B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170002B1")]
		private IntPtr context
		{
			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x21C36D8", Offset = "0x21C36D8", VA = "0x21C36D8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60024E9")]
		[Address(RVA = "0x21C1178", Offset = "0x21C1178", VA = "0x21C1178")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60024EA")]
		[Address(RVA = "0x21C3750", Offset = "0x21C3750", VA = "0x21C3750")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60024EB")]
		[Address(RVA = "0x21C3824", Offset = "0x21C3824", VA = "0x21C3824", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024EC")]
		[Address(RVA = "0x21C3840", Offset = "0x21C3840", VA = "0x21C3840")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60024ED")]
		[Address(RVA = "0x21C391C", Offset = "0x21C391C", VA = "0x21C391C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024EE")]
		[Address(RVA = "0x21C3948", Offset = "0x21C3948", VA = "0x21C3948")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60024EF")]
		[Address(RVA = "0x21C3A1C", Offset = "0x21C3A1C", VA = "0x21C3A1C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024F0")]
		[Address(RVA = "0x21C3A38", Offset = "0x21C3A38", VA = "0x21C3A38")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60024F1")]
		[Address(RVA = "0x21C3B04", Offset = "0x21C3B04", VA = "0x21C3B04", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024F2")]
		[Address(RVA = "0x21C3B10", Offset = "0x21C3B10", VA = "0x21C3B10")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60024F3")]
		[Address(RVA = "0x21C3C3C", Offset = "0x21C3C3C", VA = "0x21C3C3C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024F4")]
		[Address(RVA = "0x21C3D48", Offset = "0x21C3D48", VA = "0x21C3D48")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60024F5")]
		[Address(RVA = "0x21C3E24", Offset = "0x21C3E24", VA = "0x21C3E24", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024F6")]
		[Address(RVA = "0x21C3E30", Offset = "0x21C3E30", VA = "0x21C3E30")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60024F7")]
		[Address(RVA = "0x21C3FC4", Offset = "0x21C3FC4", VA = "0x21C3FC4", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024F8")]
		[Address(RVA = "0x21C3FD0", Offset = "0x21C3FD0", VA = "0x21C3FD0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024F9")]
		[Address(RVA = "0x21C40C8", Offset = "0x21C40C8", VA = "0x21C40C8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024FA")]
		[Address(RVA = "0x21C40D8", Offset = "0x21C40D8", VA = "0x21C40D8")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60024FB")]
		[Address(RVA = "0x21C41D0", Offset = "0x21C41D0", VA = "0x21C41D0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024FC")]
		[Address(RVA = "0x21C41E0", Offset = "0x21C41E0", VA = "0x21C41E0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60024FD")]
		[Address(RVA = "0x21C42D8", Offset = "0x21C42D8", VA = "0x21C42D8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60024FE")]
		[Address(RVA = "0x21C42E8", Offset = "0x21C42E8", VA = "0x21C42E8")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60024FF")]
		[Address(RVA = "0x21C43BC", Offset = "0x21C43BC", VA = "0x21C43BC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002500")]
		[Address(RVA = "0x21C43D8", Offset = "0x21C43D8", VA = "0x21C43D8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002501")]
		[Address(RVA = "0x21C44A4", Offset = "0x21C44A4", VA = "0x21C44A4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002502")]
		[Address(RVA = "0x21C44B0", Offset = "0x21C44B0", VA = "0x21C44B0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002503")]
		[Address(RVA = "0x21C4594", Offset = "0x21C4594", VA = "0x21C4594", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002504")]
		[Address(RVA = "0x21C45C0", Offset = "0x21C45C0", VA = "0x21C45C0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002505")]
		[Address(RVA = "0x21C46A4", Offset = "0x21C46A4", VA = "0x21C46A4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002506")]
		[Address(RVA = "0x21C46D0", Offset = "0x21C46D0", VA = "0x21C46D0")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002507")]
		[Address(RVA = "0x21C47A4", Offset = "0x21C47A4", VA = "0x21C47A4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002508")]
		[Address(RVA = "0x21C124C", Offset = "0x21C124C", VA = "0x21C124C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20004EE")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x400275C")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x400275D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IntPtr context_;

		[Token(Token = "0x170002B2")]
		private IntPtr context
		{
			[Token(Token = "0x6002509")]
			[Address(RVA = "0x21C1454", Offset = "0x21C1454", VA = "0x21C1454")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x600250A")]
		[Address(RVA = "0x21C12B0", Offset = "0x21C12B0", VA = "0x21C12B0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x600250B")]
		[Address(RVA = "0x21C14C8", Offset = "0x21C14C8", VA = "0x21C14C8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600250C")]
		[Address(RVA = "0x21C159C", Offset = "0x21C159C", VA = "0x21C159C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600250D")]
		[Address(RVA = "0x21C15B8", Offset = "0x21C15B8", VA = "0x21C15B8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600250E")]
		[Address(RVA = "0x21C1694", Offset = "0x21C1694", VA = "0x21C1694", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600250F")]
		[Address(RVA = "0x21C16C0", Offset = "0x21C16C0", VA = "0x21C16C0")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002510")]
		[Address(RVA = "0x21C1794", Offset = "0x21C1794", VA = "0x21C1794", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002511")]
		[Address(RVA = "0x21C17B0", Offset = "0x21C17B0", VA = "0x21C17B0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002512")]
		[Address(RVA = "0x21C187C", Offset = "0x21C187C", VA = "0x21C187C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002513")]
		[Address(RVA = "0x21C1888", Offset = "0x21C1888", VA = "0x21C1888")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002514")]
		[Address(RVA = "0x21C19B4", Offset = "0x21C19B4", VA = "0x21C19B4", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002515")]
		[Address(RVA = "0x21C1AC0", Offset = "0x21C1AC0", VA = "0x21C1AC0")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002516")]
		[Address(RVA = "0x21C1B9C", Offset = "0x21C1B9C", VA = "0x21C1B9C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002517")]
		[Address(RVA = "0x21C1BA8", Offset = "0x21C1BA8", VA = "0x21C1BA8")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002518")]
		[Address(RVA = "0x21C1D3C", Offset = "0x21C1D3C", VA = "0x21C1D3C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002519")]
		[Address(RVA = "0x21C1D48", Offset = "0x21C1D48", VA = "0x21C1D48")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600251A")]
		[Address(RVA = "0x21C1E40", Offset = "0x21C1E40", VA = "0x21C1E40", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600251B")]
		[Address(RVA = "0x21C1E50", Offset = "0x21C1E50", VA = "0x21C1E50")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600251C")]
		[Address(RVA = "0x21C1F48", Offset = "0x21C1F48", VA = "0x21C1F48", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600251D")]
		[Address(RVA = "0x21C1F58", Offset = "0x21C1F58", VA = "0x21C1F58")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600251E")]
		[Address(RVA = "0x21C2050", Offset = "0x21C2050", VA = "0x21C2050", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600251F")]
		[Address(RVA = "0x21C2060", Offset = "0x21C2060", VA = "0x21C2060")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002520")]
		[Address(RVA = "0x21C2134", Offset = "0x21C2134", VA = "0x21C2134", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002521")]
		[Address(RVA = "0x21C2150", Offset = "0x21C2150", VA = "0x21C2150")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002522")]
		[Address(RVA = "0x21C221C", Offset = "0x21C221C", VA = "0x21C221C", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002523")]
		[Address(RVA = "0x21C2228", Offset = "0x21C2228", VA = "0x21C2228")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002524")]
		[Address(RVA = "0x21C230C", Offset = "0x21C230C", VA = "0x21C230C", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002525")]
		[Address(RVA = "0x21C2338", Offset = "0x21C2338", VA = "0x21C2338")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002526")]
		[Address(RVA = "0x21C241C", Offset = "0x21C241C", VA = "0x21C241C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002527")]
		[Address(RVA = "0x21C2448", Offset = "0x21C2448", VA = "0x21C2448")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002528")]
		[Address(RVA = "0x21C251C", Offset = "0x21C251C", VA = "0x21C251C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002529")]
		[Address(RVA = "0x21C1384", Offset = "0x21C1384", VA = "0x21C1384")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x1700005A")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x21C0E3C", Offset = "0x21C0E3C", VA = "0x21C0E3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x21C0ECC", Offset = "0x21C0ECC", VA = "0x21C0ECC")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x21C1444", Offset = "0x21C1444", VA = "0x21C1444")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000F2")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20004EF")]
	public enum Preset
	{
		[Token(Token = "0x400275F")]
		Custom,
		[Token(Token = "0x4002760")]
		AcousticTile,
		[Token(Token = "0x4002761")]
		Brick,
		[Token(Token = "0x4002762")]
		BrickPainted,
		[Token(Token = "0x4002763")]
		Carpet,
		[Token(Token = "0x4002764")]
		CarpetHeavy,
		[Token(Token = "0x4002765")]
		CarpetHeavyPadded,
		[Token(Token = "0x4002766")]
		CeramicTile,
		[Token(Token = "0x4002767")]
		Concrete,
		[Token(Token = "0x4002768")]
		ConcreteRough,
		[Token(Token = "0x4002769")]
		ConcreteBlock,
		[Token(Token = "0x400276A")]
		ConcreteBlockPainted,
		[Token(Token = "0x400276B")]
		Curtain,
		[Token(Token = "0x400276C")]
		Foliage,
		[Token(Token = "0x400276D")]
		Glass,
		[Token(Token = "0x400276E")]
		GlassHeavy,
		[Token(Token = "0x400276F")]
		Grass,
		[Token(Token = "0x4002770")]
		Gravel,
		[Token(Token = "0x4002771")]
		GypsumBoard,
		[Token(Token = "0x4002772")]
		PlasterOnBrick,
		[Token(Token = "0x4002773")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4002774")]
		Soil,
		[Token(Token = "0x4002775")]
		SoundProof,
		[Token(Token = "0x4002776")]
		Snow,
		[Token(Token = "0x4002777")]
		Steel,
		[Token(Token = "0x4002778")]
		Water,
		[Token(Token = "0x4002779")]
		WoodThin,
		[Token(Token = "0x400277A")]
		WoodThick,
		[Token(Token = "0x400277B")]
		WoodFloor,
		[Token(Token = "0x400277C")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20004F0")]
	public sealed class Point
	{
		[Token(Token = "0x400277D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float frequency;

		[Token(Token = "0x400277E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float data;

		[Token(Token = "0x600252A")]
		[Address(RVA = "0x11EF3DC", Offset = "0x11EF3DC", VA = "0x11EF3DC")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x600252B")]
		[Address(RVA = "0x11EF540", Offset = "0x11EF540", VA = "0x11EF540")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600252C")]
		[Address(RVA = "0x11EF5BC", Offset = "0x11EF5BC", VA = "0x11EF5BC")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20004F1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C2A88", Offset = "0x5C2A88")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20006E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35AC", Offset = "0x5C35AC")]
		private sealed class <>c
		{
			[Token(Token = "0x400327E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400327F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4003280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002C27")]
			[Address(RVA = "0x11EFBE4", Offset = "0x11EFBE4", VA = "0x11EFBE4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C28")]
			[Address(RVA = "0x11EFBEC", Offset = "0x11EFBEC", VA = "0x11EFBEC")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002C29")]
			[Address(RVA = "0x11EFC10", Offset = "0x11EFC10", VA = "0x11EFC10")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x400277F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int selection;

		[Token(Token = "0x4002780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<Point> points;

		[Token(Token = "0x170002B3")]
		public float Item
		{
			[Token(Token = "0x600252D")]
			[Address(RVA = "0x11EF620", Offset = "0x11EF620", VA = "0x11EF620")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600252E")]
		[Address(RVA = "0x11EF4AC", Offset = "0x11EF4AC", VA = "0x11EF4AC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C5770", Offset = "0x5C5770")]
	public Spectrum absorption;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C57A8", Offset = "0x5C57A8")]
	public Spectrum transmission;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C57E4", Offset = "0x5C57E4")]
	public Spectrum scattering;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x1700005B")]
	public Preset preset
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0x11E07B8", Offset = "0x11E07B8", VA = "0x11E07B8")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60004ED")]
		[Address(RVA = "0x11E07C0", Offset = "0x11E07C0", VA = "0x11E07C0")]
		set
		{
		}
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x11E09DC", Offset = "0x11E09DC", VA = "0x11E09DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x11E09E0", Offset = "0x11E09E0", VA = "0x11E09E0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x11E1448", Offset = "0x11E1448", VA = "0x11E1448")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x11E144C", Offset = "0x11E144C", VA = "0x11E144C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x11E0B90", Offset = "0x11E0B90", VA = "0x11E0B90")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x11E07DC", Offset = "0x11E07DC", VA = "0x11E07DC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x11E1554", Offset = "0x11E1554", VA = "0x11E1554")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x11E1D80", Offset = "0x11E1D80", VA = "0x11E1D80")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x11E25BC", Offset = "0x11E25BC", VA = "0x11E25BC")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x11E2DD8", Offset = "0x11E2DD8", VA = "0x11E2DD8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x11E3618", Offset = "0x11E3618", VA = "0x11E3618")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x11E3E58", Offset = "0x11E3E58", VA = "0x11E3E58")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x11E4698", Offset = "0x11E4698", VA = "0x11E4698")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x11E4EC0", Offset = "0x11E4EC0", VA = "0x11E4EC0")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x11E56FC", Offset = "0x11E56FC", VA = "0x11E56FC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x11E5F44", Offset = "0x11E5F44", VA = "0x11E5F44")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x11E678C", Offset = "0x11E678C", VA = "0x11E678C")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x11E6FCC", Offset = "0x11E6FCC", VA = "0x11E6FCC")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x11E780C", Offset = "0x11E780C", VA = "0x11E780C")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x11E803C", Offset = "0x11E803C", VA = "0x11E803C")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x11E884C", Offset = "0x11E884C", VA = "0x11E884C")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x11E9074", Offset = "0x11E9074", VA = "0x11E9074")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x11E9670", Offset = "0x11E9670", VA = "0x11E9670")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x11E9C6C", Offset = "0x11E9C6C", VA = "0x11E9C6C")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x11EA4B4", Offset = "0x11EA4B4", VA = "0x11EA4B4")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x11EACF8", Offset = "0x11EACF8", VA = "0x11EACF8")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x11EB534", Offset = "0x11EB534", VA = "0x11EB534")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x11EBB2C", Offset = "0x11EBB2C", VA = "0x11EBB2C")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x11EBD44", Offset = "0x11EBD44", VA = "0x11EBD44")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x11EC330", Offset = "0x11EC330", VA = "0x11EC330")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x11ECB3C", Offset = "0x11ECB3C", VA = "0x11ECB3C")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0x11ED35C", Offset = "0x11ED35C", VA = "0x11ED35C")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x11EDB78", Offset = "0x11EDB78", VA = "0x11EDB78")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x11EE398", Offset = "0x11EE398", VA = "0x11EE398")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0x11EEBBC", Offset = "0x11EEBBC", VA = "0x11EEBBC")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x11EF404", Offset = "0x11EF404", VA = "0x11EF404")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000F3")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float quality;

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x11EFC34", Offset = "0x11EFC34", VA = "0x11EFC34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x11EFD30", Offset = "0x11EFD30", VA = "0x11EFD30")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000F4")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x1700005C")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000514")]
		[Address(RVA = "0x11F0498", Offset = "0x11F0498", VA = "0x11F0498")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x11F060C", Offset = "0x11F060C", VA = "0x11F060C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000F5")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000560")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000516")]
	[Address(RVA = "0x11F0620", Offset = "0x11F0620", VA = "0x11F0620")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x11F0748", Offset = "0x11F0748", VA = "0x11F0748")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x11F0868", Offset = "0x11F0868", VA = "0x11F0868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x11F086C", Offset = "0x11F086C", VA = "0x11F086C")]
	private void Update()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x11F0870", Offset = "0x11F0870", VA = "0x11F0870")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000F6")]
public class AI : MonoBehaviour
{
	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter fighter;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fighter opponent;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Weapon mainWeapon;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Weapon offWeapon;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C583C", Offset = "0x5C583C")]
	public AIPersonality personality;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProceduralBehavior procBehavior;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5854", Offset = "0x5C5854")]
	public AnimationDriver currentAnimation;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationDriver fadingOutAnimation;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MoveType currentMove;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MoveType queuedMove;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MoveType immediateNextMove;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float transitionTime;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float currentAnimWeight;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float proceduralWeight;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C586C", Offset = "0x5C586C")]
	public Transform HeadHandle;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform RightHandHandle;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Transform LeftHandHandle;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5884", Offset = "0x5C5884")]
	public Transform ProceduralHeadHandle;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Transform ProceduralRightHandHandle;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ProceduralLeftHandHandle;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C589C", Offset = "0x5C589C")]
	public Transform MeleeDefenseCenterPoint;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SphereCollider RangedDefenseBubble;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Transform DefenseHome;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform OffDefenseHome;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Transform DefenseGuard;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform OffDefenseGuard;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform DefenseBlockSpot;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform OffDefenseBlockSpot;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform RightShoulderHome;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform LeftShoulderHome;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject ResummonTarget;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Projectile mainIncomingProjectile;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Projectile offIncomingProjectile;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 mainInterceptPoint;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 offInterceptPoint;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject ProjectionTest;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject ProjectionTestPoint;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Vector3 lastFlailPos;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Vector3 lastFlailFwd;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Vector3 lastAttackPos;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Transform Target;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform TargetPointer;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Transform InterceptHelper;

	[NonSerialized]
	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float meleeAttackMinPower;

	[NonSerialized]
	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float rangeAttackMinPower;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool defendingLeft;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool defendingFlipped;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEA")]
	private bool offDefendingLeft;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEB")]
	private bool offDefendingFlipped;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool staffDefendingOpposite;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float maxHandMoveSpeed;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float maxHandRotSpeed;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float handLerpAmt;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public bool disabledBlocking;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
	public bool forceIdle;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float mainReactionTimer;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float offReactionTimer;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool tryingToResummonMain;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool tryingToResummonOff;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float minMeleeDefenseDist;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float maxMeleeDefenseDist;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float displayLerpToIntercept;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float interceptLerpExponent;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float proactiveBlockRange;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float switchSidesMinDist;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float gravityMinDist;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float gravityPow;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float targetLerpAmt;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float targetingAdjustmentFactor;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float targetPosLerpAmt;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 targetPosDiff;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private Vector3 currentTargetPosAdjustment;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float minimumReactionTime;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float maximumReactionTime;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C58B4", Offset = "0x5C58B4")]
	public float minimumHandSpeed;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float maximumHandSpeed;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private int Intros_index;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int Idles_index;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private int MeleeAttacks_index;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int RangedAttacks_index;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int Taunts_index;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private int Chargeups_index;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private int NoWeaponIdles_index;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private int Specials1_index;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float impatienceTimer;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public float testAngle;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private float rangeReactionTimer;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private float lastEnergy;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private float resummonTimer;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private float scytheBlockOffset;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private float scytheOffsetChangeTimer;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float animSpeed;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Quaternion currentHitReact;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Quaternion hitReactRot;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public AnimationCurve hitReactCurve;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float hitReactTime;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float hitReactScale;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public bool altMeleeDefense;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
	public bool altMeleeDefense2;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CE")]
	public bool altMeleeDefense3;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CF")]
	public bool altIntermediateDef;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool altIntermediateDef2;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	public bool altIntermediateDef3;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool altGravity;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D3")]
	public bool altProjection;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public bool altProjection2;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D5")]
	public bool altConfidence;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D6")]
	public bool altShields;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D7")]
	public bool altResummon;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public bool altRandomization;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
	public bool altAttackSmoothing;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DA")]
	public bool altAttackSmoothing2;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DB")]
	public bool altTargetingFix;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Vector3 posRandomization;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Quaternion rotRandomization;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector3 posRandomizationLeft;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public Quaternion rotRandomizationLeft;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public float randomizationTimer;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public float randomizationLerp;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public float posRandScale;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public float rotRandScale;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public Vector3 testBackupVector;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float projectionStrength;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float angleConfidence;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public float attackingConfidence;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public float timeSinceLastHit;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float guardLerpOnHit;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float guardResetDelay;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public float guardResetLerp;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public float accumulatedHit;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float accumulatedHitDecay;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float gravityRelaxation;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public float gravityDotFadeScalar;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public float gravityDotFadeThreshold;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public float katanaAdjustment;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public float katanaHeightAdjust;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public float warhammerHeightAdjustment;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public float resPushDist;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private Quaternion previousMidpoint;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private Quaternion previousMidpointOff;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float angleOff;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public float angleOff2;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private bool wasDefendingSwitched;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public float qstaffTestAngle;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public List<Vector3> PreviousProjectionPoints;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public List<Quaternion> PreviousProjectionRots;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public int numFramesDelay;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public int numFramesAverage;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public float projectionSmoothLerp;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public Vector3 projectionSmoothed;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public Quaternion projectionSmoothedRot;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	private bool eweaponWasSummoned;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	private float scytheAdjustment;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float leftHandDefaultYAdjust;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	private float mainReloadLastResortTimer;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	private float offReloadLastResortTimer;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public bool leftDefenseTest;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E5")]
	public bool leftDefenseTest2;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E6")]
	public bool leftDefenseTest3;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E7")]
	public bool leftDefenseTest4;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x24120E4", Offset = "0x24120E4", VA = "0x24120E4")]
	public void AdaptToHit()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x24126F4", Offset = "0x24126F4", VA = "0x24126F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x24126F8", Offset = "0x24126F8", VA = "0x24126F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x2412734", Offset = "0x2412734", VA = "0x2412734")]
	public void ApplyPersonality(AIPersonality p)
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x2412A54", Offset = "0x2412A54", VA = "0x2412A54")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x2423444", Offset = "0x2423444", VA = "0x2423444")]
	public MoveType PickNewMove()
	{
		return default(MoveType);
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x2422738", Offset = "0x2422738", VA = "0x2422738")]
	public void SetProceduralBehavior(ProceduralBehavior b)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x2424C1C", Offset = "0x2424C1C", VA = "0x2424C1C")]
	public void CrossfadeToMove(MoveType move)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x24266FC", Offset = "0x24266FC", VA = "0x24266FC")]
	private void BlendAnimations(float current, float procedural)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x2428084", Offset = "0x2428084", VA = "0x2428084")]
	public void ResetInput()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x242AC24", Offset = "0x242AC24", VA = "0x242AC24")]
	public void RanOutOfEnergy()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x242286C", Offset = "0x242286C", VA = "0x242286C")]
	private void PickInterceptCharge()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x242ACCC", Offset = "0x242ACCC", VA = "0x242ACCC")]
	private void RefreshInterceptProjectiles()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x242ACD0", Offset = "0x242ACD0", VA = "0x242ACD0")]
	public List<TextAsset> GetAnimsForBehavior(MoveType a)
	{
		return null;
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x242A0A0", Offset = "0x242A0A0", VA = "0x242A0A0")]
	public TextAsset GetNextMove(MoveType b)
	{
		return null;
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x242AE04", Offset = "0x242AE04", VA = "0x242AE04")]
	public void Reset()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x242483C", Offset = "0x242483C", VA = "0x242483C")]
	public void SetHandSpeedVars()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x242AE08", Offset = "0x242AE08", VA = "0x242AE08")]
	private Quaternion FakeLerp(Quaternion a, Quaternion b, float t)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x24246CC", Offset = "0x24246CC", VA = "0x24246CC")]
	private Quaternion MirrorOrientationX(Quaternion rot)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x2424828", Offset = "0x2424828", VA = "0x2424828")]
	private Vector3 MirrorPositionX(Vector3 pos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x242B060", Offset = "0x242B060", VA = "0x242B060")]
	public AI()
	{
	}
}
[Token(Token = "0x20000F7")]
public enum ProceduralBehavior
{
	[Token(Token = "0x4000602")]
	RangeDefense,
	[Token(Token = "0x4000603")]
	MeleeDefense,
	[Token(Token = "0x4000604")]
	Resummon,
	[Token(Token = "0x4000605")]
	None
}
[Token(Token = "0x20000F8")]
public enum MoveType
{
	[Token(Token = "0x4000607")]
	Intro,
	[Token(Token = "0x4000608")]
	Taunt,
	[Token(Token = "0x4000609")]
	MeleeAttack,
	[Token(Token = "0x400060A")]
	RangedAttack,
	[Token(Token = "0x400060B")]
	Idle,
	[Token(Token = "0x400060C")]
	Chargeup,
	[Token(Token = "0x400060D")]
	None,
	[Token(Token = "0x400060E")]
	NoWeaponIdle,
	[Token(Token = "0x400060F")]
	Flourish,
	[Token(Token = "0x4000610")]
	FreshAnimFile
}
[Token(Token = "0x20000F9")]
public enum InputSignals
{
	[Token(Token = "0x4000612")]
	RightGripUp,
	[Token(Token = "0x4000613")]
	RightGripDown,
	[Token(Token = "0x4000614")]
	RightTriggerUp,
	[Token(Token = "0x4000615")]
	RightTriggerDown,
	[Token(Token = "0x4000616")]
	LeftGripUp,
	[Token(Token = "0x4000617")]
	LeftGripDown,
	[Token(Token = "0x4000618")]
	LeftTriggerUp,
	[Token(Token = "0x4000619")]
	LeftTriggerDown,
	[Token(Token = "0x400061A")]
	LeftADown,
	[Token(Token = "0x400061B")]
	LeftAUp,
	[Token(Token = "0x400061C")]
	RightADown,
	[Token(Token = "0x400061D")]
	RightAUp,
	[Token(Token = "0x400061E")]
	LeftBDown,
	[Token(Token = "0x400061F")]
	LeftBUp,
	[Token(Token = "0x4000620")]
	RightBDown,
	[Token(Token = "0x4000621")]
	RightBUp,
	[Token(Token = "0x4000622")]
	ForceBlitz,
	[Token(Token = "0x4000623")]
	ForceRetreat
}
[Token(Token = "0x20000FA")]
public class AIPersonality : MonoBehaviour
{
	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<TextAsset> Intros;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<TextAsset> Idles;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<TextAsset> MeleeAttacks;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<TextAsset> RangedAttacks;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<TextAsset> Taunts;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<TextAsset> Chargeups;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<TextAsset> NoWeaponIdles;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TextAsset> Specials1;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C58CC", Offset = "0x5C58CC")]
	public float portionMeleeAttacks;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C58E4", Offset = "0x5C58E4")]
	public float tauntPreference;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C58FC", Offset = "0x5C58FC")]
	public float idlePreference;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isIdler;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool disableBlocking;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float minimumReactionTime;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maximumReactionTime;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5914", Offset = "0x5C5914")]
	public float handSpeed;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WeaponType weaponType;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public string animationTag;

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x242B474", Offset = "0x242B474", VA = "0x242B474")]
	public void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x242AD00", Offset = "0x242AD00", VA = "0x242AD00")]
	public List<TextAsset> GetAnimsForType(MoveType b)
	{
		return null;
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x242B478", Offset = "0x242B478", VA = "0x242B478")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC6A4", Offset = "0x5CC6A4")]
	public void LoadFromDirectories()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x242B51C", Offset = "0x242B51C", VA = "0x242B51C")]
	public List<TextAsset> LoadMoveFromDirectory(MoveType move)
	{
		return null;
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x242BA28", Offset = "0x242BA28", VA = "0x242BA28")]
	public AIPersonality()
	{
	}
}
[Token(Token = "0x20000FB")]
public class AnimationDriver : MonoBehaviour
{
	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AI ai;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform AnimHeadHandle;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform AnimRightHandHandle;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform AnimLeftHandHandle;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C592C", Offset = "0x5C592C")]
	public bool playing;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool controllingInput;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float playbackTime;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float length;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timer;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentFrame;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentInput;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fps;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Vector3> headPos;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<Vector3> headRot;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> rightHandPos;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private List<Vector3> rightHandRot;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> leftHandPos;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<Vector3> leftHandRot;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> timestamps;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<float> inputTimestamps;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> inputTypes;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 normalizer;

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x242C398", Offset = "0x242C398", VA = "0x242C398")]
	private void Start()
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x2425780", Offset = "0x2425780", VA = "0x2425780")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x2428610", Offset = "0x2428610", VA = "0x2428610")]
	public void LoadAnimation(TextAsset animData, bool insteadLoadFromFile = false)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x242C39C", Offset = "0x242C39C", VA = "0x242C39C")]
	public AnimationDriver()
	{
	}
}
[Token(Token = "0x20000FC")]
public class AnimationRecorder : MonoBehaviour
{
	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int version;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject PlaybackFighterPrefab;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BasicButton AcceptButton;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BasicButton RejectButton;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public BasicButton ChangeMoveButton;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BasicButton ChangeTagButton;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BasicButton PlaybackButton;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BasicButton PreviousFileButton;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private GameObject head;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rightHand;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject leftHand;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dummyHead;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject dummyRightHand;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dummyLeftHand;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject dummyTargetPointer;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Fighter dummyFighter;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool recording;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool playingBack;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool sawMovePlayed;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool acceptOrRejectMode;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool looping;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool idling;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<Vector3> headPos;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> headRot;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<Vector3> rightHandPos;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> rightHandRot;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<Vector3> leftHandPos;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> leftHandRot;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<float> timestamps;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<float> inputTimestamps;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private List<int> inputTypes;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float startingTime;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float nextFrameTime;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentFrame;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int currentInput;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float fps;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private string myfilename;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string filename;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string reviewFilename;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int filenum;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro text;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public TextMeshPro reportHeader;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro reportMelee;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public TextMeshPro reportRanged;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro reportIntro;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public TextMeshPro reportIdle;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro reportChargeup;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public TextMeshPro reportTaunt;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro reportNoWeaponIdle;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public TextMeshPro reportSpecial;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject tipsMelee;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public GameObject tipsRanged;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject tipsIntro;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public GameObject tipsIdle;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject tipsChargeup;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject tipsTaunt;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject tipsNoWeaponIdle;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject tipsSpecial;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshProUGUI tipsHeader;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static string tempFilename;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int behaviorNum;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int tagNum;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private string[] tags;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool wasBlitzing;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int numBlitzFrames;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private string[] meleeFiles;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private string[] rangedFiles;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string[] introFiles;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private string[] idleFiles;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private string[] tauntFiles;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private string[] chargeupFiles;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string[] noWeaponIdleFiles;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private string[] specialFiles;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int currentFileNum;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject newTagMenu;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x242C584", Offset = "0x242C584", VA = "0x242C584")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x242C79C", Offset = "0x242C79C", VA = "0x242C79C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x24323C8", Offset = "0x24323C8", VA = "0x24323C8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x24324D8", Offset = "0x24324D8", VA = "0x24324D8")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x2432EB8", Offset = "0x2432EB8", VA = "0x2432EB8")]
	public void StartRecording()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x2433B98", Offset = "0x2433B98", VA = "0x2433B98")]
	private void FinishFlyin()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x24340E4", Offset = "0x24340E4", VA = "0x24340E4")]
	public void FinishRecording()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x24355BC", Offset = "0x24355BC", VA = "0x24355BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x2437550", Offset = "0x2437550", VA = "0x2437550")]
	public void ChangeMove()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x2438AFC", Offset = "0x2438AFC", VA = "0x2438AFC")]
	public void ChangeTag()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x242BEBC", Offset = "0x242BEBC", VA = "0x242BEBC")]
	public void AddNewTag(string newtag)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0x2438E34", Offset = "0x2438E34", VA = "0x2438E34")]
	public void OpenNewTagMenu()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x24322D0", Offset = "0x24322D0", VA = "0x24322D0")]
	private void JumpToNewFile()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x243103C", Offset = "0x243103C", VA = "0x243103C")]
	public void RefreshDirectoryInfo()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0x2438F18", Offset = "0x2438F18", VA = "0x2438F18")]
	private string[] GetFileList(MoveType type)
	{
		return null;
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x24378EC", Offset = "0x24378EC", VA = "0x24378EC")]
	public void RefreshReport()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x2438F98", Offset = "0x2438F98", VA = "0x2438F98")]
	public void AcceptRecording()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x2439688", Offset = "0x2439688", VA = "0x2439688")]
	public void RejectRecording()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x2434418", Offset = "0x2434418", VA = "0x2434418")]
	private void SaveFile(bool temp = false)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x242D934", Offset = "0x242D934", VA = "0x242D934")]
	public string GenerateFilename()
	{
		return null;
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x24397A8", Offset = "0x24397A8", VA = "0x24397A8")]
	public void Back()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x2439940", Offset = "0x2439940", VA = "0x2439940")]
	public void ReviewPreviousFile()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x2438FB4", Offset = "0x2438FB4", VA = "0x2438FB4")]
	private void ReviewNextFile()
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x243A208", Offset = "0x243A208", VA = "0x243A208")]
	public AnimationRecorder()
	{
	}
}
[Token(Token = "0x20000FD")]
public class AnimTagMenu : MonoBehaviour
{
	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshPro keyboardInput;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject RecordingMenu;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x242BAB8", Offset = "0x242BAB8", VA = "0x242BAB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x242BB3C", Offset = "0x242BB3C", VA = "0x242BB3C")]
	public void Back()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x242BC9C", Offset = "0x242BC9C", VA = "0x242BC9C")]
	public void Done()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0x242C390", Offset = "0x242C390", VA = "0x242C390")]
	public AnimTagMenu()
	{
	}
}
[Token(Token = "0x20000FE")]
public class ArcRanged : RangedAttack
{
	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrailRenderer outerTrail;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TrailRenderer innerTrail;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool drawing;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool fireTriggered;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lastTipPos;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastTipDir;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float drawLength;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float fireDistInterval;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int fireDelayFrames;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float distTilNextFire;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private List<Vector3> firePoints;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Quaternion> fireDirections;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<int> fireFrames;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool triggerWasHeld;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float drawTime;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float tipSpeed;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float tipTriggerSpeed;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float triggerTime;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float slowTipTriggerSpeed;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float lastDot;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float dotThreshold;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int minShotsFired;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool speedTrigger;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float clearShotsBelowThisSpeed;

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x227A5B4", Offset = "0x227A5B4", VA = "0x227A5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x227A76C", Offset = "0x227A76C", VA = "0x227A76C", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x227A770", Offset = "0x227A770", VA = "0x227A770", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x227CD40", Offset = "0x227CD40", VA = "0x227CD40", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x227B980", Offset = "0x227B980", VA = "0x227B980")]
	private void ScheduleMultiShots(int first, int last)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x227D6FC", Offset = "0x227D6FC", VA = "0x227D6FC")]
	public void RegisterScheduledShots(ArcBulletsEvent b)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x227E508", Offset = "0x227E508", VA = "0x227E508")]
	public ArcRanged()
	{
	}
}
[Token(Token = "0x20000FF")]
public class ArmorSet : MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float damageScaler;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MeshRenderer> ShadowRenderers;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<MeshRenderer> MainMatRenderers;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MeshRenderer> HandRenderers;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject UpperBody;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject LowerBody;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject RightHand;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LeftHand;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Transform ShoulderVizHandle;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LeftShoulderHandle;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Transform RightShoulderHandle;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material mainMat;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Material handsMat;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material simpleMat;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Material simpleHandsMat;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D lowResTexture;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<GameObject> MeshesToMove;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 meshShift;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public MeshRenderer TorsoRenderer;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public MeshRenderer LowerBodyRenderer;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public MeshRenderer LeftShoulderRenderer;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MeshRenderer RightShoulderRenderer;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject RightFist;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject RightGuns;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject RightPoint;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject RightOpen;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject RightThumb;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject LeftFist;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject LeftGuns;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject LeftPoint;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject LeftOpen;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject LeftThumb;

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x227E6E0", Offset = "0x227E6E0", VA = "0x227E6E0")]
	public ArmorSet()
	{
	}
}
[Token(Token = "0x2000100")]
public class ArrowProjectile : Projectile
{
	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool orbiting;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float gravity;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float damageScaler;

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x227E824", Offset = "0x227E824", VA = "0x227E824", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x227E828", Offset = "0x227E828", VA = "0x227E828", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x227E838", Offset = "0x227E838", VA = "0x227E838", Slot = "6")]
	public override void PhysicsStep()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x227EE6C", Offset = "0x227EE6C", VA = "0x227EE6C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x227F0E4", Offset = "0x227F0E4", VA = "0x227F0E4")]
	public ArrowProjectile()
	{
	}
}
[Token(Token = "0x2000101")]
public class Audio : MonoBehaviour
{
	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject SoundEffectPrefab;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<AudioSource> soundEffects;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5944", Offset = "0x5C5944")]
	public bool UseAmbiCrowd;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource CrowdRight;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioSource CrowdLeft;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource AmbiCrowd;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetCrowdVolume;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float crowdVolume;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int maxSounds;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float nearDist;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float medDist;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float farDist;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C597C", Offset = "0x5C597C")]
	public AudioClip placeholderClip;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AudioClip tempExplosion;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip tempWhoosh;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<AudioClip> WeaponClashes;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip ShieldHit;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AudioClip HealthHit;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip FighterKill;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5994", Offset = "0x5C5994")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5994", Offset = "0x5C5994")]
	public AudioClip FighterKillSpatial;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip FighterKillStereo;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public AudioClip FighterKillParticleSpatial;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C59F0", Offset = "0x5C59F0")]
	public AudioClip ChargeupStart;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public AudioClip ChargeupLoop;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioClip Blitz;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public AudioClip StartBlitz;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioClip Retreat;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public AudioClip Resummon;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip SwishLoop;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public AudioClip ButtonClick;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip BadInput;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public AudioClip MuteVoip;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip UnmuteVoip;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public AudioClip FinishGIF;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip MenuOpen;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public AudioClip MenuClose;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip RangedBlock;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public List<AudioClip> ProjectileDeflect;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<AudioClip> ProjectileDeflectWave;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public AudioClip StartRecording;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip StopRecording;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public AudioClip CrowdLoop;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public List<AudioClip> CrowdCheer;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public List<AudioClip> Thunderclaps;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip StaffChargeup;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AudioClip KatarChargeup;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<AudioClip> ClaymoreShoots;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public List<AudioClip> RapierShoots;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<AudioClip> KatarShoots;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public List<AudioClip> StaffShoots;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<AudioClip> FlailShoots;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public List<AudioClip> ScytheShoots;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<AudioClip> HammerShoots;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public AudioClip GlassCrack;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioClip deepBoom;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public AudioClip WeaponGrip;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<AudioClip> DealDamageClips;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public List<AudioClip> TakeDamageClips;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public List<AudioClip> DealDoubleDamageClips;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public List<AudioClip> TakeDoubleDamageClips;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public AudioClip PlatformStart;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public AudioClip PlatformTravel;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip PlatformStop;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public AudioClip StadiumLightsOn;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip PlayerLightsOn;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public AudioClip PlayerLightsOff;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public AudioClip Countdown321;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public AudioClip CountdownGo;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public AudioClip WeaponIntro;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public AudioClip WeaponIntroStereo;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public AudioClip Pause;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public AudioClip Unpause;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public AudioClip Victory;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public AudioClip Defeat;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public AudioClip MatchVictory;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public AudioClip MatchDefeat;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public AudioClip MatchReady;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public AudioClip CantChargeupFullEnergy;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AudioClip CantChargeupNoHealth;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public AudioClip CantAttackNoEnergy;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AudioClip TutorialOpen;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public AudioClip TutorialClose;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AudioClip TutorialSlomo;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public bool newAudio;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public AudioMixerSnapshot NormalAudioSnapshot;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public AudioMixerSnapshot SlowdownAudioSnapshot;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AudioMixer CoreyTestMixer;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public AudioClip StaffDrawBow;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool verboseDebug;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5A08", Offset = "0x5C5A08")]
	public float swishSmoothing;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool previousFrameSlowdown;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5A20", Offset = "0x5C5A20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5A20", Offset = "0x5C5A20")]
	public AudioClip uiHover;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public AudioClip uiLeave;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public AudioClip uiClick;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5A78", Offset = "0x5C5A78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5A78", Offset = "0x5C5A78")]
	public AudioClip ClaymoreShoot;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public AudioClip RapierShoot;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public AudioClip KatarShoot;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public AudioClip StaffShoot;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public AudioClip FlailShoot;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float crowdVolumeScale;

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x227F114", Offset = "0x227F114", VA = "0x227F114")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0x227F2A4", Offset = "0x227F2A4", VA = "0x227F2A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0x227F34C", Offset = "0x227F34C", VA = "0x227F34C")]
	private AudioClip LoadSound(string name)
	{
		return null;
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x227F5F8", Offset = "0x227F5F8", VA = "0x227F5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x227F1D0", Offset = "0x227F1D0", VA = "0x227F1D0")]
	private void InitSoundPool()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x22800D0", Offset = "0x22800D0", VA = "0x22800D0")]
	private GameObject SpawnNewSoundEffect()
	{
		return null;
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x227CB5C", Offset = "0x227CB5C", VA = "0x227CB5C")]
	public AudioSource PlaySoundEffect(List<AudioClip> clips, [Optional] Vector3? pos, float volume = 0.5f, float delay = 0f, [Optional] GameObject parent, float pitch = 1f, bool stealVoice = true, int maxInstances = 15, bool useDistanceAttenuation = true)
	{
		return null;
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x227B2AC", Offset = "0x227B2AC", VA = "0x227B2AC")]
	public AudioSource PlaySoundEffect(AudioClip clip, [Optional] Vector3? pos, float volume = 0.5f, float delay = 0f, [Optional] GameObject parent, float pitch = 1f, bool stealVoice = true, int maxInstances = 15, bool useDistanceAttenuation = true)
	{
		return null;
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x2280708", Offset = "0x2280708", VA = "0x2280708")]
	public AudioSource Play2DSoundEffect(List<AudioClip> clips, float volume = 0.5f, float delay = 0f, float pitch = 1f, bool stealVoice = false, int maxInstances = 3)
	{
		return null;
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x22808B8", Offset = "0x22808B8", VA = "0x22808B8")]
	public AudioSource Play2DSoundEffect(AudioClip clip, float volume = 0.5f, float delay = 0f, float pitch = 1f, bool stealVoice = false, int maxInstances = 3)
	{
		return null;
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x228039C", Offset = "0x228039C", VA = "0x228039C")]
	public AudioSource SpawnSoundEffectFromPool(bool voiceSteal = false)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x22801E8", Offset = "0x22801E8", VA = "0x22801E8")]
	public int numInstancesPlaying(AudioClip clip)
	{
		return default(int);
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x2280D6C", Offset = "0x2280D6C", VA = "0x2280D6C")]
	public Audio()
	{
	}
}
[Token(Token = "0x2000102")]
public class BallPhysics : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Weapon weapon;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform connectionPoint;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5ACC", Offset = "0x5C5ACC")]
	public float movementForceMod;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float movementBrakeMod;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5AE4", Offset = "0x5C5AE4")]
	public float dragPowerCo;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float forcePowerCo;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5AFC", Offset = "0x5C5AFC")]
	public float maxPullDistance;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B14", Offset = "0x5C5B14")]
	public GameObject AIRangedBlockHelper;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject AIRangedBlockHandle;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject AIMeleeBlockHelper;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject AIMeleeBlockRotator;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject AIMeleeBlockHandle;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B2C", Offset = "0x5C5B2C")]
	public Vector3 velocity;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x22818B4", Offset = "0x22818B4", VA = "0x22818B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x22818B8", Offset = "0x22818B8", VA = "0x22818B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x22818BC", Offset = "0x22818BC", VA = "0x22818BC")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x22818C0", Offset = "0x22818C0", VA = "0x22818C0")]
	public void PhysicsStep()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x2281C70", Offset = "0x2281C70", VA = "0x2281C70")]
	public BallPhysics()
	{
	}
}
[Token(Token = "0x2000103")]
public class BasicButton : MonoBehaviour
{
	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool testPress;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent Callback;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer ButtonRenderer;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider ButtonCollider;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro Label;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool wasHovering;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float hoverValue;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float disabledValue;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float selectedValue;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B44", Offset = "0x5C5B44")]
	public bool inputEnabled;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color defaultColor;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color hoverColor;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Color disabledColor;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color selectedColor;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float transitionSpeed;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool selected;

	[NonSerialized]
	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool permaSelected;

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x2281D2C", Offset = "0x2281D2C", VA = "0x2281D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x2281DFC", Offset = "0x2281DFC", VA = "0x2281DFC")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x2282548", Offset = "0x2282548", VA = "0x2282548")]
	public BasicButton()
	{
	}
}
[Token(Token = "0x2000104")]
public class BasicSlider : MonoBehaviour
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent Callback;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject button;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer buttonRenderer;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider buttonCollider;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject bar;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer barRenderer;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject markerPrefab;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> markers;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro text;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float progress;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool wasHovering;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hoverValue;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float disabledValue;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float selectedValue;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B5C", Offset = "0x5C5B5C")]
	public bool inputEnabled;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color defaultColor;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color hoverColor;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color disabledColor;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color selectedColor;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float transitionSpeed;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool selected;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float progressMultiplier;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 buttonStartPosLocal;

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x2282654", Offset = "0x2282654", VA = "0x2282654")]
	private void Start()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x22826BC", Offset = "0x22826BC", VA = "0x22826BC")]
	public void Update()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x2283244", Offset = "0x2283244", VA = "0x2283244")]
	public void SetProgress(float newProgress)
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x2283410", Offset = "0x2283410", VA = "0x2283410")]
	public float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x2283458", Offset = "0x2283458", VA = "0x2283458")]
	public void SetMarker(float position)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x2283700", Offset = "0x2283700", VA = "0x2283700")]
	public void ClearMarkers()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x22838A4", Offset = "0x22838A4", VA = "0x22838A4")]
	public BasicSlider()
	{
	}
}
[Token(Token = "0x2000105")]
public class BezierProjectile : Projectile
{
	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float speed;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float controlPointDist;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject SpeedScaler;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 controlPoint;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 endPoint;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float t;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 lastPoint;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool initialized;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float minSpeedScale;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float maxSpeedScale;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float scalerScaler;

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x2284A08", Offset = "0x2284A08", VA = "0x2284A08")]
	public void Start()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x2284CF8", Offset = "0x2284CF8", VA = "0x2284CF8", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x2284CFC", Offset = "0x2284CFC", VA = "0x2284CFC", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x2284D0C", Offset = "0x2284D0C", VA = "0x2284D0C")]
	public Vector3 evaluateAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x2284EAC", Offset = "0x2284EAC", VA = "0x2284EAC")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x22851F4", Offset = "0x22851F4", VA = "0x22851F4", Slot = "6")]
	public override void PhysicsStep()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x2285904", Offset = "0x2285904", VA = "0x2285904")]
	public BezierProjectile()
	{
	}
}
[Token(Token = "0x2000106")]
public class BezierRanged : RangedAttack
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool flailMode;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastTipPos;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 currentDir;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x2285940", Offset = "0x2285940", VA = "0x2285940")]
	private void Start()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x22859FC", Offset = "0x22859FC", VA = "0x22859FC", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x2285A00", Offset = "0x2285A00", VA = "0x2285A00", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x22867F0", Offset = "0x22867F0", VA = "0x22867F0", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x2286BC8", Offset = "0x2286BC8", VA = "0x2286BC8")]
	public BezierRanged()
	{
	}
}
[Token(Token = "0x2000107")]
public static class BoltExtensions
{
	[Token(Token = "0x600058C")]
	[Address(RVA = "0x228755C", Offset = "0x228755C", VA = "0x228755C")]
	public static uint RequiredBits(int minValue, int maxValue)
	{
		return default(uint);
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x22875B8", Offset = "0x22875B8", VA = "0x22875B8")]
	public static int RequiredBitsInt(int minValue = int.MinValue, int maxValue = int.MaxValue)
	{
		return default(int);
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x22875BC", Offset = "0x22875BC", VA = "0x22875BC")]
	public static int ReadInt(this UdpPacket packet, int minValue = int.MinValue, int maxValue = int.MaxValue)
	{
		return default(int);
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x2287604", Offset = "0x2287604", VA = "0x2287604")]
	public static void WriteInt(this UdpPacket packet, int value, int minValue = int.MinValue, int maxValue = int.MaxValue)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x228779C", Offset = "0x228779C", VA = "0x228779C")]
	public static int RequiredBitsFloat(float minValue = float.MinValue, float maxValue = float.MaxValue, float precision = 1E-07f)
	{
		return default(int);
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x22877CC", Offset = "0x22877CC", VA = "0x22877CC")]
	public static float ReadFloat(this UdpPacket packet, float minValue = float.MinValue, float maxValue = float.MaxValue, float precision = 1E-07f)
	{
		return default(float);
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x2287948", Offset = "0x2287948", VA = "0x2287948")]
	public static void WriteFloat(this UdpPacket packet, float value, float minValue = float.MinValue, float maxValue = float.MaxValue, float precision = 1E-07f)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x2287B80", Offset = "0x2287B80", VA = "0x2287B80")]
	public static Quaternion ReadQuaternion(this UdpPacket packet, float precision = 1E-07f)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x2287DB0", Offset = "0x2287DB0", VA = "0x2287DB0")]
	public static void WriteQuaternion(this UdpPacket packet, Quaternion quaternion, float precision = 1E-08f)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x2288088", Offset = "0x2288088", VA = "0x2288088")]
	public static float MaxValueUsingXBits(int bits, float precision = 1E-07f)
	{
		return default(float);
	}
}
[Token(Token = "0x2000108")]
public class BoundedSlider : Slider
{
	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public BoundedSlider other;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool lowerBound;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float maxDistance;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool overrideBounds;

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x2288134", Offset = "0x2288134", VA = "0x2288134", Slot = "51")]
	protected override void Set(float input, bool sendCallback)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x2288494", Offset = "0x2288494", VA = "0x2288494")]
	public void SetUnboundedValue(float input)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x22884C8", Offset = "0x22884C8", VA = "0x22884C8")]
	public BoundedSlider()
	{
	}
}
[Token(Token = "0x2000109")]
public class BowRanged : RangedAttack
{
	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BowPivot1;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject BowPivot2;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject BowPivot1b;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject BowPivot2b;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Bowstring1;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject Bowstring2;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform BowTip1;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Transform BowTip2;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float shaftLength;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float grabDist;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float minDrawDist;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject previewObj;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool mainTriggerWasHeld;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool offTriggerWasHeld;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool drawingBow;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float thrustDistThreshold;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform lastHeldPos;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool forceShot;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool reachedMinPull;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxDrawDist;

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x2288DB4", Offset = "0x2288DB4", VA = "0x2288DB4")]
	private void Start()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x2288E70", Offset = "0x2288E70", VA = "0x2288E70", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x2288E74", Offset = "0x2288E74", VA = "0x2288E74", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x2289FC4", Offset = "0x2289FC4", VA = "0x2289FC4", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x228AECC", Offset = "0x228AECC", VA = "0x228AECC")]
	public BowRanged()
	{
	}
}
[Token(Token = "0x200010A")]
public class BulletProjectile : Projectile
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool orbiting;

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x228AF00", Offset = "0x228AF00", VA = "0x228AF00", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x228AF04", Offset = "0x228AF04", VA = "0x228AF04", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x228AF14", Offset = "0x228AF14", VA = "0x228AF14", Slot = "6")]
	public override void PhysicsStep()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x228B348", Offset = "0x228B348", VA = "0x228B348")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x228B5C0", Offset = "0x228B5C0", VA = "0x228B5C0")]
	public BulletProjectile()
	{
	}
}
[Token(Token = "0x200010B")]
public interface IRangedAttack
{
	[Token(Token = "0x60005A3")]
	void ManualUpdate();

	[Token(Token = "0x60005A4")]
	void ManualFixedUpdate();
}
[Token(Token = "0x200010C")]
public class BulletRanged : RangedAttack
{
	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x228B5C8", Offset = "0x228B5C8", VA = "0x228B5C8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x228B684", Offset = "0x228B684", VA = "0x228B684", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x228B688", Offset = "0x228B688", VA = "0x228B688", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x228BD84", Offset = "0x228BD84", VA = "0x228BD84", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x228BFBC", Offset = "0x228BFBC", VA = "0x228BFBC")]
	public BulletRanged()
	{
	}
}
[Token(Token = "0x200010D")]
public class ButtonHelper : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler
{
	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x228C1F8", Offset = "0x228C1F8", VA = "0x228C1F8", Slot = "4")]
	public void OnPointerEnter(PointerEventData pointerEventData)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x228C4FC", Offset = "0x228C4FC", VA = "0x228C4FC", Slot = "5")]
	public void OnPointerExit(PointerEventData pointerEventData)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x228C5AC", Offset = "0x228C5AC", VA = "0x228C5AC", Slot = "6")]
	public void OnPointerClick(PointerEventData pointerEventData)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x228C900", Offset = "0x228C900", VA = "0x228C900")]
	public ButtonHelper()
	{
	}
}
[Token(Token = "0x200010E")]
public class CameraObjects : MonoBehaviour
{
	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x228CDC0", Offset = "0x228CDC0", VA = "0x228CDC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x228CDC4", Offset = "0x228CDC4", VA = "0x228CDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x228D104", Offset = "0x228D104", VA = "0x228D104")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x228D108", Offset = "0x228D108", VA = "0x228D108")]
	public CameraObjects()
	{
	}
}
[Token(Token = "0x200010F")]
public class CampaignBuilder : MonoBehaviour
{
	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<string> Names;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> KnightNames;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<string> DuelistNames;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> MonkNames;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<string> NinjaNames;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> CrusaderNames;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<string> KnightNamesCopy;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> DuelistNamesCopy;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private List<string> MonkNamesCopy;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> NinjaNamesCopy;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<string> CrusaderNamesCopy;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AIPersonality> Easy_Knight;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<AIPersonality> Easy_Duelist;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AIPersonality> Easy_Monk;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public List<AIPersonality> Easy_Ninja;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AIPersonality> Easy_Crusader;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<AIPersonality> Medium_Knight;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<AIPersonality> Medium_Duelist;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public List<AIPersonality> Medium_Monk;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<AIPersonality> Medium_Ninja;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public List<AIPersonality> Medium_Crusader;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<AIPersonality> Hard_Knight;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<AIPersonality> Hard_Duelist;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<AIPersonality> Hard_Monk;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public List<AIPersonality> Hard_Ninja;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<AIPersonality> Hard_Crusader;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private string[] names;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x228D110", Offset = "0x228D110", VA = "0x228D110")]
	private string GetRandomName(FighterClass c)
	{
		return null;
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x228D378", Offset = "0x228D378", VA = "0x228D378")]
	public AIPersonality GetRandomPersonality(FighterClass c, int leagueNum)
	{
		return null;
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x228D9F4", Offset = "0x228D9F4", VA = "0x228D9F4")]
	private MaterialType GetRandomBase(FighterClass c)
	{
		return default(MaterialType);
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x228DA44", Offset = "0x228DA44", VA = "0x228DA44")]
	private MaterialType GetRandomAccent(FighterClass c)
	{
		return default(MaterialType);
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x228DA9C", Offset = "0x228DA9C", VA = "0x228DA9C")]
	private HelmType GetRandomHelm()
	{
		return default(HelmType);
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x228DB8C", Offset = "0x228DB8C", VA = "0x228DB8C")]
	private ArmorType GetRandomArmor()
	{
		return default(ArmorType);
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x228DC80", Offset = "0x228DC80", VA = "0x228DC80")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC744", Offset = "0x5CC744")]
	public void CreateCampaignStructure()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x228FFB4", Offset = "0x228FFB4", VA = "0x228FFB4")]
	private WeaponType GetMainHandWeapon(FighterClass type)
	{
		return default(WeaponType);
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x228FFF4", Offset = "0x228FFF4", VA = "0x228FFF4")]
	private WeaponType GetOffHandWeapon(FighterClass type)
	{
		return default(WeaponType);
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x229001C", Offset = "0x229001C", VA = "0x229001C")]
	public CampaignBuilder()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class CampaignConfiguration : MonoBehaviour
{
	[Token(Token = "0x20004F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2ABC", Offset = "0x5C2ABC")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4002781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LeagueConfiguration leagueConfig;

		[Token(Token = "0x600252F")]
		[Address(RVA = "0x2294BC0", Offset = "0x2294BC0", VA = "0x2294BC0")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x6002530")]
		[Address(RVA = "0x2294DC4", Offset = "0x2294DC4", VA = "0x2294DC4")]
		internal bool <Populate>b__0(LeagueInfo li)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FighterClass campaignClass;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string playerName;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeagueType playerLeague;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int playerRank;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int playerLevel;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int skillRating;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int coins;

	[NonSerialized]
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ClassInfo ci;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x22941C8", Offset = "0x22941C8", VA = "0x22941C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x22941CC", Offset = "0x22941CC", VA = "0x22941CC")]
	public void BuildOrLoad()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x22946D8", Offset = "0x22946D8", VA = "0x22946D8")]
	public void Build()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x22942B0", Offset = "0x22942B0", VA = "0x22942B0")]
	public void Populate(ClassInfo deserializedClass)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x2294BC8", Offset = "0x2294BC8", VA = "0x2294BC8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC78C", Offset = "0x5CC78C")]
	public void GenerateID()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x2294C7C", Offset = "0x2294C7C", VA = "0x2294C7C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC7C0", Offset = "0x5CC7C0")]
	public void CustomDevEdit()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x2294D48", Offset = "0x2294D48", VA = "0x2294D48")]
	public CampaignConfiguration()
	{
	}
}
[Token(Token = "0x2000111")]
public class CampaignImport : MonoBehaviour
{
	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string campaignDataPath;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MatchConfiguration> allDuels;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<MatchConfiguration> allOthers;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AIPersonality> personalities;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CampaignImport copyFrom;

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x2294E10", Offset = "0x2294E10", VA = "0x2294E10")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC7F4", Offset = "0x5CC7F4")]
	public void FormatMinions()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x22950C4", Offset = "0x22950C4", VA = "0x22950C4")]
	private void FormatMinion(FighterConfiguration minion, FighterConfiguration boss)
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x22952D0", Offset = "0x22952D0", VA = "0x22952D0")]
	private void CopyFighterConfigData(FighterConfiguration to, FighterConfiguration from)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x22954C0", Offset = "0x22954C0", VA = "0x22954C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC830", Offset = "0x5CC830")]
	public void CopyBigMatchData()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x229651C", Offset = "0x229651C", VA = "0x229651C")]
	public void LoadBigMatches()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x229664C", Offset = "0x229664C", VA = "0x229664C")]
	public void LoadDuels()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x2296750", Offset = "0x2296750", VA = "0x2296750")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC870", Offset = "0x5CC870")]
	public void ImportCampaignData()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x22996C4", Offset = "0x22996C4", VA = "0x22996C4")]
	public StageType LookupStage(string s)
	{
		return default(StageType);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x2299130", Offset = "0x2299130", VA = "0x2299130")]
	public MaterialType LookupMat(string s)
	{
		return default(MaterialType);
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x2298D90", Offset = "0x2298D90", VA = "0x2298D90")]
	public HelmType LookupHelm(string s)
	{
		return default(HelmType);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x2298B4C", Offset = "0x2298B4C", VA = "0x2298B4C")]
	public ArmorType LookupArmor(string s)
	{
		return default(ArmorType);
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x2298934", Offset = "0x2298934", VA = "0x2298934")]
	public FighterClass LookupClass(string s)
	{
		return default(FighterClass);
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x2298710", Offset = "0x2298710", VA = "0x2298710")]
	public AIPersonality LookupPersonality(string pname)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x2299864", Offset = "0x2299864", VA = "0x2299864")]
	public CampaignImport()
	{
	}
}
[Serializable]
[Token(Token = "0x2000112")]
public class CampaignInfo : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string playerName;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FighterClass currentClass;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int globalCoins;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool campaignCheat;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Dictionary<FighterClass, ClassInfo> classCampaign;

	[NonSerialized]
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, FighterInfo> allFighters;

	[Token(Token = "0x1700005D")]
	public ClassInfo classData
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x2299904", Offset = "0x2299904", VA = "0x2299904")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x2299984", Offset = "0x2299984", VA = "0x2299984")]
	public void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x2299ADC", Offset = "0x2299ADC", VA = "0x2299ADC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CC8B4", Offset = "0x5CC8B4")]
	public void CheatCampaign()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x2299DDC", Offset = "0x2299DDC", VA = "0x2299DDC")]
	public void CheatRestore()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x2299F64", Offset = "0x2299F64", VA = "0x2299F64")]
	public void CheatRestore1()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x2299FE8", Offset = "0x2299FE8", VA = "0x2299FE8")]
	public void CheatRestore2()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x229A06C", Offset = "0x229A06C", VA = "0x229A06C")]
	public void CheatRestore3()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x229A1F8", Offset = "0x229A1F8", VA = "0x229A1F8")]
	public void CheatRestore4()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x229A384", Offset = "0x229A384", VA = "0x229A384")]
	public void CheatRestore5()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x229A510", Offset = "0x229A510", VA = "0x229A510")]
	public void CheatAddChampHelm()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x229A9BC", Offset = "0x229A9BC", VA = "0x229A9BC")]
	public void CheatAddGold(int coins)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x229AA40", Offset = "0x229AA40", VA = "0x229AA40")]
	public void CheatSetMPSkill(int skill)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x229ABA4", Offset = "0x229ABA4", VA = "0x229ABA4")]
	public CampaignInfo()
	{
	}
}
[Token(Token = "0x2000113")]
public class CampaignMenu : MonoBehaviour
{
	[Token(Token = "0x20004F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2ACC", Offset = "0x5C2ACC")]
	private sealed class <TweenOut>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CampaignMenu <>4__this;

		[Token(Token = "0x170002B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002534")]
			[Address(RVA = "0x229CD54", Offset = "0x229CD54", VA = "0x229CD54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002536")]
			[Address(RVA = "0x229CDE4", Offset = "0x229CDE4", VA = "0x229CDE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002531")]
		[Address(RVA = "0x229B8AC", Offset = "0x229B8AC", VA = "0x229B8AC")]
		[DebuggerHidden]
		public <TweenOut>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002532")]
		[Address(RVA = "0x229C814", Offset = "0x229C814", VA = "0x229C814", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002533")]
		[Address(RVA = "0x229C818", Offset = "0x229C818", VA = "0x229C818", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002535")]
		[Address(RVA = "0x229CD5C", Offset = "0x229CD5C", VA = "0x229CD5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2ADC", Offset = "0x5C2ADC")]
	private sealed class <RotateOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject outPanel;

		[Token(Token = "0x4002788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject inPanel;

		[Token(Token = "0x4002789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pivot;

		[Token(Token = "0x400278A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float time;

		[Token(Token = "0x400278B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CampaignMenu <>4__this;

		[Token(Token = "0x400278C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 <outOriginalPos>5__2;

		[Token(Token = "0x400278D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion <outOriginalRot>5__3;

		[Token(Token = "0x400278E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <outOriginalParent>5__4;

		[Token(Token = "0x400278F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <inOriginalPos>5__5;

		[Token(Token = "0x4002790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <inOriginalRot>5__6;

		[Token(Token = "0x4002791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <inOriginalParent>5__7;

		[Token(Token = "0x170002B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600253A")]
			[Address(RVA = "0x229C47C", Offset = "0x229C47C", VA = "0x229C47C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600253C")]
			[Address(RVA = "0x229C50C", Offset = "0x229C50C", VA = "0x229C50C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002537")]
		[Address(RVA = "0x229B9C4", Offset = "0x229B9C4", VA = "0x229B9C4")]
		[DebuggerHidden]
		public <RotateOut>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002538")]
		[Address(RVA = "0x229BC6C", Offset = "0x229BC6C", VA = "0x229BC6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002539")]
		[Address(RVA = "0x229BC70", Offset = "0x229BC70", VA = "0x229BC70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600253B")]
		[Address(RVA = "0x229C484", Offset = "0x229C484", VA = "0x229C484", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AEC", Offset = "0x5C2AEC")]
	private sealed class <ScaleOut>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject panel;

		[Token(Token = "0x4002795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float time;

		[Token(Token = "0x4002796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CampaignMenu <>4__this;

		[Token(Token = "0x4002797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 <originalScale>5__2;

		[Token(Token = "0x170002B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002540")]
			[Address(RVA = "0x229C77C", Offset = "0x229C77C", VA = "0x229C77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002542")]
			[Address(RVA = "0x229C80C", Offset = "0x229C80C", VA = "0x229C80C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600253D")]
		[Address(RVA = "0x229BAB0", Offset = "0x229BAB0", VA = "0x229BAB0")]
		[DebuggerHidden]
		public <ScaleOut>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x600253E")]
		[Address(RVA = "0x229C514", Offset = "0x229C514", VA = "0x229C514", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600253F")]
		[Address(RVA = "0x229C518", Offset = "0x229C518", VA = "0x229C518", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002541")]
		[Address(RVA = "0x229C784", Offset = "0x229C784", VA = "0x229C784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject playerMenu;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject matchMenu;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject leagueMenu;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int tweensDone;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x229AC80", Offset = "0x229AC80", VA = "0x229AC80")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x229AC84", Offset = "0x229AC84", VA = "0x229AC84")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x229AE54", Offset = "0x229AE54", VA = "0x229AE54")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x229B000", Offset = "0x229B000", VA = "0x229B000")]
	public void Back()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x229B5B8", Offset = "0x229B5B8", VA = "0x229B5B8")]
	public void ToArmory()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x229B820", Offset = "0x229B820", VA = "0x229B820")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC8F0", Offset = "0x5CC8F0")]
	public IEnumerator TweenOut()
	{
		return null;
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x229B8CC", Offset = "0x229B8CC", VA = "0x229B8CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC968", Offset = "0x5CC968")]
	public IEnumerator RotateOut(GameObject outPanel, GameObject inPanel, GameObject pivot, float time)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x229B9E4", Offset = "0x229B9E4", VA = "0x229B9E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CC9E0", Offset = "0x5CC9E0")]
	public IEnumerator ScaleOut(GameObject panel, float time)
	{
		return null;
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x229BAD0", Offset = "0x229BAD0", VA = "0x229BAD0")]
	public void ScaleIn(GameObject panel, float time)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x229BC64", Offset = "0x229BC64", VA = "0x229BC64")]
	public CampaignMenu()
	{
	}
}
[Token(Token = "0x2000114")]
public class ChainBehavior : EntityBehaviour<IChainState>, IWeaponDriver
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Weapon _weapon;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _fastForwardedThisFrame;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int latestFrame;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private List<WeaponSnapshot> delayQueue;

	[Token(Token = "0x1700005E")]
	public Weapon weapon
	{
		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x229CDEC", Offset = "0x229CDEC", VA = "0x229CDEC", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x229CDF4", Offset = "0x229CDF4", VA = "0x229CDF4", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public bool fastForwardedThisFrame
	{
		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x229CDFC", Offset = "0x229CDFC", VA = "0x229CDFC", Slot = "32")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x229CE04", Offset = "0x229CE04", VA = "0x229CE04", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x229CE0C", Offset = "0x229CE0C", VA = "0x229CE0C", Slot = "31")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x229CE14", Offset = "0x229CE14", VA = "0x229CE14", Slot = "27")]
	public void Reset()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x229CE20", Offset = "0x229CE20", VA = "0x229CE20", Slot = "18")]
	public override void Attached()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0x229D2C0", Offset = "0x229D2C0", VA = "0x229D2C0", Slot = "19")]
	public override void Detached()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x229D390", Offset = "0x229D390", VA = "0x229D390", Slot = "28")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x22A0178", Offset = "0x22A0178", VA = "0x22A0178")]
	public ChainBehavior()
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class ClassInfo
{
	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string id;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string playerName;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FighterClass playerClass;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LeagueType playerLeague;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int playerRank;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int playerLevel;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int skillRating;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int selectedLeague;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Qualifier> qualifiersUnlocked;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<LeagueInfo> leagues;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Loadout loadout;

	[NonSerialized]
	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<LevelUpReward> levelUpRewards;

	[Token(Token = "0x17000061")]
	public FighterInfo playerInfo
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x2225470", Offset = "0x2225470", VA = "0x2225470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x22255B8", Offset = "0x22255B8", VA = "0x22255B8")]
	public void PopulateRewards()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x2225E20", Offset = "0x2225E20", VA = "0x2225E20")]
	public void SetLoadout()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x222606C", Offset = "0x222606C", VA = "0x222606C")]
	public void AddPlayerToLeague()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x22261B4", Offset = "0x22261B4", VA = "0x22261B4")]
	public string GetWeaponString(FighterClass pc)
	{
		return null;
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x2226240", Offset = "0x2226240", VA = "0x2226240")]
	public ClassInfo()
	{
	}
}
[Token(Token = "0x2000116")]
public class LevelUpReward
{
	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string reward;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string info;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float skillMinimum;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x23EE8B0", Offset = "0x23EE8B0", VA = "0x23EE8B0")]
	public LevelUpReward(string reward, string info, float skillMinimum)
	{
	}
}
[Token(Token = "0x2000117")]
public class ClassSelectMenu : MonoBehaviour
{
	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<FighterConfiguration> FighterConfigs;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private FighterConfiguration nextConfig;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<Fighter> ModelFighters;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject confirmButton;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject TrainingButton;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject DoubleswordInfo;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject RapierInfo;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject StaffInfo;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject KatarInfo;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject FlailInfo;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject ScytheInfo;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject KatanaInfo;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject WarhammerInfo;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject InstructionInfo;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Image TournamentOpponentBadgeBackground;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image TournamentOpponentBadgeForeground;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject StatsInfo;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI RankNum;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI CoinsNum;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject InfoPanel;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int selection;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 defaultPosition;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion defaultRotation;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool straightToTutorial;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject LeftHandedCheck;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject WelcomeMessage;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject BackButton;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject RecenterButton;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button ReaperButton;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Image knightBadgeBG;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Image duelistBadgeBG;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Image monkBadgeBG;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Image ninjaBadgeBG;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Image crusaderBadgeBG;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Image reaperBadgeBG;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Image samuraiBadgeBG;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image berserkerBadgeBG;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Image knightBadgeFG;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image duelistBadgeFG;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Image monkBadgeFG;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image ninjaBadgeFG;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Image crusaderBadgeFG;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Image reaperBadgeFG;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Image samuraiBadgeFG;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Image berserkerBadgeFG;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x2226358", Offset = "0x2226358", VA = "0x2226358")]
	private void Start()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x222635C", Offset = "0x222635C", VA = "0x222635C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x2227FC4", Offset = "0x2227FC4", VA = "0x2227FC4")]
	public void ToggleLeftHanded()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x22281CC", Offset = "0x22281CC", VA = "0x22281CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x2228328", Offset = "0x2228328", VA = "0x2228328")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x222846C", Offset = "0x222846C", VA = "0x222846C")]
	public void Back()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x22288DC", Offset = "0x22288DC", VA = "0x22288DC")]
	public void FirstDeploy()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x2228F24", Offset = "0x2228F24", VA = "0x2228F24")]
	public void TurnOnProjectorLight(GameObject light)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x2229094", Offset = "0x2229094", VA = "0x2229094")]
	public void TestSwitchFighters()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x222984C", Offset = "0x222984C", VA = "0x222984C")]
	public void ShowNextFighter()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x222AF00", Offset = "0x222AF00", VA = "0x222AF00")]
	public void SwitchToFighter(FighterConfiguration config)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x222B55C", Offset = "0x222B55C", VA = "0x222B55C")]
	private void PlayTaunt()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x222B6CC", Offset = "0x222B6CC", VA = "0x222B6CC")]
	public void SelectKnight()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0x222BA88", Offset = "0x222BA88", VA = "0x222BA88")]
	public void SelectDuelist()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x222BEA4", Offset = "0x222BEA4", VA = "0x222BEA4")]
	public void SelectMonk()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x222C260", Offset = "0x222C260", VA = "0x222C260")]
	public void SelectNinja()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x222C67C", Offset = "0x222C67C", VA = "0x222C67C")]
	public void SelectCrusader()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x222CA98", Offset = "0x222CA98", VA = "0x222CA98")]
	public void SelectReaper()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x222CE54", Offset = "0x222CE54", VA = "0x222CE54")]
	public void SelectSamurai()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x222D210", Offset = "0x222D210", VA = "0x222D210")]
	public void SelectBerserker()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x222D5CC", Offset = "0x222D5CC", VA = "0x222D5CC")]
	public void ConfirmSelection()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x222E794", Offset = "0x222E794", VA = "0x222E794")]
	public void TrainingStart()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x222E854", Offset = "0x222E854", VA = "0x222E854")]
	private void SwitchToTrainingMenu()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x222E948", Offset = "0x222E948", VA = "0x222E948")]
	public ClassSelectMenu()
	{
	}
}
[Token(Token = "0x2000118")]
public class ClassSwitchMenuButton : MonoBehaviour
{
	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI info;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public RectTransform box;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIGradient gradient;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CustomizeMenu parentMenu;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterClass classType;

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x222EAA4", Offset = "0x222EAA4", VA = "0x222EAA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x222EAA8", Offset = "0x222EAA8", VA = "0x222EAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x222EAAC", Offset = "0x222EAAC", VA = "0x222EAAC")]
	public void Select()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x222ECE0", Offset = "0x222ECE0", VA = "0x222ECE0")]
	public ClassSwitchMenuButton()
	{
	}
}
[Token(Token = "0x2000119")]
public class CreditsMenu : MonoBehaviour
{
	[Token(Token = "0x6000615")]
	[Address(RVA = "0x222FEB4", Offset = "0x222FEB4", VA = "0x222FEB4")]
	public void Back()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x222FFC0", Offset = "0x222FFC0", VA = "0x222FFC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x2230104", Offset = "0x2230104", VA = "0x2230104")]
	public CreditsMenu()
	{
	}
}
[Token(Token = "0x200011A")]
public class CrowdProcessing : MonoBehaviour
{
	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Original;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 dotter;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float threshold;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extraY;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float extraX;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float targetWidth;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distForward;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool reverseTris;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool reverseEverything;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float percentFilled;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 sortByDistFrom;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float teamTilt;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float litRight;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float AOStrength;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool useSharedMesh;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GM convenienceGM;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x223010C", Offset = "0x223010C", VA = "0x223010C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCA58", Offset = "0x5CCA58")]
	public void ProcessVertices()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x2232158", Offset = "0x2232158", VA = "0x2232158")]
	public CrowdProcessing()
	{
	}
}
[Token(Token = "0x200011B")]
public class CustomizationMenu : MonoBehaviour
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject MirrorFighterPrefab;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fighter MirrorFighter;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int closeupDist;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int stageNum;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject ShaderTestStuff;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NonShaderTestStuff;

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x22376F8", Offset = "0x22376F8", VA = "0x22376F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x2237C34", Offset = "0x2237C34", VA = "0x2237C34")]
	public void UpdateMirrorFighterWeapons()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x2237FA4", Offset = "0x2237FA4", VA = "0x2237FA4")]
	public void BackToMenu()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x223811C", Offset = "0x223811C", VA = "0x223811C")]
	public void ShowShaderTestStuff()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x2238174", Offset = "0x2238174", VA = "0x2238174")]
	public void EquipKnightArmor()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x2238304", Offset = "0x2238304", VA = "0x2238304")]
	public void EquipDummyArmor()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x2238494", Offset = "0x2238494", VA = "0x2238494")]
	public void EquipBasicEnemyArmor()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x2238624", Offset = "0x2238624", VA = "0x2238624")]
	public void EquipDuelistArmor()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x22387B4", Offset = "0x22387B4", VA = "0x22387B4")]
	public void EquipNinjaArmor()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x2238944", Offset = "0x2238944", VA = "0x2238944")]
	public void EquipMaskHelm()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x2238AD4", Offset = "0x2238AD4", VA = "0x2238AD4")]
	public void EquipJingasaHelm()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x2238C64", Offset = "0x2238C64", VA = "0x2238C64")]
	public void EquipHornedHelm()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x2238DF4", Offset = "0x2238DF4", VA = "0x2238DF4")]
	public void EquipWingedHelm()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x2238F84", Offset = "0x2238F84", VA = "0x2238F84")]
	public void EquipBasicEnemyHelm()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x2239114", Offset = "0x2239114", VA = "0x2239114")]
	public void EquipFrogMouthHelm()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x22392A4", Offset = "0x22392A4", VA = "0x22392A4")]
	public void EquipCrestedHelm()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x2239434", Offset = "0x2239434", VA = "0x2239434")]
	public void EquipJoustingHelm()
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x22395C4", Offset = "0x22395C4", VA = "0x22395C4")]
	public void ApplyBlack()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x223975C", Offset = "0x223975C", VA = "0x223975C")]
	public void ApplyBlue()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x22399F4", Offset = "0x22399F4", VA = "0x22399F4")]
	public void ApplyCopper()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x2239B8C", Offset = "0x2239B8C", VA = "0x2239B8C")]
	public void ApplyGold()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x2239D24", Offset = "0x2239D24", VA = "0x2239D24")]
	public void ApplyGreen()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x2239FBC", Offset = "0x2239FBC", VA = "0x2239FBC")]
	public void ApplyOrange()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x223A254", Offset = "0x223A254", VA = "0x223A254")]
	public void ApplyPurple()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x223A4EC", Offset = "0x223A4EC", VA = "0x223A4EC")]
	public void ApplyRed()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x223A784", Offset = "0x223A784", VA = "0x223A784")]
	public void ApplySilver()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x223A91C", Offset = "0x223A91C", VA = "0x223A91C")]
	public void ApplySteel()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x223AAB4", Offset = "0x223AAB4", VA = "0x223AAB4")]
	public void ApplyWhite()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x223AD4C", Offset = "0x223AD4C", VA = "0x223AD4C")]
	public void ApplyIron()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x223AEE4", Offset = "0x223AEE4", VA = "0x223AEE4")]
	public void ApplySilverSecondary()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x223B17C", Offset = "0x223B17C", VA = "0x223B17C")]
	public void ApplyGoldSecondary()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x223B414", Offset = "0x223B414", VA = "0x223B414")]
	public void ApplyCopperSecondary()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x223B6AC", Offset = "0x223B6AC", VA = "0x223B6AC")]
	public void ToggleCloseUp()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x223B9DC", Offset = "0x223B9DC", VA = "0x223B9DC")]
	public void SwitchStages()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x223BB50", Offset = "0x223BB50", VA = "0x223BB50")]
	public CustomizationMenu()
	{
	}
}
[Token(Token = "0x200011C")]
public class CustomizeMenu : MonoBehaviour
{
	[Token(Token = "0x20004F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2AFC", Offset = "0x5C2AFC")]
	private sealed class <TweenOut>d__46 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400279A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeMenu <>4__this;

		[Token(Token = "0x170002BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002546")]
			[Address(RVA = "0x2243920", Offset = "0x2243920", VA = "0x2243920", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002548")]
			[Address(RVA = "0x22439B0", Offset = "0x22439B0", VA = "0x22439B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002543")]
		[Address(RVA = "0x223F618", Offset = "0x223F618", VA = "0x223F618")]
		[DebuggerHidden]
		public <TweenOut>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x6002544")]
		[Address(RVA = "0x2243330", Offset = "0x2243330", VA = "0x2243330", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002545")]
		[Address(RVA = "0x2243334", Offset = "0x2243334", VA = "0x2243334", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002547")]
		[Address(RVA = "0x2243928", Offset = "0x2243928", VA = "0x2243928", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B0C", Offset = "0x5C2B0C")]
	private sealed class <RotateOut>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400279B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400279C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400279D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject outPanel;

		[Token(Token = "0x400279E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject inPanel;

		[Token(Token = "0x400279F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject pivot;

		[Token(Token = "0x40027A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float time;

		[Token(Token = "0x40027A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CustomizeMenu <>4__this;

		[Token(Token = "0x40027A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 <outOriginalPos>5__2;

		[Token(Token = "0x40027A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion <outOriginalRot>5__3;

		[Token(Token = "0x40027A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform <outOriginalParent>5__4;

		[Token(Token = "0x40027A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <inOriginalPos>5__5;

		[Token(Token = "0x40027A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion <inOriginalRot>5__6;

		[Token(Token = "0x40027A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform <inOriginalParent>5__7;

		[Token(Token = "0x170002BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600254C")]
			[Address(RVA = "0x2242F3C", Offset = "0x2242F3C", VA = "0x2242F3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600254E")]
			[Address(RVA = "0x2242FCC", Offset = "0x2242FCC", VA = "0x2242FCC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002549")]
		[Address(RVA = "0x223F730", Offset = "0x223F730", VA = "0x223F730")]
		[DebuggerHidden]
		public <RotateOut>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600254A")]
		[Address(RVA = "0x224272C", Offset = "0x224272C", VA = "0x224272C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600254B")]
		[Address(RVA = "0x2242730", Offset = "0x2242730", VA = "0x2242730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600254D")]
		[Address(RVA = "0x2242F44", Offset = "0x2242F44", VA = "0x2242F44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B1C", Offset = "0x5C2B1C")]
	private sealed class <ShowClassInfo>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40027A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40027AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeMenu <>4__this;

		[Token(Token = "0x170002BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002552")]
			[Address(RVA = "0x2243298", Offset = "0x2243298", VA = "0x2243298", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002554")]
			[Address(RVA = "0x2243328", Offset = "0x2243328", VA = "0x2243328", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600254F")]
		[Address(RVA = "0x223F800", Offset = "0x223F800", VA = "0x223F800")]
		[DebuggerHidden]
		public <ShowClassInfo>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6002550")]
		[Address(RVA = "0x2242FD4", Offset = "0x2242FD4", VA = "0x2242FD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002551")]
		[Address(RVA = "0x2242FD8", Offset = "0x2242FD8", VA = "0x2242FD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002553")]
		[Address(RVA = "0x22432A0", Offset = "0x22432A0", VA = "0x22432A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20004F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B2C", Offset = "0x5C2B2C")]
	private sealed class <HideClassInfo>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40027AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40027AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizeMenu <>4__this;

		[Token(Token = "0x170002C0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002558")]
			[Address(RVA = "0x2242694", Offset = "0x2242694", VA = "0x2242694", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600255A")]
			[Address(RVA = "0x2242724", Offset = "0x2242724", VA = "0x2242724", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002555")]
		[Address(RVA = "0x223F8D0", Offset = "0x223F8D0", VA = "0x223F8D0")]
		[DebuggerHidden]
		public <HideClassInfo>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x6002556")]
		[Address(RVA = "0x22423D0", Offset = "0x22423D0", VA = "0x22423D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002557")]
		[Address(RVA = "0x22423D4", Offset = "0x22423D4", VA = "0x22423D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002559")]
		[Address(RVA = "0x224269C", Offset = "0x224269C", VA = "0x224269C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject mirrorFighterPrefab;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI coins;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI skillRating;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI levelClass;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI leagueLabel;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Image badgeBackground;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image badgeForeground;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B74", Offset = "0x5C5B74")]
	public GameObject classBtnPrefab;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject customizeBtnPrefab;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject toCampaignBtn;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject classPanel;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject customizePanel;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject classInfoPanel;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject showDescriptionsBtn;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject hideDescriptionsBtn;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5B8C", Offset = "0x5C5B8C")]
	public List<GameObject> subMenuTitles;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> subMenuButtons;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5BA4", Offset = "0x5C5BA4")]
	public Fighter mirrorFighter;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> classBtns;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<GameObject> customizeBtns;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Dictionary<Glamor.Type, SubMenuInfo> subMenus;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Glamor.Type currentMenu;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int pageLength;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool init;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int tweensDone;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Glamor lastSelection;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool backToMultiplayerMenu;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject BackToMultiplayerButton;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject BackToCampaignButton;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Glamor waitingToUnlock;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject DamageResistanceLabel;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x223BB58", Offset = "0x223BB58", VA = "0x223BB58")]
	private void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x223BB5C", Offset = "0x223BB5C", VA = "0x223BB5C")]
	private void Init()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x223C900", Offset = "0x223C900", VA = "0x223C900")]
	public void StartPAXSession()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x223CA10", Offset = "0x223CA10", VA = "0x223CA10")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x223E518", Offset = "0x223E518", VA = "0x223E518")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x223E5F8", Offset = "0x223E5F8", VA = "0x223E5F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x223EA70", Offset = "0x223EA70", VA = "0x223EA70")]
	public void Back()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x223BFC0", Offset = "0x223BFC0", VA = "0x223BFC0")]
	public void BuildSubMenus()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x223C560", Offset = "0x223C560", VA = "0x223C560")]
	public void SetClassButtons()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x223F458", Offset = "0x223F458", VA = "0x223F458")]
	public void ToArmorMenu()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x223F49C", Offset = "0x223F49C", VA = "0x223F49C")]
	public void ToHelmMenu()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x223F4E0", Offset = "0x223F4E0", VA = "0x223F4E0")]
	public void ToMetalMenu()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x223F524", Offset = "0x223F524", VA = "0x223F524")]
	public void ToAccentMenu()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x223F568", Offset = "0x223F568", VA = "0x223F568")]
	public void ToCampaign()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x223F58C", Offset = "0x223F58C", VA = "0x223F58C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCA98", Offset = "0x5CCA98")]
	public IEnumerator TweenOut()
	{
		return null;
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x223F638", Offset = "0x223F638", VA = "0x223F638")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCB10", Offset = "0x5CCB10")]
	public IEnumerator RotateOut(GameObject outPanel, GameObject inPanel, GameObject pivot, float time)
	{
		return null;
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x223F750", Offset = "0x223F750", VA = "0x223F750")]
	public void ToShowClassInfo()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x223F774", Offset = "0x223F774", VA = "0x223F774")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCB88", Offset = "0x5CCB88")]
	public IEnumerator ShowClassInfo()
	{
		return null;
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x223F820", Offset = "0x223F820", VA = "0x223F820")]
	public void ToHideClassInfo()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x223F844", Offset = "0x223F844", VA = "0x223F844")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCC00", Offset = "0x5CCC00")]
	public IEnumerator HideClassInfo()
	{
		return null;
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x223D2E4", Offset = "0x223D2E4", VA = "0x223D2E4")]
	public void SwitchMenu(Glamor.Type newMenu, bool instant = false)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x222EADC", Offset = "0x222EADC", VA = "0x222EADC")]
	public void SelectClass(FighterClass classType)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x223E318", Offset = "0x223E318", VA = "0x223E318")]
	public void SetSelectedClassButton()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x22404B0", Offset = "0x22404B0", VA = "0x22404B0")]
	public void SelectOption(Glamor glamor, bool temp = false)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x2241128", Offset = "0x2241128", VA = "0x2241128")]
	public void CoinUnlockModal(Glamor glamor)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x224146C", Offset = "0x224146C", VA = "0x224146C")]
	public void NotEnoughCoinsModal(Glamor glamor)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x2241700", Offset = "0x2241700", VA = "0x2241700")]
	public void UnlockConfirm(bool dlc)
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x2241F24", Offset = "0x2241F24", VA = "0x2241F24")]
	public void UnlockCancel()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x2241F90", Offset = "0x2241F90", VA = "0x2241F90")]
	public void DlcUnlockModal(Glamor glamor)
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x22422AC", Offset = "0x22422AC", VA = "0x22422AC")]
	public void DlcUnlockProcess()
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x223F8F0", Offset = "0x223F8F0", VA = "0x223F8F0")]
	public bool IsSelected(Glamor glamor)
	{
		return default(bool);
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x223E31C", Offset = "0x223E31C", VA = "0x223E31C")]
	public void SetSelectedLoadoutButton()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x223D9A8", Offset = "0x223D9A8", VA = "0x223D9A8")]
	public void SetPlayerData()
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x22423C0", Offset = "0x22423C0", VA = "0x22423C0")]
	public CustomizeMenu()
	{
	}
}
[Token(Token = "0x200011D")]
public class SubMenuInfo
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Glamor.Type type;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<Glamor> options;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject titleObject;

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x23A65A8", Offset = "0x23A65A8", VA = "0x23A65A8")]
	public SubMenuInfo(Glamor.Type type, GameObject titleObject)
	{
	}
}
[Token(Token = "0x200011E")]
public class CustomizeMenuButton : MonoBehaviour
{
	[Token(Token = "0x20004FA")]
	public enum State
	{
		[Token(Token = "0x40027AF")]
		Idle,
		[Token(Token = "0x40027B0")]
		FlipWait,
		[Token(Token = "0x40027B1")]
		FlipClose,
		[Token(Token = "0x40027B2")]
		FlipOpen,
		[Token(Token = "0x40027B3")]
		SlidePrevWait,
		[Token(Token = "0x40027B4")]
		SlidePrevClose,
		[Token(Token = "0x40027B5")]
		SlidePrevOpen,
		[Token(Token = "0x40027B6")]
		SlideNextWait,
		[Token(Token = "0x40027B7")]
		SlideNextClose,
		[Token(Token = "0x40027B8")]
		SlideNextOpen
	}

	[Token(Token = "0x20004FB")]
	public class TransitionData
	{
		[Token(Token = "0x40027B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Glamor newGlamor;

		[Token(Token = "0x40027BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string newTitle;

		[Token(Token = "0x40027BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool newSelected;

		[Token(Token = "0x40027BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool hideFlag;

		[Token(Token = "0x600255B")]
		[Address(RVA = "0x2240434", Offset = "0x2240434", VA = "0x2240434")]
		public TransitionData()
		{
		}

		[Token(Token = "0x600255C")]
		[Address(RVA = "0x223FC44", Offset = "0x223FC44", VA = "0x223FC44")]
		public TransitionData(Glamor newGlamor, bool isSelected, bool hideFlag = false)
		{
		}
	}

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public RectTransform box;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UIGradient gradient;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomizeMenu parentMenu;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject coinObj;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI dmgPctText;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI coinText;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int id;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int optionId;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Glamor glamor;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Gradient normalGradient;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Gradient selectedGradient;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Gradient lockedGradient;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startWidth;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float waitTime;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float actionTime;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float timeElapsed;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float cost;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool selected;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State state;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TransitionData transitionData;

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x22439B8", Offset = "0x22439B8", VA = "0x22439B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x2243AA0", Offset = "0x2243AA0", VA = "0x2243AA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x2240408", Offset = "0x2240408", VA = "0x2240408")]
	public void StartFlip(float delay, float flipTime, TransitionData transitionData)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x2244338", Offset = "0x2244338", VA = "0x2244338")]
	public void StartSlideNext(float delay, float slideTime, TransitionData transitionData)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x2244364", Offset = "0x2244364", VA = "0x2244364")]
	public void StartSlidePrev(float delay, float slideTime, TransitionData transitionData)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x223FC94", Offset = "0x223FC94", VA = "0x223FC94")]
	public void SetNewData()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x2244390", Offset = "0x2244390", VA = "0x2244390")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x22444B8", Offset = "0x22444B8", VA = "0x22444B8")]
	public void Show()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x22445D0", Offset = "0x22445D0", VA = "0x22445D0")]
	public void Select()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x22422E8", Offset = "0x22422E8", VA = "0x22422E8")]
	public void SetSelectedState(bool selected)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x224476C", Offset = "0x224476C", VA = "0x224476C")]
	public CustomizeMenuButton()
	{
	}
}
[Token(Token = "0x200011F")]
public class CustomLight : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public StickVisual visual;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject attachObject;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color color;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float targetIntensity;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float currentIntensity;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float fadeSpeed;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool keepOn;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float length;

	[Token(Token = "0x17000062")]
	public Vector4 TotalColor
	{
		[Token(Token = "0x600066D")]
		[Address(RVA = "0x2232D24", Offset = "0x2232D24", VA = "0x2232D24")]
		get
		{
			return default(Vector4);
		}
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x2232A54", Offset = "0x2232A54", VA = "0x2232A54")]
	public void Relinquish()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x2232A6C", Offset = "0x2232A6C", VA = "0x2232A6C")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x2232DF0", Offset = "0x2232DF0", VA = "0x2232DF0")]
	public CustomLight()
	{
	}
}
[Token(Token = "0x2000120")]
public class CustomMatchSettings : MonoBehaviour
{
	[Token(Token = "0x20004FC")]
	public enum Setting
	{
		[Token(Token = "0x40027BE")]
		NormalTimeScale,
		[Token(Token = "0x40027BF")]
		MeleeTimeScale,
		[Token(Token = "0x40027C0")]
		OuchyRingSide,
		[Token(Token = "0x40027C1")]
		OuchyRingForward,
		[Token(Token = "0x40027C2")]
		HostStartingHealth,
		[Token(Token = "0x40027C3")]
		ClientStartingHealth,
		[Token(Token = "0x40027C4")]
		HostDamageMult,
		[Token(Token = "0x40027C5")]
		ClientDamageMult,
		[Token(Token = "0x40027C6")]
		HostEnergyRegenMult,
		[Token(Token = "0x40027C7")]
		ClientEnergyRegenMult,
		[Token(Token = "0x40027C8")]
		TwoSidedCombat,
		[Token(Token = "0x40027C9")]
		UnlimitedEnergy,
		[Token(Token = "0x40027CA")]
		MeleeAllowed,
		[Token(Token = "0x40027CB")]
		RangedAllowed
	}

	[Token(Token = "0x20004FD")]
	public class SettingData
	{
		[Token(Token = "0x40027CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Setting setting;

		[Token(Token = "0x40027CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x40027CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x40027CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public object value;

		[Token(Token = "0x40027D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object defaultValue;

		[Token(Token = "0x600255D")]
		[Address(RVA = "0x2234F94", Offset = "0x2234F94", VA = "0x2234F94")]
		public SettingData(Setting setting, string name, Type type, object defaultValue)
		{
		}

		[Token(Token = "0x600255E")]
		[Address(RVA = "0x2236B14", Offset = "0x2236B14", VA = "0x2236B14")]
		public int GetPercent()
		{
			return default(int);
		}

		[Token(Token = "0x600255F")]
		[Address(RVA = "0x2232EE0", Offset = "0x2232EE0", VA = "0x2232EE0")]
		public float GetFloatValue()
		{
			return default(float);
		}

		[Token(Token = "0x6002560")]
		[Address(RVA = "0x2233D30", Offset = "0x2233D30", VA = "0x2233D30")]
		public bool GetBoolValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6002561")]
		[Address(RVA = "0x2236124", Offset = "0x2236124", VA = "0x2236124")]
		public string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002562")]
		[Address(RVA = "0x223626C", Offset = "0x223626C", VA = "0x223626C")]
		public string GetFormattedValue()
		{
			return null;
		}

		[Token(Token = "0x6002563")]
		[Address(RVA = "0x22366F4", Offset = "0x22366F4", VA = "0x22366F4")]
		public bool IsHigherThanDefault()
		{
			return default(bool);
		}

		[Token(Token = "0x6002564")]
		[Address(RVA = "0x2236950", Offset = "0x2236950", VA = "0x2236950")]
		public bool IsLowerThanDefault()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Dictionary<Setting, SettingData> settings;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Setting> enabledSettings;

	[Token(Token = "0x17000063")]
	public float meleeTimeScale
	{
		[Token(Token = "0x600066F")]
		[Address(RVA = "0x2232E48", Offset = "0x2232E48", VA = "0x2232E48")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000670")]
		[Address(RVA = "0x2232F48", Offset = "0x2232F48", VA = "0x2232F48")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public float normalTimeScale
	{
		[Token(Token = "0x6000671")]
		[Address(RVA = "0x2233014", Offset = "0x2233014", VA = "0x2233014")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000672")]
		[Address(RVA = "0x22330AC", Offset = "0x22330AC", VA = "0x22330AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public float ouchyRingSide
	{
		[Token(Token = "0x6000673")]
		[Address(RVA = "0x2233178", Offset = "0x2233178", VA = "0x2233178")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000674")]
		[Address(RVA = "0x2233210", Offset = "0x2233210", VA = "0x2233210")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public float ouchyRingForward
	{
		[Token(Token = "0x6000675")]
		[Address(RVA = "0x22332DC", Offset = "0x22332DC", VA = "0x22332DC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000676")]
		[Address(RVA = "0x2233374", Offset = "0x2233374", VA = "0x2233374")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public float hostStartingHealth
	{
		[Token(Token = "0x6000677")]
		[Address(RVA = "0x2233440", Offset = "0x2233440", VA = "0x2233440")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000678")]
		[Address(RVA = "0x22334D8", Offset = "0x22334D8", VA = "0x22334D8")]
		set
		{
		}
	}

	[Token(Token = "0x17000068")]
	public float clientStartingHealth
	{
		[Token(Token = "0x6000679")]
		[Address(RVA = "0x22335A4", Offset = "0x22335A4", VA = "0x22335A4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600067A")]
		[Address(RVA = "0x223363C", Offset = "0x223363C", VA = "0x223363C")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public float hostDamageMult
	{
		[Token(Token = "0x600067B")]
		[Address(RVA = "0x2233708", Offset = "0x2233708", VA = "0x2233708")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600067C")]
		[Address(RVA = "0x22337A0", Offset = "0x22337A0", VA = "0x22337A0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006A")]
	public float clientDamageMult
	{
		[Token(Token = "0x600067D")]
		[Address(RVA = "0x223386C", Offset = "0x223386C", VA = "0x223386C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600067E")]
		[Address(RVA = "0x2233904", Offset = "0x2233904", VA = "0x2233904")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public float hostEnergyRegenMult
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0x22339D0", Offset = "0x22339D0", VA = "0x22339D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000680")]
		[Address(RVA = "0x2233A68", Offset = "0x2233A68", VA = "0x2233A68")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public float clientEnergyRegenMult
	{
		[Token(Token = "0x6000681")]
		[Address(RVA = "0x2233B34", Offset = "0x2233B34", VA = "0x2233B34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000682")]
		[Address(RVA = "0x2233BCC", Offset = "0x2233BCC", VA = "0x2233BCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public bool twoSidedCombat
	{
		[Token(Token = "0x6000683")]
		[Address(RVA = "0x2233C98", Offset = "0x2233C98", VA = "0x2233C98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000684")]
		[Address(RVA = "0x2233D98", Offset = "0x2233D98", VA = "0x2233D98")]
		set
		{
		}
	}

	[Token(Token = "0x1700006E")]
	public bool unlimitedEnergy
	{
		[Token(Token = "0x6000685")]
		[Address(RVA = "0x2233E58", Offset = "0x2233E58", VA = "0x2233E58")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000686")]
		[Address(RVA = "0x2233EF0", Offset = "0x2233EF0", VA = "0x2233EF0")]
		set
		{
		}
	}

	[Token(Token = "0x1700006F")]
	public bool meleeAllowed
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0x2233FB0", Offset = "0x2233FB0", VA = "0x2233FB0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0x2234048", Offset = "0x2234048", VA = "0x2234048")]
		set
		{
		}
	}

	[Token(Token = "0x17000070")]
	public bool rangedAllowed
	{
		[Token(Token = "0x6000689")]
		[Address(RVA = "0x2234108", Offset = "0x2234108", VA = "0x2234108")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600068A")]
		[Address(RVA = "0x22341A0", Offset = "0x22341A0", VA = "0x22341A0")]
		set
		{
		}
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0x2234260", Offset = "0x2234260", VA = "0x2234260")]
	private void Awake()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x2234FD0", Offset = "0x2234FD0", VA = "0x2234FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x2234FD4", Offset = "0x2234FD4", VA = "0x2234FD4")]
	public void Reset()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x2235170", Offset = "0x2235170", VA = "0x2235170")]
	public CustomSettingsEvent ToEvent()
	{
		return null;
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x22357F4", Offset = "0x22357F4", VA = "0x22357F4")]
	public void SendEvent()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x2235824", Offset = "0x2235824", VA = "0x2235824")]
	public void Set(CustomSettingsEvent cse)
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x2235FEC", Offset = "0x2235FEC", VA = "0x2235FEC")]
	public void Set(Setting setting, object value)
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x2236088", Offset = "0x2236088", VA = "0x2236088")]
	public string GetName(Setting setting)
	{
		return null;
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x22361D0", Offset = "0x22361D0", VA = "0x22361D0")]
	public string GetFormattedValue(Setting setting)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x2236658", Offset = "0x2236658", VA = "0x2236658")]
	public bool IsHigherThanDefault(Setting setting)
	{
		return default(bool);
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x22368B4", Offset = "0x22368B4", VA = "0x22368B4")]
	public bool IsLowerThanDefault(Setting setting)
	{
		return default(bool);
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x2236B0C", Offset = "0x2236B0C", VA = "0x2236B0C")]
	public CustomMatchSettings()
	{
	}
}
[Token(Token = "0x2000121")]
public class CustomMaterialSetting : MonoBehaviour
{
	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string settingName;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C5BBC", Offset = "0x5C5BBC")]
	public float Roughness;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float BrightnessModifier;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float SimpleRoughness;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float SimpleShininess;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C5BD4", Offset = "0x5C5BD4")]
	public float Metallic;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C5BE4", Offset = "0x5C5BE4")]
	public float Specularity;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool lightFresnel;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x2236B90", Offset = "0x2236B90", VA = "0x2236B90")]
	public void ApplyPrimary(Material m)
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x2237224", Offset = "0x2237224", VA = "0x2237224")]
	public void ApplySecondary(Material m)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x2237668", Offset = "0x2237668", VA = "0x2237668")]
	public CustomMaterialSetting()
	{
	}
}
[Token(Token = "0x2000122")]
public class DataHelper
{
	[Token(Token = "0x20004FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B3C", Offset = "0x5C2B3C")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x40027D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveData wave;

		[Token(Token = "0x6002565")]
		[Address(RVA = "0x2245948", Offset = "0x2245948", VA = "0x2245948")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002566")]
		[Address(RVA = "0x2247AD0", Offset = "0x2247AD0", VA = "0x2247AD0")]
		internal bool <TryLoadMatch>b__0(WaveInfo wi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x2241A70", Offset = "0x2241A70", VA = "0x2241A70")]
	public static void SaveCampaign()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x2244774", Offset = "0x2244774", VA = "0x2244774")]
	public static ClassInfo TryLoadCampaign(string playerName, string playerClass)
	{
		return null;
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x2244A2C", Offset = "0x2244A2C", VA = "0x2244A2C")]
	public static void DeleteCampaignData(string playerName, string playerClass)
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x2244ADC", Offset = "0x2244ADC", VA = "0x2244ADC")]
	public static void SaveMatch(MatchInfo mi)
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x224502C", Offset = "0x224502C", VA = "0x224502C")]
	public static bool TryLoadMatch(MatchInfo mi)
	{
		return default(bool);
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x2245950", Offset = "0x2245950", VA = "0x2245950")]
	public static void SaveUnlocks(List<Glamor> glamors)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x2245A7C", Offset = "0x2245A7C", VA = "0x2245A7C")]
	public static Dictionary<int, Glamor> TryLoadUnlocks()
	{
		return null;
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x2245EA4", Offset = "0x2245EA4", VA = "0x2245EA4")]
	public static List<Glamor> ConvertUnlocksFromCSV()
	{
		return null;
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x2246C14", Offset = "0x2246C14", VA = "0x2246C14")]
	public static void SaveDlc(List<DlcItem> dlcItems)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x2246D40", Offset = "0x2246D40", VA = "0x2246D40")]
	public static Dictionary<int, DlcItem> TryLoadDlcs()
	{
		return null;
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x2247168", Offset = "0x2247168", VA = "0x2247168")]
	public static List<DlcItem> ConvertDlcFromCSV()
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x2247AC8", Offset = "0x2247AC8", VA = "0x2247AC8")]
	public DataHelper()
	{
	}
}
[Token(Token = "0x2000123")]
public class Vector3SerializationSurrogate : ISerializationSurrogate
{
	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x232CAA8", Offset = "0x232CAA8", VA = "0x232CAA8", Slot = "4")]
	public void GetObjectData(object obj, SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x232CBE8", Offset = "0x232CBE8", VA = "0x232CBE8", Slot = "5")]
	public object SetObjectData(object obj, SerializationInfo info, StreamingContext context, ISurrogateSelector selector)
	{
		return null;
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x232CDD8", Offset = "0x232CDD8", VA = "0x232CDD8")]
	public Vector3SerializationSurrogate()
	{
	}
}
[Serializable]
[Token(Token = "0x2000124")]
public class MatchData
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<WaveData> waves;

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x2350C94", Offset = "0x2350C94", VA = "0x2350C94")]
	public MatchData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000125")]
public class WaveData
{
	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string waveId;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<string> fighterIds;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x24EA518", Offset = "0x24EA518", VA = "0x24EA518")]
	public WaveData()
	{
	}
}
[Token(Token = "0x2000126")]
public class DebugOutput : MonoBehaviour
{
	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshPro fpsText;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshPro cpuText;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshPro gpuText;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro levelsText;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro networkText;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro networkText2;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextMeshPro testNetworkText;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float updateTimer;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float updateInterval;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int ffrLevel;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int renderScaleLevel;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool leftHeld;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool rightHeld;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	private bool upHeld;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	private bool downHeld;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion lastRotation;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool checkingFrames;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int lastServerFrame;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject FlashQuad;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int flashDelay;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int flashFrame;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool checkingFlash;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int flashCountdown;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int mostRecentServerFrameReceived;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int estimatedServerFrame;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool bothJoysticksDown;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject OldShadows;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject NewShadows;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public static bool toggleme;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int lastPingAliased;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int lastPingNetwork;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x2247B1C", Offset = "0x2247B1C", VA = "0x2247B1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x2247D00", Offset = "0x2247D00", VA = "0x2247D00")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x2248F14", Offset = "0x2248F14", VA = "0x2248F14")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x2249FB0", Offset = "0x2249FB0", VA = "0x2249FB0")]
	public DebugOutput()
	{
	}
}
[Token(Token = "0x2000127")]
public class DlcHelper
{
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x21D7B8C", Offset = "0x21D7B8C", VA = "0x21D7B8C")]
	public static void UnlockBoughtDlc()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x21D7C7C", Offset = "0x21D7C7C", VA = "0x21D7C7C")]
	public static bool ToDlcStore(Glamor glamor)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x21D7E18", Offset = "0x21D7E18", VA = "0x21D7E18")]
	public static void FetchPurchasedProducts()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x21D7EDC", Offset = "0x21D7EDC", VA = "0x21D7EDC")]
	private static void GetViewerPurchasesCallback(Message<PurchaseList> msg)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x21D7FD4", Offset = "0x21D7FD4", VA = "0x21D7FD4")]
	private static void ProcessPurchases(Message<PurchaseList> msg)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x21D8A38", Offset = "0x21D8A38", VA = "0x21D8A38")]
	private static void LaunchOculusCheckoutFlowCallback(Message<Purchase> msg)
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x21D8BD0", Offset = "0x21D8BD0", VA = "0x21D8BD0")]
	private static void LaunchViveportCheckoutFlowCallback(string purchaseId)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x21D8D08", Offset = "0x21D8D08", VA = "0x21D8D08")]
	public DlcHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class DlcItem
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int id;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string name;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string oculusId;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint steamId;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string viveportId;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public string viveportPrice;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> glamorIds;

	[NonSerialized]
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<Glamor> glamors;

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x21D8D10", Offset = "0x21D8D10", VA = "0x21D8D10")]
	public DlcItem(int id, string name, string oculusId, uint steamId, string viveportId, string viveportPrice, List<int> glamorIds)
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x21D8D58", Offset = "0x21D8D58", VA = "0x21D8D58")]
	public void PopulateLinkedGlamors(Dictionary<int, Glamor> gDict)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x21D884C", Offset = "0x21D884C", VA = "0x21D884C")]
	public void Unlock()
	{
	}
}
[Token(Token = "0x2000129")]
public class Email : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20004FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B4C", Offset = "0x5C2B4C")]
	private sealed class <>c
	{
		[Token(Token = "0x40027D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40027D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static RemoteCertificateValidationCallback <>9__1_0;

		[Token(Token = "0x6002568")]
		[Address(RVA = "0x21D9AD8", Offset = "0x21D9AD8", VA = "0x21D9AD8")]
		public <>c()
		{
		}

		[Token(Token = "0x6002569")]
		[Address(RVA = "0x21D9AE0", Offset = "0x21D9AE0", VA = "0x21D9AE0")]
		internal bool <SendEmail>b__1_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TextMeshProUGUI debugBox;

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x21D8F48", Offset = "0x21D8F48", VA = "0x21D8F48")]
	public static void SendEmail(string address, string subject, string body, [Optional] TextMeshProUGUI textBox)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x21D940C", Offset = "0x21D940C", VA = "0x21D940C")]
	public static void SendCompletedCallback(object sender, AsyncCompletedEventArgs e)
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x21D9A5C", Offset = "0x21D9A5C", VA = "0x21D9A5C")]
	public Email()
	{
	}
}
[Token(Token = "0x200012A")]
public class EmailMenu : MonoBehaviour
{
	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshPro keyboardInput;

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x21D9AE8", Offset = "0x21D9AE8", VA = "0x21D9AE8")]
	public void GetEmailFromPrefs()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x21D9B7C", Offset = "0x21D9B7C", VA = "0x21D9B7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x21D9CC0", Offset = "0x21D9CC0", VA = "0x21D9CC0")]
	public void Back()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x21D9E20", Offset = "0x21D9E20", VA = "0x21D9E20")]
	public void Done()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x21D9FC4", Offset = "0x21D9FC4", VA = "0x21D9FC4")]
	public EmailMenu()
	{
	}
}
[Token(Token = "0x200012B")]
public class Fighter : MonoBehaviour
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Hand RightHand;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Hand LeftHand;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRightHanded;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isHumanoid;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int projectileIDcounter;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterClass fighterClass;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject BoundaryMarker;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ReloadPointer;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject Head;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject HeadTracker;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float headTrackerLerpAmt;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform TorsoTopPos;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform LowerBodyPos;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Torso;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform LowerBody;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform HalfTorsoRot;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float LowerBodyYRotSpeed;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float waistTurnSmoothing;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Transform ShoulderVizHandle;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float breathingTimestamp;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float breathingSpeed;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float breathingDepth;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float eyeWideness;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float targetEyeWideness;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float eyeTilt;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float targetEyeTilt;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform LeftShoulderHandle;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform RightShoulderHandle;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ArmorSet currentArmorSet;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject HelmModel;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public GameObject UpperBodyModel;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject LowerBodyModel;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public GameObject RightHandModel;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject LeftHandModel;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public GameObject RightEye;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObject LeftEye;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public GameObject RightEyeBall;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObject LeftEyeBall;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public CustomMaterialSetting primaryMaterialSettings;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CustomMaterialSetting secondaryMaterialSettings;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public ArmorType StartingArmor;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public HelmType StartingHelm;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Color mainColor;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Color metalColor;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Color lightColor;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject ChargeupMesh;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ParticleSystem ChargeupParticles;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public ParticleSystem BlitzParticles;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool isChargingUp;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool wasChargingUp;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private AudioSource chargeupStartSFX;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioSource chargeupLoopSFX;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Vector3 startingHomePos;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Vector3 homePos;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float health;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float shield;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float energy;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float maxHealth;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float maxShield;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float maxEnergy;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float shieldRegenRate;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shieldRegenScalar;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float exchangeSpeedScalar;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float blitzDrainScalar;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float actualEnergyRegenned;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float actualGhostHealthRegenned;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float shieldDamageScalar;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float energyPerShield;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static float steadyEnergyRegenRate;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float damageToShieldLeech;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float ghostHealth;

	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static float ghostHealthRegenScalar;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static float ghostHealthVulnerabilityScalar;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static float steadyGhostHealthRegenRate;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float ghostHealthRegenRate;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static float fighterStartDist;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float ghostHealthLeech;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static float rangedDamageScalar;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static float rangedCostScalar;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static float startingHealth;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static float startBlitzCost;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static float maxEnergyRegen;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float headDamageMult;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static bool triggeredShields;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public static bool dotResummon;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static float distanceResummonBoost;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static float defenderSpeedBoost;

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static float zDamageSensitivity;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static bool speedDamageSensitivity;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public static bool showDamageNumbers;

	[NonSerialized]
	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float shieldRegenAcceleration;

	[NonSerialized]
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float energyPerShieldExchangeSpeed;

	[NonSerialized]
	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float blitzEnergyDrainRate;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public FighterDriverType driverType;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public AI ai;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Team team;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public bool dead;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	public bool ignoreHomePos;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x162")]
	public bool isBlitzing;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x163")]
	private bool wasBlitzing;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Fighter BlitzTarget;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float blitzDelayTime;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private AudioSource blitzSound;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private float boundsLeniencyTimer;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	private float boundsTimer;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private float vertBoundsTimer;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float upperHeightBound;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public float lowerHeightBound;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float lastFrameTimestamp;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 lastHeadPos;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	private Quaternion lastHeadOrientation;

	[NonSerialized]
	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public Vector3 headVelocity;

	[NonSerialized]
	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Quaternion headAngV;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Vector3 lastRightHandPos;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Quaternion lastRightHandOrientation;

	[NonSerialized]
	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public Vector3 rightHandVelocity;

	[NonSerialized]
	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public Quaternion rightHandAngV;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private Vector3 lastLeftHandPos;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	private Quaternion lastLeftHandOrientation;

	[NonSerialized]
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public Vector3 leftHandVelocity;

	[NonSerialized]
	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Quaternion leftHandAngV;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public List<int> blitzFrames;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public int nextUnprocessedBlitzFrameIndex;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public AnimationCurve blitzCurve;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	private bool hasRetreatScheduled;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public float lastBlitzScaledTimestamp;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public float progressAtLastBlitzScaledTimestamp;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public int testCurrentFrame;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public int testBlitzFrame;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public bool isHost;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5BF4", Offset = "0x5C5BF4")]
	public bool chargeupEnabled;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x252")]
	public bool blitzingEnabled;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x253")]
	public bool dontCleanUp;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public bool invulnerable;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x255")]
	public bool cantDealDamage;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public List<ParticleSystem> DeathSystems;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public GameObject DeathSystemPrefab;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public float DeathParticlesNumScalar;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	private Vector3 targetHomePos;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public ArmorType armorType;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public HelmType helmType;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public float turnSensitivity;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public float turnBias;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public bool forbidLights;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public TestHandBehavior networkBehavior;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Texture testtex;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public MeshRenderer BoundaryMesh;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public MeshRenderer LowerBoundaryMesh;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public MeshRenderer UpperBoundaryMesh;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	private int lastStandsLeft;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public GameObject SpotlightHandle;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public GameObject SpotlightBeam;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public GameObject SpotlightBeamPivot;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public GameObject SpotlightCircle;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float SpotlightPower;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public Transform SpotlightOriginPoint;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public GameObject SpotlightOrigin;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public MeshRenderer SpotlightSprite;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public MeshRenderer SpotlightBloomSprite;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	private float spotlightFadeTimer;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float spotlightYRotSpeed;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float spotlightTargetXRot;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	private float spotlightXRotSpeed;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public float spotlightXAngle;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float spotlightYAngle;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	private float spotlightDistance;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float spotlightTargetDistance;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public bool spotlightsOn;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public float blitzProgress;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public float evaluatedProgress;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private List<Material> DynamicMaterials;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public Material currentShadowMat;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public Material currentHelmMat;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public Material currentArmorMat;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public Material currentHandMat;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public Material currentEyeMat;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public bool suppressRecharge;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x305")]
	public bool checkForWinLossOnDeath;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x306")]
	public bool blitzable;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x307")]
	public bool initialized;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private float lastEvaluatedProgress;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public ResourceBar myHealthBar1;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public ResourceBar myHealthBar2;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public ResourceBar myEnergyBar1;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public ResourceBar myEnergyBar2;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public JumbotronBar myResBar1;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public JumbotronBar myResBar2;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float shoulderscale;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public float shoulderoffset;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	public float extraDamageBonus;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public float extraArmorBonus;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public float extraRegenBonus;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public float leagueDamageScalar;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	private bool pauseparticles;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33D")]
	public bool friendlyWeaponColliding;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33E")]
	private bool wasFriendlyWeaponColliding;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public float timeSinceLastFriendlyHandCollision;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public bool requireFriendlyHandCollisionToo;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public GameObject ExtraSelfHitCollision;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	public GameObject ScytheSelfHitCollision;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public GameObject DefaultSelfHitCollision;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	private Dictionary<MeshRenderer, Vector3[]> vertCache;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private MeshRenderer defaultr;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	public float headBackDist;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public float torsoPitchScalar;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	public float heightPitchScalar;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public float bendHeight;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private HandPoseType prevRightPose;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private HandPoseType prevLeftPose;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public float damageFXRadius;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public float dmgFXPush;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	public float dmgFXColoration;

	[Token(Token = "0x17000071")]
	public Hand MainHand
	{
		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x21DBF30", Offset = "0x21DBF30", VA = "0x21DBF30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000072")]
	public Hand OffHand
	{
		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x21DD380", Offset = "0x21DD380", VA = "0x21DD380")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x21DD398", Offset = "0x21DD398", VA = "0x21DD398")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x21DF920", Offset = "0x21DF920", VA = "0x21DF920")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x21DFE4C", Offset = "0x21DFE4C", VA = "0x21DFE4C")]
	public void SetDifficultyBonuses()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x21E0074", Offset = "0x21E0074", VA = "0x21E0074")]
	public void SetLevelBonuses(int level)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x21E0180", Offset = "0x21E0180", VA = "0x21E0180")]
	public void ProcessNextFrameTimeData(FrameTimeData timeData)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x21E09A0", Offset = "0x21E09A0", VA = "0x21E09A0")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x21E6234", Offset = "0x21E6234", VA = "0x21E6234")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x21EE048", Offset = "0x21EE048", VA = "0x21EE048")]
	private void HandleResources0()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x21EE560", Offset = "0x21EE560", VA = "0x21EE560")]
	private void HandleResources1()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x21EC380", Offset = "0x21EC380", VA = "0x21EC380")]
	private void HandleResources2()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x21EDE38", Offset = "0x21EDE38", VA = "0x21EDE38")]
	public void TakeHit(float damage, Vector3 point, Vector3 normal, bool extraDamage = false)
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x21EEA78", Offset = "0x21EEA78", VA = "0x21EEA78")]
	private void TakeHealthDamage(float damage, Vector3 point, Vector3 normal, bool extraDamage = false)
	{
	}

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x21F1A44", Offset = "0x21F1A44", VA = "0x21F1A44")]
	private void TakeShieldDamage(float damage, Vector3 point, Vector3 normal)
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x21F1E38", Offset = "0x21F1E38", VA = "0x21F1E38")]
	public void Die()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x21F3CEC", Offset = "0x21F3CEC", VA = "0x21F3CEC")]
	public void ClearWeapons()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x21F3F3C", Offset = "0x21F3F3C", VA = "0x21F3F3C")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x21F4344", Offset = "0x21F4344", VA = "0x21F4344")]
	public void Blitz()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x21EBF18", Offset = "0x21EBF18", VA = "0x21EBF18")]
	public void Retreat()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x21EBAF8", Offset = "0x21EBAF8", VA = "0x21EBAF8")]
	public void TryAddingRetreat(int frameNum)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x21EAFC0", Offset = "0x21EAFC0", VA = "0x21EAFC0")]
	public void TryAddingBlitz(int frameNum)
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x21F49D0", Offset = "0x21F49D0", VA = "0x21F49D0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x21F4F48", Offset = "0x21F4F48", VA = "0x21F4F48")]
	private int GetHitPointCollisionLayer()
	{
		return default(int);
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x21F4F5C", Offset = "0x21F4F5C", VA = "0x21F4F5C")]
	private int GetTriggerCollisionLayer()
	{
		return default(int);
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x21F4F70", Offset = "0x21F4F70", VA = "0x21F4F70")]
	public void ClearArmor()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x21F51CC", Offset = "0x21F51CC", VA = "0x21F51CC")]
	public GameObject AddArmorPiece(GameObject piece, Transform parent)
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x21DD710", Offset = "0x21DD710", VA = "0x21DD710")]
	public void ApplyArmorSet(ArmorSet set)
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x21DEDF8", Offset = "0x21DEDF8", VA = "0x21DEDF8")]
	public void ApplyHelm(GameObject prefab)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x21F4F1C", Offset = "0x21F4F1C", VA = "0x21F4F1C")]
	public void SetCustomMaterials(CustomMaterialSetting settings, CustomMaterialSetting secondary)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x21F5458", Offset = "0x21F5458", VA = "0x21F5458")]
	public void SetCustomMaterials(CustomMaterialSetting settings, bool primary = true)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x21F3C30", Offset = "0x21F3C30", VA = "0x21F3C30")]
	public void SetBreathingIntensity(float t)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x21E5A90", Offset = "0x21E5A90", VA = "0x21E5A90")]
	public void SetEyeFocalPoint(Vector3 topPreference, Vector3 secondaryPreference)
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x21F7D00", Offset = "0x21F7D00", VA = "0x21F7D00")]
	public void ResetParticles()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x21F7F7C", Offset = "0x21F7F7C", VA = "0x21F7F7C")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x21F860C", Offset = "0x21F860C", VA = "0x21F860C")]
	public void GenerateDeathSystems()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x21FBC90", Offset = "0x21FBC90", VA = "0x21FBC90")]
	public FighterCollision GetFighterCollisionByType(FighterCollisionType type)
	{
		return null;
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x21FBDDC", Offset = "0x21FBDDC", VA = "0x21FBDDC")]
	public void ResetCollisions()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x21FBEC4", Offset = "0x21FBEC4", VA = "0x21FBEC4")]
	public void TestDamageEffect(Vector3 point)
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x21FBEC8", Offset = "0x21FBEC8", VA = "0x21FBEC8")]
	public Fighter()
	{
	}
}
[Token(Token = "0x200012C")]
public enum Team
{
	[Token(Token = "0x4000971")]
	Player,
	[Token(Token = "0x4000972")]
	Enemy
}
[Token(Token = "0x200012D")]
public enum FighterDriverType
{
	[Token(Token = "0x4000974")]
	LocalPlayer,
	[Token(Token = "0x4000975")]
	AI,
	[Token(Token = "0x4000976")]
	Mirroring,
	[Token(Token = "0x4000977")]
	Remote
}
[Token(Token = "0x200012E")]
public class FighterAnim : MonoBehaviour
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float length;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AI ai;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform TargetPointer;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform AnimHeadHandle;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform AnimRightHandHandle;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AnimLeftHandHandle;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool playing;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool controllingInput;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startingTime;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentFrame;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentInput;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fps;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<Vector3> headPos;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> headRot;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private List<Vector3> rightHandPos;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector3> rightHandRot;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<Vector3> leftHandPos;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector3> leftHandRot;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<float> timestamps;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> inputTimestamps;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<int> inputTypes;

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x209DEB8", Offset = "0x209DEB8", VA = "0x209DEB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x209DEBC", Offset = "0x209DEBC", VA = "0x209DEBC")]
	public void SampleHeadAnimationAt(float time, int lastIndex, out int newIndex, out Vector3 localPos, out Quaternion localRot)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x209F6FC", Offset = "0x209F6FC", VA = "0x209F6FC")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x20A1228", Offset = "0x20A1228", VA = "0x20A1228")]
	public void LoadAnimation(TextAsset animData)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x20A1D9C", Offset = "0x20A1D9C", VA = "0x20A1D9C")]
	public FighterAnim()
	{
	}
}
[Token(Token = "0x200012F")]
public class FighterBuilder : MonoBehaviour
{
	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public new string name;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LeagueType league;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int rank;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int skillRating;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmorType armorType;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public HelmType helmType;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialType metalMaterial;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public MaterialType accentMaterial;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FighterClass fighterClass;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private FighterConfiguration fc;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x20A1F2C", Offset = "0x20A1F2C", VA = "0x20A1F2C")]
	public FighterBuilder()
	{
	}
}
[Token(Token = "0x2000130")]
public class FighterCollision : MonoBehaviour
{
	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter fighter;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Collider> myColliders;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float damageMultiplier;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FighterCollisionType type;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MeshRenderer myR;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<FighterHitRecord> HitRecords;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float weakDist;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float weakScale;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3[] vertCache;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color32[] colCache;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3[] originalVerts;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color32[] originalCols;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Mesh myMesh;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<VertData> affectedVerts;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float damageFXRadius;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float dmgFXPush;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float dmgFXColoration;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float maxWeakness;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool initialized;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x20A1F34", Offset = "0x20A1F34", VA = "0x20A1F34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x20A1FCC", Offset = "0x20A1FCC", VA = "0x20A1FCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x20A1FD0", Offset = "0x20A1FD0", VA = "0x20A1FD0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x20A20F4", Offset = "0x20A20F4", VA = "0x20A20F4")]
	public void Initialize()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x20A23C4", Offset = "0x20A23C4", VA = "0x20A23C4")]
	public void SetRenderer(MeshRenderer r)
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x20A2464", Offset = "0x20A2464", VA = "0x20A2464")]
	public FighterHitRecord RecordHit(int frame, float dmg, Vector3 localPos, Vector3 localNormal, bool replayCalc = false)
	{
		return default(FighterHitRecord);
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x20A2704", Offset = "0x20A2704", VA = "0x20A2704")]
	public float GetWeakSpotBonus(Vector3 worldPos)
	{
		return default(float);
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x20A3384", Offset = "0x20A3384", VA = "0x20A3384")]
	public List<VertData> DamageEffect(Vector3 point, Vector3 normal, float damage, bool replayCalc = false)
	{
		return null;
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x20A4010", Offset = "0x20A4010", VA = "0x20A4010")]
	public Vector3 GetFixedCollisionPos(Vector3 worldPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x20A43C0", Offset = "0x20A43C0", VA = "0x20A43C0")]
	public FighterCollision()
	{
	}
}
[Token(Token = "0x2000131")]
public struct FighterHitRecord
{
	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int hitFrame;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float damage;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 localPos;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 worldPos;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 localNormal;
}
[Token(Token = "0x2000132")]
public struct VertData
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int index;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 position;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color32 color;
}
[Token(Token = "0x2000133")]
public enum FighterCollisionType
{
	[Token(Token = "0x40009B5")]
	Head,
	[Token(Token = "0x40009B6")]
	Torso,
	[Token(Token = "0x40009B7")]
	LowerBody,
	[Token(Token = "0x40009B8")]
	RightShoulder,
	[Token(Token = "0x40009B9")]
	LeftShoulder,
	[Token(Token = "0x40009BA")]
	None
}
[Token(Token = "0x2000134")]
public class FighterConfiguration : MonoBehaviour
{
	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public new string name;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LeagueType league;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int rank;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int level;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterClass fighterClass;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int skillRating;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float handSpeed;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float reactionTime;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponType mainHandWeapon;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public WeaponType offHandWeapon;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ArmorType armor;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public HelmType helm;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MaterialType metal;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MaterialType accent;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AIPersonality personality;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float startingHealth;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 startingPoint;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isGoon;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool leftHanded;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool excludeFromTournaments;

	[NonSerialized]
	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public FighterInfo fi;

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x20A44C4", Offset = "0x20A44C4", VA = "0x20A44C4")]
	public void Build()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x20A4F04", Offset = "0x20A4F04", VA = "0x20A4F04")]
	public void Populate(FighterInfo deserializedFighter)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x20A56E8", Offset = "0x20A56E8", VA = "0x20A56E8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCC78", Offset = "0x5CCC78")]
	public void GenerateID()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x20A579C", Offset = "0x20A579C", VA = "0x20A579C")]
	public void CustomDevEdit()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x20A57A0", Offset = "0x20A57A0", VA = "0x20A57A0")]
	public FighterConfiguration()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class FighterInfo
{
	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string id;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LeagueType league;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int rank;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<MatchResult> record;

	[NonSerialized]
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string name;

	[NonSerialized]
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int level;

	[NonSerialized]
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterClass fighterClass;

	[NonSerialized]
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int skillRating;

	[NonSerialized]
	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Loadout loadout;

	[NonSerialized]
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AIPersonality personality;

	[NonSerialized]
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float startingHealth;

	[NonSerialized]
	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 startingPoint;

	[NonSerialized]
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite badgeBackgroundImage;

	[NonSerialized]
	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color badgeBackgroundColor;

	[NonSerialized]
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Sprite badgeForegroundImage;

	[NonSerialized]
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color badgeForegroundColor;

	[NonSerialized]
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isGoon;

	[NonSerialized]
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool leftHanded;

	[NonSerialized]
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool excludeFromTournaments;

	[NonSerialized]
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float handSpeed;

	[NonSerialized]
	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float reactionTime;

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x20A4CA4", Offset = "0x20A4CA4", VA = "0x20A4CA4")]
	public void SetBadges()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x20A5918", Offset = "0x20A5918", VA = "0x20A5918")]
	public string GetFormattedRecord()
	{
		return null;
	}

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x20A5EB8", Offset = "0x20A5EB8", VA = "0x20A5EB8")]
	public void ApplyToFighter(Fighter f, bool armorOnly = true)
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x20A5850", Offset = "0x20A5850", VA = "0x20A5850")]
	public FighterInfo()
	{
	}
}
[Token(Token = "0x2000136")]
public class FightScreenButton : MonoBehaviour
{
	[Token(Token = "0x2000500")]
	public enum BaseColor
	{
		[Token(Token = "0x40027D5")]
		Carbon,
		[Token(Token = "0x40027D6")]
		Copper,
		[Token(Token = "0x40027D7")]
		Gold,
		[Token(Token = "0x40027D8")]
		Iron,
		[Token(Token = "0x40027D9")]
		Silver,
		[Token(Token = "0x40027DA")]
		Steel
	}

	[Token(Token = "0x2000501")]
	public enum HighlightColor
	{
		[Token(Token = "0x40027DC")]
		Blue,
		[Token(Token = "0x40027DD")]
		Copper,
		[Token(Token = "0x40027DE")]
		Gold,
		[Token(Token = "0x40027DF")]
		Green,
		[Token(Token = "0x40027E0")]
		Orange,
		[Token(Token = "0x40027E1")]
		Purple,
		[Token(Token = "0x40027E2")]
		Red,
		[Token(Token = "0x40027E3")]
		Silver,
		[Token(Token = "0x40027E4")]
		White
	}

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool testPress;

	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent Callback;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public FightSelectScreen fightSelectScreen;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer outlineRenderer;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MeshRenderer mainRenderer;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider buttonCollider;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshPro fighterNameText;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro levelReqText;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro lockedText;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject lockedOverlay;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool wasHovering;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float hoverValue;

	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float disabledValue;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float selectedValue;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5C0C", Offset = "0x5C5C0C")]
	public bool locked;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public new bool enabled;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BaseColor fighterBaseColor;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public HighlightColor fighterHighlightColor;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject pedestalGauntlet;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int playerLevel;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int requiredLevel;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5C24", Offset = "0x5C5C24")]
	public CustomMaterialSetting carbonMaterial;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CustomMaterialSetting blueMaterial;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public CustomMaterialSetting copperMaterial;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CustomMaterialSetting goldMaterial;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public CustomMaterialSetting greenMaterial;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public CustomMaterialSetting orangeMaterial;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public CustomMaterialSetting purpleMaterial;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public CustomMaterialSetting redMaterial;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public CustomMaterialSetting silverMaterial;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CustomMaterialSetting steelMaterial;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CustomMaterialSetting whiteMaterial;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CustomMaterialSetting ironMaterial;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5C3C", Offset = "0x5C5C3C")]
	public Color outlineDefaultColor;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color outlineHoverColor;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color outlineDisabledColor;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Color outlineSelectedColor;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5C54", Offset = "0x5C5C54")]
	public Color mainCarbonColor;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Color mainCopperColor;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Color mainGoldColor;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Color mainIronColor;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Color mainSilverColor;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Color mainSteelColor;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5C6C", Offset = "0x5C5C6C")]
	public Color hlBlueColor;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Color hlCopperColor;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Color hlGoldColor;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Color hlGreenColor;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Color hlOrangeColor;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color hlPurpleColor;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Color hlRedColor;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public Color hlSilverColor;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public Color hlWhiteColor;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private Color[] baseColors;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Color[] highlightColors;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private CustomMaterialSetting[] baseMaterials;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private CustomMaterialSetting[] highlightMaterials;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Vector3 transformStartPos;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float transitionSpeed;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool selected;

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x21DAB40", Offset = "0x21DAB40", VA = "0x21DAB40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x21DB648", Offset = "0x21DB648", VA = "0x21DB648")]
	public void Update()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x21DBF48", Offset = "0x21DBF48", VA = "0x21DBF48")]
	private void SetGauntletColors(BaseColor baseColor, HighlightColor highlightColor)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x21DC3E8", Offset = "0x21DC3E8", VA = "0x21DC3E8")]
	public void SetRequiredLevel(int level)
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x21DC58C", Offset = "0x21DC58C", VA = "0x21DC58C")]
	public Color GetBaseColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x21DC5E0", Offset = "0x21DC5E0", VA = "0x21DC5E0")]
	public Color GetHighlightColor()
	{
		return default(Color);
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x21DC634", Offset = "0x21DC634", VA = "0x21DC634")]
	public FightScreenButton()
	{
	}
}
[Token(Token = "0x2000137")]
public class FightScreenMoreInfo : MonoBehaviour
{
	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MeshRenderer mainRenderer;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshPro fighterNameText;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshPro levelReqText;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro lockedText;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro moreInfoText;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x21DCAC4", Offset = "0x21DCAC4", VA = "0x21DCAC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x21DCAC8", Offset = "0x21DCAC8", VA = "0x21DCAC8")]
	public void Update()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x21DCACC", Offset = "0x21DCACC", VA = "0x21DCACC")]
	public void SetRequiredLevel(int playerLevel, int requiredLevel)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x21DCC34", Offset = "0x21DCC34", VA = "0x21DCC34")]
	public void SetColors(Color baseColor, Color highlightColor)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x21DCDD8", Offset = "0x21DCDD8", VA = "0x21DCDD8")]
	public FightScreenMoreInfo()
	{
	}
}
[Token(Token = "0x2000138")]
public class FightSelectScreen : MonoBehaviour
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject screenButtonPrefab;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject infoBox;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<GameObject> screenButtons;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x21DCDE0", Offset = "0x21DCDE0", VA = "0x21DCDE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x21DD168", Offset = "0x21DD168", VA = "0x21DD168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x21DD16C", Offset = "0x21DD16C", VA = "0x21DD16C")]
	public void SetInputEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x21DC250", Offset = "0x21DC250", VA = "0x21DC250")]
	public void SetInfoBox(FightScreenButton model)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x21DD2F4", Offset = "0x21DD2F4", VA = "0x21DD2F4")]
	public FightSelectScreen()
	{
	}
}
[Token(Token = "0x2000139")]
public class FlailBehavior : EntityBehaviour<IFlailState>, IWeaponDriver
{
	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Weapon _weapon;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _fastForwardedThisFrame;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool attachedYet;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int playerID;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int handNum;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int latestFrame;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<WeaponSnapshot> delayQueue;

	[Token(Token = "0x17000073")]
	public Weapon weapon
	{
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x20A6218", Offset = "0x20A6218", VA = "0x20A6218", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x20A6220", Offset = "0x20A6220", VA = "0x20A6220", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public bool fastForwardedThisFrame
	{
		[Token(Token = "0x6000718")]
		[Address(RVA = "0x20A6228", Offset = "0x20A6228", VA = "0x20A6228", Slot = "32")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000719")]
		[Address(RVA = "0x20A6230", Offset = "0x20A6230", VA = "0x20A6230", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x600071A")]
		[Address(RVA = "0x20A6238", Offset = "0x20A6238", VA = "0x20A6238", Slot = "31")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x20A6240", Offset = "0x20A6240", VA = "0x20A6240", Slot = "27")]
	public void Reset()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x20A624C", Offset = "0x20A624C", VA = "0x20A624C")]
	public void Attach()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x20A69D0", Offset = "0x20A69D0", VA = "0x20A69D0", Slot = "19")]
	public override void Detached()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x20A6AA0", Offset = "0x20A6AA0", VA = "0x20A6AA0", Slot = "18")]
	public override void Attached()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x20A6BD8", Offset = "0x20A6BD8", VA = "0x20A6BD8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x20A7114", Offset = "0x20A7114", VA = "0x20A7114", Slot = "28")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x20A8504", Offset = "0x20A8504", VA = "0x20A8504")]
	public FlailBehavior()
	{
	}
}
[Token(Token = "0x200013A")]
public class FlingRanged : RangedAttack
{
	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool drawing;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastTipPos;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggerWasHeld;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 lastVelocity;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 acceleration;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float lerpAmt;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float lerpAmt2;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 triggerPos;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 triggerVelocity;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 totalVelocity;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 totalAcc;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 avgVelocity;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 avgVelocity2;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float maxVelocityCounted;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float distanceTraveled;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public GameObject TargetPointer;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TrailRenderer drawTrail;

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x20A8CF8", Offset = "0x20A8CF8", VA = "0x20A8CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x20A8E90", Offset = "0x20A8E90", VA = "0x20A8E90", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x20A8E94", Offset = "0x20A8E94", VA = "0x20A8E94", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x20A9850", Offset = "0x20A9850", VA = "0x20A9850", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x20A9ECC", Offset = "0x20A9ECC", VA = "0x20A9ECC")]
	public FlingRanged()
	{
	}
}
[Token(Token = "0x200013B")]
public class Floor : MonoBehaviour
{
	[Token(Token = "0x6000727")]
	[Address(RVA = "0x20AA060", Offset = "0x20AA060", VA = "0x20AA060")]
	private void Start()
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x20AA064", Offset = "0x20AA064", VA = "0x20AA064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x20AA068", Offset = "0x20AA068", VA = "0x20AA068")]
	public Floor()
	{
	}
}
[Token(Token = "0x200013C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1148", Offset = "0x5C1148")]
public class FrustumViewer : MonoBehaviour
{
	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int lineCount;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private LineDrawer[] lineDrawer;

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x20AA864", Offset = "0x20AA864", VA = "0x20AA864")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x20AA968", Offset = "0x20AA968", VA = "0x20AA968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x20AAA04", Offset = "0x20AAA04", VA = "0x20AAA04")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0x20AAAA0", Offset = "0x20AAAA0", VA = "0x20AAAA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x20AAB10", Offset = "0x20AAB10", VA = "0x20AAB10")]
	private void DrawFrustum(Camera cam)
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x20AAEBC", Offset = "0x20AAEBC", VA = "0x20AAEBC")]
	private Vector3 Plane3Intersect(Plane p1, Plane p2, Plane p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x20AB1D4", Offset = "0x20AB1D4", VA = "0x20AB1D4")]
	public FrustumViewer()
	{
	}
}
[Token(Token = "0x200013D")]
public struct LineDrawer
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject lineObj;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private float lineSize;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x5DAD84", Offset = "0x5DAD84", VA = "0x5DAD84")]
	public LineDrawer(float lineSize = 0.2f)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x5DAD8C", Offset = "0x5DAD8C", VA = "0x5DAD8C")]
	private void init(float lineSize = 0.2f)
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x5DAD94", Offset = "0x5DAD94", VA = "0x5DAD94")]
	public void DrawLine(Vector3 start, Vector3 end, Color color)
	{
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x5DADE8", Offset = "0x5DADE8", VA = "0x5DADE8")]
	public void Destroy()
	{
	}
}
[Token(Token = "0x200013E")]
public class FullScreenEffect : MonoBehaviour
{
	[Token(Token = "0x2000502")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B5C", Offset = "0x5C2B5C")]
	private sealed class <DoGCOperations>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40027E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40027E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UnityEngine.AsyncOperation <waitForUnload>5__2;

		[Token(Token = "0x170002C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600256D")]
			[Address(RVA = "0x20ACBCC", Offset = "0x20ACBCC", VA = "0x20ACBCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600256F")]
			[Address(RVA = "0x20ACC5C", Offset = "0x20ACC5C", VA = "0x20ACC5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600256A")]
		[Address(RVA = "0x20ABE54", Offset = "0x20ABE54", VA = "0x20ABE54")]
		[DebuggerHidden]
		public <DoGCOperations>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x600256B")]
		[Address(RVA = "0x20ACA28", Offset = "0x20ACA28", VA = "0x20ACA28", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600256C")]
		[Address(RVA = "0x20ACA2C", Offset = "0x20ACA2C", VA = "0x20ACA2C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600256E")]
		[Address(RVA = "0x20ACBD4", Offset = "0x20ACBD4", VA = "0x20ACBD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static FullScreenEffect instance;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color globalTint;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color vignetteTint;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color edgeTint;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color globalHitTint;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float globalHitTintStrength;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material vignetteMat;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Material hitMat;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float hitValue;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hitFadeTime;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color neutralColor;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer vignette;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public MeshRenderer hitIndicator;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MeshRenderer overlayQuad;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Color overlayColor;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool fadingOut;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fadeOutLength;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float fadeInLength;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float fadeStrength;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Action fadeTransitionAction;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool fadeInFlag;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool fastAction;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool testingOverride;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private AudioListener listener;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform originalParent;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 originalLocalPos;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion originalLocalRot;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 originalLocalScale;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool fadingAudio;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x20AB1E4", Offset = "0x20AB1E4", VA = "0x20AB1E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x20AB290", Offset = "0x20AB290", VA = "0x20AB290")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x20AB71C", Offset = "0x20AB71C", VA = "0x20AB71C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x20AB6A8", Offset = "0x20AB6A8", VA = "0x20AB6A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCCAC", Offset = "0x5CCCAC")]
	private IEnumerator DoGCOperations()
	{
		return null;
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x20ABE74", Offset = "0x20ABE74", VA = "0x20ABE74")]
	public void SetHitIndicator(Vector3 point, Color color)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x20ABFE0", Offset = "0x20ABFE0", VA = "0x20ABFE0")]
	public void CancelFade()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x20AC0B4", Offset = "0x20AC0B4", VA = "0x20AC0B4")]
	public void FadeTransition(float fadeOutTime, float fadeInTime, Action transitionMethod, bool waitForFlag = false, bool fastAction = false, bool fadeAudio = true)
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x20AC238", Offset = "0x20AC238", VA = "0x20AC238")]
	public void FadeTransition(float fadeTime, Action transitionMethod)
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0x20AC268", Offset = "0x20AC268", VA = "0x20AC268")]
	public void FullColorFlash(float fadeTime, Color c)
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x20AC374", Offset = "0x20AC374", VA = "0x20AC374")]
	public void SetParent(Transform newParent)
	{
	}

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x20AC648", Offset = "0x20AC648", VA = "0x20AC648")]
	public void ResetParent()
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x20AC764", Offset = "0x20AC764", VA = "0x20AC764")]
	private void TestAction()
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x20AC7F0", Offset = "0x20AC7F0", VA = "0x20AC7F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCD24", Offset = "0x5CCD24")]
	public void TestFade()
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x20AC8A4", Offset = "0x20AC8A4", VA = "0x20AC8A4")]
	public FullScreenEffect()
	{
	}
}
[Token(Token = "0x200013F")]
public class Gfycat : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000503")]
	public class AuthRequest
	{
		[Token(Token = "0x40027E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string grant_type;

		[Token(Token = "0x40027E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string client_id;

		[Token(Token = "0x40027EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string client_secret;

		[Token(Token = "0x6002570")]
		[Address(RVA = "0x225CDB4", Offset = "0x225CDB4", VA = "0x225CDB4")]
		public AuthRequest()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000504")]
	public class AuthResponse
	{
		[Token(Token = "0x40027EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string token_type;

		[Token(Token = "0x40027EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string scope;

		[Token(Token = "0x40027ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int expires_in;

		[Token(Token = "0x40027EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string access_token;

		[Token(Token = "0x6002571")]
		[Address(RVA = "0x22601F0", Offset = "0x22601F0", VA = "0x22601F0")]
		public AuthResponse()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000505")]
	public class CreateRequest
	{
		[Token(Token = "0x40027EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string title;

		[Token(Token = "0x40027F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool keepAudio;

		[Token(Token = "0x6002572")]
		[Address(RVA = "0x2260150", Offset = "0x2260150", VA = "0x2260150")]
		public CreateRequest()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000506")]
	public class CreateResponse
	{
		[Token(Token = "0x40027F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string gfyname;

		[Token(Token = "0x6002573")]
		[Address(RVA = "0x22601F8", Offset = "0x22601F8", VA = "0x22601F8")]
		public CreateResponse()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000507")]
	public class StatusResponse
	{
		[Token(Token = "0x40027F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string task;

		[Token(Token = "0x40027F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int time;

		[Token(Token = "0x6002574")]
		[Address(RVA = "0x2260208", Offset = "0x2260208", VA = "0x2260208")]
		public StatusResponse()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000508")]
	public class ErrorMessage
	{
		[Token(Token = "0x40027F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string code;

		[Token(Token = "0x40027F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string description;

		[Token(Token = "0x6002575")]
		[Address(RVA = "0x2260200", Offset = "0x2260200", VA = "0x2260200")]
		public ErrorMessage()
		{
		}
	}

	[Token(Token = "0x2000509")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B6C", Offset = "0x5C2B6C")]
	private sealed class <StartUpload>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40027F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40027F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filePath;

		[Token(Token = "0x40027F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshProUGUI debugBox;

		[Token(Token = "0x40027FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float recordingLength;

		[Token(Token = "0x170002C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002579")]
			[Address(RVA = "0x225CF4C", Offset = "0x225CF4C", VA = "0x225CF4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600257B")]
			[Address(RVA = "0x225CFDC", Offset = "0x225CFDC", VA = "0x225CFDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002576")]
		[Address(RVA = "0x225C588", Offset = "0x225C588", VA = "0x225C588")]
		[DebuggerHidden]
		public <StartUpload>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002577")]
		[Address(RVA = "0x225CE54", Offset = "0x225CE54", VA = "0x225CE54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002578")]
		[Address(RVA = "0x225CE58", Offset = "0x225CE58", VA = "0x225CE58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600257A")]
		[Address(RVA = "0x225CF54", Offset = "0x225CF54", VA = "0x225CF54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B7C", Offset = "0x5C2B7C")]
	private sealed class <Upload>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40027FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40027FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40027FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string <f1name>5__2;

		[Token(Token = "0x40027FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private string <f2name>5__3;

		[Token(Token = "0x40027FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int <progress>5__4;

		[Token(Token = "0x4002800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string <debugTextSoFar>5__5;

		[Token(Token = "0x4002801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool <error>5__6;

		[Token(Token = "0x4002802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityWebRequest <uwrFile>5__7;

		[Token(Token = "0x4002803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte[] <fileData>5__8;

		[Token(Token = "0x4002804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private UnityWebRequest <uwrAuth>5__9;

		[Token(Token = "0x4002805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <uwrReq>5__10;

		[Token(Token = "0x4002806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool <complete>5__11;

		[Token(Token = "0x4002807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <encodeStart>5__12;

		[Token(Token = "0x4002808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <bestGuess>5__13;

		[Token(Token = "0x4002809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <notFound>5__14;

		[Token(Token = "0x400280A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private UnityWebRequest <uwrStatus>5__15;

		[Token(Token = "0x170002C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600257F")]
			[Address(RVA = "0x2260158", Offset = "0x2260158", VA = "0x2260158", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002581")]
			[Address(RVA = "0x22601E8", Offset = "0x22601E8", VA = "0x22601E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600257C")]
		[Address(RVA = "0x225C774", Offset = "0x225C774", VA = "0x225C774")]
		[DebuggerHidden]
		public <Upload>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x600257D")]
		[Address(RVA = "0x225CFE4", Offset = "0x225CFE4", VA = "0x225CFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600257E")]
		[Address(RVA = "0x225CFE8", Offset = "0x225CFE8", VA = "0x225CFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002580")]
		[Address(RVA = "0x2260160", Offset = "0x2260160", VA = "0x2260160", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200050B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B8C", Offset = "0x5C2B8C")]
	private sealed class <Authenticate>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400280B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400280C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400280D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UnityWebRequest <uwr>5__2;

		[Token(Token = "0x170002C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002585")]
			[Address(RVA = "0x225CDBC", Offset = "0x225CDBC", VA = "0x225CDBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002587")]
			[Address(RVA = "0x225CE4C", Offset = "0x225CE4C", VA = "0x225CE4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002582")]
		[Address(RVA = "0x225C808", Offset = "0x225C808", VA = "0x225C808")]
		[DebuggerHidden]
		public <Authenticate>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6002583")]
		[Address(RVA = "0x225CB24", Offset = "0x225CB24", VA = "0x225CB24", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002584")]
		[Address(RVA = "0x225CB28", Offset = "0x225CB28", VA = "0x225CB28", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002586")]
		[Address(RVA = "0x225CDC4", Offset = "0x225CDC4", VA = "0x225CDC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string clientId;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string clientSecret;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string authToken;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static string gfyName;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string authUrl;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static string uRequestUrl;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string uploadUrl;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static string statusUrl;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int errorCount;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static string filePath;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static TextMeshProUGUI debugBox;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static float recordingLength;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static bool uploading;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private static bool killUpload;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x225C4BC", Offset = "0x225C4BC", VA = "0x225C4BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCD58", Offset = "0x5CCD58")]
	public static IEnumerator StartUpload(string filePath, TextMeshProUGUI debugBox, float recordingLength)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x225C5A8", Offset = "0x225C5A8", VA = "0x225C5A8")]
	public static void StopUpload()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x225C674", Offset = "0x225C674", VA = "0x225C674")]
	public static bool IsUploading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x225C700", Offset = "0x225C700", VA = "0x225C700")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCDD0", Offset = "0x5CCDD0")]
	public static IEnumerator Upload()
	{
		return null;
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x225C794", Offset = "0x225C794", VA = "0x225C794")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCE48", Offset = "0x5CCE48")]
	public static IEnumerator Authenticate()
	{
		return null;
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x225C828", Offset = "0x225C828", VA = "0x225C828")]
	public static UnityWebRequest BuildWebRequest(string url, string method, [Optional] object data)
	{
		return null;
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x225C9DC", Offset = "0x225C9DC", VA = "0x225C9DC")]
	public Gfycat()
	{
	}
}
[Token(Token = "0x2000140")]
public class GifTheater : MonoBehaviour
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool autoplay;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool expanded;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VideoPlayer videoplayer;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject PauseIcon;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PlayIcon;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Button PlayButton;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject PrevButton;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject NextButton;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject CloseButton;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool expandedFromMainMenu;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer FadeQuad;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fadeLevel;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fadeTime;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject LoadingSprite;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioSource gifAudio;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float gifVolume;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool hovering;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool wasPrepared;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x2260210", Offset = "0x2260210", VA = "0x2260210")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x226094C", Offset = "0x226094C", VA = "0x226094C")]
	public void EnableFromMainMenu()
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x2260C94", Offset = "0x2260C94", VA = "0x2260C94")]
	public void EnableFromMultiplayer()
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0x2260F74", Offset = "0x2260F74", VA = "0x2260F74")]
	private void Update()
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0x2261904", Offset = "0x2261904", VA = "0x2261904")]
	public void OnHover()
	{
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x2261910", Offset = "0x2261910", VA = "0x2261910")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x226191C", Offset = "0x226191C", VA = "0x226191C")]
	public void Expand()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x2261CB4", Offset = "0x2261CB4", VA = "0x2261CB4")]
	public void Shrink()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x22621F0", Offset = "0x22621F0", VA = "0x22621F0")]
	private void ReparentToMainMenu()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x2262304", Offset = "0x2262304", VA = "0x2262304")]
	private void ReparentToMultiplayerMenu()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x2260250", Offset = "0x2260250", VA = "0x2260250")]
	public void PrepareCurrentGIF()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x2262418", Offset = "0x2262418", VA = "0x2262418")]
	public void MainButton()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x2262568", Offset = "0x2262568", VA = "0x2262568")]
	public void Play()
	{
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0x22618C0", Offset = "0x22618C0", VA = "0x22618C0")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x2261634", Offset = "0x2261634", VA = "0x2261634")]
	public void Next()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x22627CC", Offset = "0x22627CC", VA = "0x22627CC")]
	public void Previous()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x2262A28", Offset = "0x2262A28", VA = "0x2262A28")]
	public GifTheater()
	{
	}
}
[Token(Token = "0x2000141")]
public class Giphy : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200050C")]
	public class GiphyResponse
	{
		[Token(Token = "0x400280E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Data data;

		[Token(Token = "0x400280F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Meta meta;

		[Token(Token = "0x6002588")]
		[Address(RVA = "0x226492C", Offset = "0x226492C", VA = "0x226492C")]
		public GiphyResponse()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200050D")]
	public class Data
	{
		[Token(Token = "0x4002810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string id;

		[Token(Token = "0x6002589")]
		[Address(RVA = "0x2264924", Offset = "0x2264924", VA = "0x2264924")]
		public Data()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200050E")]
	public class Meta
	{
		[Token(Token = "0x4002811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string msg;

		[Token(Token = "0x4002812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int status;

		[Token(Token = "0x600258A")]
		[Address(RVA = "0x2264934", Offset = "0x2264934", VA = "0x2264934")]
		public Meta()
		{
		}
	}

	[Token(Token = "0x200050F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2B9C", Offset = "0x5C2B9C")]
	private sealed class <Upload>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string filePath;

		[Token(Token = "0x4002816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshProUGUI debugBox;

		[Token(Token = "0x4002817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool chunking;

		[Token(Token = "0x4002818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string <fileLengthText>5__2;

		[Token(Token = "0x4002819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string <progressText>5__3;

		[Token(Token = "0x400281A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityWebRequest <uwrFile>5__4;

		[Token(Token = "0x400281B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <uwr>5__5;

		[Token(Token = "0x170002CA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600258E")]
			[Address(RVA = "0x226488C", Offset = "0x226488C", VA = "0x226488C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002590")]
			[Address(RVA = "0x226491C", Offset = "0x226491C", VA = "0x226491C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600258B")]
		[Address(RVA = "0x2262B08", Offset = "0x2262B08", VA = "0x2262B08")]
		[DebuggerHidden]
		public <Upload>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600258C")]
		[Address(RVA = "0x2262F64", Offset = "0x2262F64", VA = "0x2262F64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600258D")]
		[Address(RVA = "0x2262F68", Offset = "0x2262F68", VA = "0x2262F68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600258F")]
		[Address(RVA = "0x2264894", Offset = "0x2264894", VA = "0x2264894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000510")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BAC", Offset = "0x5C2BAC")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x400281C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public NameValueCollection nvc;

		[Token(Token = "0x6002591")]
		[Address(RVA = "0x2262D74", Offset = "0x2262D74", VA = "0x2262D74")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002592")]
		[Address(RVA = "0x2262F28", Offset = "0x2262F28", VA = "0x2262F28")]
		internal IEnumerable<string> <ToQueryString>b__0(string key)
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x2000511")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BBC", Offset = "0x5C2BBC")]
	private sealed class <>c
	{
		[Token(Token = "0x400281D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400281E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<string, string, string> <>9__4_1;

		[Token(Token = "0x6002594")]
		[Address(RVA = "0x2262E94", Offset = "0x2262E94", VA = "0x2262E94")]
		public <>c()
		{
		}

		[Token(Token = "0x6002595")]
		[Address(RVA = "0x2262E9C", Offset = "0x2262E9C", VA = "0x2262E9C")]
		internal string <ToQueryString>b__4_1(string key, string value)
		{
			return null;
		}
	}

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string baseUrl;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string apiKey;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int progress;

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x2262A48", Offset = "0x2262A48", VA = "0x2262A48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CCEC0", Offset = "0x5CCEC0")]
	public static IEnumerator Upload(string filePath, TextMeshProUGUI debugBox, bool chunking = false)
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x2262B28", Offset = "0x2262B28", VA = "0x2262B28")]
	public static string ToQueryString(NameValueCollection nvc, bool encodeValue = true)
	{
		return null;
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x2262D7C", Offset = "0x2262D7C", VA = "0x2262D7C")]
	public Giphy()
	{
	}
}
[Serializable]
[Token(Token = "0x2000142")]
public class Glamor
{
	[Token(Token = "0x2000512")]
	public enum Type
	{
		[Token(Token = "0x4002820")]
		Armor = 0,
		[Token(Token = "0x4002821")]
		Helm = 1,
		[Token(Token = "0x4002822")]
		Metal = 2,
		[Token(Token = "0x4002823")]
		Accent = 3,
		[Token(Token = "0x4002824")]
		None = 100
	}

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int id;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Type type;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int subtype;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int cost;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool startsUnlocked;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool hidden;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool allowed;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool dlc;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int primaryDlcId;

	[NonSerialized]
	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DlcItem primaryDlc;

	[NonSerialized]
	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool unlocked;

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x226493C", Offset = "0x226493C", VA = "0x226493C")]
	public Glamor(int id, Type type, int subtype, int cost, bool startsUnlocked, bool hidden, bool allowed, bool dlc, int primaryDlcId)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x2264C6C", Offset = "0x2264C6C", VA = "0x2264C6C")]
	[AttributeAttribute(Name = "OnDeserializedAttribute", RVA = "0x5CCF38", Offset = "0x5CCF38")]
	public void SetGametimeData()
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x2264C70", Offset = "0x2264C70", VA = "0x2264C70")]
	public void PopulatedLinkedDlc(Dictionary<int, DlcItem> dDict)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x2264CFC", Offset = "0x2264CFC", VA = "0x2264CFC")]
	public void Lock()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x2264D10", Offset = "0x2264D10", VA = "0x2264D10")]
	public void SaveLocked()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x2264FA0", Offset = "0x2264FA0", VA = "0x2264FA0")]
	public void Unlock()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x2264FAC", Offset = "0x2264FAC", VA = "0x2264FAC")]
	public void SaveUnlocked()
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x22649A0", Offset = "0x22649A0", VA = "0x22649A0")]
	public void LoadUnlocked()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x2265248", Offset = "0x2265248", VA = "0x2265248")]
	public string GetEnumName()
	{
		return null;
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x2265444", Offset = "0x2265444", VA = "0x2265444")]
	public static int GetDictionaryId(Type type, int subtype)
	{
		return default(int);
	}
}
[Token(Token = "0x2000143")]
public class GlassBrick : MonoBehaviour
{
	[Token(Token = "0x2000513")]
	private enum ItemState
	{
		[Token(Token = "0x4002826")]
		OnMenu,
		[Token(Token = "0x4002827")]
		Shattering
	}

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GlassWall wall;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem particles;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int row;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int column;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isUnmovable;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform menuParent;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startPosition;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion startRotation;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource breakSound;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ItemState state;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x2265454", Offset = "0x2265454", VA = "0x2265454")]
	private void Start()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x226557C", Offset = "0x226557C", VA = "0x226557C")]
	private void Update()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x2265904", Offset = "0x2265904", VA = "0x2265904")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x226583C", Offset = "0x226583C", VA = "0x226583C")]
	private void SetVisibility(bool visibility)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x2266084", Offset = "0x2266084", VA = "0x2266084")]
	private void Shatter()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x2266298", Offset = "0x2266298", VA = "0x2266298")]
	public GlassBrick()
	{
	}
}
[Token(Token = "0x2000144")]
public class GlassWall : MonoBehaviour
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject brickPrefab;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject framePrefab;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<GameObject> bricks;

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x22662A0", Offset = "0x22662A0", VA = "0x22662A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x2266E44", Offset = "0x2266E44", VA = "0x2266E44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x2265C08", Offset = "0x2265C08", VA = "0x2265C08")]
	public void SetPhysics(bool on)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x2267030", Offset = "0x2267030", VA = "0x2267030")]
	public GlassWall()
	{
	}
}
[Token(Token = "0x2000145")]
public class Glow2D : MonoBehaviour
{
	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool simpleBillboardMode;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Transform> ControlPoints;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform AllControlPoints;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> CalcPoints;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform CenterCalcPoint;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zdist;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float outerRadius;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float width;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float height;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int numsegments;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3[] vertices;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int[] tri;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color32[] colors;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Camera SpectatorCam;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform CenterPoint;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 uvtest;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 colortest;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color color;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float strength;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool lineMode;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform lineEnd1;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform lineEnd2;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float minLineEndDist;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float currentIntensity;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float targetIntensity;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float fadeSpeed;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3[] keypoints2;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x22670BC", Offset = "0x22670BC", VA = "0x22670BC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x2267124", Offset = "0x2267124", VA = "0x2267124")]
	public void Start()
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x2267350", Offset = "0x2267350", VA = "0x2267350")]
	public void MakeMesh()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x2268F20", Offset = "0x2268F20", VA = "0x2268F20")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x226B188", Offset = "0x226B188", VA = "0x226B188")]
	public Glow2D()
	{
	}
}
[Token(Token = "0x2000146")]
public class GM : MonoBehaviour
{
	[Token(Token = "0x2000514")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BCC", Offset = "0x5C2BCC")]
	private sealed class <SendSMTEvent2>d__357 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400282A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x400282B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SetMatchTypeEvent evnt;

		[Token(Token = "0x400282C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float <startTime>5__2;

		[Token(Token = "0x170002CC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002599")]
			[Address(RVA = "0x224D180", Offset = "0x224D180", VA = "0x224D180", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600259B")]
			[Address(RVA = "0x224D210", Offset = "0x224D210", VA = "0x224D210", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002596")]
		[Address(RVA = "0x224D0B4", Offset = "0x224D0B4", VA = "0x224D0B4")]
		[DebuggerHidden]
		public <SendSMTEvent2>d__357(int <>1__state)
		{
		}

		[Token(Token = "0x6002597")]
		[Address(RVA = "0x224D0D4", Offset = "0x224D0D4", VA = "0x224D0D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002598")]
		[Address(RVA = "0x224D0D8", Offset = "0x224D0D8", VA = "0x224D0D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600259A")]
		[Address(RVA = "0x224D188", Offset = "0x224D188", VA = "0x224D188", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000515")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BDC", Offset = "0x5C2BDC")]
	private sealed class <CheckForPool2>d__359 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400282D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400282E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400282F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4002830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GM <>4__this;

		[Token(Token = "0x4002831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025A0")]
			[Address(RVA = "0x224D01C", Offset = "0x224D01C", VA = "0x224D01C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025A2")]
			[Address(RVA = "0x224D0AC", Offset = "0x224D0AC", VA = "0x224D0AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600259C")]
		[Address(RVA = "0x224C658", Offset = "0x224C658", VA = "0x224C658")]
		[DebuggerHidden]
		public <CheckForPool2>d__359(int <>1__state)
		{
		}

		[Token(Token = "0x600259D")]
		[Address(RVA = "0x224C678", Offset = "0x224C678", VA = "0x224C678", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600259E")]
		[Address(RVA = "0x224C768", Offset = "0x224C768", VA = "0x224C768", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600259F")]
		[Address(RVA = "0x224C690", Offset = "0x224C690", VA = "0x224C690")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025A1")]
		[Address(RVA = "0x224D024", Offset = "0x224D024", VA = "0x224D024", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string displayConnectState;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool mobileVersion;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool oculusVersion;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public static bool viveWaveVersion;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public static bool steamVersion;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static bool viveportVersion;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string newsVersionTag;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static string multiplayerVersionTag;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static bool paxDemoVersion;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public static bool paxServer;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public static bool godMode;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public static bool animationRecorderVersion;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool spectatorVersion;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public static bool replayVersion;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public static bool verboseDebug;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject WaveCamera;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject WaveRight;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject WaveLeft;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject WaveInput;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CameraObjects;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject TBCamera;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WaveInputHelper waveInput;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool bigVFX;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool hiResBuild;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static GM instance;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameState state;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool inMultiplayer;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool lowResMode;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float fixedUnscaledFramerate;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AnimationCurve MPRewardAdjustmentFactor;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FrameTimeData activeFrameTimeData;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<FrameTimeData> FrameTimeDatas;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int frameTimeDataBufferSize;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int frameTimeDataBufferStartIndex;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int serverFrameCount;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int mostRecentServerFrameReceived;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private int fixedFrameCount;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	private float timeScaleProgress;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AnimationCurve timeScaleCurve;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float timeScaleChangeRate;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool keepUiPointer;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool disableUiPointer;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	public bool copyReplaysFromDownloads;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float inputDisabledTimer;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int absoluteFixedFrameCount;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int goodFrameDebugCounter;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int skipFrameDebugCounter;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Fighter Player;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Fighter testPuppet;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Fighter testOpponent;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool usingPuppet;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool spectatorMode;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool comfortMode;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool reducedParticles;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool seatedMode;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool leftHanded;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static bool hapticsOn;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject AIFighterPrefab;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject MirrorFighterPrefab;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject RemoteFighterPrefab;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Replay replay;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ReplayRig replayRig;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public CampaignInfo campaignInfo;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CustomMatchSettings customMatchSettings;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Audio audio;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Music music;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public ReplayCam SpectatorCam;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Replay2dController replay2DController;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Transform uiPointer;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject CameraParent;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5CA4", Offset = "0x5C5CA4")]
	public ParticleSystem ClashExplosionParticles;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystem ClashDebrisParticles;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public ParticleSystem HealthHitParticles;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ParticleSystem ShieldHitParticles;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public ParticleSystem ShotParticles;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ParticleSystem FireIndicatorParticles;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public ParticleSystem DustPuffParticles;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ParticleSystem DashParticles;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public ParticleSystem HeadwindParticles;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform ParticleFloor;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public GameObject ClashForce;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public ParticleSystemForceField ProjectileForce;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float lastClashForceTime;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float lastProjectileForceTime;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5CBC", Offset = "0x5C5CBC")]
	public GameObject DoubleSwordPrefab;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject LongswordPrefab;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject RapierPrefab;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject QuarterstaffPrefab;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject KatarPrefab;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject FlailPrefab;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public GameObject ChainPrefab;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject HeaterShieldPrefab;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public GameObject BucklerPrefab;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject GunHandPrefab;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public GameObject WarAxePrefab;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject ShortSpearPrefab;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public GameObject StickPrefab;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject MacePrefab;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public GameObject TripleSwordPrefab;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject InvisibleKatarPrefab;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public GameObject WarhammerPrefab;

	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject ScythePrefab;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public GameObject KatanaPrefab;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject BoardShieldPrefab;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public GameObject ChakramPrefab;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject ChargeGunPrefab;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public GameObject CrescentPrefab;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject HalberdPrefab;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public GameObject ScimitarPrefab;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject ShortSwordPrefab;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public GameObject DeerHornBladePrefab;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject WhipPrefab;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public GameObject ParryingDaggerPrefab;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject GlaivePrefab;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public float hitMomentOverride;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public List<Fighter> Fighters;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public List<Weapon> Weapons;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public List<Projectile> Projectiles;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public List<BasicButton> Buttons;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject MainMenu;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public GameObject RecordingMenu;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject TestingMenu;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public GameObject StressTest;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject MultiplayerMenuObj;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public GameObject WeaponSelectionMenu;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject SettingsMenu;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public GameObject CustomizationMenu;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject CustomizeMenu;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public GameObject TestbedMenu;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameObject ClassSelectMenu;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public GameObject SingleplayerMenu;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public GameObject ReplayMenu;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public GameObject EmailMenu;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public GameObject PrivateTagMenu;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public GameObject CampaignMenu;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public GameObject OptionsMenu;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public GameObject CreditsMenu;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject SpectatorMenu;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public GameObject TrainingMenuObj;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject MatchSettingsMenu;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public GameObject TipsMenu;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Ubermodal ubermodal;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public Tutorial tutorial;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public PauseMenu pauseMenu;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public IntroMenu introMenu;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public GifTheater gifTheater;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public int fakeSpectatorDelay;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool LaggedPlayback;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public List<CustomLight> CustomLights;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public AIPersonality aggropersonality;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public AIPersonality placeholderPersonality;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public Camera PlayerCamera2D;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	public StageInfo currentStage;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public StageInfo ReadyRoomStage;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public PrefabHandler prefabHandler;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int resourceRegime;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public Stadium stadium;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float screenShakeAmt;

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public bool inMeleeCombat;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
	public bool paused;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
	public FighterConfiguration lastSPConfig;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public int lossFrame;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
	public bool firstMatch;

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public GameObject DamageTextPrefab;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
	public float hitTimeSlowdown;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public float tutorialSlowdownFactor;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x254")]
	public float tutorialPlayerSlowdownFactor;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public NameGenerator nameGenerator;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
	public MatchInfo currentMatch;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public MatchConfiguration mpMatchConfig;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
	public FighterConfiguration testIllustrationConfig;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public Fighter testIllustrationFighter;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
	public float testStrength;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public float testLength;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	public float testDelay;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public int testReps;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	public GameObject StaticReadyRoom;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public Material BulletAirflowMat;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
	public float airflowScalar;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public Camera priorityCamOverride;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
	public int mpOpponentSkillRating;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public string mpOpponentName;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public string mpOpponentOculusID;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	public bool mpOpponentVoipEnabled;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x299")]
	public bool mpOpponentVoipMuted;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29A")]
	public bool voipMuted;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
	public FighterClass mpMyLastClass;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public FighterClass mpOppLastClass;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	public float resourceCleanupCounter;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public Material wallMat;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
	public float mpWaitStartTime;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public float matchStartTime;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
	public float mpSessionStartTime;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public float spSessionStartTime;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
	public float playerChargeupTime;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public float enemyChargeupTime;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
	public float playerMeleeTime;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public float enemyMeleeTime;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
	public int playerRangedAttacks;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public int enemyRangedAttacks;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
	public float playerRangedDamageTaken;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	public float enemyRangedDamageTaken;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
	public float playerShieldDamageAbsorbed;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public float enemyShieldDamageAbsorbed;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E4")]
	public bool forceDisableInput;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public TextAsset animationOfLastResort;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
	private bool hadInputFocus;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public LIV.SDK.Unity.LIV liv;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
	public bool testSmoothing;

	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public int mpHitDetectionLeewayFrames;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static float mpJFFratio;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public FighterClass lastSelectedClass;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public int previousSkillRating;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public float timeoutPauseTimer;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public float myTotalTimeoutTimer;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	public float myLastTimeoutTime;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public float myLastTimeinTime;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public float timeoutDetector;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public float altLastTimein;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
	public float altLastTimeout;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public GameObject ConnectionProblemIcon;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public VoiceEmoteFire playerVoiceEmote;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public VoiceEmoteFire opponentVoiceEmote;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
	private bool usingTestSettings;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public int testSetting;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	private int leewayFrames;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public TestHandBehavior masterFrameServer;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public bool voipEnabled;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public VoipLord voiplord;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	private float lastMuteTime;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public List<string> GifURLs;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
	public int currentGIF;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public bool playedSPMatch;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	public float lastTutorialTimestamp;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public List<GameObject> tbObjects;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	private OVRManager.FixedFoveatedRenderingLevel currentFFR;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private bool pointerWasEnabled;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
	public Material FontMatBold;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public Material FontMatSemiBold;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	public Material FontMatMedium;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public DifficultyLevel campaignDifficulty;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public List<string> bannedNames;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public List<string> poolNames;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
	public bool usingPool;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37D")]
	public bool playingFirstTutorial;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37E")]
	public bool tempAnimEnabled;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	private UdpSocket socket;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x20ACC64", Offset = "0x20ACC64", VA = "0x20ACC64")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x20ADBF0", Offset = "0x20ADBF0", VA = "0x20ADBF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x20AF890", Offset = "0x20AF890", VA = "0x20AF890")]
	private void Update()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x20AEC0C", Offset = "0x20AEC0C", VA = "0x20AEC0C")]
	public void Setup2dMode()
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x20B42E0", Offset = "0x20B42E0", VA = "0x20B42E0")]
	public void KillBoltRealGood()
	{
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x20B4384", Offset = "0x20B4384", VA = "0x20B4384")]
	private void KillBoltRealGood2()
	{
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x20B4474", Offset = "0x20B4474", VA = "0x20B4474")]
	public int AssignCustomLight(StickVisual visual)
	{
		return default(int);
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x20B310C", Offset = "0x20B310C", VA = "0x20B310C")]
	private void UpdateCustomLights()
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x20B4714", Offset = "0x20B4714", VA = "0x20B4714")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x20B5FE8", Offset = "0x20B5FE8", VA = "0x20B5FE8")]
	public void Step()
	{
	}

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x20B6BC8", Offset = "0x20B6BC8", VA = "0x20B6BC8")]
	public void RecalcFrameTimeBuffer(int frameNum)
	{
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x20B7444", Offset = "0x20B7444", VA = "0x20B7444")]
	public bool ResetBlitzVarsToFrame(int frameNum)
	{
		return default(bool);
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x20B78D4", Offset = "0x20B78D4", VA = "0x20B78D4")]
	public FrameTimeData GetTimeDataAtFrame(int frameNum)
	{
		return default(FrameTimeData);
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x20B6B00", Offset = "0x20B6B00", VA = "0x20B6B00")]
	public float EvaluateScale(float progress)
	{
		return default(float);
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x20A694C", Offset = "0x20A694C", VA = "0x20A694C")]
	public void AddWeaponToFighter(WeaponType weaponType, Fighter fighter, bool offHand = false, bool clearWeapons = true)
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x20B7A24", Offset = "0x20B7A24", VA = "0x20B7A24")]
	public void AddWeaponToFighter(WeaponType weaponType, Fighter fighter, Hand hand, bool clearWeapons)
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x20AF428", Offset = "0x20AF428", VA = "0x20AF428")]
	public void ResetTimeAndBlitzData()
	{
	}

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x20B8A58", Offset = "0x20B8A58", VA = "0x20B8A58")]
	public void RestartFTDs(FrameTimeData newStart)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x20AF724", Offset = "0x20AF724", VA = "0x20AF724")]
	public void SetIds()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x20B8B4C", Offset = "0x20B8B4C", VA = "0x20B8B4C")]
	public void RestartMultiplayerMatch()
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x20B8F94", Offset = "0x20B8F94", VA = "0x20B8F94")]
	public Fighter SpawnAIEnemy(FighterInfo config)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x20B948C", Offset = "0x20B948C", VA = "0x20B948C")]
	public Fighter SpawnIllustrationEnemy(FighterConfiguration config)
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x20B9998", Offset = "0x20B9998", VA = "0x20B9998")]
	public Fighter SpawnIllustrationEnemy(FighterInfo fi)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x20B9E34", Offset = "0x20B9E34", VA = "0x20B9E34")]
	public Fighter SpawnAIEnemy(FighterInfo config, Vector3 homePos)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x20BA278", Offset = "0x20BA278", VA = "0x20BA278")]
	public void StartSinglePlayerMatch(MatchInfo match)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x20BA650", Offset = "0x20BA650", VA = "0x20BA650")]
	public void FadeAndStartCurrentWave()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x20BA8B0", Offset = "0x20BA8B0", VA = "0x20BA8B0")]
	public void StartSinglePlayerWave()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x20BB790", Offset = "0x20BB790", VA = "0x20BB790")]
	public void StartMPMatch(bool playerOne, bool shortIntro)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x20BC924", Offset = "0x20BC924", VA = "0x20BC924")]
	public void StartSpectatorMPMatch()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x20BD24C", Offset = "0x20BD24C", VA = "0x20BD24C")]
	public void Deactivate(object o)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x20BAC64", Offset = "0x20BAC64", VA = "0x20BAC64")]
	public void CleanUpAllExceptPlayer(bool clearPlayerWeapons = true)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x20BD39C", Offset = "0x20BD39C", VA = "0x20BD39C")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x20BD608", Offset = "0x20BD608", VA = "0x20BD608")]
	public void UnpauseGame()
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x20BD804", Offset = "0x20BD804", VA = "0x20BD804")]
	public void CheckForWinLoss()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0x20BE9D0", Offset = "0x20BE9D0", VA = "0x20BE9D0")]
	public void TriggerMPRoundLoss()
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0x20BEBD0", Offset = "0x20BEBD0", VA = "0x20BEBD0")]
	public void HandleEndgame()
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0x20C1AC8", Offset = "0x20C1AC8", VA = "0x20C1AC8")]
	public void AnalyticsMPMatch(bool victorious)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x20BDC78", Offset = "0x20BDC78", VA = "0x20BDC78")]
	public void AnalyticsSPMatch(bool victorious)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x20C30E4", Offset = "0x20C30E4", VA = "0x20C30E4")]
	public void RewardPlayer(int difficulty, int enemyLevel)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x20C40F4", Offset = "0x20C40F4", VA = "0x20C40F4")]
	public void RewardFighter(FighterInfo fi, int difficulty, int enemyLevel)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x20C46FC", Offset = "0x20C46FC", VA = "0x20C46FC")]
	public void PenalizePlayer(int difficulty, int enemyLevel)
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x20C4E48", Offset = "0x20C4E48", VA = "0x20C4E48")]
	public void PenalizeFighter(FighterInfo fi, int difficulty, int enemyLevel)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x20C2924", Offset = "0x20C2924", VA = "0x20C2924")]
	public void WonMPMatch()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x20C2D0C", Offset = "0x20C2D0C", VA = "0x20C2D0C")]
	public void LostMPMatch()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x20BF980", Offset = "0x20BF980", VA = "0x20BF980")]
	public void PlayerWonMatch(MatchInfo match)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x20C42B4", Offset = "0x20C42B4", VA = "0x20C42B4")]
	public void RecordWinOrLoss(FighterInfo fi, FighterClass playerCampaign, MatchResult result)
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x20C1514", Offset = "0x20C1514", VA = "0x20C1514")]
	public void PlayerLostMatch(MatchInfo match)
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x20C5010", Offset = "0x20C5010", VA = "0x20C5010")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x20C6814", Offset = "0x20C6814", VA = "0x20C6814")]
	public void QuitToCampaignMenu()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x20C6AD0", Offset = "0x20C6AD0", VA = "0x20C6AD0")]
	public void QuitToLastReplay()
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x20C6C94", Offset = "0x20C6C94", VA = "0x20C6C94")]
	public void QuitToMultiplayerMenu()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x20C6ED8", Offset = "0x20C6ED8", VA = "0x20C6ED8")]
	public void QuitToOculusMatch()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x20C736C", Offset = "0x20C736C", VA = "0x20C736C")]
	public void QuitToCustomizeMenu()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x20C7600", Offset = "0x20C7600", VA = "0x20C7600")]
	public void FadeToClassSelect()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x20C7720", Offset = "0x20C7720", VA = "0x20C7720")]
	public void FadeToEmpty()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x20C7800", Offset = "0x20C7800", VA = "0x20C7800")]
	public void QuitToSpectatorClientMenu()
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x20C7AB0", Offset = "0x20C7AB0", VA = "0x20C7AB0")]
	public void QuitToClassSelectMenu()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x20C5274", Offset = "0x20C5274", VA = "0x20C5274")]
	public void QuitToMenus()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x20C7C80", Offset = "0x20C7C80", VA = "0x20C7C80")]
	public bool IsFightState()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x20C7C98", Offset = "0x20C7C98", VA = "0x20C7C98")]
	public List<LayerData> SetLayerRecursively(GameObject obj, int layer, [Optional] HashSet<int> ignoreMask)
	{
		return null;
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x20C8174", Offset = "0x20C8174", VA = "0x20C8174")]
	public Camera GetPriorityCamera()
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x20C7BC4", Offset = "0x20C7BC4", VA = "0x20C7BC4")]
	public void SwitchToStaticReadyRoom()
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x20C83E4", Offset = "0x20C83E4", VA = "0x20C83E4")]
	public void VertexColorMesh(MeshRenderer r, Color c)
	{
	}

	[Token(Token = "0x60007B8")]
	public static void Shuffle<T>(IList<T> list)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x20C8570", Offset = "0x20C8570", VA = "0x20C8570")]
	public static string FormatNumber(long num)
	{
		return null;
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x20C8708", Offset = "0x20C8708", VA = "0x20C8708")]
	public void ScaleOutThenScaleIn(GameObject scaleOut, GameObject scaleIn, float time = 0.5f, float finalScale = 1f)
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x20C8758", Offset = "0x20C8758", VA = "0x20C8758")]
	public void ScaleOut(GameObject scaleOut, float time = 0.5f, float delay = 0f, bool cancelTweens = true)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x20C6FEC", Offset = "0x20C6FEC", VA = "0x20C6FEC")]
	public void ScaleIn(GameObject scaleIn, float time = 0.5f, float finalScale = 1f, float delay = 0f)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x20AC220", Offset = "0x20AC220", VA = "0x20AC220")]
	public void DisableInput(float time)
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x20B25E4", Offset = "0x20B25E4", VA = "0x20B25E4")]
	private void SetGlobalPause(bool nowpaused)
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x20C8B20", Offset = "0x20C8B20", VA = "0x20C8B20")]
	private void OnApplicationPause(bool apppaused)
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x20C8BE8", Offset = "0x20C8BE8", VA = "0x20C8BE8")]
	private void OnApplicationFocus(bool justfocused)
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x20C8BEC", Offset = "0x20C8BEC", VA = "0x20C8BEC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x20C905C", Offset = "0x20C905C", VA = "0x20C905C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCF48", Offset = "0x5CCF48")]
	public void ClearAllPlayerPrefsData()
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x20C9078", Offset = "0x20C9078", VA = "0x20C9078")]
	public void CleanUpMeshes(GameObject go)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x20B2B28", Offset = "0x20B2B28", VA = "0x20B2B28")]
	public void SetWallMatGlow()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x20AD988", Offset = "0x20AD988", VA = "0x20AD988")]
	public void SetSeatedMode()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x20C907C", Offset = "0x20C907C", VA = "0x20C907C")]
	public void NoMatchFoundMessage()
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x20C90F8", Offset = "0x20C90F8", VA = "0x20C90F8")]
	public void UnpauseReplay()
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x20C9280", Offset = "0x20C9280", VA = "0x20C9280")]
	private void ShutdownComplete2()
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x20CA7F0", Offset = "0x20CA7F0", VA = "0x20CA7F0")]
	private void EvaluateDisconnectFault()
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x20CB47C", Offset = "0x20CB47C", VA = "0x20CB47C")]
	private void OnConnectionCheckDone(Region r)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x20B1CDC", Offset = "0x20B1CDC", VA = "0x20B1CDC")]
	public void ForceMPMatchLoss()
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x20B2160", Offset = "0x20B2160", VA = "0x20B2160")]
	private void ForceMPMatchWin()
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x20C3E58", Offset = "0x20C3E58", VA = "0x20C3E58")]
	public void UnlockAchievement(IronAchievement type)
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x20CB6F8", Offset = "0x20CB6F8", VA = "0x20CB6F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCF98", Offset = "0x5CCF98")]
	public void AddEventHandlers()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x20CB9C0", Offset = "0x20CB9C0", VA = "0x20CB9C0")]
	public void SetCurrentUserPresence(string DestinationApiName, bool isJoinable, bool lookingForMatch = false)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x20CBC6C", Offset = "0x20CBC6C", VA = "0x20CBC6C")]
	public void SetCurrentUserPresence(string DestinationApiName, bool isJoinable, DateTime startTime)
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x20CBF54", Offset = "0x20CBF54", VA = "0x20CBF54")]
	private void SetRichPresenceCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x20CC33C", Offset = "0x20CC33C", VA = "0x20CC33C")]
	public void TryConnectVoip()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x20CC6B0", Offset = "0x20CC6B0", VA = "0x20CC6B0")]
	public void SetMuted(bool muted)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x20B1884", Offset = "0x20B1884", VA = "0x20B1884")]
	public void MuteVoip()
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x20B1134", Offset = "0x20B1134", VA = "0x20B1134")]
	public void UnmuteVoip()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x20CC724", Offset = "0x20CC724", VA = "0x20CC724")]
	public TextMeshPro TextEffect(Vector3 point)
	{
		return null;
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x20B2B2C", Offset = "0x20B2B2C", VA = "0x20B2B2C")]
	public void SetWavePointers(bool pointersOn)
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x20AD730", Offset = "0x20AD730", VA = "0x20AD730")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CCFD8", Offset = "0x5CCFD8")]
	public void SetFontsHiRes()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x20AD85C", Offset = "0x20AD85C", VA = "0x20AD85C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD014", Offset = "0x5CD014")]
	public void SetFontsLowRes()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x20CCF78", Offset = "0x20CCF78", VA = "0x20CCF78")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD050", Offset = "0x5CD050")]
	public void SetLanguageEnglish()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x20CD098", Offset = "0x20CD098", VA = "0x20CD098")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD090", Offset = "0x5CD090")]
	public void SetLanguageSpanish()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x20CD1B8", Offset = "0x20CD1B8", VA = "0x20CD1B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD0D0", Offset = "0x5CD0D0")]
	public void SetLanguageFrench()
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x20CD2D8", Offset = "0x20CD2D8", VA = "0x20CD2D8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD110", Offset = "0x5CD110")]
	public void SetLanguageGerman()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x20CD3F8", Offset = "0x20CD3F8", VA = "0x20CD3F8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD150", Offset = "0x5CD150")]
	public void SetLanguageKorean()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x20CD518", Offset = "0x20CD518", VA = "0x20CD518")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD190", Offset = "0x5CD190")]
	public void SetLanguageJapanese()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0x20CD638", Offset = "0x20CD638", VA = "0x20CD638")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD1D0", Offset = "0x5CD1D0")]
	public void SetColorSpace0()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0x20CD6B8", Offset = "0x20CD6B8", VA = "0x20CD6B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD20C", Offset = "0x5CD20C")]
	public void SetColorSpace1()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x20CD738", Offset = "0x20CD738", VA = "0x20CD738")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD248", Offset = "0x5CD248")]
	public void SetColorSpace2()
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x20CD7B8", Offset = "0x20CD7B8", VA = "0x20CD7B8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD284", Offset = "0x5CD284")]
	public void SetColorSpace3()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x20CD838", Offset = "0x20CD838", VA = "0x20CD838")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD2C0", Offset = "0x5CD2C0")]
	public void SetColorSpace4()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x20CD8B8", Offset = "0x20CD8B8", VA = "0x20CD8B8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x20CD970", Offset = "0x20CD970", VA = "0x20CD970")]
	public void SendSMTEvent(SetMatchTypeEvent evnt, float delay)
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x20CD994", Offset = "0x20CD994", VA = "0x20CD994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD2FC", Offset = "0x5CD2FC")]
	private IEnumerator SendSMTEvent2(SetMatchTypeEvent evnt, float delay)
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x20CDA44", Offset = "0x20CDA44", VA = "0x20CDA44")]
	public void CheckForPool()
	{
	}

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0x20CDB14", Offset = "0x20CDB14", VA = "0x20CDB14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD374", Offset = "0x5CD374")]
	private IEnumerator CheckForPool2(string uri)
	{
		return null;
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x20CDBB8", Offset = "0x20CDBB8", VA = "0x20CDBB8")]
	public GM()
	{
	}
}
[Token(Token = "0x2000147")]
public struct FrameTimeData
{
	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int fixedFrameCount;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float scaledTime;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float unscaledTime;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float fixedDeltaTime;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float timeScaleProgress;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool anyoneBlitzing;
}
[Token(Token = "0x2000148")]
public class LayerData
{
	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public GameObject obj;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int originalLayer;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x23EAA9C", Offset = "0x23EAA9C", VA = "0x23EAA9C")]
	public LayerData(GameObject obj, int layer)
	{
	}
}
[Token(Token = "0x2000149")]
public enum GameState
{
	[Token(Token = "0x4000BBB")]
	Menu,
	[Token(Token = "0x4000BBC")]
	MatchPrep,
	[Token(Token = "0x4000BBD")]
	IntroSequence,
	[Token(Token = "0x4000BBE")]
	Battle,
	[Token(Token = "0x4000BBF")]
	Replay,
	[Token(Token = "0x4000BC0")]
	Victory,
	[Token(Token = "0x4000BC1")]
	Defeat
}
[Token(Token = "0x200014A")]
public static class Extensions
{
	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x21DA704", Offset = "0x21DA704", VA = "0x21DA704")]
	public static string KiloFormat(this int num)
	{
		return null;
	}
}
[Token(Token = "0x200014B")]
public enum IronAchievement
{
	[Token(Token = "0x4000BC3")]
	ExportGIF,
	[Token(Token = "0x4000BC4")]
	Tutorial,
	[Token(Token = "0x4000BC5")]
	MPRank1,
	[Token(Token = "0x4000BC6")]
	MPRank2,
	[Token(Token = "0x4000BC7")]
	MPRank3,
	[Token(Token = "0x4000BC8")]
	MPRank4,
	[Token(Token = "0x4000BC9")]
	MPRank5,
	[Token(Token = "0x4000BCA")]
	MPRank6,
	[Token(Token = "0x4000BCB")]
	MPRank7,
	[Token(Token = "0x4000BCC")]
	MPRank8,
	[Token(Token = "0x4000BCD")]
	MPRank9,
	[Token(Token = "0x4000BCE")]
	MPRank10,
	[Token(Token = "0x4000BCF")]
	MPRank11,
	[Token(Token = "0x4000BD0")]
	MPRank12,
	[Token(Token = "0x4000BD1")]
	MPRank13,
	[Token(Token = "0x4000BD2")]
	Exhib1,
	[Token(Token = "0x4000BD3")]
	Exhib2,
	[Token(Token = "0x4000BD4")]
	Exhib3,
	[Token(Token = "0x4000BD5")]
	Exhib4,
	[Token(Token = "0x4000BD6")]
	Exhib5,
	[Token(Token = "0x4000BD7")]
	Exhib6,
	[Token(Token = "0x4000BD8")]
	Exhib7,
	[Token(Token = "0x4000BD9")]
	Exhib8,
	[Token(Token = "0x4000BDA")]
	Exhib9,
	[Token(Token = "0x4000BDB")]
	Exhib10,
	[Token(Token = "0x4000BDC")]
	Exhib11,
	[Token(Token = "0x4000BDD")]
	Exhib12,
	[Token(Token = "0x4000BDE")]
	Exhib13,
	[Token(Token = "0x4000BDF")]
	Exhib14,
	[Token(Token = "0x4000BE0")]
	Exhib15,
	[Token(Token = "0x4000BE1")]
	Exhib16,
	[Token(Token = "0x4000BE2")]
	Exhib17,
	[Token(Token = "0x4000BE3")]
	Exhib18,
	[Token(Token = "0x4000BE4")]
	Champ1,
	[Token(Token = "0x4000BE5")]
	Champ2,
	[Token(Token = "0x4000BE6")]
	Champ3
}
[Token(Token = "0x200014C")]
public enum DifficultyLevel
{
	[Token(Token = "0x4000BE8")]
	Easy,
	[Token(Token = "0x4000BE9")]
	Medium,
	[Token(Token = "0x4000BEA")]
	Hard
}
[Token(Token = "0x200014D")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter fighter;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Weapon weapon;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Weapon offHandingWeapon;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject visuals;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TBInput.Controller controller;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool triggerDown;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool triggerUp;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool triggerHeld;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool gripDown;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool gripUp;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool gripHeld;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool aDown;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool aUp;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool aHeld;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool bDown;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool bUp;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool bHeld;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool aTouched;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool triggerTouched;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	public bool gripTouched;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
	public bool AItriggerDown;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool AItriggerUp;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool AIgripDown;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool AIgripUp;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool AIaDown;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool AIaUp;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool AIbDown;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool AIbUp;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
	public bool AIforceBlitz;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool AIforceRetreat;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 pullPos1;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float pullStartDist;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3 targetPos;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool midPull;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool wasHeld;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject PullCylinder;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject HandGuide;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool vizGripping;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HandPoseType pose;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x226BC40", Offset = "0x226BC40", VA = "0x226BC40")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x226BC44", Offset = "0x226BC44", VA = "0x226BC44")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x2273B7C", Offset = "0x2273B7C", VA = "0x2273B7C")]
	public void EquipWeapon(Weapon w)
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x2274BBC", Offset = "0x2274BBC", VA = "0x2274BBC")]
	public Vector3 GetVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x2274C4C", Offset = "0x2274C4C", VA = "0x2274C4C")]
	public Vector3 GetAngularVelocity()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x2274CDC", Offset = "0x2274CDC", VA = "0x2274CDC")]
	public Hand()
	{
	}
}
[Token(Token = "0x200014E")]
public enum HandPoseType
{
	[Token(Token = "0x4000C13")]
	Fist,
	[Token(Token = "0x4000C14")]
	ThumbsUp,
	[Token(Token = "0x4000C15")]
	Pointing,
	[Token(Token = "0x4000C16")]
	FingerGuns,
	[Token(Token = "0x4000C17")]
	OpenHand
}
[Token(Token = "0x200014F")]
public class HelmSet : MonoBehaviour
{
	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<MeshRenderer> ShadowRenderers;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D lowResTexture;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer mainRenderer;

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x227556C", Offset = "0x227556C", VA = "0x227556C")]
	public HelmSet()
	{
	}
}
[Token(Token = "0x2000150")]
public class IntroMenu : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000516")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BEC", Offset = "0x5C2BEC")]
	private sealed class <>c
	{
		[Token(Token = "0x4002832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4002833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Message<string>.Callback <>9__23_0;

		[Token(Token = "0x60025A4")]
		[Address(RVA = "0x23DF7EC", Offset = "0x23DF7EC", VA = "0x23DF7EC")]
		public <>c()
		{
		}

		[Token(Token = "0x60025A5")]
		[Address(RVA = "0x23DF7F4", Offset = "0x23DF7F4", VA = "0x23DF7F4")]
		internal void <PassEntitlement>b__23_0(Message<string> message)
		{
		}
	}

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool tutorialFirst;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject EntitlementFailMenu;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool gotUsername;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool gotEntitlement;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool deeplinkBoot;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	private bool handledRoom;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool justStartingUp;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool listeningForOculusMatches;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject InfoPanel;

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject CancelButton;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI infoText;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool runningTimer;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timer;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int testID;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string testUsername;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool testGroupJoin;

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x221BE18", Offset = "0x221BE18", VA = "0x221BE18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x221C4CC", Offset = "0x221C4CC", VA = "0x221C4CC")]
	private void ProcessQuitPenalty()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x221DB90", Offset = "0x221DB90", VA = "0x221DB90")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x221DF40", Offset = "0x221DF40", VA = "0x221DF40")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x221EDC0", Offset = "0x221EDC0", VA = "0x221EDC0")]
	private void GetUserData(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x221F0F8", Offset = "0x221F0F8", VA = "0x221F0F8")]
	private void GetEntitlementCallback(Oculus.Platform.Message msg)
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x221CEA0", Offset = "0x221CEA0", VA = "0x221CEA0")]
	public void FailEntitlement()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x221CF90", Offset = "0x221CF90", VA = "0x221CF90")]
	public void PassEntitlement()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x221F2A8", Offset = "0x221F2A8", VA = "0x221F2A8")]
	private void QuitGame()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x221F2B0", Offset = "0x221F2B0", VA = "0x221F2B0")]
	private void OnLaunchIntentChanged(Message<string> liMsg)
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x2220FD8", Offset = "0x2220FD8", VA = "0x2220FD8")]
	private void OnInitComplete()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x22213EC", Offset = "0x22213EC", VA = "0x22213EC")]
	private void EnqueueCallback(Message<MatchmakingEnqueueResult> msg)
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x221F94C", Offset = "0x221F94C", VA = "0x221F94C")]
	private void GroupLaunch(ulong RoomID, string DeeplinkMessage, string DestinationApiName, UserList UsersOptional)
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x2221C40", Offset = "0x2221C40", VA = "0x2221C40")]
	public void ListenForOculusMatches()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x2221F6C", Offset = "0x2221F6C", VA = "0x2221F6C")]
	public void CancelOculusMatchListening()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x22205FC", Offset = "0x22205FC", VA = "0x22205FC")]
	private void JoinAUser(UserList UsersOptional, string DeeplinkMessage, string DestinationApiName)
	{
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x2220C14", Offset = "0x2220C14", VA = "0x2220C14")]
	private void DeeplinkToDestination(string DeeplinkMessage, string DestinationApiName)
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x222154C", Offset = "0x222154C", VA = "0x222154C")]
	private void MatchUp(string opponentName)
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x2222058", Offset = "0x2222058", VA = "0x2222058")]
	private void MatchFoundCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x2222288", Offset = "0x2222288", VA = "0x2222288")]
	private void MatchmakingJoinRoomCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x2222E50", Offset = "0x2222E50", VA = "0x2222E50")]
	private void MatchmakingRoomUpdateCallback(Message<Oculus.Platform.Models.Room> msg)
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x22228A4", Offset = "0x22228A4", VA = "0x22228A4")]
	private void ProcessRoomData(Oculus.Platform.Models.Room room)
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x2223464", Offset = "0x2223464", VA = "0x2223464")]
	public void Cancel()
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x22235BC", Offset = "0x22235BC", VA = "0x22235BC")]
	public IntroMenu()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x2223638", Offset = "0x2223638", VA = "0x2223638")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CD3FC", Offset = "0x5CD3FC")]
	private void <Awake>b__16_0(Message<PlatformInitialize> message)
	{
	}
}
[Token(Token = "0x2000151")]
public class Jumbotron : MonoBehaviour
{
	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject GameplayStuff;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject OneOpponent;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject TwoOpponents;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ThreeOpponents;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public JumbotronBar playerOneBar;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public JumbotronBar playerTwoBar;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public JumbotronBar twoOpBar1;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JumbotronBar twoOpBar2;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public JumbotronBar threeOpBar1;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JumbotronBar threeOpBar2;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public JumbotronBar threeOpBar3;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro Countdown;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshPro PlayerOneIntroduction;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro PlayerTwoIntroduction;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TextMeshPro vsIntroduction;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject IntroductionStuff;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject HeadlineDuel;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject HeadlineOpeningMatch;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject HeadlineRoundOne;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject HeadlineRoundTwo;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject HeadlineFinalRound;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject HeadlineQuarterfinals;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject HeadlineSemifinals;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject HeadlineFinals;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject HeadlineFight;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isone;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x23DFB60", Offset = "0x23DFB60", VA = "0x23DFB60")]
	public void ShowP1Introduction()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x23DFBB0", Offset = "0x23DFBB0", VA = "0x23DFBB0")]
	public void ShowVSIntroduction()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x23DFC00", Offset = "0x23DFC00", VA = "0x23DFC00")]
	public void ShowP2Introduction()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x23DFC50", Offset = "0x23DFC50", VA = "0x23DFC50")]
	public void SetTwoPlayers(Fighter p1, Fighter p2)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x23DFF0C", Offset = "0x23DFF0C", VA = "0x23DFF0C")]
	public void HideAll()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x23E0620", Offset = "0x23E0620", VA = "0x23E0620")]
	public void SetOpponents(List<Fighter> opponents)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x23E126C", Offset = "0x23E126C", VA = "0x23E126C")]
	public void CatchUpHealth()
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x23E1778", Offset = "0x23E1778", VA = "0x23E1778")]
	public void VertexColorMesh(MeshRenderer r, Color c)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x23E1900", Offset = "0x23E1900", VA = "0x23E1900")]
	public Jumbotron()
	{
	}
}
[Token(Token = "0x2000152")]
public class JumbotronBar : MonoBehaviour
{
	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter fighter;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshPro PlayerLabel;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MeshRenderer Fill;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer Outline;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpriteRenderer badgeBG;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteRenderer badgeFG;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Mesh FillMesh;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float recentDamage;

	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool thinVersion;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float energyFlashTimer;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float vulnerabilityFlashTimer;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float flashSpeed;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float delayedHealth;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastHealth;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float delayTimer;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Vector4> uv2;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<Vector4> uv3;

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x23E1908", Offset = "0x23E1908", VA = "0x23E1908")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x23E1A9C", Offset = "0x23E1A9C", VA = "0x23E1A9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x23E1600", Offset = "0x23E1600", VA = "0x23E1600")]
	public void CatchUpHealth()
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x23E01B8", Offset = "0x23E01B8", VA = "0x23E01B8")]
	public void SetFighter(Fighter f, bool isone)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x23E21DC", Offset = "0x23E21DC", VA = "0x23E21DC")]
	public void SetExtras(Mesh mesh, Vector4 v1, Vector4 v2)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x23E2054", Offset = "0x23E2054", VA = "0x23E2054")]
	public void VertexColorMesh(MeshRenderer r, Color c)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x23E2398", Offset = "0x23E2398", VA = "0x23E2398")]
	public JumbotronBar()
	{
	}
}
[Token(Token = "0x2000153")]
public class Keyboard : MonoBehaviour
{
	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int maxOutputChars;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshPro inputFieldLabel;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VRKeyboardFull keyboard;

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x23E2448", Offset = "0x23E2448", VA = "0x23E2448")]
	private void Start()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x23E25F8", Offset = "0x23E25F8", VA = "0x23E25F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x23E2788", Offset = "0x23E2788", VA = "0x23E2788")]
	private void HandleClick(string value)
	{
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x23E2864", Offset = "0x23E2864", VA = "0x23E2864")]
	private void BackspaceKey()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x23E2978", Offset = "0x23E2978", VA = "0x23E2978")]
	private void EnterKey()
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x23E2A08", Offset = "0x23E2A08", VA = "0x23E2A08")]
	private void TypeKey(string value)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0x23E2A8C", Offset = "0x23E2A8C", VA = "0x23E2A8C")]
	private void TypeKey(char key)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x23E2B70", Offset = "0x23E2B70", VA = "0x23E2B70")]
	public Keyboard()
	{
	}
}
[Token(Token = "0x2000154")]
public class LeagueConfiguration : MonoBehaviour
{
	[Token(Token = "0x2000517")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2BFC", Offset = "0x5C2BFC")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4002834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MatchConfiguration matchConfig;

		[Token(Token = "0x60025A6")]
		[Address(RVA = "0x23EB400", Offset = "0x23EB400", VA = "0x23EB400")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x60025A7")]
		[Address(RVA = "0x23EB6C4", Offset = "0x23EB6C4", VA = "0x23EB6C4")]
		internal bool <Populate>b__0(MatchInfo mi)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A8")]
		[Address(RVA = "0x23EB710", Offset = "0x23EB710", VA = "0x23EB710")]
		internal bool <Populate>b__1(MatchInfo mi)
		{
			return default(bool);
		}

		[Token(Token = "0x60025A9")]
		[Address(RVA = "0x23EB75C", Offset = "0x23EB75C", VA = "0x23EB75C")]
		internal bool <Populate>b__2(MatchInfo mi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int leagueCount;

	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LeagueType leagueType;

	[NonSerialized]
	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeagueInfo li;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x23EAAC4", Offset = "0x23EAAC4", VA = "0x23EAAC4")]
	public void Build()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x23EAD08", Offset = "0x23EAD08", VA = "0x23EAD08")]
	public void Populate(LeagueInfo deserializedLeague)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x23EB408", Offset = "0x23EB408", VA = "0x23EB408")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD40C", Offset = "0x5CD40C")]
	public void GenerateID()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x23EB4BC", Offset = "0x23EB4BC", VA = "0x23EB4BC")]
	public void CustomDevEdit()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x23EB588", Offset = "0x23EB588", VA = "0x23EB588")]
	public LeagueConfiguration()
	{
	}
}
[Serializable]
[Token(Token = "0x2000155")]
public class LeagueInfo
{
	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string id;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int playerLocation;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MatchInfo> tournaments;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<MatchInfo> exhibitions;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<MatchInfo> opponents;

	[NonSerialized]
	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int leagueCount;

	[NonSerialized]
	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LeagueType leagueType;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x23EB600", Offset = "0x23EB600", VA = "0x23EB600")]
	public LeagueInfo()
	{
	}
}
[Token(Token = "0x2000156")]
public class LeagueMenu : MonoBehaviour
{
	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject opponentBtnPrefab;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject pageBackBtn;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject pageForwardBtn;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject matchModal;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MatchMenu matchMenu;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> opponentBtns;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<LeagueUIInfo> leagueUIs;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<FighterInfo> fighters;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int page;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int pageLength;

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastPage;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool initialized;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x23EB7A8", Offset = "0x23EB7A8", VA = "0x23EB7A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x23EC3C8", Offset = "0x23EC3C8", VA = "0x23EC3C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x23EC6C4", Offset = "0x23EC6C4", VA = "0x23EC6C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x23EBA40", Offset = "0x23EBA40", VA = "0x23EBA40")]
	public void BuildLeagueUIs()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x23EC6E8", Offset = "0x23EC6E8", VA = "0x23EC6E8")]
	public void BuildFighterList(LeagueType league)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x23EBC04", Offset = "0x23EBC04", VA = "0x23EBC04")]
	public void InitLeague(LeagueInfo info)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x23ED5F4", Offset = "0x23ED5F4", VA = "0x23ED5F4")]
	public void PageBack()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x23ED6C8", Offset = "0x23ED6C8", VA = "0x23ED6C8")]
	public void PageForward()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x23EBD78", Offset = "0x23EBD78", VA = "0x23EBD78")]
	public void UpdatePageButtons()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x23EC3DC", Offset = "0x23EC3DC", VA = "0x23EC3DC")]
	public void UpdateTable(bool resetPage = false)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x23ED7D0", Offset = "0x23ED7D0", VA = "0x23ED7D0")]
	public void OpenModal(MatchInfo mi)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x23ED894", Offset = "0x23ED894", VA = "0x23ED894")]
	public LeagueMenu()
	{
	}
}
[Token(Token = "0x2000157")]
public class LeagueUIInfo
{
	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int leagueCount;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LeagueType leagueType;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int playerLocation;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LeagueInfo league;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x23EC6C8", Offset = "0x23EC6C8", VA = "0x23EC6C8")]
	public LeagueUIInfo(LeagueInfo league)
	{
	}
}
[Token(Token = "0x2000158")]
public class LeagueMenuButton : MonoBehaviour
{
	[Token(Token = "0x2000518")]
	public enum State
	{
		[Token(Token = "0x4002836")]
		Idle,
		[Token(Token = "0x4002837")]
		FlipWait,
		[Token(Token = "0x4002838")]
		FlipClose,
		[Token(Token = "0x4002839")]
		FlipOpen,
		[Token(Token = "0x400283A")]
		SlidePrevWait,
		[Token(Token = "0x400283B")]
		SlidePrevClose,
		[Token(Token = "0x400283C")]
		SlidePrevOpen,
		[Token(Token = "0x400283D")]
		SlideNextWait,
		[Token(Token = "0x400283E")]
		SlideNextClose,
		[Token(Token = "0x400283F")]
		SlideNextOpen
	}

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image background;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI number;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI skillRating;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Image badgeBackground;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image badgeForeground;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public RectTransform box;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LeagueMenu parentMenu;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject victorySprite;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject easySprite;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject medSprite;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hardSprite;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public MatchInfo matchInfo;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int id;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isPlayer;

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startWidth;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float waitTime;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float actionTime;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeElapsed;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private State state;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int newNumber;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FighterInfo newFighterInfo;

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x23ED928", Offset = "0x23ED928", VA = "0x23ED928")]
	private void Start()
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x23EDA10", Offset = "0x23EDA10", VA = "0x23EDA10")]
	private void Update()
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x23EE2C0", Offset = "0x23EE2C0", VA = "0x23EE2C0")]
	private MatchInfo GetAssociatedMatch(FighterInfo fi)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x23ECC20", Offset = "0x23ECC20", VA = "0x23ECC20")]
	public void SetFighterInfo(int num, FighterInfo fi)
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x23EE5A0", Offset = "0x23EE5A0", VA = "0x23EE5A0")]
	public void SetMatch(int num, MatchInfo mi)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x23ED7A0", Offset = "0x23ED7A0", VA = "0x23ED7A0")]
	public void StartFlip(float delay, float flipTime, int newNumber, FighterInfo newFighterInfo)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x23EE810", Offset = "0x23EE810", VA = "0x23EE810")]
	public void StartSlideNext(float delay, float slideTime, int newNumber, FighterInfo newFighterInfo)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x23EE840", Offset = "0x23EE840", VA = "0x23EE840")]
	public void StartSlidePrev(float delay, float slideTime, int newNumber, FighterInfo newFighterInfo)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x23EE870", Offset = "0x23EE870", VA = "0x23EE870")]
	public void Select()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x23EE8A8", Offset = "0x23EE8A8", VA = "0x23EE8A8")]
	public LeagueMenuButton()
	{
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public class Loadout
{
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public WeaponType mainHand;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WeaponType offHand;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ArmorType armor;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public HelmType helm;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialType metal;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MaterialType accent;

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x245C050", Offset = "0x245C050", VA = "0x245C050")]
	public void Set(WeaponType mainHand, WeaponType offHand, ArmorType armor, HelmType helm, MaterialType metal, MaterialType accent)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x245C06C", Offset = "0x245C06C", VA = "0x245C06C")]
	public void ApplyToFighter(Fighter fighter, bool armorOnly = false)
	{
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x245C3F0", Offset = "0x245C3F0", VA = "0x245C3F0")]
	public Loadout()
	{
	}
}
[Token(Token = "0x200015A")]
public class MainMenu : MonoBehaviour
{
	[Token(Token = "0x2000519")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C0C", Offset = "0x5C2C0C")]
	private sealed class <GetAnimsRequest>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4002843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025AE")]
			[Address(RVA = "0x234D890", Offset = "0x234D890", VA = "0x234D890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B0")]
			[Address(RVA = "0x234D920", Offset = "0x234D920", VA = "0x234D920", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025AA")]
		[Address(RVA = "0x234AFCC", Offset = "0x234AFCC", VA = "0x234AFCC")]
		[DebuggerHidden]
		public <GetAnimsRequest>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60025AB")]
		[Address(RVA = "0x234CC6C", Offset = "0x234CC6C", VA = "0x234CC6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025AC")]
		[Address(RVA = "0x234CD5C", Offset = "0x234CD5C", VA = "0x234CD5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025AD")]
		[Address(RVA = "0x234CC84", Offset = "0x234CC84", VA = "0x234CC84")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025AF")]
		[Address(RVA = "0x234D898", Offset = "0x234D898", VA = "0x234D898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C1C", Offset = "0x5C2C1C")]
	private sealed class <GetBansRequest>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4002847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002D2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025B5")]
			[Address(RVA = "0x234E3DC", Offset = "0x234E3DC", VA = "0x234E3DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025B7")]
			[Address(RVA = "0x234E46C", Offset = "0x234E46C", VA = "0x234E46C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B1")]
		[Address(RVA = "0x234AFEC", Offset = "0x234AFEC", VA = "0x234AFEC")]
		[DebuggerHidden]
		public <GetBansRequest>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60025B2")]
		[Address(RVA = "0x234D928", Offset = "0x234D928", VA = "0x234D928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025B3")]
		[Address(RVA = "0x234DA18", Offset = "0x234DA18", VA = "0x234DA18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025B4")]
		[Address(RVA = "0x234D940", Offset = "0x234D940", VA = "0x234D940")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025B6")]
		[Address(RVA = "0x234E3E4", Offset = "0x234E3E4", VA = "0x234E3E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C2C", Offset = "0x5C2C2C")]
	private sealed class <GetForgivenessRequest>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400284A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x400284B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025BC")]
			[Address(RVA = "0x234ED28", Offset = "0x234ED28", VA = "0x234ED28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025BE")]
			[Address(RVA = "0x234EDB8", Offset = "0x234EDB8", VA = "0x234EDB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025B8")]
		[Address(RVA = "0x234B00C", Offset = "0x234B00C", VA = "0x234B00C")]
		[DebuggerHidden]
		public <GetForgivenessRequest>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x60025B9")]
		[Address(RVA = "0x234E474", Offset = "0x234E474", VA = "0x234E474", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025BA")]
		[Address(RVA = "0x234E564", Offset = "0x234E564", VA = "0x234E564", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025BB")]
		[Address(RVA = "0x234E48C", Offset = "0x234E48C", VA = "0x234E48C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025BD")]
		[Address(RVA = "0x234ED30", Offset = "0x234ED30", VA = "0x234ED30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C3C", Offset = "0x5C2C3C")]
	private sealed class <GetRequest>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400284C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400284D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400284E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x400284F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MainMenu <>4__this;

		[Token(Token = "0x4002850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025C3")]
			[Address(RVA = "0x234FEC0", Offset = "0x234FEC0", VA = "0x234FEC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025C5")]
			[Address(RVA = "0x234FF50", Offset = "0x234FF50", VA = "0x234FF50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025BF")]
		[Address(RVA = "0x234B02C", Offset = "0x234B02C", VA = "0x234B02C")]
		[DebuggerHidden]
		public <GetRequest>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60025C0")]
		[Address(RVA = "0x234F7D0", Offset = "0x234F7D0", VA = "0x234F7D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C1")]
		[Address(RVA = "0x234F8C0", Offset = "0x234F8C0", VA = "0x234F8C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C2")]
		[Address(RVA = "0x234F7E8", Offset = "0x234F7E8", VA = "0x234F7E8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025C4")]
		[Address(RVA = "0x234FEC8", Offset = "0x234FEC8", VA = "0x234FEC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C4C", Offset = "0x5C2C4C")]
	private sealed class <GetGifList>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string uri;

		[Token(Token = "0x4002854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MainMenu <>4__this;

		[Token(Token = "0x4002855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170002D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60025CA")]
			[Address(RVA = "0x234F738", Offset = "0x234F738", VA = "0x234F738", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60025CC")]
			[Address(RVA = "0x234F7C8", Offset = "0x234F7C8", VA = "0x234F7C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60025C6")]
		[Address(RVA = "0x234B04C", Offset = "0x234B04C", VA = "0x234B04C")]
		[DebuggerHidden]
		public <GetGifList>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x60025C7")]
		[Address(RVA = "0x234EDC0", Offset = "0x234EDC0", VA = "0x234EDC0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60025C8")]
		[Address(RVA = "0x234EEB0", Offset = "0x234EEB0", VA = "0x234EEB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60025C9")]
		[Address(RVA = "0x234EDD8", Offset = "0x234EDD8", VA = "0x234EDD8")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60025CB")]
		[Address(RVA = "0x234F740", Offset = "0x234F740", VA = "0x234F740", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI newsText;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI genericNewsText;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool updatedNews;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float updateTimer;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject RecordAnimationsButton;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VideoPlayer testplayer;

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x234A8CC", Offset = "0x234A8CC", VA = "0x234A8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x234A974", Offset = "0x234A974", VA = "0x234A974")]
	private void Update()
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x234AE98", Offset = "0x234AE98", VA = "0x234AE98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD440", Offset = "0x5CD440")]
	private IEnumerator GetAnimsRequest(string uri)
	{
		return null;
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x234AD80", Offset = "0x234AD80", VA = "0x234AD80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD4B8", Offset = "0x5CD4B8")]
	private IEnumerator GetBansRequest(string uri)
	{
		return null;
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x234AE0C", Offset = "0x234AE0C", VA = "0x234AE0C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD530", Offset = "0x5CD530")]
	private IEnumerator GetForgivenessRequest(string uri)
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x234ACD8", Offset = "0x234ACD8", VA = "0x234ACD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD5A8", Offset = "0x5CD5A8")]
	private IEnumerator GetRequest(string uri)
	{
		return null;
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x234AF24", Offset = "0x234AF24", VA = "0x234AF24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CD620", Offset = "0x5CD620")]
	private IEnumerator GetGifList(string uri)
	{
		return null;
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x234B06C", Offset = "0x234B06C", VA = "0x234B06C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x234B61C", Offset = "0x234B61C", VA = "0x234B61C")]
	public void TutorialStart()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x234B788", Offset = "0x234B788", VA = "0x234B788")]
	public void CampaignStart()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x234BBF0", Offset = "0x234BBF0", VA = "0x234BBF0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD698", Offset = "0x5CD698")]
	public void MultiplayerStart()
	{
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x234C2A0", Offset = "0x234C2A0", VA = "0x234C2A0")]
	public void SettingsStart()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x234C47C", Offset = "0x234C47C", VA = "0x234C47C")]
	public void TipsStart()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x234C654", Offset = "0x234C654", VA = "0x234C654")]
	public void ReplayStart()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x234C8A4", Offset = "0x234C8A4", VA = "0x234C8A4")]
	public void TrainingStart()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x234CA48", Offset = "0x234CA48", VA = "0x234CA48")]
	private void SwitchToTrainingMenu()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x234CC58", Offset = "0x234CC58", VA = "0x234CC58")]
	public MainMenu()
	{
	}
}
[Token(Token = "0x200015B")]
public class MatchConfiguration : MonoBehaviour
{
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C5C", Offset = "0x5C2C5C")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x4002856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveConfiguration waveConfig;

		[Token(Token = "0x60025CD")]
		[Address(RVA = "0x2350770", Offset = "0x2350770", VA = "0x2350770")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60025CE")]
		[Address(RVA = "0x2350A78", Offset = "0x2350A78", VA = "0x2350A78")]
		internal bool <Populate>b__0(WaveInfo wi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public new string name;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LeagueType league;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MatchType type;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int difficulty;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string description;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<Qualifier> requiredQualifiers;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Qualifier qualifierGranted;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int requiredSkillRating;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int skillRatingToGain;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int skillRatingToLose;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int requiredMoney;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int moneyToGain;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public StageType stage;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int totalTournamentRounds;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int roundsRequiredToWin;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public FighterConfiguration featuredEnemy;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool generate;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int tournyStartMin;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int tournyStartRange;

	[NonSerialized]
	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public MatchInfo mi;

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x234FF58", Offset = "0x234FF58", VA = "0x234FF58")]
	public void Build()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x2350314", Offset = "0x2350314", VA = "0x2350314")]
	public void Populate(MatchInfo deserializedMatch)
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x2350778", Offset = "0x2350778", VA = "0x2350778")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD6D8", Offset = "0x5CD6D8")]
	public void GenerateID()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x235082C", Offset = "0x235082C", VA = "0x235082C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD70C", Offset = "0x5CD70C")]
	public void CustomDevEdit()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x2350930", Offset = "0x2350930", VA = "0x2350930")]
	public MatchConfiguration()
	{
	}
}
[Serializable]
[Token(Token = "0x200015C")]
public class MatchInfo
{
	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string id;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool locked;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool completed;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<WaveInfo> waves;

	[NonSerialized]
	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string name;

	[NonSerialized]
	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LeagueType league;

	[NonSerialized]
	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MatchType type;

	[NonSerialized]
	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int difficulty;

	[NonSerialized]
	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public string description;

	[NonSerialized]
	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isPlayer;

	[NonSerialized]
	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<Qualifier> requiredQualifiers;

	[NonSerialized]
	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Qualifier qualifierGranted;

	[NonSerialized]
	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float requiredSkillRating;

	[NonSerialized]
	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int requiredMoney;

	[NonSerialized]
	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float skillRatingToGain;

	[NonSerialized]
	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float skillRatingToLose;

	[NonSerialized]
	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int moneyToGain;

	[NonSerialized]
	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StageType stage;

	[NonSerialized]
	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int totalTournamentRounds;

	[NonSerialized]
	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentTournamentRound;

	[NonSerialized]
	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int roundsRequiredToWin;

	[NonSerialized]
	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FighterInfo featuredEnemy_internal;

	[NonSerialized]
	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public FighterConfiguration featuredEnemyConfig;

	[NonSerialized]
	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int roundsWon;

	[NonSerialized]
	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int roundsLost;

	[NonSerialized]
	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentWaveIndex;

	[NonSerialized]
	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int lastWavePlayed;

	[NonSerialized]
	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool generate;

	[NonSerialized]
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int tournyStartMin;

	[NonSerialized]
	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int tournyStartRange;

	[Token(Token = "0x17000076")]
	public FighterInfo featuredEnemy
	{
		[Token(Token = "0x600085C")]
		[Address(RVA = "0x2350D20", Offset = "0x2350D20", VA = "0x2350D20")]
		get
		{
			return null;
		}
		[Token(Token = "0x600085D")]
		[Address(RVA = "0x2350D58", Offset = "0x2350D58", VA = "0x2350D58")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public int bestOfThisMany
	{
		[Token(Token = "0x600085E")]
		[Address(RVA = "0x2350D60", Offset = "0x2350D60", VA = "0x2350D60")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x2350D70", Offset = "0x2350D70", VA = "0x2350D70")]
	public void RecalcDifficulty()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x2350DD0", Offset = "0x2350DD0", VA = "0x2350DD0")]
	public static float CalcSkillReward(float mySkill, float theirSkill, int myLevel, int theirLevel)
	{
		return default(float);
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x2351D9C", Offset = "0x2351D9C", VA = "0x2351D9C")]
	public static float CalcSkillRisk(float mySkill, float theirSkill, int myLevel, int theirLevel, bool bonus = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x2351C94", Offset = "0x2351C94", VA = "0x2351C94")]
	private static float CalcSkillRewardSP(float mySkill, float theirSkill, int myLevel, int theirLevel, bool bonus = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x2350EC4", Offset = "0x2350EC4", VA = "0x2350EC4")]
	private static float CalcSkillRewardMP(float mySkill, float theirSkill, bool lowLevelAdjustment = true)
	{
		return default(float);
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x2351E8C", Offset = "0x2351E8C", VA = "0x2351E8C")]
	private static float CalcSkillRiskMP(float mySkill, float theirSkill)
	{
		return default(float);
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x23528F0", Offset = "0x23528F0", VA = "0x23528F0")]
	public void RecalcRisksRewards()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x23528CC", Offset = "0x23528CC", VA = "0x23528CC")]
	public static float GetDifficultyRatio(float mySkill, float theirSkill, int myLevel, int theirLevel)
	{
		return default(float);
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x2352D44", Offset = "0x2352D44", VA = "0x2352D44")]
	public static int CalcDuelCashReward(float mySkill, float theirSkill, float leagueMult)
	{
		return default(int);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x2352E94", Offset = "0x2352E94", VA = "0x2352E94")]
	public static int RoundToTheNearest(float x, int nearest)
	{
		return default(int);
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x2352EBC", Offset = "0x2352EBC", VA = "0x2352EBC")]
	public void SelectFighters()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x2354E80", Offset = "0x2354E80", VA = "0x2354E80")]
	public void Save()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x2354E88", Offset = "0x2354E88", VA = "0x2354E88")]
	public string GetTournamentRoundString()
	{
		return null;
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x2355100", Offset = "0x2355100", VA = "0x2355100")]
	public string GetFormattedNum(float num, int decimalPlaces = 0, int thousandCutoff = 10000)
	{
		return null;
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x2355204", Offset = "0x2355204", VA = "0x2355204")]
	public string GetConditions(ClassInfo campaignInfo)
	{
		return null;
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x2355854", Offset = "0x2355854", VA = "0x2355854")]
	public string GetAdditionalInfo()
	{
		return null;
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x2355A3C", Offset = "0x2355A3C", VA = "0x2355A3C")]
	public string GetDifficultyString()
	{
		return null;
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x2355F74", Offset = "0x2355F74", VA = "0x2355F74")]
	public static int GetDifficultyNumber(string difficultyString)
	{
		return default(int);
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x235565C", Offset = "0x235565C", VA = "0x235565C")]
	public static string GetQualifierString(Qualifier qualifier)
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x23509A8", Offset = "0x23509A8", VA = "0x23509A8")]
	public MatchInfo()
	{
	}
}
[Serializable]
[Token(Token = "0x200015D")]
public enum MatchType
{
	[Token(Token = "0x4000CCA")]
	Duel,
	[Token(Token = "0x4000CCB")]
	Tournament,
	[Token(Token = "0x4000CCC")]
	Exhibition,
	[Token(Token = "0x4000CCD")]
	Trial,
	[Token(Token = "0x4000CCE")]
	Tutorial,
	[Token(Token = "0x4000CCF")]
	None,
	[Token(Token = "0x4000CD0")]
	Multiplayer
}
[Serializable]
[Token(Token = "0x200015E")]
public enum LeagueType
{
	[Token(Token = "0x4000CD2")]
	Bronze,
	[Token(Token = "0x4000CD3")]
	Silver,
	[Token(Token = "0x4000CD4")]
	Gold,
	[Token(Token = "0x4000CD5")]
	Diamond,
	[Token(Token = "0x4000CD6")]
	Pro
}
[Serializable]
[Token(Token = "0x200015F")]
public enum Qualifier
{
	[Token(Token = "0x4000CD8")]
	None,
	[Token(Token = "0x4000CD9")]
	LeagueUpToSilver,
	[Token(Token = "0x4000CDA")]
	LeagueUpToGold,
	[Token(Token = "0x4000CDB")]
	LeagueUpToDiamond,
	[Token(Token = "0x4000CDC")]
	LeagueUpToPro,
	[Token(Token = "0x4000CDD")]
	SilverQualifier,
	[Token(Token = "0x4000CDE")]
	GoldQualifier,
	[Token(Token = "0x4000CDF")]
	DiamondQualifier,
	[Token(Token = "0x4000CE0")]
	ProQualifier
}
[Serializable]
[Token(Token = "0x2000160")]
public enum MatchResult
{
	[Token(Token = "0x4000CE2")]
	Win,
	[Token(Token = "0x4000CE3")]
	Loss,
	[Token(Token = "0x4000CE4")]
	Draw
}
[Token(Token = "0x2000161")]
public class MatchMenu : MonoBehaviour
{
	[Token(Token = "0x200051F")]
	public enum State
	{
		[Token(Token = "0x4002858")]
		Idle,
		[Token(Token = "0x4002859")]
		SlideWait,
		[Token(Token = "0x400285A")]
		SlideOffscreen,
		[Token(Token = "0x400285B")]
		SlideOnscreen
	}

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject tournamentBtnPrefab;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject exhibitionBtnPrefab;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject exhibitionBtn2Prefab;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject duelBtnPrefab;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject duelBtn2Prefab;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject leagueBackButton;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject leagueForwardButton;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject matchModal;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AnimationCurve slideInCurve;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve fullSlideCurve;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LeagueMenu leagueMenu;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5CD4", Offset = "0x5C5CD4")]
	public GameObject titleHolder;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<GameObject> titles;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5CEC", Offset = "0x5C5CEC")]
	public MatchMenuSettings unlockedSettings;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public MatchMenuSettings lockedSettings;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MatchMenuSettings completeSettings;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<MatchMenuButton> tButtons;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<MatchMenuButton> eButtons;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<MatchMenuButton> eButtons2;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<MatchMenuButton> dButtons1;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private State state;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 startPosition;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 offscreenPosition;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool slideLeft;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float waitTime;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float actionTime;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float timeElapsed;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float menuWidth;

	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float margin;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool repickMatches;

	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool initialized;

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x2356068", Offset = "0x2356068", VA = "0x2356068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x23579B4", Offset = "0x23579B4", VA = "0x23579B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x2358214", Offset = "0x2358214", VA = "0x2358214")]
	private void Update()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x235627C", Offset = "0x235627C", VA = "0x235627C")]
	public void BuildButtons()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x2357A64", Offset = "0x2357A64", VA = "0x2357A64")]
	public void RebuildButtons()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x235ABAC", Offset = "0x235ABAC", VA = "0x235ABAC")]
	public List<MatchInfo> GetBestExhibitions(int numExhibitions)
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x235B5D0", Offset = "0x235B5D0", VA = "0x235B5D0")]
	public MatchInfo GetRandomMachInDifficultyRange(List<MatchInfo> destination, List<MatchInfo> matches, float difficultyMin, float difficultyMax, bool onlyNew)
	{
		return null;
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x235C430", Offset = "0x235C430", VA = "0x235C430")]
	private void TryAddingMatchInRelativeSkillRange(List<MatchInfo> destination, List<MatchInfo> selectionPool, float min, float max, bool onlyNew = false)
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x235ACDC", Offset = "0x235ACDC", VA = "0x235ACDC")]
	public List<MatchInfo> GetBestDuels(int numDuels)
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x235C54C", Offset = "0x235C54C", VA = "0x235C54C")]
	public void LeagueBack()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x235D048", Offset = "0x235D048", VA = "0x235D048")]
	public void LeagueForward()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x2357354", Offset = "0x2357354", VA = "0x2357354")]
	public void UpdateLeagueButtons()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x235CB80", Offset = "0x235CB80", VA = "0x235CB80")]
	public void StartTitleSlide(float delay, float slideTime, bool left)
	{
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x235D6FC", Offset = "0x235D6FC", VA = "0x235D6FC")]
	public void OpenModal(MatchInfo mi)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x235EB74", Offset = "0x235EB74", VA = "0x235EB74")]
	public void RefreshAllMatches()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x235F0A8", Offset = "0x235F0A8", VA = "0x235F0A8")]
	public MatchMenu()
	{
	}
}
[Token(Token = "0x2000162")]
public class MatchMenuButton : MonoBehaviour
{
	[Token(Token = "0x2000520")]
	public enum State
	{
		[Token(Token = "0x400285D")]
		Idle,
		[Token(Token = "0x400285E")]
		SlideInWait,
		[Token(Token = "0x400285F")]
		SlideWait,
		[Token(Token = "0x4002860")]
		SlideOffscreen,
		[Token(Token = "0x4002861")]
		SlideOnscreen
	}

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image background;

	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Image coinIcon;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI coinText;

	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Image skillIcon;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI skillText;

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI classLevelText;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI infoText;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Image badgeBackground;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image badgeForeground;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D04", Offset = "0x5C5D04")]
	public MatchMenu parentMenu;

	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D1C", Offset = "0x5C5D1C")]
	public MatchInfo matchInfo;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public State state;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AnimationCurve slideCurve;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 startPosition;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 offscreenPosition;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool slideLeft;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float waitTime;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float actionTime;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timeElapsed;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private MatchInfo newMatchInfo;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x235F0C4", Offset = "0x235F0C4", VA = "0x235F0C4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x2358848", Offset = "0x2358848", VA = "0x2358848")]
	public void SetMatch(MatchInfo info)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x235A984", Offset = "0x235A984", VA = "0x235A984")]
	public void StartSlideIn(float delay, float slideTime, AnimationCurve curve, bool left)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x235CDC4", Offset = "0x235CDC4", VA = "0x235CDC4")]
	public void StartFullSlide(float delay, float slideTime, AnimationCurve curve, bool left, MatchInfo mi)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x235F52C", Offset = "0x235F52C", VA = "0x235F52C")]
	public void Select()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x235F55C", Offset = "0x235F55C", VA = "0x235F55C")]
	public MatchMenuButton()
	{
	}
}
[Token(Token = "0x2000163")]
public class MatchMenuSettings : MonoBehaviour
{
	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Image bgImage;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color mainTextColor;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color infoTextColor;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color coinIconColor;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color skillIconColor;

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x235F56C", Offset = "0x235F56C", VA = "0x235F56C")]
	public MatchMenuSettings()
	{
	}
}
[Token(Token = "0x2000164")]
public class MatchModal : MonoBehaviour
{
	[Token(Token = "0x2000521")]
	public enum State
	{
		[Token(Token = "0x4002863")]
		Idle,
		[Token(Token = "0x4002864")]
		Opening,
		[Token(Token = "0x4002865")]
		Closing
	}

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public RectTransform box;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI matchName;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI matchType;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI additionalInfo;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI difficulty;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI flavorText;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI riskSkill;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI riskCoins;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshProUGUI rewardSkill;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI rewardCoins;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TextMeshProUGUI opponentTitle;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI opponentName;

	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshProUGUI opponentClass;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI winLossRecord;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Button fightButton;

	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image badgeBackground;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Image badgeForeground;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MatchInfo match;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startScale;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 closedScale;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float openTime;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float timeElapsed;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public State state;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Fighter illustrationFighter;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Transform IllustrationFighterPos;

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x235F574", Offset = "0x235F574", VA = "0x235F574")]
	private void Start()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x235F67C", Offset = "0x235F67C", VA = "0x235F67C")]
	private void Update()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x235FBA4", Offset = "0x235FBA4", VA = "0x235FBA4")]
	private void CleanUpIllustrationFighter()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x235D7BC", Offset = "0x235D7BC", VA = "0x235D7BC")]
	public void Open(MatchInfo mi)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x235CFE4", Offset = "0x235CFE4", VA = "0x235CFE4")]
	public void Close()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x235FF08", Offset = "0x235FF08", VA = "0x235FF08")]
	public void StartMatch()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x2360000", Offset = "0x2360000", VA = "0x2360000")]
	public MatchModal()
	{
	}
}
[Token(Token = "0x2000165")]
public class MatchSettingsMenu : MonoBehaviour
{
	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject twoSidedCombatCheckmark;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject unlimitedEnergyCheckmark;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject meleeCheckmark;

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject rangedCheckmark;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RectTransform boundaryBox;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform scrollBox;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject ouchyRingObj;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar scrollbar;

	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float ringTimer;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x2360010", Offset = "0x2360010", VA = "0x2360010")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x2360040", Offset = "0x2360040", VA = "0x2360040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x2360454", Offset = "0x2360454", VA = "0x2360454")]
	public void SetMeleeTimeScale(float timeScale)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x2360530", Offset = "0x2360530", VA = "0x2360530")]
	public void SetNormalTimeScale(float timeScale)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x236060C", Offset = "0x236060C", VA = "0x236060C")]
	public void SetSidewaysRadius(float bounds)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x2360A74", Offset = "0x2360A74", VA = "0x2360A74")]
	public void SetForwardRadius(float bounds)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x2360EDC", Offset = "0x2360EDC", VA = "0x2360EDC")]
	public void SetHostDamage(float mult)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x2360FB8", Offset = "0x2360FB8", VA = "0x2360FB8")]
	public void SetClientDamage(float mult)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x2361094", Offset = "0x2361094", VA = "0x2361094")]
	public void SetHostEnergy(float mult)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x2361170", Offset = "0x2361170", VA = "0x2361170")]
	public void SetClientEnergy(float mult)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x236124C", Offset = "0x236124C", VA = "0x236124C")]
	public void ToggleTwoSidedCombat()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x23613D4", Offset = "0x23613D4", VA = "0x23613D4")]
	public void ToggleUnlimitedEnergy()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x236155C", Offset = "0x236155C", VA = "0x236155C")]
	public void ToggleMelee()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x23616E4", Offset = "0x23616E4", VA = "0x23616E4")]
	public void ToggleRanged()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x23602F4", Offset = "0x23602F4", VA = "0x23602F4")]
	public void Back()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x236186C", Offset = "0x236186C", VA = "0x236186C")]
	public void UpdateMatchSettings()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x2361934", Offset = "0x2361934", VA = "0x2361934")]
	public void Scroll(float percent)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x2361A54", Offset = "0x2361A54", VA = "0x2361A54")]
	public MatchSettingsMenu()
	{
	}
}
[Token(Token = "0x2000166")]
public class MenuHandle : MonoBehaviour
{
	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool anyGrabbed;

	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool grabbed;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Transform menuParent;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Vector3 startPosition;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion startRotation;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Hand attachedHand;

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x212FD70", Offset = "0x212FD70", VA = "0x212FD70")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x2130178", Offset = "0x2130178", VA = "0x2130178")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x2130534", Offset = "0x2130534", VA = "0x2130534")]
	public void ResetPosition()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x213088C", Offset = "0x213088C", VA = "0x213088C")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x2130A80", Offset = "0x2130A80", VA = "0x2130A80")]
	public MenuHandle()
	{
	}
}
[Token(Token = "0x2000167")]
public class MenuStab : MonoBehaviour
{
	[Token(Token = "0x2000522")]
	private enum ItemState
	{
		[Token(Token = "0x4002867")]
		OnMenu,
		[Token(Token = "0x4002868")]
		Cracking,
		[Token(Token = "0x4002869")]
		Shattering
	}

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TestbedMenu testbedMenu;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ParticleSystem selectParticles;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int variant;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ItemState state;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeLeft;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform menuParent;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startPosition;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion startRotation;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource crackingSound;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private AudioSource breakSound;

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x2130A8C", Offset = "0x2130A8C", VA = "0x2130A8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x2130BB4", Offset = "0x2130BB4", VA = "0x2130BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x213122C", Offset = "0x213122C", VA = "0x213122C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x2130FDC", Offset = "0x2130FDC", VA = "0x2130FDC")]
	private void SetVisibility(bool visibility)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x2131600", Offset = "0x2131600", VA = "0x2131600")]
	public MenuStab()
	{
	}
}
[Token(Token = "0x2000168")]
public class MenuSummon : MonoBehaviour
{
	[Token(Token = "0x2000523")]
	private enum ItemState
	{
		[Token(Token = "0x400286B")]
		OnMenu,
		[Token(Token = "0x400286C")]
		Pulling,
		[Token(Token = "0x400286D")]
		Shattering
	}

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool testPress;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent Callback;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ParticleSystem selectParticles;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider ButtonCollider;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MeshRenderer ButtonRenderer;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textMeshPro;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private ItemState state;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform menuParent;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 startPosition;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion startRotation;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource breakSound;

	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float hoverValue;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float disabledValue;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float selectedValue;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool inputEnabled;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool toGauntlet;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool deactivateFlag;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Color defaultColor;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color hoverColor;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Color disabledColor;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Color selectedColor;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float transitionSpeed;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float initialVelocity;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float finalVelocity;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float currentVelocity;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float accelerationRate;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x2131618", Offset = "0x2131618", VA = "0x2131618")]
	private void Start()
	{
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x2131740", Offset = "0x2131740", VA = "0x2131740")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x2132834", Offset = "0x2132834", VA = "0x2132834")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x2132400", Offset = "0x2132400", VA = "0x2132400")]
	private void AccelerateToPoint(Transform point)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x21325E4", Offset = "0x21325E4", VA = "0x21325E4")]
	private void SetVisibility(bool visibility)
	{
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x2132C20", Offset = "0x2132C20", VA = "0x2132C20")]
	public bool IsInStartingState()
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x21321E4", Offset = "0x21321E4", VA = "0x21321E4")]
	private void ResetButton()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x2132C34", Offset = "0x2132C34", VA = "0x2132C34")]
	public void Deactivate()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x2132C40", Offset = "0x2132C40", VA = "0x2132C40")]
	public MenuSummon()
	{
	}
}
[Token(Token = "0x2000169")]
public class MenuThrowdown : MonoBehaviour
{
	[Token(Token = "0x2000524")]
	private enum ItemState
	{
		[Token(Token = "0x400286F")]
		OnMenu,
		[Token(Token = "0x4002870")]
		Grabbed,
		[Token(Token = "0x4002871")]
		Thrown,
		[Token(Token = "0x4002872")]
		Shattering,
		[Token(Token = "0x4002873")]
		Animating
	}

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public UnityEvent GrabCallback;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent ThrownCallback;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public UnityEvent TriggerCallback;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject topLayerObject;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject visualsObject;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody itemRb;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Plane floor;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ParticleSystem selectParticles;

	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConstantForce cForce;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool shatterOnTrigger;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeLeft;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Transform menuParent;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPosition;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion startRotation;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Hand attachedHand;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource breakSound;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private ItemState state;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x2132D64", Offset = "0x2132D64", VA = "0x2132D64")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x2132E2C", Offset = "0x2132E2C", VA = "0x2132E2C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x213333C", Offset = "0x213333C", VA = "0x213333C")]
	private void OnTriggerEnter(Collider collider)
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x2133434", Offset = "0x2133434", VA = "0x2133434")]
	private void OnTriggerStay(Collider collider)
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x21332AC", Offset = "0x21332AC", VA = "0x21332AC")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD740", Offset = "0x5CD740")]
	private void StartTrigger()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x2133688", Offset = "0x2133688", VA = "0x2133688")]
	private void Shatter()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x21339B4", Offset = "0x21339B4", VA = "0x21339B4")]
	public MenuThrowdown()
	{
	}
}
[Token(Token = "0x200016A")]
public class MirrorDriver : MonoBehaviour
{
	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter subject;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fighter mirroredFighter;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<FighterSnapshot> Snapshots;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float fakeLatency;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 posOffset;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool fastForwarding;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float dataLossMaxInterval;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float dataLossMaxDuration;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float intervalEndTime;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float nextIntervalTime;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float packetsPerSecond;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float nextPacketTime;

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x213D1A8", Offset = "0x213D1A8", VA = "0x213D1A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x213D204", Offset = "0x213D204", VA = "0x213D204")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x213E508", Offset = "0x213E508", VA = "0x213E508")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x213F228", Offset = "0x213F228", VA = "0x213F228")]
	public MirrorDriver()
	{
	}
}
[Token(Token = "0x200016B")]
public struct FighterSnapshot
{
	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int frameNum;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int numRotWaypoints;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Quaternion headRot;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 headPos;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Quaternion headAngV;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 headVelocity;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion rightHandRot;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 rightHandPos;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Quaternion rightHandAngV;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 rightHandVelocity;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Quaternion leftHandRot;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 leftHandPos;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Quaternion leftHandAngV;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 leftHandVelocity;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool gripped;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Quaternion weaponRot;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public Vector3 weaponPos;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Quaternion weaponXyRotSpeed;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Quaternion weaponZRotSpeed;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 weaponVelocity;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public int posWaypointDeletionTimestamp;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Waypoint lastPosWaypoint;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Waypoint secondPosWaypoint;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int rotWaypointDeletionTimestamp;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Waypoint lastRotWaypoint;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Waypoint secondRotWaypoint;
}
[Token(Token = "0x200016C")]
public class MirrorDriverSimple : MonoBehaviour
{
	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter originalFighter;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fighter mirrorFighter;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WeaponType startingWeapon;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lerpAmt;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x213F314", Offset = "0x213F314", VA = "0x213F314")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x213F51C", Offset = "0x213F51C", VA = "0x213F51C")]
	private void CheckForWeapons()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x213F7F4", Offset = "0x213F7F4", VA = "0x213F7F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x213FB84", Offset = "0x213FB84", VA = "0x213FB84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x2140B94", Offset = "0x2140B94", VA = "0x2140B94")]
	private void SyncWeapon(Weapon original, Weapon mirror)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x2140B98", Offset = "0x2140B98", VA = "0x2140B98")]
	public MirrorDriverSimple()
	{
	}
}
[Token(Token = "0x200016D")]
public class MultiplayerMenu : MonoBehaviour
{
	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject QuickmatchButton;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject PlayWhileYouWaitButton;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject CancelButton;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject InfoPanel;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject BackButton;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject HostPrivateGameButton;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject JoinPrivateGameButton;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject EnterPrivateTagButton;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject ArmoryButton;

	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject QuickmatchMenu;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject FilterStuff;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI FilterWaitingText;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject RankedModeCheckmark;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject DuelModeCheckmark;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject BalancedModeCheckmark;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject CasualModeCheckmark;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject RankFilterCheckmark;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject RegionFilterCheckmark;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject TwoSidedCombatCheckmark;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button FindMatchButton;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TextMeshProUGUI CurrentRankText;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI NextPromotionText;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TextMeshProUGUI PlayersOnlineText;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Image ProgressBarFill;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject ProgressBar;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public TextMeshProUGUI RankInfo;

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D34", Offset = "0x5C5D34")]
	public GameObject EnemyPrefab;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject PuppetPrefab;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject RemotePuppetPrefab;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public AIPersonality personality;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CustomMaterialSetting hostMaterialsPrimary;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public CustomMaterialSetting hostMaterialsSecondary;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CustomMaterialSetting joinMaterialsPrimary;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public CustomMaterialSetting joinMaterialsSecondary;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool amClientSearchingForMatch;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float clientTimer;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool amServerWaitingForMatch;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float serverTimer;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float serviceCheckTimer;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool displayShuttingDown;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool displayStartingUp;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool displayIsRunning;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string displayConnectState;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float startupTimer;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float betweenWaitTimer;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool waitingToStartServer;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
	public bool wasOnQuickmatchMenu;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
	public bool skipToPrivateServer;

	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBF")]
	public bool skipToPrivateClient;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float waitingForGameListTimer;

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x2143E00", Offset = "0x2143E00", VA = "0x2143E00")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x2147C08", Offset = "0x2147C08", VA = "0x2147C08")]
	private void RunPingCheck()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x2147FB0", Offset = "0x2147FB0", VA = "0x2147FB0")]
	private void RunGameListCheck()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x214833C", Offset = "0x214833C", VA = "0x214833C")]
	public void FinishedGameListCheck()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x21483BC", Offset = "0x21483BC", VA = "0x21483BC")]
	public void FinishedPingCheck()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x21472F0", Offset = "0x21472F0", VA = "0x21472F0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD77C", Offset = "0x5CD77C")]
	public void ToQuickmatchFilterMenu()
	{
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x2148A48", Offset = "0x2148A48", VA = "0x2148A48")]
	public void BackToMPMenu()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x2148F34", Offset = "0x2148F34", VA = "0x2148F34")]
	public void ToPrivateMatchMenu()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x214932C", Offset = "0x214932C", VA = "0x214932C")]
	public void ToggleRankedMode()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x21494B8", Offset = "0x21494B8", VA = "0x21494B8")]
	public void ToggleDuelMode()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x2149644", Offset = "0x2149644", VA = "0x2149644")]
	public void ToggleHandicapMode()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x21497D0", Offset = "0x21497D0", VA = "0x21497D0")]
	public void ToggleCasualMode()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x214995C", Offset = "0x214995C", VA = "0x214995C")]
	public void ToggleRegionFilter()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x2149AE8", Offset = "0x2149AE8", VA = "0x2149AE8")]
	public void ToggleRankFilter()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x2144B00", Offset = "0x2144B00", VA = "0x2144B00")]
	private void RefreshFilters()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x2149C74", Offset = "0x2149C74", VA = "0x2149C74")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x214B5FC", Offset = "0x214B5FC", VA = "0x214B5FC")]
	public void EnterPrivateTag()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x214AF0C", Offset = "0x214AF0C", VA = "0x214AF0C")]
	public void Cancel()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x214B774", Offset = "0x214B774", VA = "0x214B774")]
	public void PlayWhileYouWait()
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x214B8B8", Offset = "0x214B8B8", VA = "0x214B8B8")]
	public void Quickmatch()
	{
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x214CC88", Offset = "0x214CC88", VA = "0x214CC88")]
	public void ToArmory()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x214CE40", Offset = "0x214CE40", VA = "0x214CE40")]
	public void JustConnected()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x214E3F8", Offset = "0x214E3F8", VA = "0x214E3F8")]
	public void SwitchToMatch()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x21500E8", Offset = "0x21500E8", VA = "0x21500E8")]
	public void SpectatorSwitchToMatch()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x21467A0", Offset = "0x21467A0", VA = "0x21467A0")]
	public void HostPrivateGame()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x2145C4C", Offset = "0x2145C4C", VA = "0x2145C4C")]
	public void JoinPrivateGame()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x2150C30", Offset = "0x2150C30", VA = "0x2150C30")]
	public void HostGame()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x2151228", Offset = "0x2151228", VA = "0x2151228")]
	public void HostPuppetGame()
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x2151BC8", Offset = "0x2151BC8", VA = "0x2151BC8")]
	public void JoinGame()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x2152554", Offset = "0x2152554", VA = "0x2152554")]
	public void JoinPuppetGame()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x21453B8", Offset = "0x21453B8", VA = "0x21453B8")]
	public static string GetLeagueLabelFromSkillRating(float skillRating)
	{
		return null;
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x2148800", Offset = "0x2148800", VA = "0x2148800")]
	public static int GetLeagueNumberFromSkillRating(float skillRating)
	{
		return default(int);
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x2148940", Offset = "0x2148940", VA = "0x2148940")]
	public static float GetSkillFloorFromLeagueNumber(int leagueNum)
	{
		return default(float);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x2152F98", Offset = "0x2152F98", VA = "0x2152F98")]
	public static float GetSkillCeilingFromLeagueNumber(int leagueNum)
	{
		return default(float);
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x21487C4", Offset = "0x21487C4", VA = "0x21487C4")]
	public static float GetLeagueRangeFromSkillRating(float skillRating)
	{
		return default(float);
	}

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x2152FA0", Offset = "0x2152FA0", VA = "0x2152FA0")]
	public void SpectatorJoinGame()
	{
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x214B41C", Offset = "0x214B41C", VA = "0x214B41C")]
	public void Back()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x2152FA4", Offset = "0x2152FA4", VA = "0x2152FA4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD7C0", Offset = "0x5CD7C0")]
	public void ShutdownBolt()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x2153188", Offset = "0x2153188", VA = "0x2153188")]
	public MultiplayerMenu()
	{
	}
}
[Token(Token = "0x200016E")]
public class Music : MonoBehaviour
{
	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<MusicTrack> MenuTracks;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<MusicTrack> PlayingTracks;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSource currentMusic;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource fadingOutMusic;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private AudioClip nextClip;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioLowPassFilter filter1;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioLowPassFilter filter2;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float targetVolume;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentVolume;

	[NonSerialized]
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int menuTrackNum;

	[NonSerialized]
	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int playingTrackNum;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MusicType currentType;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public MusicTrack currentTrack;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float crossfadeTime;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fadeModifier;

	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timestampToMoveOn;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool inIntro;

	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool musicPaused;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float spectatorModeFactor;

	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float gifTheaterFactor;

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x2153208", Offset = "0x2153208", VA = "0x2153208")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x21533E0", Offset = "0x21533E0", VA = "0x21533E0")]
	public void PlayUltraShortIntro(MusicTrack track)
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x21532C0", Offset = "0x21532C0", VA = "0x21532C0")]
	public void PlayTrack(MusicTrack track, bool shortIntro = false)
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x21535E8", Offset = "0x21535E8", VA = "0x21535E8")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x2154044", Offset = "0x2154044", VA = "0x2154044")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x2154084", Offset = "0x2154084", VA = "0x2154084")]
	public void PauseMusic()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x21540DC", Offset = "0x21540DC", VA = "0x21540DC")]
	public void UnpauseMusic()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x2154134", Offset = "0x2154134", VA = "0x2154134")]
	public void AdjustSourceVolume(float volume, object obj)
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x2154288", Offset = "0x2154288", VA = "0x2154288")]
	private void StopAfterFadeOut()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x21542DC", Offset = "0x21542DC", VA = "0x21542DC")]
	public void FadeAllMusic(float value)
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x2154354", Offset = "0x2154354", VA = "0x2154354")]
	public Music()
	{
	}
}
[Token(Token = "0x200016F")]
public enum MusicType
{
	[Token(Token = "0x4000DED")]
	Menu,
	[Token(Token = "0x4000DEE")]
	Playing
}
[Token(Token = "0x2000170")]
public class MusicTrack : MonoBehaviour
{
	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioClip MainTrack;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float mainTrackEndTime;

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D4C", Offset = "0x5C5D4C")]
	public AudioClip ShortIntro;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shortHalfwayTime;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shortCountdownTime;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float shortEndTime;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D64", Offset = "0x5C5D64")]
	public AudioClip MediumIntro;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float mediumHalfwayTime;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float mediumCountdownTime;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float mediumEndTime;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D7C", Offset = "0x5C5D7C")]
	public AudioClip LongIntro;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float longHalfwayTime;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float longCountdownTime;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float longEndTime;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5D94", Offset = "0x5C5D94")]
	public AudioClip UltraShortIntro;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5DAC", Offset = "0x5C5DAC")]
	public float extraStartTime;

	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float halfwayTime;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float startCountdownTime;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float matchStartTime;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float countdownStepLength;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public UnityEvent CallbackHalfway;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent CallbackCountdown;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public UnityEvent CallbackMatchStart;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int id;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastPlaytime;

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x2154420", Offset = "0x2154420", VA = "0x2154420")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x215443C", Offset = "0x215443C", VA = "0x215443C")]
	public void HandleCallbacks(float playtime)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x2154540", Offset = "0x2154540", VA = "0x2154540")]
	public void TestCallback()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x2154544", Offset = "0x2154544", VA = "0x2154544")]
	public MusicTrack()
	{
	}
}
[Token(Token = "0x2000171")]
[AttributeAttribute(Name = "BoltGlobalBehaviourAttribute", RVA = "0x5C11D0", Offset = "0x5C11D0")]
public class NetworkCallbacks : GlobalEventListener
{
	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool shuttingDown;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public static bool startingUp;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int introStartFrame;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int originalStartFrame;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int totalPlayersConnected;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ShutdownIntent shutdownIntent;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static string publicTag;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string privateGameTag;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public static string spectatorTag;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static bool privateGameOnly;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public static bool lookingForMatch;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public static bool opponentRequestedRematch;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public static bool playerRequestedRematch;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int numPlayersOnline;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static int numPlayersEligible;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public static bool connectingToMatch;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string connectionBuddy;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public static bool paxReady;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static FighterClass paxClass;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static bool gotOpponent;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public static bool markedLANbroadcast;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static List<ExitGames.Client.Photon.Hashtable> AllRoomProperties;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public static List<string> TempBannedNames;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static FilterSettings myFilterSettings;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public static FilterSettings opponentFilterSettings;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static MPMatchType currentMatchType;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public static int balanceAdjustment;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static float myBalancedDamageBonus;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public static float opponentBalancedDamageBonus;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static bool directConnection;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public static bool firstMatch;

	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public static FighterClass bannedClass;

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static bool waitingForGameList;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public static bool lastResultForced;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public static string myLastHostName;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static int maxTotalConnections;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x21A5170", Offset = "0x21A5170", VA = "0x21A5170")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x21A5174", Offset = "0x21A5174", VA = "0x21A5174")]
	public static void NoMatchFoundMessage()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x21A5594", Offset = "0x21A5594", VA = "0x21A5594", Slot = "37")]
	public override void SessionCreated(UdpSession session)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x21A5670", Offset = "0x21A5670", VA = "0x21A5670", Slot = "42")]
	public override void SessionConnectFailed(UdpSession session, IProtocolToken token, UdpSessionError errorReason)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x21A5C6C", Offset = "0x21A5C6C", VA = "0x21A5C6C", Slot = "38")]
	public override void SessionCreationFailed(UdpSession session)
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0x21A5CF8", Offset = "0x21A5CF8", VA = "0x21A5CF8", Slot = "40")]
	public override void SessionConnected(UdpSession session, IProtocolToken token)
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0x21A5DA4", Offset = "0x21A5DA4", VA = "0x21A5DA4", Slot = "12")]
	public override void BoltStartDone()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x21A664C", Offset = "0x21A664C", VA = "0x21A664C")]
	public void GetGoing()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x21A71A0", Offset = "0x21A71A0", VA = "0x21A71A0", Slot = "13")]
	public override void BoltStartFailed()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x21A7300", Offset = "0x21A7300", VA = "0x21A7300", Slot = "19")]
	public override void ConnectRequest(UdpEndPoint endpoint, IProtocolToken token)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x21A78E4", Offset = "0x21A78E4", VA = "0x21A78E4", Slot = "18")]
	public override void ConnectFailed(UdpEndPoint endpoint, IProtocolToken token)
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x21A7D24", Offset = "0x21A7D24", VA = "0x21A7D24", Slot = "20")]
	public override void ConnectRefused(UdpEndPoint endpoint, IProtocolToken token)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x21A8164", Offset = "0x21A8164", VA = "0x21A8164", Slot = "21")]
	public override void ConnectAttempt(UdpEndPoint endpoint, IProtocolToken token)
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x21A828C", Offset = "0x21A828C", VA = "0x21A828C", Slot = "17")]
	public override void Connected(BoltConnection connection)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x21AA498", Offset = "0x21AA498", VA = "0x21AA498")]
	public static void TryToFindSession()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x21AA9CC", Offset = "0x21AA9CC", VA = "0x21AA9CC")]
	public static void CountPlayers()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x21AE36C", Offset = "0x21AE36C", VA = "0x21AE36C", Slot = "36")]
	public override void SessionListUpdated(Map<Guid, UdpSession> sessionList)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0x21B0B38", Offset = "0x21B0B38", VA = "0x21B0B38")]
	private static int CalcSessionScore(ExitGames.Client.Photon.Hashtable props)
	{
		return default(int);
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0x21B08A8", Offset = "0x21B08A8", VA = "0x21B08A8")]
	private static bool isSessionOpen(ExitGames.Client.Photon.Hashtable props)
	{
		return default(bool);
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x21AAE74", Offset = "0x21AAE74", VA = "0x21AAE74")]
	private static bool isSessionEligible(ExitGames.Client.Photon.Hashtable props, bool checkingAgainstClient = false)
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x21A9790", Offset = "0x21A9790", VA = "0x21A9790")]
	private static MPMatchType PickBestMatchType(int myskill, int theirskill, FilterSettings myfilters, FilterSettings theirfilters)
	{
		return default(MPMatchType);
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x21B13B4", Offset = "0x21B13B4", VA = "0x21B13B4")]
	public static int GetLeagueDiff(int myskill, int theirskill)
	{
		return default(int);
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x21B13F4", Offset = "0x21B13F4", VA = "0x21B13F4")]
	public void SendStartEvent()
	{
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0x21B1634", Offset = "0x21B1634", VA = "0x21B1634", Slot = "24")]
	public override void Disconnected(BoltConnection connection)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x21B1C50", Offset = "0x21B1C50", VA = "0x21B1C50", Slot = "16")]
	public override void BoltShutdownBegin(AddCallback registerDoneCallback, UdpConnectionDisconnectReason disconnectReason)
	{
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x21B1F00", Offset = "0x21B1F00", VA = "0x21B1F00")]
	private void ShutdownComplete()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x21B241C", Offset = "0x21B241C", VA = "0x21B241C", Slot = "11")]
	public override void BoltStartBegin()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x21B25C0", Offset = "0x21B25C0", VA = "0x21B25C0", Slot = "97")]
	public override void OnEvent(LossEvent evnt)
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x21B3234", Offset = "0x21B3234", VA = "0x21B3234", Slot = "95")]
	public override void OnEvent(BanEvent evnt)
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x21B4784", Offset = "0x21B4784", VA = "0x21B4784", Slot = "89")]
	public override void OnEvent(RestartEvent evnt)
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x21B3B50", Offset = "0x21B3B50", VA = "0x21B3B50")]
	public static void Rematch()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x21B4B68", Offset = "0x21B4B68", VA = "0x21B4B68", Slot = "92")]
	public override void OnEvent(IntentionalDisconnectEvent evnt)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x21B51EC", Offset = "0x21B51EC", VA = "0x21B51EC", Slot = "88")]
	public override void OnEvent(StartGameEvent evnt)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x21B54E8", Offset = "0x21B54E8", VA = "0x21B54E8", Slot = "80")]
	public override void OnEvent(BlitzEvent evnt)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x21B5C6C", Offset = "0x21B5C6C", VA = "0x21B5C6C", Slot = "81")]
	public override void OnEvent(RetreatEvent evnt)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x21B6140", Offset = "0x21B6140", VA = "0x21B6140", Slot = "86")]
	public override void OnEvent(TwoWeaponClashEvent evnt)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x21B79DC", Offset = "0x21B79DC", VA = "0x21B79DC", Slot = "91")]
	public override void OnEvent(WeaponClashEvent evnt)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x21B8460", Offset = "0x21B8460", VA = "0x21B8460", Slot = "87")]
	public override void OnEvent(WeaponResummonEvent evnt)
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x21B76E4", Offset = "0x21B76E4", VA = "0x21B76E4")]
	private Weapon RetrieveWeapon(int fighterID, bool rightWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x21B90CC", Offset = "0x21B90CC", VA = "0x21B90CC")]
	private Hand RetrieveHand(int fighterID, bool rightWeapon)
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x21B93B0", Offset = "0x21B93B0", VA = "0x21B93B0", Slot = "85")]
	public override void OnEvent(WeaponHitEvent evnt)
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x21B99D8", Offset = "0x21B99D8", VA = "0x21B99D8", Slot = "82")]
	public override void OnEvent(BulletEvent evnt)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x21B9FCC", Offset = "0x21B9FCC", VA = "0x21B9FCC", Slot = "96")]
	public override void OnEvent(ArcBulletsEvent evnt)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x21BA5D4", Offset = "0x21BA5D4", VA = "0x21BA5D4", Slot = "83")]
	public override void OnEvent(BulletSmashEvent evnt)
	{
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x21BB18C", Offset = "0x21BB18C", VA = "0x21BB18C", Slot = "84")]
	public override void OnEvent(BulletHitEvent evnt)
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x21BBEA4", Offset = "0x21BBEA4", VA = "0x21BBEA4", Slot = "101")]
	public override void OnEvent(InjuryEvent evnt)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x21BC590", Offset = "0x21BC590", VA = "0x21BC590", Slot = "79")]
	public override void OnEvent(FlashEvent evnt)
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x21BC64C", Offset = "0x21BC64C", VA = "0x21BC64C", Slot = "93")]
	public override void OnEvent(CustomSettingsEvent evnt)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x21BC894", Offset = "0x21BC894", VA = "0x21BC894", Slot = "94")]
	public override void OnEvent(SetMatchTypeEvent evnt)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x21BD628", Offset = "0x21BD628", VA = "0x21BD628", Slot = "98")]
	public override void OnEvent(MuteVoipEvent evnt)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x21BDB08", Offset = "0x21BDB08", VA = "0x21BDB08", Slot = "99")]
	public override void OnEvent(UnmuteVoipEvent evnt)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x21BDFE8", Offset = "0x21BDFE8", VA = "0x21BDFE8", Slot = "100")]
	public override void OnEvent(EnableVoipEvent evnt)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x21BE1C0", Offset = "0x21BE1C0", VA = "0x21BE1C0", Slot = "90")]
	public override void OnEvent(DisableVoipEvent evnt)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x21BE620", Offset = "0x21BE620", VA = "0x21BE620", Slot = "102")]
	public override void OnEvent(HandPoseEvent evnt)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x21BE944", Offset = "0x21BE944", VA = "0x21BE944")]
	public NetworkCallbacks()
	{
	}
}
[Token(Token = "0x2000172")]
public class PlayerInfoToken : IProtocolToken
{
	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int playerID;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int weaponType;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int handNum;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int armorNum;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int helmetNum;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int primaryNum;

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int secondaryNum;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int stageNum;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int skillRating;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int isRightHanded;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string playerName;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public string oculusID;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool voiceChatEnabled;

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x20DB120", Offset = "0x20DB120", VA = "0x20DB120", Slot = "5")]
	public void Write(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x20DB370", Offset = "0x20DB370", VA = "0x20DB370", Slot = "4")]
	public void Read(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x20DB588", Offset = "0x20DB588", VA = "0x20DB588")]
	public PlayerInfoToken()
	{
	}
}
[Token(Token = "0x2000173")]
public class MatchConnectionToken : IProtocolToken
{
	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int skillRating;

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int isSpectator;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int filterSettings;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string playerName;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string spectatorTag;

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x2350AC4", Offset = "0x2350AC4", VA = "0x2350AC4", Slot = "5")]
	public void Write(UdpPacket packet)
	{
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x2350BB4", Offset = "0x2350BB4", VA = "0x2350BB4", Slot = "4")]
	public void Read(UdpPacket packet)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0x2350C8C", Offset = "0x2350C8C", VA = "0x2350C8C")]
	public MatchConnectionToken()
	{
	}
}
[Token(Token = "0x2000174")]
public class WeaponDataToken : IProtocolToken
{
	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int FrameNum;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Velocity;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Quaternion XYAngV;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion ZAngV;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 Position;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Quaternion Rotation;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool Gripped;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool TriggerHeld;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool LeftGripped;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 CurrentInputPos;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Quaternion CurrentInputRot;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x22F135C", Offset = "0x22F135C", VA = "0x22F135C", Slot = "5")]
	public void Write(UdpPacket packet)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x22F158C", Offset = "0x22F158C", VA = "0x22F158C", Slot = "4")]
	public void Read(UdpPacket packet)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x22F12B4", Offset = "0x22F12B4", VA = "0x22F12B4")]
	public WeaponDataToken()
	{
	}
}
[Token(Token = "0x2000175")]
public class FlailDataToken : IProtocolToken
{
	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int FrameNum;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 Velocity;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Quaternion XYAngV;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion ZAngV;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 Position;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Quaternion Rotation;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool Gripped;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool TriggerHeld;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool LeftGripped;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 BallPos;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 BallVelocity;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 CurrentInputPos;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Quaternion CurrentInputRot;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x20A859C", Offset = "0x20A859C", VA = "0x20A859C", Slot = "5")]
	public void Write(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x20A88C0", Offset = "0x20A88C0", VA = "0x20A88C0", Slot = "4")]
	public void Read(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0x20A84FC", Offset = "0x20A84FC", VA = "0x20A84FC")]
	public FlailDataToken()
	{
	}
}
[Token(Token = "0x2000176")]
public class WeaponWaypointToken : IProtocolToken
{
	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int FrameNum;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int DeletionTimestamp;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 Waypoint;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0x22FC1BC", Offset = "0x22FC1BC", VA = "0x22FC1BC", Slot = "5")]
	public void Write(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x22FC278", Offset = "0x22FC278", VA = "0x22FC278", Slot = "4")]
	public void Read(UdpPacket packet)
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x22F12BC", Offset = "0x22F12BC", VA = "0x22F12BC")]
	public WeaponWaypointToken()
	{
	}
}
[Token(Token = "0x2000177")]
[Flags]
public enum FilterSettings
{
	[Token(Token = "0x4000E5A")]
	None = 0,
	[Token(Token = "0x4000E5B")]
	SearchingCasual = 1,
	[Token(Token = "0x4000E5C")]
	SearchingRanked = 2,
	[Token(Token = "0x4000E5D")]
	SearchingHandicap = 4,
	[Token(Token = "0x4000E5E")]
	RegionLimit = 8,
	[Token(Token = "0x4000E5F")]
	StrictRankLimit = 0x10,
	[Token(Token = "0x4000E60")]
	NearUS = 0x20,
	[Token(Token = "0x4000E61")]
	NearUSW = 0x40,
	[Token(Token = "0x4000E62")]
	NearEU = 0x80,
	[Token(Token = "0x4000E63")]
	NearJP = 0x100,
	[Token(Token = "0x4000E64")]
	SearchingDuel = 0x200
}
[Token(Token = "0x2000178")]
public enum MPMatchType
{
	[Token(Token = "0x4000E66")]
	Custom,
	[Token(Token = "0x4000E67")]
	Casual,
	[Token(Token = "0x4000E68")]
	RankedBo3,
	[Token(Token = "0x4000E69")]
	Balanced,
	[Token(Token = "0x4000E6A")]
	RankedDuel
}
[Token(Token = "0x2000179")]
public enum ShutdownIntent
{
	[Token(Token = "0x4000E6C")]
	CheckingPing,
	[Token(Token = "0x4000E6D")]
	CheckingGameList,
	[Token(Token = "0x4000E6E")]
	SwitchingToHosting,
	[Token(Token = "0x4000E6F")]
	SwitchingToMPMenu,
	[Token(Token = "0x4000E70")]
	QuittingToMPMenu,
	[Token(Token = "0x4000E71")]
	EnemySurrendered,
	[Token(Token = "0x4000E72")]
	Unexpected,
	[Token(Token = "0x4000E73")]
	OculusMatch
}
[Token(Token = "0x200017A")]
public class NormalMapNormalizer : MonoBehaviour
{
	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Texture2D referenceTexture;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string outputName;

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x21BEB90", Offset = "0x21BEB90", VA = "0x21BEB90")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD80C", Offset = "0x5CD80C")]
	public void NormalizeNormals()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x21BEF94", Offset = "0x21BEF94", VA = "0x21BEF94")]
	public NormalMapNormalizer()
	{
	}
}
[Token(Token = "0x200017B")]
public class NotchedSlider : Slider
{
	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public List<float> values;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshProUGUI valueText;

	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float divisions;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool discreteValues;

	[Token(Token = "0x17000078")]
	public float notchedValue
	{
		[Token(Token = "0x6000947")]
		[Address(RVA = "0x21BEF9C", Offset = "0x21BEF9C", VA = "0x21BEF9C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x21BF064", Offset = "0x21BF064", VA = "0x21BF064", Slot = "51")]
	protected override void Set(float input, bool sendCallback)
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x21BF344", Offset = "0x21BF344", VA = "0x21BF344")]
	public NotchedSlider()
	{
	}
}
[Token(Token = "0x200017C")]
public class OptionsMenu : MonoBehaviour
{
	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject MobileStuff;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject PCStuff;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject LeftHandedCheck;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ComfortModeCheck;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject SeatedModeCheck;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ReducedParticlesCheck;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject MPStandupButton;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DamageNumbersCheck;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject AutogripCheck;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI MusicVolumeLabel;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject ResolutionHighCheck;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ResolutionMedCheck;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject ResolutionLowCheck;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject AntialiasingLowCheck;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject AntialiasingHighCheck;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int musicVolumeAdjustment;

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x2368014", Offset = "0x2368014", VA = "0x2368014")]
	public void ResolutionHigh()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x2368100", Offset = "0x2368100", VA = "0x2368100")]
	public void ResolutionMed()
	{
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x23681EC", Offset = "0x23681EC", VA = "0x23681EC")]
	public void ResolutionLow()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x23682D8", Offset = "0x23682D8", VA = "0x23682D8")]
	public void AAHigh()
	{
	}

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x236833C", Offset = "0x236833C", VA = "0x236833C")]
	public void AALow()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x23683A0", Offset = "0x23683A0", VA = "0x23683A0")]
	public void ViewCredits()
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x23684A8", Offset = "0x23684A8", VA = "0x23684A8")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x23688C4", Offset = "0x23688C4", VA = "0x23688C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x2368B10", Offset = "0x2368B10", VA = "0x2368B10")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000953")]
	[Address(RVA = "0x2368A08", Offset = "0x2368A08", VA = "0x2368A08")]
	public void Back()
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0x2368FF8", Offset = "0x2368FF8", VA = "0x2368FF8")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0x236929C", Offset = "0x236929C", VA = "0x236929C")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000956")]
	[Address(RVA = "0x2369540", Offset = "0x2369540", VA = "0x2369540")]
	public void ToggleSeatedMode()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0x236975C", Offset = "0x236975C", VA = "0x236975C")]
	public void ToggleComfortMode()
	{
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0x23698C0", Offset = "0x23698C0", VA = "0x23698C0")]
	public void ToggleReducedParticles()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0x2369A24", Offset = "0x2369A24", VA = "0x2369A24")]
	public void ToggleDamageNumbers()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0x2369B28", Offset = "0x2369B28", VA = "0x2369B28")]
	public void ToggleLeftHanded()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0x2369D30", Offset = "0x2369D30", VA = "0x2369D30")]
	public void SetLanguageEnglish()
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0x2369E24", Offset = "0x2369E24", VA = "0x2369E24")]
	public void SetLanguageSpanish()
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0x2369F18", Offset = "0x2369F18", VA = "0x2369F18")]
	public OptionsMenu()
	{
	}
}
[Token(Token = "0x200017D")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool inputEnabled;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject PauseStuff;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject EndGameSPStuff;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EndGameMPStuff;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject EndRoundDuelStuff;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject EndRoundTournamentStuff;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject VictoryStuffSP;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VictoryStuffMP;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject VictoryStuffRound;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DefeatStuffSP;

	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject DefeatStuffMP;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject DefeatStuffRound;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshProUGUI TournmentNextRoundLabel;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI TournamentOpponentLabel;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TextMeshProUGUI TournamentOpponentSkillNum;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image TournamentOpponentBadgeBackground;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Image TournamentOpponentBadgeForeground;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI RoundCompleteLabel;

	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshProUGUI RoundCurrentScoreLabel;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshProUGUI MatchNameLabelMP;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TextMeshProUGUI CoinsEarnedMP;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshProUGUI SkillEarnedMP;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TextMeshProUGUI MatchNameLabelSP;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI CoinsEarnedSP;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public TextMeshProUGUI SkillEarnedSP;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshProUGUI BanClassText;

	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public TextMeshProUGUI BanTimerText;

	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float banTimer;

	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject BanMenu;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject CurrentRankStuff;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public TextMeshProUGUI CurrentRankText;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshProUGUI PercentToNextRankText;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Image ProgressBarFill;

	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject ProgressBar;

	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Button SaveReplayButton1;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button SaveReplayButton2;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Button SaveReplayButton3;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button SaveReplayButton4;

	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Button ExportGIFButton;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Button RematchButton;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Image OpponentRequestedRematchIcon;

	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Image IRequestedRematchIcon;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float progressBarFrom;

	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float progressBarTo;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public Button SendFriendInviteButton;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0x20D35B0", Offset = "0x20D35B0", VA = "0x20D35B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0x20D39A4", Offset = "0x20D39A4", VA = "0x20D39A4")]
	public void OpenVictoryMenu()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x20D554C", Offset = "0x20D554C", VA = "0x20D554C")]
	private void SetProgressBar(float p)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x20D5984", Offset = "0x20D5984", VA = "0x20D5984")]
	public void OpenNextPhaseMenu()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0x20D6668", Offset = "0x20D6668", VA = "0x20D6668")]
	public void OpenDefeatMenu()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0x20D81FC", Offset = "0x20D81FC", VA = "0x20D81FC")]
	public void OpenPauseMenu()
	{
	}

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x20D5688", Offset = "0x20D5688", VA = "0x20D5688")]
	private void OpenMenu()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x20D82C8", Offset = "0x20D82C8", VA = "0x20D82C8")]
	public void DismissMenu()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x20D83EC", Offset = "0x20D83EC", VA = "0x20D83EC")]
	public void Unpause()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x20D84DC", Offset = "0x20D84DC", VA = "0x20D84DC")]
	public void SaveRecording()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x20D87E4", Offset = "0x20D87E4", VA = "0x20D87E4")]
	public void SaveRecordingAndGoToReplay()
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x20D8B90", Offset = "0x20D8B90", VA = "0x20D8B90")]
	public void DisconnectAll()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x20D8EF0", Offset = "0x20D8EF0", VA = "0x20D8EF0")]
	public void SetMarker()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x20D90C4", Offset = "0x20D90C4", VA = "0x20D90C4")]
	public void MatchSurrender()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x20D922C", Offset = "0x20D922C", VA = "0x20D922C")]
	public void Surrender()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x20D95C0", Offset = "0x20D95C0", VA = "0x20D95C0")]
	public void QuitToMenu()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x20D9D84", Offset = "0x20D9D84", VA = "0x20D9D84")]
	private void QuitMPMatch()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x20D9E44", Offset = "0x20D9E44", VA = "0x20D9E44")]
	public void StartRematch()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x20D9F98", Offset = "0x20D9F98", VA = "0x20D9F98")]
	private void TriggerSPRematch()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x20DA0AC", Offset = "0x20DA0AC", VA = "0x20DA0AC")]
	public void NextPhase()
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x20DA298", Offset = "0x20DA298", VA = "0x20DA298")]
	public void BanKnight()
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x20DA37C", Offset = "0x20DA37C", VA = "0x20DA37C")]
	public void BanDuelist()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x20DA460", Offset = "0x20DA460", VA = "0x20DA460")]
	public void BanMonk()
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x20DA544", Offset = "0x20DA544", VA = "0x20DA544")]
	public void BanNinja()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x20DA628", Offset = "0x20DA628", VA = "0x20DA628")]
	public void BanCrusader()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x20DA70C", Offset = "0x20DA70C", VA = "0x20DA70C")]
	public void BanReaper()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x20DA7F0", Offset = "0x20DA7F0", VA = "0x20DA7F0")]
	public void BanSamurai()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x20DA8D4", Offset = "0x20DA8D4", VA = "0x20DA8D4")]
	public void BanBerserker()
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x20D38C0", Offset = "0x20D38C0", VA = "0x20D38C0")]
	public void BanNone()
	{
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x20DA9B8", Offset = "0x20DA9B8", VA = "0x20DA9B8")]
	public void SendFriendRequest()
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x20DAC20", Offset = "0x20DAC20", VA = "0x20DAC20")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x200017E")]
public class PlayerLevelButton : MonoBehaviour
{
	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI levelNum;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI levelTitle;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI levelInfo;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UIGradient gradient;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject lockObj;

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x20DB590", Offset = "0x20DB590", VA = "0x20DB590")]
	private void Start()
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x20DB594", Offset = "0x20DB594", VA = "0x20DB594")]
	private void Update()
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x20DB598", Offset = "0x20DB598", VA = "0x20DB598")]
	public PlayerLevelButton()
	{
	}
}
[Token(Token = "0x200017F")]
public class PlayerMenu : MonoBehaviour
{
	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MatchMenu matchMenu;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI coins;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI skillRating;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI levelClass;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI nextLevel;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Image badgeBackground;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image badgeForeground;

	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshProUGUI playerClass;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI easyReward;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TextMeshProUGUI easyEnergy;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI easyDamage;

	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshProUGUI medReward;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI medEnergy;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TextMeshProUGUI medDamage;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI hardReward;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI hardEnergy;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshProUGUI hardDamage;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject easyHighlight;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject medHighlight;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject hardHighlight;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5DC4", Offset = "0x5C5DC4")]
	public PlayerLevelButton levelButtonPrefab;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject toArmoryBtn;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<PlayerLevelButton> levelButtons;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Gradient unlockedGradient;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Gradient lockedGradient;

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x20DB5A0", Offset = "0x20DB5A0", VA = "0x20DB5A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x20DC4EC", Offset = "0x20DC4EC", VA = "0x20DC4EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x20DB8DC", Offset = "0x20DB8DC", VA = "0x20DB8DC")]
	public void SetPlayerData()
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x20DC4F0", Offset = "0x20DC4F0", VA = "0x20DC4F0")]
	private void CheckForLevelUp()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x20DC6FC", Offset = "0x20DC6FC", VA = "0x20DC6FC")]
	public void SetDifficultyEasy()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x20DCA00", Offset = "0x20DCA00", VA = "0x20DCA00")]
	public void SetDifficultyMed()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x20DCD04", Offset = "0x20DCD04", VA = "0x20DCD04")]
	public void SetDifficultyHard()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x20DD008", Offset = "0x20DD008", VA = "0x20DD008")]
	public PlayerMenu()
	{
	}
}
[Token(Token = "0x2000180")]
public class PowerupProjectile : Projectile
{
	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float decayRate;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject VisibleBits;

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x20DD338", Offset = "0x20DD338", VA = "0x20DD338", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x20DD33C", Offset = "0x20DD33C", VA = "0x20DD33C", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x20DD34C", Offset = "0x20DD34C", VA = "0x20DD34C", Slot = "6")]
	public override void PhysicsStep()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x20DFDEC", Offset = "0x20DFDEC", VA = "0x20DFDEC")]
	public PowerupProjectile()
	{
	}
}
[Token(Token = "0x2000181")]
public class PowerupRanged : RangedAttack
{
	[Token(Token = "0x4000ED8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool poweringUp;

	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float powerUpStrength;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem PowerupParticles;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject PowerupBall;

	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxSpeed;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float ballScaleMult;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform FireTip;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Transform FireTip2;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform ActiveFireTip;

	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float lastreleasedStrength;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool triggerWasHeld;

	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float powerupSpeed;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource PowerupLoopSource;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float ongoingEnergyCost;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceShot;

	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject previewPointer;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material previewMat;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x20DFF78", Offset = "0x20DFF78", VA = "0x20DFF78")]
	private void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x20E00F0", Offset = "0x20E00F0", VA = "0x20E00F0", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x20E0100", Offset = "0x20E0100", VA = "0x20E0100", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x20E1164", Offset = "0x20E1164", VA = "0x20E1164")]
	private void PlanFire()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x20E1A44", Offset = "0x20E1A44", VA = "0x20E1A44", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x20E213C", Offset = "0x20E213C", VA = "0x20E213C")]
	public PowerupRanged()
	{
	}
}
[Token(Token = "0x2000182")]
public class PrefabHandler : MonoBehaviour
{
	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C6C", Offset = "0x5C2C6C")]
	private sealed class <>c__DisplayClass154_0
	{
		[Token(Token = "0x4002874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string oculusId;

		[Token(Token = "0x60025CF")]
		[Address(RVA = "0x20E6948", Offset = "0x20E6948", VA = "0x20E6948")]
		public <>c__DisplayClass154_0()
		{
		}

		[Token(Token = "0x60025D0")]
		[Address(RVA = "0x20E6F4C", Offset = "0x20E6F4C", VA = "0x20E6F4C")]
		internal bool <GetOculusDlc>b__0(KeyValuePair<int, DlcItem> d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000526")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C7C", Offset = "0x5C2C7C")]
	private sealed class <>c__DisplayClass155_0
	{
		[Token(Token = "0x4002875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint steamId;

		[Token(Token = "0x60025D1")]
		[Address(RVA = "0x20E6A6C", Offset = "0x20E6A6C", VA = "0x20E6A6C")]
		public <>c__DisplayClass155_0()
		{
		}

		[Token(Token = "0x60025D2")]
		[Address(RVA = "0x20E6FE4", Offset = "0x20E6FE4", VA = "0x20E6FE4")]
		internal bool <GetSteamDlc>b__0(KeyValuePair<int, DlcItem> d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C8C", Offset = "0x5C2C8C")]
	private sealed class <>c__DisplayClass156_0
	{
		[Token(Token = "0x4002876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string viveportId;

		[Token(Token = "0x60025D3")]
		[Address(RVA = "0x20E6B90", Offset = "0x20E6B90", VA = "0x20E6B90")]
		public <>c__DisplayClass156_0()
		{
		}

		[Token(Token = "0x60025D4")]
		[Address(RVA = "0x20E7080", Offset = "0x20E7080", VA = "0x20E7080")]
		internal bool <GetViveportDlc>b__0(KeyValuePair<int, DlcItem> d)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ArmorSet dummyArmor;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ArmorSet basicEnemyArmor;

	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ArmorSet knightArmor;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmorSet duelistArmor;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ArmorSet ninjaArmor;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ArmorSet mediumArmor;

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ArmorSet samuraiArmor;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ArmorSet bossArmor;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ArmorSet dwarvenArmor;

	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ArmorSet feminineArmor;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5DDC", Offset = "0x5C5DDC")]
	public GameObject wingedHelm;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject maskHelm;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject hornedHelm;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject jingasaHelm;

	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject basicEnemyHelm;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject frogMouthHelm;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject crestedHelm;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject joustingHelm;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject skullMaskHelm;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject foxMaskHelm;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject rabbitMaskHelm;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject hawkMaskHelm;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject simpleHelm;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject samuraiHelm;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject scaleHelm;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject bladedHelm;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject championHelm;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5DF4", Offset = "0x5C5DF4")]
	public CustomMaterialSetting blueMaterial;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public CustomMaterialSetting carbonMaterial;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CustomMaterialSetting copperMaterial;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public CustomMaterialSetting goldMaterial;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public CustomMaterialSetting greenMaterial;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public CustomMaterialSetting ironMaterial;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CustomMaterialSetting backerGreenMaterial;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public CustomMaterialSetting matteWhiteMaterial;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public CustomMaterialSetting orangeMaterial;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public CustomMaterialSetting pinkMaterial;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public CustomMaterialSetting purpleMaterial;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public CustomMaterialSetting redMaterial;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public CustomMaterialSetting silverMaterial;

	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public CustomMaterialSetting steelMaterial;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CustomMaterialSetting whiteMaterial;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public CustomMaterialSetting yellowMaterial;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CustomMaterialSetting obsidianMaterial;

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public CustomMaterialSetting gunmetalMaterial;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CustomMaterialSetting brushedGlassMaterial;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public CustomMaterialSetting crimsonMaterial;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public CustomMaterialSetting electricBlueMaterial;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public CustomMaterialSetting forestMaterial;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CustomMaterialSetting fuschiaMaterial;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public CustomMaterialSetting icebergMaterial;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomMaterialSetting mattePinkMaterial;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public CustomMaterialSetting midnightMaterial;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public CustomMaterialSetting tealMaterial;

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public CustomMaterialSetting vantablackMaterial;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public CustomMaterialSetting rubyMaterial;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public CustomMaterialSetting sapphireMaterial;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public CustomMaterialSetting topazMaterial;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public CustomMaterialSetting diamondMaterial;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public CustomMaterialSetting charcoalMaterial;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public CustomMaterialSetting platinumMaterial;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public CustomMaterialSetting testMaterial;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5E0C", Offset = "0x5C5E0C")]
	public StageInfo sunnyDayStage;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public StageInfo cloudyOrangeStage;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public StageInfo pinkSunsetStage;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public StageInfo epicSunsetStage;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public StageInfo moonlitNightStage;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public StageInfo starryShowdownStage;

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public StageInfo hazyRainStage;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public StageInfo thunderstormStage;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public StageInfo readyRoomStage;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5E24", Offset = "0x5C5E24")]
	public Sprite basicBadgeBg;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Sprite basicBadgeFg;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Sprite idlerBadgeBg;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Sprite idlerBadgeFg;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Sprite knightBadgeBg;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Sprite knightBadgeFg;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Sprite crusaderBadgeBg;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Sprite crusaderBadgeFg;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Sprite reaperBadgeBg;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Sprite reaperBadgeFg;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Sprite samuraiBadgeBg;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Sprite samuraiBadgeFg;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Sprite ninjaBadgeBg;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public Sprite ninjaBadgeFg;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public Sprite duelistBadgeBg;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Sprite duelistBadgeFg;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Sprite monkBadgeBg;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Sprite monkBadgeFg;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Sprite berserkerBadgeBg;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public Sprite berserkerBadgeFg;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Sprite axe2BadgeFg;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Sprite chakram2BadgeFg;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Sprite gun2BadgeFg;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public Sprite rapier2BadgeFg;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Sprite scimitar2BadgeFg;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Sprite spear2BadgeFg;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Sprite sword2BadgeFg;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public Sprite axeShieldBadgeFg;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Sprite crescentBadgeFg;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public Sprite dhb2BadgeFg;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Sprite glaiveBucklerBadgeFg;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public Sprite halberdBadgeFg;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Sprite rapierGunBadgeFg;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public Sprite shortBoardGunBadgeFg;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Sprite spearShieldGunBadgeFg;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Sprite swordShieldGunBadgeFg;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Sprite tripleSwordGunBadgeFg;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public Sprite stick2BadgeFg;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private Dictionary<ArmorType, ArmorHandler> armorSets;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private Dictionary<HelmType, HelmHandler> helms;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Dictionary<MaterialType, MaterialHandler> materials;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private Dictionary<StageType, StageHandler> stages;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Dictionary<FighterClass, PersonalityHandler> fighterClasses;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Dictionary<int, Glamor> glamors;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Dictionary<int, DlcItem> dlcs;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private bool init;

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x20E222C", Offset = "0x20E222C", VA = "0x20E222C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x20E2524", Offset = "0x20E2524", VA = "0x20E2524")]
	public void InitSets()
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x20E501C", Offset = "0x20E501C", VA = "0x20E501C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD844", Offset = "0x5CD844")]
	public void ImportUnlockSettings()
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x20E5024", Offset = "0x20E5024", VA = "0x20E5024")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD888", Offset = "0x5CD888")]
	public void ImportDlcSettings()
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x20E502C", Offset = "0x20E502C", VA = "0x20E502C")]
	public ArmorSet GetArmorSet(ArmorType type)
	{
		return null;
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x20E50CC", Offset = "0x20E50CC", VA = "0x20E50CC")]
	public ArmorSet GetArmorSet(int index)
	{
		return null;
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x20E5178", Offset = "0x20E5178", VA = "0x20E5178")]
	public string GetName(ArmorType type)
	{
		return null;
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x20E526C", Offset = "0x20E526C", VA = "0x20E526C")]
	public ArmorType GetValue(ArmorSet armor)
	{
		return default(ArmorType);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x20E5448", Offset = "0x20E5448", VA = "0x20E5448")]
	public int GetArmorCount()
	{
		return default(int);
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x20E54C0", Offset = "0x20E54C0", VA = "0x20E54C0")]
	public GameObject GetHelm(HelmType type)
	{
		return null;
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x20E5560", Offset = "0x20E5560", VA = "0x20E5560")]
	public GameObject GetHelm(int index)
	{
		return null;
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x20E560C", Offset = "0x20E560C", VA = "0x20E560C")]
	public string GetName(HelmType type)
	{
		return null;
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x20E5700", Offset = "0x20E5700", VA = "0x20E5700")]
	public HelmType GetValue(GameObject helm)
	{
		return default(HelmType);
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x20E58DC", Offset = "0x20E58DC", VA = "0x20E58DC")]
	public int GetHelmCount()
	{
		return default(int);
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x20E5954", Offset = "0x20E5954", VA = "0x20E5954")]
	public HelmType GetRandomHelmType()
	{
		return default(HelmType);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x20E5A28", Offset = "0x20E5A28", VA = "0x20E5A28")]
	public ArmorType GetRandomArmorType()
	{
		return default(ArmorType);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x20E5AFC", Offset = "0x20E5AFC", VA = "0x20E5AFC")]
	public CustomMaterialSetting GetMaterial(MaterialType type)
	{
		return null;
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x20E5B94", Offset = "0x20E5B94", VA = "0x20E5B94")]
	public CustomMaterialSetting GetMaterial(int index)
	{
		return null;
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x20E5C40", Offset = "0x20E5C40", VA = "0x20E5C40")]
	public string GetName(MaterialType type)
	{
		return null;
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x20DC658", Offset = "0x20DC658", VA = "0x20DC658")]
	public Color GetBadgeColor(MaterialType type)
	{
		return default(Color);
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x20E5D34", Offset = "0x20E5D34", VA = "0x20E5D34")]
	public MaterialType GetValue(CustomMaterialSetting material)
	{
		return default(MaterialType);
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x20E5F10", Offset = "0x20E5F10", VA = "0x20E5F10")]
	public int GetMaterialCount()
	{
		return default(int);
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x20E5F88", Offset = "0x20E5F88", VA = "0x20E5F88")]
	public StageInfo GetStage(StageType type)
	{
		return null;
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x20E6020", Offset = "0x20E6020", VA = "0x20E6020")]
	public StageInfo GetStage(int index)
	{
		return null;
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x20E60CC", Offset = "0x20E60CC", VA = "0x20E60CC")]
	public string GetName(StageType type)
	{
		return null;
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x20E6164", Offset = "0x20E6164", VA = "0x20E6164")]
	public StageType GetValue(StageInfo stage)
	{
		return default(StageType);
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x20E6340", Offset = "0x20E6340", VA = "0x20E6340")]
	public int GetStageCount()
	{
		return default(int);
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x20E63B8", Offset = "0x20E63B8", VA = "0x20E63B8")]
	public string GetName(FighterClass type)
	{
		return null;
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x20DC4F4", Offset = "0x20DC4F4", VA = "0x20DC4F4")]
	public Sprite GetBadgeBackground(FighterClass type)
	{
		return null;
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x20DC594", Offset = "0x20DC594", VA = "0x20DC594")]
	public Sprite GetBadgeForeground(FighterClass type, WeaponType main = WeaponType.None, WeaponType offhand = WeaponType.None)
	{
		return null;
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x20E64AC", Offset = "0x20E64AC", VA = "0x20E64AC")]
	public Sprite GetBadgeForeground(WeaponType main, WeaponType offhand)
	{
		return null;
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x20E6634", Offset = "0x20E6634", VA = "0x20E6634")]
	public int GetFighterClassCount()
	{
		return default(int);
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x20E66AC", Offset = "0x20E66AC", VA = "0x20E66AC")]
	public WeaponType GetMainHandWeapon(FighterClass type)
	{
		return default(WeaponType);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x20E66EC", Offset = "0x20E66EC", VA = "0x20E66EC")]
	public WeaponType GetOffHandWeapon(FighterClass type)
	{
		return default(WeaponType);
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x20E6714", Offset = "0x20E6714", VA = "0x20E6714")]
	public FighterClass InferClassFromWeapon(WeaponType weapon)
	{
		return default(FighterClass);
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x20E6794", Offset = "0x20E6794", VA = "0x20E6794")]
	public Glamor GetGlamor(Glamor.Type type, int subtypeId)
	{
		return null;
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x20E4F90", Offset = "0x20E4F90", VA = "0x20E4F90")]
	public List<Glamor> GetAllGlamors()
	{
		return null;
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x20E682C", Offset = "0x20E682C", VA = "0x20E682C")]
	public DlcItem GetOculusDlc(string oculusId)
	{
		return null;
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x20E6950", Offset = "0x20E6950", VA = "0x20E6950")]
	public DlcItem GetSteamDlc(uint steamId)
	{
		return null;
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x20E6A74", Offset = "0x20E6A74", VA = "0x20E6A74")]
	public DlcItem GetViveportDlc(string viveportId)
	{
		return null;
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x20E6B98", Offset = "0x20E6B98", VA = "0x20E6B98")]
	public List<DlcItem> GetAllDlcs()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x20E6C24", Offset = "0x20E6C24", VA = "0x20E6C24")]
	public void RecheckGlamorUnlocks()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x20E6D88", Offset = "0x20E6D88", VA = "0x20E6D88")]
	public PrefabHandler()
	{
	}
}
[Token(Token = "0x2000183")]
public class ArmorHandler
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ArmorType type;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ArmorSet armor;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string formattedName;

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x227E6B0", Offset = "0x227E6B0", VA = "0x227E6B0")]
	public ArmorHandler(ArmorType type, ArmorSet armor, string formattedName)
	{
	}
}
[Token(Token = "0x2000184")]
public class HelmHandler
{
	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public HelmType type;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject helm;

	[Token(Token = "0x4000F63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string formattedName;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x227553C", Offset = "0x227553C", VA = "0x227553C")]
	public HelmHandler(HelmType type, GameObject helm, string formattedName)
	{
	}
}
[Token(Token = "0x2000185")]
public class MaterialHandler
{
	[Token(Token = "0x4000F64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public MaterialType type;

	[Token(Token = "0x4000F65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public CustomMaterialSetting material;

	[Token(Token = "0x4000F66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color badgeColor;

	[Token(Token = "0x4000F67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string formattedName;

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x212DE00", Offset = "0x212DE00", VA = "0x212DE00")]
	public MaterialHandler(MaterialType type, CustomMaterialSetting material, string formattedName)
	{
	}
}
[Token(Token = "0x2000186")]
public class StageHandler
{
	[Token(Token = "0x4000F68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public StageType type;

	[Token(Token = "0x4000F69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public StageInfo stage;

	[Token(Token = "0x4000F6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string formattedName;

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x23872E8", Offset = "0x23872E8", VA = "0x23872E8")]
	public StageHandler(StageType type, StageInfo stage, string formattedName)
	{
	}
}
[Token(Token = "0x2000187")]
public class PersonalityHandler
{
	[Token(Token = "0x4000F6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public FighterClass type;

	[Token(Token = "0x4000F6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Sprite badgeBackground;

	[Token(Token = "0x4000F6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Sprite badgeForeground;

	[Token(Token = "0x4000F6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string formattedName;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x20DAC3C", Offset = "0x20DAC3C", VA = "0x20DAC3C")]
	public PersonalityHandler(FighterClass type, Sprite badgeBackground, Sprite badgeForeground, string formattedName)
	{
	}
}
[Token(Token = "0x2000188")]
public enum ArmorType
{
	[Token(Token = "0x4000F70")]
	Dummy = 0,
	[Token(Token = "0x4000F71")]
	BasicEnemy = 1,
	[Token(Token = "0x4000F72")]
	Knight = 2,
	[Token(Token = "0x4000F73")]
	Duelist = 3,
	[Token(Token = "0x4000F74")]
	Ninja = 4,
	[Token(Token = "0x4000F75")]
	Medium = 5,
	[Token(Token = "0x4000F76")]
	Samurai = 6,
	[Token(Token = "0x4000F77")]
	Boss = 7,
	[Token(Token = "0x4000F78")]
	Dwarven = 8,
	[Token(Token = "0x4000F79")]
	Feminine = 9,
	[Token(Token = "0x4000F7A")]
	None = 100
}
[Token(Token = "0x2000189")]
public enum HelmType
{
	[Token(Token = "0x4000F7C")]
	Winged = 0,
	[Token(Token = "0x4000F7D")]
	Mask = 1,
	[Token(Token = "0x4000F7E")]
	Horned = 2,
	[Token(Token = "0x4000F7F")]
	Jingasa = 3,
	[Token(Token = "0x4000F80")]
	BasicEnemy = 4,
	[Token(Token = "0x4000F81")]
	FrogMouth = 5,
	[Token(Token = "0x4000F82")]
	Crested = 6,
	[Token(Token = "0x4000F83")]
	Jousting = 7,
	[Token(Token = "0x4000F84")]
	SkullMask = 8,
	[Token(Token = "0x4000F85")]
	FoxMask = 9,
	[Token(Token = "0x4000F86")]
	RabbitMask = 10,
	[Token(Token = "0x4000F87")]
	HawkMask = 11,
	[Token(Token = "0x4000F88")]
	Bladed = 12,
	[Token(Token = "0x4000F89")]
	Champion = 13,
	[Token(Token = "0x4000F8A")]
	Scale = 14,
	[Token(Token = "0x4000F8B")]
	Simple = 15,
	[Token(Token = "0x4000F8C")]
	Samurai = 16,
	[Token(Token = "0x4000F8D")]
	None = 100
}
[Token(Token = "0x200018A")]
public enum MaterialType
{
	[Token(Token = "0x4000F8F")]
	Blue = 0,
	[Token(Token = "0x4000F90")]
	Carbon = 1,
	[Token(Token = "0x4000F91")]
	Copper = 2,
	[Token(Token = "0x4000F92")]
	Gold = 3,
	[Token(Token = "0x4000F93")]
	Green = 4,
	[Token(Token = "0x4000F94")]
	Iron = 5,
	[Token(Token = "0x4000F95")]
	Orange = 6,
	[Token(Token = "0x4000F96")]
	Purple = 7,
	[Token(Token = "0x4000F97")]
	Red = 8,
	[Token(Token = "0x4000F98")]
	Silver = 9,
	[Token(Token = "0x4000F99")]
	Steel = 10,
	[Token(Token = "0x4000F9A")]
	White = 11,
	[Token(Token = "0x4000F9B")]
	Yellow = 12,
	[Token(Token = "0x4000F9C")]
	Pink = 13,
	[Token(Token = "0x4000F9D")]
	MatteWhite = 14,
	[Token(Token = "0x4000F9E")]
	BackerGreen = 15,
	[Token(Token = "0x4000F9F")]
	Obsidian = 16,
	[Token(Token = "0x4000FA0")]
	Gunmetal = 17,
	[Token(Token = "0x4000FA1")]
	BrushedGlass = 18,
	[Token(Token = "0x4000FA2")]
	Crimson = 19,
	[Token(Token = "0x4000FA3")]
	ElectricBlue = 20,
	[Token(Token = "0x4000FA4")]
	Forest = 21,
	[Token(Token = "0x4000FA5")]
	Fuschia = 22,
	[Token(Token = "0x4000FA6")]
	Iceberg = 23,
	[Token(Token = "0x4000FA7")]
	MattePink = 24,
	[Token(Token = "0x4000FA8")]
	Midnight = 25,
	[Token(Token = "0x4000FA9")]
	Teal = 26,
	[Token(Token = "0x4000FAA")]
	Vantablack = 27,
	[Token(Token = "0x4000FAB")]
	Ruby = 28,
	[Token(Token = "0x4000FAC")]
	Sapphire = 29,
	[Token(Token = "0x4000FAD")]
	Topaz = 30,
	[Token(Token = "0x4000FAE")]
	Diamond = 31,
	[Token(Token = "0x4000FAF")]
	Charcoal = 32,
	[Token(Token = "0x4000FB0")]
	Platinum = 33,
	[Token(Token = "0x4000FB1")]
	Test = 99,
	[Token(Token = "0x4000FB2")]
	None = 100
}
[Token(Token = "0x200018B")]
public enum StageType
{
	[Token(Token = "0x4000FB4")]
	SunnyDay = 0,
	[Token(Token = "0x4000FB5")]
	CloudyOrange = 1,
	[Token(Token = "0x4000FB6")]
	PinkSunset = 2,
	[Token(Token = "0x4000FB7")]
	EpicSunset = 3,
	[Token(Token = "0x4000FB8")]
	MoonlitNight = 4,
	[Token(Token = "0x4000FB9")]
	StarryShowdown = 5,
	[Token(Token = "0x4000FBA")]
	HazyRain = 6,
	[Token(Token = "0x4000FBB")]
	ReadyRoom = 7,
	[Token(Token = "0x4000FBC")]
	Thunderstorm = 8,
	[Token(Token = "0x4000FBD")]
	None = 100
}
[Token(Token = "0x200018C")]
public enum FighterClass
{
	[Token(Token = "0x4000FBF")]
	Idle = 0,
	[Token(Token = "0x4000FC0")]
	Basic = 1,
	[Token(Token = "0x4000FC1")]
	Knight = 2,
	[Token(Token = "0x4000FC2")]
	Duelist = 3,
	[Token(Token = "0x4000FC3")]
	Monk = 4,
	[Token(Token = "0x4000FC4")]
	Ninja = 5,
	[Token(Token = "0x4000FC5")]
	Crusader = 6,
	[Token(Token = "0x4000FC6")]
	Reaper = 7,
	[Token(Token = "0x4000FC7")]
	Samurai = 8,
	[Token(Token = "0x4000FC8")]
	Berserker = 9,
	[Token(Token = "0x4000FC9")]
	PitFighter = 10,
	[Token(Token = "0x4000FCA")]
	Minion = 100,
	[Token(Token = "0x4000FCB")]
	Boss = 101,
	[Token(Token = "0x4000FCC")]
	Multiplayer = 500,
	[Token(Token = "0x4000FCD")]
	None = 1000
}
[Token(Token = "0x200018D")]
public class PrivateTagMenu : MonoBehaviour
{
	[Token(Token = "0x4000FCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshPro keyboardInput;

	[Token(Token = "0x4000FCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool inputenabled;

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x20E7118", Offset = "0x20E7118", VA = "0x20E7118")]
	private void Start()
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x20E7184", Offset = "0x20E7184", VA = "0x20E7184")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x20E71BC", Offset = "0x20E71BC", VA = "0x20E71BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x20E7260", Offset = "0x20E7260", VA = "0x20E7260")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x20E7468", Offset = "0x20E7468", VA = "0x20E7468")]
	public void Back()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x20E757C", Offset = "0x20E757C", VA = "0x20E757C")]
	public void Done()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x20E8E3C", Offset = "0x20E8E3C", VA = "0x20E8E3C")]
	public PrivateTagMenu()
	{
	}
}
[Token(Token = "0x200018E")]
public class ProgressSlider : MonoBehaviour
{
	[Token(Token = "0x4000FD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject markerPrefab;

	[Token(Token = "0x4000FD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject blitzLinePrefab;

	[Token(Token = "0x4000FD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Slider slider;

	[Token(Token = "0x4000FD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform sliderPadding;

	[Token(Token = "0x4000FD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI progressText;

	[Token(Token = "0x4000FD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI maxTimeText;

	[Token(Token = "0x4000FD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public BoundedSlider gifStart;

	[Token(Token = "0x4000FD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoundedSlider gifEnd;

	[Token(Token = "0x4000FD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color blitzColor;

	[Token(Token = "0x4000FD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool dragging;

	[Token(Token = "0x4000FDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> markers;

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x20E8E44", Offset = "0x20E8E44", VA = "0x20E8E44")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x20E8FAC", Offset = "0x20E8FAC", VA = "0x20E8FAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x20E9080", Offset = "0x20E9080", VA = "0x20E9080")]
	public void SetLength(float length)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x20E9194", Offset = "0x20E9194", VA = "0x20E9194")]
	public void SetProgress(float progress)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x20E927C", Offset = "0x20E927C", VA = "0x20E927C")]
	public float GetProgress()
	{
		return default(float);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x20E92B0", Offset = "0x20E92B0", VA = "0x20E92B0")]
	public void SeekToGifStart()
	{
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x20E93A0", Offset = "0x20E93A0", VA = "0x20E93A0")]
	public void SetMarker(float position)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x20E9698", Offset = "0x20E9698", VA = "0x20E9698")]
	public void SetBlitzLine(float startPos, float endPos, Color color)
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x20E9A9C", Offset = "0x20E9A9C", VA = "0x20E9A9C")]
	public void SetGifMarkers(float startPos, float endPos)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x20E9AFC", Offset = "0x20E9AFC", VA = "0x20E9AFC")]
	public void ResetBounds()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x20E9C3C", Offset = "0x20E9C3C", VA = "0x20E9C3C")]
	public void ClearMarkers()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x20E9DE0", Offset = "0x20E9DE0", VA = "0x20E9DE0")]
	public void BeginDrag()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x20E9DEC", Offset = "0x20E9DEC", VA = "0x20E9DEC")]
	public void EndDrag()
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x20E9EE4", Offset = "0x20E9EE4", VA = "0x20E9EE4")]
	public ProgressSlider()
	{
	}
}
[Token(Token = "0x200018F")]
public abstract class Projectile : MonoBehaviour
{
	[Token(Token = "0x4000FDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int id;

	[Token(Token = "0x4000FDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Team team;

	[Token(Token = "0x4000FDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color mainColor;

	[Token(Token = "0x4000FDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Fighter fighter;

	[Token(Token = "0x4000FDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool dead;

	[Token(Token = "0x4000FE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<GameObject> Collisions;

	[Token(Token = "0x4000FE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxLifeTime;

	[Token(Token = "0x4000FE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float lifeTime;

	[Token(Token = "0x4000FE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float damage;

	[Token(Token = "0x4000FE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 velocity;

	[Token(Token = "0x4000FE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 acceleration;

	[Token(Token = "0x4000FE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 startPoint;

	[Token(Token = "0x4000FE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool alreadyHit;

	[Token(Token = "0x4000FE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<MeshRenderer> toVertexColor;

	[Token(Token = "0x4000FE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<Transform> toScaleInOut;

	[Token(Token = "0x4000FEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float scaleOutTime;

	[Token(Token = "0x4000FEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float scaleInTime;

	[Token(Token = "0x4000FEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool fastForwarding;

	[Token(Token = "0x4000FED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected int layerMask;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x20E9F70", Offset = "0x20E9F70", VA = "0x20E9F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x20EA100", Offset = "0x20EA100", VA = "0x20EA100")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x20EA3A8", Offset = "0x20EA3A8", VA = "0x20EA3A8")]
	public void SetTeam(Team t)
	{
	}

	[Token(Token = "0x60009DA")]
	public abstract void ManualUpdate();

	[Token(Token = "0x60009DB")]
	public abstract void ManualFixedUpdate();

	[Token(Token = "0x60009DC")]
	public abstract void PhysicsStep();

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x20EAB3C", Offset = "0x20EAB3C", VA = "0x20EAB3C")]
	public void FastForward(int startingFrame)
	{
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x20DFA18", Offset = "0x20DFA18", VA = "0x20DFA18")]
	public void ScaleOutAndDestroy()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x20EAC30", Offset = "0x20EAC30", VA = "0x20EAC30")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x20DD890", Offset = "0x20DD890", VA = "0x20DD890")]
	protected void HandleCollision(Rigidbody colrb)
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x20EAC6C", Offset = "0x20EAC6C", VA = "0x20EAC6C")]
	public static void DestructionEffect(Vector3 position, Vector3 forward, float damage, Color c)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x20EB3A8", Offset = "0x20EB3A8", VA = "0x20EB3A8")]
	public static void DestructionSound(Vector3 position, float damage, FighterClass type)
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x20EBBD4", Offset = "0x20EBBD4", VA = "0x20EBBD4")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x20DFDF8", Offset = "0x20DFDF8", VA = "0x20DFDF8")]
	protected Projectile()
	{
	}
}
[Token(Token = "0x2000190")]
public abstract class RangedAttack : MonoBehaviour
{
	[Token(Token = "0x4000FEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Weapon w;

	[Token(Token = "0x4000FEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject ProjectilePrefab;

	[Token(Token = "0x4000FF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float attackCost;

	[Token(Token = "0x4000FF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float recoil;

	[Token(Token = "0x4000FF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bulletSpeed;

	[Token(Token = "0x4000FF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected List<ProjectileFireData> bulletFireDatas;

	[Token(Token = "0x4000FF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int frameDelay;

	[Token(Token = "0x4000FF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool triggerHeld;

	[Token(Token = "0x4000FF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<AudioClip> fireClips;

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x20EC51C", Offset = "0x20EC51C", VA = "0x20EC51C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009E6")]
	public abstract void ManualUpdate();

	[Token(Token = "0x60009E7")]
	public abstract void ManualFixedUpdate();

	[Token(Token = "0x60009E8")]
	public abstract void CleanUp();

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0x20E1544", Offset = "0x20E1544", VA = "0x20E1544")]
	public void ScheduleShotOnFrame(int frame, Vector3 position, Quaternion orientation, Vector3 velocity, Vector3 acceleration, float damage)
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0x20E0EE0", Offset = "0x20E0EE0", VA = "0x20E0EE0")]
	public bool IsShotAllowed()
	{
		return default(bool);
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0x20EC614", Offset = "0x20EC614", VA = "0x20EC614")]
	public void RegisterScheduledShot(BulletEvent b)
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0x20EC83C", Offset = "0x20EC83C", VA = "0x20EC83C")]
	public void ClearScheduledShots()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0x20E1CD8", Offset = "0x20E1CD8", VA = "0x20E1CD8")]
	public void FireShots()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x20EC8B4", Offset = "0x20EC8B4", VA = "0x20EC8B4")]
	public void ShootProjectile(ProjectileFireData data)
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x20E2174", Offset = "0x20E2174", VA = "0x20E2174")]
	protected RangedAttack()
	{
	}
}
[Token(Token = "0x2000191")]
public struct ProjectileFireData
{
	[Token(Token = "0x4000FF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000FF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion rotation;

	[Token(Token = "0x4000FF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 velocity;

	[Token(Token = "0x4000FFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 acceleration;

	[Token(Token = "0x4000FFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int frame;

	[Token(Token = "0x4000FFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int id;

	[Token(Token = "0x4000FFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float damage;
}
[Token(Token = "0x2000192")]
public class ReadyRoom : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	private enum Walls
	{
		[Token(Token = "0x4002878")]
		Floor,
		[Token(Token = "0x4002879")]
		Ceiling,
		[Token(Token = "0x400287A")]
		LeftWall,
		[Token(Token = "0x400287B")]
		RightWall,
		[Token(Token = "0x400287C")]
		FrontWall,
		[Token(Token = "0x400287D")]
		BackWall
	}

	[Token(Token = "0x2000529")]
	private enum State
	{
		[Token(Token = "0x400287F")]
		Busy,
		[Token(Token = "0x4002880")]
		Waiting,
		[Token(Token = "0x4002881")]
		Idle
	}

	[Token(Token = "0x200052A")]
	public enum Script
	{
		[Token(Token = "0x4002883")]
		ArenaToReadyRoom,
		[Token(Token = "0x4002884")]
		ReadyRoomToClassSelect,
		[Token(Token = "0x4002885")]
		ClassSelectToCustomization,
		[Token(Token = "0x4002886")]
		CustomizationToClassSelect,
		[Token(Token = "0x4002887")]
		CustomizationToFightSelect,
		[Token(Token = "0x4002888")]
		FightSelectToCustomization,
		[Token(Token = "0x4002889")]
		FightSelectToArena,
		[Token(Token = "0x400288A")]
		MiniReadyRoom,
		[Token(Token = "0x400288B")]
		PedestalAnimation,
		[Token(Token = "0x400288C")]
		MiniScaleToFullRoom,
		[Token(Token = "0x400288D")]
		TestScript,
		[Token(Token = "0x400288E")]
		None
	}

	[Token(Token = "0x4000FFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject wallPrefab;

	[Token(Token = "0x4000FFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject classSelectMenu;

	[Token(Token = "0x4001000")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject customizationMenu;

	[Token(Token = "0x4001001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject fightSelectScreen;

	[Token(Token = "0x4001002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject abyssSurround;

	[Token(Token = "0x4001003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject arena;

	[Token(Token = "0x4001004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject pedestalRig;

	[Token(Token = "0x4001005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5E3C", Offset = "0x5C5E3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5E3C", Offset = "0x5C5E3C")]
	public GameObject readyRoomConfirmButton;

	[Token(Token = "0x4001006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject classSelectConfirmButton;

	[Token(Token = "0x4001007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject customizationConfirmButton;

	[Token(Token = "0x4001008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject customizationBackButton;

	[Token(Token = "0x4001009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fightSelectConfirmButton;

	[Token(Token = "0x400100A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject fightSelectBackButton;

	[Token(Token = "0x400100B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject testButton;

	[Token(Token = "0x400100C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5E8C", Offset = "0x5C5E8C")]
	public float speedMultiplier;

	[Token(Token = "0x400100D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5EA4", Offset = "0x5C5EA4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C5EA4", Offset = "0x5C5EA4")]
	public bool isMiniRoom;

	[Token(Token = "0x400100E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject fullSizeRoom;

	[Token(Token = "0x400100F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool loop;

	[Token(Token = "0x4001010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool scriptOverride;

	[Token(Token = "0x4001011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<WallOfPanels> walls;

	[Token(Token = "0x4001012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WallOfPanels floor;

	[Token(Token = "0x4001013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private WallOfPanels ceiling;

	[Token(Token = "0x4001014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WallOfPanels leftWall;

	[Token(Token = "0x4001015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private WallOfPanels rightWall;

	[Token(Token = "0x4001016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WallOfPanels frontWall;

	[Token(Token = "0x4001017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private WallOfPanels backWall;

	[Token(Token = "0x4001018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private State state;

	[Token(Token = "0x4001019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Script chosenScript;

	[Token(Token = "0x400101A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> pivots;

	[Token(Token = "0x400101B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float waitTime;

	[Token(Token = "0x400101C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float elapsedTime;

	[Token(Token = "0x400101D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int scriptStep;

	[Token(Token = "0x400101E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int scriptTotalSteps;

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x20ED0A4", Offset = "0x20ED0A4", VA = "0x20ED0A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x20EDACC", Offset = "0x20EDACC", VA = "0x20EDACC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x20EDAB4", Offset = "0x20EDAB4", VA = "0x20EDAB4")]
	public void ButtonMiniReadyRoom()
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x20FB264", Offset = "0x20FB264", VA = "0x20FB264")]
	public void ButtonMiniScaleToFullRoom()
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x20FB384", Offset = "0x20FB384", VA = "0x20FB384")]
	public void ButtonArenaToReadyRoom()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x20FB39C", Offset = "0x20FB39C", VA = "0x20FB39C")]
	public void ButtonReadyRoomToClassSelect()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x20FB3B4", Offset = "0x20FB3B4", VA = "0x20FB3B4")]
	public void ButtonClassSelectToCustomization()
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x20FB3D0", Offset = "0x20FB3D0", VA = "0x20FB3D0")]
	public void ButtonCustomizationToClassSelect()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x20FB3EC", Offset = "0x20FB3EC", VA = "0x20FB3EC")]
	public void ButtonCustomizationToFightSelect()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x20FB408", Offset = "0x20FB408", VA = "0x20FB408")]
	public void ButtonFightSelectToCustomization()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x20FB424", Offset = "0x20FB424", VA = "0x20FB424")]
	public void ButtonFightSelectToArena()
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x20FB440", Offset = "0x20FB440", VA = "0x20FB440")]
	public void ButtonPedestalAnimation()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x20FB45C", Offset = "0x20FB45C", VA = "0x20FB45C")]
	public void ButtonTestScript()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x20FB474", Offset = "0x20FB474", VA = "0x20FB474")]
	public void GrabMiniRoom()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x20FB4A4", Offset = "0x20FB4A4", VA = "0x20FB4A4")]
	public void DropMiniRoom()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x20EF244", Offset = "0x20EF244", VA = "0x20EF244")]
	private void MiniReadyRoom()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x20EF598", Offset = "0x20EF598", VA = "0x20EF598")]
	private void MiniScaleToFullRoom()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x20EE0B8", Offset = "0x20EE0B8", VA = "0x20EE0B8")]
	private void ArenaToReadyRoom()
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x20EFF48", Offset = "0x20EFF48", VA = "0x20EFF48")]
	private void ReadyRoomToClassSelect()
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x20F0EDC", Offset = "0x20F0EDC", VA = "0x20F0EDC")]
	private void ClassSelectToCustomization()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x20F38A4", Offset = "0x20F38A4", VA = "0x20F38A4")]
	private void CustomizationToClassSelect()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x20F60C4", Offset = "0x20F60C4", VA = "0x20F60C4")]
	private void CustomizationToFightSelect()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x20F68D8", Offset = "0x20F68D8", VA = "0x20F68D8")]
	private void FightSelectToCustomization()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x20F70D8", Offset = "0x20F70D8", VA = "0x20F70D8")]
	private void FightSelectToArena()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x20F9F5C", Offset = "0x20F9F5C", VA = "0x20F9F5C")]
	private void PedestalAnimation()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x20FAED4", Offset = "0x20FAED4", VA = "0x20FAED4")]
	private void TestScript()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x20FB4B0", Offset = "0x20FB4B0", VA = "0x20FB4B0")]
	private void StartWait(float time)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0x20FB4D4", Offset = "0x20FB4D4", VA = "0x20FB4D4")]
	private void DestroyAllExtraPanels()
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0x20FB634", Offset = "0x20FB634", VA = "0x20FB634")]
	public ReadyRoom()
	{
	}
}
[Token(Token = "0x2000193")]
public enum Direction
{
	[Token(Token = "0x4001020")]
	PositiveX,
	[Token(Token = "0x4001021")]
	NegativeX,
	[Token(Token = "0x4001022")]
	PositiveY,
	[Token(Token = "0x4001023")]
	NegativeY,
	[Token(Token = "0x4001024")]
	PositiveZ,
	[Token(Token = "0x4001025")]
	NegativeZ
}
[Token(Token = "0x2000194")]
public enum Axis
{
	[Token(Token = "0x4001027")]
	X,
	[Token(Token = "0x4001028")]
	Y,
	[Token(Token = "0x4001029")]
	Z
}
[Token(Token = "0x2000195")]
public class Replay : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	public class Snapshot
	{
		[Token(Token = "0x400288F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float timestamp;

		[Token(Token = "0x60025D5")]
		[Address(RVA = "0x22BD028", Offset = "0x22BD028", VA = "0x22BD028")]
		public Snapshot()
		{
		}
	}

	[Token(Token = "0x200052C")]
	public class InputSnapshot : Snapshot
	{
		[Token(Token = "0x4002890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int type;

		[Token(Token = "0x60025D6")]
		[Address(RVA = "0x22BD1C8", Offset = "0x22BD1C8", VA = "0x22BD1C8")]
		public InputSnapshot(float time, InputSignals input)
		{
		}

		[Token(Token = "0x60025D7")]
		[Address(RVA = "0x22BB764", Offset = "0x22BB764", VA = "0x22BB764")]
		public InputSnapshot(float time, int type)
		{
		}
	}

	[Token(Token = "0x200052D")]
	public class PositionSnapshot : Snapshot
	{
		[Token(Token = "0x4002891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 headPos;

		[Token(Token = "0x4002892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 headRot;

		[Token(Token = "0x4002893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 rightHandPos;

		[Token(Token = "0x4002894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 rightHandRot;

		[Token(Token = "0x4002895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 leftHandPos;

		[Token(Token = "0x4002896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 leftHandRot;

		[Token(Token = "0x4002897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public HandPoseType rightHandPose;

		[Token(Token = "0x4002898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public HandPoseType leftHandPose;

		[Token(Token = "0x60025D8")]
		[Address(RVA = "0x22BB6C0", Offset = "0x22BB6C0", VA = "0x22BB6C0")]
		public PositionSnapshot()
		{
		}

		[Token(Token = "0x60025D9")]
		[Address(RVA = "0x22A3FD8", Offset = "0x22A3FD8", VA = "0x22A3FD8")]
		public PositionSnapshot(float time, FighterData fd)
		{
		}
	}

	[Token(Token = "0x200052E")]
	public class StatsSnapshot : Snapshot
	{
		[Token(Token = "0x4002899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float health;

		[Token(Token = "0x400289A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float shield;

		[Token(Token = "0x400289B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float shieldRegenRate;

		[Token(Token = "0x400289C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float energy;

		[Token(Token = "0x400289D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ghostHealth;

		[Token(Token = "0x400289E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ghostHealthRegenRate;

		[Token(Token = "0x400289F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool dead;

		[Token(Token = "0x40028A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool isBlitzing;

		[Token(Token = "0x40028A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blitzProgress;

		[Token(Token = "0x40028A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float lastBlitzScaledTimestamp;

		[Token(Token = "0x40028A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float progressAtLastBlitzScaledTimestamp;

		[Token(Token = "0x40028A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool isChargingUp;

		[Token(Token = "0x60025DA")]
		[Address(RVA = "0x22BB6C8", Offset = "0x22BB6C8", VA = "0x22BB6C8")]
		public StatsSnapshot()
		{
		}

		[Token(Token = "0x60025DB")]
		[Address(RVA = "0x22A44EC", Offset = "0x22A44EC", VA = "0x22A44EC")]
		public StatsSnapshot(float time, FighterData fd)
		{
		}
	}

	[Token(Token = "0x200052F")]
	public class WeaponSnapshot : Snapshot
	{
		[Token(Token = "0x40028A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool gripped;

		[Token(Token = "0x40028A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool leftGripped;

		[Token(Token = "0x40028A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool triggerHeld;

		[Token(Token = "0x40028A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool handGripHeld;

		[Token(Token = "0x40028A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float shieldHealth;

		[Token(Token = "0x40028AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int summonedBits;

		[Token(Token = "0x40028AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<WeaponPhysics> physics;

		[Token(Token = "0x60025DC")]
		[Address(RVA = "0x22BB6D0", Offset = "0x22BB6D0", VA = "0x22BB6D0")]
		public WeaponSnapshot()
		{
		}

		[Token(Token = "0x60025DD")]
		[Address(RVA = "0x22A4670", Offset = "0x22A4670", VA = "0x22A4670")]
		public WeaponSnapshot(float time, Hand hand)
		{
		}
	}

	[Token(Token = "0x2000530")]
	public class WeaponPhysics
	{
		[Token(Token = "0x40028AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 position;

		[Token(Token = "0x40028AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 rotation;

		[Token(Token = "0x60025DE")]
		[Address(RVA = "0x22BB75C", Offset = "0x22BB75C", VA = "0x22BB75C")]
		public WeaponPhysics()
		{
		}

		[Token(Token = "0x60025DF")]
		[Address(RVA = "0x22BD1F0", Offset = "0x22BD1F0", VA = "0x22BD1F0")]
		public WeaponPhysics(StickPhysics sp)
		{
		}
	}

	[Token(Token = "0x2000531")]
	public class LevelData
	{
		[Token(Token = "0x40028AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string replayVersion;

		[Token(Token = "0x40028AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public StageType stageType;

		[Token(Token = "0x40028B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int songId;

		[Token(Token = "0x40028B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntroType introType;

		[Token(Token = "0x40028B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float replayLength;

		[Token(Token = "0x40028B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public List<Marker> markers;

		[Token(Token = "0x40028B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<FrameData> frames;

		[Token(Token = "0x40028B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public List<EventData> events;

		[Token(Token = "0x40028B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Dictionary<EventData, InjuryData> injuries;

		[Token(Token = "0x40028B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool playbackComplete;

		[Token(Token = "0x40028B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public FrameData lastPlayedFrame;

		[Token(Token = "0x40028B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FrameData upcomingFrame;

		[Token(Token = "0x40028BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int currentEvent;

		[Token(Token = "0x40028BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int currentFrame;

		[Token(Token = "0x60025E0")]
		[Address(RVA = "0x22A1FE0", Offset = "0x22A1FE0", VA = "0x22A1FE0")]
		public LevelData()
		{
		}

		[Token(Token = "0x60025E1")]
		[Address(RVA = "0x22A2A64", Offset = "0x22A2A64", VA = "0x22A2A64")]
		public void Clear()
		{
		}

		[Token(Token = "0x60025E2")]
		[Address(RVA = "0x22AC300", Offset = "0x22AC300", VA = "0x22AC300")]
		public void ResetFrames()
		{
		}
	}

	[Token(Token = "0x2000532")]
	public class FighterData
	{
		[Token(Token = "0x40028BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Fighter fighter;

		[Token(Token = "0x40028BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject head;

		[Token(Token = "0x40028BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Hand rightHand;

		[Token(Token = "0x40028BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Hand leftHand;

		[Token(Token = "0x40028C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool rightGripHeld;

		[Token(Token = "0x40028C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool leftGripHeld;

		[Token(Token = "0x40028C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool rightTriggerHeld;

		[Token(Token = "0x40028C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool leftTriggerHeld;

		[Token(Token = "0x40028C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int currentPosition;

		[Token(Token = "0x40028C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int currentStat;

		[Token(Token = "0x40028C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentInput;

		[Token(Token = "0x40028C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentRhWeapon;

		[Token(Token = "0x40028C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int currentLhWeapon;

		[Token(Token = "0x40028C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool playbackComplete;

		[Token(Token = "0x40028CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public PositionSnapshot lastPlayedPos;

		[Token(Token = "0x40028CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public PositionSnapshot upcomingPos;

		[Token(Token = "0x40028CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WeaponSnapshot lastPlayedRhWeapon;

		[Token(Token = "0x40028CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WeaponSnapshot upcomingRhWeapon;

		[Token(Token = "0x40028CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WeaponSnapshot lastPlayedLhWeapon;

		[Token(Token = "0x40028CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WeaponSnapshot upcomingLhWeapon;

		[Token(Token = "0x40028D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public string name;

		[Token(Token = "0x40028D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FighterClass fighterClass;

		[Token(Token = "0x40028D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public WeaponType rightHandWeapon;

		[Token(Token = "0x40028D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public WeaponType leftHandWeapon;

		[Token(Token = "0x40028D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public ArmorType armorType;

		[Token(Token = "0x40028D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public HelmType helmType;

		[Token(Token = "0x40028D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public MaterialType primaryMaterial;

		[Token(Token = "0x40028D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public MaterialType secondaryMaterial;

		[Token(Token = "0x40028D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public List<PositionSnapshot> positions;

		[Token(Token = "0x40028D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<StatsSnapshot> stats;

		[Token(Token = "0x40028DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public List<InputSnapshot> inputs;

		[Token(Token = "0x40028DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<WeaponSnapshot> rhWeapons;

		[Token(Token = "0x40028DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public List<WeaponSnapshot> lhWeapons;

		[Token(Token = "0x60025E3")]
		[Address(RVA = "0x22A7F9C", Offset = "0x22A7F9C", VA = "0x22A7F9C")]
		public FighterData()
		{
		}

		[Token(Token = "0x60025E4")]
		[Address(RVA = "0x22A23A8", Offset = "0x22A23A8", VA = "0x22A23A8")]
		public FighterData(Fighter f)
		{
		}

		[Token(Token = "0x60025E5")]
		[Address(RVA = "0x22A2B40", Offset = "0x22A2B40", VA = "0x22A2B40")]
		public void Clear()
		{
		}

		[Token(Token = "0x60025E6")]
		[Address(RVA = "0x22A9FF0", Offset = "0x22A9FF0", VA = "0x22A9FF0")]
		public void ResetFrames()
		{
		}
	}

	[Token(Token = "0x2000533")]
	public class EventData : Snapshot
	{
		[Token(Token = "0x20006E3")]
		public enum Type
		{
			[Token(Token = "0x4003282")]
			BlitzEvent,
			[Token(Token = "0x4003283")]
			RetreatEvent,
			[Token(Token = "0x4003284")]
			BulletEvent,
			[Token(Token = "0x4003285")]
			WeaponHitEvent,
			[Token(Token = "0x4003286")]
			BulletHitEvent,
			[Token(Token = "0x4003287")]
			TwoWeaponClashEvent,
			[Token(Token = "0x4003288")]
			WeaponClashEvent,
			[Token(Token = "0x4003289")]
			WeaponResummonEvent,
			[Token(Token = "0x400328A")]
			BulletSmashEvent,
			[Token(Token = "0x400328B")]
			InjuryEvent,
			[Token(Token = "0x400328C")]
			None,
			[Token(Token = "0x400328D")]
			HandPoseEvent
		}

		[Token(Token = "0x40028DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Event evnt;

		[Token(Token = "0x40028DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type type;

		[Token(Token = "0x40028DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frame;

		[Token(Token = "0x40028E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int fighterId;

		[Token(Token = "0x40028E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int fighterId2;

		[Token(Token = "0x40028E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 position;

		[Token(Token = "0x40028E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 velocity;

		[Token(Token = "0x40028E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 acceleration;

		[Token(Token = "0x40028E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Vector3 direction;

		[Token(Token = "0x40028E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Vector3 hitSpot;

		[Token(Token = "0x40028E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Quaternion orientation;

		[Token(Token = "0x40028E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool rightWeapon;

		[Token(Token = "0x40028E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool rightWeapon2;

		[Token(Token = "0x40028EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int bulletId;

		[Token(Token = "0x40028EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float damage;

		[Token(Token = "0x40028EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int collisionIndex;

		[Token(Token = "0x40028ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int collisionIndex2;

		[Token(Token = "0x60025E7")]
		[Address(RVA = "0x22BB508", Offset = "0x22BB508", VA = "0x22BB508")]
		public EventData(float time)
		{
		}

		[Token(Token = "0x60025E8")]
		[Address(RVA = "0x22BD030", Offset = "0x22BD030", VA = "0x22BD030")]
		public EventData(float time, Type type, int fighterId, int frame)
		{
		}

		[Token(Token = "0x60025E9")]
		[Address(RVA = "0x22A5D2C", Offset = "0x22A5D2C", VA = "0x22A5D2C")]
		public EventData(float time, Event evnt)
		{
		}

		[Token(Token = "0x60025EA")]
		[Address(RVA = "0x22B2BC8", Offset = "0x22B2BC8", VA = "0x22B2BC8")]
		public void Send()
		{
		}
	}

	[Token(Token = "0x2000534")]
	public class InjuryData : Snapshot
	{
		[Token(Token = "0x40028EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EventData injuryEvent;

		[Token(Token = "0x40028EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FighterHitRecord hitRecord;

		[Token(Token = "0x40028F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public List<VertData> affectedVerts;

		[Token(Token = "0x60025EB")]
		[Address(RVA = "0x22BB688", Offset = "0x22BB688", VA = "0x22BB688")]
		public InjuryData(EventData ie)
		{
		}

		[Token(Token = "0x60025EC")]
		[Address(RVA = "0x22A9E08", Offset = "0x22A9E08", VA = "0x22A9E08")]
		public void Initialize()
		{
		}

		[Token(Token = "0x60025ED")]
		[Address(RVA = "0x22BC3D0", Offset = "0x22BC3D0", VA = "0x22BC3D0")]
		public FighterCollision GetFighterCollision()
		{
			return null;
		}
	}

	[Token(Token = "0x2000535")]
	public class FrameData : Snapshot
	{
		[Token(Token = "0x40028F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int fixedFrameCount;

		[Token(Token = "0x40028F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float scaledTime;

		[Token(Token = "0x40028F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float unscaledTime;

		[Token(Token = "0x40028F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fixedDeltaTime;

		[Token(Token = "0x40028F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float timeScale;

		[Token(Token = "0x40028F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float timeScaleProgress;

		[Token(Token = "0x40028F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool anyoneBlitzing;

		[Token(Token = "0x40028F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float introTimer;

		[Token(Token = "0x60025EE")]
		[Address(RVA = "0x22BB4E8", Offset = "0x22BB4E8", VA = "0x22BB4E8")]
		public FrameData(float time)
		{
		}

		[Token(Token = "0x60025EF")]
		[Address(RVA = "0x22A3F70", Offset = "0x22A3F70", VA = "0x22A3F70")]
		public FrameData(float time, FrameTimeData ftd, float introTimer)
		{
		}
	}

	[Token(Token = "0x2000536")]
	public class Marker : Snapshot
	{
		[Token(Token = "0x20006E4")]
		public enum Type
		{
			[Token(Token = "0x400328F")]
			SetByPlayer,
			[Token(Token = "0x4003290")]
			BattleStart,
			[Token(Token = "0x4003291")]
			Blitz,
			[Token(Token = "0x4003292")]
			Retreat,
			[Token(Token = "0x4003293")]
			FightEnd,
			[Token(Token = "0x4003294")]
			P1Death,
			[Token(Token = "0x4003295")]
			P2Death,
			[Token(Token = "0x4003296")]
			P1Blitz,
			[Token(Token = "0x4003297")]
			P2Blitz
		}

		[Token(Token = "0x40028F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Type type;

		[Token(Token = "0x60025F0")]
		[Address(RVA = "0x22A493C", Offset = "0x22A493C", VA = "0x22A493C")]
		public Marker(float time, Type type)
		{
		}
	}

	[Token(Token = "0x400102A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public LevelData level;

	[Token(Token = "0x400102B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomMatchSettings matchSettings;

	[Token(Token = "0x400102C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public FighterData fighter1;

	[Token(Token = "0x400102D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FighterData fighter2;

	[Token(Token = "0x400102E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ReplayRig replayRig;

	[Token(Token = "0x400102F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool recording;

	[Token(Token = "0x4001030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool playingBack;

	[Token(Token = "0x4001031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool paused;

	[Token(Token = "0x4001032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float introLength;

	[Token(Token = "0x4001033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float nextFrameTimeFast;

	[Token(Token = "0x4001034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float nextFrameTimeSlow;

	[Token(Token = "0x4001035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentTime;

	[Token(Token = "0x4001036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float fastFps;

	[Token(Token = "0x4001037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float slowFps;

	[Token(Token = "0x4001038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeUntilFinish;

	[Token(Token = "0x4001039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float totalTimeScaleMultiplier;

	[Token(Token = "0x400103A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float baseMeleeMultiplier;

	[Token(Token = "0x400103B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float timeScaleAbsolute;

	[Token(Token = "0x400103C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float fasterMeleeModifier;

	[Token(Token = "0x400103D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float timeScaleCountdown;

	[Token(Token = "0x400103E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeScaleAbsoluteCorrection;

	[Token(Token = "0x400103F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string myfilename;

	[Token(Token = "0x4001040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int fighter1Id;

	[Token(Token = "0x4001041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int fighter2Id;

	[Token(Token = "0x4001042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public string lastSavedFile;

	[Token(Token = "0x4001043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float prevTimeScale;

	[Token(Token = "0x4001044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool frameSync;

	[Token(Token = "0x4001045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool justUnpaused;

	[Token(Token = "0x4001046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	public bool debugOutput;

	[Token(Token = "0x4001047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float justBeforeDeathTime;

	[Token(Token = "0x4001048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float deathTime;

	[Token(Token = "0x4001049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int fighterToDie;

	[Token(Token = "0x400104A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int deathEventSearch;

	[Token(Token = "0x400104B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float lerpAmtDebug;

	[Token(Token = "0x400104C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private string lerpDebugString;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x22A123C", Offset = "0x22A123C", VA = "0x22A123C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x22A12AC", Offset = "0x22A12AC", VA = "0x22A12AC")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x22A1DE8", Offset = "0x22A1DE8", VA = "0x22A1DE8")]
	public void StartRecording(Fighter f1, Fighter f2, bool includeIntro)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x22A2C28", Offset = "0x22A2C28", VA = "0x22A2C28")]
	public void SetStartBattle()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x22A2E5C", Offset = "0x22A2E5C", VA = "0x22A2E5C")]
	public void FinishRecording(float time)
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x22A1D1C", Offset = "0x22A1D1C", VA = "0x22A1D1C")]
	public void FinishRecording()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x22A3838", Offset = "0x22A3838", VA = "0x22A3838")]
	public void AbandonRecording()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x22A3868", Offset = "0x22A3868", VA = "0x22A3868")]
	public void SaveRecordingInProgress()
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x22A1340", Offset = "0x22A1340", VA = "0x22A1340")]
	private void Record()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x22A3E2C", Offset = "0x22A3E2C", VA = "0x22A3E2C")]
	public void RecordDeathStats(Fighter fighter)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x22A38E8", Offset = "0x22A38E8", VA = "0x22A38E8")]
	public void RecordFrames()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x22A3A7C", Offset = "0x22A3A7C", VA = "0x22A3A7C")]
	public void RecordPositions(FighterData fighter)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x22A3D2C", Offset = "0x22A3D2C", VA = "0x22A3D2C")]
	public void RecordStats(FighterData fighter)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x22A3B7C", Offset = "0x22A3B7C", VA = "0x22A3B7C")]
	public void RecordWeapons(FighterData fighter)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x22A2D9C", Offset = "0x22A2D9C", VA = "0x22A2D9C")]
	public void RecordMarker(Marker.Type type)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x22A4964", Offset = "0x22A4964", VA = "0x22A4964")]
	public void RecordEvent(Event evnt)
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x22A6CBC", Offset = "0x22A6CBC", VA = "0x22A6CBC")]
	public void StartPlayback(string replayName)
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x22AB1F0", Offset = "0x22AB1F0", VA = "0x22AB1F0")]
	public void RestartPlayback()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x22AC310", Offset = "0x22AC310", VA = "0x22AC310")]
	public void Pause(bool pause)
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x22AC404", Offset = "0x22AC404", VA = "0x22AC404")]
	public void ExitReplay()
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x22A14FC", Offset = "0x22A14FC", VA = "0x22A14FC")]
	private void Playback()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x22AC870", Offset = "0x22AC870", VA = "0x22AC870")]
	private void PlaybackFrames()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x22ACE30", Offset = "0x22ACE30", VA = "0x22ACE30")]
	private void RecalcTimeScaleVars()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x22B251C", Offset = "0x22B251C", VA = "0x22B251C")]
	private void ApplyAbsoluteTimeScale(float absTimeScale, float duration)
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x22AD004", Offset = "0x22AD004", VA = "0x22AD004")]
	private void PlaybackPositions(FighterData fd, bool sync = false)
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x22ADCC4", Offset = "0x22ADCC4", VA = "0x22ADCC4")]
	private void PlaybackStats(FighterData fd, bool sync = false)
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x22AE310", Offset = "0x22AE310", VA = "0x22AE310")]
	private void PlaybackWeapons(FighterData fd, bool sync = false)
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x22AC49C", Offset = "0x22AC49C", VA = "0x22AC49C")]
	private void PlaybackInputs(FighterData fd)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x22B0F30", Offset = "0x22B0F30", VA = "0x22B0F30")]
	private void PlaybackEvents()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x22AA00C", Offset = "0x22AA00C", VA = "0x22AA00C")]
	public void Seek(float seekTime)
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x22B3CA4", Offset = "0x22B3CA4", VA = "0x22B3CA4")]
	private void SeekSyncedFrame(float approxCurrentTime)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x22B51BC", Offset = "0x22B51BC", VA = "0x22B51BC")]
	private void SeekInputs(FighterData fd)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x22B44FC", Offset = "0x22B44FC", VA = "0x22B44FC")]
	private void SeekLevel()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x22B5030", Offset = "0x22B5030", VA = "0x22B5030")]
	private void SeekFighter(FighterData fd)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x22B5708", Offset = "0x22B5708", VA = "0x22B5708")]
	private void SyncAllVars(FighterData fd)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x22B5764", Offset = "0x22B5764", VA = "0x22B5764")]
	public void SeekPreviousMarker()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x22B58F8", Offset = "0x22B58F8", VA = "0x22B58F8")]
	public void SeekNextMarker()
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x22A2E74", Offset = "0x22A2E74", VA = "0x22A2E74")]
	private void SaveFile(string fileName = "")
	{
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x22B5AC4", Offset = "0x22B5AC4", VA = "0x22B5AC4")]
	private void WriteLevelData(BinaryWriter w)
	{
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x22B6574", Offset = "0x22B6574", VA = "0x22B6574")]
	private void WriteEvents(BinaryWriter w)
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x22B748C", Offset = "0x22B748C", VA = "0x22B748C")]
	private void WriteFighterData(BinaryWriter w, FighterData fd)
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x22A80F4", Offset = "0x22A80F4", VA = "0x22A80F4")]
	public void LoadReplay(string fileName)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x22B9600", Offset = "0x22B9600", VA = "0x22B9600")]
	private void ReadReplay(BinaryReader r)
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x22B963C", Offset = "0x22B963C", VA = "0x22B963C")]
	private void ReadLevelData(BinaryReader r)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x22B9D9C", Offset = "0x22B9D9C", VA = "0x22B9D9C")]
	private void ReadEvents(BinaryReader r)
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x22BA49C", Offset = "0x22BA49C", VA = "0x22BA49C")]
	private void ReadFighterData(BinaryReader r, FighterData fd)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x22BB78C", Offset = "0x22BB78C", VA = "0x22BB78C")]
	public void AddVersioningToOldReplays()
	{
	}

	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x22A9040", Offset = "0x22A9040", VA = "0x22A9040")]
	private void InstantiateFighter(FighterData fd, Team team)
	{
	}

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x22BBCB4", Offset = "0x22BBCB4", VA = "0x22BBCB4")]
	public Fighter GetFighter1()
	{
		return null;
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x22BBCD8", Offset = "0x22BBCD8", VA = "0x22BBCD8")]
	public Fighter GetFighter2()
	{
		return null;
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x22BBCFC", Offset = "0x22BBCFC", VA = "0x22BBCFC")]
	public Fighter GetFighter(int fighterId)
	{
		return null;
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x22BBD4C", Offset = "0x22BBD4C", VA = "0x22BBD4C")]
	public int TranslateFighterIdToReplayId(int id)
	{
		return default(int);
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x22B3A1C", Offset = "0x22B3A1C", VA = "0x22B3A1C")]
	public void ClearScheduledShots(Fighter fighter)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x22A88CC", Offset = "0x22A88CC", VA = "0x22A88CC")]
	public float ParseMarkers(List<Marker.Type> desiredMarkers, bool showBlitzLines)
	{
		return default(float);
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x22BBDDC", Offset = "0x22BBDDC", VA = "0x22BBDDC")]
	public void HitSlowdown()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x22BBF2C", Offset = "0x22BBF2C", VA = "0x22BBF2C")]
	public void ClashSlowdown()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x22B2198", Offset = "0x22B2198", VA = "0x22B2198")]
	public void DeathSlowdown(float timeScale = 0.015f, float length = 4f)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x22BC084", Offset = "0x22BC084", VA = "0x22BC084")]
	public void DeathGuess(Fighter hitFighter)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x22BC3C4", Offset = "0x22BC3C4", VA = "0x22BC3C4")]
	public void SetPlaybackSpeedMultiplier(float multiplier)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x22B255C", Offset = "0x22B255C", VA = "0x22B255C")]
	public bool VersionIsOlderThan(float test)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x22A875C", Offset = "0x22A875C", VA = "0x22A875C")]
	public bool VersionIsNewerThan(float test)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x22B26CC", Offset = "0x22B26CC", VA = "0x22B26CC")]
	public bool EventAndResourceOverride()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x22B564C", Offset = "0x22B564C", VA = "0x22B564C")]
	public int GetComboId(EventData evnt)
	{
		return default(int);
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x22B1BC0", Offset = "0x22B1BC0", VA = "0x22B1BC0")]
	public void PostDeathResummon()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x22A4AFC", Offset = "0x22A4AFC", VA = "0x22A4AFC")]
	public void SplitArcBullets(ArcBulletsEvent abe)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x22B278C", Offset = "0x22B278C", VA = "0x22B278C")]
	public void ApplyInjury(InjuryData id)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x22BC4E4", Offset = "0x22BC4E4", VA = "0x22BC4E4")]
	public string GetDebugText()
	{
		return null;
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x22BC9D0", Offset = "0x22BC9D0", VA = "0x22BC9D0")]
	public void SeekToP1Closeup(float startAdjust)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x22BCB70", Offset = "0x22BCB70", VA = "0x22BCB70")]
	public void SeekToP2Closeup(float startAdjust)
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x22BCD10", Offset = "0x22BCD10", VA = "0x22BCD10")]
	public void SeekToGifStart(float startAdjust)
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x22BCF5C", Offset = "0x22BCF5C", VA = "0x22BCF5C")]
	public Replay()
	{
	}
}
[Token(Token = "0x2000196")]
public static class BinarySearch
{
	[Token(Token = "0x6000A54")]
	public static int Search<T>(this List<T> arr, float key)
	{
		return default(int);
	}
}
[Token(Token = "0x2000197")]
public class Replay2dController : MonoBehaviour
{
	[Token(Token = "0x400104D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ReplayCam replayCam;

	[Token(Token = "0x400104E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ProgressSlider progressSlider;

	[Token(Token = "0x400104F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public JumbotronBar p1Bar;

	[Token(Token = "0x4001050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JumbotronBar p2Bar;

	[Token(Token = "0x4001051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject slowHitsCheckbox;

	[Token(Token = "0x4001052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject slowBlocksCheckbox;

	[Token(Token = "0x4001053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject fasterMeleeCheckbox;

	[Token(Token = "0x4001054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI debugBox;

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x22BD2B0", Offset = "0x22BD2B0", VA = "0x22BD2B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x22BD39C", Offset = "0x22BD39C", VA = "0x22BD39C")]
	public Replay2dController()
	{
	}
}
[Token(Token = "0x2000198")]
public class ReplayButton : MonoBehaviour
{
	[Token(Token = "0x4001055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ReplaySelectScreen parentMenu;

	[Token(Token = "0x4001056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI replayWeapon1Text;

	[Token(Token = "0x4001057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI replayWeapon2Text;

	[Token(Token = "0x4001058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI replayDate;

	[Token(Token = "0x4001059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject normalTrashBg;

	[Token(Token = "0x400105A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject normalText;

	[Token(Token = "0x400105B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject deleteTrashBg;

	[Token(Token = "0x400105C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject deleteText;

	[Token(Token = "0x400105D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool aboutToDelete;

	[Token(Token = "0x400105E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private FileInfo replay;

	[Token(Token = "0x400105F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool wasHovering;

	[Token(Token = "0x4001060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string replayName;

	[Token(Token = "0x4001061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private string weapon1;

	[Token(Token = "0x4001062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string weapon2;

	[Token(Token = "0x4001063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private string date;

	[Token(Token = "0x4001064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float hoverValue;

	[Token(Token = "0x4001065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float disabledValue;

	[Token(Token = "0x4001066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float selectedValue;

	[Token(Token = "0x4001067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 transformStartPos;

	[Token(Token = "0x4001068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float transitionSpeed;

	[Token(Token = "0x4001069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool selected;

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x22BD3A4", Offset = "0x22BD3A4", VA = "0x22BD3A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x22BD3F4", Offset = "0x22BD3F4", VA = "0x22BD3F4")]
	public void ParseReplayInfo(FileInfo replayFile)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x22BD980", Offset = "0x22BD980", VA = "0x22BD980")]
	public void ReplayStart()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x22BDCA8", Offset = "0x22BDCA8", VA = "0x22BDCA8")]
	public void ReplayDelete()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x22BDD1C", Offset = "0x22BDD1C", VA = "0x22BDD1C")]
	public void SetDeleteState(bool value)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x22BDE60", Offset = "0x22BDE60", VA = "0x22BDE60")]
	public ReplayButton()
	{
	}
}
[Token(Token = "0x2000199")]
public class ReplayCam : MonoBehaviour
{
	[Token(Token = "0x2000537")]
	public enum PositionType
	{
		[Token(Token = "0x40028FB")]
		HighClose,
		[Token(Token = "0x40028FC")]
		LowClose,
		[Token(Token = "0x40028FD")]
		Stadium,
		[Token(Token = "0x40028FE")]
		Midpoint,
		[Token(Token = "0x40028FF")]
		TopDown,
		[Token(Token = "0x4002900")]
		F1View,
		[Token(Token = "0x4002901")]
		F2View
	}

	[Token(Token = "0x2000538")]
	public enum Focus
	{
		[Token(Token = "0x4002903")]
		Fighter1,
		[Token(Token = "0x4002904")]
		Fighter2,
		[Token(Token = "0x4002905")]
		Midpoint,
		[Token(Token = "0x4002906")]
		StadiumHigh,
		[Token(Token = "0x4002907")]
		F1LookPoint,
		[Token(Token = "0x4002908")]
		F2LookPoint
	}

	[Token(Token = "0x2000539")]
	public enum TransitionStyle
	{
		[Token(Token = "0x400290A")]
		Immediate,
		[Token(Token = "0x400290B")]
		Linear,
		[Token(Token = "0x400290C")]
		Smooth
	}

	[Token(Token = "0x200053A")]
	public enum Positioning
	{
		[Token(Token = "0x400290E")]
		Polar,
		[Token(Token = "0x400290F")]
		F1Attach,
		[Token(Token = "0x4002910")]
		F2Attach,
		[Token(Token = "0x4002911")]
		HandheldMode
	}

	[Token(Token = "0x200053B")]
	public class PositionData
	{
		[Token(Token = "0x4002912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float height;

		[Token(Token = "0x4002913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4002914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float degrees;

		[Token(Token = "0x4002915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Positioning positioning;

		[Token(Token = "0x4002916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 exactPosition;

		[Token(Token = "0x4002917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject dummy;

		[Token(Token = "0x60025F1")]
		[Address(RVA = "0x22C5440", Offset = "0x22C5440", VA = "0x22C5440")]
		public PositionData(float height, float distance)
		{
		}
	}

	[Token(Token = "0x200053C")]
	public class TransitionData
	{
		[Token(Token = "0x20006E5")]
		public enum Type
		{
			[Token(Token = "0x4003299")]
			Position,
			[Token(Token = "0x400329A")]
			Focus,
			[Token(Token = "0x400329B")]
			Fov
		}

		[Token(Token = "0x4002918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;

		[Token(Token = "0x4002919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float elapsed;

		[Token(Token = "0x400291A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransitionStyle style;

		[Token(Token = "0x400291B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 start;

		[Token(Token = "0x400291C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 target;

		[Token(Token = "0x400291D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Type type;

		[Token(Token = "0x400291E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x60025F2")]
		[Address(RVA = "0x22BE0A0", Offset = "0x22BE0A0", VA = "0x22BE0A0")]
		public TransitionData()
		{
		}

		[Token(Token = "0x60025F3")]
		[Address(RVA = "0x22C3C90", Offset = "0x22C3C90", VA = "0x22C3C90")]
		public TransitionData(Type type, Vector3 start, Vector3 target, TransitionStyle style, float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60025F4")]
		[Address(RVA = "0x22C3D00", Offset = "0x22C3D00", VA = "0x22C3D00")]
		public TransitionData(float start, float target, TransitionStyle style, float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x60025F5")]
		[Address(RVA = "0x22BF41C", Offset = "0x22BF41C", VA = "0x22BF41C")]
		public bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x60025F6")]
		[Address(RVA = "0x22C54DC", Offset = "0x22C54DC", VA = "0x22C54DC")]
		public Vector3 GetPositionProgress(Vector3 newTarget)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F7")]
		[Address(RVA = "0x22C14AC", Offset = "0x22C14AC", VA = "0x22C14AC")]
		public Vector3 GetPositionProgress()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F8")]
		[Address(RVA = "0x22C2454", Offset = "0x22C2454", VA = "0x22C2454")]
		public Vector3 GetFocusProgress(Vector3 newTarget)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025F9")]
		[Address(RVA = "0x22C2470", Offset = "0x22C2470", VA = "0x22C2470")]
		public Vector3 GetFocusProgress()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60025FA")]
		[Address(RVA = "0x22C260C", Offset = "0x22C260C", VA = "0x22C260C")]
		public float GetFovProgress(float newTarget)
		{
			return default(float);
		}

		[Token(Token = "0x60025FB")]
		[Address(RVA = "0x22C2614", Offset = "0x22C2614", VA = "0x22C2614")]
		public float GetFovProgress()
		{
			return default(float);
		}

		[Token(Token = "0x60025FC")]
		[Address(RVA = "0x22C14A0", Offset = "0x22C14A0", VA = "0x22C14A0")]
		public void EndTransition()
		{
		}
	}

	[Token(Token = "0x400106A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera cam;

	[Token(Token = "0x400106B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject cameraObject;

	[Token(Token = "0x400106C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve smoothCurve;

	[Token(Token = "0x400106D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5EF8", Offset = "0x5C5EF8")]
	public TextMeshPro textCurrentPosition;

	[Token(Token = "0x400106E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro textCurrentFocus;

	[Token(Token = "0x400106F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textCurrentFov;

	[Token(Token = "0x4001070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshPro textPositionTransition;

	[Token(Token = "0x4001071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textFocusTransition;

	[Token(Token = "0x4001072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro textFovTransition;

	[Token(Token = "0x4001073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F10", Offset = "0x5C5F10")]
	public TextMeshProUGUI textDistance;

	[Token(Token = "0x4001074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TextMeshProUGUI textHeight;

	[Token(Token = "0x4001075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro textOrbitData;

	[Token(Token = "0x4001076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshProUGUI textOrbitPosition;

	[Token(Token = "0x4001077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI textOrbitSpeed;

	[Token(Token = "0x4001078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F28", Offset = "0x5C5F28")]
	public SlowSlider distanceSlider;

	[Token(Token = "0x4001079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SlowSlider heightSlider;

	[Token(Token = "0x400107A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public SlowSlider orbitDegreesSlider;

	[Token(Token = "0x400107B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SlowSlider orbitSpeedSlider;

	[Token(Token = "0x400107C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float autoPositionTimer;

	[Token(Token = "0x400107D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float autoFocusTimer;

	[Token(Token = "0x400107E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float autoFovTimer;

	[Token(Token = "0x400107F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fighterDistance;

	[Token(Token = "0x4001080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float focusHeightAdjust;

	[Token(Token = "0x4001081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float stadiumFocusHeightAdjust;

	[Token(Token = "0x4001082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool camEnabled;

	[Token(Token = "0x4001083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool autoPosition;

	[Token(Token = "0x4001084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool autoFocus;

	[Token(Token = "0x4001085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool autoFov;

	[Token(Token = "0x4001086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool orbiting;

	[Token(Token = "0x4001087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool orbitTimescaleSync;

	[Token(Token = "0x4001088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float orbitSpeed;

	[Token(Token = "0x4001089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float fpvSmoothness;

	[Token(Token = "0x400108A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float handheldSmoothness;

	[Token(Token = "0x400108B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float minHandheldSmoothness;

	[Token(Token = "0x400108C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxHandheldSmoothness;

	[Token(Token = "0x400108D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float mouseSensitivity;

	[Token(Token = "0x400108E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool mouseSmoothing;

	[Token(Token = "0x400108F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float mouseSmoothingValue;

	[Token(Token = "0x4001090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float mouseTargetDistance;

	[Token(Token = "0x4001091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float mouseTargetHeight;

	[Token(Token = "0x4001092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float mouseTargetDegrees;

	[Token(Token = "0x4001093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Positioning positioning;

	[Token(Token = "0x4001094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float distance;

	[Token(Token = "0x4001095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float height;

	[Token(Token = "0x4001096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float degrees;

	[Token(Token = "0x4001097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private TransitionData posTransition;

	[Token(Token = "0x4001098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private TransitionData focusTransition;

	[Token(Token = "0x4001099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private TransitionData fovTransition;

	[Token(Token = "0x400109A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float posTransitionSetpoint;

	[Token(Token = "0x400109B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float focusTransitionSetpoint;

	[Token(Token = "0x400109C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float fovTransitionSetpoint;

	[Token(Token = "0x400109D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 focusPoint;

	[Token(Token = "0x400109E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Focus camFocus;

	[Token(Token = "0x400109F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float camFov;

	[Token(Token = "0x40010A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private GameObject dummy;

	[Token(Token = "0x40010A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Fighter f1;

	[Token(Token = "0x40010A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Fighter f2;

	[Token(Token = "0x40010A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 f1Pos;

	[Token(Token = "0x40010A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 f2Pos;

	[Token(Token = "0x40010A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool manuallySettingAngle;

	[Token(Token = "0x40010A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private List<LayerData> f1HiddenLayers;

	[Token(Token = "0x40010A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<LayerData> f2HiddenLayers;

	[Token(Token = "0x40010A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private List<LayerData> handHiddenLayers;

	[Token(Token = "0x40010A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float heightMin;

	[Token(Token = "0x40010AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float heightMax;

	[Token(Token = "0x40010AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float distanceMin;

	[Token(Token = "0x40010AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float distanceMax;

	[Token(Token = "0x40010AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public FrustumViewer frustrumViewer;

	[Token(Token = "0x40010AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public bool mouseEnabled;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float tempDistance;

	[Token(Token = "0x40010B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float tempHeight;

	[Token(Token = "0x40010B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private float tempDegrees;

	[Token(Token = "0x40010B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private float tempOrbitSpeed;

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private bool wasHandheld;

	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private Vector3 smoothF1HeadPos;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 smoothF2HeadPos;

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x22BDF24", Offset = "0x22BDF24", VA = "0x22BDF24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x22BE170", Offset = "0x22BE170", VA = "0x22BE170")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x22BE460", Offset = "0x22BE460", VA = "0x22BE460")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x22C0860", Offset = "0x22C0860", VA = "0x22C0860")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x22C1228", Offset = "0x22C1228", VA = "0x22C1228")]
	public void StartCam()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x22C1248", Offset = "0x22C1248", VA = "0x22C1248")]
	public void StopCam()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x22C1254", Offset = "0x22C1254", VA = "0x22C1254")]
	public void PauseCam(bool pause)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x22C1260", Offset = "0x22C1260", VA = "0x22C1260")]
	public void TogglePause()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x22C05D4", Offset = "0x22C05D4", VA = "0x22C05D4")]
	public void MouseControls()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x22BE660", Offset = "0x22BE660", VA = "0x22BE660")]
	public void HandheldMode()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x22BF620", Offset = "0x22BF620", VA = "0x22BF620")]
	public void TransitionPosition()
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x22BF44C", Offset = "0x22BF44C", VA = "0x22BF44C")]
	public void TransitionFocus()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x22BF96C", Offset = "0x22BF96C", VA = "0x22BF96C")]
	public void TransitionFov()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x22C1100", Offset = "0x22C1100", VA = "0x22C1100")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x22C0E84", Offset = "0x22C0E84", VA = "0x22C0E84")]
	public void UpdateFocus()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x22C1224", Offset = "0x22C1224", VA = "0x22C1224")]
	public void UpdateFov()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x22C0FAC", Offset = "0x22C0FAC", VA = "0x22C0FAC")]
	public void UpdateOrbit()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x22C0EB8", Offset = "0x22C0EB8", VA = "0x22C0EB8")]
	public void AutoPosition()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x22C0DE8", Offset = "0x22C0DE8", VA = "0x22C0DE8")]
	public void AutoFocus()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0x22C1614", Offset = "0x22C1614", VA = "0x22C1614")]
	public Focus GetAutoFocusPoint()
	{
		return default(Focus);
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0x22C116C", Offset = "0x22C116C", VA = "0x22C116C")]
	public void AutoFov()
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0x22C25A8", Offset = "0x22C25A8", VA = "0x22C25A8")]
	public float GetAutoFovValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0x22C2C80", Offset = "0x22C2C80", VA = "0x22C2C80")]
	public void SetPosition(PositionType newType, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0x22C362C", Offset = "0x22C362C", VA = "0x22C362C")]
	public void SetPosition(float newDistance, float newHeight, float newOrbit, Vector3 newFocus, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0x22C30A4", Offset = "0x22C30A4", VA = "0x22C30A4")]
	public void SetPositionF1(TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x22C3368", Offset = "0x22C3368", VA = "0x22C3368")]
	public void SetPositionF2(TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x22C2E0C", Offset = "0x22C2E0C", VA = "0x22C2E0C")]
	public void SetFocus(Focus newFocus, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x22C2F98", Offset = "0x22C2F98", VA = "0x22C2F98")]
	public void SetFov(float newFov, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x22C2714", Offset = "0x22C2714", VA = "0x22C2714")]
	public Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x22C3D50", Offset = "0x22C3D50", VA = "0x22C3D50")]
	public Vector3 GetCoordinates()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x22C3848", Offset = "0x22C3848", VA = "0x22C3848")]
	public Vector3 GetCoordinates(float pDistance, float pHeight, float pDegrees, Vector3 customFocus)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x22C18A4", Offset = "0x22C18A4", VA = "0x22C18A4")]
	public Vector3 GetFocusPoint(Focus focus)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x22B51A8", Offset = "0x22B51A8", VA = "0x22B51A8")]
	public void ResetAutoTimers()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x22BFAF8", Offset = "0x22BFAF8", VA = "0x22BFAF8")]
	public void UpdateTextBoxes()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x22BC57C", Offset = "0x22BC57C", VA = "0x22BC57C")]
	public string GetDebugValues()
	{
		return null;
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x22BF01C", Offset = "0x22BF01C", VA = "0x22BF01C")]
	public void CheckLayers()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x22C3D8C", Offset = "0x22C3D8C", VA = "0x22C3D8C")]
	public void HideF1Layers()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x22C420C", Offset = "0x22C420C", VA = "0x22C420C")]
	public void HideF2Layers()
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x22C4018", Offset = "0x22C4018", VA = "0x22C4018")]
	public void ClearF1Layers()
	{
	}

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0x22C4498", Offset = "0x22C4498", VA = "0x22C4498")]
	public void ClearF2Layers()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0x22C468C", Offset = "0x22C468C", VA = "0x22C468C")]
	public void P1View()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0x22C477C", Offset = "0x22C477C", VA = "0x22C477C")]
	public void P2View()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0x22C486C", Offset = "0x22C486C", VA = "0x22C486C")]
	public void ResetView()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x22C4B60", Offset = "0x22C4B60", VA = "0x22C4B60")]
	public void SavePosition()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0x22C4BA0", Offset = "0x22C4BA0", VA = "0x22C4BA0")]
	public void SwitchToMenuOrbit()
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0x22C4C20", Offset = "0x22C4C20", VA = "0x22C4C20")]
	public void ZoomToOrbit()
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x22C4D18", Offset = "0x22C4D18", VA = "0x22C4D18")]
	public void SwitchToHighOrbit()
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0x22C4DA0", Offset = "0x22C4DA0", VA = "0x22C4DA0")]
	public void SwitchToLowOrbit()
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0x22BCAAC", Offset = "0x22BCAAC", VA = "0x22BCAAC")]
	public void SwitchToP1Closeup()
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0x22BCC4C", Offset = "0x22BCC4C", VA = "0x22BCC4C")]
	public void SwitchToP2Closeup()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0x22BCDF8", Offset = "0x22BCDF8", VA = "0x22BCDF8")]
	public void RestorePosition()
	{
	}

	[Token(Token = "0x6000A90")]
	[Address(RVA = "0x22C4ED4", Offset = "0x22C4ED4", VA = "0x22C4ED4")]
	public void P1Focus()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0x22C4F00", Offset = "0x22C4F00", VA = "0x22C4F00")]
	public void P2Focus()
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0x22C4F2C", Offset = "0x22C4F2C", VA = "0x22C4F2C")]
	public void MidFocus()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0x22C4F40", Offset = "0x22C4F40", VA = "0x22C4F40")]
	public void ToggleOrbit()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0x22C4F50", Offset = "0x22C4F50", VA = "0x22C4F50")]
	public void ToggleTimescaleSync()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x22C4F60", Offset = "0x22C4F60", VA = "0x22C4F60")]
	public void SetDistancePercent(float percent)
	{
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x22BE3B0", Offset = "0x22BE3B0", VA = "0x22BE3B0")]
	public float GetDistanceFromPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x22C13B8", Offset = "0x22C13B8", VA = "0x22C13B8")]
	public void SetDistance(float newDistance)
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x22C4F80", Offset = "0x22C4F80", VA = "0x22C4F80")]
	public void SetHeightPercent(float percent)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x22C4A04", Offset = "0x22C4A04", VA = "0x22C4A04")]
	public float GetHeightFromPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x22C12D0", Offset = "0x22C12D0", VA = "0x22C12D0")]
	public void SetHeight(float newHeight)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x22C4FA0", Offset = "0x22C4FA0", VA = "0x22C4FA0")]
	public void SetOrbitPercent(float percent)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x22C4AB4", Offset = "0x22C4AB4", VA = "0x22C4AB4")]
	public float GetOrbitFromPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x22C1270", Offset = "0x22C1270", VA = "0x22C1270")]
	public void SetOrbitDegrees(float newDegrees)
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x22C2BD8", Offset = "0x22C2BD8", VA = "0x22C2BD8")]
	public float GetOrbitPercent(float degrees)
	{
		return default(float);
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x22C4FC0", Offset = "0x22C4FC0", VA = "0x22C4FC0")]
	public void SetSpeedPercent(float percent)
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x22C4FE0", Offset = "0x22C4FE0", VA = "0x22C4FE0")]
	public float GetSpeedFromPercent(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x22C4E2C", Offset = "0x22C4E2C", VA = "0x22C4E2C")]
	public void SetOrbitSpeed(float speed)
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x22C5088", Offset = "0x22C5088", VA = "0x22C5088")]
	public void OrbitSpeedFast()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x22C5098", Offset = "0x22C5098", VA = "0x22C5098")]
	public void OrbitSpeedSlow()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x22C50A8", Offset = "0x22C50A8", VA = "0x22C50A8")]
	public void HeightHigh()
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x22C50F0", Offset = "0x22C50F0", VA = "0x22C50F0")]
	public void HeightLow()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x22C5134", Offset = "0x22C5134", VA = "0x22C5134")]
	public void DistanceClose()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x22C517C", Offset = "0x22C517C", VA = "0x22C517C")]
	public void DistanceFar()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x22C4E9C", Offset = "0x22C4E9C", VA = "0x22C4E9C")]
	public void HandheldModeEnable()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x22C51C8", Offset = "0x22C51C8", VA = "0x22C51C8")]
	public ReplayCam()
	{
	}
}
[Token(Token = "0x200019A")]
public class ReplayCamOld : MonoBehaviour
{
	[Token(Token = "0x200053D")]
	public enum PositionType
	{
		[Token(Token = "0x4002920")]
		HighClose,
		[Token(Token = "0x4002921")]
		LowClose,
		[Token(Token = "0x4002922")]
		Stadium,
		[Token(Token = "0x4002923")]
		Midpoint,
		[Token(Token = "0x4002924")]
		TopDown,
		[Token(Token = "0x4002925")]
		P1View,
		[Token(Token = "0x4002926")]
		P2View
	}

	[Token(Token = "0x200053E")]
	public enum Focus
	{
		[Token(Token = "0x4002928")]
		Fighter1,
		[Token(Token = "0x4002929")]
		Fighter2,
		[Token(Token = "0x400292A")]
		Midpoint,
		[Token(Token = "0x400292B")]
		StadiumHigh
	}

	[Token(Token = "0x200053F")]
	public enum TransitionStyle
	{
		[Token(Token = "0x400292D")]
		Immediate,
		[Token(Token = "0x400292E")]
		Linear,
		[Token(Token = "0x400292F")]
		Smooth
	}

	[Token(Token = "0x2000540")]
	public class PositionData
	{
		[Token(Token = "0x4002930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float height;

		[Token(Token = "0x4002931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4002932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float degrees;

		[Token(Token = "0x4002933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject pivot;

		[Token(Token = "0x4002934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject dummy;

		[Token(Token = "0x60025FD")]
		[Address(RVA = "0x22C90B0", Offset = "0x22C90B0", VA = "0x22C90B0")]
		public PositionData(float height, float distance)
		{
		}

		[Token(Token = "0x60025FE")]
		[Address(RVA = "0x22C915C", Offset = "0x22C915C", VA = "0x22C915C")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x2000541")]
	public class TransitionData
	{
		[Token(Token = "0x20006E6")]
		public enum Type
		{
			[Token(Token = "0x400329D")]
			Position,
			[Token(Token = "0x400329E")]
			Focus,
			[Token(Token = "0x400329F")]
			Fov
		}

		[Token(Token = "0x4002935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float time;

		[Token(Token = "0x4002936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float elapsed;

		[Token(Token = "0x4002937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransitionStyle style;

		[Token(Token = "0x4002938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 start;

		[Token(Token = "0x4002939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 target;

		[Token(Token = "0x400293A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Type type;

		[Token(Token = "0x400293B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve curve;

		[Token(Token = "0x60025FF")]
		[Address(RVA = "0x22C96A0", Offset = "0x22C96A0", VA = "0x22C96A0")]
		public TransitionData()
		{
		}

		[Token(Token = "0x6002600")]
		[Address(RVA = "0x22C9770", Offset = "0x22C9770", VA = "0x22C9770")]
		public TransitionData(Type type, Vector3 start, Vector3 target, TransitionStyle style, float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6002601")]
		[Address(RVA = "0x22C97E0", Offset = "0x22C97E0", VA = "0x22C97E0")]
		public TransitionData(float start, float target, TransitionStyle style, float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6002602")]
		[Address(RVA = "0x22C9830", Offset = "0x22C9830", VA = "0x22C9830")]
		public bool IsTransitioning()
		{
			return default(bool);
		}

		[Token(Token = "0x6002603")]
		[Address(RVA = "0x22C9860", Offset = "0x22C9860", VA = "0x22C9860")]
		public Vector3 GetPositionProgress()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002604")]
		[Address(RVA = "0x22C99C8", Offset = "0x22C99C8", VA = "0x22C99C8")]
		public Vector3 GetFocusProgress()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002605")]
		[Address(RVA = "0x22C9B00", Offset = "0x22C9B00", VA = "0x22C9B00")]
		public float GetFovProgress()
		{
			return default(float);
		}

		[Token(Token = "0x6002606")]
		[Address(RVA = "0x22C9C00", Offset = "0x22C9C00", VA = "0x22C9C00")]
		public void EndTransition()
		{
		}
	}

	[Token(Token = "0x2000542")]
	public class ScriptStep
	{
		[Token(Token = "0x400293C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float waitTime;

		[Token(Token = "0x400293D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float posDistance;

		[Token(Token = "0x400293E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float posHeight;

		[Token(Token = "0x400293F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float posOrbit;

		[Token(Token = "0x4002940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TransitionStyle posStyle;

		[Token(Token = "0x4002941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float posTransTime;

		[Token(Token = "0x4002942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Focus focusType;

		[Token(Token = "0x4002943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TransitionStyle focusStyle;

		[Token(Token = "0x4002944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float focusTransTime;

		[Token(Token = "0x4002945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float fov;

		[Token(Token = "0x4002946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TransitionStyle fovStyle;

		[Token(Token = "0x4002947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fovTransTime;

		[Token(Token = "0x4002948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool orbiting;

		[Token(Token = "0x6002607")]
		[Address(RVA = "0x22C9680", Offset = "0x22C9680", VA = "0x22C9680")]
		public ScriptStep()
		{
		}
	}

	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Camera cam;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform originalParent;

	[Token(Token = "0x40010B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AnimationCurve smoothCurve;

	[Token(Token = "0x40010B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F40", Offset = "0x5C5F40")]
	public TextMeshPro textCurrentPosition;

	[Token(Token = "0x40010BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro textCurrentFocus;

	[Token(Token = "0x40010BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro textCurrentFov;

	[Token(Token = "0x40010BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshPro textPositionTransition;

	[Token(Token = "0x40010BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro textFocusTransition;

	[Token(Token = "0x40010BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro textFovTransition;

	[Token(Token = "0x40010BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F58", Offset = "0x5C5F58")]
	public TextMeshProUGUI textDistance;

	[Token(Token = "0x40010C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TextMeshProUGUI textHeight;

	[Token(Token = "0x40010C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro textOrbitData;

	[Token(Token = "0x40010C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TextMeshProUGUI textOrbitPosition;

	[Token(Token = "0x40010C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI textOrbitSpeed;

	[Token(Token = "0x40010C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F70", Offset = "0x5C5F70")]
	public SlowSlider distanceSlider;

	[Token(Token = "0x40010C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SlowSlider heightSlider;

	[Token(Token = "0x40010C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public SlowSlider orbitDegreesSlider;

	[Token(Token = "0x40010C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SlowSlider orbitSpeedSlider;

	[Token(Token = "0x40010C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float autoPositionTimer;

	[Token(Token = "0x40010C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float autoFocusTimer;

	[Token(Token = "0x40010CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float autoFovTimer;

	[Token(Token = "0x40010CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float fighterDistance;

	[Token(Token = "0x40010CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float focusHeightAdjust;

	[Token(Token = "0x40010CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float stadiumFocusHeightAdjust;

	[Token(Token = "0x40010CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool camEnabled;

	[Token(Token = "0x40010CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	private bool autoPosition;

	[Token(Token = "0x40010D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
	private bool autoFocus;

	[Token(Token = "0x40010D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
	private bool autoFov;

	[Token(Token = "0x40010D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool orbiting;

	[Token(Token = "0x40010D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	private bool orbitTimescaleSync;

	[Token(Token = "0x40010D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float orbitSpeed;

	[Token(Token = "0x40010D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PositionData positionData;

	[Token(Token = "0x40010D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private TransitionData posTransition;

	[Token(Token = "0x40010D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private TransitionData focusTransition;

	[Token(Token = "0x40010D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private TransitionData fovTransition;

	[Token(Token = "0x40010D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float posTransitionSetpoint;

	[Token(Token = "0x40010DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float focusTransitionSetpoint;

	[Token(Token = "0x40010DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float fovTransitionSetpoint;

	[Token(Token = "0x40010DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Focus camFocus;

	[Token(Token = "0x40010DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float camFov;

	[Token(Token = "0x40010DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Fighter f1;

	[Token(Token = "0x40010DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Fighter f2;

	[Token(Token = "0x40010E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 f1Pos;

	[Token(Token = "0x40010E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 f2Pos;

	[Token(Token = "0x40010E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool manuallySettingAngle;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x22C54F8", Offset = "0x22C54F8", VA = "0x22C54F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0x22C5614", Offset = "0x22C5614", VA = "0x22C5614")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x22C7944", Offset = "0x22C7944", VA = "0x22C7944")]
	public void StartCam()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x22C7964", Offset = "0x22C7964", VA = "0x22C7964")]
	public void StopCam()
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x22C79B0", Offset = "0x22C79B0", VA = "0x22C79B0")]
	public void PauseCam(bool pause)
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x22C79BC", Offset = "0x22C79BC", VA = "0x22C79BC")]
	public void TogglePause()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x22C68AC", Offset = "0x22C68AC", VA = "0x22C68AC")]
	public void TransitionPosition()
	{
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x22C5D20", Offset = "0x22C5D20", VA = "0x22C5D20")]
	public void TransitionFocus()
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x22C6D18", Offset = "0x22C6D18", VA = "0x22C6D18")]
	public void TransitionFov()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x22C6C5C", Offset = "0x22C6C5C", VA = "0x22C6C5C")]
	public void UpdatePosition()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x22C6020", Offset = "0x22C6020", VA = "0x22C6020")]
	public void UpdateFocus()
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x22C6E30", Offset = "0x22C6E30", VA = "0x22C6E30")]
	public void UpdateFov()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x22C66F4", Offset = "0x22C66F4", VA = "0x22C66F4")]
	public void UpdateOrbit()
	{
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x22C660C", Offset = "0x22C660C", VA = "0x22C660C")]
	public void AutoPosition()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x22C5A54", Offset = "0x22C5A54", VA = "0x22C5A54")]
	public void AutoFocus()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x22C6CC8", Offset = "0x22C6CC8", VA = "0x22C6CC8")]
	public void AutoFov()
	{
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x22C7A74", Offset = "0x22C7A74", VA = "0x22C7A74")]
	public void SetPosition(PositionType newType, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x22C7E50", Offset = "0x22C7E50", VA = "0x22C7E50")]
	public void SetPosition(float distance, float height, float orbit, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x22C7B98", Offset = "0x22C7B98", VA = "0x22C7B98")]
	public void SetFocus(Focus newFocus, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x22C7D3C", Offset = "0x22C7D3C", VA = "0x22C7D3C")]
	public void SetFov(float newFov, TransitionStyle style, float transitionTime)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x22C80F8", Offset = "0x22C80F8", VA = "0x22C80F8")]
	public Vector3 GetFocusPoint(Focus focus)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x22C82D0", Offset = "0x22C82D0", VA = "0x22C82D0")]
	public void ResetAutoTimers()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x22C6E34", Offset = "0x22C6E34", VA = "0x22C6E34")]
	public void UpdateTextBoxes()
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x22C82E4", Offset = "0x22C82E4", VA = "0x22C82E4")]
	public ScriptStep CreateStep(float waitTime)
	{
		return null;
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x22C8468", Offset = "0x22C8468", VA = "0x22C8468")]
	public void RunStep(ScriptStep step)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x22C85A8", Offset = "0x22C85A8", VA = "0x22C85A8")]
	public void PosHighOrbitButton()
	{
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x22C85E4", Offset = "0x22C85E4", VA = "0x22C85E4")]
	public void PosLowOrbitButton()
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x22C8620", Offset = "0x22C8620", VA = "0x22C8620")]
	public void PosStadiumButton()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x22C865C", Offset = "0x22C865C", VA = "0x22C865C")]
	public void PosTopDownButton()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x22C8698", Offset = "0x22C8698", VA = "0x22C8698")]
	public void PosMidpointButton()
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x22C86D4", Offset = "0x22C86D4", VA = "0x22C86D4")]
	public void PosAutoButton()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x22C86E0", Offset = "0x22C86E0", VA = "0x22C86E0")]
	public void PosDecreaseTransition()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x22C8700", Offset = "0x22C8700", VA = "0x22C8700")]
	public void PosIncreaseTransition()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x22C871C", Offset = "0x22C871C", VA = "0x22C871C")]
	public void FocusFighter1Button()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x22C8758", Offset = "0x22C8758", VA = "0x22C8758")]
	public void FocusFighter2Button()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x22C8794", Offset = "0x22C8794", VA = "0x22C8794")]
	public void FocusMidpointButton()
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x22C87D0", Offset = "0x22C87D0", VA = "0x22C87D0")]
	public void FocusAutoButton()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x22C87DC", Offset = "0x22C87DC", VA = "0x22C87DC")]
	public void FocusStadiumButton()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x22C8818", Offset = "0x22C8818", VA = "0x22C8818")]
	public void FocusDecreaseTransition()
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x22C8838", Offset = "0x22C8838", VA = "0x22C8838")]
	public void FocusIncreaseTransition()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x22C8854", Offset = "0x22C8854", VA = "0x22C8854")]
	public void FovUpButton()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x22C88BC", Offset = "0x22C88BC", VA = "0x22C88BC")]
	public void FovDownButton()
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x22C8920", Offset = "0x22C8920", VA = "0x22C8920")]
	public void FovDefaultButton()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x22C8960", Offset = "0x22C8960", VA = "0x22C8960")]
	public void FovAutoButton()
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x22C896C", Offset = "0x22C896C", VA = "0x22C896C")]
	public void FovDecreaseTransition()
	{
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x22C898C", Offset = "0x22C898C", VA = "0x22C898C")]
	public void FovIncreaseTransition()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x22C89A8", Offset = "0x22C89A8", VA = "0x22C89A8")]
	public void ToggleOrbit()
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x22C89B8", Offset = "0x22C89B8", VA = "0x22C89B8")]
	public void ToggleTimescaleSync()
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x22C89C8", Offset = "0x22C89C8", VA = "0x22C89C8")]
	public void SetDistance(float distance)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x22C8A28", Offset = "0x22C8A28", VA = "0x22C8A28")]
	public void SetDistancePercent(float percent)
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x22C8AE4", Offset = "0x22C8AE4", VA = "0x22C8AE4")]
	public void SetHeight(float height)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x22C8B44", Offset = "0x22C8B44", VA = "0x22C8B44")]
	public void SetHeightPercent(float percent)
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x22C8C00", Offset = "0x22C8C00", VA = "0x22C8C00")]
	public void SetOrbitDegrees(float degrees)
	{
	}

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x22C8C64", Offset = "0x22C8C64", VA = "0x22C8C64")]
	public void SetOrbitPercent(float percent)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x22C79CC", Offset = "0x22C79CC", VA = "0x22C79CC")]
	public float GetOrbitPercent(float degrees)
	{
		return default(float);
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x22C8D20", Offset = "0x22C8D20", VA = "0x22C8D20")]
	public void SetOrbitSpeed(float speed)
	{
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x22C8D74", Offset = "0x22C8D74", VA = "0x22C8D74")]
	public void SetSpeedPercent(float percent)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x22C8E2C", Offset = "0x22C8E2C", VA = "0x22C8E2C")]
	public void OrbitSpeedFast()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x22C8E3C", Offset = "0x22C8E3C", VA = "0x22C8E3C")]
	public void OrbitSpeedSlow()
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x22C8E4C", Offset = "0x22C8E4C", VA = "0x22C8E4C")]
	public void HeightHigh()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x22C8EA4", Offset = "0x22C8EA4", VA = "0x22C8EA4")]
	public void HeightLow()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x22C8EF8", Offset = "0x22C8EF8", VA = "0x22C8EF8")]
	public void DistanceClose()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x22C8F50", Offset = "0x22C8F50", VA = "0x22C8F50")]
	public void DistanceFar()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x22C8FA8", Offset = "0x22C8FA8", VA = "0x22C8FA8")]
	public ReplayCamOld()
	{
	}
}
[Token(Token = "0x200019B")]
public class ReplayLegacy
{
	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x22C9C0C", Offset = "0x22C9C0C", VA = "0x22C9C0C")]
	public static void ReadReplay_v0_01(BinaryReader r, Replay.LevelData level, Replay.FighterData fighter1, Replay.FighterData fighter2)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x22C9C50", Offset = "0x22C9C50", VA = "0x22C9C50")]
	private static void ReadLevelData_v0_01(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x22CA01C", Offset = "0x22CA01C", VA = "0x22CA01C")]
	private static void ReadEvents_v0_01(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x22CA698", Offset = "0x22CA698", VA = "0x22CA698")]
	private static void ReadFighterData_v0_01(BinaryReader r, Replay.FighterData fd)
	{
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x22CB538", Offset = "0x22CB538", VA = "0x22CB538")]
	public static void PlaybackPositions_v0_01(Replay.FighterData fd, float currentTime, bool sync = false)
	{
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x22CC0D4", Offset = "0x22CC0D4", VA = "0x22CC0D4")]
	public static void ReadReplay_v0_1(BinaryReader r, Replay.LevelData level, Replay.FighterData fighter1, Replay.FighterData fighter2)
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x22CC118", Offset = "0x22CC118", VA = "0x22CC118")]
	public static void ReadLevelData_v0_1(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x22CC510", Offset = "0x22CC510", VA = "0x22CC510")]
	public static void ReadEvents_v0_1(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x22CCB8C", Offset = "0x22CCB8C", VA = "0x22CCB8C")]
	public static void ReadFighterData_v0_1(BinaryReader r, Replay.FighterData fd)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x22CDA2C", Offset = "0x22CDA2C", VA = "0x22CDA2C")]
	public static void ReadReplay_v0_2(BinaryReader r, Replay.LevelData level, Replay.FighterData fighter1, Replay.FighterData fighter2)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x22CDA70", Offset = "0x22CDA70", VA = "0x22CDA70")]
	public static void ReadLevelData_v0_2(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x22CDE68", Offset = "0x22CDE68", VA = "0x22CDE68")]
	public static void ReadEvents_v0_2(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x22CE4E4", Offset = "0x22CE4E4", VA = "0x22CE4E4")]
	public static void ReadFighterData_v0_2(BinaryReader r, Replay.FighterData fd)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x22CF3DC", Offset = "0x22CF3DC", VA = "0x22CF3DC")]
	public static void ReadReplay_v1_0(BinaryReader r, Replay.LevelData level, Replay.FighterData fighter1, Replay.FighterData fighter2)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x22CF420", Offset = "0x22CF420", VA = "0x22CF420")]
	public static void ReadLevelData_v1_0(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x22CF818", Offset = "0x22CF818", VA = "0x22CF818")]
	public static void ReadEvents_v1_0(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x22CFE88", Offset = "0x22CFE88", VA = "0x22CFE88")]
	public static void ReadFighterData_v1_0(BinaryReader r, Replay.FighterData fd)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x22D0E88", Offset = "0x22D0E88", VA = "0x22D0E88")]
	public static void ReadReplay_v1_1(BinaryReader r, Replay.LevelData level, CustomMatchSettings matchSettings, Replay.FighterData fighter1, Replay.FighterData fighter2)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x22D0EC8", Offset = "0x22D0EC8", VA = "0x22D0EC8")]
	public static void ReadLevelData_v1_1(BinaryReader r, Replay.LevelData level, CustomMatchSettings matchSettings)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x22D15BC", Offset = "0x22D15BC", VA = "0x22D15BC")]
	public static void ReadEvents_v1_1(BinaryReader r, Replay.LevelData level)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x22D1CA0", Offset = "0x22D1CA0", VA = "0x22D1CA0")]
	public static void ReadFighterData_v1_1(BinaryReader r, Replay.FighterData fd)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x22D2CA0", Offset = "0x22D2CA0", VA = "0x22D2CA0")]
	public ReplayLegacy()
	{
	}
}
[Token(Token = "0x200019C")]
public class ReplayRig : MonoBehaviour
{
	[Token(Token = "0x40010E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ProgressSlider progressSlider;

	[Token(Token = "0x40010E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ReplayCam cameraRig;

	[Token(Token = "0x40010E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Replay replay;

	[Token(Token = "0x40010E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoRecorder videoRecorder;

	[Token(Token = "0x40010E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshProUGUI recLengthBox;

	[Token(Token = "0x40010E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject emailMenu;

	[Token(Token = "0x40010E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshProUGUI playerEmail;

	[Token(Token = "0x40010EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject replayControlsObj;

	[Token(Token = "0x40010EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject uploadButtonText;

	[Token(Token = "0x40010EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject recordButtonText;

	[Token(Token = "0x40010ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject uploadCancelText;

	[Token(Token = "0x40010EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject optionsButton;

	[Token(Token = "0x40010EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject optionsButtonText;

	[Token(Token = "0x40010F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject controlsButtonText;

	[Token(Token = "0x40010F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject cameraControls;

	[Token(Token = "0x40010F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject replayOptions;

	[Token(Token = "0x40010F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject hqVideoCheck;

	[Token(Token = "0x40010F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject playerIntrosCheck;

	[Token(Token = "0x40010F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject healthBarsCheck;

	[Token(Token = "0x40010F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public JumbotronBar p1CameraBars;

	[Token(Token = "0x40010F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public JumbotronBar p2CameraBars;

	[Token(Token = "0x40010F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject slowMoHitsCheck;

	[Token(Token = "0x40010F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public GameObject slowMoBlocksCheck;

	[Token(Token = "0x40010FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject fasterPlaybackCheck;

	[Token(Token = "0x40010FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject normalDeleteBg;

	[Token(Token = "0x40010FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject confirmDeleteBg;

	[Token(Token = "0x40010FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public GameObject normalDeleteText;

	[Token(Token = "0x40010FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject confirmDeleteText;

	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public TextMeshPro fullscreenText;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<GameObject> hideUIObjects;

	[Token(Token = "0x4001101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public List<MenuHandle> handles;

	[Token(Token = "0x4001102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<LayerData> originalObjLayers;

	[Token(Token = "0x4001103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private List<LayerData> handHiddenLayers;

	[Token(Token = "0x4001104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Coroutine recordingCo;

	[Token(Token = "0x4001105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private bool recordGifOnMenuClose;

	[Token(Token = "0x4001106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	private bool uiHidden;

	[Token(Token = "0x4001107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	private bool hqVideoMode;

	[Token(Token = "0x4001108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x97")]
	private bool optionsShown;

	[Token(Token = "0x4001109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool aboutToDeleteVideos;

	[Token(Token = "0x400110A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool healthBars;

	[Token(Token = "0x400110B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool fasterPlayback;

	[Token(Token = "0x400110C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public bool slowMoHits;

	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool slowMoBlocks;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Canvas watermark;

	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public GameObject HQVideoStuff;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject GifStuff;

	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject EmailButton;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject MenuScalar;

	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 playerSmallScale;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 playerBigScale;

	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector3 playerSmallPosition;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 playerBigPosition;

	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private Vector3 playerBigPositionSeated;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 menuSmallPosition;

	[Token(Token = "0x4001119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 menuBigPosition;

	[Token(Token = "0x400111A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Color normalColor;

	[Token(Token = "0x400111B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Color selectedColor;

	[Token(Token = "0x400111C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Image p1ButtonBg;

	[Token(Token = "0x400111D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Image p2ButtonBg;

	[Token(Token = "0x400111E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Image orbitButtonBg;

	[Token(Token = "0x400111F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Image handheldButtonBg;

	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float autoIntroTimer;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public int autoIntroStep;

	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool includePlayerIntros;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private float autoIntroStartAdjust;

	[Token(Token = "0x4001124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float recordingFadeOutTime;

	[Token(Token = "0x4001125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool gifFadingOut;

	[Token(Token = "0x4001126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private MusicTrack currentTrack;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x22D2CA8", Offset = "0x22D2CA8", VA = "0x22D2CA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x22D2F0C", Offset = "0x22D2F0C", VA = "0x22D2F0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x22D2F54", Offset = "0x22D2F54", VA = "0x22D2F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x22D3AD0", Offset = "0x22D3AD0", VA = "0x22D3AD0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x22D4124", Offset = "0x22D4124", VA = "0x22D4124")]
	public void StartReplay(string replayName)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x22D4CE0", Offset = "0x22D4CE0", VA = "0x22D4CE0")]
	public void EnableOptions()
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x22D568C", Offset = "0x22D568C", VA = "0x22D568C")]
	public void DisableOptions()
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x22D582C", Offset = "0x22D582C", VA = "0x22D582C")]
	public void ResetControls()
	{
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x22D5988", Offset = "0x22D5988", VA = "0x22D5988")]
	public void FadeToExitReplay()
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x22D5A48", Offset = "0x22D5A48", VA = "0x22D5A48")]
	public void ExitReplay2()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x22D5AFC", Offset = "0x22D5AFC", VA = "0x22D5AFC")]
	public void ExitReplay()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x22D6B08", Offset = "0x22D6B08", VA = "0x22D6B08")]
	public void TogglePause()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x22D6B84", Offset = "0x22D6B84", VA = "0x22D6B84")]
	public void SeekPreviousMarker()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x22D6BB0", Offset = "0x22D6BB0", VA = "0x22D6BB0")]
	public void SeekNextMarker()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x22D6BDC", Offset = "0x22D6BDC", VA = "0x22D6BDC")]
	public void SeekFromProgressBar(float progress)
	{
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x22D6C10", Offset = "0x22D6C10", VA = "0x22D6C10")]
	public void SeekToP1Closeup()
	{
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x22D6D24", Offset = "0x22D6D24", VA = "0x22D6D24")]
	public void SeekToP2Closeup()
	{
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x22D6DDC", Offset = "0x22D6DDC", VA = "0x22D6DDC")]
	public void SeekToGifStart()
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x22D6F70", Offset = "0x22D6F70", VA = "0x22D6F70")]
	public void FadeInAndResume()
	{
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x22D700C", Offset = "0x22D700C", VA = "0x22D700C")]
	public void StartAutoIntro()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x22D3B90", Offset = "0x22D3B90", VA = "0x22D3B90")]
	public void DoAutoIntroStep()
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x22D7018", Offset = "0x22D7018", VA = "0x22D7018")]
	public void ExportGifButton()
	{
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x22D7714", Offset = "0x22D7714", VA = "0x22D7714")]
	public void RecordVideoButton()
	{
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x22D7B88", Offset = "0x22D7B88", VA = "0x22D7B88")]
	public void IncreaseRecordingLength()
	{
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x22D7D6C", Offset = "0x22D7D6C", VA = "0x22D7D6C")]
	public void DecreaseRecordingLength()
	{
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x22D4BD8", Offset = "0x22D4BD8", VA = "0x22D4BD8")]
	public void ToggleRecordingUISettings(bool value)
	{
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x22D37A4", Offset = "0x22D37A4", VA = "0x22D37A4")]
	public void FadeOutRecording()
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x22D3928", Offset = "0x22D3928", VA = "0x22D3928")]
	public void EndRecording()
	{
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x22D7698", Offset = "0x22D7698", VA = "0x22D7698")]
	public void OpenEmailMenu()
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x22D7F94", Offset = "0x22D7F94", VA = "0x22D7F94")]
	public void ResetUploadButton()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x22D804C", Offset = "0x22D804C", VA = "0x22D804C")]
	public void EmailMenuBack()
	{
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x22D7424", Offset = "0x22D7424", VA = "0x22D7424")]
	public void EmailMenuDone()
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x22D8184", Offset = "0x22D8184", VA = "0x22D8184")]
	public void HideUI()
	{
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x22D3590", Offset = "0x22D3590", VA = "0x22D3590")]
	public void ShowUI()
	{
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x22D8318", Offset = "0x22D8318", VA = "0x22D8318")]
	public void Setup2dMode(Replay2dController controller2d)
	{
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x22D5734", Offset = "0x22D5734", VA = "0x22D5734")]
	public void ToggleOptions()
	{
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x22D4ECC", Offset = "0x22D4ECC", VA = "0x22D4ECC")]
	public void ToggleHQVideo()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x22D5274", Offset = "0x22D5274", VA = "0x22D5274")]
	public void TogglePlayerIntros()
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x22D8420", Offset = "0x22D8420", VA = "0x22D8420")]
	public void DeleteCachedVideos()
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x22D36F8", Offset = "0x22D36F8", VA = "0x22D36F8")]
	public void SetDeleteConfirmState(bool val)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x22D531C", Offset = "0x22D531C", VA = "0x22D531C")]
	public void ToggleHealthBars()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x22D5464", Offset = "0x22D5464", VA = "0x22D5464")]
	public void ToggleSlowMoHits()
	{
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x22D550C", Offset = "0x22D550C", VA = "0x22D550C")]
	public void ToggleSlowMoBlocks()
	{
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x22D55B4", Offset = "0x22D55B4", VA = "0x22D55B4")]
	public void ToggleFasterPlayback()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x22D8808", Offset = "0x22D8808", VA = "0x22D8808")]
	public void ScalePlayerUp()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x22D8C2C", Offset = "0x22D8C2C", VA = "0x22D8C2C")]
	public void ScalePlayerDown()
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x22D3950", Offset = "0x22D3950", VA = "0x22D3950")]
	public void ScaleUpFade()
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x22D3A10", Offset = "0x22D3A10", VA = "0x22D3A10")]
	public void ScaleDownFade()
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x22D9050", Offset = "0x22D9050", VA = "0x22D9050")]
	public void P1View()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x22D9210", Offset = "0x22D9210", VA = "0x22D9210")]
	public void P2View()
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x22D9294", Offset = "0x22D9294", VA = "0x22D9294")]
	public void OrbitView()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x22D9318", Offset = "0x22D9318", VA = "0x22D9318")]
	public void HandheldMode()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x22D90D4", Offset = "0x22D90D4", VA = "0x22D90D4")]
	public void ResetButtonColors()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x22D939C", Offset = "0x22D939C", VA = "0x22D939C")]
	public ReplayRig()
	{
	}
}
[Token(Token = "0x200019D")]
public class ReplaySelectScreen : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000543")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2C9C", Offset = "0x5C2C9C")]
	private sealed class <>c
	{
		[Token(Token = "0x4002949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400294A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Func<FileInfo, DateTime> <>9__11_0;

		[Token(Token = "0x6002609")]
		[Address(RVA = "0x22DAA80", Offset = "0x22DAA80", VA = "0x22DAA80")]
		public <>c()
		{
		}

		[Token(Token = "0x600260A")]
		[Address(RVA = "0x22DAA88", Offset = "0x22DAA88", VA = "0x22DAA88")]
		internal DateTime <Populate>b__11_0(FileInfo f)
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x4001127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject replayButtonPrefab;

	[Token(Token = "0x4001128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4001129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<ReplayButton> replayButtons;

	[Token(Token = "0x400112A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int page;

	[Token(Token = "0x400112B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int lastPage;

	[Token(Token = "0x400112C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button pageFwdButton;

	[Token(Token = "0x400112D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Button pageBackButton;

	[Token(Token = "0x400112E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button lastPageButton;

	[Token(Token = "0x400112F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Button firstPageButton;

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x22D9670", Offset = "0x22D9670", VA = "0x22D9670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x22D9F78", Offset = "0x22D9F78", VA = "0x22D9F78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x22D97AC", Offset = "0x22D97AC", VA = "0x22D97AC")]
	public void Populate()
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x22DA1C4", Offset = "0x22DA1C4", VA = "0x22DA1C4")]
	private FileInfo[] GetAllReplays()
	{
		return null;
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x22DA0BC", Offset = "0x22DA0BC", VA = "0x22DA0BC")]
	public void Back()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x22DA2C8", Offset = "0x22DA2C8", VA = "0x22DA2C8")]
	public void PageBack()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x22DA418", Offset = "0x22DA418", VA = "0x22DA418")]
	public void PageForward()
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x22DA56C", Offset = "0x22DA56C", VA = "0x22DA56C")]
	public void LastPage()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x22DA6B0", Offset = "0x22DA6B0", VA = "0x22DA6B0")]
	public void FirstPage()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x22DA7F4", Offset = "0x22DA7F4", VA = "0x22DA7F4")]
	public bool ClearDeleteStates()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x22DA974", Offset = "0x22DA974", VA = "0x22DA974")]
	public ReplaySelectScreen()
	{
	}
}
[Token(Token = "0x200019E")]
public class ResourceBar : MonoBehaviour
{
	[Token(Token = "0x4001130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter fighter;

	[Token(Token = "0x4001131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ResourceType Type;

	[Token(Token = "0x4001132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Color color;

	[Token(Token = "0x4001133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color color2;

	[Token(Token = "0x4001134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject Handle;

	[Token(Token = "0x4001135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Fill;

	[Token(Token = "0x4001136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject Fill2;

	[Token(Token = "0x4001137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SecondHandle;

	[Token(Token = "0x4001138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject EndPoint;

	[Token(Token = "0x4001139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject LineTip;

	[Token(Token = "0x400113A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Material m;

	[Token(Token = "0x400113B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material m2;

	[Token(Token = "0x400113C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool autoConnect;

	[Token(Token = "0x400113D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool autoConnect2;

	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float lineTipScalar;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float flashTimer;

	[Token(Token = "0x4001140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float flashTimer2;

	[Token(Token = "0x4001141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float flashSpeed;

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x22DAABC", Offset = "0x22DAABC", VA = "0x22DAABC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x22DAC78", Offset = "0x22DAC78", VA = "0x22DAC78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x22DBDC4", Offset = "0x22DBDC4", VA = "0x22DBDC4")]
	public ResourceBar()
	{
	}
}
[Token(Token = "0x200019F")]
public enum ResourceType
{
	[Token(Token = "0x4001143")]
	Health,
	[Token(Token = "0x4001144")]
	Energy,
	[Token(Token = "0x4001145")]
	Shield
}
[Token(Token = "0x20001A0")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4001146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 rotationSpeed;

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x22DE780", Offset = "0x22DE780", VA = "0x22DE780")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x22DE784", Offset = "0x22DE784", VA = "0x22DE784")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x22DE8C8", Offset = "0x22DE8C8", VA = "0x22DE8C8")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20001A1")]
public class SaveData : MonoBehaviour
{
	[Token(Token = "0x4001147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, int> data;

	[Token(Token = "0x4001148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static Dictionary<string, string> data2;

	[Token(Token = "0x4001149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string saveLoc;

	[Token(Token = "0x400114A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static bool loaded;

	[Token(Token = "0x400114B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public static bool needToSave;

	[Token(Token = "0x400114C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int playerCoins;

	[Token(Token = "0x400114D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int knightSkill;

	[Token(Token = "0x400114E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static int duelistSkill;

	[Token(Token = "0x400114F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int monkSkill;

	[Token(Token = "0x4001150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int ninjaSkill;

	[Token(Token = "0x4001151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static int crusaderSkill;

	[Token(Token = "0x4001152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int reaperSkill;

	[Token(Token = "0x4001153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static int samuraiSkill;

	[Token(Token = "0x4001154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static int multiplayerSkill;

	[Token(Token = "0x4001155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private static int classSkill8;

	[Token(Token = "0x4001156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static int classSkill9;

	[Token(Token = "0x4001157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static int classSkill10;

	[Token(Token = "0x4001158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static int classSkill11;

	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private static int classSkill12;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static int classSkill13;

	[Token(Token = "0x400115B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private static int classSkill14;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x22DF88C", Offset = "0x22DF88C", VA = "0x22DF88C")]
	public static void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x22DFAC0", Offset = "0x22DFAC0", VA = "0x22DFAC0")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x22DFD94", Offset = "0x22DFD94", VA = "0x22DFD94")]
	public static bool SetInt(string key, int value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x22DEFD4", Offset = "0x22DEFD4", VA = "0x22DEFD4")]
	public static bool ValidKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x22E01BC", Offset = "0x22E01BC", VA = "0x22E01BC")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x22E071C", Offset = "0x22E071C", VA = "0x22E071C")]
	public static void HardSave()
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x22DF6E0", Offset = "0x22DF6E0", VA = "0x22DF6E0")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x22E0F84", Offset = "0x22E0F84", VA = "0x22E0F84")]
	public static void LoadAll()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x22E169C", Offset = "0x22E169C", VA = "0x22E169C")]
	public SaveData()
	{
	}
}
[Token(Token = "0x20001A2")]
public class ScytheRanged : RangedAttack
{
	[Token(Token = "0x400115C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject previewObj;

	[Token(Token = "0x400115D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ParticleSystem previewParticles;

	[Token(Token = "0x400115E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggerWasHeld;

	[Token(Token = "0x400115F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform previewTip;

	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject previewPointer1;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject previewPointer2;

	[Token(Token = "0x4001162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool targeting;

	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxExtensionDist;

	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minimumStartAngle;

	[Token(Token = "0x4001165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maximumStartAngle;

	[Token(Token = "0x4001166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float maximumFireAngle;

	[Token(Token = "0x4001167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int numShots;

	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int shotFrameInterval;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float extensionSpeed;

	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startPos;

	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float targetingTime;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool forceEnd;

	[Token(Token = "0x400116D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float damageMod;

	[Token(Token = "0x400116E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float startingAngle;

	[Token(Token = "0x400116F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public AnimationCurve flareCurve;

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x22E1894", Offset = "0x22E1894", VA = "0x22E1894")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x22E1950", Offset = "0x22E1950", VA = "0x22E1950", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x22E1954", Offset = "0x22E1954", VA = "0x22E1954", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x22E2B10", Offset = "0x22E2B10", VA = "0x22E2B10", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x22E4188", Offset = "0x22E4188", VA = "0x22E4188")]
	public ScytheRanged()
	{
	}
}
[Token(Token = "0x20001A3")]
public class SeekingProjectile : Projectile
{
	[Token(Token = "0x4001170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float speed;

	[Token(Token = "0x4001171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float accelerationMod;

	[Token(Token = "0x4001172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float accelerationBrake;

	[Token(Token = "0x4001173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float seekPower;

	[Token(Token = "0x4001174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float seekExponent;

	[Token(Token = "0x4001175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float seekDist;

	[Token(Token = "0x4001176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float distExponent;

	[Token(Token = "0x4001177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TrailRenderer trail;

	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x22E4268", Offset = "0x22E4268", VA = "0x22E4268", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x22E42D8", Offset = "0x22E42D8", VA = "0x22E42D8", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x22E42E8", Offset = "0x22E42E8", VA = "0x22E42E8", Slot = "6")]
	public override void PhysicsStep()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x22E4BE0", Offset = "0x22E4BE0", VA = "0x22E4BE0")]
	public SeekingProjectile()
	{
	}
}
[Token(Token = "0x20001A4")]
public class SettingsMenu : MonoBehaviour
{
	[Token(Token = "0x4001178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int aa;

	[Token(Token = "0x4001179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int ffr;

	[Token(Token = "0x400117A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int renderScale;

	[Token(Token = "0x400117B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ping;

	[Token(Token = "0x400117C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TextMeshPro PingLabel;

	[Token(Token = "0x400117D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro RSLabel;

	[Token(Token = "0x400117E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TextMeshPro AALabel;

	[Token(Token = "0x400117F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro FFRLabel;

	[Token(Token = "0x4001180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro SlomoLabel;

	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int slomo;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public AnimationCurve Curve20;

	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve Curve25;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AnimationCurve Curve30;

	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve Curve35;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public AnimationCurve Curve50;

	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve Curve75;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AnimationCurve Curve100;

	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro GhostHealthAccLabel;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TextMeshPro GhostHealthFlatLabel;

	[Token(Token = "0x400118B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextMeshPro EnergyAccLabel;

	[Token(Token = "0x400118C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TextMeshPro EnergyFlatLabel;

	[Token(Token = "0x400118D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TextMeshPro ExchangeRateLabel;

	[Token(Token = "0x400118E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TextMeshPro ChargeupSpeedLabel;

	[Token(Token = "0x400118F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshPro GhostHealthVulnerabilityLabel;

	[Token(Token = "0x4001190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public TextMeshPro BlitzDrainSpeedLabel;

	[Token(Token = "0x4001191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TextMeshPro FighterDistanceLabel;

	[Token(Token = "0x4001192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public TextMeshPro RangedCostLabel;

	[Token(Token = "0x4001193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMeshPro RangedDmgLabel;

	[Token(Token = "0x4001194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public TextMeshPro StartHealthLabel;

	[Token(Token = "0x4001195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshPro GhostLeechLabel;

	[Token(Token = "0x4001196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public TextMeshPro StartBlitzLabel;

	[Token(Token = "0x4001197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro HeadDamageLabel;

	[Token(Token = "0x4001198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public TextMeshPro MaxRegenLabel;

	[Token(Token = "0x4001199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro SpeedSensitivityLabel;

	[Token(Token = "0x400119A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public TextMeshPro DotResummonLabel;

	[Token(Token = "0x400119B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro DefenderSpeedBoostLabel;

	[Token(Token = "0x400119C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public TextMeshPro ZSensitivityLabel;

	[Token(Token = "0x400119D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro ShowDamageLabel;

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x22E4C20", Offset = "0x22E4C20", VA = "0x22E4C20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x22E60C4", Offset = "0x22E60C4", VA = "0x22E60C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD8D8", Offset = "0x5CD8D8")]
	public void SetSlomo50()
	{
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x22E616C", Offset = "0x22E616C", VA = "0x22E616C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD910", Offset = "0x5CD910")]
	public void SetSlomo75()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x22E6214", Offset = "0x22E6214", VA = "0x22E6214")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD948", Offset = "0x5CD948")]
	public void SetSlomo100()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x22E62BC", Offset = "0x22E62BC", VA = "0x22E62BC")]
	public void CheatCampaign()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x22E6378", Offset = "0x22E6378", VA = "0x22E6378")]
	public void ClearSavedData()
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x22E6600", Offset = "0x22E6600", VA = "0x22E6600")]
	public void ToggleDebugText()
	{
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x22E6690", Offset = "0x22E6690", VA = "0x22E6690")]
	public void PlusGhostAcc()
	{
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x22E6738", Offset = "0x22E6738", VA = "0x22E6738")]
	public void PlusGhostFlat()
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x22E67E0", Offset = "0x22E67E0", VA = "0x22E67E0")]
	public void PlusEnergyAcc()
	{
	}

	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x22E6888", Offset = "0x22E6888", VA = "0x22E6888")]
	public void PlusEnergyFlat()
	{
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x22E6930", Offset = "0x22E6930", VA = "0x22E6930")]
	public void PlusExchangeRate()
	{
	}

	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x22E69D8", Offset = "0x22E69D8", VA = "0x22E69D8")]
	public void PlusChargeupSpeed()
	{
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x22E6A7C", Offset = "0x22E6A7C", VA = "0x22E6A7C")]
	public void PlusVulnerability()
	{
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x22E6B24", Offset = "0x22E6B24", VA = "0x22E6B24")]
	public void PlusBlitzDrain()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x22E6BCC", Offset = "0x22E6BCC", VA = "0x22E6BCC")]
	public void PlusFighterDistance()
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x22E6C74", Offset = "0x22E6C74", VA = "0x22E6C74")]
	public void PlusGhostLeech()
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x22E6D1C", Offset = "0x22E6D1C", VA = "0x22E6D1C")]
	public void PlusStartHealth()
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x22E6DC4", Offset = "0x22E6DC4", VA = "0x22E6DC4")]
	public void PlusRangedDamage()
	{
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x22E6E6C", Offset = "0x22E6E6C", VA = "0x22E6E6C")]
	public void PlusRangedCost()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x22E6F14", Offset = "0x22E6F14", VA = "0x22E6F14")]
	public void PlusHeadDamage()
	{
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x22E6FBC", Offset = "0x22E6FBC", VA = "0x22E6FBC")]
	public void PlusMaxRegen()
	{
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x22E7118", Offset = "0x22E7118", VA = "0x22E7118")]
	public void PlusStartBlitzCost()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x22E71BC", Offset = "0x22E71BC", VA = "0x22E71BC")]
	public void PlusSpeedDamageSensitivity()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x22E7258", Offset = "0x22E7258", VA = "0x22E7258")]
	public void PlusDotResummon()
	{
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x22E72F4", Offset = "0x22E72F4", VA = "0x22E72F4")]
	public void PlusDefSpeedBoost()
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x22E739C", Offset = "0x22E739C", VA = "0x22E739C")]
	public void PlusZSensitivity()
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x22E7444", Offset = "0x22E7444", VA = "0x22E7444")]
	public void PlusDamageNumbers()
	{
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x22E74E0", Offset = "0x22E74E0", VA = "0x22E74E0")]
	public void MinusGhostAcc()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x22E7588", Offset = "0x22E7588", VA = "0x22E7588")]
	public void MinusGhostFlat()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x22E7630", Offset = "0x22E7630", VA = "0x22E7630")]
	public void MinusEnergyAcc()
	{
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x22E76D8", Offset = "0x22E76D8", VA = "0x22E76D8")]
	public void MinusEnergyFlat()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x22E7780", Offset = "0x22E7780", VA = "0x22E7780")]
	public void MinusExchangeRate()
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x22E7828", Offset = "0x22E7828", VA = "0x22E7828")]
	public void MinusChargeupSpeed()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x22E78CC", Offset = "0x22E78CC", VA = "0x22E78CC")]
	public void MinusVulnerability()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x22E7974", Offset = "0x22E7974", VA = "0x22E7974")]
	public void MinusBlitzDrain()
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x22E7A1C", Offset = "0x22E7A1C", VA = "0x22E7A1C")]
	public void MinusFighterDistance()
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x22E7AC4", Offset = "0x22E7AC4", VA = "0x22E7AC4")]
	public void MinusGhostLeech()
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x22E7B6C", Offset = "0x22E7B6C", VA = "0x22E7B6C")]
	public void MinusStartHealth()
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x22E7C14", Offset = "0x22E7C14", VA = "0x22E7C14")]
	public void MinusRangedDamage()
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x22E7CBC", Offset = "0x22E7CBC", VA = "0x22E7CBC")]
	public void MinusRangedCost()
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x22E7D64", Offset = "0x22E7D64", VA = "0x22E7D64")]
	public void MinusHeadDamage()
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x22E7E0C", Offset = "0x22E7E0C", VA = "0x22E7E0C")]
	public void MinusMaxRegen()
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x22E7EB4", Offset = "0x22E7EB4", VA = "0x22E7EB4")]
	public void MinusStartBlitzCost()
	{
	}

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x22E7F58", Offset = "0x22E7F58", VA = "0x22E7F58")]
	public void MinusSpeedDamageSensitivity()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x22E7FF4", Offset = "0x22E7FF4", VA = "0x22E7FF4")]
	public void MinusDotResummon()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x22E8090", Offset = "0x22E8090", VA = "0x22E8090")]
	public void MinusDefSpeedBoost()
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x22E8138", Offset = "0x22E8138", VA = "0x22E8138")]
	public void MinusZSensitivity()
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x22E81E0", Offset = "0x22E81E0", VA = "0x22E81E0")]
	public void MinusDamageNumbers()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x22E827C", Offset = "0x22E827C", VA = "0x22E827C")]
	public void BackToMain()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x22E8388", Offset = "0x22E8388", VA = "0x22E8388")]
	public void IncreasePing()
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x22E84A4", Offset = "0x22E84A4", VA = "0x22E84A4")]
	public void DecreasePing()
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x22E85C0", Offset = "0x22E85C0", VA = "0x22E85C0")]
	public void IncreaseRenderScale()
	{
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x22E86C8", Offset = "0x22E86C8", VA = "0x22E86C8")]
	public void DecreaseRenderScale()
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x22E87D0", Offset = "0x22E87D0", VA = "0x22E87D0")]
	public void IncreaseFFR()
	{
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x22E88DC", Offset = "0x22E88DC", VA = "0x22E88DC")]
	public void DecreaseFFR()
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x22E89E8", Offset = "0x22E89E8", VA = "0x22E89E8")]
	public void IncreaseAA()
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x22E8AE4", Offset = "0x22E8AE4", VA = "0x22E8AE4")]
	public void DecreaseAA()
	{
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x22E8BE0", Offset = "0x22E8BE0", VA = "0x22E8BE0")]
	public void IncreaseSlomo()
	{
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x22E8E50", Offset = "0x22E8E50", VA = "0x22E8E50")]
	public void DecreaseSlomo()
	{
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x22E90BC", Offset = "0x22E90BC", VA = "0x22E90BC")]
	public void RestartMatch()
	{
	}

	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x22E90F8", Offset = "0x22E90F8", VA = "0x22E90F8")]
	public void Enemy1Health()
	{
	}

	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x22E4D78", Offset = "0x22E4D78", VA = "0x22E4D78")]
	public void RecalcText()
	{
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x22E92B4", Offset = "0x22E92B4", VA = "0x22E92B4")]
	public SettingsMenu()
	{
	}
}
[Token(Token = "0x20001A5")]
public class ShaderTestMenu : MonoBehaviour
{
	[Token(Token = "0x400119E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool sceneMode;

	[Token(Token = "0x400119F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer inverseSphere;

	[Token(Token = "0x40011A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Material tileMat;

	[Token(Token = "0x40011A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material floorMat;

	[Token(Token = "0x40011A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture tileTri4x;

	[Token(Token = "0x40011A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture tileTri0x;

	[Token(Token = "0x40011A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture tileBi0x;

	[Token(Token = "0x40011A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture tileTri4xSmall;

	[Token(Token = "0x40011A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Texture tileTri0xSmall;

	[Token(Token = "0x40011A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture tileMaskTri4x;

	[Token(Token = "0x40011A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Texture tileMaskTri0x;

	[Token(Token = "0x40011A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture floorTri4x;

	[Token(Token = "0x40011AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Texture floorTri0x;

	[Token(Token = "0x40011AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture floorBi0x;

	[Token(Token = "0x40011AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Texture floorTri4xSmall;

	[Token(Token = "0x40011AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture floorTri0xSmall;

	[Token(Token = "0x40011AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Material testMat1;

	[Token(Token = "0x40011AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material testMat2;

	[Token(Token = "0x40011B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Material testMat3;

	[Token(Token = "0x40011B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material testMat4;

	[Token(Token = "0x40011B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Material testMat5;

	[Token(Token = "0x40011B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material testMat6;

	[Token(Token = "0x40011B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Material testMat7;

	[Token(Token = "0x40011B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material testMat8;

	[Token(Token = "0x40011B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Material armorMat;

	[Token(Token = "0x40011B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material helmMat;

	[Token(Token = "0x40011B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Texture2D regularMasks;

	[Token(Token = "0x40011B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Texture2D broadGMasks;

	[Token(Token = "0x40011BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Texture2D regularNM;

	[Token(Token = "0x40011BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Texture2D lightBlurNM;

	[Token(Token = "0x40011BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Texture2D medBlurNM;

	[Token(Token = "0x40011BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Texture2D trilinearNM;

	[Token(Token = "0x40011BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Texture2D triAnisoNM;

	[Token(Token = "0x40011BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Texture2D triAnisoBlurNM;

	[Token(Token = "0x40011C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Texture2D hiresTrilinearAnisoNM;

	[Token(Token = "0x40011C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Texture2D regularMasks_helm;

	[Token(Token = "0x40011C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Texture2D broadGMasks_helm;

	[Token(Token = "0x40011C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Texture2D regularNM_helm;

	[Token(Token = "0x40011C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Texture2D lightBlurNM_helm;

	[Token(Token = "0x40011C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Texture2D medBlurNM_helm;

	[Token(Token = "0x40011C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Texture2D trilinearNM_helm;

	[Token(Token = "0x40011C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Texture2D triAnisoNM_helm;

	[Token(Token = "0x40011C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public Texture2D triAnisoBlurNM_helm;

	[Token(Token = "0x40011C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D hiresTrilinearAnisoNM_helm;

	[Token(Token = "0x40011CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float smoothness;

	[Token(Token = "0x40011CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro tsmoothness;

	[Token(Token = "0x40011CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float GSAA;

	[Token(Token = "0x40011CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float GSAA_exponent;

	[Token(Token = "0x40011CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public TextMeshPro tGSAA;

	[Token(Token = "0x40011CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro tGSAA_exponent;

	[Token(Token = "0x40011D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float Toksvig;

	[Token(Token = "0x40011D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float ToksvigSmoothness;

	[Token(Token = "0x40011D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public TextMeshPro tToksvig;

	[Token(Token = "0x40011D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro tToksvigSmoothness;

	[Token(Token = "0x40011D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool viewTextureSmoothness;

	[Token(Token = "0x40011D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float mipBias;

	[Token(Token = "0x40011D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public TextMeshPro tmipBias;

	[Token(Token = "0x40011D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float reflectionStrength;

	[Token(Token = "0x40011D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public TextMeshPro treflectionStrength;

	[Token(Token = "0x40011D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float dynamicLighting;

	[Token(Token = "0x40011DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public TextMeshPro tdynamicLighting;

	[Token(Token = "0x40011DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float textureSmoothing;

	[Token(Token = "0x40011DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public TextMeshPro ttextureSmoothing;

	[Token(Token = "0x40011DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float fresnelAttenuation;

	[Token(Token = "0x40011DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public TextMeshPro tfresnelAttenuation;

	[Token(Token = "0x40011DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float fresnelExponent;

	[Token(Token = "0x40011E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public TextMeshPro tfresnelExponent;

	[Token(Token = "0x40011E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool dynamicFresnelAttenuation;

	[Token(Token = "0x40011E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public TextMeshPro tdynamicFresnelAttenuation;

	[Token(Token = "0x40011E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool reflectionFresnelAttenuation;

	[Token(Token = "0x40011E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public TextMeshPro treflectionFresnelAttenuation;

	[Token(Token = "0x40011E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float smoothnessDynamicAttenuation;

	[Token(Token = "0x40011E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public TextMeshPro tsmoothnessDynamicAttenuation;

	[Token(Token = "0x40011E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float smoothnessReflectionAttenuation;

	[Token(Token = "0x40011E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public TextMeshPro tsmoothnessReflectionAttenuation;

	[Token(Token = "0x40011E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float addingCurvature;

	[Token(Token = "0x40011EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public TextMeshPro taddingCurvature;

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x22E92D4", Offset = "0x22E92D4", VA = "0x22E92D4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x22E9B54", Offset = "0x22E9B54", VA = "0x22E9B54")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x22E9CD4", Offset = "0x22E9CD4", VA = "0x22E9CD4")]
	public void UpSmoothness()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x22E9E08", Offset = "0x22E9E08", VA = "0x22E9E08")]
	public void DownSmoothness()
	{
	}

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x22E9F18", Offset = "0x22E9F18", VA = "0x22E9F18")]
	public void NormalMasks()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x22E9FD4", Offset = "0x22E9FD4", VA = "0x22E9FD4")]
	public void BroadGMasks()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x22EA090", Offset = "0x22EA090", VA = "0x22EA090")]
	public void NormalTextures()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x22EA14C", Offset = "0x22EA14C", VA = "0x22EA14C")]
	public void LightBlurTextures()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x22EA208", Offset = "0x22EA208", VA = "0x22EA208")]
	public void MedBlurTextures()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x22EA2C4", Offset = "0x22EA2C4", VA = "0x22EA2C4")]
	public void TrilinearTextures()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x22EA380", Offset = "0x22EA380", VA = "0x22EA380")]
	public void TriAnisoTextures()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x22EA43C", Offset = "0x22EA43C", VA = "0x22EA43C")]
	public void TriAnisoBlurTextures()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x22EA4F8", Offset = "0x22EA4F8", VA = "0x22EA4F8")]
	public void HiresTextures()
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x22EA5B4", Offset = "0x22EA5B4", VA = "0x22EA5B4")]
	public void ToggleViewTextureSmoothness()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x22E9DE4", Offset = "0x22E9DE4", VA = "0x22E9DE4")]
	public void UpdateMats()
	{
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x22EA5E8", Offset = "0x22EA5E8", VA = "0x22EA5E8")]
	public void UpdateMaterial(Material m)
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x22EAAC8", Offset = "0x22EAAC8", VA = "0x22EAAC8")]
	public void UpGSAA()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x22EABD8", Offset = "0x22EABD8", VA = "0x22EABD8")]
	public void DownGSAA()
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x22EACE8", Offset = "0x22EACE8", VA = "0x22EACE8")]
	public void UpGSAA_exponent()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x22EADF8", Offset = "0x22EADF8", VA = "0x22EADF8")]
	public void DownGSAA_exponent()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x22EAF08", Offset = "0x22EAF08", VA = "0x22EAF08")]
	public void UpToksvig()
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x22EB018", Offset = "0x22EB018", VA = "0x22EB018")]
	public void DownToksvig()
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x22EB128", Offset = "0x22EB128", VA = "0x22EB128")]
	public void UpToksvigSmoothness()
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x22EB238", Offset = "0x22EB238", VA = "0x22EB238")]
	public void DownToksvigSmoothness()
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x22EB348", Offset = "0x22EB348", VA = "0x22EB348")]
	public void UpTextureSmoothing()
	{
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x22EB458", Offset = "0x22EB458", VA = "0x22EB458")]
	public void DownTextureSmoothing()
	{
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x22EB568", Offset = "0x22EB568", VA = "0x22EB568")]
	public void UpMipBias()
	{
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x22EB678", Offset = "0x22EB678", VA = "0x22EB678")]
	public void DownMipBias()
	{
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x22EB788", Offset = "0x22EB788", VA = "0x22EB788")]
	public void UpReflectionStrength()
	{
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x22EB894", Offset = "0x22EB894", VA = "0x22EB894")]
	public void DownReflectionStrength()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x22EB9A0", Offset = "0x22EB9A0", VA = "0x22EB9A0")]
	public void UpDynamicLighting()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x22EBAB0", Offset = "0x22EBAB0", VA = "0x22EBAB0")]
	public void DownDynamicLighting()
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x22EBBC0", Offset = "0x22EBBC0", VA = "0x22EBBC0")]
	public void UpFresnel()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x22EBCD0", Offset = "0x22EBCD0", VA = "0x22EBCD0")]
	public void DownFresnel()
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x22EBDE0", Offset = "0x22EBDE0", VA = "0x22EBDE0")]
	public void UpFresnelExponent()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x22EBEF0", Offset = "0x22EBEF0", VA = "0x22EBEF0")]
	public void DownFresnelExponent()
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x22EC000", Offset = "0x22EC000", VA = "0x22EC000")]
	public void ToggleDynamicFresnelAttenuation()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x22EC06C", Offset = "0x22EC06C", VA = "0x22EC06C")]
	public void ToggleReflectionFresnelAttenuation()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x22EC0D8", Offset = "0x22EC0D8", VA = "0x22EC0D8")]
	public void UpSmoothnessDynamicAttenuation()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x22EC1E8", Offset = "0x22EC1E8", VA = "0x22EC1E8")]
	public void DownSmoothnessDynamicAttenuation()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x22EC2F8", Offset = "0x22EC2F8", VA = "0x22EC2F8")]
	public void UpSmoothnessReflectionAttenuation()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x22EC408", Offset = "0x22EC408", VA = "0x22EC408")]
	public void DownSmoothnessReflectionAttenuation()
	{
	}

	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x22EC518", Offset = "0x22EC518", VA = "0x22EC518")]
	public void UpAddingCurvature()
	{
	}

	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x22EC628", Offset = "0x22EC628", VA = "0x22EC628")]
	public void DownAddintCurvature()
	{
	}

	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x22EC738", Offset = "0x22EC738", VA = "0x22EC738")]
	public ShaderTestMenu()
	{
	}
}
[Token(Token = "0x20001A6")]
public class SimpleBillboard : MonoBehaviour
{
	[Token(Token = "0x40011EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public MeshRenderer r;

	[Token(Token = "0x40011EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool initialized;

	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x22EC77C", Offset = "0x22EC77C", VA = "0x22EC77C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x22EC938", Offset = "0x22EC938", VA = "0x22EC938")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x22ECA48", Offset = "0x22ECA48", VA = "0x22ECA48")]
	public SimpleBillboard()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SingleplayerMenu : MonoBehaviour
{
	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public FighterConfiguration LongswordEnemy1;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FighterConfiguration LongswordEnemyBasic;

	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public FighterConfiguration ClaymoreEnemy1;

	[Token(Token = "0x40011F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FighterConfiguration RapierEnemy1;

	[Token(Token = "0x40011F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public FighterConfiguration QstaffEnemy1;

	[Token(Token = "0x40011F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FighterConfiguration KatarEnemy1;

	[Token(Token = "0x40011F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public FighterConfiguration FlailEnemy1;

	[Token(Token = "0x40011F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FighterConfiguration chosenConfig;

	[Token(Token = "0x40011F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro ChosenEnemyLabel;

	[Token(Token = "0x40011F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject StartButton1;

	[Token(Token = "0x40011F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject StartButton2;

	[Token(Token = "0x40011F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RecordAnimsButton;

	[Token(Token = "0x40011F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject CustomWeaponOptions;

	[Token(Token = "0x40011FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject NormalOptions;

	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public List<FighterConfiguration> chosenConfigs;

	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MatchInfo testMatch;

	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public MatchConfiguration placeholderMatchConfig;

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x2101DB8", Offset = "0x2101DB8", VA = "0x2101DB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x2101F98", Offset = "0x2101F98", VA = "0x2101F98")]
	public void Back()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x2102164", Offset = "0x2102164", VA = "0x2102164")]
	public void ShowCustomWeaponOptions()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x21021E0", Offset = "0x21021E0", VA = "0x21021E0")]
	public void MainHandDoublesword()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x21022C0", Offset = "0x21022C0", VA = "0x21022C0")]
	public void OffHandDoublesword()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x210239C", Offset = "0x210239C", VA = "0x210239C")]
	public void MainHandRapier()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x210247C", Offset = "0x210247C", VA = "0x210247C")]
	public void OffHandRapier()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x2102558", Offset = "0x2102558", VA = "0x2102558")]
	public void MainHandKatar()
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x2102638", Offset = "0x2102638", VA = "0x2102638")]
	public void OffHandKatar()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x2102714", Offset = "0x2102714", VA = "0x2102714")]
	public void MainHandFlail()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x21027F4", Offset = "0x21027F4", VA = "0x21027F4")]
	public void OffHandFlail()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x21028D0", Offset = "0x21028D0", VA = "0x21028D0")]
	public void MainHandQuarterstaff()
	{
	}

	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x21029B0", Offset = "0x21029B0", VA = "0x21029B0")]
	public void OffHandQuarterstaff()
	{
	}

	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x2102A8C", Offset = "0x2102A8C", VA = "0x2102A8C")]
	public void MainHandTripleSword()
	{
	}

	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x2102B6C", Offset = "0x2102B6C", VA = "0x2102B6C")]
	public void OffHandTripleSword()
	{
	}

	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x2102C48", Offset = "0x2102C48", VA = "0x2102C48")]
	public void MainHandMace()
	{
	}

	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x2102D28", Offset = "0x2102D28", VA = "0x2102D28")]
	public void OffHandMace()
	{
	}

	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x2102E04", Offset = "0x2102E04", VA = "0x2102E04")]
	public void MainHandStick()
	{
	}

	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x2102EE4", Offset = "0x2102EE4", VA = "0x2102EE4")]
	public void OffHandStick()
	{
	}

	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x2102FC0", Offset = "0x2102FC0", VA = "0x2102FC0")]
	public void MainHandShortSpear()
	{
	}

	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x21030A0", Offset = "0x21030A0", VA = "0x21030A0")]
	public void OffHandShortSpear()
	{
	}

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x210317C", Offset = "0x210317C", VA = "0x210317C")]
	public void MainHandWarAxe()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x210325C", Offset = "0x210325C", VA = "0x210325C")]
	public void OffHandWarAxe()
	{
	}

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x2103338", Offset = "0x2103338", VA = "0x2103338")]
	public void MainHandBuckler()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x2103418", Offset = "0x2103418", VA = "0x2103418")]
	public void OffHandBuckler()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x21034F4", Offset = "0x21034F4", VA = "0x21034F4")]
	public void MainHandHeaterShield()
	{
	}

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x21035D4", Offset = "0x21035D4", VA = "0x21035D4")]
	public void OffHandHeaterShield()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x21036B0", Offset = "0x21036B0", VA = "0x21036B0")]
	public void MainHandGunHand()
	{
	}

	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x2103790", Offset = "0x2103790", VA = "0x2103790")]
	public void OffHandGunHand()
	{
	}

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x210386C", Offset = "0x210386C", VA = "0x210386C")]
	public void MainHandLongsword()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x210394C", Offset = "0x210394C", VA = "0x210394C")]
	public void OffHandLongsword()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x2103A28", Offset = "0x2103A28", VA = "0x2103A28")]
	public void MainHandShortSword()
	{
	}

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x2103B08", Offset = "0x2103B08", VA = "0x2103B08")]
	public void OffHandShortSword()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x2103BE4", Offset = "0x2103BE4", VA = "0x2103BE4")]
	public void MainHandBoardShield()
	{
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x2103CC4", Offset = "0x2103CC4", VA = "0x2103CC4")]
	public void OffHandBoardShield()
	{
	}

	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x2103DA0", Offset = "0x2103DA0", VA = "0x2103DA0")]
	public void MainHandChakram()
	{
	}

	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x2103E80", Offset = "0x2103E80", VA = "0x2103E80")]
	public void OffHandChakram()
	{
	}

	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x2103F5C", Offset = "0x2103F5C", VA = "0x2103F5C")]
	public void MainHandChargeGun()
	{
	}

	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x210403C", Offset = "0x210403C", VA = "0x210403C")]
	public void OffHandChargeGun()
	{
	}

	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x2104118", Offset = "0x2104118", VA = "0x2104118")]
	public void MainHandCrescent()
	{
	}

	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x21041F8", Offset = "0x21041F8", VA = "0x21041F8")]
	public void OffHandCrescent()
	{
	}

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x21042D4", Offset = "0x21042D4", VA = "0x21042D4")]
	public void MainHandDeerHornBlade()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x21043B4", Offset = "0x21043B4", VA = "0x21043B4")]
	public void OffHandDeerHornBlade()
	{
	}

	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x2104490", Offset = "0x2104490", VA = "0x2104490")]
	public void MainHandHalberd()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x2104570", Offset = "0x2104570", VA = "0x2104570")]
	public void OffHandHalberd()
	{
	}

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x210464C", Offset = "0x210464C", VA = "0x210464C")]
	public void MainHandScimitar()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x210472C", Offset = "0x210472C", VA = "0x210472C")]
	public void OffHandScimitar()
	{
	}

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x2104808", Offset = "0x2104808", VA = "0x2104808")]
	public void MainHandWhip()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x21048E8", Offset = "0x21048E8", VA = "0x21048E8")]
	public void OffHandWhip()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x21049C4", Offset = "0x21049C4", VA = "0x21049C4")]
	public void MainHandParryingDagger()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x2104AA4", Offset = "0x2104AA4", VA = "0x2104AA4")]
	public void OffHandParryingDagger()
	{
	}

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x2104B80", Offset = "0x2104B80", VA = "0x2104B80")]
	public void MainHandWarhammer()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x2104C60", Offset = "0x2104C60", VA = "0x2104C60")]
	public void OffHandWarhammer()
	{
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x2104D3C", Offset = "0x2104D3C", VA = "0x2104D3C")]
	public void MainHandGlaive()
	{
	}

	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x2104E1C", Offset = "0x2104E1C", VA = "0x2104E1C")]
	public void OffHandGlaive()
	{
	}

	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x2104EF8", Offset = "0x2104EF8", VA = "0x2104EF8")]
	public void PlayerClaymore()
	{
	}

	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x2105048", Offset = "0x2105048", VA = "0x2105048")]
	public void PlayerScythe()
	{
	}

	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x2105198", Offset = "0x2105198", VA = "0x2105198")]
	public void PlayerKatana()
	{
	}

	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x21052E8", Offset = "0x21052E8", VA = "0x21052E8")]
	public void PlayerWarhammer()
	{
	}

	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x2105438", Offset = "0x2105438", VA = "0x2105438")]
	public void PlayerRapier()
	{
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x21055E8", Offset = "0x21055E8", VA = "0x21055E8")]
	public void PlayerQstaff()
	{
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x2105738", Offset = "0x2105738", VA = "0x2105738")]
	public void PlayerKatar()
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x21058E8", Offset = "0x21058E8", VA = "0x21058E8")]
	public void PlayerFlail()
	{
	}

	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x2105A98", Offset = "0x2105A98", VA = "0x2105A98")]
	public void PlayerSwords()
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x2105C24", Offset = "0x2105C24", VA = "0x2105C24")]
	public void PlayerTripleSword()
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x2105D50", Offset = "0x2105D50", VA = "0x2105D50")]
	public void PlayerWarAxe()
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x2105EDC", Offset = "0x2105EDC", VA = "0x2105EDC")]
	public void PlayerSticks()
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x2106068", Offset = "0x2106068", VA = "0x2106068")]
	public void PlayerShortSpear()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x2106194", Offset = "0x2106194", VA = "0x2106194")]
	public void PlayerMace()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x2101F0C", Offset = "0x2101F0C", VA = "0x2101F0C")]
	public void EnemyEasy()
	{
	}

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x2106320", Offset = "0x2106320", VA = "0x2106320")]
	public void EnemyLongsword()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x21063AC", Offset = "0x21063AC", VA = "0x21063AC")]
	public void EnemyClaymore()
	{
	}

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x2106438", Offset = "0x2106438", VA = "0x2106438")]
	public void EnemyRapier()
	{
	}

	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x21064C4", Offset = "0x21064C4", VA = "0x21064C4")]
	public void EnemyQstaff()
	{
	}

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x2106550", Offset = "0x2106550", VA = "0x2106550")]
	public void EnemyKatar()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x21065DC", Offset = "0x21065DC", VA = "0x21065DC")]
	public void EnemyFlail()
	{
	}

	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x2106668", Offset = "0x2106668", VA = "0x2106668")]
	public void EnemyMulti()
	{
	}

	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x2106788", Offset = "0x2106788", VA = "0x2106788")]
	public void MatchTest()
	{
	}

	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x210690C", Offset = "0x210690C", VA = "0x210690C")]
	public void StartInstant()
	{
	}

	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x21071DC", Offset = "0x21071DC", VA = "0x21071DC")]
	public void StartIntroSequence()
	{
	}

	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x2107418", Offset = "0x2107418", VA = "0x2107418")]
	public void TriggerIntroSequence()
	{
	}

	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x21077B0", Offset = "0x21077B0", VA = "0x21077B0")]
	public SingleplayerMenu()
	{
	}
}
[Token(Token = "0x20001A8")]
public class SlamRanged : RangedAttack
{
	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParticleSystem SlamParticles;

	[Token(Token = "0x40011FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ParticleSystem SlamParticles2;

	[Token(Token = "0x4001200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool readyToSlam;

	[Token(Token = "0x4001201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float fireYRecharge;

	[Token(Token = "0x4001202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float fireYThreshold;

	[Token(Token = "0x4001203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 currentDir;

	[Token(Token = "0x4001204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int numShots;

	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x210783C", Offset = "0x210783C", VA = "0x210783C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x21078F8", Offset = "0x21078F8", VA = "0x21078F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x21078FC", Offset = "0x21078FC", VA = "0x21078FC", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x2107900", Offset = "0x2107900", VA = "0x2107900", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x2108C84", Offset = "0x2108C84", VA = "0x2108C84", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x2108E90", Offset = "0x2108E90", VA = "0x2108E90")]
	public SlamRanged()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SliceRanged : RangedAttack
{
	[Token(Token = "0x4001205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TrailRenderer outerTrail;

	[Token(Token = "0x4001206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TrailRenderer innerTrail;

	[Token(Token = "0x4001207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool drawing;

	[Token(Token = "0x4001208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool slicing;

	[Token(Token = "0x4001209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float slicingTime;

	[Token(Token = "0x400120A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxSlicingTime;

	[Token(Token = "0x400120B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float sliceAngle;

	[Token(Token = "0x400120C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minSliceDist;

	[Token(Token = "0x400120D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxSliceDist;

	[Token(Token = "0x400120E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool eligibleToStartNewSlice;

	[Token(Token = "0x400120F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int maxNumSlices;

	[Token(Token = "0x4001210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Vector3> enterPoints;

	[Token(Token = "0x4001211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public List<Vector3> exitPoints;

	[Token(Token = "0x4001212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<Vector3> directions;

	[Token(Token = "0x4001213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<GameObject> shotPreviews;

	[Token(Token = "0x4001214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject previewShotPrefab;

	[Token(Token = "0x4001215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Material previewShotMaterial;

	[Token(Token = "0x4001216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool triggerWasHeld;

	[Token(Token = "0x4001217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool forceEnd;

	[Token(Token = "0x4001218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int shotFrameInterval;

	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x2108F4C", Offset = "0x2108F4C", VA = "0x2108F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x2109008", Offset = "0x2109008", VA = "0x2109008", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x210900C", Offset = "0x210900C", VA = "0x210900C", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x2109D8C", Offset = "0x2109D8C", VA = "0x2109D8C", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x210B6E8", Offset = "0x210B6E8", VA = "0x210B6E8")]
	public SliceRanged()
	{
	}
}
[Token(Token = "0x20001AA")]
public class SlowSlider : Slider
{
	[Token(Token = "0x4001219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float topSpeed;

	[Token(Token = "0x400121A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float smoothFactor;

	[Token(Token = "0x400121B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float acceleration;

	[Token(Token = "0x400121C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float currentSpeed;

	[Token(Token = "0x400121D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public bool slowMode;

	[Token(Token = "0x400121E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float target;

	[Token(Token = "0x400121F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int holdCountdown;

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x210B80C", Offset = "0x210B80C", VA = "0x210B80C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x210B838", Offset = "0x210B838", VA = "0x210B838", Slot = "51")]
	protected override void Set(float input, bool sendCallback)
	{
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x210B964", Offset = "0x210B964", VA = "0x210B964")]
	public void SetValue(float input)
	{
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x210B9D0", Offset = "0x210B9D0", VA = "0x210B9D0")]
	public SlowSlider()
	{
	}
}
[Token(Token = "0x20001AB")]
public class SoundTest : MonoBehaviour
{
	[Token(Token = "0x4001220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter playerFighter;

	[Token(Token = "0x4001221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fighter otherFighter;

	[Token(Token = "0x4001222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSource crowdLeft;

	[Token(Token = "0x4001223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource crowdRight;

	[Token(Token = "0x4001224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioSource crowdCheer;

	[Token(Token = "0x4001225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource music1;

	[Token(Token = "0x4001226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioSource music2;

	[Token(Token = "0x4001227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro musicVolume;

	[Token(Token = "0x4001228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TextMeshPro crowdVolume;

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x2110630", Offset = "0x2110630", VA = "0x2110630")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x2110A40", Offset = "0x2110A40", VA = "0x2110A40")]
	private void HealFighters()
	{
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x2110AE8", Offset = "0x2110AE8", VA = "0x2110AE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x2111808", Offset = "0x2111808", VA = "0x2111808")]
	public SoundTest()
	{
	}
}
[Token(Token = "0x20001AC")]
public class SpectatorCamBehaviour : EntityBehaviour<ISpectatorCamState>
{
	[Token(Token = "0x4001229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 lastPos;

	[Token(Token = "0x400122A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Quaternion lastRot;

	[Token(Token = "0x400122B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hidden;

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x2111810", Offset = "0x2111810", VA = "0x2111810", Slot = "18")]
	public override void Attached()
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x2111BB4", Offset = "0x2111BB4", VA = "0x2111BB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x21125C4", Offset = "0x21125C4", VA = "0x21125C4")]
	public SpectatorCamBehaviour()
	{
	}
}
[Token(Token = "0x20001AD")]
public class SpectatorCamera : MonoBehaviour
{
	[Token(Token = "0x400122C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 Center;

	[Token(Token = "0x400122D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float dist;

	[Token(Token = "0x400122E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject Player1Center;

	[Token(Token = "0x400122F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Player2Center;

	[Token(Token = "0x4001230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject FocusPoint;

	[Token(Token = "0x4001231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Xrot;

	[Token(Token = "0x4001232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject Yrot;

	[Token(Token = "0x4001233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Zdist;

	[Token(Token = "0x4001234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject cameraObject;

	[Token(Token = "0x4001235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float targetVolume;

	[Token(Token = "0x4001236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float targetXRot;

	[Token(Token = "0x4001237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float targetZdist;

	[Token(Token = "0x4001238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float zmod;

	[Token(Token = "0x4001239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float zplus;

	[Token(Token = "0x400123A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float yAngle;

	[Token(Token = "0x400123B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float ySpeed;

	[Token(Token = "0x400123C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public SpectatorCamMode mode;

	[Token(Token = "0x400123D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float heightAdjust;

	[Token(Token = "0x400123E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool matchStartFlag;

	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x2112628", Offset = "0x2112628", VA = "0x2112628")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x211262C", Offset = "0x211262C", VA = "0x211262C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x21133F8", Offset = "0x21133F8", VA = "0x21133F8")]
	public void ZoomToOrbit()
	{
	}

	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x2113648", Offset = "0x2113648", VA = "0x2113648")]
	public void SetZplus(float t)
	{
	}

	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x2113650", Offset = "0x2113650", VA = "0x2113650")]
	public void SetTargetXRot(float t)
	{
	}

	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x2113658", Offset = "0x2113658", VA = "0x2113658")]
	public void SwitchToMenuOrbit()
	{
	}

	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x2113600", Offset = "0x2113600", VA = "0x2113600")]
	public void SwitchToHighOrbit()
	{
	}

	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x21136A0", Offset = "0x21136A0", VA = "0x21136A0")]
	public void SwitchToLowOrbit()
	{
	}

	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x21136E8", Offset = "0x21136E8", VA = "0x21136E8")]
	public void SwitchToP1Closeup()
	{
	}

	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x2113730", Offset = "0x2113730", VA = "0x2113730")]
	public void SwitchToP2Closeup()
	{
	}

	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x2113778", Offset = "0x2113778", VA = "0x2113778")]
	public SpectatorCamera()
	{
	}
}
[Token(Token = "0x20001AE")]
public enum SpectatorCamMode
{
	[Token(Token = "0x4001240")]
	Orbit,
	[Token(Token = "0x4001241")]
	Player1Closeup,
	[Token(Token = "0x4001242")]
	Player2Closeup
}
[Token(Token = "0x20001AF")]
public class SpectatorMenu : MonoBehaviour
{
	[Token(Token = "0x2000544")]
	public enum State
	{
		[Token(Token = "0x400294C")]
		MainMenu,
		[Token(Token = "0x400294D")]
		MatchPrep,
		[Token(Token = "0x400294E")]
		Match
	}

	[Token(Token = "0x4001243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TMP_InputField tagField;

	[Token(Token = "0x4001244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI buttonText;

	[Token(Token = "0x4001245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI status;

	[Token(Token = "0x4001246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI speedText;

	[Token(Token = "0x4001247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject tagObj;

	[Token(Token = "0x4001248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject connectionStatusObj;

	[Token(Token = "0x4001249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject mouseSmoothingCheck;

	[Token(Token = "0x400124A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject autoIntroCheck;

	[Token(Token = "0x400124B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject autoReconnectCheck;

	[Token(Token = "0x400124C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject hideTagCheck;

	[Token(Token = "0x400124D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject musicCheck1;

	[Token(Token = "0x400124E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject musicCheck2;

	[Token(Token = "0x400124F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject menuModal;

	[Token(Token = "0x4001250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject healthBars;

	[Token(Token = "0x4001251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject cameraControls;

	[Token(Token = "0x4001252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject toggleUiButton;

	[Token(Token = "0x4001253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject exitButton;

	[Token(Token = "0x4001254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public JumbotronBar p1CameraBars;

	[Token(Token = "0x4001255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public JumbotronBar p2CameraBars;

	[Token(Token = "0x4001256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ReplayCam spectatorCamera;

	[Token(Token = "0x4001257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public State state;

	[Token(Token = "0x4001258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool matchStartFlag;

	[Token(Token = "0x4001259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool autoIntro;

	[Token(Token = "0x400125A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
	public bool autoReconnect;

	[Token(Token = "0x400125B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
	public bool showUI;

	[Token(Token = "0x400125C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool hideTag;

	[Token(Token = "0x400125D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool playMusic;

	[Token(Token = "0x400125E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
	private bool waitingForConnection;

	[Token(Token = "0x400125F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
	public bool keyCamsEnabled;

	[Token(Token = "0x4001260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool connectedOnce;

	[Token(Token = "0x4001261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private string statusBase;

	[Token(Token = "0x4001262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float musicCurVolume;

	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x2113860", Offset = "0x2113860", VA = "0x2113860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x2113A74", Offset = "0x2113A74", VA = "0x2113A74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x2114700", Offset = "0x2114700", VA = "0x2114700")]
	public void ConnectOrCancel()
	{
	}

	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x211416C", Offset = "0x211416C", VA = "0x211416C")]
	public void HighOrbit()
	{
	}

	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x2114234", Offset = "0x2114234", VA = "0x2114234")]
	public void LowOrbit()
	{
	}

	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x21142FC", Offset = "0x21142FC", VA = "0x21142FC")]
	public void P1Closeup()
	{
	}

	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x21143C4", Offset = "0x21143C4", VA = "0x21143C4")]
	public void P2Closeup()
	{
	}

	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x211448C", Offset = "0x211448C", VA = "0x211448C")]
	public void ZoomToOrbit()
	{
	}

	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x2114A28", Offset = "0x2114A28", VA = "0x2114A28")]
	public void ToggleMouseSmoothing()
	{
	}

	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x2114AB0", Offset = "0x2114AB0", VA = "0x2114AB0")]
	public void ToggleAutoIntro()
	{
	}

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x2114AF4", Offset = "0x2114AF4", VA = "0x2114AF4")]
	public void ToggleAutoReconnect()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x2114B38", Offset = "0x2114B38", VA = "0x2114B38")]
	public void ToggleMusic()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x2114E60", Offset = "0x2114E60", VA = "0x2114E60")]
	public void ToggleHideTag()
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x2114F00", Offset = "0x2114F00", VA = "0x2114F00")]
	public void FadeTransitionTest()
	{
	}

	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x2114F7C", Offset = "0x2114F7C", VA = "0x2114F7C")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x21148C0", Offset = "0x21148C0", VA = "0x21148C0")]
	public void SetWaiting(bool val)
	{
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x2114554", Offset = "0x2114554", VA = "0x2114554")]
	public void ToMatchPrep()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x211468C", Offset = "0x211468C", VA = "0x211468C")]
	public void ToMenu()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x211465C", Offset = "0x211465C", VA = "0x211465C")]
	public void ToMatch()
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x211415C", Offset = "0x211415C", VA = "0x211415C")]
	public void ToggleUI()
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x211507C", Offset = "0x211507C", VA = "0x211507C")]
	public void SetUI()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x211528C", Offset = "0x211528C", VA = "0x211528C")]
	public void SetRotationSpeed(float percent)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x2115384", Offset = "0x2115384", VA = "0x2115384")]
	public SpectatorMenu()
	{
	}
}
[Token(Token = "0x20001B0")]
public class Stadium : MonoBehaviour
{
	[Token(Token = "0x4001263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Color FogColor;

	[Token(Token = "0x4001264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FogDensity;

	[Token(Token = "0x4001265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Crowd;

	[Token(Token = "0x4001266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Light sunLight;

	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> LightBanks;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<GameObject> LightBanksGeo;

	[Token(Token = "0x4001269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> LightQuadsSmall;

	[Token(Token = "0x400126A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<MeshRenderer> LightQuads;

	[Token(Token = "0x400126B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> Boundaries;

	[Token(Token = "0x400126C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Material LightQuadMat;

	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SkyDome;

	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public ParticleSystem WeatherParticles;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource WeatherAudio;

	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ParticleSystem CameraFlashParticles;

	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem DustParticles1;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public ParticleSystem DustParticles2;

	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject NonVisibleMeshes;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject StaticPlatform1;

	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject StaticPlatform2;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 IntroStartPos1;

	[Token(Token = "0x4001277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject HalfPlatform1;

	[Token(Token = "0x4001278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Material LightPlatformMat;

	[Token(Token = "0x4001279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material DarkPlatformMat;

	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Material LightPlatformMetalMat;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material DarkPlatformMetalMat;

	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 IntroStartPos2;

	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject HalfPlatform2;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public MeshRenderer Underlights1;

	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer Underlights2;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float lightScale;

	[Token(Token = "0x4001281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float introTimer;

	[Token(Token = "0x4001282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float introLength;

	[Token(Token = "0x4001283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool playingIntro;

	[Token(Token = "0x4001284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public AnimationCurve IntroCurve;

	[Token(Token = "0x4001285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool startedMusic;

	[Token(Token = "0x4001286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	private bool hitHalfway;

	[Token(Token = "0x4001287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	private bool hit9_16ths;

	[Token(Token = "0x4001288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	private bool hit10_16ths;

	[Token(Token = "0x4001289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool hit11_16ths;

	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
	private bool hit12_16ths;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
	private bool hit13_16ths;

	[Token(Token = "0x400128C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
	private bool hit14_16ths;

	[Token(Token = "0x400128D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool hit15_16ths;

	[Token(Token = "0x400128E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private int countdownLeft;

	[Token(Token = "0x400128F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float countdownStepLength;

	[Token(Token = "0x4001290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float sixteethLength;

	[Token(Token = "0x4001291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool hitEnd;

	[Token(Token = "0x4001292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public MusicTrack chosenTrack;

	[Token(Token = "0x4001293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public StageInfo chosenStage;

	[Token(Token = "0x4001294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Jumbotron Jumbotron1;

	[Token(Token = "0x4001295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Jumbotron Jumbotron2;

	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public FighterConfiguration TestEnemyConfig;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public List<Fighter> opposingPlayers;

	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Fighter playerOne;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ResourceBar PlayerOneBar1;

	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public ResourceBar PlayerOneBar2;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public ResourceBar PlayerOneBar3;

	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public ResourceBar PlayerOneBar4;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ResourceBar PlayerTwoBar1;

	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public ResourceBar PlayerTwoBar2;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public ResourceBar PlayerTwoBar3;

	[Token(Token = "0x40012A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public ResourceBar PlayerTwoBar4;

	[Token(Token = "0x40012A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float lightQuadSizeBoost;

	[Token(Token = "0x40012A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Material CrowdMaterialLeft;

	[Token(Token = "0x40012A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material CrowdMaterialRight;

	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Material SpotlightBeamMat;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Material PitMat;

	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public List<Material> Team1FullMats;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public List<Material> Team1HalfMats;

	[Token(Token = "0x40012A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public List<Material> Team1EighthMats;

	[Token(Token = "0x40012A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<Material> Team2FullMats;

	[Token(Token = "0x40012AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public List<Material> Team2HalfMats;

	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public List<Material> Team2EighthMats;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public List<Material> PlatformMats;

	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public AnimationCurve weaponFlyinX;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public AnimationCurve weaponFlyinY;

	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public AnimationCurve weaponFlyinZ;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public AnimationCurve lightbankYPosition;

	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public AnimationCurve lightbankXRotation;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float team1JumpSpeed;

	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private float team2JumpSpeed;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float team1JumpHeight;

	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float team2JumpHeight;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float team1JumpTransitionSpeed;

	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float team2JumpTransitionSpeed;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float team1JumpTarget;

	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float team2JumpTarget;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public float crowdTime1;

	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float crowdTime2;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public float stadiumTime;

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private bool seekFrame;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
	private bool triggeredIntro1;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17A")]
	private bool triggeredIntro2;

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17B")]
	private bool turnedOnTrails1;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private bool turnedOnTrails2;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private int startFrame;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private float replayIntroTimer;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public Material MarqueeMat1;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Material MarqueeMat2;

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public Texture MarqueeKnightTex;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public Texture MarqueeDuelistTex;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Texture MarqueeMonkTex;

	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public Texture MarqueeNinjaTex;

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public Texture MarqueeCrusaderTex;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public Texture MarqueeReaperTex;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public Texture MarqueeSamuraiTex;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public Texture MarqueeBerserkerTex;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public Texture MarqueeMinionTex;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public Texture MarqueeBossTex;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public Texture MarqueeOtherTex;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public IntroType currentIntroType;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float lightningStart;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float countdownToNextLightning;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool wasLightning;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public Color globalMinReflectionColor;

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x2115400", Offset = "0x2115400", VA = "0x2115400")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD980", Offset = "0x5CD980")]
	public void WriteFogVars()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x2115494", Offset = "0x2115494", VA = "0x2115494")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x2115498", Offset = "0x2115498", VA = "0x2115498")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x21154F0", Offset = "0x21154F0", VA = "0x21154F0")]
	public void ResetCrowdTime(bool forced = false)
	{
	}

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x2115544", Offset = "0x2115544", VA = "0x2115544")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x2115730", Offset = "0x2115730", VA = "0x2115730")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x211B704", Offset = "0x211B704", VA = "0x211B704")]
	private void LongIntroStep()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x2116F20", Offset = "0x2116F20", VA = "0x2116F20")]
	private void ShortIntroStep()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x2116E5C", Offset = "0x2116E5C", VA = "0x2116E5C")]
	private float CalcIntroTimerFromFrame()
	{
		return default(float);
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x210700C", Offset = "0x210700C", VA = "0x210700C")]
	public void SpawnEnemyAndInstantStart([Optional] FighterConfiguration enemyConfig)
	{
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x2106C68", Offset = "0x2106C68", VA = "0x2106C68")]
	public void SpawnEnemyAndInstantStart(List<FighterConfiguration> configs)
	{
	}

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x21075E0", Offset = "0x21075E0", VA = "0x21075E0")]
	public void SpawnEnemyAndLongIntro([Optional] FighterConfiguration enemyConfig)
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x2125470", Offset = "0x2125470", VA = "0x2125470")]
	public void SpawnWaveAndStart(WaveInfo wave)
	{
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x2126DF0", Offset = "0x2126DF0", VA = "0x2126DF0")]
	public void CancelIntro()
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x2126DFC", Offset = "0x2126DFC", VA = "0x2126DFC")]
	public void HookUpResourceBars(Fighter p1, Fighter p2)
	{
	}

	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x212701C", Offset = "0x212701C", VA = "0x212701C")]
	public void CommonStart()
	{
	}

	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x21231D0", Offset = "0x21231D0", VA = "0x21231D0")]
	public void InstantStart()
	{
	}

	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x2123D50", Offset = "0x2123D50", VA = "0x2123D50")]
	public void LongIntro()
	{
	}

	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x21258E0", Offset = "0x21258E0", VA = "0x21258E0")]
	public void ShortIntro()
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x212AADC", Offset = "0x212AADC", VA = "0x212AADC")]
	public void SetIntroProgress(float time = -2f, bool restartMusic = true)
	{
	}

	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x212AAC4", Offset = "0x212AAC4", VA = "0x212AAC4")]
	public void FinishIntro()
	{
	}

	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x212C988", Offset = "0x212C988", VA = "0x212C988")]
	public void SetFighters(Fighter p1, Fighter p2)
	{
	}

	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x212CB5C", Offset = "0x212CB5C", VA = "0x212CB5C")]
	public bool PlatformsMoving()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x212CBB8", Offset = "0x212CBB8", VA = "0x212CBB8")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD9BC", Offset = "0x5CD9BC")]
	public void Test1()
	{
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x212CDD0", Offset = "0x212CDD0", VA = "0x212CDD0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CD9F0", Offset = "0x5CD9F0")]
	public void Test2()
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x2122544", Offset = "0x2122544", VA = "0x2122544")]
	public void MovePlayerPlatform(float t)
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x2122A1C", Offset = "0x2122A1C", VA = "0x2122A1C")]
	public void MoveOpponentPlatform(float t)
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x2122E6C", Offset = "0x2122E6C", VA = "0x2122E6C")]
	public void MoveLightBanks(float t)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x2121F48", Offset = "0x2121F48", VA = "0x2121F48")]
	public void FlyInPlayerOneWeapons(float t)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x212179C", Offset = "0x212179C", VA = "0x212179C")]
	public void FlyInPlayerTwoWeapons(float t)
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x212CDD4", Offset = "0x212CDD4", VA = "0x212CDD4")]
	public void SetPlatformMatsDark(GameObject go)
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x212D058", Offset = "0x212D058", VA = "0x212D058")]
	public void SetPlatformMatsLight(GameObject go)
	{
	}

	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x212A63C", Offset = "0x212A63C", VA = "0x212A63C")]
	public void SetMarquees(FighterClass fc1, FighterClass fc2)
	{
	}

	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x2129984", Offset = "0x2129984", VA = "0x2129984")]
	public void RecolorStadium(Color c1, Color c2)
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x212D2DC", Offset = "0x212D2DC", VA = "0x212D2DC")]
	public void ResetColors()
	{
	}

	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x2115570", Offset = "0x2115570", VA = "0x2115570")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDA24", Offset = "0x5CDA24")]
	public void LightningTest()
	{
	}

	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x212D600", Offset = "0x212D600", VA = "0x212D600")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDA60", Offset = "0x5CDA60")]
	public void GreyOut()
	{
	}

	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x212D7C4", Offset = "0x212D7C4", VA = "0x212D7C4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDA94", Offset = "0x5CDA94")]
	public void RedGreenCrowd()
	{
	}

	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x212D9C0", Offset = "0x212D9C0", VA = "0x212D9C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDAD0", Offset = "0x5CDAD0")]
	public void SetMinReflectionColor()
	{
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x212DA38", Offset = "0x212DA38", VA = "0x212DA38")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDB14", Offset = "0x5CDB14")]
	public void RemoveMinReflectionColor()
	{
	}

	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x212DAB8", Offset = "0x212DAB8", VA = "0x212DAB8")]
	public void SetCheer(Fighter f, float cheerLevel, float opponentCheerLevel)
	{
	}

	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x212DB78", Offset = "0x212DB78", VA = "0x212DB78")]
	public Stadium()
	{
	}
}
[Token(Token = "0x20001B1")]
public class StageInfo : MonoBehaviour
{
	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Cubemap reflectionCubemap;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Cubemap darkReflectionCubemap;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Skydome;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject LightningSkydome;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSkybox;

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool useLightning;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material SkyboxMaterial;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material LightningSkyboxMaterial;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ambientColor;

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color ambientDown;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color ambientEquator;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color ambientUp;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color ambientDownDark;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color ambientEquatorDark;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color ambientUpDark;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color sunColor;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 sunEulerAngles;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool usingStadiumLights;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float stadiumLightScale;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public ParticleSystem weatherParticles;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AudioSource weatherAudio;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public ParticleSystem CameraFlashParticles;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float CameraFlashEmissionScalar;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 weatherRelativePos;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GM convenienceGM;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public StageType type;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color crowdBaseColor;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Color crowdLightColor;

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Color crowdAOColor;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Color crowdBaseColorDark;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Color crowdLightColorDark;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Color crowdAOColorDark;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public bool usingSpotlights;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float spotlightStrength;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Color shadowColor;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Color PitColor;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public Color FogColor;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float FogDensity;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Color lightingParticleColor;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Color darkParticleColor;

	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public AnimationCurve LightningCurve1;

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x2387318", Offset = "0x2387318", VA = "0x2387318")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDB5C", Offset = "0x5CDB5C")]
	public void LoadStage()
	{
	}

	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x2388D84", Offset = "0x2388D84", VA = "0x2388D84")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDB94", Offset = "0x5CDB94")]
	public void SetDarkReflectionMap()
	{
	}

	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x23892C0", Offset = "0x23892C0", VA = "0x23892C0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDBCC", Offset = "0x5CDBCC")]
	public void SetRegularReflectionMap()
	{
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x238995C", Offset = "0x238995C", VA = "0x238995C")]
	public StageInfo()
	{
	}
}
[Token(Token = "0x20001B2")]
public class StartupScene : MonoBehaviour
{
	[Token(Token = "0x2000545")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CAC", Offset = "0x5C2CAC")]
	private sealed class <LoadYourAsyncScene>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400294F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private UnityEngine.AsyncOperation <asyncLoad>5__2;

		[Token(Token = "0x170002DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600260E")]
			[Address(RVA = "0x238A2C0", Offset = "0x238A2C0", VA = "0x238A2C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002610")]
			[Address(RVA = "0x238A350", Offset = "0x238A350", VA = "0x238A350", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600260B")]
		[Address(RVA = "0x238A1B8", Offset = "0x238A1B8", VA = "0x238A1B8")]
		[DebuggerHidden]
		public <LoadYourAsyncScene>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600260C")]
		[Address(RVA = "0x238A1E0", Offset = "0x238A1E0", VA = "0x238A1E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600260D")]
		[Address(RVA = "0x238A1E4", Offset = "0x238A1E4", VA = "0x238A1E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600260F")]
		[Address(RVA = "0x238A2C8", Offset = "0x238A2C8", VA = "0x238A2C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject EnglishTitle;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject AltTitle;

	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x2389DD0", Offset = "0x2389DD0", VA = "0x2389DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x238A120", Offset = "0x238A120", VA = "0x238A120")]
	private void LoadMainScene()
	{
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x238A144", Offset = "0x238A144", VA = "0x238A144")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDC04", Offset = "0x5CDC04")]
	private IEnumerator LoadYourAsyncScene()
	{
		return null;
	}

	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x238A1D8", Offset = "0x238A1D8", VA = "0x238A1D8")]
	public StartupScene()
	{
	}
}
[Token(Token = "0x20001B3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1200", Offset = "0x5C1200")]
public class StickCollision : MonoBehaviour
{
	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Weapon weapon;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isShield;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public StickVisual visuals;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> colliders;

	[NonSerialized]
	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Rigidbody r;

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StickPhysics physics;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject weaponTip;

	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isSummoned;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 displayAngV;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int myIndex;

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int lastDispelFrame;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int lastResummonFrame;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool lastDispelledOnLocalHit;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool ballMode;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	public bool simpleResummoning;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform ballConnectionPoint;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool stretchToConnect;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool dispelsAll;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool inResummonArea;

	[Token(Token = "0x4001314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject SummonIndicatorQuad;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timeSinceResummon;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float bodyCollisionPosDrag;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float bodyCollisionRotDrag;

	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minPullbackResummonDist;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float minMinPullback;

	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool triggerWasHeld;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float lastDispelDotZ;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float displayDotZ;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float displayZHandTarget;

	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float ballCollisionRadius;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool neverResummonMe;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float longCenterZ;

	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float shortCenterZ;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float longSizeZ;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float shortSizeZ;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool shieldScaleZOnly;

	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float aiMeleeDefLerp;

	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 nativePos;

	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool testingReloadPointer;

	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x238A358", Offset = "0x238A358", VA = "0x238A358")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x238A5E4", Offset = "0x238A5E4", VA = "0x238A5E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x238A5E8", Offset = "0x238A5E8", VA = "0x238A5E8")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x238A5EC", Offset = "0x238A5EC", VA = "0x238A5EC")]
	public void ManualFixedUpdate(bool fastForwarding = false)
	{
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x238DEA8", Offset = "0x238DEA8", VA = "0x238DEA8")]
	public void Resummon(bool sendEvent = true, bool instant = false)
	{
	}

	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x238F550", Offset = "0x238F550", VA = "0x238F550")]
	private void QuarterstaffCollisionAdjustment()
	{
	}

	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x238CD50", Offset = "0x238CD50", VA = "0x238CD50")]
	public void Dispel(int dispelFrame, Vector3 clashPoint, bool localHit = false)
	{
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x238FF70", Offset = "0x238FF70", VA = "0x238FF70")]
	public void HitProjectile(float hitspeed)
	{
	}

	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x238FFE0", Offset = "0x238FFE0", VA = "0x238FFE0")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x2394D5C", Offset = "0x2394D5C", VA = "0x2394D5C")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x2394DF0", Offset = "0x2394DF0", VA = "0x2394DF0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x2394220", Offset = "0x2394220", VA = "0x2394220")]
	private bool IsValidWeaponCollision(StickCollision enemyCollision)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x2394FB0", Offset = "0x2394FB0", VA = "0x2394FB0")]
	private int GetTriggerCollisionLayer()
	{
		return default(int);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x2394FE0", Offset = "0x2394FE0", VA = "0x2394FE0")]
	public StickCollision()
	{
	}
}
[Token(Token = "0x20001B4")]
public class StickPhysics : MonoBehaviour
{
	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Weapon weapon;

	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5F88", Offset = "0x5C5F88")]
	public Vector3 attachmentAngles;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 handGripAngles;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 offhandAttachmentAngles;

	[Token(Token = "0x400132C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 offhandGripAngles;

	[Token(Token = "0x400132D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 gripPositionOffset;

	[Token(Token = "0x400132E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5FA0", Offset = "0x5C5FA0")]
	public float heldMovementForceMod;

	[Token(Token = "0x400132F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float heldAngleForceMod;

	[Token(Token = "0x4001330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float heldMovementBrakeMod;

	[Token(Token = "0x4001331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float heldAngleBrakeMod;

	[Token(Token = "0x4001332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float idleMovementForceMod;

	[Token(Token = "0x4001333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float idleAngleForceMod;

	[Token(Token = "0x4001334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float idleMovementBrakeMod;

	[Token(Token = "0x4001335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float idleAngleBrakeMod;

	[Token(Token = "0x4001336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float extraMovementForceMod;

	[Token(Token = "0x4001337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float extraAngleForceMod;

	[Token(Token = "0x4001338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float extraMovementBrakeMod;

	[Token(Token = "0x4001339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float extraAngleBrakeMod;

	[Token(Token = "0x400133A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool usingDefenseMods;

	[Token(Token = "0x400133B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float defMovementForceMod;

	[Token(Token = "0x400133C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float defAngleForceMod;

	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float defMovementBrakeMod;

	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float defAngleBrakeMod;

	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float rollForceScalar;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float rollDragScalar;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5FB8", Offset = "0x5C5FB8")]
	public float dragPowerCo;

	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float forcePowerCo;

	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5FD0", Offset = "0x5C5FD0")]
	public float maxPullAngle;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float maxPullDistance;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C5FE8", Offset = "0x5C5FE8")]
	public float bladeEdgeTorqueScalar;

	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float bladeEdgeBrakeScalar;

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float flatSideTorqueScalar;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float flatSideBrakeScalar;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float displayBladeAlignment;

	[Token(Token = "0x400134A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float displayFlatAlignment;

	[Token(Token = "0x400134B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float displayAdjustment;

	[Token(Token = "0x400134C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float deflectionScalar;

	[Token(Token = "0x400134D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool preferForwardDeflection;

	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float rollMomentumScalar;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool onlyBoostForwardEdge;

	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6000", Offset = "0x5C6000")]
	public GameObject AIRangedBlockHelper;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject AIRangedBlockHandle;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject AIMeleeBlockHelper;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject AIMeleeBlockRotator;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject AIMeleeBlockHandle;

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6018", Offset = "0x5C6018")]
	public Vector3 velocity;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Quaternion xyAngularVelocity;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Quaternion zAngularVelocity;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool ballMode;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Transform ballConnectionPoint;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float slackLength;

	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float gravity;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public float ballDragPowerCo;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float ballForcePowerCo;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float extraBallDragFactor;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float extraRotDragScalar;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float extraPosDragScalar;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public float extraRotDragChangeSpeed;

	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public float extraPosDragChangeSpeed;

	[Token(Token = "0x4001363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float extraForceForward;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float extraForceBackward;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Quaternion displayTorque;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float displayBallForce;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float currentGripFactor;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float gripFactorLerpSpeed;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float cogTester;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float cogThreshold;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public Vector3 currentTipVelocity;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public float currentDamageSpeed;

	[Token(Token = "0x400136D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public Vector3 lastTipPos;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool wayOffTrack;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public Vector3 homeHandleAngles;

	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float testTiltDist;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public float testTiltPower;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public bool testingTilt;

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	public bool testingCog;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float cogDist;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float cogArmPower;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float cogTiltLerp;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float cogLerpDefense;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float maxXYRotSpeed;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float xySpeedLimit;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public bool usingStillBoost;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public float stillTime;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public float stillSpeedThreshold;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public float stillChargeupSpeed;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public float stillMaxCharge;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public float stillBoostPower;

	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public float backAngleSlowdown;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public float backAngleThreshold;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	public float wrongHandedSlowdown;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public bool usingGravityBoost;

	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public float gravityBoostScalar;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public bool usingGravityBoost2;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	public float gravityBoostScalar2;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public bool usingHandDistanceScale;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	public float handDistanceScaleFade;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public float handDistanceScaleMin;

	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public float handDistanceScaleMax;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public bool usingFloorCollision;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
	public float floorBounceFactor;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public int hitFloorCountdown;

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	public bool testBounce;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20D")]
	public bool testCrash;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public float crashDragFactor;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
	public List<Transform> bouncePoints;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public bool usingWindmillCap;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	public Vector3 windmillRating;

	[Token(Token = "0x4001394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public float windmillLerp;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
	public float windmillCap;

	[Token(Token = "0x4001396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public float windmillExtraDrag;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	public float windmillReducedForce;

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x2395128", Offset = "0x2395128", VA = "0x2395128")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x2395240", Offset = "0x2395240", VA = "0x2395240")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x2395254", Offset = "0x2395254", VA = "0x2395254")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x2395258", Offset = "0x2395258", VA = "0x2395258")]
	public void CheckAdjustPivot()
	{
	}

	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x23956E0", Offset = "0x23956E0", VA = "0x23956E0")]
	public void PhysicsStep()
	{
	}

	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x239E4D8", Offset = "0x239E4D8", VA = "0x239E4D8")]
	public StickPhysics()
	{
	}
}
[Token(Token = "0x20001B5")]
public class StickVisual : MonoBehaviour
{
	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public StickCollision collision;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Weapon weapon;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject SummonedModel;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DispelledModel;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<MeshRenderer> MeshesToRecolor;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeshRenderer> XRayMeshes;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<MeshRenderer> ShadowMeshes;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AraTrail Trail;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool usingLight;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int customLightIndex;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject CustomLightPosition;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float lightLength;

	[Token(Token = "0x40013A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Glow2D glow;

	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public XRLineRenderer altLineGlow;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Transform VisualError;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float lerpProgress;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lerpFrames;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion ErrorStartRot;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 ErrorStartPos;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool shouldUpdateVisualError;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	public bool ballMode;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform ballConnectionPoint;

	[Token(Token = "0x40013AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Transform stringSection;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion glowRot;

	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 glowPos;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Transform glowParent;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer AirflowCapsule;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 previousTipPos;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float scrollSpeed;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float fadeSpeed;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 movement;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color trailColor;

	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public ParticleSystem ShatterParticles;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public ParticleSystem ResummonParticles;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float resummonTimer;

	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool permanentlyDisappeared;

	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float disappearanceTimer;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ParticleSystemForceField ParticleForceField;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Transform ParticleForceFieldParent;

	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Vector3> ForceFieldPosCache;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private List<Quaternion> ForceFieldRotCache;

	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int forceFieldFrameDelay;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public AnimationCurve RecoilPosZ;

	[Token(Token = "0x40013C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float recoilTimer;

	[Token(Token = "0x40013C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float baseTrailThickness;

	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x239E8B4", Offset = "0x239E8B4", VA = "0x239E8B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x239E990", Offset = "0x239E990", VA = "0x239E990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x239EDD0", Offset = "0x239EDD0", VA = "0x239EDD0")]
	public void SetColor(Color mainColor, Color metalColor, Color lightColor)
	{
	}

	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x239F440", Offset = "0x239F440", VA = "0x239F440")]
	public void SetCustomMaterial(CustomMaterialSetting setting, bool primary = true)
	{
	}

	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x239F5BC", Offset = "0x239F5BC", VA = "0x239F5BC")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x239FD9C", Offset = "0x239FD9C", VA = "0x239FD9C")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x238EAFC", Offset = "0x238EAFC", VA = "0x238EAFC")]
	public void Resummon(bool instant = false)
	{
	}

	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x23A0668", Offset = "0x23A0668", VA = "0x23A0668")]
	public void Clash(Vector3 point)
	{
	}

	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x2394428", Offset = "0x2394428", VA = "0x2394428")]
	public void Clash(float damage, Vector3 weaponPosition, Quaternion weaponRot, Vector3 point, Vector3 normalDir, bool sendEvent = true)
	{
	}

	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x23A076C", Offset = "0x23A076C", VA = "0x23A076C")]
	public void PermanentlyDisappear()
	{
	}

	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x23A0BB8", Offset = "0x23A0BB8", VA = "0x23A0BB8")]
	public void HideTrail()
	{
	}

	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x23A0C80", Offset = "0x23A0C80", VA = "0x23A0C80")]
	public void ShowTrail()
	{
	}

	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x238F9E0", Offset = "0x238F9E0", VA = "0x238F9E0")]
	public void Dispel(Vector3 clashPoint)
	{
	}

	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x23A0D40", Offset = "0x23A0D40", VA = "0x23A0D40")]
	public StickVisual()
	{
	}
}
[Token(Token = "0x20001B6")]
public class StressTest : MonoBehaviour
{
	[Token(Token = "0x40013C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Stadium;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject Sky1;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject Sky2;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Sky3;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MeshRenderer InverseSphere;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material regularMat;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material lowtexMat;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material hightexMat;

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Material simpleReflMat;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material normalFloorMat;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Material lineLightFloorMat;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MeshRenderer> floorRs;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject MeshPrefab;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject SimpleMeshPrefab;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject ProjectilePrefab;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject ParticlePrefab;

	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public GameObject GlowPrefab;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject ComplexGlowPrefab;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject TrailPrefab;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int numEnemies;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int numPointLights;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int numMeshes;

	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int numProjectiles;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int numParticles;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int numGlows;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<GameObject> Enemies;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public List<GameObject> PointLights;

	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<GameObject> Meshes;

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<GameObject> Projectiles;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<GameObject> Particles;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private List<GameObject> Glows;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TextMeshPro EnemyLabel;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public TextMeshPro PointLightLabel;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TextMeshPro MeshesLabel;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public TextMeshPro ProjectileLabel;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public TextMeshPro ParticlesLabel;

	[Token(Token = "0x40013E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public TextMeshPro GlowLabel;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public List<ONSPAudioSource> SpatializedAudioSources;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool closeup;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int stageNum;

	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x23A0F78", Offset = "0x23A0F78", VA = "0x23A0F78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x23A0F7C", Offset = "0x23A0F7C", VA = "0x23A0F7C")]
	private void UpdateLabels()
	{
	}

	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x23A1308", Offset = "0x23A1308", VA = "0x23A1308")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x23A145C", Offset = "0x23A145C", VA = "0x23A145C")]
	public void ToggleSpotlightBeams()
	{
	}

	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x23A1664", Offset = "0x23A1664", VA = "0x23A1664")]
	public void ToggleSpotlightCircles()
	{
	}

	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x23A186C", Offset = "0x23A186C", VA = "0x23A186C")]
	public void ToggleInverseSphere()
	{
	}

	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x23A1904", Offset = "0x23A1904", VA = "0x23A1904")]
	public void NormalMats()
	{
	}

	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x23A21E8", Offset = "0x23A21E8", VA = "0x23A21E8")]
	public void HiTexMats()
	{
	}

	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x23A2918", Offset = "0x23A2918", VA = "0x23A2918")]
	public void LoTexMats()
	{
	}

	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x23A3048", Offset = "0x23A3048", VA = "0x23A3048")]
	public void SimpleReflMats()
	{
	}

	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x23A392C", Offset = "0x23A392C", VA = "0x23A392C")]
	public void PlusEnemy()
	{
	}

	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x23A3C9C", Offset = "0x23A3C9C", VA = "0x23A3C9C")]
	public void MinusEnemy()
	{
	}

	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x23A3D80", Offset = "0x23A3D80", VA = "0x23A3D80")]
	public void ClearEnemy()
	{
	}

	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x23A3F64", Offset = "0x23A3F64", VA = "0x23A3F64")]
	public void PlusPointLight()
	{
	}

	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x23A4020", Offset = "0x23A4020", VA = "0x23A4020")]
	public void MinusPointLight()
	{
	}

	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x23A40DC", Offset = "0x23A40DC", VA = "0x23A40DC")]
	public void ClearPointLight()
	{
	}

	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x23A424C", Offset = "0x23A424C", VA = "0x23A424C")]
	public void PlusMesh()
	{
	}

	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x23A43D4", Offset = "0x23A43D4", VA = "0x23A43D4")]
	public void PlusSimpleMesh()
	{
	}

	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x23A455C", Offset = "0x23A455C", VA = "0x23A455C")]
	public void MinusMesh()
	{
	}

	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x23A4680", Offset = "0x23A4680", VA = "0x23A4680")]
	public void ClearMesh()
	{
	}

	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x23A482C", Offset = "0x23A482C", VA = "0x23A482C")]
	public void PlusProjectile()
	{
	}

	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x23A49B8", Offset = "0x23A49B8", VA = "0x23A49B8")]
	public void MinusProjectile()
	{
	}

	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x23A4BC0", Offset = "0x23A4BC0", VA = "0x23A4BC0")]
	public void ClearProjectile()
	{
	}

	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x23A4E60", Offset = "0x23A4E60", VA = "0x23A4E60")]
	public void PlusParticle()
	{
	}

	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x23A4FE8", Offset = "0x23A4FE8", VA = "0x23A4FE8")]
	public void PlusTrail()
	{
	}

	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x23A5170", Offset = "0x23A5170", VA = "0x23A5170")]
	public void MinusParticle()
	{
	}

	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x23A5294", Offset = "0x23A5294", VA = "0x23A5294")]
	public void ClearParticle()
	{
	}

	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x23A5440", Offset = "0x23A5440", VA = "0x23A5440")]
	public void PlusGlow()
	{
	}

	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x23A55C8", Offset = "0x23A55C8", VA = "0x23A55C8")]
	public void PlusComplexGlow()
	{
	}

	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x23A5758", Offset = "0x23A5758", VA = "0x23A5758")]
	public void MinusGlow()
	{
	}

	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x23A587C", Offset = "0x23A587C", VA = "0x23A587C")]
	public void ClearGlow()
	{
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x23A5A28", Offset = "0x23A5A28", VA = "0x23A5A28")]
	public void ToggleStadium()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x23A5A84", Offset = "0x23A5A84", VA = "0x23A5A84")]
	public void ToggleSky()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x23A5BA8", Offset = "0x23A5BA8", VA = "0x23A5BA8")]
	public void ToggleCloseUp()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x23A5DC4", Offset = "0x23A5DC4", VA = "0x23A5DC4")]
	public void SwitchStages()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x23A5F34", Offset = "0x23A5F34", VA = "0x23A5F34")]
	public void Back()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x23A60EC", Offset = "0x23A60EC", VA = "0x23A60EC")]
	public void ToggleSpatialization()
	{
	}

	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x23A6270", Offset = "0x23A6270", VA = "0x23A6270")]
	public void Update()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x23A643C", Offset = "0x23A643C", VA = "0x23A643C")]
	public StressTest()
	{
	}
}
[Token(Token = "0x20001B7")]
public class TestbedMenu : MonoBehaviour
{
	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x2182834", Offset = "0x2182834", VA = "0x2182834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x2182838", Offset = "0x2182838", VA = "0x2182838")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x218283C", Offset = "0x218283C", VA = "0x218283C")]
	public TestbedMenu()
	{
	}
}
[Token(Token = "0x20001B8")]
public class TestHandBehavior : EntityBehaviour<ITrackingState>
{
	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform rightHandTransform;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Transform leftHandTransform;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headTransform;

	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform rightHandTransform2;

	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftHandTransform2;

	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Transform headTransform2;

	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int latestFrame;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeoutTimer;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float cumulativeTimeoutTimer;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Fighter fighter;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lerpAmt;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool possessingFighter;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool detatched;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float lastTimeoutDebugLogTime;

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public HandPoseType leftHandPose;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandPoseType rightHandPose;

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x217DA3C", Offset = "0x217DA3C", VA = "0x217DA3C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x217DA48", Offset = "0x217DA48", VA = "0x217DA48", Slot = "18")]
	public override void Attached()
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x217E100", Offset = "0x217E100", VA = "0x217E100", Slot = "19")]
	public override void Detached()
	{
	}

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x217E508", Offset = "0x217E508", VA = "0x217E508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x217F780", Offset = "0x217F780", VA = "0x217F780")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x21827C8", Offset = "0x21827C8", VA = "0x21827C8")]
	public TestHandBehavior()
	{
	}
}
[Token(Token = "0x20001B9")]
public class TestingMenu : MonoBehaviour
{
	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public BasicButton SinglePlayerButton;

	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public BasicButton MultiplayerButton;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public BasicButton StressTestButton;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BasicButton RecordAnimationsButton;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6030", Offset = "0x5C6030")]
	public GameObject EnemyPrefab;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AIPersonality personality;

	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WeaponType testWeapon;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WeaponType testOffhandWeapon;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public WeaponType enemyTestWeapon;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponType enemyTestOffhandWeapon;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TextMeshPro MusicVolumeLabel;

	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject ReadyRoom;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject PreviewMenu;

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x218624C", Offset = "0x218624C", VA = "0x218624C")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x2186250", Offset = "0x2186250", VA = "0x2186250")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x2186448", Offset = "0x2186448", VA = "0x2186448")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x2186478", Offset = "0x2186478", VA = "0x2186478")]
	public void ShowPreviewMenu()
	{
	}

	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x2186688", Offset = "0x2186688", VA = "0x2186688")]
	public void TutorialStart()
	{
	}

	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x2186804", Offset = "0x2186804", VA = "0x2186804")]
	private void TutorialStart2()
	{
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x21869AC", Offset = "0x21869AC", VA = "0x21869AC")]
	public void SinglePlayerStart()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x2186B78", Offset = "0x2186B78", VA = "0x2186B78")]
	public void CampaignStart()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x2186D58", Offset = "0x2186D58", VA = "0x2186D58")]
	public void ReadyRoomStart()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x2186ED0", Offset = "0x2186ED0", VA = "0x2186ED0")]
	private void ReadyRoomStartFrealz()
	{
	}

	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x21873D0", Offset = "0x21873D0", VA = "0x21873D0")]
	public void VolumeUp()
	{
	}

	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x21876E8", Offset = "0x21876E8", VA = "0x21876E8")]
	public void VolumeDown()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x21879FC", Offset = "0x21879FC", VA = "0x21879FC")]
	public void VolumeMute()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x2187C04", Offset = "0x2187C04", VA = "0x2187C04")]
	public void TestSP()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x2187CC4", Offset = "0x2187CC4", VA = "0x2187CC4")]
	public void StressTestStart()
	{
	}

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x2187DD0", Offset = "0x2187DD0", VA = "0x2187DD0")]
	public void ClassSelectStart()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x2187EDC", Offset = "0x2187EDC", VA = "0x2187EDC")]
	public void SwitchToCustomization()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x2187FE8", Offset = "0x2187FE8", VA = "0x2187FE8")]
	public void EmailMenu()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x2188168", Offset = "0x2188168", VA = "0x2188168")]
	public void RecordAnimsStart()
	{
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x21882C0", Offset = "0x21882C0", VA = "0x21882C0")]
	public void SettingsStart()
	{
	}

	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x21883CC", Offset = "0x21883CC", VA = "0x21883CC")]
	public void MenuTestbedStart()
	{
	}

	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x2188524", Offset = "0x2188524", VA = "0x2188524")]
	public void GeoffSceneStart()
	{
	}

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x2188600", Offset = "0x2188600", VA = "0x2188600")]
	public void ReplayStart()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x2188780", Offset = "0x2188780", VA = "0x2188780")]
	public void GeoffTest()
	{
	}

	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x2188810", Offset = "0x2188810", VA = "0x2188810")]
	public TestingMenu()
	{
	}
}
[Token(Token = "0x20001BA")]
public class ThrustRanged : RangedAttack
{
	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject previewObj;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public MeshRenderer preview;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggerWasHeld;

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Transform previewTip;

	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool targeting;

	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool firing;

	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float fireTimer;

	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float fireInterval;

	[Token(Token = "0x4001412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float lerpAmt;

	[Token(Token = "0x4001413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lerpAmt2;

	[Token(Token = "0x4001414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float distFwdTraveled;

	[Token(Token = "0x4001415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float thrustDistThreshold;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 startPos;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool forceEnd;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float damageMod;

	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x218BD40", Offset = "0x218BD40", VA = "0x218BD40")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x218BDFC", Offset = "0x218BDFC", VA = "0x218BDFC", Slot = "6")]
	public override void CleanUp()
	{
	}

	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x218BE00", Offset = "0x218BE00", VA = "0x218BE00", Slot = "4")]
	public override void ManualUpdate()
	{
	}

	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x218C470", Offset = "0x218C470", VA = "0x218C470", Slot = "5")]
	public override void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x218D2EC", Offset = "0x218D2EC", VA = "0x218D2EC")]
	public ThrustRanged()
	{
	}
}
[Token(Token = "0x20001BB")]
public class TipsMenu : MonoBehaviour
{
	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<GameObject> TipPanels;

	[Token(Token = "0x400141A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int currentPanel;

	[Token(Token = "0x400141B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Button NextButton;

	[Token(Token = "0x400141C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button PrevButton;

	[Token(Token = "0x400141D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject openPanel;

	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x218D3B8", Offset = "0x218D3B8", VA = "0x218D3B8")]
	private void SwitchPanels(GameObject to)
	{
	}

	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x218D798", Offset = "0x218D798", VA = "0x218D798")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x218D8DC", Offset = "0x218D8DC", VA = "0x218D8DC")]
	public void Back()
	{
	}

	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x218D9E4", Offset = "0x218D9E4", VA = "0x218D9E4")]
	public void PrevPage()
	{
	}

	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x218DB18", Offset = "0x218DB18", VA = "0x218DB18")]
	public void NextPage()
	{
	}

	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x218DCB0", Offset = "0x218DCB0", VA = "0x218DCB0")]
	public TipsMenu()
	{
	}
}
[Token(Token = "0x20001BC")]
public class TrackedInput : MonoBehaviour
{
	[Token(Token = "0x400141E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject guide;

	[Token(Token = "0x400141F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public short posX;

	[Token(Token = "0x4001420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public short posY;

	[Token(Token = "0x4001421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public short posZ;

	[Token(Token = "0x4001422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public short rotX;

	[Token(Token = "0x4001423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public short rotY;

	[Token(Token = "0x4001424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public short rotZ;

	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x218DD44", Offset = "0x218DD44", VA = "0x218DD44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x218DD48", Offset = "0x218DD48", VA = "0x218DD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x218DD4C", Offset = "0x218DD4C", VA = "0x218DD4C")]
	public TrackedInput()
	{
	}
}
[Token(Token = "0x20001BD")]
public class TrainingMenu : MonoBehaviour
{
	[Token(Token = "0x4001425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Fighter trainingOpponent;

	[Token(Token = "0x4001426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool forceSlomo;

	[Token(Token = "0x4001427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject OppBlockingCheckmark;

	[Token(Token = "0x4001428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject ForcedSlomoCheckmark;

	[Token(Token = "0x4001429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject StartAttackStuff;

	[Token(Token = "0x400142A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GameObject StopAttackStuff;

	[Token(Token = "0x400142B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button EasyKnightOpponentButton;

	[Token(Token = "0x400142C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Button EasyDuelistOpponentButton;

	[Token(Token = "0x400142D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button EasyMonkOpponentButton;

	[Token(Token = "0x400142E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Button EasyNinjaOpponentButton;

	[Token(Token = "0x400142F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button EasyCrusaderOpponentButton;

	[Token(Token = "0x4001430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Button EasyReaperOpponentButton;

	[Token(Token = "0x4001431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Button EasySamuraiOpponentButton;

	[Token(Token = "0x4001432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Button EasyBerserkerOpponentButton;

	[Token(Token = "0x4001433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button MediumKnightOpponentButton;

	[Token(Token = "0x4001434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Button MediumDuelistOpponentButton;

	[Token(Token = "0x4001435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button MediumMonkOpponentButton;

	[Token(Token = "0x4001436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Button MediumNinjaOpponentButton;

	[Token(Token = "0x4001437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Button MediumCrusaderOpponentButton;

	[Token(Token = "0x4001438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Button MediumReaperOpponentButton;

	[Token(Token = "0x4001439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Button MediumSamuraiOpponentButton;

	[Token(Token = "0x400143A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Button MediumBerserkerOpponentButton;

	[Token(Token = "0x400143B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Button HardKnightOpponentButton;

	[Token(Token = "0x400143C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Button HardDuelistOpponentButton;

	[Token(Token = "0x400143D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Button HardMonkOpponentButton;

	[Token(Token = "0x400143E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Button HardNinjaOpponentButton;

	[Token(Token = "0x400143F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Button HardCrusaderOpponentButton;

	[Token(Token = "0x4001440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Button HardReaperOpponentButton;

	[Token(Token = "0x4001441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Button HardSamuraiOpponentButton;

	[Token(Token = "0x4001442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Button HardBerserkerOpponentButton;

	[Token(Token = "0x4001443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FighterConfiguration EasyKnight;

	[Token(Token = "0x4001444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public FighterConfiguration EasyDuelist;

	[Token(Token = "0x4001445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FighterConfiguration EasyMonk;

	[Token(Token = "0x4001446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public FighterConfiguration EasyNinja;

	[Token(Token = "0x4001447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public FighterConfiguration EasyCrusader;

	[Token(Token = "0x4001448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public FighterConfiguration EasyReaper;

	[Token(Token = "0x4001449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public FighterConfiguration EasySamurai;

	[Token(Token = "0x400144A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public FighterConfiguration EasyBerserker;

	[Token(Token = "0x400144B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FighterConfiguration MediumKnight;

	[Token(Token = "0x400144C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public FighterConfiguration MediumDuelist;

	[Token(Token = "0x400144D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FighterConfiguration MediumMonk;

	[Token(Token = "0x400144E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public FighterConfiguration MediumNinja;

	[Token(Token = "0x400144F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FighterConfiguration MediumCrusader;

	[Token(Token = "0x4001450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public FighterConfiguration MediumReaper;

	[Token(Token = "0x4001451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FighterConfiguration MediumSamurai;

	[Token(Token = "0x4001452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public FighterConfiguration MediumBerserker;

	[Token(Token = "0x4001453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FighterConfiguration HardKnight;

	[Token(Token = "0x4001454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public FighterConfiguration HardDuelist;

	[Token(Token = "0x4001455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FighterConfiguration HardMonk;

	[Token(Token = "0x4001456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public FighterConfiguration HardNinja;

	[Token(Token = "0x4001457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public FighterConfiguration HardCrusader;

	[Token(Token = "0x4001458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public FighterConfiguration HardReaper;

	[Token(Token = "0x4001459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public FighterConfiguration HardSamurai;

	[Token(Token = "0x400145A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public FighterConfiguration HardBerserker;

	[Token(Token = "0x400145B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool loopingMelee;

	[Token(Token = "0x400145C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	private bool loopingRanged;

	[Token(Token = "0x400145D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Image knightBadgeBG;

	[Token(Token = "0x400145E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Image duelistBadgeBG;

	[Token(Token = "0x400145F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public Image monkBadgeBG;

	[Token(Token = "0x4001460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Image ninjaBadgeBG;

	[Token(Token = "0x4001461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Image crusaderBadgeBG;

	[Token(Token = "0x4001462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Image reaperBadgeBG;

	[Token(Token = "0x4001463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Image samuraiBadgeBG;

	[Token(Token = "0x4001464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Image berserkerBadgeBG;

	[Token(Token = "0x4001465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Image knightBadgeFG;

	[Token(Token = "0x4001466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Image duelistBadgeFG;

	[Token(Token = "0x4001467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Image monkBadgeFG;

	[Token(Token = "0x4001468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Image ninjaBadgeFG;

	[Token(Token = "0x4001469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Image crusaderBadgeFG;

	[Token(Token = "0x400146A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Image reaperBadgeFG;

	[Token(Token = "0x400146B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Image samuraiBadgeFG;

	[Token(Token = "0x400146C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image berserkerBadgeFG;

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x218DD54", Offset = "0x218DD54", VA = "0x218DD54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x2194F0C", Offset = "0x2194F0C", VA = "0x2194F0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x2194FC0", Offset = "0x2194FC0", VA = "0x2194FC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x2196518", Offset = "0x2196518", VA = "0x2196518")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x2196618", Offset = "0x2196618", VA = "0x2196618")]
	public void ToggleForcedSlomo()
	{
	}

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x2196924", Offset = "0x2196924", VA = "0x2196924")]
	public void ToggleOpponentBlocking()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x2196A74", Offset = "0x2196A74", VA = "0x2196A74")]
	public void TriggerMeleeAttack()
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x2196B38", Offset = "0x2196B38", VA = "0x2196B38")]
	public void TriggerRangedAttack()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x2196BFC", Offset = "0x2196BFC", VA = "0x2196BFC")]
	public void StartMeleeAttacks()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x2196D10", Offset = "0x2196D10", VA = "0x2196D10")]
	public void StartRangedAttacks()
	{
	}

	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x2196E24", Offset = "0x2196E24", VA = "0x2196E24")]
	public void StopAttacks()
	{
	}

	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x2196F38", Offset = "0x2196F38", VA = "0x2196F38")]
	private void ResetButtonsAndRecolorStadium()
	{
	}

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x218FEEC", Offset = "0x218FEEC", VA = "0x218FEEC")]
	public void SelectKnight()
	{
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x2190510", Offset = "0x2190510", VA = "0x2190510")]
	public void SelectDuelist()
	{
	}

	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x2190B34", Offset = "0x2190B34", VA = "0x2190B34")]
	public void SelectMonk()
	{
	}

	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x2191158", Offset = "0x2191158", VA = "0x2191158")]
	public void SelectNinja()
	{
	}

	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x21929E8", Offset = "0x21929E8", VA = "0x21929E8")]
	public void SelectCrusader()
	{
	}

	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x219177C", Offset = "0x219177C", VA = "0x219177C")]
	public void SelectReaper()
	{
	}

	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x2191DA0", Offset = "0x2191DA0", VA = "0x2191DA0")]
	public void SelectSamurai()
	{
	}

	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x21923C4", Offset = "0x21923C4", VA = "0x21923C4")]
	public void SelectBerserker()
	{
	}

	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x219300C", Offset = "0x219300C", VA = "0x219300C")]
	public void SelectEasyKnightOpponent()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x21933EC", Offset = "0x21933EC", VA = "0x21933EC")]
	public void SelectEasyDuelistOpponent()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x21937CC", Offset = "0x21937CC", VA = "0x21937CC")]
	public void SelectEasyMonkOpponent()
	{
	}

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x2193BAC", Offset = "0x2193BAC", VA = "0x2193BAC")]
	public void SelectEasyNinjaOpponent()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x2194B2C", Offset = "0x2194B2C", VA = "0x2194B2C")]
	public void SelectEasyCrusaderOpponent()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x2193F8C", Offset = "0x2193F8C", VA = "0x2193F8C")]
	public void SelectEasyReaperOpponent()
	{
	}

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x219436C", Offset = "0x219436C", VA = "0x219436C")]
	public void SelectEasySamuraiOpponent()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x2197720", Offset = "0x2197720", VA = "0x2197720")]
	public void SelectMediumKnightOpponent()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x2197B00", Offset = "0x2197B00", VA = "0x2197B00")]
	public void SelectMediumDuelistOpponent()
	{
	}

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x2197EE0", Offset = "0x2197EE0", VA = "0x2197EE0")]
	public void SelectMediumMonkOpponent()
	{
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x21982C0", Offset = "0x21982C0", VA = "0x21982C0")]
	public void SelectMediumNinjaOpponent()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x21986A0", Offset = "0x21986A0", VA = "0x21986A0")]
	public void SelectMediumCrusaderOpponent()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x2198A80", Offset = "0x2198A80", VA = "0x2198A80")]
	public void SelectMediumReaperOpponent()
	{
	}

	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x2198E60", Offset = "0x2198E60", VA = "0x2198E60")]
	public void SelectMediumSamuraiOpponent()
	{
	}

	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x2199240", Offset = "0x2199240", VA = "0x2199240")]
	public void SelectHardKnightOpponent()
	{
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x2199620", Offset = "0x2199620", VA = "0x2199620")]
	public void SelectHardDuelistOpponent()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x2199A00", Offset = "0x2199A00", VA = "0x2199A00")]
	public void SelectHardMonkOpponent()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x2199DE0", Offset = "0x2199DE0", VA = "0x2199DE0")]
	public void SelectHardNinjaOpponent()
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x219A1C0", Offset = "0x219A1C0", VA = "0x219A1C0")]
	public void SelectHardCrusaderOpponent()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x219A5A0", Offset = "0x219A5A0", VA = "0x219A5A0")]
	public void SelectHardReaperOpponent()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x219A980", Offset = "0x219A980", VA = "0x219A980")]
	public void SelectHardSamuraiOpponent()
	{
	}

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x219474C", Offset = "0x219474C", VA = "0x219474C")]
	public void SelectEasyBerserkerOpponent()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x219AD60", Offset = "0x219AD60", VA = "0x219AD60")]
	public void SelectMediumBerserkerOpponent()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x219B140", Offset = "0x219B140", VA = "0x219B140")]
	public void SelectHardBerserkerOpponent()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x219B520", Offset = "0x219B520", VA = "0x219B520")]
	public TrainingMenu()
	{
	}
}
[Token(Token = "0x20001BE")]
public class Tutorial : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CBC", Offset = "0x5C2CBC")]
	private sealed class <ShowPhase>d__124 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Tutorial <>4__this;

		[Token(Token = "0x170002DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002614")]
			[Address(RVA = "0x231AE60", Offset = "0x231AE60", VA = "0x231AE60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002616")]
			[Address(RVA = "0x231AEF0", Offset = "0x231AEF0", VA = "0x231AEF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002611")]
		[Address(RVA = "0x2319F58", Offset = "0x2319F58", VA = "0x2319F58")]
		[DebuggerHidden]
		public <ShowPhase>d__124(int <>1__state)
		{
		}

		[Token(Token = "0x6002612")]
		[Address(RVA = "0x231AD30", Offset = "0x231AD30", VA = "0x231AD30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002613")]
		[Address(RVA = "0x231AD34", Offset = "0x231AD34", VA = "0x231AD34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002615")]
		[Address(RVA = "0x231AE68", Offset = "0x231AE68", VA = "0x231AE68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000547")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CCC", Offset = "0x5C2CCC")]
	private sealed class <StartPhase>d__125 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Tutorial <>4__this;

		[Token(Token = "0x170002DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600261A")]
			[Address(RVA = "0x231DC14", Offset = "0x231DC14", VA = "0x231DC14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600261C")]
			[Address(RVA = "0x231DCA4", Offset = "0x231DCA4", VA = "0x231DCA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002617")]
		[Address(RVA = "0x2319F78", Offset = "0x2319F78", VA = "0x2319F78")]
		[DebuggerHidden]
		public <StartPhase>d__125(int <>1__state)
		{
		}

		[Token(Token = "0x6002618")]
		[Address(RVA = "0x231AEF8", Offset = "0x231AEF8", VA = "0x231AEF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002619")]
		[Address(RVA = "0x231AEFC", Offset = "0x231AEFC", VA = "0x231AEFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600261B")]
		[Address(RVA = "0x231DC1C", Offset = "0x231DC1C", VA = "0x231DC1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400146D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TutorialType currentType;

	[Token(Token = "0x400146E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<Fighter> enemies;

	[Token(Token = "0x400146F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public MatchConfiguration tutorialMatchConfig;

	[Token(Token = "0x4001470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TutorialPhase BlockRanged;

	[Token(Token = "0x4001471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public TutorialPhase ShootRanged;

	[Token(Token = "0x4001472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TutorialPhase StartBlitz;

	[Token(Token = "0x4001473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TutorialPhase RechargeWeapon;

	[Token(Token = "0x4001474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TutorialPhase MeleeAttack2;

	[Token(Token = "0x4001475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TutorialPhase Retreat;

	[Token(Token = "0x4001476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TutorialPhase Waiting1;

	[Token(Token = "0x4001477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public TutorialPhase Waiting2;

	[Token(Token = "0x4001478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TutorialPhase Waiting3;

	[Token(Token = "0x4001479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public TutorialPhase Melee3;

	[Token(Token = "0x400147A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TutorialPhase MeleeDefense;

	[Token(Token = "0x400147B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TutorialPhase Chargeup;

	[Token(Token = "0x400147C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TutorialPhase Final;

	[Token(Token = "0x400147D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TutorialPhase FinalFinal;

	[Token(Token = "0x400147E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6048", Offset = "0x5C6048")]
	public TutorialPhase ContextEnergyFull;

	[Token(Token = "0x400147F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public TutorialPhase ContextNoGhostHealth;

	[Token(Token = "0x4001480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TutorialPhase ContextOutOfEnergy;

	[Token(Token = "0x4001481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public TutorialPhase ContextGripWeapon;

	[Token(Token = "0x4001482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TutorialPhase ContextResummon;

	[Token(Token = "0x4001483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6060", Offset = "0x5C6060")]
	public FighterConfiguration RangedEnemyConfig;

	[Token(Token = "0x4001484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public FighterConfiguration MeleeEnemyConfig;

	[Token(Token = "0x4001485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public GameObject QuitTutorialButton;

	[Token(Token = "0x4001486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AIPersonality idlePersonality;

	[Token(Token = "0x4001487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public AIPersonality aggroPersonality;

	[Token(Token = "0x4001488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6078", Offset = "0x5C6078")]
	public ResourceBar PlayerHealthBar;

	[Token(Token = "0x4001489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ResourceBar PlayerShieldBar;

	[Token(Token = "0x400148A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ResourceBar PlayerEnergyBar;

	[Token(Token = "0x400148B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public ResourceBar EnemyHealthBar;

	[Token(Token = "0x400148C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public ResourceBar EnemyShieldBar;

	[Token(Token = "0x400148D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public ResourceBar EnemyEnergyBar;

	[Token(Token = "0x400148E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6090", Offset = "0x5C6090")]
	public TutorialPhase activePhase;

	[Token(Token = "0x400148F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public TutorialPhase activeContextualPhase;

	[Token(Token = "0x4001490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float timer;

	[Token(Token = "0x4001491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float maxSpeed;

	[Token(Token = "0x4001492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool hitTaken;

	[Token(Token = "0x4001493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool wasSummoned;

	[Token(Token = "0x4001494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int numResummons;

	[Token(Token = "0x4001495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int numProjectilesBlocked;

	[Token(Token = "0x4001496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C60A8", Offset = "0x5C60A8")]
	private Fighter illustrationFighter;

	[Token(Token = "0x4001497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FighterConfiguration testIllustrationConfig;

	[Token(Token = "0x4001498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public FighterConfiguration blitzIllustrationConfig;

	[Token(Token = "0x4001499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FighterConfiguration retreatIllustrationConfig;

	[Token(Token = "0x400149A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public FighterConfiguration doubleSwordRangedAttackConfig;

	[Token(Token = "0x400149B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FighterConfiguration rapierRangedAttackConfig;

	[Token(Token = "0x400149C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public FighterConfiguration qstaffRangedAttackConfig;

	[Token(Token = "0x400149D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FighterConfiguration katarRangedAttackConfig;

	[Token(Token = "0x400149E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public FighterConfiguration flailRangedAttackConfig;

	[Token(Token = "0x400149F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public FighterConfiguration scytheRangedAttackConfig;

	[Token(Token = "0x40014A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public FighterConfiguration katanaRangedAttackConfig;

	[Token(Token = "0x40014A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public FighterConfiguration warhammerRangedAttackConfig;

	[Token(Token = "0x40014A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C60C0", Offset = "0x5C60C0")]
	public MeshRenderer blitzDiagram;

	[Token(Token = "0x40014A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MeshRenderer retreatDiagram;

	[Token(Token = "0x40014A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public MeshRenderer rangedDiagram;

	[Token(Token = "0x40014A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public MeshRenderer gripDiagram1;

	[Token(Token = "0x40014A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public MeshRenderer gripDiagram2;

	[Token(Token = "0x40014A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public MeshRenderer gripDiagram3;

	[Token(Token = "0x40014A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public MeshRenderer gripDiagram4;

	[Token(Token = "0x40014A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public MeshRenderer aDiagram1;

	[Token(Token = "0x40014AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public MeshRenderer aDiagram2;

	[Token(Token = "0x40014AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public MeshRenderer aDiagram3;

	[Token(Token = "0x40014AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Material noButtonDiagramSide;

	[Token(Token = "0x40014AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Material noButtonDiagramFront;

	[Token(Token = "0x40014AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Material aButtonDiagram;

	[Token(Token = "0x40014AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Material triggerButtonDiagram;

	[Token(Token = "0x40014B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public GameObject VulnerabilityLabel;

	[Token(Token = "0x40014B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject StartBlitz1;

	[Token(Token = "0x40014B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public GameObject StartBlitz2;

	[Token(Token = "0x40014B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public GameObject StartBlitz3;

	[Token(Token = "0x40014B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public GameObject ShieldInfo;

	[Token(Token = "0x40014B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject ShieldBarInfo;

	[Token(Token = "0x40014B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public GameObject ShieldKatanaInfo;

	[Token(Token = "0x40014B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Material VivenoButtonDiagramSide;

	[Token(Token = "0x40014B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Material VivenoButtonDiagramFront;

	[Token(Token = "0x40014B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Material ViveaButtonDiagram;

	[Token(Token = "0x40014BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public Material VivetriggerButtonDiagram;

	[Token(Token = "0x40014BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Material ViveGripButtonDiagram;

	[Token(Token = "0x40014BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public Material IndexnoButtonDiagramSide;

	[Token(Token = "0x40014BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Material IndexnoButtonDiagramFront;

	[Token(Token = "0x40014BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public Material IndexaButtonDiagram;

	[Token(Token = "0x40014BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public Material IndextriggerButtonDiagram;

	[Token(Token = "0x40014C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public Material IndexGripButtonDiagram;

	[Token(Token = "0x40014C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject ViveRetreatText;

	[Token(Token = "0x40014C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public GameObject OtherRetreatText;

	[Token(Token = "0x40014C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject ViveBlitzText;

	[Token(Token = "0x40014C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public GameObject OtherBlitzText;

	[Token(Token = "0x40014C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public GameObject ViveBlitzText2;

	[Token(Token = "0x40014C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	public GameObject OtherBlitzText2;

	[Token(Token = "0x40014C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject ViveChargeupText;

	[Token(Token = "0x40014C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public GameObject IndexChargeupText;

	[Token(Token = "0x40014C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject OculusChargeupText;

	[Token(Token = "0x40014CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C60D8", Offset = "0x5C60D8")]
	public TutorialPhase DoubleswordRanged;

	[Token(Token = "0x40014CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public TutorialPhase RapierRanged;

	[Token(Token = "0x40014CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	public TutorialPhase QstaffRanged;

	[Token(Token = "0x40014CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public TutorialPhase KatarRanged;

	[Token(Token = "0x40014CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public TutorialPhase FlailRanged;

	[Token(Token = "0x40014CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public TutorialPhase ScytheRanged;

	[Token(Token = "0x40014D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public TutorialPhase KatanaRanged;

	[Token(Token = "0x40014D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public TutorialPhase WarhammerRanged;

	[Token(Token = "0x40014D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public TutorialPhase DoubleswordBlockRanged;

	[Token(Token = "0x40014D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TutorialPhase QstaffBlockRanged;

	[Token(Token = "0x40014D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public TutorialPhase ScytheBlockRanged;

	[Token(Token = "0x40014D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public TutorialPhase KatanaBlockRanged;

	[Token(Token = "0x40014D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public TutorialPhase OtherBlockRanged;

	[Token(Token = "0x40014D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private float blockTimer;

	[Token(Token = "0x40014D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private float resummonTimer;

	[Token(Token = "0x40014D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private float gripTimer;

	[Token(Token = "0x40014DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	private float rechargeTimer;

	[Token(Token = "0x40014DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private float attackFailTimer;

	[Token(Token = "0x40014DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private float contextDisplayTimer;

	[Token(Token = "0x40014DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float notLookingTimer;

	[Token(Token = "0x40014DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float lookDegreeRadius;

	[Token(Token = "0x40014DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private bool triggerWasHeld;

	[Token(Token = "0x40014E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	public Coroutine CoR1;

	[Token(Token = "0x40014E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Coroutine CoR2;

	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x2310628", Offset = "0x2310628", VA = "0x2310628")]
	public void StartTutorial()
	{
	}

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x2312118", Offset = "0x2312118", VA = "0x2312118")]
	public void ResetTutorial()
	{
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x2312AFC", Offset = "0x2312AFC", VA = "0x2312AFC")]
	private void SetTutorialSlowdown(float t)
	{
	}

	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x2312BAC", Offset = "0x2312BAC", VA = "0x2312BAC")]
	private void SetPlayerSlowdown(float t)
	{
	}

	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x2312C5C", Offset = "0x2312C5C", VA = "0x2312C5C")]
	public void QuitTutorial()
	{
	}

	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x2312F6C", Offset = "0x2312F6C", VA = "0x2312F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x2312904", Offset = "0x2312904", VA = "0x2312904")]
	private void MoveOnToPhase(TutorialPhase phase, float showDelay = 0f, float startDelay = 0f)
	{
	}

	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x2319DF0", Offset = "0x2319DF0", VA = "0x2319DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDC7C", Offset = "0x5CDC7C")]
	private IEnumerator ShowPhase(TutorialPhase phase, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x2319EA4", Offset = "0x2319EA4", VA = "0x2319EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDCF4", Offset = "0x5CDCF4")]
	private IEnumerator StartPhase(TutorialPhase phase, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x2319AA8", Offset = "0x2319AA8", VA = "0x2319AA8")]
	private void CleanUpIllustrationFighter()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x2319F98", Offset = "0x2319F98", VA = "0x2319F98")]
	public void TutWaveDefeated()
	{
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x2319030", Offset = "0x2319030", VA = "0x2319030")]
	public void QuitTutorialToCustomizeMenu()
	{
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x231AC90", Offset = "0x231AC90", VA = "0x231AC90")]
	public Tutorial()
	{
	}
}
[Token(Token = "0x20001BF")]
public enum TutorialType
{
	[Token(Token = "0x40014E3")]
	Longsword,
	[Token(Token = "0x40014E4")]
	Doublesword,
	[Token(Token = "0x40014E5")]
	Rapier,
	[Token(Token = "0x40014E6")]
	Quarterstaff,
	[Token(Token = "0x40014E7")]
	Katars,
	[Token(Token = "0x40014E8")]
	Flail
}
[Token(Token = "0x20001C0")]
public class TutorialPhase : MonoBehaviour
{
	[Token(Token = "0x40014E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Transform centerPoint;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x2319468", Offset = "0x2319468", VA = "0x2319468")]
	public void Open()
	{
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x23197AC", Offset = "0x23197AC", VA = "0x23197AC")]
	public void Close()
	{
	}

	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x231DCAC", Offset = "0x231DCAC", VA = "0x231DCAC")]
	private void Deactivate()
	{
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x231DCE4", Offset = "0x231DCE4", VA = "0x231DCE4")]
	public TutorialPhase()
	{
	}
}
[Token(Token = "0x20001C1")]
public class Ubermodal : MonoBehaviour
{
	[Token(Token = "0x2000548")]
	public enum ButtonType
	{
		[Token(Token = "0x400295B")]
		Okay,
		[Token(Token = "0x400295C")]
		YesNo
	}

	[Token(Token = "0x2000549")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CDC", Offset = "0x5C2CDC")]
	private sealed class <InvokeAfterDelay>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400295D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400295E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400295F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Ubermodal <>4__this;

		[Token(Token = "0x4002961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string invokation;

		[Token(Token = "0x4002962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float <timer>5__2;

		[Token(Token = "0x170002E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002620")]
			[Address(RVA = "0x23246C4", Offset = "0x23246C4", VA = "0x23246C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002622")]
			[Address(RVA = "0x2324754", Offset = "0x2324754", VA = "0x2324754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600261D")]
		[Address(RVA = "0x231EE10", Offset = "0x231EE10", VA = "0x231EE10")]
		[DebuggerHidden]
		public <InvokeAfterDelay>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600261E")]
		[Address(RVA = "0x23245A4", Offset = "0x23245A4", VA = "0x23245A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600261F")]
		[Address(RVA = "0x23245A8", Offset = "0x23245A8", VA = "0x23245A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002621")]
		[Address(RVA = "0x23246CC", Offset = "0x23246CC", VA = "0x23246CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40014EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI HeaderText;

	[Token(Token = "0x40014EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI InfoText;

	[Token(Token = "0x40014EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject OkayButton;

	[Token(Token = "0x40014ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject YesNoButtons;

	[Token(Token = "0x40014EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public UbermodalMode mode;

	[Token(Token = "0x40014EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x231DCEC", Offset = "0x231DCEC", VA = "0x231DCEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x231E288", Offset = "0x231E288", VA = "0x231E288")]
	public void MatchFoundAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x231ED44", Offset = "0x231ED44", VA = "0x231ED44")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDD6C", Offset = "0x5CDD6C")]
	private IEnumerator InvokeAfterDelay(float delay, string invokation)
	{
		return null;
	}

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x231EE30", Offset = "0x231EE30", VA = "0x231EE30")]
	public void NoInternetAnnouncement()
	{
	}

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x231F3EC", Offset = "0x231F3EC", VA = "0x231F3EC")]
	public void TimeoutAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x231FA64", Offset = "0x231FA64", VA = "0x231FA64")]
	public void LostConnectionAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x23200D0", Offset = "0x23200D0", VA = "0x23200D0")]
	public void DisconnectAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x23206EC", Offset = "0x23206EC", VA = "0x23206EC")]
	public void InternetNotReachableAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x2320D58", Offset = "0x2320D58", VA = "0x2320D58")]
	public void InformationalAnnouncement(string header, string info, UbermodalMode ubermode, float time)
	{
	}

	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x23212B0", Offset = "0x23212B0", VA = "0x23212B0")]
	public void Announcement(string header, string info, UbermodalMode ubermode, ButtonType buttons, Vector3 offset)
	{
	}

	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x23212F8", Offset = "0x23212F8", VA = "0x23212F8")]
	public void OkayButtonAnnouncement(string header, string info, UbermodalMode ubermode)
	{
	}

	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x232178C", Offset = "0x232178C", VA = "0x232178C")]
	public void YesNoButtonAnnouncement(string header, string info, UbermodalMode ubermode)
	{
	}

	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x2321C20", Offset = "0x2321C20", VA = "0x2321C20")]
	public void RestartAnnouncement(float time)
	{
	}

	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x2322568", Offset = "0x2322568", VA = "0x2322568")]
	public void Okay()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x23227BC", Offset = "0x23227BC", VA = "0x23227BC")]
	public void Yes()
	{
	}

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x2322FE4", Offset = "0x2322FE4", VA = "0x2322FE4")]
	public void No()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x2322C58", Offset = "0x2322C58", VA = "0x2322C58")]
	public void MatchSurrender()
	{
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x232316C", Offset = "0x232316C", VA = "0x232316C")]
	public void FirmRestart()
	{
	}

	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x2323430", Offset = "0x2323430", VA = "0x2323430")]
	public void FadeToRestart()
	{
	}

	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x23234EC", Offset = "0x23234EC", VA = "0x23234EC")]
	public void Restart()
	{
	}

	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x23234F0", Offset = "0x23234F0", VA = "0x23234F0")]
	public void QuitToMPMenu()
	{
	}

	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x2323B04", Offset = "0x2323B04", VA = "0x2323B04")]
	public void QuitToMainMenu()
	{
	}

	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x2324030", Offset = "0x2324030", VA = "0x2324030")]
	public void QuitToMPMatch()
	{
	}

	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x232439C", Offset = "0x232439C", VA = "0x232439C")]
	public void ConsiderDismiss()
	{
	}

	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x23244F8", Offset = "0x23244F8", VA = "0x23244F8")]
	public Ubermodal()
	{
	}
}
[Token(Token = "0x20001C2")]
public enum UbermodalMode
{
	[Token(Token = "0x40014F1")]
	MatchFound,
	[Token(Token = "0x40014F2")]
	LostConnection,
	[Token(Token = "0x40014F3")]
	NoInternet,
	[Token(Token = "0x40014F4")]
	LevelUp,
	[Token(Token = "0x40014F5")]
	LeagueUp,
	[Token(Token = "0x40014F6")]
	Disconnect,
	[Token(Token = "0x40014F7")]
	InternetNotReachable,
	[Token(Token = "0x40014F8")]
	HQVideoMode,
	[Token(Token = "0x40014F9")]
	CachedRecordings,
	[Token(Token = "0x40014FA")]
	OpponentTimedOut,
	[Token(Token = "0x40014FB")]
	ConfirmCoinUnlock,
	[Token(Token = "0x40014FC")]
	ConfirmDlcUnlock,
	[Token(Token = "0x40014FD")]
	MatchSurrender,
	[Token(Token = "0x40014FE")]
	Informational,
	[Token(Token = "0x40014FF")]
	JoinInvitation,
	[Token(Token = "0x4001500")]
	NotEnoughCoins
}
[Token(Token = "0x20001C3")]
public class VideoRecorder : MonoBehaviour
{
	[Token(Token = "0x200054A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CEC", Offset = "0x5C2CEC")]
	private sealed class <RecordVideo>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoRecorder <>4__this;

		[Token(Token = "0x4002966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float waitBeforeRecording;

		[Token(Token = "0x4002967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool fixedTime;

		[Token(Token = "0x4002968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int width;

		[Token(Token = "0x4002969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int height;

		[Token(Token = "0x170002E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002626")]
			[Address(RVA = "0x232E6E0", Offset = "0x232E6E0", VA = "0x232E6E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002628")]
			[Address(RVA = "0x232E770", Offset = "0x232E770", VA = "0x232E770", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002623")]
		[Address(RVA = "0x232CF68", Offset = "0x232CF68", VA = "0x232CF68")]
		[DebuggerHidden]
		public <RecordVideo>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x6002624")]
		[Address(RVA = "0x232DF84", Offset = "0x232DF84", VA = "0x232DF84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002625")]
		[Address(RVA = "0x232DF88", Offset = "0x232DF88", VA = "0x232DF88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002627")]
		[Address(RVA = "0x232E6E8", Offset = "0x232E6E8", VA = "0x232E6E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool recording;

	[Token(Token = "0x4001502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI debugBox;

	[Token(Token = "0x4001503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float recordingLength;

	[Token(Token = "0x4001504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeRemaining;

	[Token(Token = "0x4001505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool recordFromTexture;

	[Token(Token = "0x4001506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool recordAudio;

	[Token(Token = "0x4001507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool uploadFlag;

	[Token(Token = "0x4001508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool fixedTimeRecording;

	[Token(Token = "0x4001509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool endRecordingFlag;

	[Token(Token = "0x400150A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public MP4Recorder videoRecorder;

	[Token(Token = "0x400150B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RealtimeClock recordingClock;

	[Token(Token = "0x400150C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public RenderTexture replayTex;

	[Token(Token = "0x400150D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTextureInput textureInput;

	[Token(Token = "0x400150E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Camera replayCam;

	[Token(Token = "0x400150F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CameraInput cameraInput;

	[Token(Token = "0x4001510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioListener audioListener;

	[Token(Token = "0x4001511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioInput audioInput;

	[Token(Token = "0x4001512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool killRecording;

	[Token(Token = "0x4001513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string videoPath;

	[Token(Token = "0x4001514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool activelyRecording;

	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x232CE6C", Offset = "0x232CE6C", VA = "0x232CE6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDDE4", Offset = "0x5CDDE4")]
	public IEnumerator RecordVideo(float waitBeforeRecording, int width, int height, bool fixedTime)
	{
		return null;
	}

	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x232CF88", Offset = "0x232CF88", VA = "0x232CF88")]
	public void StartRecording(int width, int height)
	{
	}

	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x232D450", Offset = "0x232D450", VA = "0x232D450")]
	public void StopRecording(bool kill = false)
	{
	}

	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x232D618", Offset = "0x232D618", VA = "0x232D618")]
	public void PauseRecording()
	{
	}

	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x232D778", Offset = "0x232D778", VA = "0x232D778")]
	public void ResumeRecording()
	{
	}

	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x232D9D4", Offset = "0x232D9D4", VA = "0x232D9D4")]
	public void DeleteVideoFile()
	{
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x232DA68", Offset = "0x232DA68", VA = "0x232DA68")]
	public void UploadFlagOff()
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x232DA74", Offset = "0x232DA74", VA = "0x232DA74")]
	private void SavePath(string path)
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x232DB3C", Offset = "0x232DB3C", VA = "0x232DB3C")]
	public void DeleteCachedVideos()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x232DC80", Offset = "0x232DC80", VA = "0x232DC80")]
	private void OnRecording(string path)
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x232DEF8", Offset = "0x232DEF8", VA = "0x232DEF8")]
	public VideoRecorder()
	{
	}
}
[Token(Token = "0x20001C4")]
public class ViveportHelper
{
	[Token(Token = "0x4001515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x4001516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string APP_ID_WAVE;

	[Token(Token = "0x4001517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string APP_KEY;

	[Token(Token = "0x4001518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static string userId;

	[Token(Token = "0x4001519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string username;

	[Token(Token = "0x400151A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool init;

	[Token(Token = "0x400151B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private static bool userStatsReady;

	[Token(Token = "0x400151C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	private static bool userProfileReady;

	[Token(Token = "0x17000079")]
	public static bool isReady
	{
		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x247E808", Offset = "0x247E808", VA = "0x247E808")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x247E91C", Offset = "0x247E91C", VA = "0x247E91C")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x247EAF4", Offset = "0x247EAF4", VA = "0x247EAF4")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x247ED24", Offset = "0x247ED24", VA = "0x247ED24")]
	private static void UserStatsIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x247EF54", Offset = "0x247EF54", VA = "0x247EF54")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x247F0B8", Offset = "0x247F0B8", VA = "0x247F0B8")]
	public static bool TryFetchUsername()
	{
		return default(bool);
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x247F294", Offset = "0x247F294", VA = "0x247F294")]
	public static void SetAchievement(string achievementId)
	{
	}

	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x247F3D4", Offset = "0x247F3D4", VA = "0x247F3D4")]
	public static bool GetAchievement(string achievementId)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x247F4C0", Offset = "0x247F4C0", VA = "0x247F4C0")]
	public static void WriteLeaderboardEntry(string leaderboard, int score)
	{
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x247F5E8", Offset = "0x247F5E8", VA = "0x247F5E8")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x247F704", Offset = "0x247F704", VA = "0x247F704")]
	public ViveportHelper()
	{
	}
}
[Token(Token = "0x20001C5")]
public class VoiceEmoteFire : MonoBehaviour
{
	[Token(Token = "0x400151D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSource voxSource;

	[Token(Token = "0x400151E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioClip[] lhUpClips;

	[Token(Token = "0x400151F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioClip[] lhRightClips;

	[Token(Token = "0x4001520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] lhDownClips;

	[Token(Token = "0x4001521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AudioClip[] lhLeftClips;

	[Token(Token = "0x4001522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] rhUpClips;

	[Token(Token = "0x4001523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public AudioClip[] rhRightClips;

	[Token(Token = "0x4001524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] rhDownClips;

	[Token(Token = "0x4001525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AudioClip[] rhLeftClips;

	[Token(Token = "0x4001526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastQuestIndex;

	[Token(Token = "0x4001527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int lastNeutralIndex;

	[Token(Token = "0x4001528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int lastCelebrateIndex;

	[Token(Token = "0x4001529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int lastDenialIndex;

	[Token(Token = "0x400152A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C60F0", Offset = "0x5C60F0")]
	public float volHighRange;

	[Token(Token = "0x400152B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6108", Offset = "0x5C6108")]
	public float volLowRange;

	[Token(Token = "0x400152C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6120", Offset = "0x5C6120")]
	public float volShiftSmoothing;

	[Token(Token = "0x400152D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 LHCachedStickPos;

	[Token(Token = "0x400152E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 RHCachedStickPos;

	[Token(Token = "0x400152F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool hasPlayed;

	[Token(Token = "0x4001530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool reset;

	[Token(Token = "0x4001531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	public bool isDebug;

	[Token(Token = "0x4001532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float deadZoneValue;

	[Token(Token = "0x4001533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float testPitch;

	[Token(Token = "0x4001534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleSystem ExclaimParticles;

	[Token(Token = "0x4001535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ParticleSystem QuestionParticles;

	[Token(Token = "0x4001536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ParticleSystem UpParticles;

	[Token(Token = "0x4001537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ParticleSystem DownParticles;

	[Token(Token = "0x4001538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem currentParticles;

	[Token(Token = "0x4001539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Fighter fighter;

	[Token(Token = "0x400153A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float spamTimer;

	[Token(Token = "0x400153B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool muted;

	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x247F800", Offset = "0x247F800", VA = "0x247F800")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x247F88C", Offset = "0x247F88C", VA = "0x247F88C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x247FDB0", Offset = "0x247FDB0", VA = "0x247FDB0")]
	private void LeftHandVoicePlayer()
	{
	}

	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x2480B70", Offset = "0x2480B70", VA = "0x2480B70")]
	private void LeftHandModulateVoice()
	{
	}

	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x24809A4", Offset = "0x24809A4", VA = "0x24809A4")]
	private void CheckReset()
	{
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x2480EB8", Offset = "0x2480EB8", VA = "0x2480EB8")]
	private void RightHandVoicePlayer()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x24812E4", Offset = "0x24812E4", VA = "0x24812E4")]
	private void RightHandModulateVoice()
	{
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x2480DEC", Offset = "0x2480DEC", VA = "0x2480DEC")]
	public float Remap(float input, float inLow, float inHigh, float outLow, float outHigh)
	{
		return default(float);
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x2481560", Offset = "0x2481560", VA = "0x2481560")]
	public VoiceEmoteFire()
	{
	}
}
[Token(Token = "0x20001C6")]
public class VoiceEmoteTest : MonoBehaviour
{
	[Token(Token = "0x200054B")]
	public enum VoiceState
	{
		[Token(Token = "0x400296B")]
		Normal,
		[Token(Token = "0x400296C")]
		Nasal,
		[Token(Token = "0x400296D")]
		Shout
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2CFC", Offset = "0x5C2CFC")]
	private sealed class <SwitchVoice>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400296E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400296F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VoiceEmoteTest <>4__this;

		[Token(Token = "0x4002971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioSource outgoingSource;

		[Token(Token = "0x4002972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource incomingSource;

		[Token(Token = "0x4002973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AudioClip destVoice;

		[Token(Token = "0x4002974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float crossfadeTime;

		[Token(Token = "0x4002975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <timer>5__2;

		[Token(Token = "0x4002976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <destVolume>5__3;

		[Token(Token = "0x170002E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600262C")]
			[Address(RVA = "0x2482324", Offset = "0x2482324", VA = "0x2482324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600262E")]
			[Address(RVA = "0x24823B4", Offset = "0x24823B4", VA = "0x24823B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002629")]
		[Address(RVA = "0x2481E74", Offset = "0x2481E74", VA = "0x2481E74")]
		[DebuggerHidden]
		public <SwitchVoice>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x600262A")]
		[Address(RVA = "0x2481ED0", Offset = "0x2481ED0", VA = "0x2481ED0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600262B")]
		[Address(RVA = "0x2481ED4", Offset = "0x2481ED4", VA = "0x2481ED4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600262D")]
		[Address(RVA = "0x248232C", Offset = "0x248232C", VA = "0x248232C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400153C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public AudioSource voxSource1;

	[Token(Token = "0x400153D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AudioSource voxSource2;

	[Token(Token = "0x400153E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public AudioSource currentlyPlayingSource;

	[Token(Token = "0x400153F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource inActiveSource;

	[Token(Token = "0x4001540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6140", Offset = "0x5C6140")]
	public float pitchLowRange;

	[Token(Token = "0x4001541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6158", Offset = "0x5C6158")]
	public float pitchHighRange;

	[Token(Token = "0x4001542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6170", Offset = "0x5C6170")]
	public float volHighRange;

	[Token(Token = "0x4001543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6188", Offset = "0x5C6188")]
	public float pitchShiftSmoothing;

	[Token(Token = "0x4001544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C61A8", Offset = "0x5C61A8")]
	public float volShiftSmoothing;

	[Token(Token = "0x4001545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceState currentVoiceState;

	[Token(Token = "0x4001546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public VoiceState destVoiceState;

	[Token(Token = "0x4001547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip normalVoice;

	[Token(Token = "0x4001548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public AudioClip nasalVoice;

	[Token(Token = "0x4001549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip shoutVoice;

	[Token(Token = "0x400154A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isSwappingVoice;

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x24815A0", Offset = "0x24815A0", VA = "0x24815A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x248167C", Offset = "0x248167C", VA = "0x248167C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x2481840", Offset = "0x2481840", VA = "0x2481840")]
	private void LeftHandJoystickToSound()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x2481AFC", Offset = "0x2481AFC", VA = "0x2481AFC")]
	private void RightHandJoystickToSound()
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x2481DA8", Offset = "0x2481DA8", VA = "0x2481DA8")]
	public float Remap(float input, float inLow, float inHigh, float outLow, float outHigh)
	{
		return default(float);
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x2481CB4", Offset = "0x2481CB4", VA = "0x2481CB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDE5C", Offset = "0x5CDE5C")]
	public IEnumerator SwitchVoice(AudioClip destVoice, AudioSource incomingSource, AudioSource outgoingSource, float crossfadeTime = 0.25f)
	{
		return null;
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x2481E98", Offset = "0x2481E98", VA = "0x2481E98")]
	public VoiceEmoteTest()
	{
	}
}
[Token(Token = "0x20001C7")]
public class VoipLord
{
	[Token(Token = "0x400154B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private ulong m_remoteID;

	[Token(Token = "0x400154C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private PeerConnectionState m_state;

	[Token(Token = "0x400154D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly GameObject m_remoteHead;

	[Token(Token = "0x1700007A")]
	public bool Connected
	{
		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x24831F4", Offset = "0x24831F4", VA = "0x24831F4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x24823BC", Offset = "0x24823BC", VA = "0x24823BC")]
	public VoipLord(GameObject remoteHead)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x2482534", Offset = "0x2482534", VA = "0x2482534")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x24826A4", Offset = "0x24826A4", VA = "0x24826A4")]
	public void SetAudioSourceVolume(float volume)
	{
	}

	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x24827E8", Offset = "0x24827E8", VA = "0x24827E8")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x2483030", Offset = "0x2483030", VA = "0x2483030")]
	public void Disconnect()
	{
	}

	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x2483204", Offset = "0x2483204", VA = "0x2483204")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x24834B4", Offset = "0x24834B4", VA = "0x24834B4")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x20001C8")]
public class WallOfPanels : MonoBehaviour
{
	[Token(Token = "0x200054D")]
	public class RotationData
	{
		[Token(Token = "0x4002977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<GameObject> panels;

		[Token(Token = "0x4002978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject pivot;

		[Token(Token = "0x4002979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Quaternion destinationQ;

		[Token(Token = "0x400297A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400297B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float acceleration;

		[Token(Token = "0x600262F")]
		[Address(RVA = "0x24E683C", Offset = "0x24E683C", VA = "0x24E683C")]
		public RotationData(List<GameObject> panels, GameObject pivot, Quaternion destinationQ, float rotationSpeed, float acceleration)
		{
		}
	}

	[Token(Token = "0x200054E")]
	public class ButtonData
	{
		[Token(Token = "0x400297C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<GameObject> hiddenPanels;

		[Token(Token = "0x400297D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject button;

		[Token(Token = "0x400297E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool onWall;

		[Token(Token = "0x6002630")]
		[Address(RVA = "0x24E8BC4", Offset = "0x24E8BC4", VA = "0x24E8BC4")]
		public ButtonData(List<GameObject> hiddenPanels, GameObject button)
		{
		}
	}

	[Token(Token = "0x200054F")]
	public enum State
	{
		[Token(Token = "0x4002980")]
		Idle,
		[Token(Token = "0x4002981")]
		FlippingIntoPosition,
		[Token(Token = "0x4002982")]
		FallingIntoPosition,
		[Token(Token = "0x4002983")]
		WaitingForPanels,
		[Token(Token = "0x4002984")]
		ShiftAccelerate,
		[Token(Token = "0x4002985")]
		ShiftTopSpeed,
		[Token(Token = "0x4002986")]
		ShiftDecelerate,
		[Token(Token = "0x4002987")]
		RotateAroundPivot,
		[Token(Token = "0x4002988")]
		RotateAroundSomePivot,
		[Token(Token = "0x4002989")]
		RotateAttached
	}

	[Token(Token = "0x400154E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject panelPrefab;

	[Token(Token = "0x400154F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject scriptObjectPrefab;

	[Token(Token = "0x4001550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject[,] panels;

	[Token(Token = "0x4001551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject[,]> extraPanels;

	[Token(Token = "0x4001552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<GameObject> attachedObjects;

	[Token(Token = "0x4001553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float panelSize;

	[Token(Token = "0x4001554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int rows;

	[Token(Token = "0x4001555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int columns;

	[Token(Token = "0x4001556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float totalDistanceTravelled;

	[Token(Token = "0x4001557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State state;

	[Token(Token = "0x4001558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float flipSpeedMin;

	[Token(Token = "0x4001559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float flipSpeedMax;

	[Token(Token = "0x400155A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<GameObject> flipProtectedPanels;

	[Token(Token = "0x400155B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeBetweenPanelFalls;

	[Token(Token = "0x400155C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeLeftFall;

	[Token(Token = "0x400155D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fallStartHeight;

	[Token(Token = "0x400155E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float fallMinSpeed;

	[Token(Token = "0x400155F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float fallMaxSpeed;

	[Token(Token = "0x4001560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float shiftAccelTime;

	[Token(Token = "0x4001561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float shiftMaxTime;

	[Token(Token = "0x4001562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float shiftDecelTime;

	[Token(Token = "0x4001563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float shiftTopSpeed;

	[Token(Token = "0x4001564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float shiftCurrentSpeed;

	[Token(Token = "0x4001565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float shiftTimeElapsed;

	[Token(Token = "0x4001566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float shiftAlignTrigger;

	[Token(Token = "0x4001567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float shiftMaxDistance;

	[Token(Token = "0x4001568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private List<RotationData> rotations;

	[Token(Token = "0x4001569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RotationData> toRemoveRots;

	[Token(Token = "0x400156A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 shiftStartPosition;

	[Token(Token = "0x400156B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 shiftMovementMonitor;

	[Token(Token = "0x400156C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Direction shiftDirection;

	[Token(Token = "0x400156D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> shiftPanels;

	[Token(Token = "0x400156E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private List<GameObject> inProcess;

	[Token(Token = "0x400156F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<GameObject> toAdd;

	[Token(Token = "0x4001570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private List<GameObject> toRemove;

	[Token(Token = "0x4001571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<GameObject> scriptObjects;

	[Token(Token = "0x4001572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private List<ButtonData> buttons;

	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x24DFD14", Offset = "0x24DFD14", VA = "0x24DFD14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x24DFD18", Offset = "0x24DFD18", VA = "0x24DFD18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x24E4A84", Offset = "0x24E4A84", VA = "0x24E4A84")]
	public void CreatePanels()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x24E4D1C", Offset = "0x24E4D1C", VA = "0x24E4D1C")]
	public void StartFlipIntoPosition(List<GameObject> protectedPanels, float minSpeed, float maxSpeed)
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x24E2E10", Offset = "0x24E2E10", VA = "0x24E2E10")]
	public void PrepareNeighborFlips(GameObject panel)
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x24E34E4", Offset = "0x24E34E4", VA = "0x24E34E4")]
	private void EndFlipIntoPosition()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x24E5BEC", Offset = "0x24E5BEC", VA = "0x24E5BEC")]
	public void StartFallIntoPosition(float startHeight, float timeBetweenPanels, float minSpeed, float maxSpeed)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x24E5E1C", Offset = "0x24E5E1C", VA = "0x24E5E1C")]
	public void StartShift(Direction direction, float topSpeed, float accelTime, float maxSpeedTime, float decelTime, float maxDistance)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x24E5E60", Offset = "0x24E5E60", VA = "0x24E5E60")]
	public void StartShift(List<GameObject> panels, Direction direction, float topSpeed, float accelTime, float maxSpeedTime, float decelTime, float maxDistance)
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x24E3760", Offset = "0x24E3760", VA = "0x24E3760")]
	private void ShiftWall()
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x24E4224", Offset = "0x24E4224", VA = "0x24E4224")]
	public void EndShift()
	{
	}

	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x24E5EFC", Offset = "0x24E5EFC", VA = "0x24E5EFC")]
	public void FlipPanel(int row, int column, Direction edge, Axis axis, float degrees, float flipSpeed)
	{
	}

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x24E61F8", Offset = "0x24E61F8", VA = "0x24E61F8")]
	public void StartRotateAround(GameObject pivot, Axis rotationAxis, float rotationDegrees, float degreesPerSec, float acceleration = 0f)
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x24E6894", Offset = "0x24E6894", VA = "0x24E6894")]
	public void StartRotateAroundSome(List<GameObject> panels, GameObject pivot, Axis rotationAxis, float rotationDegrees, float degreesPerSec, float acceleration = 0f)
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x24E454C", Offset = "0x24E454C", VA = "0x24E454C")]
	private void EndRotateAround(RotationData rotation)
	{
	}

	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x24E6FE0", Offset = "0x24E6FE0", VA = "0x24E6FE0")]
	public void StartRotateAttached(GameObject attachedItem, Axis rotationAxis, float rotationDegrees, float degreesPerSec)
	{
	}

	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x24E49D8", Offset = "0x24E49D8", VA = "0x24E49D8")]
	private void EndRotateAttached()
	{
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x24E7488", Offset = "0x24E7488", VA = "0x24E7488")]
	public void BuildExtraPanels(Direction direction)
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x24E79F0", Offset = "0x24E79F0", VA = "0x24E79F0")]
	public void DestroyExtraPanels(float delay)
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x24E7CE8", Offset = "0x24E7CE8", VA = "0x24E7CE8")]
	public void StartScriptedMove(List<GameObject> panels, List<ScriptedMoveStep> waypoints)
	{
	}

	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x24E7E48", Offset = "0x24E7E48", VA = "0x24E7E48")]
	public void StartScriptedMove(GameObject go, List<ScriptedMoveStep> waypoints)
	{
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x24E8334", Offset = "0x24E8334", VA = "0x24E8334")]
	public void StartDisintegrate(List<GameObject> panels, float minTime, float maxTime)
	{
	}

	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x24E861C", Offset = "0x24E861C", VA = "0x24E861C")]
	public void SetButton(GameObject button, int row, int column, int width, int height)
	{
	}

	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x24E8BF4", Offset = "0x24E8BF4", VA = "0x24E8BF4")]
	public void DeactivateButton(GameObject button)
	{
	}

	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x24E8F64", Offset = "0x24E8F64", VA = "0x24E8F64")]
	public List<GameObject> GetColumn(int column, bool includeExtra = false)
	{
		return null;
	}

	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x24E92A0", Offset = "0x24E92A0", VA = "0x24E92A0")]
	public List<GameObject> GetRow(int row, bool includeExtra = false)
	{
		return null;
	}

	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x24E95DC", Offset = "0x24E95DC", VA = "0x24E95DC")]
	public void ResetPanelParents()
	{
	}

	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x24E977C", Offset = "0x24E977C", VA = "0x24E977C")]
	public WallOfPanels()
	{
	}
}
[Token(Token = "0x20001C9")]
public class WallPanel : MonoBehaviour
{
	[Token(Token = "0x2000550")]
	public enum State
	{
		[Token(Token = "0x400298B")]
		Waiting,
		[Token(Token = "0x400298C")]
		Flipping,
		[Token(Token = "0x400298D")]
		Falling,
		[Token(Token = "0x400298E")]
		ScriptedMove,
		[Token(Token = "0x400298F")]
		NextScriptedStep,
		[Token(Token = "0x4002990")]
		Disintegrate,
		[Token(Token = "0x4002991")]
		Complete
	}

	[Token(Token = "0x4001573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float rotationSpeed;

	[Token(Token = "0x4001574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float panelSize;

	[Token(Token = "0x4001575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public State state;

	[Token(Token = "0x4001576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int row;

	[Token(Token = "0x4001577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int column;

	[Token(Token = "0x4001578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject attached;

	[Token(Token = "0x4001579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private GameObject attachedOrigParent;

	[Token(Token = "0x400157A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject pivot;

	[Token(Token = "0x400157B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Quaternion desiredRotationQ;

	[Token(Token = "0x400157C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private List<ScriptedMoveStep> smWaypoints;

	[Token(Token = "0x400157D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 smStartPos;

	[Token(Token = "0x400157E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Vector3? smDestPos;

	[Token(Token = "0x400157F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion smStartRot;

	[Token(Token = "0x4001580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion? smDestRot;

	[Token(Token = "0x4001581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 smStartScale;

	[Token(Token = "0x4001582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Vector3? smDestScale;

	[Token(Token = "0x4001583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float runTime;

	[Token(Token = "0x4001584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float elapsedTime;

	[Token(Token = "0x4001585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float endHeight;

	[Token(Token = "0x4001586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float fallSpeed;

	[Token(Token = "0x4001587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float progress;

	[Token(Token = "0x4001588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float progressSpeed;

	[Token(Token = "0x4001589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public AnimationCurve smPosCurve;

	[Token(Token = "0x400158A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AnimationCurve smRotCurve;

	[Token(Token = "0x400158B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public AnimationCurve smScaleCurve;

	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x24E99EC", Offset = "0x24E99EC", VA = "0x24E99EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x24E1C10", Offset = "0x24E1C10", VA = "0x24E1C10")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x24E4D10", Offset = "0x24E4D10", VA = "0x24E4D10")]
	public void SetRowAndColumn(int row, int column)
	{
	}

	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x24E80EC", Offset = "0x24E80EC", VA = "0x24E80EC")]
	public void Attach(GameObject toAttach)
	{
	}

	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x24E50C8", Offset = "0x24E50C8", VA = "0x24E50C8")]
	public void StartEdgeFlip(Direction edge, Axis rotationAxis, float rotationDegrees, float degreesPerSec)
	{
	}

	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x24E99F0", Offset = "0x24E99F0", VA = "0x24E99F0")]
	private void EndEdgeFlip()
	{
	}

	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x24E3564", Offset = "0x24E3564", VA = "0x24E3564")]
	public void StartFall(float startHeight, float endHeight, float speed)
	{
	}

	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x24E9B5C", Offset = "0x24E9B5C", VA = "0x24E9B5C")]
	private void EndFall()
	{
	}

	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x24E80D4", Offset = "0x24E80D4", VA = "0x24E80D4")]
	public void StartScriptedMove(List<ScriptedMoveStep> waypoints)
	{
	}

	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x24E9C48", Offset = "0x24E9C48", VA = "0x24E9C48")]
	public void EndScriptedMove()
	{
	}

	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x24E84F4", Offset = "0x24E84F4", VA = "0x24E84F4")]
	public void StartDisintegrate(float time)
	{
	}

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x24E9D54", Offset = "0x24E9D54", VA = "0x24E9D54")]
	public WallPanel()
	{
	}
}
[Token(Token = "0x20001CA")]
public struct ScriptedMoveStep
{
	[Token(Token = "0x2000551")]
	public enum MoveType
	{
		[Token(Token = "0x4002993")]
		Relative,
		[Token(Token = "0x4002994")]
		Absolute
	}

	[Token(Token = "0x400158C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3? position;

	[Token(Token = "0x400158D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Quaternion? rotation;

	[Token(Token = "0x400158E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3? scale;

	[Token(Token = "0x400158F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float time;

	[Token(Token = "0x4001590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MoveType type;

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x5D80E0", Offset = "0x5D80E0", VA = "0x5D80E0")]
	public ScriptedMoveStep(Vector3? position, Quaternion? rotation, Vector3? scale, float time, MoveType type = MoveType.Relative)
	{
	}
}
[Token(Token = "0x20001CB")]
public class WaveConfiguration : MonoBehaviour
{
	[Token(Token = "0x2000552")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D0C", Offset = "0x5C2D0C")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4002995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FighterConfiguration fighterConfig;

		[Token(Token = "0x6002631")]
		[Address(RVA = "0x24EA238", Offset = "0x24EA238", VA = "0x24EA238")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6002632")]
		[Address(RVA = "0x24EA4CC", Offset = "0x24EA4CC", VA = "0x24EA4CC")]
		internal bool <Populate>b__0(FighterInfo fi)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4001591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x4001592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntroType introType;

	[NonSerialized]
	[Token(Token = "0x4001593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WaveInfo wi;

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x24E9ED0", Offset = "0x24E9ED0", VA = "0x24E9ED0")]
	public void Build()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x24EA034", Offset = "0x24EA034", VA = "0x24EA034")]
	public void Populate(WaveInfo deserializedWave)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x24EA240", Offset = "0x24EA240", VA = "0x24EA240")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x5CDED4", Offset = "0x5CDED4")]
	public void GenerateID()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x24EA2F4", Offset = "0x24EA2F4", VA = "0x24EA2F4")]
	public void CustomDevEdit()
	{
	}

	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x24EA3C0", Offset = "0x24EA3C0", VA = "0x24EA3C0")]
	public WaveConfiguration()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CC")]
public class WaveInfo
{
	[Token(Token = "0x4001594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string id;

	[Token(Token = "0x4001595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<FighterInfo> fighters;

	[NonSerialized]
	[Token(Token = "0x4001596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntroType introType;

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x24EA438", Offset = "0x24EA438", VA = "0x24EA438")]
	public WaveInfo()
	{
	}
}
[Token(Token = "0x20001CD")]
public enum IntroType
{
	[Token(Token = "0x4001598")]
	Instant,
	[Token(Token = "0x4001599")]
	LongIntro,
	[Token(Token = "0x400159A")]
	ShortIntro
}
[Token(Token = "0x20001CE")]
public class Weapon : MonoBehaviour
{
	[Token(Token = "0x2000553")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D1C", Offset = "0x5C2D1C")]
	private sealed class <RumblePulseDelayed>d__117 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float delay;

		[Token(Token = "0x4002999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Weapon <>4__this;

		[Token(Token = "0x400299A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float strength;

		[Token(Token = "0x400299B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float length;

		[Token(Token = "0x170002E6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002636")]
			[Address(RVA = "0x22EEC28", Offset = "0x22EEC28", VA = "0x22EEC28", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002638")]
			[Address(RVA = "0x22EECB8", Offset = "0x22EECB8", VA = "0x22EECB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002633")]
		[Address(RVA = "0x22EEB18", Offset = "0x22EEB18", VA = "0x22EEB18")]
		[DebuggerHidden]
		public <RumblePulseDelayed>d__117(int <>1__state)
		{
		}

		[Token(Token = "0x6002634")]
		[Address(RVA = "0x22EEB38", Offset = "0x22EEB38", VA = "0x22EEB38", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002635")]
		[Address(RVA = "0x22EEB3C", Offset = "0x22EEB3C", VA = "0x22EEB3C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002637")]
		[Address(RVA = "0x22EEC30", Offset = "0x22EEC30", VA = "0x22EEC30", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400159B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public StickPhysics physics;

	[Token(Token = "0x400159C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<StickPhysics> ExtraPhysics;

	[Token(Token = "0x400159D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<StickCollision> StickCollisions;

	[Token(Token = "0x400159E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<StickVisual> StickVisuals;

	[Token(Token = "0x400159F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Transform Tip;

	[Token(Token = "0x40015A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioSource> SwishSounds;

	[Token(Token = "0x40015A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<Vector3> PreviousSwishPositions;

	[Token(Token = "0x40015A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C61C8", Offset = "0x5C61C8")]
	public Team team;

	[Token(Token = "0x40015A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public WeaponType type;

	[Token(Token = "0x40015A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WeaponPositionalType positioning;

	[Token(Token = "0x40015A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public WeaponRotationalType rotationing;

	[Token(Token = "0x40015A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool preferMainHandPositioning;

	[Token(Token = "0x40015A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public WeaponInputType inputType;

	[Token(Token = "0x40015A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C61E0", Offset = "0x5C61E0")]
	public Hand MainHand;

	[Token(Token = "0x40015A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Hand OffHand;

	[Token(Token = "0x40015AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Fighter fighter;

	[Token(Token = "0x40015AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C61F8", Offset = "0x5C61F8")]
	public bool hasShield;

	[Token(Token = "0x40015AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float shieldDamageRemaining;

	[Token(Token = "0x40015AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxShieldDamage;

	[Token(Token = "0x40015AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float shieldRegenRate;

	[Token(Token = "0x40015AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6210", Offset = "0x5C6210")]
	public float damagePerHit;

	[Token(Token = "0x40015B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float hitSpeedBenchmark;

	[Token(Token = "0x40015B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float hitSpeedLerp;

	[Token(Token = "0x40015B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6228", Offset = "0x5C6228")]
	public float blitzTargetDistance;

	[Token(Token = "0x40015B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float blitzAcceleration;

	[Token(Token = "0x40015B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float blitzLerpAmt;

	[Token(Token = "0x40015B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6240", Offset = "0x5C6240")]
	public float summonPlaneDist;

	[Token(Token = "0x40015B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float dotterSummonDist;

	[Token(Token = "0x40015B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float handSummonDist;

	[Token(Token = "0x40015B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float reloadAngle;

	[Token(Token = "0x40015B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private LinkedList<Waypoint> PositionWaypoints;

	[Token(Token = "0x40015BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private LinkedList<Waypoint> OldPositionWaypoints;

	[Token(Token = "0x40015BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6258", Offset = "0x5C6258")]
	public float innerDistanceThreshold;

	[Token(Token = "0x40015BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float outerDistanceThreshold;

	[Token(Token = "0x40015BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float extraOuterThresholdDistancePerSecond;

	[Token(Token = "0x40015BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float addNewDistanceWaypointThreshold;

	[Token(Token = "0x40015BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float totalPullDistance;

	[NonSerialized]
	[Token(Token = "0x40015C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int lastPosDeletionFrameNum;

	[Token(Token = "0x40015C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int maxRotationWaypoints;

	[Token(Token = "0x40015C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public LinkedList<Waypoint> RotationWaypoints;

	[Token(Token = "0x40015C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private LinkedList<Waypoint> OldRotationWaypoints;

	[Token(Token = "0x40015C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C6270", Offset = "0x5C6270")]
	public float innerAngleThreshold;

	[Token(Token = "0x40015C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float outerAngleThreshold;

	[NonSerialized]
	[Token(Token = "0x40015C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float maxOuterAngleThreshold;

	[Token(Token = "0x40015C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float extraOuterThresholdAnglePerSecond;

	[Token(Token = "0x40015C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float addNewAngleWaypointThreshold;

	[NonSerialized]
	[Token(Token = "0x40015C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float totalPullAngle;

	[Token(Token = "0x40015CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float uncappedTotalPullAngle;

	[Token(Token = "0x40015CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float uncappedTotalPullDistance;

	[NonSerialized]
	[Token(Token = "0x40015CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int lastRotDeletionFrameNum;

	[NonSerialized]
	[Token(Token = "0x40015CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public Quaternion currentInputRot;

	[Token(Token = "0x40015CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public Vector3 currentInputPos;

	[Token(Token = "0x40015CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Quaternion currentInputRotOverride;

	[Token(Token = "0x40015D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3 currentInputPosOverride;

	[Token(Token = "0x40015D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public bool gripped;

	[Token(Token = "0x40015D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	public bool extraGrip;

	[Token(Token = "0x40015D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public float extraGripGrabRadius;

	[Token(Token = "0x40015D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float extraGripBreakRadius;

	[Token(Token = "0x40015D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool autogrip;

	[Token(Token = "0x40015D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool replayPause;

	[Token(Token = "0x40015D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11A")]
	public bool previouslyGripped;

	[NonSerialized]
	[Token(Token = "0x40015D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Quaternion targetInputRot;

	[Token(Token = "0x40015D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Vector3 targetInputPos;

	[Token(Token = "0x40015DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform targetTransform;

	[Token(Token = "0x40015DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	public bool writesOwnWaypoints;

	[Token(Token = "0x40015DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
	public bool debugOutput;

	[Token(Token = "0x40015DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
	public bool extrapolatingHands;

	[Token(Token = "0x40015DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float extrapolationLerpstep;

	[Token(Token = "0x40015DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public bool lerpingVisualError;

	[Token(Token = "0x40015E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int lastCorrectionFrame;

	[Token(Token = "0x40015E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private float averageFrameDiff;

	[Token(Token = "0x40015E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public bool debugoutput;

	[Token(Token = "0x40015E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public int extraLerpFrames;

	[Token(Token = "0x40015E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool firstGripped;

	[Token(Token = "0x40015E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	public bool physicsOn;

	[Token(Token = "0x40015E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float extraRumbleRight;

	[Token(Token = "0x40015E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float extraRumbleLeft;

	[NonSerialized]
	[Token(Token = "0x40015E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public IWeaponDriver networkBehavior;

	[NonSerialized]
	[Token(Token = "0x40015E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public RangedAttack rangedAttack;

	[Token(Token = "0x40015EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private bool destroyed;

	[Token(Token = "0x40015EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public int numProjectilesBlocked;

	[Token(Token = "0x40015EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public TextMeshPro shieldHealthText;

	[Token(Token = "0x40015ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public bool underFighterControl;

	[Token(Token = "0x40015EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	public float handWobbleFactor;

	[Token(Token = "0x40015EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Vector3 DefenseHomeAngles;

	[Token(Token = "0x40015F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	public GameObject HandPositionHelper;

	[Token(Token = "0x40015F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public float maxFFframes;

	[Token(Token = "0x40015F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	public float shieldRegenOnBlock;

	[Token(Token = "0x40015F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float friendlyFireEnergyDrain;

	[Token(Token = "0x40015F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public bool testingOffHand;

	[Token(Token = "0x40015F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19D")]
	public bool testingWarhammerAlt;

	[Token(Token = "0x40015F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19E")]
	public bool deleteWaypointFlag;

	[Token(Token = "0x40015F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float mainHandPositioningRatio;

	[Token(Token = "0x40015F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	public float positioningRatioDefence;

	[Token(Token = "0x40015F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public float positioningRatioOther;

	[Token(Token = "0x40015FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	public float defensePositionZAdjust;

	[Token(Token = "0x40015FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public float otherPositionZAdjust;

	[Token(Token = "0x40015FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	public float currentPositionZAdjust;

	[Token(Token = "0x40015FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public bool adjustsPivot;

	[Token(Token = "0x40015FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
	public float adjustPivotDefAmt;

	[Token(Token = "0x40015FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public List<Transform> pivotAdjustObjects;

	[Token(Token = "0x4001600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	public List<Vector3> startingPositions;

	[Token(Token = "0x4001601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public List<Vector3> adjustedPositions;

	[Token(Token = "0x4001602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	public Vector3 lastNetPos;

	[Token(Token = "0x4001603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public Quaternion lastNetRot;

	[Token(Token = "0x1700007B")]
	public bool anySummoned
	{
		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x23DDDDC", Offset = "0x23DDDDC", VA = "0x23DDDDC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007C")]
	public bool allSummoned
	{
		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0x23DDEC0", Offset = "0x23DDEC0", VA = "0x23DDEC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700007D")]
	public int bitwiseSummoned
	{
		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x23DDFA4", Offset = "0x23DDFA4", VA = "0x23DDFA4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x23D3AB0", Offset = "0x23D3AB0", VA = "0x23D3AB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x23D3EE0", Offset = "0x23D3EE0", VA = "0x23D3EE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x23D4544", Offset = "0x23D4544", VA = "0x23D4544")]
	public void SetTeam(Team t)
	{
	}

	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x23D4888", Offset = "0x23D4888", VA = "0x23D4888")]
	private void ReadCurrentInput()
	{
	}

	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x23D7884", Offset = "0x23D7884", VA = "0x23D7884")]
	public void ManualUpdate()
	{
	}

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x23D84C8", Offset = "0x23D84C8", VA = "0x23D84C8")]
	private void ProcessWaypoints()
	{
	}

	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x23DB25C", Offset = "0x23DB25C", VA = "0x23DB25C")]
	public void ApplySnapshot(WeaponSnapshot snapshot)
	{
	}

	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x23DBADC", Offset = "0x23DBADC", VA = "0x23DBADC")]
	public void FastForward(WeaponSnapshot snapshot)
	{
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x23DCBD4", Offset = "0x23DCBD4", VA = "0x23DCBD4")]
	private void TryAddingExternalWaypoint(LinkedList<Waypoint> list, Waypoint waypoint)
	{
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x23DCDA0", Offset = "0x23DCDA0", VA = "0x23DCDA0")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x23DDB68", Offset = "0x23DDB68", VA = "0x23DDB68")]
	public void RumblePulse(float strength, float length)
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x23DDC6C", Offset = "0x23DDC6C", VA = "0x23DDC6C")]
	public void RepeatedPulse(float strength, float length, float delay, int reps)
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x23DDCF4", Offset = "0x23DDCF4", VA = "0x23DDCF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDF08", Offset = "0x5CDF08")]
	private IEnumerator RumblePulseDelayed(float strength, float length, float delay)
	{
		return null;
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x23DE088", Offset = "0x23DE088", VA = "0x23DE088")]
	public void ResummonFromReplay(int bitwiseValue)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x23DE800", Offset = "0x23DE800", VA = "0x23DE800")]
	public Waypoint GetPosWaypointFromLast(int fromLast)
	{
		return default(Waypoint);
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x23DE97C", Offset = "0x23DE97C", VA = "0x23DE97C")]
	public Waypoint GetRotWaypointFromLast(int fromLast)
	{
		return default(Waypoint);
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x23DE81C", Offset = "0x23DE81C", VA = "0x23DE81C")]
	private Waypoint GetWaypointFromLast(int fromLast, LinkedList<Waypoint> list)
	{
		return default(Waypoint);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x23DE998", Offset = "0x23DE998", VA = "0x23DE998")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x23DEAFC", Offset = "0x23DEAFC", VA = "0x23DEAFC")]
	public void DeathAnimation()
	{
	}

	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x23DEF90", Offset = "0x23DEF90", VA = "0x23DEF90")]
	public void CleanUp()
	{
	}

	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x23DF320", Offset = "0x23DF320", VA = "0x23DF320")]
	public Weapon()
	{
	}
}
[Token(Token = "0x20001CF")]
public enum WeaponType
{
	[Token(Token = "0x4001605")]
	None,
	[Token(Token = "0x4001606")]
	Doublesword,
	[Token(Token = "0x4001607")]
	Quarterstaff,
	[Token(Token = "0x4001608")]
	Katar,
	[Token(Token = "0x4001609")]
	Rapier,
	[Token(Token = "0x400160A")]
	Flail,
	[Token(Token = "0x400160B")]
	Longsword,
	[Token(Token = "0x400160C")]
	Chains,
	[Token(Token = "0x400160D")]
	HeaterShield,
	[Token(Token = "0x400160E")]
	Buckler,
	[Token(Token = "0x400160F")]
	GunHand,
	[Token(Token = "0x4001610")]
	WarAxe,
	[Token(Token = "0x4001611")]
	ShortSpear,
	[Token(Token = "0x4001612")]
	Mace,
	[Token(Token = "0x4001613")]
	TripleSword,
	[Token(Token = "0x4001614")]
	Stick,
	[Token(Token = "0x4001615")]
	InvisibleKatar,
	[Token(Token = "0x4001616")]
	Warhammer,
	[Token(Token = "0x4001617")]
	Scythe,
	[Token(Token = "0x4001618")]
	Katana,
	[Token(Token = "0x4001619")]
	ShortSword,
	[Token(Token = "0x400161A")]
	Scimitar,
	[Token(Token = "0x400161B")]
	BoardShield,
	[Token(Token = "0x400161C")]
	Chakram,
	[Token(Token = "0x400161D")]
	ChargeGun,
	[Token(Token = "0x400161E")]
	Crescent,
	[Token(Token = "0x400161F")]
	DeerHornBlade,
	[Token(Token = "0x4001620")]
	Halberd,
	[Token(Token = "0x4001621")]
	Whip,
	[Token(Token = "0x4001622")]
	ParryingDagger,
	[Token(Token = "0x4001623")]
	Glaive
}
[Token(Token = "0x20001D0")]
public enum WeaponPositionalType
{
	[Token(Token = "0x4001625")]
	MainHandOnly,
	[Token(Token = "0x4001626")]
	AverageOfHands,
	[Token(Token = "0x4001627")]
	OffHandOnly,
	[Token(Token = "0x4001628")]
	WeightedAverageOfHands
}
[Token(Token = "0x20001D1")]
public enum WeaponRotationalType
{
	[Token(Token = "0x400162A")]
	MainHandOnly,
	[Token(Token = "0x400162B")]
	AngleBetweenHands,
	[Token(Token = "0x400162C")]
	ReverseAngleBetweenHands,
	[Token(Token = "0x400162D")]
	OffHandOnly,
	[Token(Token = "0x400162E")]
	Archery
}
[Token(Token = "0x20001D2")]
public enum WeaponInputType
{
	[Token(Token = "0x4001630")]
	LocalPlayer,
	[Token(Token = "0x4001631")]
	AI,
	[Token(Token = "0x4001632")]
	Mirroring
}
[Token(Token = "0x20001D3")]
public struct Waypoint
{
	[Token(Token = "0x4001633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int frameNum;

	[Token(Token = "0x4001634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 v;
}
[Token(Token = "0x20001D4")]
public struct WeaponSnapshot
{
	[Token(Token = "0x4001635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int frameNum;

	[Token(Token = "0x4001636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool gripped;

	[Token(Token = "0x4001637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool leftGripped;

	[Token(Token = "0x4001638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public bool triggerHeld;

	[Token(Token = "0x4001639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float shieldHealth;

	[Token(Token = "0x400163A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion weaponRot;

	[Token(Token = "0x400163B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 weaponPos;

	[Token(Token = "0x400163C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion weaponXyRotSpeed;

	[Token(Token = "0x400163D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Quaternion weaponZRotSpeed;

	[Token(Token = "0x400163E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 weaponVelocity;

	[Token(Token = "0x400163F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int posWaypointDeletionTimestamp;

	[Token(Token = "0x4001640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Waypoint lastPosWaypoint;

	[Token(Token = "0x4001641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int rotWaypointDeletionTimestamp;

	[Token(Token = "0x4001642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Waypoint lastRotWaypoint;

	[Token(Token = "0x4001643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector3 ballPos1;

	[Token(Token = "0x4001644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector3 ballPos2;

	[Token(Token = "0x4001645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Vector3 ballPos3;

	[Token(Token = "0x4001646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 ballVelocity1;

	[Token(Token = "0x4001647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Vector3 ballVelocity2;

	[Token(Token = "0x4001648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 ballVelocity3;
}
[Token(Token = "0x20001D5")]
public class WeaponBehavior : EntityBehaviour<IWeaponState>, IWeaponDriver
{
	[Token(Token = "0x4001649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Weapon _weapon;

	[Token(Token = "0x400164A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool _fastForwardedThisFrame;

	[Token(Token = "0x400164B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool attachedYet;

	[Token(Token = "0x400164C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int playerID;

	[Token(Token = "0x400164D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int handNum;

	[Token(Token = "0x400164E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int latestFrame;

	[Token(Token = "0x400164F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<WeaponSnapshot> delayQueue;

	[Token(Token = "0x1700007E")]
	public Weapon weapon
	{
		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x22EECC0", Offset = "0x22EECC0", VA = "0x22EECC0", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x22EECC8", Offset = "0x22EECC8", VA = "0x22EECC8", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public bool fastForwardedThisFrame
	{
		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x22EECD0", Offset = "0x22EECD0", VA = "0x22EECD0", Slot = "32")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x22EECD8", Offset = "0x22EECD8", VA = "0x22EECD8", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public GameObject GetGameObject
	{
		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x22EECE0", Offset = "0x22EECE0", VA = "0x22EECE0", Slot = "31")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x22EECE8", Offset = "0x22EECE8", VA = "0x22EECE8", Slot = "27")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x22EECF4", Offset = "0x22EECF4", VA = "0x22EECF4", Slot = "18")]
	public override void Attached()
	{
	}

	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x22EEE2C", Offset = "0x22EEE2C", VA = "0x22EEE2C")]
	public void Attach()
	{
	}

	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x22EF79C", Offset = "0x22EF79C", VA = "0x22EF79C", Slot = "19")]
	public override void Detached()
	{
	}

	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x22EF9F0", Offset = "0x22EF9F0", VA = "0x22EF9F0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x22EFF2C", Offset = "0x22EFF2C", VA = "0x22EFF2C", Slot = "28")]
	public void ManualFixedUpdate()
	{
	}

	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x22F12C4", Offset = "0x22F12C4", VA = "0x22F12C4")]
	public WeaponBehavior()
	{
	}
}
[Token(Token = "0x20001D6")]
public interface IWeaponDriver
{
	[Token(Token = "0x17000081")]
	Weapon weapon
	{
		[Token(Token = "0x6000DDB")]
		get;
		[Token(Token = "0x6000DDC")]
		set;
	}

	[Token(Token = "0x17000082")]
	GameObject GetGameObject
	{
		[Token(Token = "0x6000DDD")]
		get;
	}

	[Token(Token = "0x17000083")]
	bool fastForwardedThisFrame
	{
		[Token(Token = "0x6000DDE")]
		get;
		[Token(Token = "0x6000DDF")]
		set;
	}

	[Token(Token = "0x6000DD9")]
	void Reset();

	[Token(Token = "0x6000DDA")]
	void ManualFixedUpdate();
}
[Token(Token = "0x20001D7")]
public class WeaponSelectionMenu : MonoBehaviour
{
	[Token(Token = "0x4001650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public TextMeshProUGUI playerName;

	[Token(Token = "0x4001651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextMeshProUGUI coins;

	[Token(Token = "0x4001652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public TextMeshProUGUI skillRating;

	[Token(Token = "0x4001653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI leagueLabel;

	[Token(Token = "0x4001654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Image badgeBackground;

	[Token(Token = "0x4001655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image badgeForeground;

	[Token(Token = "0x4001656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public List<Button> weaponselectButtons;

	[Token(Token = "0x4001657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject SelectText;

	[Token(Token = "0x4001658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject WaitingText;

	[Token(Token = "0x4001659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject RecenterButton;

	[Token(Token = "0x400165A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject ConfirmButton;

	[Token(Token = "0x400165B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image opponentBadgeBackground;

	[Token(Token = "0x400165C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Image opponentBadgeForeground;

	[Token(Token = "0x400165D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI opponentName;

	[Token(Token = "0x400165E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public TextMeshProUGUI opponentPing;

	[Token(Token = "0x400165F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMeshProUGUI opponentSkillRating;

	[Token(Token = "0x4001660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public TextMeshProUGUI opponentLeagueLabel;

	[Token(Token = "0x4001661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject JustForFunOppLower;

	[Token(Token = "0x4001662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject JustForFunOppHigher;

	[Token(Token = "0x4001663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject MatchDetails;

	[Token(Token = "0x4001664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public GameObject MatchDetailsUpdate;

	[Token(Token = "0x4001665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MatchDetailsReset;

	[Token(Token = "0x4001666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public TextMeshProUGUI MatchDetailsTitlePrefab;

	[Token(Token = "0x4001667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextMeshProUGUI MatchDetailsValuePrefab;

	[Token(Token = "0x4001668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public RectTransform MatchDetailsScrollable;

	[Token(Token = "0x4001669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RectTransform ScrollableBoundary;

	[Token(Token = "0x400166A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Scrollbar scrollbar;

	[Token(Token = "0x400166B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<TextMeshProUGUI> matchDetailsTitles;

	[Token(Token = "0x400166C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<TextMeshProUGUI> matchDetailsValues;

	[Token(Token = "0x400166D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float serviceCheckTimer;

	[Token(Token = "0x400166E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Button KnightButton;

	[Token(Token = "0x400166F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Button DuelistButton;

	[Token(Token = "0x4001670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Button MonkButton;

	[Token(Token = "0x4001671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Button NinjaButton;

	[Token(Token = "0x4001672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Button CrusaderButton;

	[Token(Token = "0x4001673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Button ReaperButton;

	[Token(Token = "0x4001674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Button SamuraiButton;

	[Token(Token = "0x4001675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Button BerserkerButton;

	[Token(Token = "0x4001676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public GameObject RankedMatchInfo;

	[Token(Token = "0x4001677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject DuelMatchInfo;

	[Token(Token = "0x4001678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public GameObject BalancedMatchInfo;

	[Token(Token = "0x4001679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject CasualMatchInfo;

	[Token(Token = "0x400167A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public TextMeshProUGUI NoBonusText;

	[Token(Token = "0x400167B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshProUGUI MyBonusText;

	[Token(Token = "0x400167C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public TextMeshProUGUI OppBonusText;

	[Token(Token = "0x400167D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image RelayDot;

	[Token(Token = "0x400167E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool bothJoysticksDown;

	[Token(Token = "0x400167F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TextMeshProUGUI TimerText;

	[Token(Token = "0x4001680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float selectionTimer;

	[Token(Token = "0x4001681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private FighterClass selectedClass;

	[Token(Token = "0x4001682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public GameObject Highlight;

	[Token(Token = "0x4001683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool initialized;

	[Token(Token = "0x4001684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public GameObject EnableVoiceChatButton;

	[Token(Token = "0x4001685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject DisableVoiceChatButton;

	[Token(Token = "0x4001686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public GameObject VoiceNotConnectedStuff;

	[Token(Token = "0x4001687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject VoiceConnectedStuff;

	[Token(Token = "0x4001688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public GameObject VoiceConnectingStuff;

	[Token(Token = "0x4001689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public TextMeshProUGUI VoiceConnectingText;

	[Token(Token = "0x400168A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int retryAttempts;

	[Token(Token = "0x400168B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Image knightBadgeBG;

	[Token(Token = "0x400168C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public Image duelistBadgeBG;

	[Token(Token = "0x400168D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Image monkBadgeBG;

	[Token(Token = "0x400168E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	public Image ninjaBadgeBG;

	[Token(Token = "0x400168F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public Image crusaderBadgeBG;

	[Token(Token = "0x4001690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public Image reaperBadgeBG;

	[Token(Token = "0x4001691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Image samuraiBadgeBG;

	[Token(Token = "0x4001692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public Image berserkerBadgeBG;

	[Token(Token = "0x4001693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Image knightBadgeFG;

	[Token(Token = "0x4001694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public Image duelistBadgeFG;

	[Token(Token = "0x4001695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Image monkBadgeFG;

	[Token(Token = "0x4001696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	public Image ninjaBadgeFG;

	[Token(Token = "0x4001697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Image crusaderBadgeFG;

	[Token(Token = "0x4001698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public Image reaperBadgeFG;

	[Token(Token = "0x4001699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public Image samuraiBadgeFG;

	[Token(Token = "0x400169A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public Image berserkerBadgeFG;

	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x22F1894", Offset = "0x22F1894", VA = "0x22F1894")]
	public void SpawnWeapons()
	{
	}

	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x22F2B70", Offset = "0x22F2B70", VA = "0x22F2B70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x22F2B74", Offset = "0x22F2B74", VA = "0x22F2B74")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x22F3654", Offset = "0x22F3654", VA = "0x22F3654")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x22F5ECC", Offset = "0x22F5ECC", VA = "0x22F5ECC")]
	public void Quit()
	{
	}

	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x22F6070", Offset = "0x22F6070", VA = "0x22F6070")]
	public void CancelTimer()
	{
	}

	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x22F60CC", Offset = "0x22F60CC", VA = "0x22F60CC")]
	public void QuitToMPMenu()
	{
	}

	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x22F5328", Offset = "0x22F5328", VA = "0x22F5328")]
	public void SetPlayerData()
	{
	}

	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x22F6264", Offset = "0x22F6264", VA = "0x22F6264")]
	public void SetOpponentData()
	{
	}

	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x22F67E0", Offset = "0x22F67E0", VA = "0x22F67E0")]
	public void SetJustForFunState()
	{
	}

	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x22F57D0", Offset = "0x22F57D0", VA = "0x22F57D0")]
	public void SetMatchData()
	{
	}

	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x22F6938", Offset = "0x22F6938", VA = "0x22F6938")]
	public void ToMatchSettingsMenu()
	{
	}

	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x22F6A94", Offset = "0x22F6A94", VA = "0x22F6A94")]
	public void ResetSettings()
	{
	}

	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x22F6B98", Offset = "0x22F6B98", VA = "0x22F6B98")]
	public void Scroll(float percent)
	{
	}

	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x22F6CB8", Offset = "0x22F6CB8", VA = "0x22F6CB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x22F77CC", Offset = "0x22F77CC", VA = "0x22F77CC")]
	private void SpawnWeaponForMultiplayer()
	{
	}

	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x22F3210", Offset = "0x22F3210", VA = "0x22F3210")]
	public void SetSettingsTextboxes()
	{
	}

	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x22F763C", Offset = "0x22F763C", VA = "0x22F763C")]
	public void Confirm()
	{
	}

	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x22F9410", Offset = "0x22F9410", VA = "0x22F9410")]
	public void SelectKnight()
	{
	}

	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x22F965C", Offset = "0x22F965C", VA = "0x22F965C")]
	public void SelectDuelist()
	{
	}

	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x22F98A4", Offset = "0x22F98A4", VA = "0x22F98A4")]
	public void SelectMonk()
	{
	}

	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x22F9AF0", Offset = "0x22F9AF0", VA = "0x22F9AF0")]
	public void SelectNinja()
	{
	}

	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x22F9D38", Offset = "0x22F9D38", VA = "0x22F9D38")]
	public void SelectCrusader()
	{
	}

	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x22F9F84", Offset = "0x22F9F84", VA = "0x22F9F84")]
	public void SelectReaper()
	{
	}

	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x22FA1CC", Offset = "0x22FA1CC", VA = "0x22FA1CC")]
	public void SelectSamurai()
	{
	}

	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x22FA414", Offset = "0x22FA414", VA = "0x22FA414")]
	public void SelectBerserker()
	{
	}

	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x22F1AF0", Offset = "0x22F1AF0", VA = "0x22F1AF0")]
	public void EquipDoubleSword()
	{
	}

	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x22F28F0", Offset = "0x22F28F0", VA = "0x22F28F0")]
	public void EquipRapier()
	{
	}

	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x22F1D30", Offset = "0x22F1D30", VA = "0x22F1D30")]
	public void EquipQuarterstaff()
	{
	}

	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x22F1F70", Offset = "0x22F1F70", VA = "0x22F1F70")]
	public void EquipKatars()
	{
	}

	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x22FA660", Offset = "0x22FA660", VA = "0x22FA660")]
	public void EquipLongswords()
	{
	}

	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x22F21F0", Offset = "0x22F21F0", VA = "0x22F21F0")]
	public void EquipFlail()
	{
	}

	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x22F2470", Offset = "0x22F2470", VA = "0x22F2470")]
	public void EquipScythe()
	{
	}

	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x22F26B0", Offset = "0x22F26B0", VA = "0x22F26B0")]
	public void EquipKatana()
	{
	}

	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x22FA8B0", Offset = "0x22FA8B0", VA = "0x22FA8B0")]
	public void EquipChains()
	{
	}

	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x22F9200", Offset = "0x22F9200", VA = "0x22F9200")]
	public void EquipWarhammer()
	{
	}

	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x22FAAC0", Offset = "0x22FAAC0", VA = "0x22FAAC0")]
	public void EquipTripleSword()
	{
	}

	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x22FACD0", Offset = "0x22FACD0", VA = "0x22FACD0")]
	public void EquipMace()
	{
	}

	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x22FAF20", Offset = "0x22FAF20", VA = "0x22FAF20")]
	public void EquipShortSpear()
	{
	}

	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x22FB130", Offset = "0x22FB130", VA = "0x22FB130")]
	public void EquipWarAxe()
	{
	}

	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x22FB380", Offset = "0x22FB380", VA = "0x22FB380")]
	public void EquipSticks()
	{
	}

	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x22FB5D0", Offset = "0x22FB5D0", VA = "0x22FB5D0")]
	public void EnableVoiceChat()
	{
	}

	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x22FBC5C", Offset = "0x22FBC5C", VA = "0x22FBC5C")]
	public void DisableVoiceChat()
	{
	}

	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x22FC198", Offset = "0x22FC198", VA = "0x22FC198")]
	public WeaponSelectionMenu()
	{
	}
}
[Token(Token = "0x20001D8")]
public class MouseRotationScript : MonoBehaviour
{
	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x2140FC0", Offset = "0x2140FC0", VA = "0x2140FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x214118C", Offset = "0x214118C", VA = "0x214118C")]
	public MouseRotationScript()
	{
	}
}
[Token(Token = "0x20001D9")]
public class Cryptor
{
	[Token(Token = "0x400169B")]
	private const string ENCRYPTION_KEY = "5dn65pi70z6rfq4ocr2sxy9nb88bh47n";

	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x2232240", Offset = "0x2232240", VA = "0x2232240")]
	public static string Hash(string value)
	{
		return null;
	}

	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x2232414", Offset = "0x2232414", VA = "0x2232414")]
	public static string Encrypt(string value)
	{
		return null;
	}

	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x223273C", Offset = "0x223273C", VA = "0x223273C")]
	public static string Decrypt(string value)
	{
		return null;
	}

	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x2232244", Offset = "0x2232244", VA = "0x2232244")]
	private static string GetSha1Hash(string strToEncrypt)
	{
		return null;
	}

	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x2232498", Offset = "0x2232498", VA = "0x2232498")]
	private static string GetEncryptedString(string toEncrypt)
	{
		return null;
	}

	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x22327C0", Offset = "0x22327C0", VA = "0x22327C0")]
	private static string GetDecryptedString(string toDecrypt)
	{
		return null;
	}

	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x2232A4C", Offset = "0x2232A4C", VA = "0x2232A4C")]
	public Cryptor()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SPrefs
{
	[Token(Token = "0x400169C")]
	public const string STRING_SALT = "7Snc1Lso";

	[Token(Token = "0x400169D")]
	public const string INT_SALT = "t5HqItbY";

	[Token(Token = "0x400169E")]
	public const string FLOAT_SALT = "ZieZO5cM";

	[Token(Token = "0x400169F")]
	public const string BOOL_SALT = "E9LvW12n";

	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x22DE8D0", Offset = "0x22DE8D0", VA = "0x22DE8D0")]
	public static void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x22DEA18", Offset = "0x22DEA18", VA = "0x22DEA18")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x22DEA7C", Offset = "0x22DEA7C", VA = "0x22DEA7C")]
	public static string GetString(string key, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x22DED1C", Offset = "0x22DED1C", VA = "0x22DED1C")]
	public static void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x22DEDAC", Offset = "0x22DEDAC", VA = "0x22DEDAC")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x22DEDB4", Offset = "0x22DEDB4", VA = "0x22DEDB4")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x22DEE20", Offset = "0x22DEE20", VA = "0x22DEE20")]
	private static int GetIntCustomSalt(string salt, string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x22DF1B0", Offset = "0x22DF1B0", VA = "0x22DF1B0")]
	public static void SetFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x22DF240", Offset = "0x22DF240", VA = "0x22DF240")]
	public static float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x22DF248", Offset = "0x22DF248", VA = "0x22DF248")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x22DF3B8", Offset = "0x22DF3B8", VA = "0x22DF3B8")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x22DF3C0", Offset = "0x22DF3C0", VA = "0x22DF3C0")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x22DF46C", Offset = "0x22DF46C", VA = "0x22DF46C")]
	public static void SetBool(string key, bool value)
	{
	}

	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x22DF540", Offset = "0x22DF540", VA = "0x22DF540")]
	public static void DeleteAll()
	{
	}

	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x22DF548", Offset = "0x22DF548", VA = "0x22DF548")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x22DF660", Offset = "0x22DF660", VA = "0x22DF660")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x22DF770", Offset = "0x22DF770", VA = "0x22DF770")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x22DE944", Offset = "0x22DE944", VA = "0x22DE944")]
	private static void SecureSetString(string key, string value)
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x22DEBCC", Offset = "0x22DEBCC", VA = "0x22DEBCC")]
	private static string SecureGetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x22DEBB0", Offset = "0x22DEBB0", VA = "0x22DEBB0")]
	private static bool SecureHasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x22DF644", Offset = "0x22DF644", VA = "0x22DF644")]
	private static void SecureDeleteKey(string key)
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x22DFB7C", Offset = "0x22DFB7C", VA = "0x22DFB7C")]
	public SPrefs()
	{
	}
}
[Token(Token = "0x20001DB")]
public class SPrefsExampleUsage : MonoBehaviour
{
	[Token(Token = "0x40016A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int playerProgress;

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x22DFB84", Offset = "0x22DFB84", VA = "0x22DFB84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x22DFCD8", Offset = "0x22DFCD8", VA = "0x22DFCD8")]
	private void MakeProgress()
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x22DFD8C", Offset = "0x22DFD8C", VA = "0x22DFD8C")]
	public SPrefsExampleUsage()
	{
	}
}
[Token(Token = "0x20001DC")]
public class TestClass : MonoBehaviour
{
	[Token(Token = "0x40016A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text output1;

	[Token(Token = "0x40016A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Text output2;

	[Token(Token = "0x40016A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Text output3;

	[Token(Token = "0x40016A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text output4;

	[Token(Token = "0x40016A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Text output5;

	[Token(Token = "0x40016A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text output6;

	[Token(Token = "0x40016A7")]
	private const string someKey = "KEY";

	[Token(Token = "0x40016A8")]
	private const string someString = "testString";

	[Token(Token = "0x40016A9")]
	private const int someInt = 152;

	[Token(Token = "0x40016AA")]
	private const float someFloat = -0.001f;

	[Token(Token = "0x40016AB")]
	private const string someCrazyKey = "KEYÖäÜ$!?@";

	[Token(Token = "0x40016AC")]
	private const string someCrazyString = "ÖÄÜ$!@";

	[Token(Token = "0x40016AD")]
	private const int someCrazyInt = int.MinValue;

	[Token(Token = "0x40016AE")]
	private const float someCrazyFloat = 1E-20f;

	[Token(Token = "0x40016AF")]
	private const string emptyString = "";

	[Token(Token = "0x40016B0")]
	private const int zeroInt = 0;

	[Token(Token = "0x40016B1")]
	private const float zeroFloat = 0f;

	[Token(Token = "0x40016B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int errorCount;

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x217CA94", Offset = "0x217CA94", VA = "0x217CA94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x217CC88", Offset = "0x217CC88", VA = "0x217CC88")]
	private void GeneralTest()
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x217CFA4", Offset = "0x217CFA4", VA = "0x217CFA4")]
	private void TestKeySystem()
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x217D060", Offset = "0x217D060", VA = "0x217D060")]
	private void TestIntStoring()
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x217D0FC", Offset = "0x217D0FC", VA = "0x217D0FC")]
	private void TestSPrefsDeleteKey()
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x217D328", Offset = "0x217D328", VA = "0x217D328")]
	private void TestDefaultValues()
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x217D600", Offset = "0x217D600", VA = "0x217D600")]
	private void TestExtremeValues()
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x217D9A0", Offset = "0x217D9A0", VA = "0x217D9A0")]
	private void AddError(string msg)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x217DA34", Offset = "0x217DA34", VA = "0x217DA34")]
	public TestClass()
	{
	}
}
[Token(Token = "0x20001DD")]
public class ViveportDemo : MonoBehaviour
{
	[Token(Token = "0x2000554")]
	private class MyLicenseChecker : Viveport.Api.LicenseChecker
	{
		[Token(Token = "0x6002639")]
		[Address(RVA = "0x24768E0", Offset = "0x24768E0", VA = "0x24768E0", Slot = "4")]
		public override void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
		{
		}

		[Token(Token = "0x600263A")]
		[Address(RVA = "0x2476A78", Offset = "0x2476A78", VA = "0x2476A78", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600263B")]
		[Address(RVA = "0x24752F8", Offset = "0x24752F8", VA = "0x24752F8")]
		public MyLicenseChecker()
		{
		}
	}

	[Token(Token = "0x40016B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nInitValue;

	[Token(Token = "0x40016B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nResult;

	[Token(Token = "0x40016B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nWidth;

	[Token(Token = "0x40016B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nHeight;

	[Token(Token = "0x40016B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int nXStart;

	[Token(Token = "0x40016B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int nYStart;

	[Token(Token = "0x40016B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string stringToEdit;

	[Token(Token = "0x40016BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string StatsCount;

	[Token(Token = "0x40016BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private string achivToEdit;

	[Token(Token = "0x40016BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string leaderboardToEdit;

	[Token(Token = "0x40016BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private string leaderboardUserName;

	[Token(Token = "0x40016BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string leaderboardScore;

	[Token(Token = "0x40016BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bInit;

	[Token(Token = "0x40016C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	private static bool bIsReady;

	[Token(Token = "0x40016C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	private static bool bUserProfileIsReady;

	[Token(Token = "0x40016C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	private static bool bArcadeIsReady;

	[Token(Token = "0x40016C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bTokenIsReady;

	[Token(Token = "0x40016C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string msgBuffer;

	[Token(Token = "0x40016C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static string APP_ID;

	[Token(Token = "0x40016C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string APP_KEY;

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x2471634", Offset = "0x2471634", VA = "0x2471634")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x2471730", Offset = "0x2471730", VA = "0x2471730")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x2471834", Offset = "0x2471834", VA = "0x2471834")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x2471838", Offset = "0x2471838", VA = "0x2471838")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x2475300", Offset = "0x2475300", VA = "0x2475300")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x24754C4", Offset = "0x24754C4", VA = "0x24754C4")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x247567C", Offset = "0x247567C", VA = "0x247567C")]
	private static void IsTokenReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x2475818", Offset = "0x2475818", VA = "0x2475818")]
	private static void UserProfileIsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x247594C", Offset = "0x247594C", VA = "0x247594C")]
	private static void GetSessionTokenHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x2475C88", Offset = "0x2475C88", VA = "0x2475C88")]
	private static void QueryRunTimeHandler(int nResult, int nMode)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x2475F64", Offset = "0x2475F64", VA = "0x2475F64")]
	private static void IsArcadeLeaderboardReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x247611C", Offset = "0x247611C", VA = "0x247611C")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x2476298", Offset = "0x2476298", VA = "0x2476298")]
	private static void DownloadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x24763B4", Offset = "0x24763B4", VA = "0x24763B4")]
	private static void UploadStatsHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x24764D0", Offset = "0x24764D0", VA = "0x24764D0")]
	private static void DownloadLeaderboardHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x24765EC", Offset = "0x24765EC", VA = "0x24765EC")]
	private static void UploadLeaderboardScoreHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x2476708", Offset = "0x2476708", VA = "0x2476708")]
	public ViveportDemo()
	{
	}
}
[Token(Token = "0x20001DE")]
public class ViveportDemo_ArcadeSession : MonoBehaviour
{
	[Token(Token = "0x40016C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40016C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40016C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40016CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40016CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ARCADE_APP_TEST_ID;

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x2476B68", Offset = "0x2476B68", VA = "0x2476B68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x2476C6C", Offset = "0x2476C6C", VA = "0x2476C6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x2476C70", Offset = "0x2476C70", VA = "0x2476C70")]
	private void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x2476DB0", Offset = "0x2476DB0", VA = "0x2476DB0")]
	public ViveportDemo_ArcadeSession()
	{
	}
}
[Token(Token = "0x20001DF")]
public class ViveportDemo_Deeplink : MonoBehaviour
{
	[Token(Token = "0x2000555")]
	private class GotoAppDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20006E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35BC", Offset = "0x5C35BC")]
		private sealed class <>c
		{
			[Token(Token = "0x40032A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C2B")]
			[Address(RVA = "0x247893C", Offset = "0x247893C", VA = "0x247893C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C2C")]
			[Address(RVA = "0x2478944", Offset = "0x2478944", VA = "0x2478944")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20006E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35CC", Offset = "0x5C35CC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40032A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40032A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x6002C2D")]
			[Address(RVA = "0x24788C0", Offset = "0x24788C0", VA = "0x24788C0")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C2E")]
			[Address(RVA = "0x24789D0", Offset = "0x24789D0", VA = "0x24789D0")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600263C")]
		[Address(RVA = "0x2478624", Offset = "0x2478624", VA = "0x2478624", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x600263D")]
		[Address(RVA = "0x2478794", Offset = "0x2478794", VA = "0x2478794", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x600263E")]
		[Address(RVA = "0x2477EC8", Offset = "0x2477EC8", VA = "0x2477EC8")]
		public GotoAppDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000556")]
	private class GotoStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20006E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35DC", Offset = "0x5C35DC")]
		private sealed class <>c
		{
			[Token(Token = "0x40032A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C30")]
			[Address(RVA = "0x2478F50", Offset = "0x2478F50", VA = "0x2478F50")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C31")]
			[Address(RVA = "0x2478F58", Offset = "0x2478F58", VA = "0x2478F58")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20006EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35EC", Offset = "0x5C35EC")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40032A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40032A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x6002C32")]
			[Address(RVA = "0x2478ED4", Offset = "0x2478ED4", VA = "0x2478ED4")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C33")]
			[Address(RVA = "0x2478FE4", Offset = "0x2478FE4", VA = "0x2478FE4")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x600263F")]
		[Address(RVA = "0x2478C38", Offset = "0x2478C38", VA = "0x2478C38", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002640")]
		[Address(RVA = "0x2478DA8", Offset = "0x2478DA8", VA = "0x2478DA8", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002641")]
		[Address(RVA = "0x2477ED0", Offset = "0x2477ED0", VA = "0x2477ED0")]
		public GotoStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x2000557")]
	private class GoToAppOrGoToStoreDeeplinkChecker : Viveport.Deeplink.DeeplinkChecker
	{
		[Serializable]
		[Token(Token = "0x20006EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C35FC", Offset = "0x5C35FC")]
		private sealed class <>c
		{
			[Token(Token = "0x40032A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40032A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__0_0;

			[Token(Token = "0x6002C35")]
			[Address(RVA = "0x2478328", Offset = "0x2478328", VA = "0x2478328")]
			public <>c()
			{
			}

			[Token(Token = "0x6002C36")]
			[Address(RVA = "0x2478330", Offset = "0x2478330", VA = "0x2478330")]
			internal void <OnSuccess>b__0_0()
			{
			}
		}

		[Token(Token = "0x20006EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C360C", Offset = "0x5C360C")]
		private sealed class <>c__DisplayClass1_0
		{
			[Token(Token = "0x40032AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int errorCode;

			[Token(Token = "0x40032AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string errorMessage;

			[Token(Token = "0x6002C37")]
			[Address(RVA = "0x24782AC", Offset = "0x24782AC", VA = "0x24782AC")]
			public <>c__DisplayClass1_0()
			{
			}

			[Token(Token = "0x6002C38")]
			[Address(RVA = "0x24783BC", Offset = "0x24783BC", VA = "0x24783BC")]
			internal void <OnFailure>b__0()
			{
			}
		}

		[Token(Token = "0x6002642")]
		[Address(RVA = "0x2478010", Offset = "0x2478010", VA = "0x2478010", Slot = "4")]
		public override void OnSuccess()
		{
		}

		[Token(Token = "0x6002643")]
		[Address(RVA = "0x2478180", Offset = "0x2478180", VA = "0x2478180", Slot = "5")]
		public override void OnFailure(int errorCode, string errorMessage)
		{
		}

		[Token(Token = "0x6002644")]
		[Address(RVA = "0x2477ED8", Offset = "0x2477ED8", VA = "0x2477ED8")]
		public GoToAppOrGoToStoreDeeplinkChecker()
		{
		}
	}

	[Token(Token = "0x40016CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string VIVEPORT_ID;

	[Token(Token = "0x40016CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string VIVEPORT_KEY;

	[Token(Token = "0x40016CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string GoToApp_Viveport_ID;

	[Token(Token = "0x40016CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string GoToStore_Viveport_ID;

	[Token(Token = "0x40016D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private string LaunchData;

	[Token(Token = "0x40016D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string LaunchBranchName;

	[Token(Token = "0x40016D2")]
	private const int SUCCESS = 0;

	[Token(Token = "0x40016D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInitComplete;

	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x247758C", Offset = "0x247758C", VA = "0x247758C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x24776AC", Offset = "0x24776AC", VA = "0x24776AC")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x2477778", Offset = "0x2477778", VA = "0x2477778")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x247787C", Offset = "0x247787C", VA = "0x247787C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x2477938", Offset = "0x2477938", VA = "0x2477938")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x2477A50", Offset = "0x2477A50", VA = "0x2477A50")]
	private static void IsReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x2477B70", Offset = "0x2477B70", VA = "0x2477B70")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x2477B74", Offset = "0x2477B74", VA = "0x2477B74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x2477EE0", Offset = "0x2477EE0", VA = "0x2477EE0")]
	public ViveportDemo_Deeplink()
	{
	}
}
[Token(Token = "0x20001E0")]
public class ViveportDemo_DLC : MonoBehaviour
{
	[Token(Token = "0x40016D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40016D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40016D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40016D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40016D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string APP_ID;

	[Token(Token = "0x40016D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool bInit;

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x2476E4C", Offset = "0x2476E4C", VA = "0x2476E4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x2476F50", Offset = "0x2476F50", VA = "0x2476F50")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x24774D0", Offset = "0x24774D0", VA = "0x24774D0")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x24774D4", Offset = "0x24774D4", VA = "0x24774D4")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x24774D8", Offset = "0x24774D8", VA = "0x24774D8")]
	private static void IsDLCReadyHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x24774E0", Offset = "0x24774E0", VA = "0x24774E0")]
	public ViveportDemo_DLC()
	{
	}
}
[Token(Token = "0x20001E1")]
public class ViveportDemo_IAP : MonoBehaviour
{
	[Token(Token = "0x2000558")]
	public class Item
	{
		[Token(Token = "0x400299C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string ticket;

		[Token(Token = "0x400299D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] items;

		[Token(Token = "0x400299E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string subscription_ticket;

		[Token(Token = "0x6002645")]
		[Address(RVA = "0x247AB0C", Offset = "0x247AB0C", VA = "0x247AB0C")]
		public Item()
		{
		}
	}

	[Token(Token = "0x2000559")]
	private class Result : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x400299F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Item mItem;

		[Token(Token = "0x6002646")]
		[Address(RVA = "0x247AB8C", Offset = "0x247AB8C", VA = "0x247AB8C", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002647")]
		[Address(RVA = "0x247AC78", Offset = "0x247AC78", VA = "0x247AC78", Slot = "5")]
		public override void OnRequestSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002648")]
		[Address(RVA = "0x247AD6C", Offset = "0x247AD6C", VA = "0x247AD6C", Slot = "6")]
		public override void OnPurchaseSuccess(string pchPurchaseId)
		{
		}

		[Token(Token = "0x6002649")]
		[Address(RVA = "0x247AE84", Offset = "0x247AE84", VA = "0x247AE84", Slot = "7")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryResponse response)
		{
		}

		[Token(Token = "0x600264A")]
		[Address(RVA = "0x247AF90", Offset = "0x247AF90", VA = "0x247AF90", Slot = "8")]
		public override void OnQuerySuccess(Viveport.IAPurchase.QueryListResponse response)
		{
		}

		[Token(Token = "0x600264B")]
		[Address(RVA = "0x247B9D4", Offset = "0x247B9D4", VA = "0x247B9D4", Slot = "9")]
		public override void OnBalanceSuccess(string pchBalance)
		{
		}

		[Token(Token = "0x600264C")]
		[Address(RVA = "0x247BA78", Offset = "0x247BA78", VA = "0x247BA78", Slot = "11")]
		public override void OnRequestSubscriptionSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600264D")]
		[Address(RVA = "0x247BB6C", Offset = "0x247BB6C", VA = "0x247BB6C", Slot = "12")]
		public override void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600264E")]
		[Address(RVA = "0x247BC60", Offset = "0x247BC60", VA = "0x247BC60", Slot = "13")]
		public override void OnSubscribeSuccess(string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600264F")]
		[Address(RVA = "0x247BD78", Offset = "0x247BD78", VA = "0x247BD78", Slot = "14")]
		public override void OnQuerySubscriptionSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002650")]
		[Address(RVA = "0x247C410", Offset = "0x247C410", VA = "0x247C410", Slot = "15")]
		public override void OnQuerySubscriptionListSuccess(Viveport.IAPurchase.Subscription[] subscriptionlist)
		{
		}

		[Token(Token = "0x6002651")]
		[Address(RVA = "0x247CAA8", Offset = "0x247CAA8", VA = "0x247CAA8", Slot = "16")]
		public override void OnCancelSubscriptionSuccess(bool bCanceled)
		{
		}

		[Token(Token = "0x6002652")]
		[Address(RVA = "0x247CB60", Offset = "0x247CB60", VA = "0x247CB60", Slot = "10")]
		public override void OnFailure(int nCode, string pchMessage)
		{
		}

		[Token(Token = "0x6002653")]
		[Address(RVA = "0x24793F0", Offset = "0x24793F0", VA = "0x24793F0")]
		public Result()
		{
		}
	}

	[Token(Token = "0x40016DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40016DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40016DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40016DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40016DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string IAP_APP_TEST_ID;

	[Token(Token = "0x40016DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string IAP_APP_TEST_KEY;

	[Token(Token = "0x40016E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Result mListener;

	[Token(Token = "0x40016E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bIsDuplicatedSubscription;

	[Token(Token = "0x40016E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool bInit_Done;

	[Token(Token = "0x40016E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	private static bool bIsReady_Done;

	[Token(Token = "0x40016E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	private static bool bShutdown_Done;

	[Token(Token = "0x40016E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text winText;

	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x247924C", Offset = "0x247924C", VA = "0x247924C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x2479468", Offset = "0x2479468", VA = "0x2479468")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x247946C", Offset = "0x247946C", VA = "0x247946C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x247A7EC", Offset = "0x247A7EC", VA = "0x247A7EC")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x247A908", Offset = "0x247A908", VA = "0x247A908")]
	private static void ShutdownStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x247AA30", Offset = "0x247AA30", VA = "0x247AA30")]
	public ViveportDemo_IAP()
	{
	}
}
[Token(Token = "0x20001E2")]
public class ViveportDemo_MainThreadDispatcher : MonoBehaviour
{
	[Token(Token = "0x200055A")]
	private class ThisCallbackWillNotWorkFine : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x6002654")]
		[Address(RVA = "0x247D044", Offset = "0x247D044", VA = "0x247D044", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002655")]
		[Address(RVA = "0x247D11C", Offset = "0x247D11C", VA = "0x247D11C")]
		public ThisCallbackWillNotWorkFine()
		{
		}
	}

	[Token(Token = "0x200055B")]
	private class ThisCallbackWillWorkFine_01 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20006ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C361C", Offset = "0x5C361C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x40032AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string pchCurrencyName;

			[Token(Token = "0x6002C39")]
			[Address(RVA = "0x247D234", Offset = "0x247D234", VA = "0x247D234")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002C3A")]
			[Address(RVA = "0x247D23C", Offset = "0x247D23C", VA = "0x247D23C")]
			internal void <OnSuccess>b__0()
			{
			}
		}

		[Token(Token = "0x6002656")]
		[Address(RVA = "0x247D124", Offset = "0x247D124", VA = "0x247D124", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002657")]
		[Address(RVA = "0x247CFA8", Offset = "0x247CFA8", VA = "0x247CFA8")]
		public ThisCallbackWillWorkFine_01()
		{
		}
	}

	[Token(Token = "0x200055C")]
	private class ThisCallbackWillWorkFine_02 : Viveport.IAPurchase.IAPurchaseListener
	{
		[Token(Token = "0x20006EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C362C", Offset = "0x5C362C")]
		private sealed class <ShowResult>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string pchCurrencyName;

			[Token(Token = "0x170003D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C3E")]
				[Address(RVA = "0x247D588", Offset = "0x247D588", VA = "0x247D588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C40")]
				[Address(RVA = "0x247D618", Offset = "0x247D618", VA = "0x247D618", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C3B")]
			[Address(RVA = "0x247D448", Offset = "0x247D448", VA = "0x247D448")]
			[DebuggerHidden]
			public <ShowResult>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002C3C")]
			[Address(RVA = "0x247D470", Offset = "0x247D470", VA = "0x247D470", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C3D")]
			[Address(RVA = "0x247D474", Offset = "0x247D474", VA = "0x247D474", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C3F")]
			[Address(RVA = "0x247D590", Offset = "0x247D590", VA = "0x247D590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002658")]
		[Address(RVA = "0x247D314", Offset = "0x247D314", VA = "0x247D314", Slot = "4")]
		public override void OnSuccess(string pchCurrencyName)
		{
		}

		[Token(Token = "0x6002659")]
		[Address(RVA = "0x247D3BC", Offset = "0x247D3BC", VA = "0x247D3BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3874", Offset = "0x5D3874")]
		private IEnumerator ShowResult(string pchCurrencyName)
		{
			return null;
		}

		[Token(Token = "0x600265A")]
		[Address(RVA = "0x247D468", Offset = "0x247D468", VA = "0x247D468")]
		public ThisCallbackWillWorkFine_02()
		{
		}
	}

	[Token(Token = "0x40016E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Text uiText;

	[Token(Token = "0x40016E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Text myApiResultText;

	[Token(Token = "0x40016E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly string appId;

	[Token(Token = "0x40016E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string apiKey;

	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x247CDC4", Offset = "0x247CDC4", VA = "0x247CDC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x247CEE4", Offset = "0x247CEE4", VA = "0x247CEE4")]
	private void InitCallback(int errorCode)
	{
	}

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x247CFB0", Offset = "0x247CFB0", VA = "0x247CFB0")]
	public ViveportDemo_MainThreadDispatcher()
	{
	}
}
[Token(Token = "0x20001E3")]
public class ViveportDemo_Subscription : MonoBehaviour
{
	[Token(Token = "0x40016EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int nWidth;

	[Token(Token = "0x40016EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int nHeight;

	[Token(Token = "0x40016EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool bIsReady;

	[Token(Token = "0x40016ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private int nXStart;

	[Token(Token = "0x40016EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int nYStart;

	[Token(Token = "0x40016EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static string APP_ID;

	[Token(Token = "0x40016F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool bInit;

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x247D620", Offset = "0x247D620", VA = "0x247D620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x247D724", Offset = "0x247D724", VA = "0x247D724")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x247E2A8", Offset = "0x247E2A8", VA = "0x247E2A8")]
	private static void InitStatusHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x247E450", Offset = "0x247E450", VA = "0x247E450")]
	private static void ShutdownHandler(int nResult)
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x247E454", Offset = "0x247E454", VA = "0x247E454")]
	private static void IsReadyHandler(int nResult, string message)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x247E750", Offset = "0x247E750", VA = "0x247E750")]
	public ViveportDemo_Subscription()
	{
	}
}
[Token(Token = "0x20001E4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1278", Offset = "0x5C1278")]
public class Beam : MonoBehaviour
{
	[Token(Token = "0x40016F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float startWidth;

	[Token(Token = "0x40016F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float endWidth;

	[Token(Token = "0x40016F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float startOffset;

	[Token(Token = "0x40016F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float endOffset;

	[Token(Token = "0x40016F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int count;

	[Token(Token = "0x40016F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool updateEveryFrame;

	[Token(Token = "0x40016F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool makeTail;

	[Token(Token = "0x40016F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxUVAngle;

	[Token(Token = "0x40016F9")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x40016FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Vector3> vertices;

	[Token(Token = "0x40016FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<Vector2> uvs;

	[Token(Token = "0x40016FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> normals;

	[Token(Token = "0x40016FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<int> indices;

	[Token(Token = "0x40016FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 position;

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x2283A7C", Offset = "0x2283A7C", VA = "0x2283A7C")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x2283B38", Offset = "0x2283B38", VA = "0x2283B38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x2284920", Offset = "0x2284920", VA = "0x2284920")]
	public void Update()
	{
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x2283C10", Offset = "0x2283C10", VA = "0x2283C10")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x22849C8", Offset = "0x22849C8", VA = "0x22849C8")]
	public Beam()
	{
	}
}
[Token(Token = "0x20001E5")]
internal class WaveVR_COMMITINFO
{
	[Token(Token = "0x40016FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string wavevr_version;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x25027C0", Offset = "0x25027C0", VA = "0x25027C0")]
	public WaveVR_COMMITINFO()
	{
	}
}
[Token(Token = "0x20001E6")]
public class ControllerConnectionStateReactor : MonoBehaviour
{
	[Token(Token = "0x4001700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WVR_DeviceType type;

	[Token(Token = "0x4001702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool connected;

	[Token(Token = "0x4001703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x4001704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x222ED5C", Offset = "0x222ED5C", VA = "0x222ED5C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x222EE78", Offset = "0x222EE78", VA = "0x222EE78")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x222F230", Offset = "0x222F230", VA = "0x222F230")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x222F318", Offset = "0x222F318", VA = "0x222F318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x222EFBC", Offset = "0x222EFBC", VA = "0x222EFBC")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x222F084", Offset = "0x222F084", VA = "0x222F084")]
	private void setActive(bool active)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x222F4A4", Offset = "0x222F4A4", VA = "0x222F4A4")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x222F8EC", Offset = "0x222F8EC", VA = "0x222F8EC")]
	public ControllerConnectionStateReactor()
	{
	}
}
[Token(Token = "0x20001E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C130C", Offset = "0x5C130C")]
public class ControllerFadeManager : MonoBehaviour
{
	[Token(Token = "0x4001705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private FadeManger fadeManager;

	[Token(Token = "0x4001706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float AngleHide;

	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x222F9EC", Offset = "0x222F9EC", VA = "0x222F9EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x222FCFC", Offset = "0x222FCFC", VA = "0x222FCFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x222FEA0", Offset = "0x222FEA0", VA = "0x222FEA0")]
	public ControllerFadeManager()
	{
	}
}
[Token(Token = "0x20001E8")]
public class WaveVR_EventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IPointerUpHandler, IPointerHoverHandler
{
	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D2C", Offset = "0x5C2D2C")]
	private sealed class <TrackPointer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40029A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40029A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_EventHandler <>4__this;

		[Token(Token = "0x170002E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600265E")]
			[Address(RVA = "0x6EBE68", Offset = "0x6EBE68", VA = "0x6EBE68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002660")]
			[Address(RVA = "0x6EBEF8", Offset = "0x6EBEF8", VA = "0x6EBEF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600265B")]
		[Address(RVA = "0x6EBCF0", Offset = "0x6EBCF0", VA = "0x6EBCF0")]
		[DebuggerHidden]
		public <TrackPointer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600265C")]
		[Address(RVA = "0x6EBD8C", Offset = "0x6EBD8C", VA = "0x6EBD8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600265D")]
		[Address(RVA = "0x6EBD90", Offset = "0x6EBD90", VA = "0x6EBD90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600265F")]
		[Address(RVA = "0x6EBE70", Offset = "0x6EBE70", VA = "0x6EBE70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001707")]
	private const string LOG_TAG = "WaveVR_EventHandler";

	[Token(Token = "0x4001708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x4001709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 goPosition;

	[Token(Token = "0x400170A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float goPositionZ;

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x6EB1D0", Offset = "0x6EB1D0", VA = "0x6EB1D0")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x6EB348", Offset = "0x6EB348", VA = "0x6EB348")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x6EB410", Offset = "0x6EB410", VA = "0x6EB410", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x6EB4E4", Offset = "0x6EB4E4", VA = "0x6EB4E4", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x6EB4E8", Offset = "0x6EB4E8", VA = "0x6EB4E8", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x6EB588", Offset = "0x6EB588", VA = "0x6EB588", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x6EB628", Offset = "0x6EB628", VA = "0x6EB628", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x6EB7AC", Offset = "0x6EB7AC", VA = "0x6EB7AC", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x6EB91C", Offset = "0x6EB91C", VA = "0x6EB91C", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x6EBA20", Offset = "0x6EBA20", VA = "0x6EBA20", Slot = "10")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x6EBBF4", Offset = "0x6EBBF4", VA = "0x6EBBF4", Slot = "12")]
	public void OnPointerHover(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x6EBC64", Offset = "0x6EBC64", VA = "0x6EBC64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDF80", Offset = "0x5CDF80")]
	private IEnumerator TrackPointer()
	{
		return null;
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x6EBD10", Offset = "0x6EBD10", VA = "0x6EBD10")]
	public WaveVR_EventHandler()
	{
	}
}
[Token(Token = "0x20001E9")]
public class WaveVR_Raycast : MonoBehaviour
{
	[Token(Token = "0x400170B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400170C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WVR_DeviceType index;

	[Token(Token = "0x400170D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool ListenToDevice;

	[Token(Token = "0x400170E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool AddLineRenderer;

	[Token(Token = "0x400170F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject raycastObject;

	[Token(Token = "0x4001710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4001711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private LineRenderer lr;

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x7036FC", Offset = "0x7036FC", VA = "0x7036FC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x703818", Offset = "0x703818", VA = "0x703818")]
	private void initLineRenderer()
	{
	}

	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x7039A8", Offset = "0x7039A8", VA = "0x7039A8")]
	private void shotRaycast()
	{
	}

	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x703CB8", Offset = "0x703CB8", VA = "0x703CB8")]
	private void updateLineRenderer()
	{
	}

	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x703EE0", Offset = "0x703EE0", VA = "0x703EE0")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x70439C", Offset = "0x70439C", VA = "0x70439C")]
	private void OnRenderModelLoaded(params object[] args)
	{
	}

	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x7045B8", Offset = "0x7045B8", VA = "0x7045B8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x7045C8", Offset = "0x7045C8", VA = "0x7045C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x70461C", Offset = "0x70461C", VA = "0x70461C")]
	private void onDestroy()
	{
	}

	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x7046DC", Offset = "0x7046DC", VA = "0x7046DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x70491C", Offset = "0x70491C", VA = "0x70491C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x704A48", Offset = "0x704A48", VA = "0x704A48")]
	public WaveVR_Raycast()
	{
	}
}
[Token(Token = "0x20001EA")]
public class FadeManger : MonoBehaviour
{
	[Token(Token = "0x4001712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float FadeTime;

	[Token(Token = "0x4001713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<Material> Materials;

	[Token(Token = "0x4001714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float InternalFadeTime;

	[Token(Token = "0x4001715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool isInTransition;

	[Token(Token = "0x4001716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool IsFadeOut;

	[Token(Token = "0x4001717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float alpha;

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x21DA898", Offset = "0x21DA898", VA = "0x21DA898")]
	public void Fade(bool fadeOut)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x21DA908", Offset = "0x21DA908", VA = "0x21DA908")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x21DAB20", Offset = "0x21DAB20", VA = "0x21DAB20")]
	public FadeManger()
	{
	}
}
[Token(Token = "0x20001EB")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x200055E")]
	public enum DOF
	{
		[Token(Token = "0x40029A4")]
		TRACK_6DOF,
		[Token(Token = "0x40029A5")]
		TRACK_3DOF
	}

	[Token(Token = "0x4001718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject target;

	[Token(Token = "0x4001719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DOF howTargetTrackHMD;

	[Token(Token = "0x400171A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool followPostion;

	[Token(Token = "0x400171B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool followRotation;

	[Token(Token = "0x400171C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_DevicePoseTracker inverter;

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x20AA070", Offset = "0x20AA070", VA = "0x20AA070")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x20AA4BC", Offset = "0x20AA4BC", VA = "0x20AA4BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x20AA2A0", Offset = "0x20AA2A0", VA = "0x20AA2A0")]
	private void Expand()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x20AA594", Offset = "0x20AA594", VA = "0x20AA594")]
	private void OnAfterNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x20AA850", Offset = "0x20AA850", VA = "0x20AA850")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x20001EC")]
public enum EGazeTriggerMouseKey
{
	[Token(Token = "0x400171E")]
	LeftClick,
	[Token(Token = "0x400171F")]
	RightClick,
	[Token(Token = "0x4001720")]
	MiddleClick
}
[Token(Token = "0x20001ED")]
public enum EGazeTriggerButton
{
	[Token(Token = "0x4001722")]
	System = 0,
	[Token(Token = "0x4001723")]
	Menu = 1,
	[Token(Token = "0x4001724")]
	Grip = 2,
	[Token(Token = "0x4001725")]
	DPad_Left = 3,
	[Token(Token = "0x4001726")]
	DPad_Up = 4,
	[Token(Token = "0x4001727")]
	DPad_Right = 5,
	[Token(Token = "0x4001728")]
	DPad_Down = 6,
	[Token(Token = "0x4001729")]
	Volume_Up = 7,
	[Token(Token = "0x400172A")]
	Volume_Down = 8,
	[Token(Token = "0x400172B")]
	DigitalTrigger = 9,
	[Token(Token = "0x400172C")]
	Touchpad = 16,
	[Token(Token = "0x400172D")]
	Trigger = 17
}
[Token(Token = "0x20001EE")]
public enum EGazeTriggerDevice
{
	[Token(Token = "0x400172F")]
	HMD,
	[Token(Token = "0x4001730")]
	NonDominantController,
	[Token(Token = "0x4001731")]
	DominantController,
	[Token(Token = "0x4001732")]
	HMDWithNonDominantController,
	[Token(Token = "0x4001733")]
	HMDWithDominantController,
	[Token(Token = "0x4001734")]
	HMDWithTwoControllers
}
[Token(Token = "0x20001EF")]
public enum EGazeInputEvent
{
	[Token(Token = "0x4001736")]
	PointerDown,
	[Token(Token = "0x4001737")]
	PointerClick,
	[Token(Token = "0x4001738")]
	PointerSubmit
}
[Token(Token = "0x20001F0")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C1384", Offset = "0x5C1384")]
public class GazeInputModule : PointerInputModule
{
	[Token(Token = "0x4001739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400173A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool progressRate;

	[Token(Token = "0x400173B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RateTextZPosition;

	[Token(Token = "0x400173C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool progressCounter;

	[Token(Token = "0x400173D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float CounterTextZPosition;

	[Token(Token = "0x400173E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float TimeToGaze;

	[Token(Token = "0x400173F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x4001740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public GameObject Head;

	[Token(Token = "0x4001741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool BtnControl;

	[Token(Token = "0x4001742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6288", Offset = "0x5C6288")]
	public EGazeTriggerDevice GazeDevice;

	[Token(Token = "0x4001743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6298", Offset = "0x5C6298")]
	public EGazeTriggerButton ButtonToTrigger;

	[Token(Token = "0x4001744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C62A8", Offset = "0x5C62A8")]
	public bool WithTimeGaze;

	[Token(Token = "0x4001745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool defWithTimeGaze;

	[Token(Token = "0x4001746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	private bool btnPressDown;

	[Token(Token = "0x4001747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
	private bool btnPressed;

	[Token(Token = "0x4001748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool btnPressUp;

	[Token(Token = "0x4001749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x400174A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float currUnscaledTime;

	[Token(Token = "0x400174B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x400174C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float gazeTime;

	[Token(Token = "0x400174D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text progressText;

	[Token(Token = "0x400174E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Text counterText;

	[Token(Token = "0x400174F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x4001750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GameObject percentCanvas;

	[Token(Token = "0x4001751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject counterCanvas;

	[Token(Token = "0x4001752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool EnableGaze;

	[Token(Token = "0x4001753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x4001754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x224DE5C", Offset = "0x224DE5C", VA = "0x224DE5C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x224DF2C", Offset = "0x224DF2C", VA = "0x224DF2C")]
	public void SetWithTimeGaze(bool withTimer)
	{
	}

	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x224E0AC", Offset = "0x224E0AC", VA = "0x224E0AC")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x224E2B8", Offset = "0x224E2B8", VA = "0x224E2B8")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x224E560", Offset = "0x224E560", VA = "0x224E560")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x224EBB0", Offset = "0x224EBB0", VA = "0x224EBB0")]
	private void PhysicRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x224F090", Offset = "0x224F090", VA = "0x224F090")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x224F1AC", Offset = "0x224F1AC", VA = "0x224F1AC")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x224F448", Offset = "0x224F448", VA = "0x224F448")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x224F7E0", Offset = "0x224F7E0", VA = "0x224F7E0")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x224FBF8", Offset = "0x224FBF8", VA = "0x224FBF8")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x224FFD4", Offset = "0x224FFD4", VA = "0x224FFD4")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x2250470", Offset = "0x2250470", VA = "0x2250470")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x2250948", Offset = "0x2250948", VA = "0x2250948")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x22512D4", Offset = "0x22512D4", VA = "0x22512D4")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x22514D8", Offset = "0x22514D8", VA = "0x22514D8", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x2251CD8", Offset = "0x2251CD8", VA = "0x2251CD8", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x2251930", Offset = "0x2251930", VA = "0x2251930")]
	private void ActivaeGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x2251D20", Offset = "0x2251D20", VA = "0x2251D20", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x2251F04", Offset = "0x2251F04", VA = "0x2251F04")]
	public GazeInputModule()
	{
	}
}
[Token(Token = "0x20001F1")]
public class GOEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4001755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 startPosition;

	[Token(Token = "0x4001757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color defaultColor;

	[Token(Token = "0x4001758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color changedColor;

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x224D218", Offset = "0x224D218", VA = "0x224D218")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x224D338", Offset = "0x224D338", VA = "0x224D338")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x224D520", Offset = "0x224D520", VA = "0x224D520")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x224D77C", Offset = "0x224D77C", VA = "0x224D77C")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x224D864", Offset = "0x224D864", VA = "0x224D864")]
	public void OnQuitGame()
	{
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x224D944", Offset = "0x224D944", VA = "0x224D944")]
	public void OnGazeReset()
	{
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x224D9A8", Offset = "0x224D9A8", VA = "0x224D9A8")]
	public void OnShowButton()
	{
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x224DAD4", Offset = "0x224DAD4", VA = "0x224DAD4")]
	public void OnHideButton()
	{
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x224DC00", Offset = "0x224DC00", VA = "0x224DC00")]
	public void ChangeColor(string color)
	{
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x224D420", Offset = "0x224D420", VA = "0x224D420")]
	private void ChangeColor(bool change)
	{
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x224D604", Offset = "0x224D604", VA = "0x224D604")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x224DD88", Offset = "0x224DD88", VA = "0x224DD88")]
	public GOEventTrigger()
	{
	}
}
[Token(Token = "0x20001F2")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C13B8", Offset = "0x5C13B8")]
public class IndicatorLine : MonoBehaviour
{
	[Token(Token = "0x4001759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400175A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C62B8", Offset = "0x5C62B8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C62B8", Offset = "0x5C62B8")]
	public float startWidth;

	[Token(Token = "0x400175B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6310", Offset = "0x5C6310")]
	public float endWidth;

	[Token(Token = "0x400175C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6330", Offset = "0x5C6330")]
	public float lineLength;

	[Token(Token = "0x400175D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color lineColor;

	[Token(Token = "0x400175E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x400175F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startOffset;

	[Token(Token = "0x4001760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float endOffset;

	[Token(Token = "0x4001761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int count;

	[Token(Token = "0x4001762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool makeTail;

	[Token(Token = "0x4001763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int maxUVAngle;

	[Token(Token = "0x4001764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Count;

	[Token(Token = "0x4001765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int verticesCount;

	[Token(Token = "0x4001766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int indicesCount;

	[Token(Token = "0x4001767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private List<Vector3> vertices;

	[Token(Token = "0x4001768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Vector2> uvs;

	[Token(Token = "0x4001769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private List<Vector3> normals;

	[Token(Token = "0x400176A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> indices;

	[Token(Token = "0x400176B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private List<Color32> colors;

	[Token(Token = "0x400176C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 position;

	[Token(Token = "0x400176D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Mesh updateMesh;

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x221A3A0", Offset = "0x221A3A0", VA = "0x221A3A0")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x221A3EC", Offset = "0x221A3EC", VA = "0x221A3EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x221A5C0", Offset = "0x221A5C0", VA = "0x221A5C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x221A8BC", Offset = "0x221A8BC", VA = "0x221A8BC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x221A8C0", Offset = "0x221A8C0", VA = "0x221A8C0")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x221A5C4", Offset = "0x221A5C4", VA = "0x221A5C4")]
	public void updateMeshSettings()
	{
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x221AB94", Offset = "0x221AB94", VA = "0x221AB94")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x221BBA0", Offset = "0x221BBA0", VA = "0x221BBA0")]
	public IndicatorLine()
	{
	}
}
[Token(Token = "0x20001F3")]
public class QuitApplication : MonoBehaviour
{
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x20EC4F8", Offset = "0x20EC4F8", VA = "0x20EC4F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x20EC4FC", Offset = "0x20EC4FC", VA = "0x20EC4FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x20EC500", Offset = "0x20EC500", VA = "0x20EC500")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x20EC508", Offset = "0x20EC508", VA = "0x20EC508")]
	public void BackToUpLayer()
	{
	}

	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x20EC514", Offset = "0x20EC514", VA = "0x20EC514")]
	public QuitApplication()
	{
	}
}
[Token(Token = "0x20001F4")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C144C", Offset = "0x5C144C")]
public class RingMeshDrawer : MonoBehaviour
{
	[Token(Token = "0x400176E")]
	private const string LOG_TAG = "RingMeshDrawer";

	[Token(Token = "0x400176F")]
	private const float DEF_RING_WIDTH = 0.01f;

	[Token(Token = "0x4001770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float RingWidth;

	[Token(Token = "0x4001771")]
	private const float MIN_RING_WIDTH = 0.001f;

	[Token(Token = "0x4001772")]
	private const float DEF_INNER_CIRCLE_RADIUS = 0.02f;

	[Token(Token = "0x4001773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float InnerCircleRadius;

	[Token(Token = "0x4001774")]
	private const float MIN_INNER_CIRCLE_RADIUS = 0.001f;

	[Token(Token = "0x4001775")]
	private const float DEF_RING_DISTANCE = 2f;

	[Token(Token = "0x4001776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float RingDistance;

	[Token(Token = "0x4001777")]
	private const float MIN_RING_DISTANCE = 0.3f;

	[Token(Token = "0x4001778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4001779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color ProgressColor;

	[Token(Token = "0x400177A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6350", Offset = "0x5C6350")]
	public int RingPercent;

	[Token(Token = "0x400177B")]
	private const float percentAngle = 3.6f;

	[Token(Token = "0x400177C")]
	private const string RING_MATERIAL = "RingUnlitTransparentMat";

	[Token(Token = "0x400177D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Material ringMaterial;

	[Token(Token = "0x400177E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material ringMaterialInstance;

	[Token(Token = "0x400177F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private MeshRenderer meshRend;

	[Token(Token = "0x4001780")]
	private const int RENDER_QUEUE_MIN = 1000;

	[Token(Token = "0x4001781")]
	private const int RENDER_QUEUE_MAX = 5000;

	[Token(Token = "0x4001782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshFilter meshFilt;

	[Token(Token = "0x4001783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool mEnabled;

	[Token(Token = "0x4001784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 ringPos;

	[Token(Token = "0x4001785")]
	private const int VERTEX_COUNT = 400;

	[Token(Token = "0x4001786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3[] ringVert;

	[Token(Token = "0x4001787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[] ringColor;

	[Token(Token = "0x4001788")]
	private const int TRIANGLE_COUNT = 600;

	[Token(Token = "0x4001789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int[] ringTriangle;

	[Token(Token = "0x400178A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector2[] ringUv;

	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x22DBE3C", Offset = "0x22DBE3C", VA = "0x22DBE3C")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x22DBED4", Offset = "0x22DBED4", VA = "0x22DBED4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x22DC170", Offset = "0x22DC170", VA = "0x22DC170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x22DC9EC", Offset = "0x22DC9EC", VA = "0x22DC9EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x22DCAA8", Offset = "0x22DCAA8", VA = "0x22DCAA8")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x22DC1FC", Offset = "0x22DC1FC", VA = "0x22DC1FC")]
	public void DrawRing(float radius, float innerRadius, int percent, Vector3 position)
	{
	}

	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x22DCBE8", Offset = "0x22DCBE8", VA = "0x22DCBE8")]
	public RingMeshDrawer()
	{
	}
}
[Serializable]
[Token(Token = "0x20001F5")]
public class BatteryPercentage
{
	[Token(Token = "0x400178B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float minBatteryPercentage;

	[Token(Token = "0x400178C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxBatteryPercentage;

	[Token(Token = "0x400178D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture texture;

	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x2283A74", Offset = "0x2283A74", VA = "0x2283A74")]
	public BatteryPercentage()
	{
	}
}
[Token(Token = "0x20001F6")]
public class UniversalControllerActions : MonoBehaviour
{
	[Token(Token = "0x200055F")]
	public enum AxisMapping
	{
		[Token(Token = "0x40029A7")]
		Y_Axis,
		[Token(Token = "0x40029A8")]
		Z_Axis
	}

	[Token(Token = "0x400178E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400178F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WVR_DeviceType device;

	[Token(Token = "0x4001790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool useSystemConfig;

	[Token(Token = "0x4001791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject TouchPad;

	[Token(Token = "0x4001792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Touch_Dot;

	[Token(Token = "0x4001793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public AxisMapping touch_YAxis_mapping;

	[Token(Token = "0x4001794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Touch_Press;

	[Token(Token = "0x4001795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameObject Trigger_Press;

	[Token(Token = "0x4001796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject VolumeUp_Press;

	[Token(Token = "0x4001797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public GameObject VolumeDown_Press;

	[Token(Token = "0x4001798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject Grip_Press;

	[Token(Token = "0x4001799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject DigitalTrigger_Press;

	[Token(Token = "0x400179A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Menu_Press;

	[Token(Token = "0x400179B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public GameObject Home_Press;

	[Token(Token = "0x400179C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Battery_Change;

	[Token(Token = "0x400179D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public List<BatteryPercentage> batteryPercentages;

	[Token(Token = "0x400179E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 originPosition;

	[Token(Token = "0x400179F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private MeshRenderer batteryMeshRenderer;

	[Token(Token = "0x40017A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x40017A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Mesh touchpadMesh;

	[Token(Token = "0x40017A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isTouchPressed;

	[Token(Token = "0x40017A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Color materialColor;

	[Token(Token = "0x40017A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x40017A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int batteryLevels;

	[Token(Token = "0x40017A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int t;

	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x2326520", Offset = "0x2326520", VA = "0x2326520")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x23267D4", Offset = "0x23267D4", VA = "0x23267D4")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x2326974", Offset = "0x2326974", VA = "0x2326974")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x2326A24", Offset = "0x2326A24", VA = "0x2326A24")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x2326CF8", Offset = "0x2326CF8", VA = "0x2326CF8")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x2328868", Offset = "0x2328868", VA = "0x2328868")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x2328F18", Offset = "0x2328F18", VA = "0x2328F18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x2328FF0", Offset = "0x2328FF0", VA = "0x2328FF0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x232911C", Offset = "0x232911C", VA = "0x232911C")]
	private void onBatteryStatusUpdate(params object[] args)
	{
	}

	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x2329238", Offset = "0x2329238", VA = "0x2329238")]
	private bool updateBatteryInfo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x2329B28", Offset = "0x2329B28", VA = "0x2329B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x2328A70", Offset = "0x2328A70", VA = "0x2328A70")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x2329ED0", Offset = "0x2329ED0", VA = "0x2329ED0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x232C940", Offset = "0x232C940", VA = "0x232C940")]
	public UniversalControllerActions()
	{
	}
}
[Token(Token = "0x20001F7")]
public class WaveVR_Resource
{
	[Token(Token = "0x40017A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40017A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_Resource mInstance;

	[Token(Token = "0x40017A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string mPreferredLanguage;

	[Token(Token = "0x40017AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private string mCountry;

	[Token(Token = "0x40017AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool useSystemLanguageFlag;

	[Token(Token = "0x17000084")]
	public static WaveVR_Resource instance
	{
		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x23BF324", Offset = "0x23BF324", VA = "0x23BF324")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x23BF4B4", Offset = "0x23BF4B4", VA = "0x23BF4B4")]
	public string getString(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x23BF684", Offset = "0x23BF684", VA = "0x23BF684")]
	public string getStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x23BFA30", Offset = "0x23BFA30", VA = "0x23BFA30")]
	public string getSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x23BFB2C", Offset = "0x23BFB2C", VA = "0x23BFB2C")]
	public string getSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x23BFC28", Offset = "0x23BFC28", VA = "0x23BFC28")]
	public bool setPreferredLanguage(string lang, string country)
	{
		return default(bool);
	}

	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x23BFCDC", Offset = "0x23BFCDC", VA = "0x23BFCDC")]
	public void useSystemLanguage()
	{
	}

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x23BF43C", Offset = "0x23BF43C", VA = "0x23BF43C")]
	public WaveVR_Resource()
	{
	}
}
[Token(Token = "0x20001F8")]
public class WVR_Android : Interop.WVR_Base
{
	[Token(Token = "0x2000560")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x6002661")]
		[Address(RVA = "0x248D980", Offset = "0x248D980", VA = "0x248D980")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x6002662")]
		[Address(RVA = "0x248EA58", Offset = "0x248EA58", VA = "0x248EA58")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x2000561")]
	private class RequestUsbCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x6002663")]
		[Address(RVA = "0x248DBB8", Offset = "0x248DBB8", VA = "0x248DBB8")]
		internal RequestUsbCompleteHandler()
		{
		}

		[Token(Token = "0x6002664")]
		[Address(RVA = "0x248EDB8", Offset = "0x248EDB8", VA = "0x248EDB8")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x2000562")]
	public class OEMConfigCallback : AndroidJavaProxy
	{
		[Token(Token = "0x6002665")]
		[Address(RVA = "0x248E8B4", Offset = "0x248E8B4", VA = "0x248E8B4")]
		internal OEMConfigCallback()
		{
		}

		[Token(Token = "0x6002666")]
		[Address(RVA = "0x248E970", Offset = "0x248E970", VA = "0x248E970")]
		public void onConfigChanged()
		{
		}
	}

	[Token(Token = "0x40017AC")]
	private const string PERMISSION_MANAGER_CLASSNAME = "com.htc.vr.permission.client.PermissionManager";

	[Token(Token = "0x40017AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WVR_RequestCompleteCallback mCallback;

	[Token(Token = "0x40017AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WVR_RequestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x40017AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject permissionsManager;

	[Token(Token = "0x40017B0")]
	private const string RESOURCE_WRAPPER_CLASSNAME = "com.htc.vr.unity.ResourceWrapper";

	[Token(Token = "0x40017B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private AndroidJavaObject ResourceWrapper;

	[Token(Token = "0x40017B2")]
	private const string OEM_CONFIG_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

	[Token(Token = "0x40017B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WVR_OnOEMConfigChanged OEMChangedCallback;

	[Token(Token = "0x40017B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static AndroidJavaObject mOEMConfig;

	[Token(Token = "0x40017B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OEMConfigCallback mOEMCallback;

	[PreserveSig]
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x2484BE8", Offset = "0x2484BE8", VA = "0x2484BE8")]
	public static extern bool WVR_PollEventQueue_Android(ref WVR_Event_t e);

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x2484CBC", Offset = "0x2484CBC", VA = "0x2484CBC", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x2484D40", Offset = "0x2484D40", VA = "0x2484D40")]
	public static extern int WVR_GetInputDeviceCapability_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x2484E14", Offset = "0x2484E14", VA = "0x2484E14", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x2484EA0", Offset = "0x2484EA0", VA = "0x2484EA0")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x2484F74", Offset = "0x2484F74", VA = "0x2484F74", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x2485000", Offset = "0x2485000", VA = "0x2485000")]
	public static extern bool WVR_GetInputDeviceState_Android(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x2485104", Offset = "0x2485104", VA = "0x2485104", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x24851B0", Offset = "0x24851B0", VA = "0x24851B0")]
	public static extern int WVR_GetInputTypeCount_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x2485284", Offset = "0x2485284", VA = "0x2485284", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x2485310", Offset = "0x2485310", VA = "0x2485310")]
	public static extern bool WVR_GetInputButtonState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x24853EC", Offset = "0x24853EC", VA = "0x24853EC", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x2485478", Offset = "0x2485478", VA = "0x2485478")]
	public static extern bool WVR_GetInputTouchState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x2485554", Offset = "0x2485554", VA = "0x2485554", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x24855E0", Offset = "0x24855E0", VA = "0x24855E0")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x24856BC", Offset = "0x24856BC", VA = "0x24856BC", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x2485750", Offset = "0x2485750", VA = "0x2485750")]
	public static extern void WVR_GetPoseState_Android(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x24858C4", Offset = "0x24858C4", VA = "0x24858C4", Slot = "12")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x2485968", Offset = "0x2485968", VA = "0x2485968")]
	public static extern void WVR_GetSyncPose_Android(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x2485B7C", Offset = "0x2485B7C", VA = "0x2485B7C", Slot = "13")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x2485C10", Offset = "0x2485C10", VA = "0x2485C10")]
	public static extern bool WVR_IsDeviceConnected_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x2485CE4", Offset = "0x2485CE4", VA = "0x2485CE4", Slot = "14")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x2485D68", Offset = "0x2485D68", VA = "0x2485D68")]
	public static extern void WVR_TriggerVibration_Android(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x2485E54", Offset = "0x2485E54", VA = "0x2485E54", Slot = "15")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x2485F00", Offset = "0x2485F00", VA = "0x2485F00")]
	public static extern void WVR_InAppRecenter_Android(WVR_RecenterType recenterType);

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x2486000", Offset = "0x2486000", VA = "0x2486000", Slot = "16")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x2486080", Offset = "0x2486080", VA = "0x2486080")]
	public static extern void WVR_SetNeckModelEnabled_Android(bool enabled);

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x248614C", Offset = "0x248614C", VA = "0x248614C", Slot = "17")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x24861D0", Offset = "0x24861D0", VA = "0x24861D0")]
	public static extern void WVR_SetNeckModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x24862D0", Offset = "0x24862D0", VA = "0x24862D0", Slot = "18")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x2486350", Offset = "0x2486350", VA = "0x2486350")]
	public static extern void WVR_SetArmModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x2486450", Offset = "0x2486450", VA = "0x2486450", Slot = "19")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x24864D0", Offset = "0x24864D0", VA = "0x24864D0")]
	public static extern void WVR_SetArmSticky_Android(bool stickyArm);

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x24865D0", Offset = "0x24865D0", VA = "0x24865D0", Slot = "20")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x2486650", Offset = "0x2486650", VA = "0x2486650")]
	public static extern bool WVR_SetInputRequest_Android(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x248673C", Offset = "0x248673C", VA = "0x248673C", Slot = "21")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x24867D0", Offset = "0x24867D0", VA = "0x24867D0")]
	public static extern bool WVR_GetInputMappingPair_Android(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x24868B4", Offset = "0x24868B4", VA = "0x24868B4", Slot = "22")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x2486948", Offset = "0x2486948", VA = "0x2486948")]
	public static extern uint WVR_GetInputMappingTable_Android(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x2486A2C", Offset = "0x2486A2C", VA = "0x2486A2C", Slot = "23")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x2486AC0", Offset = "0x2486AC0", VA = "0x2486AC0")]
	public static extern WVR_Arena_t WVR_GetArena_Android();

	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x2486BBC", Offset = "0x2486BBC", VA = "0x2486BBC", Slot = "24")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x2486C40", Offset = "0x2486C40", VA = "0x2486C40")]
	public static extern bool WVR_SetArena_Android(ref WVR_Arena_t arena);

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x2486D44", Offset = "0x2486D44", VA = "0x2486D44", Slot = "25")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x2486DC8", Offset = "0x2486DC8", VA = "0x2486DC8")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_Android();

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x2486E84", Offset = "0x2486E84", VA = "0x2486E84", Slot = "26")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x2486F00", Offset = "0x2486F00", VA = "0x2486F00")]
	public static extern void WVR_SetArenaVisible_Android(WVR_ArenaVisible config);

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x2486FCC", Offset = "0x2486FCC", VA = "0x2486FCC", Slot = "27")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x2487050", Offset = "0x2487050", VA = "0x2487050")]
	public static extern bool WVR_IsOverArenaRange_Android();

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x2487114", Offset = "0x2487114", VA = "0x2487114", Slot = "28")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x2487190", Offset = "0x2487190", VA = "0x2487190")]
	public static extern float WVR_GetDeviceBatteryPercentage_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x248725C", Offset = "0x248725C", VA = "0x248725C", Slot = "29")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x24872E0", Offset = "0x24872E0", VA = "0x24872E0")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x24873AC", Offset = "0x24873AC", VA = "0x24873AC", Slot = "30")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x2487430", Offset = "0x2487430", VA = "0x2487430")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x24874FC", Offset = "0x24874FC", VA = "0x24874FC", Slot = "31")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x2487580", Offset = "0x2487580", VA = "0x2487580")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x248764C", Offset = "0x248764C", VA = "0x248764C", Slot = "32")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x24876D0", Offset = "0x24876D0", VA = "0x24876D0")]
	public static extern float WVR_GetBatteryTemperature_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x248779C", Offset = "0x248779C", VA = "0x248779C", Slot = "33")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x2487820", Offset = "0x2487820", VA = "0x2487820")]
	public static extern bool WVR_StartEyeTracking();

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x2487928", Offset = "0x2487928", VA = "0x2487928", Slot = "34")]
	public override bool StartEyeTracking()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x24879A0", Offset = "0x24879A0", VA = "0x24879A0")]
	public static extern void WVR_StopEyeTracking();

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x2487A9C", Offset = "0x2487A9C", VA = "0x2487A9C", Slot = "35")]
	public override void StopEyeTracking()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x2487B18", Offset = "0x2487B18", VA = "0x2487B18")]
	public static extern bool WVR_GetEyePose(ref WVR_EyePose_t eyePose);

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x2487C24", Offset = "0x2487C24", VA = "0x2487C24", Slot = "36")]
	public override bool GetEyePose(ref WVR_EyePose_t eyePose)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x2487CA8", Offset = "0x2487CA8", VA = "0x2487CA8")]
	public static extern WVR_InitError WVR_Init_Android(WVR_AppType eType);

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x2487DA0", Offset = "0x2487DA0", VA = "0x2487DA0", Slot = "37")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x2487E20", Offset = "0x2487E20", VA = "0x2487E20")]
	public static extern void WVR_Quit_Android();

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x2487F10", Offset = "0x2487F10", VA = "0x2487F10", Slot = "39")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x2487F88", Offset = "0x2487F88", VA = "0x2487F88")]
	public static extern IntPtr WVR_GetInitErrorString_Android(WVR_InitError error);

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x2488054", Offset = "0x2488054", VA = "0x2488054", Slot = "40")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x24880D8", Offset = "0x24880D8", VA = "0x24880D8")]
	public static extern uint WVR_GetWaveRuntimeVersion_Android();

	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x2488194", Offset = "0x2488194", VA = "0x2488194", Slot = "41")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x2488210", Offset = "0x2488210", VA = "0x2488210")]
	public static extern uint WVR_GetWaveSDKVersion_Android();

	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x24882CC", Offset = "0x24882CC", VA = "0x24882CC", Slot = "42")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x2488348", Offset = "0x2488348", VA = "0x2488348")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_Android();

	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x248840C", Offset = "0x248840C", VA = "0x248840C", Slot = "43")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x2488488", Offset = "0x2488488", VA = "0x2488488")]
	internal static extern WVR_RenderError WVR_RenderInit_Android(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x2488588", Offset = "0x2488588", VA = "0x2488588", Slot = "44")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x2488608", Offset = "0x2488608", VA = "0x2488608")]
	internal static extern bool WVR_SetPerformanceLevels_Android(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x24886E4", Offset = "0x24886E4", VA = "0x24886E4", Slot = "45")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x2488770", Offset = "0x2488770", VA = "0x2488770")]
	internal static extern bool WVR_EnableAdaptiveQuality_Android(bool enable);

	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x2488844", Offset = "0x2488844", VA = "0x2488844", Slot = "46")]
	internal override bool EnableAdaptiveQuality(bool enable)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x24888C8", Offset = "0x24888C8", VA = "0x24888C8")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_Android();

	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x248898C", Offset = "0x248898C", VA = "0x248898C", Slot = "47")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x2488A08", Offset = "0x2488A08", VA = "0x2488A08")]
	public static extern bool WVR_StartCamera_Android(ref WVR_CameraInfo_t info);

	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x2488B10", Offset = "0x2488B10", VA = "0x2488B10", Slot = "48")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x2488B90", Offset = "0x2488B90", VA = "0x2488B90")]
	public static extern void WVR_StopCamera_Android();

	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x2488C88", Offset = "0x2488C88", VA = "0x2488C88", Slot = "49")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x2488D00", Offset = "0x2488D00", VA = "0x2488D00")]
	public static extern bool WVR_UpdateTexture_Android(uint textureid);

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x2488E08", Offset = "0x2488E08", VA = "0x2488E08", Slot = "50")]
	public override bool UpdateTexture(uint textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x2488E88", Offset = "0x2488E88", VA = "0x2488E88")]
	public static extern bool WVR_GetCameraIntrinsic_Android(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x2488F64", Offset = "0x2488F64", VA = "0x2488F64", Slot = "51")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x2488FF0", Offset = "0x2488FF0", VA = "0x2488FF0")]
	public static extern bool WVR_IsDeviceSuspend_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x24890C4", Offset = "0x24890C4", VA = "0x24890C4", Slot = "52")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x2489148", Offset = "0x2489148", VA = "0x2489148")]
	public static extern void WVR_ConvertMatrixQuaternion_Android(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x2489224", Offset = "0x2489224", VA = "0x2489224", Slot = "53")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x24892B8", Offset = "0x24892B8", VA = "0x24892B8")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_Android(WVR_DeviceType type);

	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x2489384", Offset = "0x2489384", VA = "0x2489384", Slot = "54")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x2489408", Offset = "0x2489408", VA = "0x2489408")]
	public static extern void WVR_SetParameters_Android(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x2489510", Offset = "0x2489510", VA = "0x2489510", Slot = "55")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x2489598", Offset = "0x2489598", VA = "0x2489598")]
	public static extern uint WVR_GetParameters_Android(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x24896B0", Offset = "0x24896B0", VA = "0x24896B0", Slot = "56")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x2489750", Offset = "0x2489750", VA = "0x2489750")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_Android();

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x248980C", Offset = "0x248980C", VA = "0x248980C", Slot = "57")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x2489888", Offset = "0x2489888", VA = "0x2489888")]
	public static extern bool WVR_SetInteractionMode_Android(WVR_InteractionMode mode);

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x248995C", Offset = "0x248995C", VA = "0x248995C", Slot = "58")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x24899E0", Offset = "0x24899E0", VA = "0x24899E0")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_Android();

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x2489A9C", Offset = "0x2489A9C", VA = "0x2489A9C", Slot = "59")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x2489B18", Offset = "0x2489B18", VA = "0x2489B18")]
	public static extern bool WVR_SetGazeTriggerType_Android(WVR_GazeTriggerType type);

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x2489BEC", Offset = "0x2489BEC", VA = "0x2489BEC", Slot = "60")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x2489C70", Offset = "0x2489C70", VA = "0x2489C70")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_Android();

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x2489D2C", Offset = "0x2489D2C", VA = "0x2489D2C", Slot = "61")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x2489DA8", Offset = "0x2489DA8", VA = "0x2489DA8")]
	public static extern bool WVR_GetDeviceErrorState_Android(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x2489E84", Offset = "0x2489E84", VA = "0x2489E84", Slot = "62")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x2489F10", Offset = "0x2489F10", VA = "0x2489F10")]
	public static extern void WVR_GetRenderTargetSize_Android(ref uint width, ref uint height);

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x2489FE4", Offset = "0x2489FE4", VA = "0x2489FE4", Slot = "63")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x248A070", Offset = "0x248A070", VA = "0x248A070")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_Android(WVR_Eye eye, float near, float far);

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x248A188", Offset = "0x248A188", VA = "0x248A188", Slot = "64")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x248A230", Offset = "0x248A230", VA = "0x248A230")]
	public static extern void WVR_GetClippingPlaneBoundary_Android(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x248A31C", Offset = "0x248A31C", VA = "0x248A31C", Slot = "65")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x248A3C8", Offset = "0x248A3C8", VA = "0x248A3C8")]
	public static extern void WVR_SetOverfillRatio_Android(float ratioX, float ratioY);

	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x248A49C", Offset = "0x248A49C", VA = "0x248A49C", Slot = "66")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x248A528", Offset = "0x248A528", VA = "0x248A528")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_Android(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x248A604", Offset = "0x248A604", VA = "0x248A604", Slot = "67")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x248A698", Offset = "0x248A698", VA = "0x248A698")]
	public static extern WVR_SubmitError WVR_SubmitFrame_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x248A8D4", Offset = "0x248A8D4", VA = "0x248A8D4", Slot = "68")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x248A978", Offset = "0x248A978", VA = "0x248A978")]
	public static extern void WVR_PreRenderEye_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams);

	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x248AAA8", Offset = "0x248AAA8", VA = "0x248AAA8", Slot = "69")]
	public override void PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x248AB38", Offset = "0x248AB38", VA = "0x248AB38")]
	public static extern bool WVR_RequestScreenshot_Android(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x248AC24", Offset = "0x248AC24", VA = "0x248AC24", Slot = "70")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x248ACC8", Offset = "0x248ACC8", VA = "0x248ACC8")]
	public static extern void WVR_RenderMask_Android(WVR_Eye eye);

	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x248ADC8", Offset = "0x248ADC8", VA = "0x248ADC8", Slot = "71")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x248AE48", Offset = "0x248AE48", VA = "0x248AE48")]
	public static extern bool WVR_GetRenderProps_Android(ref WVR_RenderProps_t props);

	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x248AF78", Offset = "0x248AF78", VA = "0x248AF78", Slot = "72")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x248AFF8", Offset = "0x248AFF8", VA = "0x248AFF8")]
	public static extern IntPtr WVR_ObtainTextureQueue_Android(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x248B0EC", Offset = "0x248B0EC", VA = "0x248B0EC", Slot = "73")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x248B198", Offset = "0x248B198", VA = "0x248B198")]
	public static extern uint WVR_GetTextureQueueLength_Android(IntPtr handle);

	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x248B264", Offset = "0x248B264", VA = "0x248B264", Slot = "74")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x248B2E8", Offset = "0x248B2E8", VA = "0x248B2E8")]
	public static extern WVR_TextureParams_t WVR_GetTexture_Android(IntPtr handle, int index);

	[Token(Token = "0x6000F83")]
	[Address(RVA = "0x248B3F8", Offset = "0x248B3F8", VA = "0x248B3F8", Slot = "75")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000F84")]
	[Address(RVA = "0x248B488", Offset = "0x248B488", VA = "0x248B488")]
	public static extern int WVR_GetAvailableTextureIndex_Android(IntPtr handle);

	[Token(Token = "0x6000F85")]
	[Address(RVA = "0x248B554", Offset = "0x248B554", VA = "0x248B554", Slot = "76")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000F86")]
	[Address(RVA = "0x248B5D8", Offset = "0x248B5D8", VA = "0x248B5D8")]
	public static extern void WVR_ReleaseTextureQueue_Android(IntPtr handle);

	[Token(Token = "0x6000F87")]
	[Address(RVA = "0x248B6A4", Offset = "0x248B6A4", VA = "0x248B6A4", Slot = "77")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F88")]
	[Address(RVA = "0x248B728", Offset = "0x248B728", VA = "0x248B728")]
	public static extern bool WVR_IsRenderFoveationSupport_Android();

	[Token(Token = "0x6000F89")]
	[Address(RVA = "0x248B7EC", Offset = "0x248B7EC", VA = "0x248B7EC", Slot = "78")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F8A")]
	[Address(RVA = "0x248B868", Offset = "0x248B868", VA = "0x248B868")]
	public static extern void WVR_RenderFoveation_Android(bool enable);

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x248B934", Offset = "0x248B934", VA = "0x248B934", Slot = "79")]
	public override void RenderFoveation(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x248B9B8", Offset = "0x248B9B8", VA = "0x248B9B8")]
	public static extern void WVR_SetPosePredictEnabled_Android(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict);

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x248BAA4", Offset = "0x248BAA4", VA = "0x248BAA4", Slot = "80")]
	public override void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
	{
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x248BB34", Offset = "0x248BB34", VA = "0x248BB34", Slot = "81")]
	public override string DeployRenderModelAssets(int deviceIndex, string renderModelName)
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x248BEE0", Offset = "0x248BEE0", VA = "0x248BEE0")]
	public static extern void WVR_SetFocusedController_Android(WVR_DeviceType focusController);

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x248BFBC", Offset = "0x248BFBC", VA = "0x248BFBC", Slot = "82")]
	public override void SetFocusedController(WVR_DeviceType focusController)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x248C040", Offset = "0x248C040", VA = "0x248C040")]
	public static extern WVR_DeviceType WVR_GetFocusedController_Android();

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x248C114", Offset = "0x248C114", VA = "0x248C114", Slot = "83")]
	public override WVR_DeviceType GetFocusedController()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x248C190", Offset = "0x248C190", VA = "0x248C190")]
	public static extern bool WVR_OpenMesh_Android(string filename, ref uint sessiionid, IntPtr errorCode, bool merge);

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x248C2D8", Offset = "0x248C2D8", VA = "0x248C2D8", Slot = "84")]
	public override bool OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x248C378", Offset = "0x248C378", VA = "0x248C378")]
	public static extern bool WVR_getSectionCount_Android(uint sessionid, ref uint sectionCount);

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x248C458", Offset = "0x248C458", VA = "0x248C458", Slot = "85")]
	public override bool GetSectionCount(uint sessionid, ref uint sectionCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x248C4E0", Offset = "0x248C4E0", VA = "0x248C4E0")]
	public static extern bool WVR_getMeshData_Android(uint sessionid, [In][Out] FBXInfo_t[] infoArray);

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x248C600", Offset = "0x248C600", VA = "0x248C600", Slot = "86")]
	public override bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x248C688", Offset = "0x248C688", VA = "0x248C688")]
	public static extern bool WVR_getSectionData_Android(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active);

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x248C7C8", Offset = "0x248C7C8", VA = "0x248C7C8", Slot = "87")]
	public override bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x248C880", Offset = "0x248C880", VA = "0x248C880")]
	public static extern void WVR_releaseMesh_Android(uint sessionid);

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x248C988", Offset = "0x248C988", VA = "0x248C988", Slot = "88")]
	public override void ReleaseMesh(uint sessionid)
	{
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x248CA08", Offset = "0x248CA08", VA = "0x248CA08")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x248CE98", Offset = "0x248CE98", VA = "0x248CE98", Slot = "89")]
	public override bool IsPermissionInitialed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x248CFCC", Offset = "0x248CFCC", VA = "0x248CFCC", Slot = "90")]
	public override bool ShowDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x248D090", Offset = "0x248D090", VA = "0x248D090", Slot = "91")]
	public override bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x248D1C0", Offset = "0x248D1C0", VA = "0x248D1C0", Slot = "92")]
	public override bool ShouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x248D2F0", Offset = "0x248D2F0", VA = "0x248D2F0", Slot = "93")]
	public override void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x248DA3C", Offset = "0x248DA3C", VA = "0x248DA3C", Slot = "94")]
	public override void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x248DC74", Offset = "0x248DC74", VA = "0x248DC74")]
	private bool initializeResourceObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x248DD5C", Offset = "0x248DD5C", VA = "0x248DD5C", Slot = "95")]
	public override string GetStringBySystemLanguage(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x248DE90", Offset = "0x248DE90", VA = "0x248DE90", Slot = "96")]
	public override string GetStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x248E06C", Offset = "0x248E06C", VA = "0x248E06C", Slot = "97")]
	public override string GetSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x248E138", Offset = "0x248E138", VA = "0x248E138", Slot = "98")]
	public override string GetSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x248E204", Offset = "0x248E204", VA = "0x248E204")]
	private static void initAJC()
	{
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x248E42C", Offset = "0x248E42C", VA = "0x248E42C", Slot = "99")]
	public override string GetOEMConfigByKey(string key)
	{
		return null;
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x248E6F8", Offset = "0x248E6F8", VA = "0x248E6F8", Slot = "100")]
	public override void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
	{
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x248E788", Offset = "0x248E788", VA = "0x248E788")]
	public WVR_Android()
	{
	}
}
[Token(Token = "0x20001F9")]
public class WVR_HVR : Interop.WVR_Base
{
	[PreserveSig]
	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x248EEA8", Offset = "0x248EEA8", VA = "0x248EEA8")]
	public static extern bool WVR_PollEventQueue_HVR(ref WVR_Event_t e);

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x248EFB0", Offset = "0x248EFB0", VA = "0x248EFB0", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x248EFB8", Offset = "0x248EFB8", VA = "0x248EFB8")]
	public static extern int WVR_GetInputDeviceCapability_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x248F08C", Offset = "0x248F08C", VA = "0x248F08C", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x248F098", Offset = "0x248F098", VA = "0x248F098")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x248F16C", Offset = "0x248F16C", VA = "0x248F16C", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x248F178", Offset = "0x248F178", VA = "0x248F178")]
	public static extern bool WVR_GetInputDeviceState_HVR(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x248F27C", Offset = "0x248F27C", VA = "0x248F27C", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x248F2B8", Offset = "0x248F2B8", VA = "0x248F2B8")]
	public static extern int WVR_GetInputTypeCount_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x248F3C0", Offset = "0x248F3C0", VA = "0x248F3C0", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x248F3D0", Offset = "0x248F3D0", VA = "0x248F3D0")]
	public static extern bool WVR_GetInputButtonState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x248F4AC", Offset = "0x248F4AC", VA = "0x248F4AC", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x248F4B8", Offset = "0x248F4B8", VA = "0x248F4B8")]
	public static extern bool WVR_GetInputTouchState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x248F594", Offset = "0x248F594", VA = "0x248F594", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x248F5A0", Offset = "0x248F5A0", VA = "0x248F5A0")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x248F67C", Offset = "0x248F67C", VA = "0x248F67C", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x248F698", Offset = "0x248F698", VA = "0x248F698")]
	public static extern void WVR_GetPoseState_HVR(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x248F808", Offset = "0x248F808", VA = "0x248F808", Slot = "12")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x248F838", Offset = "0x248F838", VA = "0x248F838")]
	public static extern void WVR_GetSyncPose_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x248FA48", Offset = "0x248FA48", VA = "0x248FA48", Slot = "13")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x248FA58", Offset = "0x248FA58", VA = "0x248FA58")]
	public static extern bool WVR_IsDeviceConnected_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x248FB60", Offset = "0x248FB60", VA = "0x248FB60", Slot = "14")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x248FB68", Offset = "0x248FB68", VA = "0x248FB68")]
	public static extern void WVR_TriggerVibration_HVR(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x248FC88", Offset = "0x248FC88", VA = "0x248FC88", Slot = "15")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x248FCC0", Offset = "0x248FCC0", VA = "0x248FCC0")]
	public static extern void WVR_InAppRecenter_HVR(WVR_RecenterType recenterType);

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x248FDBC", Offset = "0x248FDBC", VA = "0x248FDBC", Slot = "16")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x248FDC8", Offset = "0x248FDC8", VA = "0x248FDC8")]
	public static extern void WVR_SetNeckModelEnabled_HVR(bool enabled);

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x248FE94", Offset = "0x248FE94", VA = "0x248FE94", Slot = "17")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x248FEA0", Offset = "0x248FEA0", VA = "0x248FEA0")]
	public static extern void WVR_SetNeckModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x248FF9C", Offset = "0x248FF9C", VA = "0x248FF9C", Slot = "18")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x248FFA8", Offset = "0x248FFA8", VA = "0x248FFA8")]
	public static extern void WVR_SetArmModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x24900A4", Offset = "0x24900A4", VA = "0x24900A4", Slot = "19")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x24900B0", Offset = "0x24900B0", VA = "0x24900B0")]
	public static extern void WVR_SetArmSticky_HVR(bool stickyArm);

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x24901AC", Offset = "0x24901AC", VA = "0x24901AC", Slot = "20")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x24901B8", Offset = "0x24901B8", VA = "0x24901B8")]
	public static extern bool WVR_SetInputRequest_HVR(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x24902D8", Offset = "0x24902D8", VA = "0x24902D8", Slot = "21")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x24902E8", Offset = "0x24902E8", VA = "0x24902E8")]
	public static extern bool WVR_GetInputMappingPair_HVR(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x24903CC", Offset = "0x24903CC", VA = "0x24903CC", Slot = "22")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x24903E0", Offset = "0x24903E0", VA = "0x24903E0")]
	public static extern uint WVR_GetInputMappingTable_HVR(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x24904C4", Offset = "0x24904C4", VA = "0x24904C4", Slot = "23")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x24904D8", Offset = "0x24904D8", VA = "0x24904D8")]
	public static extern WVR_Arena_t WVR_GetArena_HVR();

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x24905D0", Offset = "0x24905D0", VA = "0x24905D0", Slot = "24")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x24905E0", Offset = "0x24905E0", VA = "0x24905E0")]
	public static extern bool WVR_SetArena_HVR(ref WVR_Arena_t arena);

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x24906E0", Offset = "0x24906E0", VA = "0x24906E0", Slot = "25")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x24906E8", Offset = "0x24906E8", VA = "0x24906E8")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_HVR();

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x24907E0", Offset = "0x24907E0", VA = "0x24907E0", Slot = "26")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x24907E8", Offset = "0x24907E8", VA = "0x24907E8")]
	public static extern void WVR_SetArenaVisible_HVR(WVR_ArenaVisible config);

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x24908E8", Offset = "0x24908E8", VA = "0x24908E8", Slot = "27")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x24908F0", Offset = "0x24908F0", VA = "0x24908F0")]
	public static extern bool WVR_IsOverArenaRange_HVR();

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x24909F0", Offset = "0x24909F0", VA = "0x24909F0", Slot = "28")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x24909F8", Offset = "0x24909F8", VA = "0x24909F8")]
	public static extern float WVR_GetDeviceBatteryPercentage_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x2490AC4", Offset = "0x2490AC4", VA = "0x2490AC4", Slot = "29")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x2490AD0", Offset = "0x2490AD0", VA = "0x2490AD0")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x2490BD0", Offset = "0x2490BD0", VA = "0x2490BD0", Slot = "30")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x2490BD8", Offset = "0x2490BD8", VA = "0x2490BD8")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x2490CD8", Offset = "0x2490CD8", VA = "0x2490CD8", Slot = "31")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x2490CE0", Offset = "0x2490CE0", VA = "0x2490CE0")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x2490DAC", Offset = "0x2490DAC", VA = "0x2490DAC", Slot = "32")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x2490DB8", Offset = "0x2490DB8", VA = "0x2490DB8")]
	public static extern float WVR_GetBatteryTemperature_HVR(WVR_DeviceType type);

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x2490E84", Offset = "0x2490E84", VA = "0x2490E84", Slot = "33")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x2490E90", Offset = "0x2490E90", VA = "0x2490E90")]
	public static extern WVR_InitError WVR_Init_HVR(WVR_AppType eType);

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x2490F84", Offset = "0x2490F84", VA = "0x2490F84", Slot = "37")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x2490F90", Offset = "0x2490F90", VA = "0x2490F90")]
	public static extern void WVR_Quit_HVR();

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x249107C", Offset = "0x249107C", VA = "0x249107C", Slot = "39")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x2491080", Offset = "0x2491080", VA = "0x2491080")]
	public static extern IntPtr WVR_GetInitErrorString_HVR(WVR_InitError error);

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x249114C", Offset = "0x249114C", VA = "0x249114C", Slot = "40")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x2491158", Offset = "0x2491158", VA = "0x2491158")]
	public static extern uint WVR_GetWaveRuntimeVersion_HVR();

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x2491214", Offset = "0x2491214", VA = "0x2491214", Slot = "41")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x2491218", Offset = "0x2491218", VA = "0x2491218")]
	public static extern uint WVR_GetWaveSDKVersion_HVR();

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x2491310", Offset = "0x2491310", VA = "0x2491310", Slot = "42")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x2491318", Offset = "0x2491318", VA = "0x2491318")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_HVR();

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x24913DC", Offset = "0x24913DC", VA = "0x24913DC", Slot = "43")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x24913E0", Offset = "0x24913E0", VA = "0x24913E0")]
	internal static extern WVR_RenderError WVR_RenderInit_HVR(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x24914DC", Offset = "0x24914DC", VA = "0x24914DC", Slot = "44")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x24914E8", Offset = "0x24914E8", VA = "0x24914E8")]
	internal static extern bool WVR_SetPerformanceLevels_HVR(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x24915C4", Offset = "0x24915C4", VA = "0x24915C4", Slot = "45")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x24915D0", Offset = "0x24915D0", VA = "0x24915D0")]
	internal static extern bool WVR_EnableAdaptiveQuality_HVR(bool enable);

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x24916A4", Offset = "0x24916A4", VA = "0x24916A4", Slot = "46")]
	internal override bool EnableAdaptiveQuality(bool enable)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x24916B0", Offset = "0x24916B0", VA = "0x24916B0")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_HVR();

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x2491774", Offset = "0x2491774", VA = "0x2491774", Slot = "47")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x2491778", Offset = "0x2491778", VA = "0x2491778")]
	public static extern bool WVR_StartCamera_HVR(ref WVR_CameraInfo_t info);

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x249187C", Offset = "0x249187C", VA = "0x249187C", Slot = "48")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001000")]
	[Address(RVA = "0x2491888", Offset = "0x2491888", VA = "0x2491888")]
	public static extern void WVR_StopCamera_HVR();

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x249197C", Offset = "0x249197C", VA = "0x249197C", Slot = "49")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001002")]
	[Address(RVA = "0x2491980", Offset = "0x2491980", VA = "0x2491980")]
	public static extern bool WVR_UpdateTexture_HVR(uint textureid);

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x2491A84", Offset = "0x2491A84", VA = "0x2491A84", Slot = "50")]
	public override bool UpdateTexture(uint textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001004")]
	[Address(RVA = "0x2491A90", Offset = "0x2491A90", VA = "0x2491A90")]
	public static extern bool WVR_GetCameraIntrinsic_HVR(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x2491B6C", Offset = "0x2491B6C", VA = "0x2491B6C", Slot = "51")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001006")]
	[Address(RVA = "0x2491B78", Offset = "0x2491B78", VA = "0x2491B78")]
	public static extern bool WVR_IsDeviceSuspend_HVR(WVR_DeviceType type);

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x2491C80", Offset = "0x2491C80", VA = "0x2491C80", Slot = "52")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001008")]
	[Address(RVA = "0x2491C88", Offset = "0x2491C88", VA = "0x2491C88")]
	public static extern void WVR_ConvertMatrixQuaternion_HVR(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x2491D64", Offset = "0x2491D64", VA = "0x2491D64", Slot = "53")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600100A")]
	[Address(RVA = "0x2491D78", Offset = "0x2491D78", VA = "0x2491D78")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_HVR(WVR_DeviceType type);

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x2491E44", Offset = "0x2491E44", VA = "0x2491E44", Slot = "54")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x600100C")]
	[Address(RVA = "0x2491E50", Offset = "0x2491E50", VA = "0x2491E50")]
	public static extern void WVR_SetParameters_HVR(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x2491F54", Offset = "0x2491F54", VA = "0x2491F54", Slot = "55")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600100E")]
	[Address(RVA = "0x2491F60", Offset = "0x2491F60", VA = "0x2491F60")]
	public static extern uint WVR_GetParameters_HVR(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x2492074", Offset = "0x2492074", VA = "0x2492074", Slot = "56")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6001010")]
	[Address(RVA = "0x24920A0", Offset = "0x24920A0", VA = "0x24920A0")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_HVR();

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x249215C", Offset = "0x249215C", VA = "0x249215C", Slot = "57")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x6001012")]
	[Address(RVA = "0x2492160", Offset = "0x2492160", VA = "0x2492160")]
	public static extern bool WVR_SetInteractionMode_HVR(WVR_InteractionMode mode);

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x2492234", Offset = "0x2492234", VA = "0x2492234", Slot = "58")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001014")]
	[Address(RVA = "0x2492240", Offset = "0x2492240", VA = "0x2492240")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_HVR();

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x24922FC", Offset = "0x24922FC", VA = "0x24922FC", Slot = "59")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x6001016")]
	[Address(RVA = "0x2492300", Offset = "0x2492300", VA = "0x2492300")]
	public static extern bool WVR_SetGazeTriggerType_HVR(WVR_GazeTriggerType type);

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x24923D4", Offset = "0x24923D4", VA = "0x24923D4", Slot = "60")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6001018")]
	[Address(RVA = "0x24923E0", Offset = "0x24923E0", VA = "0x24923E0")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_HVR();

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x249249C", Offset = "0x249249C", VA = "0x249249C", Slot = "61")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x600101A")]
	[Address(RVA = "0x24924A0", Offset = "0x24924A0", VA = "0x24924A0")]
	public static extern bool WVR_GetDeviceErrorState_HVR(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x249257C", Offset = "0x249257C", VA = "0x249257C", Slot = "62")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600101C")]
	[Address(RVA = "0x2492588", Offset = "0x2492588", VA = "0x2492588")]
	public static extern void WVR_GetRenderTargetSize_HVR(ref uint width, ref uint height);

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x249265C", Offset = "0x249265C", VA = "0x249265C", Slot = "63")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600101E")]
	[Address(RVA = "0x2492668", Offset = "0x2492668", VA = "0x2492668")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_HVR(WVR_Eye eye, float near, float far);

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x249277C", Offset = "0x249277C", VA = "0x249277C", Slot = "64")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6001020")]
	[Address(RVA = "0x24927A8", Offset = "0x24927A8", VA = "0x24927A8")]
	public static extern void WVR_GetClippingPlaneBoundary_HVR(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x2492894", Offset = "0x2492894", VA = "0x2492894", Slot = "65")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001022")]
	[Address(RVA = "0x24928C8", Offset = "0x24928C8", VA = "0x24928C8")]
	public static extern void WVR_SetOverfillRatio_HVR(float ratioX, float ratioY);

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x24929D0", Offset = "0x24929D0", VA = "0x24929D0", Slot = "66")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001024")]
	[Address(RVA = "0x24929E0", Offset = "0x24929E0", VA = "0x24929E0")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_HVR(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x2492ABC", Offset = "0x2492ABC", VA = "0x2492ABC", Slot = "67")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6001026")]
	[Address(RVA = "0x2492AD8", Offset = "0x2492AD8", VA = "0x2492AD8")]
	public static extern WVR_SubmitError WVR_SubmitFrame_HVR(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x2492D10", Offset = "0x2492D10", VA = "0x2492D10", Slot = "68")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x6001028")]
	[Address(RVA = "0x2492D40", Offset = "0x2492D40", VA = "0x2492D40")]
	public static extern bool WVR_RequestScreenshot_HVR(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x2492E60", Offset = "0x2492E60", VA = "0x2492E60", Slot = "70")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600102A")]
	[Address(RVA = "0x2492E90", Offset = "0x2492E90", VA = "0x2492E90")]
	public static extern void WVR_RenderMask_HVR(WVR_Eye eye);

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x2492F8C", Offset = "0x2492F8C", VA = "0x2492F8C", Slot = "71")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600102C")]
	[Address(RVA = "0x2492F98", Offset = "0x2492F98", VA = "0x2492F98")]
	public static extern bool WVR_GetRenderProps_HVR(ref WVR_RenderProps_t props);

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x2493104", Offset = "0x2493104", VA = "0x2493104", Slot = "72")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600102E")]
	[Address(RVA = "0x2493110", Offset = "0x2493110", VA = "0x2493110")]
	public static extern IntPtr WVR_ObtainTextureQueue_HVR(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x2493204", Offset = "0x2493204", VA = "0x2493204", Slot = "73")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x6001030")]
	[Address(RVA = "0x2493240", Offset = "0x2493240", VA = "0x2493240")]
	public static extern uint WVR_GetTextureQueueLength_HVR(IntPtr handle);

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x249330C", Offset = "0x249330C", VA = "0x249330C", Slot = "74")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x6001032")]
	[Address(RVA = "0x2493318", Offset = "0x2493318", VA = "0x2493318")]
	public static extern WVR_TextureParams_t WVR_GetTexture_HVR(IntPtr handle, int index);

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x2493424", Offset = "0x2493424", VA = "0x2493424", Slot = "75")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x6001034")]
	[Address(RVA = "0x2493440", Offset = "0x2493440", VA = "0x2493440")]
	public static extern int WVR_GetAvailableTextureIndex_HVR(IntPtr handle);

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x249350C", Offset = "0x249350C", VA = "0x249350C", Slot = "76")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6001036")]
	[Address(RVA = "0x2493518", Offset = "0x2493518", VA = "0x2493518")]
	public static extern void WVR_ReleaseTextureQueue_HVR(IntPtr handle);

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x24935E4", Offset = "0x24935E4", VA = "0x24935E4", Slot = "77")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001038")]
	[Address(RVA = "0x24935F0", Offset = "0x24935F0", VA = "0x24935F0")]
	public static extern bool WVR_IsRenderFoveationSupport_HVR();

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x24936B4", Offset = "0x24936B4", VA = "0x24936B4", Slot = "78")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600103A")]
	[Address(RVA = "0x24936B8", Offset = "0x24936B8", VA = "0x24936B8")]
	public static extern void WVR_RenderFoveation_HVR(bool enable);

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x24937B8", Offset = "0x24937B8", VA = "0x24937B8", Slot = "79")]
	public override void RenderFoveation(bool enable)
	{
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x24937C0", Offset = "0x24937C0", VA = "0x24937C0")]
	public WVR_HVR()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FA")]
public class MeshObject
{
	[Token(Token = "0x40017B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string MeshName;

	[Token(Token = "0x40017B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool hasEffect;

	[Token(Token = "0x40017B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject gameObject;

	[Token(Token = "0x40017B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 originPosition;

	[Token(Token = "0x40017BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material originMat;

	[Token(Token = "0x40017BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Material effectMat;

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x21339CC", Offset = "0x21339CC", VA = "0x21339CC")]
	public MeshObject()
	{
	}
}
[Token(Token = "0x20001FB")]
public class WaveVR_AdaptiveControllerActions : MonoBehaviour
{
	[Token(Token = "0x2000563")]
	public class WVR_InputObject
	{
		[Token(Token = "0x40029A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_InputId destination;

		[Token(Token = "0x40029AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_InputId sourceId;

		[Token(Token = "0x6002667")]
		[Address(RVA = "0x24F8E0C", Offset = "0x24F8E0C", VA = "0x24F8E0C")]
		public WVR_InputObject()
		{
		}
	}

	[Token(Token = "0x2000564")]
	private enum keyMappingInputType
	{
		[Token(Token = "0x40029AC")]
		TouchDown,
		[Token(Token = "0x40029AD")]
		TouchUp,
		[Token(Token = "0x40029AE")]
		PressDown,
		[Token(Token = "0x40029AF")]
		PressUp
	}

	[Token(Token = "0x40017BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40017BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool enableButtonEffect;

	[Token(Token = "0x40017BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40017BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool useSystemConfig;

	[Token(Token = "0x40017C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color buttonEffectColor;

	[Token(Token = "0x40017C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool collectInStart;

	[Token(Token = "0x40017C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int volume_index;

	[Token(Token = "0x40017C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WVR_InputId[] pressIds;

	[Token(Token = "0x40017C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string[] PressEffectNames;

	[Token(Token = "0x40017C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WVR_InputObject[] PressInputObjectArr;

	[Token(Token = "0x40017C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private MeshObject[] pressObjectArrays;

	[Token(Token = "0x40017C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly WVR_InputId[] touchIds;

	[Token(Token = "0x40017C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] TouchEffectNames;

	[Token(Token = "0x40017C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WVR_InputObject[] TouchInputObjectArr;

	[Token(Token = "0x40017CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private MeshObject[] touchObjectArrays;

	[Token(Token = "0x40017CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject touchpad;

	[Token(Token = "0x40017CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Mesh touchpadMesh;

	[Token(Token = "0x40017CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x40017CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x40017CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int touch_index;

	[Token(Token = "0x40017D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Material effectMat;

	[Token(Token = "0x40017D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material touchMat;

	[Token(Token = "0x40017D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool mergeToOneBone;

	[Token(Token = "0x40017D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool isTouchPadSetting;

	[Token(Token = "0x40017D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 touchCenter;

	[Token(Token = "0x40017D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float raidus;

	[Token(Token = "0x40017D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 touchPtW;

	[Token(Token = "0x40017D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 touchPtU;

	[Token(Token = "0x40017D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 touchPtV;

	[Token(Token = "0x40017D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float touchptHeight;

	[Token(Token = "0x40017DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x24EFF70", Offset = "0x24EFF70", VA = "0x24EFF70")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x24F0220", Offset = "0x24F0220", VA = "0x24F0220")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x24F04D0", Offset = "0x24F04D0", VA = "0x24F04D0")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x24F1C88", Offset = "0x24F1C88", VA = "0x24F1C88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x24F25B0", Offset = "0x24F25B0", VA = "0x24F25B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x24F2688", Offset = "0x24F2688", VA = "0x24F2688")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x24F1D7C", Offset = "0x24F1D7C", VA = "0x24F1D7C")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x24F2738", Offset = "0x24F2738", VA = "0x24F2738")]
	private void Start()
	{
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x24F2760", Offset = "0x24F2760", VA = "0x24F2760")]
	private void Update()
	{
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x24F6750", Offset = "0x24F6750", VA = "0x24F6750")]
	private bool GetTouchPadParam()
	{
		return default(bool);
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x24F5A64", Offset = "0x24F5A64", VA = "0x24F5A64")]
	private int GetPressInputMapping(int pressIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x24F613C", Offset = "0x24F613C", VA = "0x24F613C")]
	private int GetTouchInputMapping(int touchIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x24F057C", Offset = "0x24F057C", VA = "0x24F057C")]
	private void CollectEffectObjects()
	{
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x24F7EB0", Offset = "0x24F7EB0", VA = "0x24F7EB0")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x24F8050", Offset = "0x24F8050", VA = "0x24F8050")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x24F8100", Offset = "0x24F8100", VA = "0x24F8100")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x24F78F0", Offset = "0x24F78F0", VA = "0x24F78F0")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x24F83D4", Offset = "0x24F83D4", VA = "0x24F83D4")]
	public WaveVR_AdaptiveControllerActions()
	{
	}
}
[Token(Token = "0x20001FC")]
public class WaveVR_ControllerInstanceManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000565")]
	private class ControllerInstance
	{
		[Token(Token = "0x40029B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_DeviceType type;

		[Token(Token = "0x40029B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject instance;

		[Token(Token = "0x40029B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x40029B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool eventEnabled;

		[Token(Token = "0x40029B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool showBeam;

		[Token(Token = "0x40029B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool showPointer;

		[Token(Token = "0x6002668")]
		[Address(RVA = "0x24A7D54", Offset = "0x24A7D54", VA = "0x24A7D54")]
		public ControllerInstance()
		{
		}
	}

	[Token(Token = "0x2000566")]
	private enum CComponent
	{
		[Token(Token = "0x40029B7")]
		Beam,
		[Token(Token = "0x40029B8")]
		ControllerPointer
	}

	[Token(Token = "0x40017DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40017DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_ControllerInstanceManager instance;

	[Token(Token = "0x40017DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int ControllerIdx;

	[Token(Token = "0x40017DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private GameObject eventSystem;

	[Token(Token = "0x40017DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<ControllerInstance> ctrInstanceList;

	[Token(Token = "0x40017E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType ControllerFocus;

	[Token(Token = "0x40017E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private WVR_DeviceType lastControllerFocus;

	[Token(Token = "0x40017E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x40017E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool EnableSingleBeam;

	[Token(Token = "0x40017E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool rConnected;

	[Token(Token = "0x40017E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	private bool lConnected;

	[Token(Token = "0x17000085")]
	public static WaveVR_ControllerInstanceManager Instance
	{
		[Token(Token = "0x6001052")]
		[Address(RVA = "0x24A6B74", Offset = "0x24A6B74", VA = "0x24A6B74")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x24A6A54", Offset = "0x24A6A54", VA = "0x24A6A54")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x24A6DCC", Offset = "0x24A6DCC", VA = "0x24A6DCC")]
	private bool getEventSystemParameter(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x24A70C8", Offset = "0x24A70C8", VA = "0x24A70C8")]
	private bool getComponentParameter(GameObject controller, CComponent comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x24A7370", Offset = "0x24A7370", VA = "0x24A7370")]
	public int registerControllerInstance(WVR_DeviceType type, GameObject controller)
	{
		return default(int);
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x24A7D5C", Offset = "0x24A7D5C", VA = "0x24A7D5C")]
	public void removeControllerInstance(int index)
	{
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x24A81B0", Offset = "0x24A81B0", VA = "0x24A81B0")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x24A8718", Offset = "0x24A8718", VA = "0x24A8718")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x24A8820", Offset = "0x24A8820", VA = "0x24A8820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x24A8B18", Offset = "0x24A8B18", VA = "0x24A8B18")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600105B")]
	[Address(RVA = "0x24A8C8C", Offset = "0x24A8C8C", VA = "0x24A8C8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600105C")]
	[Address(RVA = "0x24A8D30", Offset = "0x24A8D30", VA = "0x24A8D30")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x24A8D98", Offset = "0x24A8D98", VA = "0x24A8D98")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x24A90F4", Offset = "0x24A90F4", VA = "0x24A90F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x24A90F8", Offset = "0x24A90F8", VA = "0x24A90F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x24A9154", Offset = "0x24A9154", VA = "0x24A9154")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x24A920C", Offset = "0x24A920C", VA = "0x24A920C")]
	private void Update()
	{
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x24AA9F0", Offset = "0x24AA9F0", VA = "0x24AA9F0")]
	private void printAllChildren(GameObject go)
	{
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x24A899C", Offset = "0x24A899C", VA = "0x24A899C")]
	private void checkControllerConnected()
	{
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x24AA84C", Offset = "0x24AA84C", VA = "0x24AA84C")]
	private void SetActiveOfEmitter()
	{
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x24A9914", Offset = "0x24A9914", VA = "0x24A9914")]
	private void ForceSetActiveOfEmitter(ControllerInstance ci, bool enabled)
	{
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x24AA53C", Offset = "0x24AA53C", VA = "0x24AA53C")]
	private void ActivateEventSystem(WVR_DeviceType type, bool enabled)
	{
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x24AABAC", Offset = "0x24AABAC", VA = "0x24AABAC")]
	public WaveVR_ControllerInstanceManager()
	{
	}
}
[Token(Token = "0x20001FD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C14E0", Offset = "0x5C14E0")]
public class WaveVR_ControllerPointer : MonoBehaviour
{
	[Token(Token = "0x40017E6")]
	private const string LOG_TAG = "WaveVR_ControllerPointer";

	[Token(Token = "0x40017E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40017E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool ShowPointer;

	[Token(Token = "0x40017E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Blink;

	[Token(Token = "0x40017EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x40017EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6360", Offset = "0x5C6360")]
	public float PointerOuterDiameter;

	[Token(Token = "0x40017EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool UseDefaultTexture;

	[Token(Token = "0x40017ED")]
	private const string defaultPointerResource_Texture = "focused_dot";

	[Token(Token = "0x40017EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Texture2D defaultTexture;

	[Token(Token = "0x40017EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture2D CustomTexture;

	[Token(Token = "0x40017F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6370", Offset = "0x5C6370")]
	public string TextureName;

	[Token(Token = "0x40017F1")]
	private const float pointerDistanceMin = 0.5f;

	[Token(Token = "0x40017F2")]
	private const float pointerDistanceMax = 10f;

	[Token(Token = "0x40017F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6380", Offset = "0x5C6380")]
	public float PointerDistanceInMeters;

	[Token(Token = "0x40017F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool useTexture;

	[Token(Token = "0x40017F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x40017F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh pointerMesh;

	[Token(Token = "0x40017F7")]
	private const string defaultPointerResource_Material = "ControllerPointer";

	[Token(Token = "0x40017F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Material pointerMaterial;

	[Token(Token = "0x40017F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x40017FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Color colorFactor;

	[Token(Token = "0x40017FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6390", Offset = "0x5C6390")]
	public Color PointerColor;

	[Token(Token = "0x40017FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C63A0", Offset = "0x5C63A0")]
	public Color borderColor;

	[Token(Token = "0x40017FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C63B0", Offset = "0x5C63B0")]
	public Color focusColor;

	[Token(Token = "0x40017FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C63C0", Offset = "0x5C63C0")]
	public Color focusBorderColor;

	[Token(Token = "0x40017FF")]
	private const int PointerRenderQueueMin = 1000;

	[Token(Token = "0x4001800")]
	private const int PointerRenderQueueMax = 5000;

	[Token(Token = "0x4001801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int PointerRenderQueue;

	[Token(Token = "0x4001802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int reticleSegments;

	[Token(Token = "0x4001803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C63D0", Offset = "0x5C63D0")]
	public float kpointerGrowthAngle;

	[Token(Token = "0x4001804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float colorFlickerTime;

	[Token(Token = "0x4001805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool isPointerEnabled;

	[Token(Token = "0x4001806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool pointerInitialized;

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x6DB368", Offset = "0x6DB368", VA = "0x6DB368")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x6DB43C", Offset = "0x6DB43C", VA = "0x6DB43C")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x6DC928", Offset = "0x6DC928", VA = "0x6DC928")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x6DC724", Offset = "0x6DC724", VA = "0x6DC724")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x6DCFF8", Offset = "0x6DCFF8", VA = "0x6DCFF8")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x6DCB28", Offset = "0x6DCB28", VA = "0x6DCB28")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x6DD1F8", Offset = "0x6DD1F8", VA = "0x6DD1F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x6DD1FC", Offset = "0x6DD1FC", VA = "0x6DD1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x6DD200", Offset = "0x6DD200", VA = "0x6DD200")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x6DD8FC", Offset = "0x6DD8FC", VA = "0x6DD8FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x6DDAA0", Offset = "0x6DDAA0", VA = "0x6DDAA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x6DEB34", Offset = "0x6DEB34", VA = "0x6DEB34")]
	private void CreatePointerMesh()
	{
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x6DE6D0", Offset = "0x6DE6D0", VA = "0x6DE6D0")]
	private void initialPointer()
	{
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x6DD9A4", Offset = "0x6DD9A4", VA = "0x6DD9A4")]
	private void removePointer()
	{
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x6DEF7C", Offset = "0x6DEF7C", VA = "0x6DEF7C")]
	public void OnPointerEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x6DEFAC", Offset = "0x6DEFAC", VA = "0x6DEFAC")]
	private void SetPointerTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x6DF698", Offset = "0x6DF698", VA = "0x6DF698")]
	public WaveVR_ControllerPointer()
	{
	}
}
[Token(Token = "0x20001FE")]
public enum ModelSpecify
{
	[Token(Token = "0x4001808")]
	MS_Dominant,
	[Token(Token = "0x4001809")]
	MS_NonDominant
}
[Serializable]
[Token(Token = "0x20001FF")]
public class BatteryIndicator
{
	[Token(Token = "0x400180A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int level;

	[Token(Token = "0x400180B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float min;

	[Token(Token = "0x400180C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float max;

	[Token(Token = "0x400180D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string texturePath;

	[Token(Token = "0x400180E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool textureLoaded;

	[Token(Token = "0x400180F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Texture2D batteryTexture;

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x2283A6C", Offset = "0x2283A6C", VA = "0x2283A6C")]
	public BatteryIndicator()
	{
	}
}
[Serializable]
[Token(Token = "0x2000200")]
public class TouchSetting
{
	[Token(Token = "0x4001810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 touchForward;

	[Token(Token = "0x4001811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 touchCenter;

	[Token(Token = "0x4001812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 touchRight;

	[Token(Token = "0x4001813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 touchPtU;

	[Token(Token = "0x4001814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 touchPtW;

	[Token(Token = "0x4001815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 touchPtV;

	[Token(Token = "0x4001816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float raidus;

	[Token(Token = "0x4001817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float touchptHeight;

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x218DD3C", Offset = "0x218DD3C", VA = "0x218DD3C")]
	public TouchSetting()
	{
	}
}
[Serializable]
[Token(Token = "0x2000201")]
public class ModelResource
{
	[Token(Token = "0x4001818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string renderModelName;

	[Token(Token = "0x4001819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ModelSpecify modelSpecify;

	[Token(Token = "0x400181A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool mergeToOne;

	[Token(Token = "0x400181B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint sectionCount;

	[Token(Token = "0x400181C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FBXInfo_t[] FBXInfo;

	[Token(Token = "0x400181D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public MeshInfo_t[] SectionInfo;

	[Token(Token = "0x400181E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool parserReady;

	[Token(Token = "0x400181F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Texture2D modelTexture;

	[Token(Token = "0x4001820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isTouchSetting;

	[Token(Token = "0x4001821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public TouchSetting TouchSetting;

	[Token(Token = "0x4001822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isBatterySetting;

	[Token(Token = "0x4001823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public List<BatteryIndicator> batteryTextureList;

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x2140BA8", Offset = "0x2140BA8", VA = "0x2140BA8")]
	public ModelResource()
	{
	}
}
[Token(Token = "0x2000202")]
public class WaveVR_ControllerResourceHolder
{
	[Token(Token = "0x2000567")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D3C", Offset = "0x5C2D3C")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x40029B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_ControllerResourceHolder <>4__this;

		[Token(Token = "0x40029BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ModelResource newMR;

		[Token(Token = "0x40029BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool merge;

		[Token(Token = "0x40029BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string ModelFolder;

		[Token(Token = "0x40029BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModelSpecify ms;

		[Token(Token = "0x6002669")]
		[Address(RVA = "0x6E2D10", Offset = "0x6E2D10", VA = "0x6E2D10")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x600266A")]
		[Address(RVA = "0x6E9224", Offset = "0x6E9224", VA = "0x6E9224")]
		internal void <addRenderModel>b__0()
		{
		}
	}

	[Token(Token = "0x4001824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private Thread mthread;

	[Token(Token = "0x4001826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_ControllerResourceHolder instance;

	[Token(Token = "0x4001827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<ModelResource> renderModelList;

	[Token(Token = "0x17000086")]
	public static WaveVR_ControllerResourceHolder Instance
	{
		[Token(Token = "0x600107D")]
		[Address(RVA = "0x6E1F24", Offset = "0x6E1F24", VA = "0x6E1F24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x6E2120", Offset = "0x6E2120", VA = "0x6E2120")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x6E21F0", Offset = "0x6E21F0", VA = "0x6E21F0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x6E22C0", Offset = "0x6E22C0", VA = "0x6E22C0")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x6E2390", Offset = "0x6E2390", VA = "0x6E2390")]
	public bool isRenderModelExist(string renderModel, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x6E2534", Offset = "0x6E2534", VA = "0x6E2534")]
	public ModelResource getRenderModelResource(string renderModel, ModelSpecify ms, bool merge)
	{
		return null;
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x6E26D8", Offset = "0x6E26D8", VA = "0x6E26D8")]
	public bool addRenderModel(string renderModel, string ModelFolder, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x6E3B60", Offset = "0x6E3B60", VA = "0x6E3B60")]
	private void readNativeData(ModelResource curr, bool mergeTo, string modelFolderPath, ModelSpecify ms)
	{
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x6E6C98", Offset = "0x6E6C98", VA = "0x6E6C98")]
	private bool GetTouchPadParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x6E2D18", Offset = "0x6E2D18", VA = "0x6E2D18")]
	private bool getBatteryIndicatorParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x6E2094", Offset = "0x6E2094", VA = "0x6E2094")]
	public WaveVR_ControllerResourceHolder()
	{
	}
}
[Token(Token = "0x2000203")]
public class WaveVR_ControllerRootToEmitter : MonoBehaviour
{
	[Token(Token = "0x4001828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x400182A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject[] moveToEmitter;

	[Token(Token = "0x400182B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject emitter;

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x6E927C", Offset = "0x6E927C", VA = "0x6E927C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x6E9398", Offset = "0x6E9398", VA = "0x6E9398")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x6E9470", Offset = "0x6E9470", VA = "0x6E9470")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x6E9548", Offset = "0x6E9548", VA = "0x6E9548")]
	private void Start()
	{
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x6E954C", Offset = "0x6E954C", VA = "0x6E954C")]
	private void Update()
	{
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x6E9550", Offset = "0x6E9550", VA = "0x6E9550")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x6EA00C", Offset = "0x6EA00C", VA = "0x6EA00C")]
	public WaveVR_ControllerRootToEmitter()
	{
	}
}
[Token(Token = "0x2000204")]
public class WaveVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x2000568")]
	public enum ControllerHand
	{
		[Token(Token = "0x40029BF")]
		Controller_Dominant,
		[Token(Token = "0x40029C0")]
		Controller_NonDominant
	}

	[Token(Token = "0x2000569")]
	public enum LoadingState
	{
		[Token(Token = "0x40029C2")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x40029C3")]
		LoadingState_LOADING,
		[Token(Token = "0x40029C4")]
		LoadingState_LOADED
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D4C", Offset = "0x5C2D4C")]
	private sealed class <SpawnRenderModel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40029C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40029C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x40029C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint <i>5__2;

		[Token(Token = "0x170002EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600266E")]
			[Address(RVA = "0x23BF188", Offset = "0x23BF188", VA = "0x23BF188", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002670")]
			[Address(RVA = "0x23BF218", Offset = "0x23BF218", VA = "0x23BF218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600266B")]
		[Address(RVA = "0x23BC238", Offset = "0x23BC238", VA = "0x23BC238")]
		[DebuggerHidden]
		public <SpawnRenderModel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x600266C")]
		[Address(RVA = "0x23BC5D8", Offset = "0x23BC5D8", VA = "0x23BC5D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600266D")]
		[Address(RVA = "0x23BC5DC", Offset = "0x23BC5DC", VA = "0x23BC5DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600266F")]
		[Address(RVA = "0x23BF190", Offset = "0x23BF190", VA = "0x23BF190", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D5C", Offset = "0x5C2D5C")]
	private sealed class <checkRenderModelAndDelete>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40029C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40029CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40029CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x170002EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002674")]
			[Address(RVA = "0x23BF28C", Offset = "0x23BF28C", VA = "0x23BF28C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002676")]
			[Address(RVA = "0x23BF31C", Offset = "0x23BF31C", VA = "0x23BF31C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002671")]
		[Address(RVA = "0x23BC258", Offset = "0x23BC258", VA = "0x23BC258")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6002672")]
		[Address(RVA = "0x23BF220", Offset = "0x23BF220", VA = "0x23BF220", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002673")]
		[Address(RVA = "0x23BF224", Offset = "0x23BF224", VA = "0x23BF224", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002675")]
		[Address(RVA = "0x23BF294", Offset = "0x23BF294", VA = "0x23BF294", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400182C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400182D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ControllerHand WhichHand;

	[Token(Token = "0x400182E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject defaultModel;

	[Token(Token = "0x400182F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool updateDynamically;

	[Token(Token = "0x4001830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool mergeToOneBone;

	[Token(Token = "0x4001831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject controllerSpawned;

	[Token(Token = "0x4001832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4001833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool connected;

	[Token(Token = "0x4001834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private string renderModelNamePath;

	[Token(Token = "0x4001835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string renderModelName;

	[Token(Token = "0x4001836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4001837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IntPtr ptrResult;

	[Token(Token = "0x4001838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<Color32> colors;

	[Token(Token = "0x4001839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject meshCom;

	[Token(Token = "0x400183A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject meshGO;

	[Token(Token = "0x400183B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Mesh updateMesh;

	[Token(Token = "0x400183C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Material modelMat;

	[Token(Token = "0x400183D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material ImgMaterial;

	[Token(Token = "0x400183E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private WaitForEndOfFrame wfef;

	[Token(Token = "0x400183F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaitForSeconds wfs;

	[Token(Token = "0x4001840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool showBatterIndicator;

	[Token(Token = "0x4001841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool isBatteryIndicatorReady;

	[Token(Token = "0x4001842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BatteryIndicator currentBattery;

	[Token(Token = "0x4001843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private GameObject batteryGO;

	[Token(Token = "0x4001844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer batteryMR;

	[Token(Token = "0x4001845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private ModelResource modelResource;

	[Token(Token = "0x4001846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4001847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private LoadingState mLoadingState;

	[Token(Token = "0x4001848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int t;

	[Token(Token = "0x4001849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool IsFocusCapturedBySystemLastFrame;

	[Token(Token = "0x400184A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string emitterMeshName;

	[Token(Token = "0x6001091")]
	[Address(RVA = "0x23B7B8C", Offset = "0x23B7B8C", VA = "0x23B7B8C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001092")]
	[Address(RVA = "0x23B7E40", Offset = "0x23B7E40", VA = "0x23B7E40")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6001093")]
	[Address(RVA = "0x23B80F4", Offset = "0x23B80F4", VA = "0x23B80F4")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6001094")]
	[Address(RVA = "0x23B83A8", Offset = "0x23B83A8", VA = "0x23B83A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001095")]
	[Address(RVA = "0x23BA270", Offset = "0x23BA270", VA = "0x23BA270")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001096")]
	[Address(RVA = "0x23BA638", Offset = "0x23BA638", VA = "0x23BA638")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x6001097")]
	[Address(RVA = "0x23BA6A4", Offset = "0x23BA6A4", VA = "0x23BA6A4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6001098")]
	[Address(RVA = "0x23BAA90", Offset = "0x23BAA90", VA = "0x23BAA90")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6001099")]
	[Address(RVA = "0x23B88C4", Offset = "0x23B88C4", VA = "0x23B88C4")]
	private bool isRenderModelNameSameAsPrevious()
	{
		return default(bool);
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x23BB264", Offset = "0x23BB264", VA = "0x23BB264")]
	private void Start()
	{
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x23BB5A0", Offset = "0x23BB5A0", VA = "0x23BB5A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x23B8AD4", Offset = "0x23B8AD4", VA = "0x23B8AD4")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x23BC1AC", Offset = "0x23BC1AC", VA = "0x23BC1AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CDFF8", Offset = "0x5CDFF8")]
	private IEnumerator SpawnRenderModel()
	{
		return null;
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x23BBBC4", Offset = "0x23BBBC4", VA = "0x23BBBC4")]
	private void updateBatteryLevel()
	{
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x23BB514", Offset = "0x23BB514", VA = "0x23BB514")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CE070", Offset = "0x5CE070")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x23B8624", Offset = "0x23B8624", VA = "0x23B8624")]
	private void deleteChild(string reason)
	{
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x23BC278", Offset = "0x23BC278", VA = "0x23BC278")]
	private void DeleteControllerWhenDisconnect()
	{
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x23B87FC", Offset = "0x23B87FC", VA = "0x23B87FC")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x23BC490", Offset = "0x23BC490", VA = "0x23BC490")]
	public WaveVR_RenderModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000205")]
public class ButtonIndication
{
	[Token(Token = "0x200056C")]
	public enum Alignment
	{
		[Token(Token = "0x40029CD")]
		RIGHT,
		[Token(Token = "0x40029CE")]
		LEFT
	}

	[Token(Token = "0x200056D")]
	public enum KeyIndicator
	{
		[Token(Token = "0x40029D0")]
		Trigger,
		[Token(Token = "0x40029D1")]
		TouchPad,
		[Token(Token = "0x40029D2")]
		DigitalTrigger,
		[Token(Token = "0x40029D3")]
		App,
		[Token(Token = "0x40029D4")]
		Home,
		[Token(Token = "0x40029D5")]
		Volume,
		[Token(Token = "0x40029D6")]
		VolumeUp,
		[Token(Token = "0x40029D7")]
		VolumeDown,
		[Token(Token = "0x40029D8")]
		Grip,
		[Token(Token = "0x40029D9")]
		DPad_Left,
		[Token(Token = "0x40029DA")]
		DPad_Right,
		[Token(Token = "0x40029DB")]
		DPad_Up,
		[Token(Token = "0x40029DC")]
		DPad_Down
	}

	[Token(Token = "0x400184B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public KeyIndicator keyType;

	[Token(Token = "0x400184C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Alignment alignment;

	[Token(Token = "0x400184D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 indicationOffset;

	[Token(Token = "0x400184E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useMultiLanguage;

	[Token(Token = "0x400184F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string indicationText;

	[Token(Token = "0x4001850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool followButtonRotation;

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x228C908", Offset = "0x228C908", VA = "0x228C908")]
	public ButtonIndication()
	{
	}
}
[Serializable]
[Token(Token = "0x2000206")]
public class ComponentsIndication
{
	[Token(Token = "0x4001851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Name;

	[Token(Token = "0x4001852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string Description;

	[Token(Token = "0x4001853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject SourceObject;

	[Token(Token = "0x4001854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public GameObject LineIndicator;

	[Token(Token = "0x4001855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject DestObject;

	[Token(Token = "0x4001856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4001857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 Offset;

	[Token(Token = "0x4001858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool followButtonRoration;

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x222ECF0", Offset = "0x222ECF0", VA = "0x222ECF0")]
	public ComponentsIndication()
	{
	}
}
[Token(Token = "0x2000207")]
public class WaveVR_ShowIndicator : MonoBehaviour
{
	[Token(Token = "0x4001859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400185A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C63E0", Offset = "0x5C63E0")]
	public bool showIndicator;

	[Token(Token = "0x400185B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6414", Offset = "0x5C6414")]
	public float showIndicatorAngle;

	[Token(Token = "0x400185C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x400185D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool basedOnEmitter;

	[Token(Token = "0x400185E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6430", Offset = "0x5C6430")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6430", Offset = "0x5C6430")]
	public float lineLength;

	[Token(Token = "0x400185F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6488", Offset = "0x5C6488")]
	public float lineStartWidth;

	[Token(Token = "0x4001860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C64A8", Offset = "0x5C64A8")]
	public float lineEndWidth;

	[Token(Token = "0x4001861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color lineColor;

	[Token(Token = "0x4001862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C64C8", Offset = "0x5C64C8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C64C8", Offset = "0x5C64C8")]
	public float textCharacterSize;

	[Token(Token = "0x4001863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6520", Offset = "0x5C6520")]
	public float zhCharactarSize;

	[Token(Token = "0x4001864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6540", Offset = "0x5C6540")]
	public int textFontSize;

	[Token(Token = "0x4001865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color textColor;

	[Token(Token = "0x4001866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6560", Offset = "0x5C6560")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4001867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private WaveVR_Resource rw;

	[Token(Token = "0x4001868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string sysLang;

	[Token(Token = "0x4001869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private string sysCountry;

	[Token(Token = "0x400186A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int checkCount;

	[Token(Token = "0x400186B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private GameObject indicatorPrefab;

	[Token(Token = "0x400186C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject linePrefab;

	[Token(Token = "0x400186D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private List<ComponentsIndication> compInd;

	[Token(Token = "0x400186E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _HMD;

	[Token(Token = "0x400186F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool needRedraw;

	[Token(Token = "0x4001870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Emitter;

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x23C49CC", Offset = "0x23C49CC", VA = "0x23C49CC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x23C4A9C", Offset = "0x23C4A9C", VA = "0x23C4A9C")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x23C4B6C", Offset = "0x23C4B6C", VA = "0x23C4B6C")]
	private void resetIndicator()
	{
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x23C4F0C", Offset = "0x23C4F0C", VA = "0x23C4F0C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x23C4C3C", Offset = "0x23C4C3C", VA = "0x23C4C3C")]
	private void clearResourceAndObject()
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x23C4F18", Offset = "0x23C4F18", VA = "0x23C4F18")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x23C937C", Offset = "0x23C937C", VA = "0x23C937C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x23C944C", Offset = "0x23C944C", VA = "0x23C944C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x23C951C", Offset = "0x23C951C", VA = "0x23C951C")]
	private void Start()
	{
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x23C4F1C", Offset = "0x23C4F1C", VA = "0x23C4F1C")]
	public void createIndicator()
	{
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x23C9520", Offset = "0x23C9520", VA = "0x23C9520")]
	private void Update()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x23CA66C", Offset = "0x23CA66C", VA = "0x23CA66C")]
	public WaveVR_ShowIndicator()
	{
	}
}
[Token(Token = "0x2000208")]
public interface IPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x60010B4")]
	void OnPointerHover(PointerEventData eventData);
}
[Token(Token = "0x2000209")]
public class WaveVR_AddEventSystemGUI : MonoBehaviour
{
	[Token(Token = "0x4001871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool added;

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x24F8E14", Offset = "0x24F8E14", VA = "0x24F8E14")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x24F8FFC", Offset = "0x24F8FFC", VA = "0x24F8FFC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x24F90A4", Offset = "0x24F90A4", VA = "0x24F90A4")]
	public WaveVR_AddEventSystemGUI()
	{
	}
}
[Token(Token = "0x200020A")]
public class WaveVR_EventSystemControllerProvider
{
	[Token(Token = "0x200056E")]
	public class ControllerModel
	{
		[Token(Token = "0x40029DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB34", Offset = "0x5CAB34")]
		private WaveVR_Controller.EDeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40029DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB44", Offset = "0x5CAB44")]
		private GameObject <Model>k__BackingField;

		[Token(Token = "0x40029DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB54", Offset = "0x5CAB54")]
		private bool <HasLoader>k__BackingField;

		[Token(Token = "0x170002EE")]
		public WaveVR_Controller.EDeviceType DeviceType
		{
			[Token(Token = "0x6002677")]
			[Address(RVA = "0x6EC6DC", Offset = "0x6EC6DC", VA = "0x6EC6DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D39DC", Offset = "0x5D39DC")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x6002678")]
			[Address(RVA = "0x6ECCE4", Offset = "0x6ECCE4", VA = "0x6ECCE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D39EC", Offset = "0x5D39EC")]
			set
			{
			}
		}

		[Token(Token = "0x170002EF")]
		public GameObject Model
		{
			[Token(Token = "0x6002679")]
			[Address(RVA = "0x6EC6E4", Offset = "0x6EC6E4", VA = "0x6EC6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D39FC", Offset = "0x5D39FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600267A")]
			[Address(RVA = "0x6EC6EC", Offset = "0x6EC6EC", VA = "0x6EC6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A0C", Offset = "0x5D3A0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public bool HasLoader
		{
			[Token(Token = "0x600267B")]
			[Address(RVA = "0x6ECCD8", Offset = "0x6ECCD8", VA = "0x6ECCD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A1C", Offset = "0x5D3A1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600267C")]
			[Address(RVA = "0x6ECB98", Offset = "0x6ECB98", VA = "0x6ECB98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A2C", Offset = "0x5D3A2C")]
			set
			{
			}
		}

		[Token(Token = "0x600267D")]
		[Address(RVA = "0x6EC6F4", Offset = "0x6EC6F4", VA = "0x6EC6F4")]
		public ControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
		{
		}
	}

	[Token(Token = "0x4001872")]
	private const string LOG_TAG = "WaveVR_EventSystemControllerProvider";

	[Token(Token = "0x4001873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_EventSystemControllerProvider instance;

	[Token(Token = "0x4001874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<ControllerModel> ControllerModels;

	[Token(Token = "0x17000087")]
	public static WaveVR_EventSystemControllerProvider Instance
	{
		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x6EBFD4", Offset = "0x6EBFD4", VA = "0x6EBFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x6EBF00", Offset = "0x6EBF00", VA = "0x6EBF00")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x6EC0FC", Offset = "0x6EC0FC", VA = "0x6EC0FC")]
	private WaveVR_EventSystemControllerProvider()
	{
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x6EC188", Offset = "0x6EC188", VA = "0x6EC188")]
	public void SetControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
	{
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x6EC724", Offset = "0x6EC724", VA = "0x6EC724")]
	public GameObject GetControllerModel(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x6EC854", Offset = "0x6EC854", VA = "0x6EC854")]
	public void MarkControllerLoader(WaveVR_Controller.EDeviceType type, bool value)
	{
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x6ECBA0", Offset = "0x6ECBA0", VA = "0x6ECBA0")]
	public bool HasControllerLoader(WaveVR_Controller.EDeviceType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x200020B")]
internal static class WaveVR_EventSystemGUIProvider
{
	[Token(Token = "0x4001875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> EventGUIs;

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x6ECCEC", Offset = "0x6ECCEC", VA = "0x6ECCEC")]
	public static void AddEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x6ECDA8", Offset = "0x6ECDA8", VA = "0x6ECDA8")]
	public static void RemoveEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x6ECE64", Offset = "0x6ECE64", VA = "0x6ECE64")]
	public static GameObject[] GetEventGUIs()
	{
		return null;
	}
}
[Token(Token = "0x200020C")]
public static class WaveVR_ExecuteEvents
{
	[Token(Token = "0x17000088")]
	public static ExecuteEvents.EventFunction<IPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x6ED148", Offset = "0x6ED148", VA = "0x6ED148")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x6ED024", Offset = "0x6ED024", VA = "0x6ED024")]
	private static void HoverExecutor(IPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x200020D")]
public class WaveVR_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x200056F")]
	public enum EGazeTriggerMouseKey
	{
		[Token(Token = "0x40029E1")]
		LeftClick,
		[Token(Token = "0x40029E2")]
		RightClick,
		[Token(Token = "0x40029E3")]
		MiddleClick
	}

	[Token(Token = "0x2000570")]
	public enum EGazeInputEvent
	{
		[Token(Token = "0x40029E5")]
		PointerDown,
		[Token(Token = "0x40029E6")]
		PointerClick,
		[Token(Token = "0x40029E7")]
		PointerSubmit
	}

	[Token(Token = "0x4001876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool UseWaveVRReticle;

	[Token(Token = "0x4001878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool TimerControl;

	[Token(Token = "0x4001879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool timerControlDefault;

	[Token(Token = "0x400187A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeToGaze;

	[Token(Token = "0x400187B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool ProgressRate;

	[Token(Token = "0x400187C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float RateTextZPosition;

	[Token(Token = "0x400187D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool ProgressCounter;

	[Token(Token = "0x400187E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float CounterTextZPosition;

	[Token(Token = "0x400187F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x4001880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool ButtonControl;

	[Token(Token = "0x4001881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

	[Token(Token = "0x4001882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

	[Token(Token = "0x4001883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public GameObject Head;

	[Token(Token = "0x4001884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool btnPressDown;

	[Token(Token = "0x4001885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool btnPressed;

	[Token(Token = "0x4001886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	private bool btnPressUp;

	[Token(Token = "0x4001887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x4001888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float currUnscaledTime;

	[Token(Token = "0x4001889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PointerEventData pointerData;

	[Token(Token = "0x400188A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float gazeTime;

	[Token(Token = "0x400188B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Text progressText;

	[Token(Token = "0x400188C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Text counterText;

	[Token(Token = "0x400188D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x400188E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private GameObject percentCanvas;

	[Token(Token = "0x400188F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject counterCanvas;

	[Token(Token = "0x4001890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 ringPos;

	[Token(Token = "0x4001891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject preGazeObject;

	[Token(Token = "0x4001892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool EnableGaze;

	[Token(Token = "0x4001893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x4001894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private RingMeshDrawer ringMesh;

	[Token(Token = "0x4001895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x6ED494", Offset = "0x6ED494", VA = "0x6ED494")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x6ED5B4", Offset = "0x6ED5B4", VA = "0x6ED5B4")]
	public void EnableTimerControl(bool enable)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x6ED6B4", Offset = "0x6ED6B4", VA = "0x6ED6B4")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x6ED8C0", Offset = "0x6ED8C0", VA = "0x6ED8C0")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x6EDB68", Offset = "0x6EDB68", VA = "0x6EDB68")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x6EE1F8", Offset = "0x6EE1F8", VA = "0x6EE1F8")]
	private void PhysicRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x6EE6D8", Offset = "0x6EE6D8", VA = "0x6EE6D8")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x6EE7F4", Offset = "0x6EE7F4", VA = "0x6EE7F4")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x6EEA90", Offset = "0x6EEA90", VA = "0x6EEA90")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x6EEE28", Offset = "0x6EEE28", VA = "0x6EEE28")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x6EF584", Offset = "0x6EF584", VA = "0x6EF584")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x6EF8DC", Offset = "0x6EF8DC", VA = "0x6EF8DC")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x6EFDA0", Offset = "0x6EFDA0", VA = "0x6EFDA0")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x6F02A0", Offset = "0x6F02A0", VA = "0x6F02A0")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x6F0EF0", Offset = "0x6F0EF0", VA = "0x6F0EF0")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x6F110C", Offset = "0x6F110C", VA = "0x6F110C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x6F1D0C", Offset = "0x6F1D0C", VA = "0x6F1D0C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60010D7")]
	[Address(RVA = "0x6F17B0", Offset = "0x6F17B0", VA = "0x6F17B0")]
	private void ActivateGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x6F1AD4", Offset = "0x6F1AD4", VA = "0x6F1AD4")]
	private void ActivateMeshDrawer(bool active)
	{
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x6F1DB8", Offset = "0x6F1DB8", VA = "0x6F1DB8", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x6F1F9C", Offset = "0x6F1F9C", VA = "0x6F1F9C")]
	public WaveVR_GazeInputModule()
	{
	}
}
[Token(Token = "0x200020E")]
public enum WaveVR_EInputModule
{
	[Token(Token = "0x4001897")]
	Controller,
	[Token(Token = "0x4001898")]
	Gaze
}
[Token(Token = "0x200020F")]
public class WaveVR_InputModuleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000571")]
	public class CGazeInputModule
	{
		[Token(Token = "0x40029E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool UseWaveVRReticle;

		[Token(Token = "0x40029E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool TimerControl;

		[Token(Token = "0x40029EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float TimeToGaze;

		[Token(Token = "0x40029EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool ProgressRate;

		[Token(Token = "0x40029EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float RateTextZPosition;

		[Token(Token = "0x40029ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ProgressCounter;

		[Token(Token = "0x40029EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CounterTextZPosition;

		[Token(Token = "0x40029EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_GazeInputModule.EGazeInputEvent InputEvent;

		[Token(Token = "0x40029F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ButtonControl;

		[Token(Token = "0x40029F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

		[Token(Token = "0x40029F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

		[Token(Token = "0x40029F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Head;

		[Token(Token = "0x600267E")]
		[Address(RVA = "0x6FC624", Offset = "0x6FC624", VA = "0x6FC624")]
		public CGazeInputModule()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000572")]
	public class CControllerInputModule
	{
		[Token(Token = "0x40029F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool DominantEventEnabled;

		[Token(Token = "0x40029F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject DominantController;

		[Token(Token = "0x40029F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask DominantRaycastMask;

		[Token(Token = "0x40029F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool NonDominantEventEnabled;

		[Token(Token = "0x40029F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject NonDominantController;

		[Token(Token = "0x40029F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask NonDominantRaycastMask;

		[Token(Token = "0x40029FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

		[Token(Token = "0x40029FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WaveVR_ControllerInputModule.ERaycastMode RaycastMode;

		[Token(Token = "0x40029FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ERaycastStartPoint RaycastStartPoint;

		[Token(Token = "0x40029FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CAB64", Offset = "0x5CAB64")]
		public string CanvasTag;

		[Token(Token = "0x600267F")]
		[Address(RVA = "0x6FC708", Offset = "0x6FC708", VA = "0x6FC708")]
		public CControllerInputModule()
		{
		}
	}

	[Token(Token = "0x4001899")]
	private const string LOG_TAG = "WaveVR_InputModuleManager";

	[Token(Token = "0x400189A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool EnableInputModule;

	[Token(Token = "0x400189B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool OverrideSystemSettings;

	[Token(Token = "0x400189C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool AutoGaze;

	[Token(Token = "0x400189D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool AlwaysShowController;

	[Token(Token = "0x400189E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_EInputModule CustomInputModule;

	[Token(Token = "0x400189F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public CGazeInputModule Gaze;

	[Token(Token = "0x40018A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CControllerInputModule Controller;

	[Token(Token = "0x40018A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FixedBeamLength;

	[Token(Token = "0x40018A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_InputModuleManager instance;

	[Token(Token = "0x40018A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool preOverrideSystemSettings;

	[Token(Token = "0x40018A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WaveVR_EInputModule InteractionMode_User;

	[Token(Token = "0x40018A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WVR_InteractionMode InteractionMode_System;

	[Token(Token = "0x40018A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private WVR_InteractionMode InteractionMode_Current;

	[Token(Token = "0x40018A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WVR_GazeTriggerType gazeTriggerType_User;

	[Token(Token = "0x40018A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_GazeTriggerType gazeTriggerType_System;

	[Token(Token = "0x40018A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WVR_GazeTriggerType gazeTriggerType_User_pre;

	[Token(Token = "0x40018AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private GameObject Head;

	[Token(Token = "0x40018AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject eventSystem;

	[Token(Token = "0x40018AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WaveVR_GazeInputModule gazeInputModule;

	[Token(Token = "0x40018AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject gazePointer;

	[Token(Token = "0x40018AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private GameObject gazeRing;

	[Token(Token = "0x40018AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_ControllerInputModule controllerInputModule;

	[Token(Token = "0x17000089")]
	public static WaveVR_InputModuleManager Instance
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x6F1724", Offset = "0x6F1724", VA = "0x6F1724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x6F9364", Offset = "0x6F9364", VA = "0x6F9364")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x6F9438", Offset = "0x6F9438", VA = "0x6F9438")]
	private void initInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x6F9E1C", Offset = "0x6F9E1C", VA = "0x6F9E1C")]
	private void updateInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x6F9B18", Offset = "0x6F9B18", VA = "0x6F9B18")]
	private void updateGazeTriggerType_User()
	{
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x6FA39C", Offset = "0x6FA39C", VA = "0x6FA39C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x6FA914", Offset = "0x6FA914", VA = "0x6FA914")]
	private void Start()
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x6FAE5C", Offset = "0x6FAE5C", VA = "0x6FAE5C")]
	public void Update()
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x6FA4C0", Offset = "0x6FA4C0", VA = "0x6FA4C0")]
	private void ActivateGazePointer(bool active)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x6FB310", Offset = "0x6FB310", VA = "0x6FB310")]
	private void CreateGazeInputModule()
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x6FB424", Offset = "0x6FB424", VA = "0x6FB424")]
	private void SetGazeInputModuleParameters()
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x6FB740", Offset = "0x6FB740", VA = "0x6FB740")]
	private void updateGazeInputModule()
	{
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x6FB900", Offset = "0x6FB900", VA = "0x6FB900")]
	private void SetActiveGaze(bool value)
	{
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x6FB9D0", Offset = "0x6FB9D0", VA = "0x6FB9D0")]
	private void CreateControllerInputModule()
	{
	}

	[Token(Token = "0x60010EA")]
	[Address(RVA = "0x6FBAE4", Offset = "0x6FBAE4", VA = "0x6FBAE4")]
	private void SetControllerInputModuleParameters()
	{
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x6FBF84", Offset = "0x6FBF84", VA = "0x6FBF84")]
	private void updateControllerInputModule()
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x6FC048", Offset = "0x6FC048", VA = "0x6FC048")]
	private void SetActiveController(bool value)
	{
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x6FC118", Offset = "0x6FC118", VA = "0x6FC118")]
	private bool IsAnyControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x6F9B78", Offset = "0x6F9B78", VA = "0x6F9B78")]
	private void initializeInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x6F9CB8", Offset = "0x6F9CB8", VA = "0x6F9CB8")]
	private void initializeInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x60010F0")]
	[Address(RVA = "0x6FAE38", Offset = "0x6FAE38", VA = "0x6FAE38")]
	private void disableAllInputModules()
	{
	}

	[Token(Token = "0x60010F1")]
	[Address(RVA = "0x6FA244", Offset = "0x6FA244", VA = "0x6FA244")]
	private void updateInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x60010F2")]
	[Address(RVA = "0x6FA2F0", Offset = "0x6FA2F0", VA = "0x6FA2F0")]
	private void updateInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x60010F3")]
	[Address(RVA = "0x6FC39C", Offset = "0x6FC39C", VA = "0x6FC39C")]
	public WaveVR_ControllerInputModule.ERaycastMode GetRaycastMode()
	{
		return default(WaveVR_ControllerInputModule.ERaycastMode);
	}

	[Token(Token = "0x60010F4")]
	[Address(RVA = "0x6F9DF8", Offset = "0x6F9DF8", VA = "0x6F9DF8")]
	public WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[Token(Token = "0x60010F5")]
	[Address(RVA = "0x6FC468", Offset = "0x6FC468", VA = "0x6FC468")]
	public WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x60010F6")]
	[Address(RVA = "0x6FC480", Offset = "0x6FC480", VA = "0x6FC480")]
	public WVR_GazeTriggerType GetUserGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x60010F7")]
	[Address(RVA = "0x6FC488", Offset = "0x6FC488", VA = "0x6FC488")]
	public void SetControllerBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x6FC550", Offset = "0x6FC550", VA = "0x6FC550")]
	public WaveVR_InputModuleManager()
	{
	}
}
[Token(Token = "0x2000210")]
public class WaveVR_RaycastResult
{
	[Token(Token = "0x40018B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6594", Offset = "0x5C6594")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x40018B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C65A4", Offset = "0x5C65A4")]
	private Vector3 <worldPosition>k__BackingField;

	[Token(Token = "0x1700008A")]
	public GameObject gameObject
	{
		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x704AD4", Offset = "0x704AD4", VA = "0x704AD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE0E8", Offset = "0x5CE0E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x704ADC", Offset = "0x704ADC", VA = "0x704ADC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE0F8", Offset = "0x5CE0F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public Vector3 worldPosition
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x704AE4", Offset = "0x704AE4", VA = "0x704AE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE108", Offset = "0x5CE108")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x704AF8", Offset = "0x704AF8", VA = "0x704AF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE118", Offset = "0x5CE118")]
		set
		{
		}
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x704B04", Offset = "0x704B04", VA = "0x704B04")]
	public WaveVR_RaycastResult()
	{
	}
}
[Token(Token = "0x2000211")]
public class WaveVR_RaycastResultProvider
{
	[Token(Token = "0x2000573")]
	public class ERaycastResult
	{
		[Token(Token = "0x40029FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_Controller.EDeviceType Type;

		[Token(Token = "0x40029FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WaveVR_RaycastResult Result;

		[Token(Token = "0x6002680")]
		[Address(RVA = "0x704E60", Offset = "0x704E60", VA = "0x704E60")]
		public ERaycastResult(WaveVR_Controller.EDeviceType type, WaveVR_RaycastResult result)
		{
		}
	}

	[Token(Token = "0x40018B2")]
	private const string LOG_TAG = "WaveVR_RaycastResultProvider";

	[Token(Token = "0x40018B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_RaycastResultProvider instance;

	[Token(Token = "0x40018B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private List<ERaycastResult> RaycastResults;

	[Token(Token = "0x1700008C")]
	public static WaveVR_RaycastResultProvider Instance
	{
		[Token(Token = "0x6001100")]
		[Address(RVA = "0x6EF2A0", Offset = "0x6EF2A0", VA = "0x6EF2A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x704BB0", Offset = "0x704BB0", VA = "0x704BB0")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x704C48", Offset = "0x704C48", VA = "0x704C48")]
	private WaveVR_RaycastResultProvider()
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x6EF3C8", Offset = "0x6EF3C8", VA = "0x6EF3C8")]
	public void SetRaycastResult(WaveVR_Controller.EDeviceType device, GameObject gameObject, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x704E88", Offset = "0x704E88", VA = "0x704E88")]
	public WaveVR_RaycastResult GetRaycastResult(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x704F1C", Offset = "0x704F1C", VA = "0x704F1C")]
	public WaveVR_RaycastResult GetRaycastResult(WaveVR_Controller.EDeviceType device)
	{
		return null;
	}
}
[Token(Token = "0x2000212")]
public class WaveVR_SetAsEventSystemController : MonoBehaviour
{
	[Token(Token = "0x40018B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool added;

	[Token(Token = "0x40018B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x6001106")]
	[Address(RVA = "0x23C4838", Offset = "0x23C4838", VA = "0x23C4838")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001107")]
	[Address(RVA = "0x23C48FC", Offset = "0x23C48FC", VA = "0x23C48FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001108")]
	[Address(RVA = "0x23C49BC", Offset = "0x23C49BC", VA = "0x23C49BC")]
	public WaveVR_SetAsEventSystemController()
	{
	}
}
[Token(Token = "0x2000213")]
public class WaveVR_ControllerPoseTracker : MonoBehaviour
{
	[Token(Token = "0x40018B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40018B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x40018B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool InversePosition;

	[Token(Token = "0x40018BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool TrackPosition;

	[Token(Token = "0x40018BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x40018BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WVR_SimulationOption currSimulationOption;

	[Token(Token = "0x40018BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool bSetupSimulation;

	[Token(Token = "0x40018BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool FollowHead;

	[Token(Token = "0x40018BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool currFollowHead;

	[Token(Token = "0x40018C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool bSetupFollowHead;

	[Token(Token = "0x40018C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool InverseRotation;

	[Token(Token = "0x40018C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool TrackRotation;

	[Token(Token = "0x40018C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x40018C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C65B4", Offset = "0x5C65B4")]
	public bool ApplyNeckOffset;

	[Token(Token = "0x40018C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C65C4", Offset = "0x5C65C4")]
	public float ElbowRaiseYaxis;

	[Token(Token = "0x40018C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C65E0", Offset = "0x5C65E0")]
	public float ElbowRaiseZaxis;

	[Token(Token = "0x40018C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private GameObject Head;

	[Token(Token = "0x40018C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C65FC", Offset = "0x5C65FC")]
	private bool SetCustomHand;

	[Token(Token = "0x40018C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool cptEnabled;

	[Token(Token = "0x40018CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x40018CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x40018CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Vector3 v3ChangeAxisX;

	[Token(Token = "0x40018CD")]
	private const float BodyAngularVelocityUpperBound = 0.2f;

	[Token(Token = "0x40018CE")]
	private const float ControllerAngularVelocityUpperBound = 30f;

	[Token(Token = "0x6001109")]
	[Address(RVA = "0x6DF7E8", Offset = "0x6DF7E8", VA = "0x6DF7E8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600110A")]
	[Address(RVA = "0x6DF908", Offset = "0x6DF908", VA = "0x6DF908")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x6DFA24", Offset = "0x6DFA24", VA = "0x6DFA24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x6E0844", Offset = "0x6E0844", VA = "0x6E0844")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x6E13F0", Offset = "0x6E13F0", VA = "0x6E13F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x6E0210", Offset = "0x6E0210", VA = "0x6E0210")]
	private void SetupPoseSimulation()
	{
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x6E19B8", Offset = "0x6E19B8", VA = "0x6E19B8")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x6E1660", Offset = "0x6E1660", VA = "0x6E1660")]
	private void updateDevicePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x6E1D0C", Offset = "0x6E1D0C", VA = "0x6E1D0C")]
	private float BodyRotationFilter1(WVR_DevicePosePair_t pose)
	{
		return default(float);
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x6E1E10", Offset = "0x6E1E10", VA = "0x6E1E10")]
	public WaveVR_ControllerPoseTracker()
	{
	}
}
[Token(Token = "0x2000214")]
public sealed class WaveVR_DevicePoseTracker : MonoBehaviour
{
	[Token(Token = "0x40018CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40018D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x40018D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool inversePosition;

	[Token(Token = "0x40018D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool trackPosition;

	[Token(Token = "0x40018D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C660C", Offset = "0x5C660C")]
	public bool EnableNeckModel;

	[Token(Token = "0x40018D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool inverseRotation;

	[Token(Token = "0x40018D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool trackRotation;

	[Token(Token = "0x40018D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_TrackTiming timing;

	[Token(Token = "0x40018D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x40018D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x6001114")]
	[Address(RVA = "0x6EA090", Offset = "0x6EA090", VA = "0x6EA090")]
	private void Update()
	{
	}

	[Token(Token = "0x6001115")]
	[Address(RVA = "0x6EA4CC", Offset = "0x6EA4CC", VA = "0x6EA4CC")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6001116")]
	[Address(RVA = "0x6EA2C0", Offset = "0x6EA2C0", VA = "0x6EA2C0")]
	private void updatePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6001117")]
	[Address(RVA = "0x6EA820", Offset = "0x6EA820", VA = "0x6EA820")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001118")]
	[Address(RVA = "0x6EB004", Offset = "0x6EB004", VA = "0x6EB004")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001119")]
	[Address(RVA = "0x6EB0E8", Offset = "0x6EB0E8", VA = "0x6EB0E8")]
	public WaveVR_DevicePoseTracker()
	{
	}
}
[Token(Token = "0x2000215")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C1558", Offset = "0x5C1558")]
public class WaveVR_PoseSimulator : MonoBehaviour
{
	[Token(Token = "0x40018D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_PoseSimulator instance;

	[Token(Token = "0x40018DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private WaveVR_Utils.RigidTransform rtPose_head;

	[Token(Token = "0x40018DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_Utils.RigidTransform rtPose_head_onGround;

	[Token(Token = "0x40018DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WaveVR_Utils.RigidTransform rtPose_right;

	[Token(Token = "0x40018DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaveVR_Utils.RigidTransform rtPose_left;

	[Token(Token = "0x40018DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private WaveVR_Utils.WVR_ButtonState_t btn_right;

	[Token(Token = "0x40018DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaveVR_Utils.WVR_ButtonState_t btn_left;

	[Token(Token = "0x40018E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private WVR_Axis_t axis_right;

	[Token(Token = "0x40018E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WVR_Axis_t axis_left;

	[Token(Token = "0x40018E2")]
	private const string MOUSE_X = "Mouse X";

	[Token(Token = "0x40018E3")]
	private const string MOUSE_Y = "Mouse Y";

	[Token(Token = "0x40018E4")]
	private const string MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

	[Token(Token = "0x40018E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float shiftX_head;

	[Token(Token = "0x40018E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float shiftY_head;

	[Token(Token = "0x40018E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float shiftZ_head;

	[Token(Token = "0x40018E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float angleX_head;

	[Token(Token = "0x40018E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float angleY_head;

	[Token(Token = "0x40018EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float angleZ_head;

	[Token(Token = "0x40018EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float shiftX_right;

	[Token(Token = "0x40018EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float shiftY_right;

	[Token(Token = "0x40018ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float shiftZ_right;

	[Token(Token = "0x40018EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float angleX_right;

	[Token(Token = "0x40018EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float angleY_right;

	[Token(Token = "0x40018F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float angleZ_right;

	[Token(Token = "0x40018F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float shiftX_left;

	[Token(Token = "0x40018F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float shiftY_left;

	[Token(Token = "0x40018F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float shiftZ_left;

	[Token(Token = "0x40018F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float angleX_left;

	[Token(Token = "0x40018F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float angleY_left;

	[Token(Token = "0x40018F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float angleZ_left;

	[Token(Token = "0x40018F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly KeyCode[] KeyCode_Head;

	[Token(Token = "0x40018F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly KeyCode[] KeyCode_Right;

	[Token(Token = "0x40018F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly KeyCode[] KeyCode_Left;

	[Token(Token = "0x1700008D")]
	public static WaveVR_PoseSimulator Instance
	{
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x6FF6A4", Offset = "0x6FF6A4", VA = "0x6FF6A4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600111C")]
	[Address(RVA = "0x6FF8AC", Offset = "0x6FF8AC", VA = "0x6FF8AC")]
	public void GetRigidTransform(WVR_DeviceType type, ref WaveVR_Utils.RigidTransform rtPose, WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x600111D")]
	[Address(RVA = "0x6FF8F8", Offset = "0x6FF8F8", VA = "0x6FF8F8")]
	private void UpdateHeadPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x600111E")]
	[Address(RVA = "0x6FFE70", Offset = "0x6FFE70", VA = "0x6FFE70")]
	private void UpdateRightHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x600111F")]
	[Address(RVA = "0x70049C", Offset = "0x70049C", VA = "0x70049C")]
	private void UpdateLefHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x700840", Offset = "0x700840", VA = "0x700840")]
	public void Update()
	{
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x700910", Offset = "0x700910", VA = "0x700910")]
	public WaveVR_PoseSimulator()
	{
	}
}
[Token(Token = "0x2000216")]
public enum WVR_TrackTiming
{
	[Token(Token = "0x40018FB")]
	WhenUpdate,
	[Token(Token = "0x40018FC")]
	WhenNewPoses
}
[Token(Token = "0x2000217")]
public enum WVR_SimulationOption
{
	[Token(Token = "0x40018FE")]
	WhenNoPosition,
	[Token(Token = "0x40018FF")]
	ForceSimulation,
	[Token(Token = "0x4001900")]
	NoSimulation
}
[Token(Token = "0x2000218")]
public class WaveVR_PoseTrackerManager : MonoBehaviour
{
	[Token(Token = "0x4001901")]
	private const string LOG_TAG = "WaveVR_PoseTrackerManager";

	[Token(Token = "0x4001902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x4001903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool TrackPosition;

	[Token(Token = "0x4001904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool EnableNeckModel;

	[Token(Token = "0x4001905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4001906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool FollowHead;

	[Token(Token = "0x4001907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool TrackRotation;

	[Token(Token = "0x4001908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x4001909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> IncludedObjects;

	[Token(Token = "0x400190A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<bool> IncludedStates;

	[Token(Token = "0x400190B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool showTrackedObject;

	[Token(Token = "0x400190C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool connected;

	[Token(Token = "0x400190D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x400190E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool poseUpdated;

	[Token(Token = "0x400190F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool hasNewPose;

	[Token(Token = "0x4001910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool gazeOnly;

	[Token(Token = "0x4001911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WaveVR_DevicePoseTracker devicePoseTracker;

	[Token(Token = "0x4001912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WaveVR_ControllerPoseTracker ctrlerPoseTracker;

	[Token(Token = "0x4001913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool ptmEnabled;

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x700B10", Offset = "0x700B10", VA = "0x700B10")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x700BE4", Offset = "0x700BE4", VA = "0x700BE4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x701968", Offset = "0x701968", VA = "0x701968")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x7022F0", Offset = "0x7022F0", VA = "0x7022F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x702C3C", Offset = "0x702C3C", VA = "0x702C3C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x702E20", Offset = "0x702E20", VA = "0x702E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x702EC4", Offset = "0x702EC4", VA = "0x702EC4")]
	private bool hideEventController()
	{
		return default(bool);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x7028E0", Offset = "0x7028E0", VA = "0x7028E0")]
	public void ActivateTargetObjects()
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x701454", Offset = "0x701454", VA = "0x701454")]
	private void ForceActivateTargetObjects(bool active)
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x7030D4", Offset = "0x7030D4", VA = "0x7030D4")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600112D")]
	[Address(RVA = "0x70333C", Offset = "0x70333C", VA = "0x70333C")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x703470", Offset = "0x703470", VA = "0x703470")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x70361C", Offset = "0x70361C", VA = "0x70361C")]
	public WaveVR_PoseTrackerManager()
	{
	}
}
[Token(Token = "0x2000219")]
public class WaveInputHelper : MonoBehaviour
{
	[Token(Token = "0x4001914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool RaHeld;

	[Token(Token = "0x4001915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool RaDown;

	[Token(Token = "0x4001916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
	public bool RaUp;

	[Token(Token = "0x4001917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
	public bool RbHeld;

	[Token(Token = "0x4001918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool RbDown;

	[Token(Token = "0x4001919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool RbUp;

	[Token(Token = "0x400191A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool RtriggerHeld;

	[Token(Token = "0x400191B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	public bool RtriggerDown;

	[Token(Token = "0x400191C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool RtriggerUp;

	[Token(Token = "0x400191D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool RgripHeld;

	[Token(Token = "0x400191E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool RgripDown;

	[Token(Token = "0x400191F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool RgripUp;

	[Token(Token = "0x4001920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool LaHeld;

	[Token(Token = "0x4001921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool LaDown;

	[Token(Token = "0x4001922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool LaUp;

	[Token(Token = "0x4001923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool LbHeld;

	[Token(Token = "0x4001924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool LbDown;

	[Token(Token = "0x4001925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool LbUp;

	[Token(Token = "0x4001926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool LtriggerHeld;

	[Token(Token = "0x4001927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool LtriggerDown;

	[Token(Token = "0x4001928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool LtriggerUp;

	[Token(Token = "0x4001929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool LgripHeld;

	[Token(Token = "0x400192A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool LgripDown;

	[Token(Token = "0x400192B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool LgripUp;

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x24EA5A4", Offset = "0x24EA5A4", VA = "0x24EA5A4")]
	public bool GetDown(WaveVR_Controller.EDeviceType controller, WaveVR_ButtonList.EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x24EA66C", Offset = "0x24EA66C", VA = "0x24EA66C")]
	public bool GetUp(WaveVR_Controller.EDeviceType controller, WaveVR_ButtonList.EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x24EA734", Offset = "0x24EA734", VA = "0x24EA734")]
	public bool Get(WaveVR_Controller.EDeviceType controller, WaveVR_ButtonList.EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x24EA7FC", Offset = "0x24EA7FC", VA = "0x24EA7FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001134")]
	[Address(RVA = "0x24EB55C", Offset = "0x24EB55C", VA = "0x24EB55C")]
	public WaveInputHelper()
	{
	}
}
[Token(Token = "0x200021A")]
public class WaveVR : IDisposable
{
	[Token(Token = "0x2000574")]
	public class Device
	{
		[Token(Token = "0x4002A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAB98", Offset = "0x5CAB98")]
		private WVR_DeviceType <type>k__BackingField;

		[Token(Token = "0x4002A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABA8", Offset = "0x5CABA8")]
		private int <index>k__BackingField;

		[Token(Token = "0x170002F1")]
		public WVR_DeviceType type
		{
			[Token(Token = "0x6002682")]
			[Address(RVA = "0x24EFBC8", Offset = "0x24EFBC8", VA = "0x24EFBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A3C", Offset = "0x5D3A3C")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002683")]
			[Address(RVA = "0x24EFBB8", Offset = "0x24EFBB8", VA = "0x24EFBB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A4C", Offset = "0x5D3A4C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F2")]
		public int index
		{
			[Token(Token = "0x6002684")]
			[Address(RVA = "0x24EFBD0", Offset = "0x24EFBD0", VA = "0x24EFBD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A5C", Offset = "0x5D3A5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002685")]
			[Address(RVA = "0x24EFBC0", Offset = "0x24EFBC0", VA = "0x24EFBC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A6C", Offset = "0x5D3A6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F3")]
		public bool connected
		{
			[Token(Token = "0x6002686")]
			[Address(RVA = "0x24EFBD8", Offset = "0x24EFBD8", VA = "0x24EFBD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002F4")]
		public WVR_DevicePosePair_t pose
		{
			[Token(Token = "0x6002687")]
			[Address(RVA = "0x24EFCB4", Offset = "0x24EFCB4", VA = "0x24EFCB4")]
			get
			{
				return default(WVR_DevicePosePair_t);
			}
		}

		[Token(Token = "0x170002F5")]
		public WaveVR_Utils.RigidTransform rigidTransform
		{
			[Token(Token = "0x6002688")]
			[Address(RVA = "0x24EFE0C", Offset = "0x24EFE0C", VA = "0x24EFE0C")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x6002681")]
		[Address(RVA = "0x24EC10C", Offset = "0x24EC10C", VA = "0x24EC10C")]
		public Device(WVR_DeviceType type)
		{
		}
	}

	[Token(Token = "0x400192C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	public bool editor;

	[Token(Token = "0x400192D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400192E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR instance;

	[Token(Token = "0x400192F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	public bool Initialized;

	[Token(Token = "0x4001930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	public bool FocusCapturedBySystem;

	[Token(Token = "0x4001931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WVR_InteractionMode InteractionMode;

	[Token(Token = "0x4001932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WVR_GazeTriggerType GazeTriggerType;

	[Token(Token = "0x4001933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6674", Offset = "0x5C6674")]
	private Device <hmd>k__BackingField;

	[Token(Token = "0x4001934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6684", Offset = "0x5C6684")]
	private Device <controllerLeft>k__BackingField;

	[Token(Token = "0x4001935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6694", Offset = "0x5C6694")]
	private Device <controllerRight>k__BackingField;

	[Token(Token = "0x4001936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static WVR_DeviceType[] DeviceTypes;

	[Token(Token = "0x4001937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool[] isValidPose;

	[Token(Token = "0x4001938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private uint[] deviceIndexMap;

	[Token(Token = "0x4001939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WVR_DevicePosePair_t[] poses;

	[Token(Token = "0x400193A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private WaveVR_Utils.RigidTransform[] rtPoses;

	[Token(Token = "0x1700008E")]
	public static WaveVR Instance
	{
		[Token(Token = "0x6001138")]
		[Address(RVA = "0x24EB818", Offset = "0x24EB818", VA = "0x24EB818")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public Device hmd
	{
		[Token(Token = "0x6001139")]
		[Address(RVA = "0x24EBD14", Offset = "0x24EBD14", VA = "0x24EBD14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE128", Offset = "0x5CE128")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x24EBD1C", Offset = "0x24EBD1C", VA = "0x24EBD1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE138", Offset = "0x5CE138")]
		private set
		{
		}
	}

	[Token(Token = "0x17000090")]
	public Device controllerLeft
	{
		[Token(Token = "0x600113B")]
		[Address(RVA = "0x24EBD24", Offset = "0x24EBD24", VA = "0x24EBD24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE148", Offset = "0x5CE148")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113C")]
		[Address(RVA = "0x24EBD2C", Offset = "0x24EBD2C", VA = "0x24EBD2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE158", Offset = "0x5CE158")]
		private set
		{
		}
	}

	[Token(Token = "0x17000091")]
	public Device controllerRight
	{
		[Token(Token = "0x600113D")]
		[Address(RVA = "0x24EBD34", Offset = "0x24EBD34", VA = "0x24EBD34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE168", Offset = "0x5CE168")]
		get
		{
			return null;
		}
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x24EBD3C", Offset = "0x24EBD3C", VA = "0x24EBD3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE178", Offset = "0x5CE178")]
		private set
		{
		}
	}

	[Token(Token = "0x17000092")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D688C", Offset = "0x5D688C")]
	public static bool Hmd
	{
		[Token(Token = "0x6001142")]
		[Address(RVA = "0x24EC08C", Offset = "0x24EC08C", VA = "0x24EC08C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001135")]
	[Address(RVA = "0x24EB564", Offset = "0x24EB564", VA = "0x24EB564")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001136")]
	[Address(RVA = "0x24EB680", Offset = "0x24EB680", VA = "0x24EB680")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6001137")]
	[Address(RVA = "0x24EB74C", Offset = "0x24EB74C", VA = "0x24EB74C")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x24EBD44", Offset = "0x24EBD44", VA = "0x24EBD44")]
	public Device getDeviceByType(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x24EBF08", Offset = "0x24EBF08", VA = "0x24EBF08")]
	public Device getDeviceByType(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x24EBFFC", Offset = "0x24EBFFC", VA = "0x24EBFFC")]
	private void ReportError(WVR_InitError error)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x24EB930", Offset = "0x24EB930", VA = "0x24EB930")]
	private WaveVR()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x24ED0CC", Offset = "0x24ED0CC", VA = "0x24ED0CC", Slot = "1")]
	~WaveVR()
	{
	}

	[Token(Token = "0x6001145")]
	[Address(RVA = "0x24ED228", Offset = "0x24ED228", VA = "0x24ED228")]
	public void onLoadLevel()
	{
	}

	[Token(Token = "0x6001146")]
	[Address(RVA = "0x24ED130", Offset = "0x24ED130", VA = "0x24ED130", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001147")]
	[Address(RVA = "0x24ED388", Offset = "0x24ED388", VA = "0x24ED388")]
	public static void SafeDispose()
	{
	}

	[Token(Token = "0x6001148")]
	[Address(RVA = "0x24ED46C", Offset = "0x24ED46C", VA = "0x24ED46C")]
	public int is6DoFTracking()
	{
		return default(int);
	}

	[Token(Token = "0x6001149")]
	[Address(RVA = "0x24ED4B4", Offset = "0x24ED4B4", VA = "0x24ED4B4")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x600114A")]
	[Address(RVA = "0x24ED4C8", Offset = "0x24ED4C8", VA = "0x24ED4C8")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin, bool isSimulator)
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x24EF1F4", Offset = "0x24EF1F4", VA = "0x24EF1F4")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x24EC278", Offset = "0x24EC278", VA = "0x24EC278")]
	public bool SetLeftHandedMode(bool leftHandedInEditor = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x24EF120", Offset = "0x24EF120", VA = "0x24EF120")]
	private bool GetConnectionStatus(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x24EF488", Offset = "0x24EF488", VA = "0x24EF488")]
	public void SetConnectionStatus(WVR_DeviceType type, bool conn)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x24EC5C4", Offset = "0x24EC5C4", VA = "0x24EC5C4")]
	public void UpdateAllConnection()
	{
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x24EEF74", Offset = "0x24EEF74", VA = "0x24EEF74")]
	public void UpdateButtonEvents()
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x24EF768", Offset = "0x24EF768", VA = "0x24EF768")]
	public void ResetAllButtonStates()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x24ECC5C", Offset = "0x24ECC5C", VA = "0x24ECC5C")]
	public void SetDefaultButtons()
	{
	}

	[Token(Token = "0x6001153")]
	[Address(RVA = "0x24EF904", Offset = "0x24EF904", VA = "0x24EF904")]
	public void SetPoseSimulation(WVR_SimulationType type)
	{
	}

	[Token(Token = "0x6001154")]
	[Address(RVA = "0x24EF9B4", Offset = "0x24EF9B4", VA = "0x24EF9B4")]
	public void SetPoseSimulationFollowHead(bool follow)
	{
	}

	[Token(Token = "0x6001155")]
	[Address(RVA = "0x24EFA54", Offset = "0x24EFA54", VA = "0x24EFA54")]
	public void SetNeckModelEnabled(bool enabled)
	{
	}
}
[Token(Token = "0x200021B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C15A8", Offset = "0x5C15A8")]
public class WaveVR_Beam : MonoBehaviour
{
	[Token(Token = "0x400193B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400193C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ShowBeam;

	[Token(Token = "0x400193D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	public bool ListenToDevice;

	[Token(Token = "0x400193E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x400193F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float StartWidth;

	[Token(Token = "0x4001940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float EndWidth;

	[Token(Token = "0x4001941")]
	private const float minimal_length = 0.1f;

	[Token(Token = "0x4001942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float preStartOffset;

	[Token(Token = "0x4001943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartOffset;

	[Token(Token = "0x4001944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C66A4", Offset = "0x5C66A4")]
	public float endOffsetMin;

	[Token(Token = "0x4001945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C66B4", Offset = "0x5C66B4")]
	public float endOffsetMax;

	[Token(Token = "0x4001946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float preEndOffset;

	[Token(Token = "0x4001947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float EndOffset;

	[Token(Token = "0x4001948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color32 preStartColor;

	[Token(Token = "0x4001949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color32 StartColor;

	[Token(Token = "0x400194A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Color32 TailColor;

	[Token(Token = "0x400194B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color32 preEndColor;

	[Token(Token = "0x400194C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 EndColor;

	[Token(Token = "0x400194D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool useDefaultMaterial;

	[Token(Token = "0x400194E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Material customMat;

	[Token(Token = "0x400194F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int count;

	[Token(Token = "0x4001950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool updateEveryFrame;

	[Token(Token = "0x4001951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	private bool makeTail;

	[Token(Token = "0x4001952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private string textureName;

	[Token(Token = "0x4001953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int maxUVAngle;

	[Token(Token = "0x4001954")]
	private const float epsilon = 0.0001f;

	[Token(Token = "0x4001955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool isBeamEnable;

	[Token(Token = "0x4001956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool connected;

	[Token(Token = "0x4001957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int Count;

	[Token(Token = "0x4001958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int verticesCount;

	[Token(Token = "0x4001959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int indicesCount;

	[Token(Token = "0x400195A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> vertices;

	[Token(Token = "0x400195B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private List<Vector2> uvs;

	[Token(Token = "0x400195C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Vector3> normals;

	[Token(Token = "0x400195D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private List<int> indices;

	[Token(Token = "0x400195E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Color32> colors;

	[Token(Token = "0x400195F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 position;

	[Token(Token = "0x4001960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh emptyMesh;

	[Token(Token = "0x4001961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Mesh updateMesh;

	[Token(Token = "0x4001962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Material materialComp;

	[Token(Token = "0x4001963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private MeshFilter mf_beam;

	[Token(Token = "0x4001964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4001965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool meshIsCreated;

	[Token(Token = "0x4001966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool toUpdateBeam;

	[Token(Token = "0x4001967")]
	private const string CtrColorBeam3 = "CtrColorBeam3";

	[Token(Token = "0x4001968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Matrix4x4 mat44_rot;

	[Token(Token = "0x4001969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Matrix4x4 mat44_uv;

	[Token(Token = "0x400196A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Vector3 vec3_vertices_start;

	[Token(Token = "0x400196B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private Vector3 vec3_vertices_end;

	[Token(Token = "0x400196C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private readonly Vector2 vec2_05_05;

	[Token(Token = "0x400196D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private readonly Vector3 vec3_0_05_0;

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x24F90AC", Offset = "0x24F90AC", VA = "0x24F90AC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x24F91C8", Offset = "0x24F91C8", VA = "0x24F91C8")]
	public void SetEndOffset(float end_offset)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x24F942C", Offset = "0x24F942C", VA = "0x24F942C")]
	public void SetEndOffset(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x24F9498", Offset = "0x24F9498", VA = "0x24F9498")]
	public void ResetEndOffset()
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x24F98B4", Offset = "0x24F98B4", VA = "0x24F98B4")]
	private bool Color32Equal(Color32 color1, Color32 color2)
	{
		return default(bool);
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x24F9900", Offset = "0x24F9900", VA = "0x24F9900")]
	private void ValidateBeamAttributes()
	{
	}

	[Token(Token = "0x600115D")]
	[Address(RVA = "0x24FA010", Offset = "0x24FA010", VA = "0x24FA010")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600115E")]
	[Address(RVA = "0x24FB938", Offset = "0x24FB938", VA = "0x24FB938")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x24FAE90", Offset = "0x24FAE90", VA = "0x24FAE90")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x24FBB6C", Offset = "0x24FBB6C", VA = "0x24FBB6C")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x24FBDA0", Offset = "0x24FBDA0", VA = "0x24FBDA0")]
	private void Validate()
	{
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x24FBE5C", Offset = "0x24FBE5C", VA = "0x24FBE5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x24FBEE4", Offset = "0x24FBEE4", VA = "0x24FBEE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x24FBEE8", Offset = "0x24FBEE8", VA = "0x24FBEE8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x24FCF0C", Offset = "0x24FCF0C", VA = "0x24FCF0C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x24FD148", Offset = "0x24FD148", VA = "0x24FD148")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x24FD204", Offset = "0x24FD204", VA = "0x24FD204")]
	public void Update()
	{
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x24FDC74", Offset = "0x24FDC74", VA = "0x24FDC74")]
	private void createMesh()
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x24FDB80", Offset = "0x24FDB80", VA = "0x24FDB80")]
	private void createBeamMesh()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x24FCFB8", Offset = "0x24FCFB8", VA = "0x24FCFB8")]
	private void showBeamMesh(bool show)
	{
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x24FE914", Offset = "0x24FE914", VA = "0x24FE914")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x24FB0C8", Offset = "0x24FB0C8", VA = "0x24FB0C8")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x24FB50C", Offset = "0x24FB50C", VA = "0x24FB50C")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x24FDBA4", Offset = "0x24FDBA4", VA = "0x24FDBA4")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x24FED68", Offset = "0x24FED68", VA = "0x24FED68")]
	public WaveVR_Beam()
	{
	}
}
[Token(Token = "0x200021C")]
public class WaveVR_ButtonList : MonoBehaviour
{
	[Token(Token = "0x2000575")]
	public enum EButtons
	{
		[Token(Token = "0x4002A03")]
		Unavailable = 0,
		[Token(Token = "0x4002A04")]
		Menu = 1,
		[Token(Token = "0x4002A05")]
		Grip = 2,
		[Token(Token = "0x4002A06")]
		DPadUp = 4,
		[Token(Token = "0x4002A07")]
		DPadRight = 5,
		[Token(Token = "0x4002A08")]
		DPadDown = 6,
		[Token(Token = "0x4002A09")]
		DPadLeft = 3,
		[Token(Token = "0x4002A0A")]
		VolumeUp = 7,
		[Token(Token = "0x4002A0B")]
		VolumeDown = 8,
		[Token(Token = "0x4002A0C")]
		Back = 14,
		[Token(Token = "0x4002A0D")]
		Enter = 15,
		[Token(Token = "0x4002A0E")]
		Touchpad = 16,
		[Token(Token = "0x4002A0F")]
		Trigger = 17,
		[Token(Token = "0x4002A10")]
		Thumbstick = 18
	}

	[Token(Token = "0x2000576")]
	public enum EHmdButtons
	{
		[Token(Token = "0x4002A12")]
		Menu = 1,
		[Token(Token = "0x4002A13")]
		DPadUp = 4,
		[Token(Token = "0x4002A14")]
		DPadRight = 5,
		[Token(Token = "0x4002A15")]
		DPadDown = 6,
		[Token(Token = "0x4002A16")]
		DPadLeft = 3,
		[Token(Token = "0x4002A17")]
		VolumeUp = 7,
		[Token(Token = "0x4002A18")]
		VolumeDown = 8,
		[Token(Token = "0x4002A19")]
		Enter = 15,
		[Token(Token = "0x4002A1A")]
		Touchpad = 16
	}

	[Token(Token = "0x2000577")]
	public enum EControllerButtons
	{
		[Token(Token = "0x4002A1C")]
		Menu = 1,
		[Token(Token = "0x4002A1D")]
		Grip = 2,
		[Token(Token = "0x4002A1E")]
		DPadUp = 4,
		[Token(Token = "0x4002A1F")]
		DPadRight = 5,
		[Token(Token = "0x4002A20")]
		DPadDown = 6,
		[Token(Token = "0x4002A21")]
		DPadLeft = 3,
		[Token(Token = "0x4002A22")]
		VolumeUp = 7,
		[Token(Token = "0x4002A23")]
		VolumeDown = 8,
		[Token(Token = "0x4002A24")]
		Touchpad = 16,
		[Token(Token = "0x4002A25")]
		Trigger = 17,
		[Token(Token = "0x4002A26")]
		Thumbstick = 18
	}

	[Token(Token = "0x400196E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400196F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public List<EHmdButtons> HmdButtons;

	[Token(Token = "0x4001970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WVR_InputAttribute_t[] inputAttributes_hmd;

	[Token(Token = "0x4001971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private List<WVR_InputId> usableButtons_hmd;

	[Token(Token = "0x4001972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hmd_connected;

	[Token(Token = "0x4001973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<EControllerButtons> DominantButtons;

	[Token(Token = "0x4001974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_InputAttribute_t[] inputAttributes_Dominant;

	[Token(Token = "0x4001975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private List<WVR_InputId> usableButtons_dominant;

	[Token(Token = "0x4001976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool dominant_connected;

	[Token(Token = "0x4001977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public List<EControllerButtons> NonDominantButtons;

	[Token(Token = "0x4001978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private WVR_InputAttribute_t[] inputAttributes_NonDominant;

	[Token(Token = "0x4001979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private List<WVR_InputId> usableButtons_nonDominant;

	[Token(Token = "0x400197A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool nodomint_connected;

	[Token(Token = "0x400197B")]
	private const uint inputTableSize = 32u;

	[Token(Token = "0x400197C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_InputMappingPair_t[] inputTable;

	[Token(Token = "0x400197D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InputMappingPair_t inputPair;

	[Token(Token = "0x400197E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_ButtonList instance;

	[Token(Token = "0x17000093")]
	public static WaveVR_ButtonList Instance
	{
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x24F773C", Offset = "0x24F773C", VA = "0x24F773C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001171")]
	[Address(RVA = "0x24FF1F0", Offset = "0x24FF1F0", VA = "0x24FF1F0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6001172")]
	[Address(RVA = "0x24FF2BC", Offset = "0x24FF2BC", VA = "0x24FF2BC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001173")]
	[Address(RVA = "0x24FF388", Offset = "0x24FF388", VA = "0x24FF388")]
	private List<EButtons> ToEButtons(List<EHmdButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x6001174")]
	[Address(RVA = "0x24FF51C", Offset = "0x24FF51C", VA = "0x24FF51C")]
	private List<EButtons> ToEButtons(List<EControllerButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x6001176")]
	[Address(RVA = "0x24FF6B0", Offset = "0x24FF6B0", VA = "0x24FF6B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x24FF7C8", Offset = "0x24FF7C8", VA = "0x24FF7C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x24FF8B4", Offset = "0x24FF8B4", VA = "0x24FF8B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x24F77C8", Offset = "0x24F77C8", VA = "0x24F77C8")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref WVR_InputId destination)
	{
		return default(bool);
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x24FFA44", Offset = "0x24FFA44", VA = "0x24FFA44")]
	private void setupButtonAttributes(WaveVR_Controller.EDeviceType device, List<EButtons> buttons, WVR_InputAttribute_t[] inputAttributes, int count)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x250031C", Offset = "0x250031C", VA = "0x250031C")]
	private void createHmdRequestAttributes()
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x250044C", Offset = "0x250044C", VA = "0x250044C")]
	private void createDominantRequestAttributes()
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x250051C", Offset = "0x250051C", VA = "0x250051C")]
	private void createNonDominantRequestAttributes()
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x25005EC", Offset = "0x25005EC", VA = "0x25005EC")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x25005F0", Offset = "0x25005F0", VA = "0x25005F0")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x25006A8", Offset = "0x25006A8", VA = "0x25006A8")]
	private void SetHmdInputRequest()
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x2501084", Offset = "0x2501084", VA = "0x2501084")]
	private void SetDominantInputRequest()
	{
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x2501A60", Offset = "0x2501A60", VA = "0x2501A60")]
	private void SetNonDominantInputRequest()
	{
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x250243C", Offset = "0x250243C", VA = "0x250243C")]
	private void ResetInputRequest(WaveVR_Controller.EDeviceType device)
	{
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x2502524", Offset = "0x2502524", VA = "0x2502524")]
	public void SetupHmdButtonList(List<EHmdButtons> list)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x2502598", Offset = "0x2502598", VA = "0x2502598")]
	public void SetupControllerButtonList(WaveVR_Controller.EDeviceType device, List<EControllerButtons> list)
	{
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x24FF830", Offset = "0x24FF830", VA = "0x24FF830")]
	public void ResetAllInputRequest()
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x2502664", Offset = "0x2502664", VA = "0x2502664")]
	public WaveVR_ButtonList()
	{
	}
}
[Token(Token = "0x200021D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C163C", Offset = "0x5C163C")]
public class WaveVR_Camera : MonoBehaviour, IEquatable<Camera>
{
	[Token(Token = "0x2000578")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x4002A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int antialiasing;

		[Token(Token = "0x4002A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint textureId;

		[Token(Token = "0x4002A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint depthId;

		[Token(Token = "0x6002689")]
		[Address(RVA = "0x25053E0", Offset = "0x25053E0", VA = "0x25053E0")]
		public static void IssueUpdateConfig(RenderThreadSyncObject syncObj, uint textureId, uint depthId, int antialiasing)
		{
		}

		[Token(Token = "0x600268A")]
		[Address(RVA = "0x2506B98", Offset = "0x2506B98", VA = "0x2506B98")]
		public static void ReceiveBeforeOpaque(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600268B")]
		[Address(RVA = "0x2506FD0", Offset = "0x2506FD0", VA = "0x2506FD0")]
		public static void ReceiveUpdateConfig(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600268C")]
		[Address(RVA = "0x25071FC", Offset = "0x25071FC", VA = "0x25071FC")]
		public void CopyTo(RenderThreadContext dest)
		{
		}

		[Token(Token = "0x600268D")]
		[Address(RVA = "0x2506B90", Offset = "0x2506B90", VA = "0x2506B90")]
		public RenderThreadContext()
		{
		}
	}

	[Token(Token = "0x400197F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x4001980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WVR_Eye eye;

	[Token(Token = "0x4001981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Camera cam;

	[Token(Token = "0x4001982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly RenderThreadContext contextRTOnly;

	[Token(Token = "0x4001983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly RenderThreadSyncObject RTSOBeforeOpaque;

	[Token(Token = "0x4001984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly RenderThreadSyncObject RTSOUpdateConfig;

	[Token(Token = "0x4001985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private Matrix4x4 unity_SingleCullMatrixP;

	[Token(Token = "0x4001986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private readonly Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x4001987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private readonly Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x4001988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private readonly Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x4001989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x400198A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private readonly Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x400198B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly Vector4[] eyesOffset;

	[Token(Token = "0x400198C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private readonly Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x400198D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Matrix4x4[] eyesOffsetMatrixInv;

	[Token(Token = "0x400198E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private readonly Matrix4x4[] skybox_MatrixVP;

	[Token(Token = "0x400198F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Vector4[] unity_StereoScaleOffset;

	[Token(Token = "0x4001990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private readonly Vector4[] stereoWorldSpaceCameraPos;

	[Token(Token = "0x4001991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CommandBuffer cmdBufBeforeForwardOpaque;

	[Token(Token = "0x4001992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private CommandBuffer cmdBufBeforeSkybox;

	[Token(Token = "0x4001993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CommandBuffer cmdBufAfterSkybox;

	[Token(Token = "0x4001994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool needInitPropertyId;

	[Token(Token = "0x4001995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int id_unity_StereoCameraProjection;

	[Token(Token = "0x4001996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int id_unity_StereoCameraInvProjection;

	[Token(Token = "0x4001997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int id_unity_StereoMatrixP;

	[Token(Token = "0x4001998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int id_unity_StereoCameraToWorld;

	[Token(Token = "0x4001999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int id_unity_StereoWorldToCamera;

	[Token(Token = "0x400199A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int id_unity_StereoWorldSpaceCameraPos;

	[Token(Token = "0x400199B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int id_unity_StereoMatrixV;

	[Token(Token = "0x400199C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int id_unity_StereoMatrixInvV;

	[Token(Token = "0x400199D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private int id_unity_StereoMatrixVP;

	[Token(Token = "0x400199E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int id_unity_StereoScaleOffset;

	[Token(Token = "0x6001189")]
	[Address(RVA = "0x250283C", Offset = "0x250283C", VA = "0x250283C")]
	private void Start()
	{
	}

	[Token(Token = "0x600118A")]
	[Address(RVA = "0x25028A4", Offset = "0x25028A4", VA = "0x25028A4")]
	public Camera GetCamera()
	{
		return null;
	}

	[Token(Token = "0x600118B")]
	[Address(RVA = "0x2502958", Offset = "0x2502958", VA = "0x2502958")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CE188", Offset = "0x5CE188")]
	public Camera getCamera()
	{
		return null;
	}

	[Token(Token = "0x600118C")]
	[Address(RVA = "0x2502A0C", Offset = "0x2502A0C", VA = "0x2502A0C", Slot = "4")]
	public bool Equals(Camera other)
	{
		return default(bool);
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x2502A9C", Offset = "0x2502A9C", VA = "0x2502A9C")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x250342C", Offset = "0x250342C", VA = "0x250342C")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x2503468", Offset = "0x2503468", VA = "0x2503468")]
	private void SetStereoViewAndCullingMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x25037B4", Offset = "0x25037B4", VA = "0x25037B4")]
	private void DebugLogMatrix(ref Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x2504784", Offset = "0x2504784", VA = "0x2504784")]
	private void PrepareCommandBuffers()
	{
	}

	[Token(Token = "0x6001192")]
	[Address(RVA = "0x2502AAC", Offset = "0x2502AAC", VA = "0x2502AAC")]
	private void SinglePassPreRender()
	{
	}

	[Token(Token = "0x6001193")]
	[Address(RVA = "0x250343C", Offset = "0x250343C", VA = "0x250343C")]
	private void SinglePassPostRender()
	{
	}

	[Token(Token = "0x6001194")]
	[Address(RVA = "0x25055E4", Offset = "0x25055E4", VA = "0x25055E4")]
	public void SetEyesPosition(Vector3 left, Vector3 right)
	{
	}

	[Token(Token = "0x6001195")]
	[Address(RVA = "0x2505AB4", Offset = "0x2505AB4", VA = "0x2505AB4")]
	public void SetStereoCullingMatrix()
	{
	}

	[Token(Token = "0x6001196")]
	[Address(RVA = "0x2505D84", Offset = "0x2505D84", VA = "0x2505D84")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right, Matrix4x4 cull)
	{
	}

	[Token(Token = "0x6001197")]
	[Address(RVA = "0x2504FDC", Offset = "0x2504FDC", VA = "0x2504FDC")]
	private static void M4Multiply(ref Matrix4x4 mout, ref Matrix4x4 lhs, ref Matrix4x4 rhs)
	{
	}

	[Token(Token = "0x6001198")]
	[Address(RVA = "0x25055A0", Offset = "0x25055A0", VA = "0x25055A0")]
	private static void V4Add(ref Vector4 vout, ref Vector4 lhs, ref Vector4 rhs)
	{
	}

	[Token(Token = "0x6001199")]
	[Address(RVA = "0x25061B4", Offset = "0x25061B4", VA = "0x25061B4")]
	public WaveVR_Camera()
	{
	}
}
[Token(Token = "0x200021E")]
public class WaveVR_CameraTexture
{
	[Token(Token = "0x2000579")]
	public delegate void UpdateCameraCompleted(uint nativeTextureId);

	[Token(Token = "0x200057A")]
	public delegate void StartCameraCompleted(bool result);

	[Token(Token = "0x400199F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40019A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private WVR_CameraInfo_t camerainfo;

	[Token(Token = "0x40019A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool mStarted;

	[Token(Token = "0x40019A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint nativeTextureId;

	[Token(Token = "0x40019A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float spentTime;

	[Token(Token = "0x40019A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static WaveVR_CameraTexture mInstance;

	[Token(Token = "0x17000094")]
	public bool isStarted
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x2507264", Offset = "0x2507264", VA = "0x2507264")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000095")]
	public static WaveVR_CameraTexture instance
	{
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x25078BC", Offset = "0x25078BC", VA = "0x25078BC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000011")]
	public static event UpdateCameraCompleted UpdateCameraCompletedDelegate
	{
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x250726C", Offset = "0x250726C", VA = "0x250726C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE1D0", Offset = "0x5CE1D0")]
		add
		{
		}
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x2507400", Offset = "0x2507400", VA = "0x2507400")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE1E0", Offset = "0x5CE1E0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public static event StartCameraCompleted StartCameraCompletedDelegate
	{
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x2507594", Offset = "0x2507594", VA = "0x2507594")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE1F0", Offset = "0x5CE1F0")]
		add
		{
		}
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x2507728", Offset = "0x2507728", VA = "0x2507728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE200", Offset = "0x5CE200")]
		remove
		{
		}
	}

	[Token(Token = "0x60011A1")]
	[Address(RVA = "0x2507A10", Offset = "0x2507A10", VA = "0x2507A10")]
	private void OnStartCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x60011A2")]
	[Address(RVA = "0x2508454", Offset = "0x2508454", VA = "0x2508454")]
	private void OnUpdateCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x60011A3")]
	[Address(RVA = "0x2508D2C", Offset = "0x2508D2C", VA = "0x2508D2C")]
	public uint getNativeTextureId()
	{
		return default(uint);
	}

	[Token(Token = "0x60011A4")]
	[Address(RVA = "0x2508D40", Offset = "0x2508D40", VA = "0x2508D40")]
	public bool startCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x60011A5")]
	[Address(RVA = "0x2508EAC", Offset = "0x2508EAC", VA = "0x2508EAC")]
	public WVR_CameraImageType GetCameraImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x60011A6")]
	[Address(RVA = "0x2508EB4", Offset = "0x2508EB4", VA = "0x2508EB4")]
	public WVR_CameraImageFormat GetCameraImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x60011A7")]
	[Address(RVA = "0x2508EC8", Offset = "0x2508EC8", VA = "0x2508EC8")]
	public uint GetCameraImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x2508EDC", Offset = "0x2508EDC", VA = "0x2508EDC")]
	public uint GetCameraImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x2508EF0", Offset = "0x2508EF0", VA = "0x2508EF0")]
	public void stopCamera()
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x250905C", Offset = "0x250905C", VA = "0x250905C")]
	public void updateTexture(uint textureId)
	{
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x25079E8", Offset = "0x25079E8", VA = "0x25079E8")]
	public WaveVR_CameraTexture()
	{
	}
}
[Token(Token = "0x200021F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C16B4", Offset = "0x5C16B4")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C16B4", Offset = "0x5C16B4")]
public class WaveVR_CanvasEye : MonoBehaviour
{
	[Token(Token = "0x40019A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Canvas canvas;

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x2509400", Offset = "0x2509400", VA = "0x2509400")]
	private void Start()
	{
	}

	[Token(Token = "0x60011AE")]
	[Address(RVA = "0x250948C", Offset = "0x250948C", VA = "0x250948C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011AF")]
	[Address(RVA = "0x2509684", Offset = "0x2509684", VA = "0x2509684")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011B0")]
	[Address(RVA = "0x250987C", Offset = "0x250987C", VA = "0x250987C")]
	private void MyRenderEye(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x60011B1")]
	[Address(RVA = "0x25098FC", Offset = "0x25098FC", VA = "0x25098FC")]
	public WaveVR_CanvasEye()
	{
	}
}
[Token(Token = "0x2000220")]
public class WaveVR_Controller
{
	[Token(Token = "0x200057B")]
	public enum EDeviceType
	{
		[Token(Token = "0x4002A2B")]
		Head = 1,
		[Token(Token = "0x4002A2C")]
		Dominant,
		[Token(Token = "0x4002A2D")]
		NonDominant
	}

	[Token(Token = "0x200057C")]
	public class Device
	{
		[Token(Token = "0x4002A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WVR_InputId[] pressIds;

		[Token(Token = "0x4002A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int[] prevFrameCount_press;

		[Token(Token = "0x4002A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool[] state_press;

		[Token(Token = "0x4002A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool[] prevState_press;

		[Token(Token = "0x4002A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool[] event_state_press;

		[Token(Token = "0x4002A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static WVR_InputId[] touchIds;

		[Token(Token = "0x4002A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[] prevFrameCount_touch;

		[Token(Token = "0x4002A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool[] state_touch;

		[Token(Token = "0x4002A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] prevState_touch;

		[Token(Token = "0x4002A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool[] event_state_touch;

		[Token(Token = "0x4002A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABB8", Offset = "0x5CABB8")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x4002A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int prevFrame_connected;

		[Token(Token = "0x4002A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal bool _connected;

		[Token(Token = "0x4002A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int prevFrame_pose;

		[Token(Token = "0x4002A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x4002A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x4002A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		internal WVR_Vector3f_t vel;

		[Token(Token = "0x4002A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal WVR_Vector3f_t aVel;

		[Token(Token = "0x4002A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x170002F6")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0x2494554", Offset = "0x2494554", VA = "0x2494554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A7C", Offset = "0x5D3A7C")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x600269C")]
			[Address(RVA = "0x2493C04", Offset = "0x2493C04", VA = "0x2493C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A8C", Offset = "0x5D3A8C")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		public bool connected
		{
			[Token(Token = "0x600269E")]
			[Address(RVA = "0x2494E50", Offset = "0x2494E50", VA = "0x2494E50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600269F")]
			[Address(RVA = "0x2494E8C", Offset = "0x2494E8C", VA = "0x2494E8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002F8")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60026A1")]
			[Address(RVA = "0x24951B0", Offset = "0x24951B0", VA = "0x24951B0")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170002F9")]
		public WVR_Vector3f_t velocity
		{
			[Token(Token = "0x60026A2")]
			[Address(RVA = "0x249540C", Offset = "0x249540C", VA = "0x249540C")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x170002FA")]
		public WVR_Vector3f_t AngularVelocity
		{
			[Token(Token = "0x60026A3")]
			[Address(RVA = "0x2495638", Offset = "0x2495638", VA = "0x2495638")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x6002696")]
		[Address(RVA = "0x2493848", Offset = "0x2493848", VA = "0x2493848")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x6002697")]
		[Address(RVA = "0x2493FCC", Offset = "0x2493FCC", VA = "0x2493FCC")]
		public void SetEventState_Press(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x6002698")]
		[Address(RVA = "0x249455C", Offset = "0x249455C", VA = "0x249455C")]
		public bool GetEventState_Press(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6002699")]
		[Address(RVA = "0x24946F4", Offset = "0x24946F4", VA = "0x24946F4")]
		public void SetEventState_Touch(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x600269A")]
		[Address(RVA = "0x2494C7C", Offset = "0x2494C7C", VA = "0x2494C7C")]
		public bool GetEventState_Touch(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600269D")]
		[Address(RVA = "0x2494E14", Offset = "0x2494E14", VA = "0x2494E14")]
		private bool AllowGetConnectionState()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A0")]
		[Address(RVA = "0x2495168", Offset = "0x2495168", VA = "0x2495168")]
		private bool AllowGetPoseState()
		{
			return default(bool);
		}

		[Token(Token = "0x60026A4")]
		[Address(RVA = "0x2495864", Offset = "0x2495864", VA = "0x2495864")]
		private bool AllowPressActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A5")]
		[Address(RVA = "0x2495A58", Offset = "0x2495A58", VA = "0x2495A58")]
		private bool AllowTouchActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026A6")]
		[Address(RVA = "0x2495C4C", Offset = "0x2495C4C", VA = "0x2495C4C")]
		private void Update_PressState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x60026A7")]
		[Address(RVA = "0x2495E80", Offset = "0x2495E80", VA = "0x2495E80")]
		private void Update_TouchState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x60026A8")]
		[Address(RVA = "0x2493C0C", Offset = "0x2493C0C", VA = "0x2493C0C")]
		public void ResetAllButtonStates()
		{
		}

		[Token(Token = "0x60026A9")]
		[Address(RVA = "0x24960B4", Offset = "0x24960B4", VA = "0x24960B4")]
		public void ResetButtonEvents()
		{
		}

		[Token(Token = "0x60026AA")]
		[Address(RVA = "0x249631C", Offset = "0x249631C", VA = "0x249631C")]
		public void UpdateButtonEvents()
		{
		}

		[Token(Token = "0x60026AB")]
		[Address(RVA = "0x2496C1C", Offset = "0x2496C1C", VA = "0x2496C1C")]
		public bool GetPress(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AC")]
		[Address(RVA = "0x2496C20", Offset = "0x2496C20", VA = "0x2496C20")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AD")]
		[Address(RVA = "0x2496DC8", Offset = "0x2496DC8", VA = "0x2496DC8")]
		public bool GetPressDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AE")]
		[Address(RVA = "0x2496DCC", Offset = "0x2496DCC", VA = "0x2496DCC")]
		public bool GetPressDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026AF")]
		[Address(RVA = "0x2496FB8", Offset = "0x2496FB8", VA = "0x2496FB8")]
		public bool GetPressUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B0")]
		[Address(RVA = "0x2496FBC", Offset = "0x2496FBC", VA = "0x2496FBC")]
		public bool GetPressUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B1")]
		[Address(RVA = "0x24971AC", Offset = "0x24971AC", VA = "0x24971AC")]
		public bool GetTouch(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B2")]
		[Address(RVA = "0x24971B0", Offset = "0x24971B0", VA = "0x24971B0")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B3")]
		[Address(RVA = "0x2497358", Offset = "0x2497358", VA = "0x2497358")]
		public bool GetTouchDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B4")]
		[Address(RVA = "0x249735C", Offset = "0x249735C", VA = "0x249735C")]
		public bool GetTouchDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B5")]
		[Address(RVA = "0x2497548", Offset = "0x2497548", VA = "0x2497548")]
		public bool GetTouchUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B6")]
		[Address(RVA = "0x249754C", Offset = "0x249754C", VA = "0x249754C")]
		public bool GetTouchUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026B7")]
		[Address(RVA = "0x249773C", Offset = "0x249773C", VA = "0x249773C")]
		public Vector2 GetAxis(WaveVR_ButtonList.EButtons btn)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60026B8")]
		[Address(RVA = "0x249774C", Offset = "0x249774C", VA = "0x249774C")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60026B9")]
		[Address(RVA = "0x2497A14", Offset = "0x2497A14", VA = "0x2497A14")]
		public void TriggerHapticPulse(uint _durationMicroSec = 1000000u, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x40019A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40019A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static bool isLeftHanded;

	[Token(Token = "0x40019AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static EDeviceType[] DeviceTypes;

	[Token(Token = "0x40019AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Device[] devices;

	[Token(Token = "0x17000096")]
	public static bool IsLeftHanded
	{
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x24EBE7C", Offset = "0x24EBE7C", VA = "0x24EBE7C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011B3")]
	[Address(RVA = "0x24EF2B8", Offset = "0x24EF2B8", VA = "0x24EF2B8")]
	public static void SetLeftHandedMode(bool lefthanded)
	{
	}

	[Token(Token = "0x60011B4")]
	[Address(RVA = "0x2509904", Offset = "0x2509904", VA = "0x2509904")]
	public static EDeviceType GetEDeviceByWVRType(WVR_DeviceType type)
	{
		return default(EDeviceType);
	}

	[Token(Token = "0x60011B5")]
	[Address(RVA = "0x24EF3B4", Offset = "0x24EF3B4", VA = "0x24EF3B4")]
	public static Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60011B6")]
	[Address(RVA = "0x24EB410", Offset = "0x24EB410", VA = "0x24EB410")]
	public static Device Input(EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60011B7")]
	[Address(RVA = "0x2509A14", Offset = "0x2509A14", VA = "0x2509A14")]
	private static Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x2509F9C", Offset = "0x2509F9C", VA = "0x2509F9C")]
	public WaveVR_Controller()
	{
	}
}
[Token(Token = "0x2000221")]
public enum ERaycastStartPoint
{
	[Token(Token = "0x40019AD")]
	CenterOfEyes,
	[Token(Token = "0x40019AE")]
	LeftEye,
	[Token(Token = "0x40019AF")]
	RightEye
}
[Token(Token = "0x2000222")]
public class WaveVR_ControllerInputModule : BaseInputModule
{
	[Token(Token = "0x200057D")]
	public enum ERaycastMode
	{
		[Token(Token = "0x4002A42")]
		Beam,
		[Token(Token = "0x4002A43")]
		Fixed,
		[Token(Token = "0x4002A44")]
		Mouse
	}

	[Serializable]
	[Token(Token = "0x200057E")]
	public class CBeamConfig
	{
		[Token(Token = "0x4002A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float StartWidth;

		[Token(Token = "0x4002A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float EndWidth;

		[Token(Token = "0x4002A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float StartOffset;

		[Token(Token = "0x4002A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float EndOffset;

		[Token(Token = "0x4002A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32 StartColor;

		[Token(Token = "0x4002A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Color32 EndColor;

		[Token(Token = "0x60026BB")]
		[Address(RVA = "0x24A6940", Offset = "0x24A6940", VA = "0x24A6940")]
		public void assignedTo(CBeamConfig src)
		{
		}

		[Token(Token = "0x60026BC")]
		[Address(RVA = "0x24A6864", Offset = "0x24A6864", VA = "0x24A6864")]
		public CBeamConfig()
		{
		}
	}

	[Token(Token = "0x200057F")]
	public class RaycastModeSetting
	{
		[Token(Token = "0x4002A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABC8", Offset = "0x5CABC8")]
		private ERaycastMode <Mode>k__BackingField;

		[Token(Token = "0x4002A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABD8", Offset = "0x5CABD8")]
		private CBeamConfig <Config>k__BackingField;

		[Token(Token = "0x170002FB")]
		public ERaycastMode Mode
		{
			[Token(Token = "0x60026BD")]
			[Address(RVA = "0x24A6A04", Offset = "0x24A6A04", VA = "0x24A6A04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3A9C", Offset = "0x5D3A9C")]
			get
			{
				return default(ERaycastMode);
			}
			[Token(Token = "0x60026BE")]
			[Address(RVA = "0x24A6A44", Offset = "0x24A6A44", VA = "0x24A6A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3AAC", Offset = "0x5D3AAC")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public CBeamConfig Config
		{
			[Token(Token = "0x60026BF")]
			[Address(RVA = "0x24A6A0C", Offset = "0x24A6A0C", VA = "0x24A6A0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3ABC", Offset = "0x5D3ABC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C0")]
			[Address(RVA = "0x24A6A4C", Offset = "0x24A6A4C", VA = "0x24A6A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3ACC", Offset = "0x5D3ACC")]
			set
			{
			}
		}

		[Token(Token = "0x60026C1")]
		[Address(RVA = "0x24A6A1C", Offset = "0x24A6A1C", VA = "0x24A6A1C")]
		public RaycastModeSetting(ERaycastMode mode, CBeamConfig config)
		{
		}
	}

	[Token(Token = "0x2000580")]
	public class EventController
	{
		[Token(Token = "0x4002A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABE8", Offset = "0x5CABE8")]
		private WaveVR_Controller.EDeviceType <device>k__BackingField;

		[Token(Token = "0x4002A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CABF8", Offset = "0x5CABF8")]
		private GameObject <controller>k__BackingField;

		[Token(Token = "0x4002A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC08", Offset = "0x5CAC08")]
		private GameObject <prevRaycastedObject>k__BackingField;

		[Token(Token = "0x4002A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC18", Offset = "0x5CAC18")]
		private PointerEventData <event_data>k__BackingField;

		[Token(Token = "0x4002A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC28", Offset = "0x5CAC28")]
		private WaveVR_ControllerPointer <pointer>k__BackingField;

		[Token(Token = "0x4002A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC38", Offset = "0x5CAC38")]
		private bool <pointerEnabled>k__BackingField;

		[Token(Token = "0x4002A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC48", Offset = "0x5CAC48")]
		private WaveVR_Beam <beam>k__BackingField;

		[Token(Token = "0x4002A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC58", Offset = "0x5CAC58")]
		private bool <beamEnabled>k__BackingField;

		[Token(Token = "0x4002A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<RaycastModeSetting> raycastModeSettings;

		[Token(Token = "0x4002A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC68", Offset = "0x5CAC68")]
		private bool <eligibleForButtonClick>k__BackingField;

		[Token(Token = "0x170002FD")]
		public WaveVR_Controller.EDeviceType device
		{
			[Token(Token = "0x60026C2")]
			[Address(RVA = "0x2497F0C", Offset = "0x2497F0C", VA = "0x2497F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3ADC", Offset = "0x5D3ADC")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x60026C3")]
			[Address(RVA = "0x24A69FC", Offset = "0x24A69FC", VA = "0x24A69FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3AEC", Offset = "0x5D3AEC")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public GameObject controller
		{
			[Token(Token = "0x60026C4")]
			[Address(RVA = "0x2498398", Offset = "0x2498398", VA = "0x2498398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3AFC", Offset = "0x5D3AFC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C5")]
			[Address(RVA = "0x2498F6C", Offset = "0x2498F6C", VA = "0x2498F6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B0C", Offset = "0x5D3B0C")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public GameObject prevRaycastedObject
		{
			[Token(Token = "0x60026C6")]
			[Address(RVA = "0x24A1DE8", Offset = "0x24A1DE8", VA = "0x24A1DE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B1C", Offset = "0x5D3B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C7")]
			[Address(RVA = "0x249E7A8", Offset = "0x249E7A8", VA = "0x249E7A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B2C", Offset = "0x5D3B2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public PointerEventData event_data
		{
			[Token(Token = "0x60026C8")]
			[Address(RVA = "0x2497F04", Offset = "0x2497F04", VA = "0x2497F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B3C", Offset = "0x5D3B3C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026C9")]
			[Address(RVA = "0x24A5EF0", Offset = "0x24A5EF0", VA = "0x24A5EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B4C", Offset = "0x5D3B4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public WaveVR_ControllerPointer pointer
		{
			[Token(Token = "0x60026CA")]
			[Address(RVA = "0x249A1F8", Offset = "0x249A1F8", VA = "0x249A1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B5C", Offset = "0x5D3B5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026CB")]
			[Address(RVA = "0x249A1F0", Offset = "0x249A1F0", VA = "0x249A1F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B6C", Offset = "0x5D3B6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public bool pointerEnabled
		{
			[Token(Token = "0x60026CC")]
			[Address(RVA = "0x24A5EF8", Offset = "0x24A5EF8", VA = "0x24A5EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B7C", Offset = "0x5D3B7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026CD")]
			[Address(RVA = "0x24A5F00", Offset = "0x24A5F00", VA = "0x24A5F00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B8C", Offset = "0x5D3B8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public WaveVR_Beam beam
		{
			[Token(Token = "0x60026CE")]
			[Address(RVA = "0x24990C8", Offset = "0x24990C8", VA = "0x24990C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3B9C", Offset = "0x5D3B9C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60026CF")]
			[Address(RVA = "0x24990C0", Offset = "0x24990C0", VA = "0x24990C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BAC", Offset = "0x5D3BAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public bool beamEnabled
		{
			[Token(Token = "0x60026D0")]
			[Address(RVA = "0x24A5F08", Offset = "0x24A5F08", VA = "0x24A5F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BBC", Offset = "0x5D3BBC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026D1")]
			[Address(RVA = "0x24A5F10", Offset = "0x24A5F10", VA = "0x24A5F10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BCC", Offset = "0x5D3BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public bool eligibleForButtonClick
		{
			[Token(Token = "0x60026D4")]
			[Address(RVA = "0x24A6A14", Offset = "0x24A6A14", VA = "0x24A6A14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BDC", Offset = "0x5D3BDC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026D5")]
			[Address(RVA = "0x24A1EAC", Offset = "0x24A1EAC", VA = "0x24A1EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BEC", Offset = "0x5D3BEC")]
			set
			{
			}
		}

		[Token(Token = "0x60026D2")]
		[Address(RVA = "0x2498F74", Offset = "0x2498F74", VA = "0x2498F74")]
		public void SetBeamConfig(ERaycastMode mode, CBeamConfig config)
		{
		}

		[Token(Token = "0x60026D3")]
		[Address(RVA = "0x249A308", Offset = "0x249A308", VA = "0x249A308")]
		public CBeamConfig GetBeamConfig(ERaycastMode mode)
		{
			return null;
		}

		[Token(Token = "0x60026D6")]
		[Address(RVA = "0x249C4E8", Offset = "0x249C4E8", VA = "0x249C4E8")]
		public EventController(WaveVR_Controller.EDeviceType type)
		{
		}
	}

	[Token(Token = "0x40019B0")]
	private const string LOG_TAG = "WaveVR_ControllerInputModule";

	[Token(Token = "0x40019B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ERaycastMode[] RaycastModes;

	[Token(Token = "0x40019B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C66E4", Offset = "0x5C66E4")]
	public bool UnityMouseMode;

	[Token(Token = "0x40019B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool DomintEventEnabled;

	[Token(Token = "0x40019B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject DominantController;

	[Token(Token = "0x40019B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask DominantRaycastMask;

	[Token(Token = "0x40019B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool NoDomtEventEnabled;

	[Token(Token = "0x40019B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public GameObject NonDominantController;

	[Token(Token = "0x40019B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask NonDominantRaycastMask;

	[Token(Token = "0x40019B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

	[Token(Token = "0x40019BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject Head;

	[Token(Token = "0x40019BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C66F4", Offset = "0x5C66F4")]
	public ERaycastMode RaycastMode;

	[Token(Token = "0x40019BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C6704", Offset = "0x5C6704")]
	public ERaycastStartPoint RaycastStartPoint;

	[Token(Token = "0x40019BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6714", Offset = "0x5C6714")]
	public string CanvasTag;

	[Token(Token = "0x40019BE")]
	private const float CLICK_TIME = 0.2f;

	[Token(Token = "0x40019BF")]
	private const float DRAG_TIME = 0.2f;

	[Token(Token = "0x40019C0")]
	private const float raycastStartPointOffset = 0.0315f;

	[Token(Token = "0x40019C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject pointCameraNoDomt;

	[Token(Token = "0x40019C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private GameObject pointCameraDomint;

	[Token(Token = "0x40019C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float FixedBeamLength;

	[Token(Token = "0x40019C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float lengthFromBeamToPointer;

	[Token(Token = "0x40019C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32 FlexiblePointerColor;

	[Token(Token = "0x40019C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private ERaycastMode preRaycastMode;

	[Token(Token = "0x40019C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool toChangeBeamPointer;

	[Token(Token = "0x40019C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 DomintIntersectPos_prev;

	[Token(Token = "0x40019C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 NoDomtIntersectPos_prev;

	[Token(Token = "0x40019CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	private bool mForceModuleActive;

	[Token(Token = "0x40019CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CBeamConfig mouseBeamConfig;

	[Token(Token = "0x40019CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private CBeamConfig fixedBeamConfig;

	[Token(Token = "0x40019CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CBeamConfig flexibleBeamConfig;

	[Token(Token = "0x40019CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private List<EventController> EventControllers;

	[Token(Token = "0x40019CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool enableControllerInputModule;

	[Token(Token = "0x40019D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private List<RaycastResult> physicsRaycastResults;

	[Token(Token = "0x40019D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<RaycastResult> graphicRaycastResults;

	[Token(Token = "0x40019D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector2 centerOfScreen;

	[Token(Token = "0x17000097")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x2497C08", Offset = "0x2497C08", VA = "0x2497C08")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x2497C10", Offset = "0x2497C10", VA = "0x2497C10")]
		set
		{
		}
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x2497B34", Offset = "0x2497B34", VA = "0x2497B34")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x2497C18", Offset = "0x2497C18", VA = "0x2497C18", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x2497C20", Offset = "0x2497C20", VA = "0x2497C20", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x2497C44", Offset = "0x2497C44", VA = "0x2497C44", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x2497DEC", Offset = "0x2497DEC", VA = "0x2497DEC")]
	private EventController GetEventController(WaveVR_Controller.EDeviceType dt)
	{
		return null;
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x2497F14", Offset = "0x2497F14", VA = "0x2497F14")]
	private void SetControllerModel()
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x24983A0", Offset = "0x24983A0", VA = "0x24983A0")]
	private void SetupEventController(EventController eventController, GameObject controller_model, LayerMask mask)
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x24990D0", Offset = "0x24990D0", VA = "0x24990D0")]
	private void SetupEventControllerBeam(EventController eventController, Vector3 intersectionPosition, bool updateRaycastConfig = false)
	{
	}

	[Token(Token = "0x60011C4")]
	[Address(RVA = "0x249A438", Offset = "0x249A438", VA = "0x249A438")]
	private void SetupEventControllerPointer(EventController eventController, Camera eventCamera, Vector3 intersectionPosition)
	{
	}

	[Token(Token = "0x60011C5")]
	[Address(RVA = "0x249A200", Offset = "0x249A200", VA = "0x249A200")]
	private void SetupEventControllerPointer(EventController eventController)
	{
	}

	[Token(Token = "0x60011C6")]
	[Address(RVA = "0x249AE10", Offset = "0x249AE10", VA = "0x249AE10")]
	public void ChangeBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x60011C7")]
	[Address(RVA = "0x249AF28", Offset = "0x249AF28", VA = "0x249AF28")]
	private void SetupPointerCamera(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x60011C8")]
	[Address(RVA = "0x249C0CC", Offset = "0x249C0CC", VA = "0x249C0CC", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x249C72C", Offset = "0x249C72C", VA = "0x249C72C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x249C92C", Offset = "0x249C92C", VA = "0x249C92C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x24A2C1C", Offset = "0x24A2C1C", VA = "0x24A2C1C")]
	private void OnTriggerDown(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x24A36C4", Offset = "0x24A36C4", VA = "0x24A36C4")]
	private void OnTriggerUp(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x24A4190", Offset = "0x24A4190", VA = "0x24A4190")]
	private void OnTriggerUpMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x24A1EB4", Offset = "0x24A1EB4", VA = "0x24A1EB4")]
	private void OnDrag(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011CF")]
	[Address(RVA = "0x24A2768", Offset = "0x24A2768", VA = "0x24A2768")]
	private void OnDragMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011D0")]
	[Address(RVA = "0x24A1DF0", Offset = "0x24A1DF0", VA = "0x24A1DF0")]
	private void OnTriggerHover(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011D1")]
	[Address(RVA = "0x24A1538", Offset = "0x24A1538", VA = "0x24A1538")]
	private void OnTriggerEnterAndExit(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x24A5920", Offset = "0x24A5920", VA = "0x24A5920")]
	private void onButtonClick(EventController event_controller)
	{
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x24A07FC", Offset = "0x24A07FC", VA = "0x24A07FC")]
	private void PhysicsRaycast(EventController event_controller, PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x249EAA8", Offset = "0x249EAA8", VA = "0x249EAA8")]
	private void GraphicRaycast(EventController event_controller, Camera event_camera)
	{
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x249E9A4", Offset = "0x249E9A4", VA = "0x249E9A4")]
	private void ResetPointerEventData(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x249E7B0", Offset = "0x249E7B0", VA = "0x249E7B0")]
	private void ResetPointerEventData_Hybrid(WaveVR_Controller.EDeviceType type, Camera eventCam)
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x24A51E8", Offset = "0x24A51E8", VA = "0x24A51E8")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x249AD84", Offset = "0x249AD84", VA = "0x249AD84")]
	private GameObject GetRaycastedObject(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60011D9")]
	[Address(RVA = "0x249E1B0", Offset = "0x249E1B0", VA = "0x249E1B0")]
	private void CheckBeamPointerActive(EventController eventController)
	{
	}

	[Token(Token = "0x60011DA")]
	[Address(RVA = "0x24A53F8", Offset = "0x24A53F8", VA = "0x24A53F8")]
	private void SetPointerCameraTracker()
	{
	}

	[Token(Token = "0x60011DB")]
	[Address(RVA = "0x24A5F18", Offset = "0x24A5F18", VA = "0x24A5F18")]
	private GameObject[] MergeArray(GameObject[] start, GameObject[] end)
	{
		return null;
	}

	[Token(Token = "0x60011DC")]
	[Address(RVA = "0x24A62A4", Offset = "0x24A62A4", VA = "0x24A62A4")]
	public WaveVR_ControllerInputModule()
	{
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C1754", Offset = "0x5C1754")]
public class WaveVR_ControllerListener : MonoBehaviour
{
	[Token(Token = "0x2000581")]
	public class Device
	{
		[Token(Token = "0x20006EF")]
		public delegate void ButtonEventHandler();

		[Token(Token = "0x20006F0")]
		public delegate void ConnectionEventHandler(bool value);

		[Token(Token = "0x20006F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C363C", Offset = "0x5C363C")]
		private sealed class <PollingConnectionStatus>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C4C")]
				[Address(RVA = "0x24AE830", Offset = "0x24AE830", VA = "0x24AE830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C4E")]
				[Address(RVA = "0x24AE8C0", Offset = "0x24AE8C0", VA = "0x24AE8C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C49")]
			[Address(RVA = "0x24ADBAC", Offset = "0x24ADBAC", VA = "0x24ADBAC")]
			[DebuggerHidden]
			public <PollingConnectionStatus>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6002C4A")]
			[Address(RVA = "0x24AE28C", Offset = "0x24AE28C", VA = "0x24AE28C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C4B")]
			[Address(RVA = "0x24AE290", Offset = "0x24AE290", VA = "0x24AE290", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C4D")]
			[Address(RVA = "0x24AE838", Offset = "0x24AE838", VA = "0x24AE838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C364C", Offset = "0x5C364C")]
		private sealed class <PollingPressState_Menu>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C52")]
				[Address(RVA = "0x24AF684", Offset = "0x24AF684", VA = "0x24AF684", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C54")]
				[Address(RVA = "0x24AF714", Offset = "0x24AF714", VA = "0x24AF714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C4F")]
			[Address(RVA = "0x24ADD98", Offset = "0x24ADD98", VA = "0x24ADD98")]
			[DebuggerHidden]
			public <PollingPressState_Menu>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002C50")]
			[Address(RVA = "0x24AF210", Offset = "0x24AF210", VA = "0x24AF210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C51")]
			[Address(RVA = "0x24AF214", Offset = "0x24AF214", VA = "0x24AF214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C53")]
			[Address(RVA = "0x24AF68C", Offset = "0x24AF68C", VA = "0x24AF68C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C365C", Offset = "0x5C365C")]
		private sealed class <PollingPressState_Grip>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C58")]
				[Address(RVA = "0x24AF178", Offset = "0x24AF178", VA = "0x24AF178", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C5A")]
				[Address(RVA = "0x24AF208", Offset = "0x24AF208", VA = "0x24AF208", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C55")]
			[Address(RVA = "0x24ADDB8", Offset = "0x24ADDB8", VA = "0x24ADDB8")]
			[DebuggerHidden]
			public <PollingPressState_Grip>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6002C56")]
			[Address(RVA = "0x24AE8C8", Offset = "0x24AE8C8", VA = "0x24AE8C8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C57")]
			[Address(RVA = "0x24AE8CC", Offset = "0x24AE8CC", VA = "0x24AE8CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C59")]
			[Address(RVA = "0x24AF180", Offset = "0x24AF180", VA = "0x24AF180", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C366C", Offset = "0x5C366C")]
		private sealed class <PollingPressState_Touchpad>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C5E")]
				[Address(RVA = "0x24AFB90", Offset = "0x24AFB90", VA = "0x24AFB90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C60")]
				[Address(RVA = "0x24AFC20", Offset = "0x24AFC20", VA = "0x24AFC20", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C5B")]
			[Address(RVA = "0x24ADDD8", Offset = "0x24ADDD8", VA = "0x24ADDD8")]
			[DebuggerHidden]
			public <PollingPressState_Touchpad>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002C5C")]
			[Address(RVA = "0x24AF71C", Offset = "0x24AF71C", VA = "0x24AF71C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C5D")]
			[Address(RVA = "0x24AF720", Offset = "0x24AF720", VA = "0x24AF720", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C5F")]
			[Address(RVA = "0x24AFB98", Offset = "0x24AFB98", VA = "0x24AFB98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C367C", Offset = "0x5C367C")]
		private sealed class <PollingPressState_Trigger>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C64")]
				[Address(RVA = "0x24B009C", Offset = "0x24B009C", VA = "0x24B009C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C66")]
				[Address(RVA = "0x24B012C", Offset = "0x24B012C", VA = "0x24B012C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C61")]
			[Address(RVA = "0x24ADDF8", Offset = "0x24ADDF8", VA = "0x24ADDF8")]
			[DebuggerHidden]
			public <PollingPressState_Trigger>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6002C62")]
			[Address(RVA = "0x24AFC28", Offset = "0x24AFC28", VA = "0x24AFC28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C63")]
			[Address(RVA = "0x24AFC2C", Offset = "0x24AFC2C", VA = "0x24AFC2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C65")]
			[Address(RVA = "0x24B00A4", Offset = "0x24B00A4", VA = "0x24B00A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C368C", Offset = "0x5C368C")]
		private sealed class <PollingTouchState_Touchpad>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C6A")]
				[Address(RVA = "0x24B05A8", Offset = "0x24B05A8", VA = "0x24B05A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C6C")]
				[Address(RVA = "0x24B0638", Offset = "0x24B0638", VA = "0x24B0638", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C67")]
			[Address(RVA = "0x24ADF30", Offset = "0x24ADF30", VA = "0x24ADF30")]
			[DebuggerHidden]
			public <PollingTouchState_Touchpad>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x6002C68")]
			[Address(RVA = "0x24B0134", Offset = "0x24B0134", VA = "0x24B0134", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C69")]
			[Address(RVA = "0x24B0138", Offset = "0x24B0138", VA = "0x24B0138", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C6B")]
			[Address(RVA = "0x24B05B0", Offset = "0x24B05B0", VA = "0x24B05B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C369C", Offset = "0x5C369C")]
		private sealed class <PollingTouchState_Trigger>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40032C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40032C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40032C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Device <>4__this;

			[Token(Token = "0x170003E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C70")]
				[Address(RVA = "0x24B0AB4", Offset = "0x24B0AB4", VA = "0x24B0AB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C72")]
				[Address(RVA = "0x24B0B44", Offset = "0x24B0B44", VA = "0x24B0B44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C6D")]
			[Address(RVA = "0x24ADF50", Offset = "0x24ADF50", VA = "0x24ADF50")]
			[DebuggerHidden]
			public <PollingTouchState_Trigger>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6002C6E")]
			[Address(RVA = "0x24B0640", Offset = "0x24B0640", VA = "0x24B0640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C6F")]
			[Address(RVA = "0x24B0644", Offset = "0x24B0644", VA = "0x24B0644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C71")]
			[Address(RVA = "0x24B0ABC", Offset = "0x24B0ABC", VA = "0x24B0ABC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong Input_Mask_Menu;

		[Token(Token = "0x4002A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong Input_Mask_Grip;

		[Token(Token = "0x4002A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ulong Input_Mask_Touchpad;

		[Token(Token = "0x4002A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ulong Input_Mask_Trigger;

		[Token(Token = "0x4002A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IEnumerator ieConnection;

		[Token(Token = "0x4002A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IEnumerator iePressMenu;

		[Token(Token = "0x4002A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IEnumerator iePressGrip;

		[Token(Token = "0x4002A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IEnumerator iePressTouchpad;

		[Token(Token = "0x4002A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator iePressTrigger;

		[Token(Token = "0x4002A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public IEnumerator ieTouchTouchpad;

		[Token(Token = "0x4002A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator ieTouchTrigger;

		[Token(Token = "0x4002A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAC78", Offset = "0x5CAC78")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x4002A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x4002A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal WaveVR_Utils.WVR_ButtonState_t state;

		[Token(Token = "0x4002A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal WaveVR_Utils.WVR_ButtonState_t pre_state;

		[Token(Token = "0x4002A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x4002A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x4002A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x4002A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAD48", Offset = "0x5CAD48")]
		private bool <connected>k__BackingField;

		[Token(Token = "0x17000306")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x60026D8")]
			[Address(RVA = "0x24AB5D8", Offset = "0x24AB5D8", VA = "0x24AB5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3BFC", Offset = "0x5D3BFC")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x60026D9")]
			[Address(RVA = "0x24ABA2C", Offset = "0x24ABA2C", VA = "0x24ABA2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C0C", Offset = "0x5D3C0C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60026DA")]
			[Address(RVA = "0x24ABE08", Offset = "0x24ABE08", VA = "0x24ABE08")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x17000308")]
		public bool connected
		{
			[Token(Token = "0x60026F3")]
			[Address(RVA = "0x24AD984", Offset = "0x24AD984", VA = "0x24AD984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D9C", Offset = "0x5D3D9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60026F4")]
			[Address(RVA = "0x24AD98C", Offset = "0x24AD98C", VA = "0x24AD98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3DAC", Offset = "0x5D3DAC")]
			private set
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event ButtonEventHandler PressDownListenersMenu
		{
			[Token(Token = "0x60026DB")]
			[Address(RVA = "0x24AC064", Offset = "0x24AC064", VA = "0x24AC064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C1C", Offset = "0x5D3C1C")]
			add
			{
			}
			[Token(Token = "0x60026DC")]
			[Address(RVA = "0x24AC170", Offset = "0x24AC170", VA = "0x24AC170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C2C", Offset = "0x5D3C2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event ButtonEventHandler PressDownListenersGrip
		{
			[Token(Token = "0x60026DD")]
			[Address(RVA = "0x24AC27C", Offset = "0x24AC27C", VA = "0x24AC27C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C3C", Offset = "0x5D3C3C")]
			add
			{
			}
			[Token(Token = "0x60026DE")]
			[Address(RVA = "0x24AC388", Offset = "0x24AC388", VA = "0x24AC388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C4C", Offset = "0x5D3C4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event ButtonEventHandler PressDownListenersTouchpad
		{
			[Token(Token = "0x60026DF")]
			[Address(RVA = "0x24AC494", Offset = "0x24AC494", VA = "0x24AC494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C5C", Offset = "0x5D3C5C")]
			add
			{
			}
			[Token(Token = "0x60026E0")]
			[Address(RVA = "0x24AC5A0", Offset = "0x24AC5A0", VA = "0x24AC5A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C6C", Offset = "0x5D3C6C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event ButtonEventHandler PressDownListenersTrigger
		{
			[Token(Token = "0x60026E1")]
			[Address(RVA = "0x24AC6AC", Offset = "0x24AC6AC", VA = "0x24AC6AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C7C", Offset = "0x5D3C7C")]
			add
			{
			}
			[Token(Token = "0x60026E2")]
			[Address(RVA = "0x24AC7B8", Offset = "0x24AC7B8", VA = "0x24AC7B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C8C", Offset = "0x5D3C8C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event ButtonEventHandler PressUpListenersMenu
		{
			[Token(Token = "0x60026E3")]
			[Address(RVA = "0x24AC8C4", Offset = "0x24AC8C4", VA = "0x24AC8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3C9C", Offset = "0x5D3C9C")]
			add
			{
			}
			[Token(Token = "0x60026E4")]
			[Address(RVA = "0x24AC9D0", Offset = "0x24AC9D0", VA = "0x24AC9D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CAC", Offset = "0x5D3CAC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event ButtonEventHandler PressUpListenersGrip
		{
			[Token(Token = "0x60026E5")]
			[Address(RVA = "0x24ACADC", Offset = "0x24ACADC", VA = "0x24ACADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CBC", Offset = "0x5D3CBC")]
			add
			{
			}
			[Token(Token = "0x60026E6")]
			[Address(RVA = "0x24ACBE8", Offset = "0x24ACBE8", VA = "0x24ACBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CCC", Offset = "0x5D3CCC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event ButtonEventHandler PressUpListenersTouchpad
		{
			[Token(Token = "0x60026E7")]
			[Address(RVA = "0x24ACCF4", Offset = "0x24ACCF4", VA = "0x24ACCF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CDC", Offset = "0x5D3CDC")]
			add
			{
			}
			[Token(Token = "0x60026E8")]
			[Address(RVA = "0x24ACE00", Offset = "0x24ACE00", VA = "0x24ACE00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CEC", Offset = "0x5D3CEC")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event ButtonEventHandler PressUpListenersTrigger
		{
			[Token(Token = "0x60026E9")]
			[Address(RVA = "0x24ACF0C", Offset = "0x24ACF0C", VA = "0x24ACF0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3CFC", Offset = "0x5D3CFC")]
			add
			{
			}
			[Token(Token = "0x60026EA")]
			[Address(RVA = "0x24AD018", Offset = "0x24AD018", VA = "0x24AD018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D0C", Offset = "0x5D3D0C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event ButtonEventHandler TouchDownListenersTouchpad
		{
			[Token(Token = "0x60026EB")]
			[Address(RVA = "0x24AD124", Offset = "0x24AD124", VA = "0x24AD124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D1C", Offset = "0x5D3D1C")]
			add
			{
			}
			[Token(Token = "0x60026EC")]
			[Address(RVA = "0x24AD230", Offset = "0x24AD230", VA = "0x24AD230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D2C", Offset = "0x5D3D2C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event ButtonEventHandler TouchDownListenersTrigger
		{
			[Token(Token = "0x60026ED")]
			[Address(RVA = "0x24AD33C", Offset = "0x24AD33C", VA = "0x24AD33C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D3C", Offset = "0x5D3D3C")]
			add
			{
			}
			[Token(Token = "0x60026EE")]
			[Address(RVA = "0x24AD448", Offset = "0x24AD448", VA = "0x24AD448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D4C", Offset = "0x5D3D4C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event ButtonEventHandler TouchUpListenersTouchpad
		{
			[Token(Token = "0x60026EF")]
			[Address(RVA = "0x24AD554", Offset = "0x24AD554", VA = "0x24AD554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D5C", Offset = "0x5D3D5C")]
			add
			{
			}
			[Token(Token = "0x60026F0")]
			[Address(RVA = "0x24AD660", Offset = "0x24AD660", VA = "0x24AD660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D6C", Offset = "0x5D3D6C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event ButtonEventHandler TouchUpListenersTrigger
		{
			[Token(Token = "0x60026F1")]
			[Address(RVA = "0x24AD76C", Offset = "0x24AD76C", VA = "0x24AD76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D7C", Offset = "0x5D3D7C")]
			add
			{
			}
			[Token(Token = "0x60026F2")]
			[Address(RVA = "0x24AD878", Offset = "0x24AD878", VA = "0x24AD878")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3D8C", Offset = "0x5D3D8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event ConnectionEventHandler ConnectionStatusListeners
		{
			[Token(Token = "0x60026F5")]
			[Address(RVA = "0x24AD994", Offset = "0x24AD994", VA = "0x24AD994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3DBC", Offset = "0x5D3DBC")]
			add
			{
			}
			[Token(Token = "0x60026F6")]
			[Address(RVA = "0x24ADAA0", Offset = "0x24ADAA0", VA = "0x24ADAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D3DCC", Offset = "0x5D3DCC")]
			remove
			{
			}
		}

		[Token(Token = "0x60026D7")]
		[Address(RVA = "0x24AB404", Offset = "0x24AB404", VA = "0x24AB404")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x60026F7")]
		[Address(RVA = "0x24ABA34", Offset = "0x24ABA34", VA = "0x24ABA34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3DDC", Offset = "0x5D3DDC")]
		private IEnumerator PollingConnectionStatus()
		{
			return null;
		}

		[Token(Token = "0x60026F8")]
		[Address(RVA = "0x24ADBCC", Offset = "0x24ADBCC", VA = "0x24ADBCC")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026F9")]
		[Address(RVA = "0x24ABAC0", Offset = "0x24ABAC0", VA = "0x24ABAC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3E54", Offset = "0x5D3E54")]
		private IEnumerator PollingPressState_Menu()
		{
			return null;
		}

		[Token(Token = "0x60026FA")]
		[Address(RVA = "0x24ABB4C", Offset = "0x24ABB4C", VA = "0x24ABB4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3ECC", Offset = "0x5D3ECC")]
		private IEnumerator PollingPressState_Grip()
		{
			return null;
		}

		[Token(Token = "0x60026FB")]
		[Address(RVA = "0x24ABBD8", Offset = "0x24ABBD8", VA = "0x24ABBD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3F44", Offset = "0x5D3F44")]
		private IEnumerator PollingPressState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60026FC")]
		[Address(RVA = "0x24ABC64", Offset = "0x24ABC64", VA = "0x24ABC64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D3FBC", Offset = "0x5D3FBC")]
		private IEnumerator PollingPressState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x60026FD")]
		[Address(RVA = "0x24ADE18", Offset = "0x24ADE18", VA = "0x24ADE18")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60026FE")]
		[Address(RVA = "0x24ABCF0", Offset = "0x24ABCF0", VA = "0x24ABCF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D4034", Offset = "0x5D4034")]
		private IEnumerator PollingTouchState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60026FF")]
		[Address(RVA = "0x24ABD7C", Offset = "0x24ABD7C", VA = "0x24ABD7C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D40AC", Offset = "0x5D40AC")]
		private IEnumerator PollingTouchState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x6002700")]
		[Address(RVA = "0x24ADF70", Offset = "0x24ADF70", VA = "0x24ADF70")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002701")]
		[Address(RVA = "0x24AE148", Offset = "0x24AE148", VA = "0x24AE148")]
		public void TriggerHapticPulse(uint _durationMicroSec = 1000000u, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x40019D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40019D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_ControllerListener instance;

	[Token(Token = "0x40019D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Device[] devices;

	[Token(Token = "0x17000098")]
	public static WaveVR_ControllerListener Instance
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x24AACCC", Offset = "0x24AACCC", VA = "0x24AACCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60011DF")]
	[Address(RVA = "0x24AAF24", Offset = "0x24AAF24", VA = "0x24AAF24")]
	public Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60011E0")]
	[Address(RVA = "0x24AB5E0", Offset = "0x24AB5E0", VA = "0x24AB5E0")]
	public Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x60011E1")]
	[Address(RVA = "0x24AB684", Offset = "0x24AB684", VA = "0x24AB684")]
	public Device Input(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60011E2")]
	[Address(RVA = "0x24AB724", Offset = "0x24AB724", VA = "0x24AB724")]
	private void Start()
	{
	}

	[Token(Token = "0x60011E3")]
	[Address(RVA = "0x24AB99C", Offset = "0x24AB99C", VA = "0x24AB99C")]
	private void Update()
	{
	}

	[Token(Token = "0x60011E4")]
	[Address(RVA = "0x24AB9A0", Offset = "0x24AB9A0", VA = "0x24AB9A0")]
	public WaveVR_ControllerListener()
	{
	}
}
[Token(Token = "0x2000224")]
public class WaveVR_ControllerLoader : MonoBehaviour
{
	[Token(Token = "0x2000582")]
	public enum ControllerHand
	{
		[Token(Token = "0x4002A78")]
		Dominant,
		[Token(Token = "0x4002A79")]
		Non_Dominant
	}

	[Token(Token = "0x2000583")]
	public enum CComponent
	{
		[Token(Token = "0x4002A7B")]
		One_Bone,
		[Token(Token = "0x4002A7C")]
		Multi_Component
	}

	[Token(Token = "0x2000584")]
	public enum CTrackingSpace
	{
		[Token(Token = "0x4002A7E")]
		REAL_POSITION_ONLY,
		[Token(Token = "0x4002A7F")]
		FAKE_POSITION_ONLY,
		[Token(Token = "0x4002A80")]
		AUTO_POSITION_ONLY,
		[Token(Token = "0x4002A81")]
		ROTATION_ONLY,
		[Token(Token = "0x4002A82")]
		ROTATION_AND_REAL_POSITION,
		[Token(Token = "0x4002A83")]
		ROTATION_AND_FAKE_POSITION,
		[Token(Token = "0x4002A84")]
		ROTATION_AND_AUTO_POSITION,
		[Token(Token = "0x4002A85")]
		CTS_SYSTEM
	}

	[Token(Token = "0x2000585")]
	public enum ControllerType
	{
		[Token(Token = "0x4002A87")]
		ControllerType_None,
		[Token(Token = "0x4002A88")]
		ControllerType_Generic,
		[Token(Token = "0x4002A89")]
		ControllerType_Resources,
		[Token(Token = "0x4002A8A")]
		ControllerType_AssetBundles,
		[Token(Token = "0x4002A8B")]
		ControllerType_AdaptiveController
	}

	[Token(Token = "0x2000586")]
	public enum CLoadingState
	{
		[Token(Token = "0x4002A8D")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x4002A8E")]
		LoadingState_LOADING,
		[Token(Token = "0x4002A8F")]
		LoadingState_LOADED
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D6C", Offset = "0x5C2D6C")]
	private sealed class <checkRenderModelAndDelete>d__101 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_ControllerLoader <>4__this;

		[Token(Token = "0x17000309")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002706")]
			[Address(RVA = "0x6DA474", Offset = "0x6DA474", VA = "0x6DA474", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002708")]
			[Address(RVA = "0x6DA504", Offset = "0x6DA504", VA = "0x6DA504", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002703")]
		[Address(RVA = "0x6DA3E8", Offset = "0x6DA3E8", VA = "0x6DA3E8")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__101(int <>1__state)
		{
		}

		[Token(Token = "0x6002704")]
		[Address(RVA = "0x6DA408", Offset = "0x6DA408", VA = "0x6DA408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002705")]
		[Address(RVA = "0x6DA40C", Offset = "0x6DA40C", VA = "0x6DA40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002707")]
		[Address(RVA = "0x6DA47C", Offset = "0x6DA47C", VA = "0x6DA47C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40019D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40019D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6758", Offset = "0x5C6758")]
	public ControllerHand WhichHand;

	[Token(Token = "0x40019D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CComponent ControllerComponents;

	[Token(Token = "0x40019D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool TrackPosition;

	[Token(Token = "0x40019DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x40019DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool FollowHead;

	[Token(Token = "0x40019DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool TrackRotation;

	[Token(Token = "0x40019DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6794", Offset = "0x5C6794")]
	public bool overwriteIndicatorSettings;

	[Token(Token = "0x40019DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool showIndicator;

	[Token(Token = "0x40019DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x40019E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool basedOnEmitter;

	[Token(Token = "0x40019E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C67C8", Offset = "0x5C67C8")]
	public float showIndicatorAngle;

	[Token(Token = "0x40019E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C67E4", Offset = "0x5C67E4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C67E4", Offset = "0x5C67E4")]
	public float lineLength;

	[Token(Token = "0x40019E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C683C", Offset = "0x5C683C")]
	public float lineStartWidth;

	[Token(Token = "0x40019E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C685C", Offset = "0x5C685C")]
	public float lineEndWidth;

	[Token(Token = "0x40019E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Color lineColor;

	[Token(Token = "0x40019E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C687C", Offset = "0x5C687C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C687C", Offset = "0x5C687C")]
	public float textCharacterSize;

	[Token(Token = "0x40019E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C68D4", Offset = "0x5C68D4")]
	public float zhCharactarSize;

	[Token(Token = "0x40019E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C68F4", Offset = "0x5C68F4")]
	public int textFontSize;

	[Token(Token = "0x40019E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color textColor;

	[Token(Token = "0x40019EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6914", Offset = "0x5C6914")]
	public bool useIndicatorSystemConfig;

	[Token(Token = "0x40019EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x40019EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6948", Offset = "0x5C6948")]
	public bool adaptiveLoading;

	[Token(Token = "0x40019ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
	public bool enableEmitter;

	[Token(Token = "0x40019EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
	public bool sendEvent;

	[Token(Token = "0x40019EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C6984", Offset = "0x5C6984")]
	public bool enableButtonEffect;

	[Token(Token = "0x40019F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool useEffectSystemConfig;

	[Token(Token = "0x40019F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color32 buttonEffectColor;

	[Token(Token = "0x40019F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C69C0", Offset = "0x5C69C0")]
	public bool ShowBeam;

	[Token(Token = "0x40019F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool useBeamSystemConfig;

	[Token(Token = "0x40019F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x76")]
	public bool updateEveryFrame;

	[Token(Token = "0x40019F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float StartWidth;

	[Token(Token = "0x40019F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float EndWidth;

	[Token(Token = "0x40019F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float StartOffset;

	[Token(Token = "0x40019F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float EndOffset;

	[Token(Token = "0x40019F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Color32 StartColor;

	[Token(Token = "0x40019FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color32 EndColor;

	[Token(Token = "0x40019FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool useDefaultMaterial;

	[Token(Token = "0x40019FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public Material customMat;

	[Token(Token = "0x40019FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C69F4", Offset = "0x5C69F4")]
	public bool showPointer;

	[Token(Token = "0x40019FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool usePointerSystemConfig;

	[Token(Token = "0x40019FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	public bool Blink;

	[Token(Token = "0x4001A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9B")]
	public bool UseDefaultTexture;

	[Token(Token = "0x4001A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Texture2D customTexture;

	[Token(Token = "0x4001A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x4001A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float PointerDistanceInMeters;

	[Token(Token = "0x4001A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool useTexture;

	[Token(Token = "0x4001A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public Color PointerColor;

	[Token(Token = "0x4001A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Color borderColor;

	[Token(Token = "0x4001A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Color focusColor;

	[Token(Token = "0x4001A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color focusBorderColor;

	[Token(Token = "0x4001A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private string TextureName;

	[Token(Token = "0x4001A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private ControllerType controllerType;

	[Token(Token = "0x4001A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private GameObject controllerPrefab;

	[Token(Token = "0x4001A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject originalControllerPrefab;

	[Token(Token = "0x4001A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private string controllerFileName;

	[Token(Token = "0x4001A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private string controllerModelFoler;

	[Token(Token = "0x4001A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private string genericControllerFileName;

	[Token(Token = "0x4001A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<AssetBundle> loadedAssetBundle;

	[Token(Token = "0x4001A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private string renderModelNamePath;

	[Token(Token = "0x4001A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private WaveVR_Controller.EDeviceType focusController;

	[Token(Token = "0x4001A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x4001A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private string renderModelName;

	[Token(Token = "0x4001A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private bool connected;

	[Token(Token = "0x4001A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11D")]
	private bool isChecking;

	[Token(Token = "0x4001A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private WaitForSeconds wfs;

	[Token(Token = "0x4001A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private CLoadingState mLoadingState;

	[Token(Token = "0x4001A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private string parameterName;

	[Token(Token = "0x4001A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4001A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private IntPtr ptrResult;

	[Token(Token = "0x4001A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private uint resultVertLength;

	[Token(Token = "0x4001A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int bufferSize;

	[Token(Token = "0x4001A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private WaveVR_ControllerInstanceManager CtrInstanceMgr;

	[Token(Token = "0x4001A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int ControllerIdx;

	[Token(Token = "0x4001A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4001A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private GameObject eventSystem;

	[Token(Token = "0x60011E6")]
	[Address(RVA = "0x24B0C54", Offset = "0x24B0C54", VA = "0x24B0C54")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60011E7")]
	[Address(RVA = "0x24B0F08", Offset = "0x24B0F08", VA = "0x24B0F08")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x60011E8")]
	[Address(RVA = "0x24B11BC", Offset = "0x24B11BC", VA = "0x24B11BC")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x60011E9")]
	[Address(RVA = "0x24B1470", Offset = "0x24B1470", VA = "0x24B1470")]
	private void checkAndCreateCIM()
	{
	}

	[Token(Token = "0x60011EA")]
	[Address(RVA = "0x24B1688", Offset = "0x24B1688", VA = "0x24B1688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60011EB")]
	[Address(RVA = "0x24B1784", Offset = "0x24B1784", VA = "0x24B1784")]
	private void resetControllerState()
	{
	}

	[Token(Token = "0x60011EC")]
	[Address(RVA = "0x24B1810", Offset = "0x24B1810", VA = "0x24B1810")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x24B18E8", Offset = "0x24B18E8", VA = "0x24B18E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x24B1A84", Offset = "0x24B1A84", VA = "0x24B1A84")]
	private void Start()
	{
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x24B31AC", Offset = "0x24B31AC", VA = "0x24B31AC")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x24B1964", Offset = "0x24B1964", VA = "0x24B1964")]
	private void removeControllerFromMgr(string funcName)
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x24B3550", Offset = "0x24B3550", VA = "0x24B3550")]
	private void UpdateFocusController()
	{
	}

	[Token(Token = "0x60011F2")]
	[Address(RVA = "0x24B1DF0", Offset = "0x24B1DF0", VA = "0x24B1DF0")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x60011F3")]
	[Address(RVA = "0x24B3588", Offset = "0x24B3588", VA = "0x24B3588")]
	private bool loadMeshAndImageByDevice(string renderModelNamePath)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x24B4488", Offset = "0x24B4488", VA = "0x24B4488")]
	private bool tryLoadModelFromRuntime(string renderModelNamePath, string modelName)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x24B776C", Offset = "0x24B776C", VA = "0x24B776C")]
	private bool verifyControllerPrefab(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x24B4258", Offset = "0x24B4258", VA = "0x24B4258")]
	private int checkAssetBundlesVersion(string version)
	{
		return default(int);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x24B4C28", Offset = "0x24B4C28", VA = "0x24B4C28")]
	private GameObject loadGenericControllerModelFromPackage(string tmpGeneric)
	{
		return null;
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x24B4DBC", Offset = "0x24B4DBC", VA = "0x24B4DBC")]
	private void SetControllerOptions(GameObject controller_prefab)
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x24B7D64", Offset = "0x24B7D64", VA = "0x24B7D64")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x24B8640", Offset = "0x24B8640", VA = "0x24B8640")]
	private void Update()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x24B3124", Offset = "0x24B3124", VA = "0x24B3124")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CE210", Offset = "0x5CE210")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x24B7DE4", Offset = "0x24B7DE4", VA = "0x24B7DE4")]
	private bool DeleteControllerWhenDisconnect()
	{
		return default(bool);
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x24B1CCC", Offset = "0x24B1CCC", VA = "0x24B1CCC")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x24B5860", Offset = "0x24B5860", VA = "0x24B5860")]
	private void SetControllerBeamParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x24B6548", Offset = "0x24B6548", VA = "0x24B6548")]
	private void SetControllerPointerParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x24B9EBC", Offset = "0x24B9EBC", VA = "0x24B9EBC")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x6001201")]
	[Address(RVA = "0x24BA134", Offset = "0x24BA134", VA = "0x24BA134")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x6001202")]
	[Address(RVA = "0x24B889C", Offset = "0x24B889C", VA = "0x24B889C")]
	private void ReadJsonValues_Beam()
	{
	}

	[Token(Token = "0x6001203")]
	[Address(RVA = "0x24B8E64", Offset = "0x24B8E64", VA = "0x24B8E64")]
	private void ReadJsonValues_Pointer()
	{
	}

	[Token(Token = "0x6001204")]
	[Address(RVA = "0x24BA3AC", Offset = "0x24BA3AC", VA = "0x24BA3AC")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001205")]
	[Address(RVA = "0x24BA66C", Offset = "0x24BA66C", VA = "0x24BA66C")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6001206")]
	[Address(RVA = "0x24BA92C", Offset = "0x24BA92C", VA = "0x24BA92C")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x6001207")]
	[Address(RVA = "0x24B4F64", Offset = "0x24B4F64", VA = "0x24B4F64")]
	private void PresetAdaptiveControllerParameters(GameObject ctrPrefab)
	{
	}

	[Token(Token = "0x6001208")]
	[Address(RVA = "0x24B743C", Offset = "0x24B743C", VA = "0x24B743C")]
	private void setEventSystemParameter()
	{
	}

	[Token(Token = "0x6001209")]
	[Address(RVA = "0x24B6D20", Offset = "0x24B6D20", VA = "0x24B6D20")]
	private void ApplyIndicatorParameters()
	{
	}

	[Token(Token = "0x600120A")]
	[Address(RVA = "0x24BAE34", Offset = "0x24BAE34", VA = "0x24BAE34")]
	private void addbuttonIndicationList()
	{
	}

	[Token(Token = "0x600120B")]
	[Address(RVA = "0x24BB748", Offset = "0x24BB748", VA = "0x24BB748")]
	public WaveVR_ControllerLoader()
	{
	}
}
[Token(Token = "0x2000225")]
public class WaveVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x2000588")]
	public enum CIndex
	{
		[Token(Token = "0x4002A94")]
		invalid = -1,
		[Token(Token = "0x4002A95")]
		Dominant,
		[Token(Token = "0x4002A96")]
		NonDominant
	}

	[Token(Token = "0x4001A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject Dominant;

	[Token(Token = "0x4001A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject NonDominant;

	[Token(Token = "0x4001A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private GameObject[] ControllerObjects;

	[Token(Token = "0x4001A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool[] ControllerConnected;

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x6DA50C", Offset = "0x6DA50C", VA = "0x6DA50C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x6DA5DC", Offset = "0x6DA5DC", VA = "0x6DA5DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x6DA700", Offset = "0x6DA700", VA = "0x6DA700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x6DAC80", Offset = "0x6DAC80", VA = "0x6DAC80")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x6DAD58", Offset = "0x6DAD58", VA = "0x6DAD58")]
	private void BroadcastToObjects(CIndex index)
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x6DA8F4", Offset = "0x6DA8F4", VA = "0x6DA8F4")]
	private void checkConnection()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x6DAF94", Offset = "0x6DAF94", VA = "0x6DAF94")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6001214")]
	[Address(RVA = "0x6DB280", Offset = "0x6DB280", VA = "0x6DB280")]
	public WaveVR_ControllerManager()
	{
	}
}
[Token(Token = "0x2000226")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C17A0", Offset = "0x5C17A0")]
public class WaveVR_Distortion : MonoBehaviour
{
	[Token(Token = "0x6001216")]
	[Address(RVA = "0x6EB1C8", Offset = "0x6EB1C8", VA = "0x6EB1C8")]
	public WaveVR_Distortion()
	{
	}
}
[Token(Token = "0x2000227")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1818", Offset = "0x5C1818")]
public class WaveVR_FPS : MonoBehaviour
{
	[Token(Token = "0x4001A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Text textField;

	[Token(Token = "0x4001A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float fps;

	[Token(Token = "0x4001A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float targetfps;

	[Token(Token = "0x4001A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float accTime;

	[Token(Token = "0x6001217")]
	[Address(RVA = "0x6ED1D8", Offset = "0x6ED1D8", VA = "0x6ED1D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001218")]
	[Address(RVA = "0x6ED248", Offset = "0x6ED248", VA = "0x6ED248")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001219")]
	[Address(RVA = "0x6ED454", Offset = "0x6ED454", VA = "0x6ED454")]
	private void Start()
	{
	}

	[Token(Token = "0x600121A")]
	[Address(RVA = "0x6ED47C", Offset = "0x6ED47C", VA = "0x6ED47C")]
	public WaveVR_FPS()
	{
	}
}
[Token(Token = "0x2000228")]
public class WaveVR_IMEManager
{
	[Token(Token = "0x2000589")]
	public class InputResult
	{
		[Token(Token = "0x4002A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int mId;

		[Token(Token = "0x4002A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string mContent;

		[Token(Token = "0x4002A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int mErrorCode;

		[Token(Token = "0x1700030B")]
		public string InputContent
		{
			[Token(Token = "0x600270A")]
			[Address(RVA = "0x6F3D0C", Offset = "0x6F3D0C", VA = "0x6F3D0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030C")]
		public int ErrorCode
		{
			[Token(Token = "0x600270B")]
			[Address(RVA = "0x6F3D14", Offset = "0x6F3D14", VA = "0x6F3D14")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700030D")]
		public int Id
		{
			[Token(Token = "0x600270C")]
			[Address(RVA = "0x6F3D1C", Offset = "0x6F3D1C", VA = "0x6F3D1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002709")]
		[Address(RVA = "0x6F3CDC", Offset = "0x6F3CDC", VA = "0x6F3CDC")]
		public InputResult(int id, string content, int errorCode)
		{
		}
	}

	[Token(Token = "0x200058A")]
	public class IMEParameter
	{
		[Token(Token = "0x4002A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int id;

		[Token(Token = "0x4002A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int type;

		[Token(Token = "0x4002A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int mode;

		[Token(Token = "0x4002A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string exist;

		[Token(Token = "0x4002A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int cursor;

		[Token(Token = "0x4002A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int selectStart;

		[Token(Token = "0x4002AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int selectEnd;

		[Token(Token = "0x4002AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public double[] pos;

		[Token(Token = "0x4002AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double[] rot;

		[Token(Token = "0x4002AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x4002AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x4002AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int shadow;

		[Token(Token = "0x4002AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string locale;

		[Token(Token = "0x4002AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public string title;

		[Token(Token = "0x4002AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int buttonId;

		[Token(Token = "0x4002AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int extraInt;

		[Token(Token = "0x4002AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string extraString;

		[Token(Token = "0x600270D")]
		[Address(RVA = "0x6F3A50", Offset = "0x6F3A50", VA = "0x6F3A50")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int extraInt, string extraString, int buttonId)
		{
		}

		[Token(Token = "0x600270E")]
		[Address(RVA = "0x6F3AE0", Offset = "0x6F3AE0", VA = "0x6F3AE0")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x600270F")]
		[Address(RVA = "0x6F3B64", Offset = "0x6F3B64", VA = "0x6F3B64")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002710")]
		[Address(RVA = "0x6F3BE8", Offset = "0x6F3BE8", VA = "0x6F3BE8")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002711")]
		[Address(RVA = "0x6F3C6C", Offset = "0x6F3C6C", VA = "0x6F3C6C")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, int buttonId)
		{
		}
	}

	[Token(Token = "0x200058B")]
	public delegate void inputCompleteCallback(InputResult results);

	[Token(Token = "0x200058C")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x6002716")]
		[Address(RVA = "0x6F3614", Offset = "0x6F3614", VA = "0x6F3614")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x6002717")]
		[Address(RVA = "0x6F3D24", Offset = "0x6F3D24", VA = "0x6F3D24")]
		public void onInputCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x4001A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001A2C")]
	private const string IME_MANAGER_CLASSNAME = "com.htc.vr.ime.client.IMEManager";

	[Token(Token = "0x4001A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private AndroidJavaObject imeManager;

	[Token(Token = "0x4001A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_IMEManager mInstance;

	[Token(Token = "0x4001A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private bool inited;

	[Token(Token = "0x4001A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static inputCompleteCallback mCallback;

	[Token(Token = "0x17000099")]
	public static WaveVR_IMEManager instance
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x6F2140", Offset = "0x6F2140", VA = "0x6F2140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600121C")]
	[Address(RVA = "0x6F2264", Offset = "0x6F2264", VA = "0x6F2264")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x600121D")]
	[Address(RVA = "0x6F26F4", Offset = "0x6F26F4", VA = "0x6F26F4")]
	private AndroidJavaObject javaIMEParameterFromCS(IMEParameter parameter)
	{
		return null;
	}

	[Token(Token = "0x600121E")]
	[Address(RVA = "0x6F2EB4", Offset = "0x6F2EB4", VA = "0x6F2EB4")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x600121F")]
	[Address(RVA = "0x6F31B0", Offset = "0x6F31B0", VA = "0x6F31B0")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x6F3300", Offset = "0x6F3300", VA = "0x6F3300")]
	public void showKeyboard(IMEParameter parameter, inputCompleteCallback cb)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x6F36D0", Offset = "0x6F36D0", VA = "0x6F36D0")]
	public void hideKeyboard()
	{
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x6F3880", Offset = "0x6F3880", VA = "0x6F3880")]
	public int getKeyboardState()
	{
		return default(int);
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x6F225C", Offset = "0x6F225C", VA = "0x6F225C")]
	public WaveVR_IMEManager()
	{
	}
}
[Token(Token = "0x2000229")]
public class WaveVR_IMEManagerWrapper
{
	[Token(Token = "0x200058D")]
	public enum Locale
	{
		[Token(Token = "0x4002AAC")]
		en_US,
		[Token(Token = "0x4002AAD")]
		zh_CN
	}

	[Token(Token = "0x200058E")]
	public enum Action
	{
		[Token(Token = "0x4002AAF")]
		Done,
		[Token(Token = "0x4002AB0")]
		Enter,
		[Token(Token = "0x4002AB1")]
		Search,
		[Token(Token = "0x4002AB2")]
		Go,
		[Token(Token = "0x4002AB3")]
		Send,
		[Token(Token = "0x4002AB4")]
		Next,
		[Token(Token = "0x4002AB5")]
		Submit
	}

	[Token(Token = "0x200058F")]
	public delegate void InputDoneCallback(InputResult results);

	[Token(Token = "0x2000590")]
	public class InputResult
	{
		[Token(Token = "0x4002AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string mContent;

		[Token(Token = "0x600271C")]
		[Address(RVA = "0x6F52CC", Offset = "0x6F52CC", VA = "0x6F52CC")]
		public InputResult(string content)
		{
		}

		[Token(Token = "0x600271D")]
		[Address(RVA = "0x6F5C0C", Offset = "0x6F5C0C", VA = "0x6F5C0C")]
		public string GetContent()
		{
			return null;
		}
	}

	[Token(Token = "0x4001A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int VERSION_ID;

	[Token(Token = "0x4001A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_IMEManager mIMEManager;

	[Token(Token = "0x4001A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static WaveVR_IMEManagerWrapper mInstance;

	[Token(Token = "0x4001A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private WaveVR_IMEManager.IMEParameter mParameter;

	[Token(Token = "0x4001A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static InputDoneCallback mCallback;

	[Token(Token = "0x4001A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static int CONTROLLER_BUTTON_DEFAULT;

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x6F4888", Offset = "0x6F4888", VA = "0x6F4888")]
	private WaveVR_IMEManagerWrapper()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x6F4A88", Offset = "0x6F4A88", VA = "0x6F4A88")]
	public static WaveVR_IMEManagerWrapper GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x6F4D00", Offset = "0x6F4D00", VA = "0x6F4D00")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x6F4D28", Offset = "0x6F4D28", VA = "0x6F4D28")]
	public void SetTitle(string title)
	{
	}

	[Token(Token = "0x6001229")]
	[Address(RVA = "0x6F4D50", Offset = "0x6F4D50", VA = "0x6F4D50")]
	public void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x600122A")]
	[Address(RVA = "0x6F4ED0", Offset = "0x6F4ED0", VA = "0x6F4ED0")]
	public void SetCallback(InputDoneCallback callback)
	{
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x6F4F60", Offset = "0x6F4F60", VA = "0x6F4F60")]
	public void Show()
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x6F504C", Offset = "0x6F504C", VA = "0x6F504C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x6F50F0", Offset = "0x6F50F0", VA = "0x6F50F0")]
	public void SetAction(Action action)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x6F48A8", Offset = "0x6F48A8", VA = "0x6F48A8")]
	public void InitParameter()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x6F519C", Offset = "0x6F519C", VA = "0x6F519C")]
	private void inputDoneCallback(WaveVR_IMEManager.InputResult results)
	{
	}
}
[Token(Token = "0x200022A")]
public class WaveVR_Init : MonoBehaviour
{
	[Token(Token = "0x4001A38")]
	private const string LOG_TAG = "WaveVR_Init";

	[Token(Token = "0x4001A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_Init _instance;

	[Token(Token = "0x4001A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WVR_Event_t vrevent;

	[Token(Token = "0x1700009A")]
	public static WaveVR_Init Instance
	{
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x6F5CE8", Offset = "0x6F5CE8", VA = "0x6F5CE8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001231")]
	[Address(RVA = "0x6F5C14", Offset = "0x6F5C14", VA = "0x6F5C14")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001233")]
	[Address(RVA = "0x6F5EE8", Offset = "0x6F5EE8", VA = "0x6F5EE8")]
	private void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6001234")]
	[Address(RVA = "0x6F6280", Offset = "0x6F6280", VA = "0x6F6280")]
	private void Start()
	{
	}

	[Token(Token = "0x6001235")]
	[Address(RVA = "0x6F641C", Offset = "0x6F641C", VA = "0x6F641C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001236")]
	[Address(RVA = "0x6F6678", Offset = "0x6F6678", VA = "0x6F6678")]
	private void Update()
	{
	}

	[Token(Token = "0x6001237")]
	[Address(RVA = "0x6F883C", Offset = "0x6F883C", VA = "0x6F883C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001238")]
	[Address(RVA = "0x6F66CC", Offset = "0x6F66CC", VA = "0x6F66CC")]
	private void processVREvent(WVR_Event_t vrEvent)
	{
	}

	[Token(Token = "0x6001239")]
	[Address(RVA = "0x6F9298", Offset = "0x6F9298", VA = "0x6F9298")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600123A")]
	[Address(RVA = "0x6F935C", Offset = "0x6F935C", VA = "0x6F935C")]
	public WaveVR_Init()
	{
	}
}
[Token(Token = "0x200022B")]
public class WaveVR_PermissionManager
{
	[Token(Token = "0x2000591")]
	public class RequestResult
	{
		[Token(Token = "0x4002AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string mPermission;

		[Token(Token = "0x4002AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool mGranted;

		[Token(Token = "0x1700030E")]
		public string PermissionName
		{
			[Token(Token = "0x600271F")]
			[Address(RVA = "0x6FF07C", Offset = "0x6FF07C", VA = "0x6FF07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700030F")]
		public bool Granted
		{
			[Token(Token = "0x6002720")]
			[Address(RVA = "0x6FF084", Offset = "0x6FF084", VA = "0x6FF084")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600271E")]
		[Address(RVA = "0x6FDAE8", Offset = "0x6FDAE8", VA = "0x6FDAE8")]
		public RequestResult(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x2000592")]
	public delegate void requestCompleteCallback(List<RequestResult> results);

	[Token(Token = "0x2000593")]
	public delegate void requestUsbCompleteCallback(bool result);

	[Token(Token = "0x4001A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4001A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_PermissionManager mInstance;

	[Token(Token = "0x4001A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static requestCompleteCallback mCallback;

	[Token(Token = "0x4001A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static requestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x1700009B")]
	public static WaveVR_PermissionManager instance
	{
		[Token(Token = "0x600123B")]
		[Address(RVA = "0x6FD6DC", Offset = "0x6FD6DC", VA = "0x6FD6DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600123C")]
	[Address(RVA = "0x6FD800", Offset = "0x6FD800", VA = "0x6FD800")]
	public static void requestDoneCallback(List<WVR_RequestResult> results)
	{
	}

	[Token(Token = "0x600123D")]
	[Address(RVA = "0x6FE338", Offset = "0x6FE338", VA = "0x6FE338")]
	public static void requestUsbDoneCallback(bool result)
	{
	}

	[Token(Token = "0x600123E")]
	[Address(RVA = "0x6FE8E0", Offset = "0x6FE8E0", VA = "0x6FE8E0")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600123F")]
	[Address(RVA = "0x6FE9F4", Offset = "0x6FE9F4", VA = "0x6FE9F4")]
	public void requestPermissions(string[] permissions, requestCompleteCallback cb)
	{
	}

	[Token(Token = "0x6001240")]
	[Address(RVA = "0x6FEB34", Offset = "0x6FEB34", VA = "0x6FEB34")]
	public void requestUsbPermission(requestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x6001241")]
	[Address(RVA = "0x6FEC6C", Offset = "0x6FEC6C", VA = "0x6FEC6C")]
	public bool isPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6001242")]
	[Address(RVA = "0x6FEDA0", Offset = "0x6FEDA0", VA = "0x6FEDA0")]
	public bool shouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6001243")]
	[Address(RVA = "0x6FEED4", Offset = "0x6FEED4", VA = "0x6FEED4")]
	public bool showDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6001244")]
	[Address(RVA = "0x6FD7F8", Offset = "0x6FD7F8", VA = "0x6FD7F8")]
	public WaveVR_PermissionManager()
	{
	}
}
[Token(Token = "0x200022C")]
public class WaveVR_PointerCameraTracker : MonoBehaviour
{
	[Token(Token = "0x4001A3F")]
	private const string LOG_TAG = "WaveVR_PointerCameraTracker";

	[Token(Token = "0x4001A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public GameObject reticleObject;

	[Token(Token = "0x4001A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x4001A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private WaveVR_ControllerPointer reticle;

	[Token(Token = "0x4001A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pointer_location;

	[Token(Token = "0x6001246")]
	[Address(RVA = "0x6FF194", Offset = "0x6FF194", VA = "0x6FF194")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6001247")]
	[Address(RVA = "0x6FF22C", Offset = "0x6FF22C", VA = "0x6FF22C")]
	private void Start()
	{
	}

	[Token(Token = "0x6001248")]
	[Address(RVA = "0x6FF2F0", Offset = "0x6FF2F0", VA = "0x6FF2F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6001249")]
	[Address(RVA = "0x6FF694", Offset = "0x6FF694", VA = "0x6FF694")]
	public void setDeviceType(WaveVR_Controller.EDeviceType value)
	{
	}

	[Token(Token = "0x600124A")]
	[Address(RVA = "0x6FF69C", Offset = "0x6FF69C", VA = "0x6FF69C")]
	public WaveVR_PointerCameraTracker()
	{
	}
}
[Token(Token = "0x200022D")]
public class WaveVR_Render : MonoBehaviour
{
	[Token(Token = "0x2000594")]
	public enum StereoRenderingPath
	{
		[Token(Token = "0x4002ABA")]
		MultiPass = 0,
		[Token(Token = "0x4002ABB")]
		SinglePass = 1,
		[Token(Token = "0x4002ABC")]
		Auto = 1
	}

	[Token(Token = "0x2000595")]
	public delegate void RenderCallback(WaveVR_Render render);

	[Token(Token = "0x2000596")]
	public delegate void RenderCallbackWithEye(WaveVR_Render render, WVR_Eye eye);

	[Token(Token = "0x2000597")]
	public delegate void RenderCallbackWithEyeAndCamera(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera);

	[Token(Token = "0x2000598")]
	public class RenderThreadSynchronizer
	{
		[Token(Token = "0x4002ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private RenderTexture mutable;

		[Token(Token = "0x6002735")]
		[Address(RVA = "0x23B35A8", Offset = "0x23B35A8", VA = "0x23B35A8")]
		public RenderThreadSynchronizer()
		{
		}

		[Token(Token = "0x6002736")]
		[Address(RVA = "0x23B3684", Offset = "0x23B3684", VA = "0x23B3684")]
		public void sync()
		{
		}
	}

	[Token(Token = "0x2000599")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x4002ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Eye eye;

		[Token(Token = "0x4002ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int textureCount;

		[Token(Token = "0x4002AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_TextureParams_t[] textureParam;

		[Token(Token = "0x4002AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int foveationCount;

		[Token(Token = "0x4002AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public WVR_RenderFoveationParams[] foveationParams;

		[Token(Token = "0x4002AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int poseCount;

		[Token(Token = "0x4002AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_PoseState_t[] pose;

		[Token(Token = "0x4002AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WVR_SubmitExtend flag;

		[Token(Token = "0x4002AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int renderEvent;

		[Token(Token = "0x4002AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_RenderInitParams_t renderInitParams;

		[Token(Token = "0x6002737")]
		[Address(RVA = "0x23B1D10", Offset = "0x23B1D10", VA = "0x23B1D10")]
		public RenderThreadContext()
		{
		}

		[Token(Token = "0x6002738")]
		[Address(RVA = "0x23B1DC4", Offset = "0x23B1DC4", VA = "0x23B1DC4")]
		public static void IssueRenderEvent(RenderThreadSyncObject syncObj, int renderEvent, WVR_RenderInitParams_t renderInitParams)
		{
		}

		[Token(Token = "0x6002739")]
		[Address(RVA = "0x23B1F80", Offset = "0x23B1F80", VA = "0x23B1F80")]
		public static void ReceiveRenderEvent(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600273A")]
		[Address(RVA = "0x23B25D4", Offset = "0x23B25D4", VA = "0x23B25D4")]
		public static void IssueBefore(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int foveationCount, WVR_RenderFoveationParams foveationParams0, WVR_RenderFoveationParams foveationParams1)
		{
		}

		[Token(Token = "0x600273B")]
		[Address(RVA = "0x23B2904", Offset = "0x23B2904", VA = "0x23B2904")]
		public static void IssueAfter(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int foveationCount, WVR_PoseState_t pose0, WVR_SubmitExtend flag)
		{
		}

		[Token(Token = "0x600273C")]
		[Address(RVA = "0x23B2BF0", Offset = "0x23B2BF0", VA = "0x23B2BF0")]
		public static void ReceiveBefore(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600273D")]
		[Address(RVA = "0x23B309C", Offset = "0x23B309C", VA = "0x23B309C")]
		public static void ReceiveAfter(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600273E")]
		[Address(RVA = "0x23B22C8", Offset = "0x23B22C8", VA = "0x23B22C8")]
		public void CopyTo(RenderThreadContext dest)
		{
		}
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D7C", Offset = "0x5C2D7C")]
	private sealed class <RenderLoop>d__121 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <tim>5__2;

		[Token(Token = "0x17000310")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002742")]
			[Address(RVA = "0x23B1AA4", Offset = "0x23B1AA4", VA = "0x23B1AA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000311")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002744")]
			[Address(RVA = "0x23B1B34", Offset = "0x23B1B34", VA = "0x23B1B34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600273F")]
		[Address(RVA = "0x23B0DD8", Offset = "0x23B0DD8", VA = "0x23B0DD8")]
		[DebuggerHidden]
		public <RenderLoop>d__121(int <>1__state)
		{
		}

		[Token(Token = "0x6002740")]
		[Address(RVA = "0x23B0DF8", Offset = "0x23B0DF8", VA = "0x23B0DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002741")]
		[Address(RVA = "0x23B0DFC", Offset = "0x23B0DFC", VA = "0x23B0DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002743")]
		[Address(RVA = "0x23B1AAC", Offset = "0x23B1AAC", VA = "0x23B1AAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200059B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D8C", Offset = "0x5C2D8C")]
	private sealed class <>c__DisplayClass142_0
	{
		[Token(Token = "0x4002ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x6002745")]
		[Address(RVA = "0x23AF340", Offset = "0x23AF340", VA = "0x23AF340")]
		public <>c__DisplayClass142_0()
		{
		}

		[Token(Token = "0x6002746")]
		[Address(RVA = "0x23AF348", Offset = "0x23AF348", VA = "0x23AF348")]
		internal void <CreateCenterCamera>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x6002747")]
		[Address(RVA = "0x23AFC04", Offset = "0x23AFC04", VA = "0x23AFC04")]
		internal void <CreateCenterCamera>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2D9C", Offset = "0x5C2D9C")]
	private sealed class <>c__DisplayClass143_0
	{
		[Token(Token = "0x4002ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x6002748")]
		[Address(RVA = "0x23B0444", Offset = "0x23B0444", VA = "0x23B0444")]
		public <>c__DisplayClass143_0()
		{
		}

		[Token(Token = "0x6002749")]
		[Address(RVA = "0x23B044C", Offset = "0x23B044C", VA = "0x23B044C")]
		internal void <CreateEyeBoth>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x600274A")]
		[Address(RVA = "0x23B0480", Offset = "0x23B0480", VA = "0x23B0480")]
		internal void <CreateEyeBoth>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DAC", Offset = "0x5C2DAC")]
	private sealed class <>c__DisplayClass144_0
	{
		[Token(Token = "0x4002AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4002AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Eye eye;

		[Token(Token = "0x4002AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x600274B")]
		[Address(RVA = "0x23B04C4", Offset = "0x23B04C4", VA = "0x23B04C4")]
		public <>c__DisplayClass144_0()
		{
		}

		[Token(Token = "0x600274C")]
		[Address(RVA = "0x23B04CC", Offset = "0x23B04CC", VA = "0x23B04CC")]
		internal void <CreateEye>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x600274D")]
		[Address(RVA = "0x23B0504", Offset = "0x23B0504", VA = "0x23B0504")]
		internal void <CreateEye>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x200059E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DBC", Offset = "0x5C2DBC")]
	private sealed class <>c__DisplayClass147_0
	{
		[Token(Token = "0x4002AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WaveVR_Render head;

		[Token(Token = "0x600274E")]
		[Address(RVA = "0x23B0548", Offset = "0x23B0548", VA = "0x23B0548")]
		public <>c__DisplayClass147_0()
		{
		}

		[Token(Token = "0x600274F")]
		[Address(RVA = "0x23B0550", Offset = "0x23B0550", VA = "0x23B0550")]
		internal void <Expand>b__0(RenderCallback a)
		{
		}

		[Token(Token = "0x6002750")]
		[Address(RVA = "0x23B0DA8", Offset = "0x23B0DA8", VA = "0x23B0DA8")]
		internal void <Expand>b__1(RenderCallback a)
		{
		}
	}

	[Token(Token = "0x4001A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string TAG;

	[Token(Token = "0x4001A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static WaveVR_Render instance;

	[Token(Token = "0x4001A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6A34", Offset = "0x5C6A34")]
	public float ipd;

	[Token(Token = "0x4001A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int targetFPS;

	[Token(Token = "0x4001A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool surfaceChanged;

	[Token(Token = "0x4001A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
	private static bool isNeedTimeout;

	[Token(Token = "0x4001A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
	private static bool isGraphicInitialized;

	[Token(Token = "0x4001A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
	private static bool isSetActiveSceneChangedCB;

	[Token(Token = "0x4001A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6A78", Offset = "0x5C6A78")]
	private uint <recommendedWidth>k__BackingField;

	[Token(Token = "0x4001A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6A88", Offset = "0x5C6A88")]
	private uint <recommendedHeight>k__BackingField;

	[Token(Token = "0x4001A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6A98", Offset = "0x5C6A98")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4001A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6AA8", Offset = "0x5C6AA8")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4001A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6AB8", Offset = "0x5C6AB8")]
	private float[] <projRawL>k__BackingField;

	[Token(Token = "0x4001A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6AC8", Offset = "0x5C6AC8")]
	private float[] <projRawR>k__BackingField;

	[Token(Token = "0x4001A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private WaveVR_Utils.RigidTransform[] _eyes;

	[Token(Token = "0x4001A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6AD8", Offset = "0x5C6AD8")]
	public bool configurationChanged;

	[Token(Token = "0x4001A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6B0C", Offset = "0x5C6B0C")]
	[SerializeField]
	private StereoRenderingPath PreferredStereoRenderingPath;

	[Token(Token = "0x4001A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6B54", Offset = "0x5C6B54")]
	private bool <IsSinglePass>k__BackingField;

	[Token(Token = "0x4001A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public RenderCallback beforeRenderExpand;

	[Token(Token = "0x4001A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RenderCallbackWithEye beforeEyeExpand;

	[Token(Token = "0x4001A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public RenderCallbackWithEyeAndCamera afterEyeExpand;

	[Token(Token = "0x4001A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RenderCallback afterRenderExpand;

	[Token(Token = "0x4001A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public RenderCallback onConfigurationChanged;

	[Token(Token = "0x4001A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RenderCallback onSDKGraphicReady;

	[Token(Token = "0x4001A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public RenderCallback onFirstFrame;

	[Token(Token = "0x4001A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderCallbackWithEyeAndCamera beforeRenderEye;

	[Token(Token = "0x4001A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public RenderCallbackWithEyeAndCamera afterRenderEye;

	[Token(Token = "0x4001A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RenderThreadSynchronizer synchronizer;

	[Token(Token = "0x4001A60")]
	private const string OBJ_NAME_EYE_CENTER = "Eye Center";

	[Token(Token = "0x4001A61")]
	private const string OBJ_NAME_LEFT_EYE = "Eye Left";

	[Token(Token = "0x4001A62")]
	private const string OBJ_NAME_RIGHT_EYE = "Eye Right";

	[Token(Token = "0x4001A63")]
	private const string OBJ_NAME_BOTH_EYES = "Eye Both";

	[Token(Token = "0x4001A64")]
	private const string OBJ_NAME_EAR = "Ear";

	[Token(Token = "0x4001A65")]
	private const string OBJ_NAME_DISTORTION = "Distortion";

	[Token(Token = "0x4001A66")]
	private const string OBJ_NAME_RETICLE = "Reticle";

	[Token(Token = "0x4001A67")]
	private const string OBJ_NAME_LOADING = "Loading";

	[Token(Token = "0x4001A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public WaveVR_Camera centerWVRCamera;

	[Token(Token = "0x4001A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public WaveVR_Camera lefteye;

	[Token(Token = "0x4001A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public WaveVR_Camera righteye;

	[Token(Token = "0x4001A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WaveVR_Camera botheyes;

	[Token(Token = "0x4001A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public WaveVR_Distortion distortion;

	[Token(Token = "0x4001A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject loadingCanvas;

	[Token(Token = "0x4001A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public GameObject ear;

	[Token(Token = "0x4001A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6B64", Offset = "0x5C6B64")]
	private bool useLoadingCanvas;

	[Token(Token = "0x4001A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6BAC", Offset = "0x5C6BAC")]
	private Color loadingBlockerColor;

	[Token(Token = "0x4001A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6BF4", Offset = "0x5C6BF4")]
	private TextureManager <textureManager>k__BackingField;

	[Token(Token = "0x4001A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int globalOrigin;

	[Token(Token = "0x4001A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int globalPreferredStereoRenderingPath;

	[Token(Token = "0x4001A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6C04", Offset = "0x5C6C04")]
	private ColorSpace <QSColorSpace>k__BackingField;

	[Token(Token = "0x4001A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public WVR_PoseOriginModel _origin;

	[Token(Token = "0x4001A76")]
	private const string WVRSinglePassDeviceName = "mockhmd";

	[Token(Token = "0x4001A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine renderLooperCoroutine;

	[Token(Token = "0x4001A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private WaitForEndOfFrame cachedWaitForEndOfFrame;

	[Token(Token = "0x4001A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isPartialTexture;

	[Token(Token = "0x4001A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6C14", Offset = "0x5C6C14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6C14", Offset = "0x5C6C14")]
	private float pixelDensity;

	[Token(Token = "0x4001A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6C78", Offset = "0x5C6C78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6C78", Offset = "0x5C6C78")]
	private float overDraw;

	[Token(Token = "0x4001A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float resolutionScale;

	[Token(Token = "0x4001A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly Rect fullViewport;

	[Token(Token = "0x4001A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rect drawViewport;

	[Token(Token = "0x4001A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WVR_TextureParams_t[] textureParams;

	[Token(Token = "0x4001A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool previousInputFocus;

	[Token(Token = "0x4001A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6CC8", Offset = "0x5C6CC8")]
	public bool needTimeControl;

	[Token(Token = "0x4001A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly WVR_RenderFoveationParams[] foveationParams;

	[Token(Token = "0x4001A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static RenderThreadContext contextRTOnly;

	[Token(Token = "0x4001A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly RenderThreadSyncObject RenderCommandRenderEvent;

	[Token(Token = "0x4001A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly RenderThreadSyncObject RenderCommandBeforeEyeTemplate;

	[Token(Token = "0x4001A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly RenderThreadSyncObject RenderCommandAfterEyeTemplate;

	[Token(Token = "0x4001A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly RenderThreadSyncObject[] RenderCommandBeforeEye;

	[Token(Token = "0x4001A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static readonly RenderThreadSyncObject[] RenderCommandAfterEye;

	[Token(Token = "0x4001A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static WVR_PoseState_t poseUsedOnSubmit;

	[Token(Token = "0x4001A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private static WVR_SubmitExtend submitExtendFlag;

	[Token(Token = "0x1700009C")]
	public static WaveVR_Render Instance
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x6E0184", Offset = "0x6E0184", VA = "0x6E0184")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public bool IsGraphicReady
	{
		[Token(Token = "0x600124C")]
		[Address(RVA = "0x705050", Offset = "0x705050", VA = "0x705050")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700009E")]
	public uint recommendedWidth
	{
		[Token(Token = "0x600124D")]
		[Address(RVA = "0x7050DC", Offset = "0x7050DC", VA = "0x7050DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE288", Offset = "0x5CE288")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x7050E4", Offset = "0x7050E4", VA = "0x7050E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE298", Offset = "0x5CE298")]
		private set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public uint recommendedHeight
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x7050EC", Offset = "0x7050EC", VA = "0x7050EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2A8", Offset = "0x5CE2A8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001250")]
		[Address(RVA = "0x7050F4", Offset = "0x7050F4", VA = "0x7050F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2B8", Offset = "0x5CE2B8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public float sceneWidth
	{
		[Token(Token = "0x6001251")]
		[Address(RVA = "0x7050FC", Offset = "0x7050FC", VA = "0x7050FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2C8", Offset = "0x5CE2C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001252")]
		[Address(RVA = "0x705104", Offset = "0x705104", VA = "0x705104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2D8", Offset = "0x5CE2D8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float sceneHeight
	{
		[Token(Token = "0x6001253")]
		[Address(RVA = "0x70510C", Offset = "0x70510C", VA = "0x70510C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2E8", Offset = "0x5CE2E8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001254")]
		[Address(RVA = "0x705114", Offset = "0x705114", VA = "0x705114")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE2F8", Offset = "0x5CE2F8")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public float[] projRawL
	{
		[Token(Token = "0x6001255")]
		[Address(RVA = "0x70511C", Offset = "0x70511C", VA = "0x70511C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE308", Offset = "0x5CE308")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001256")]
		[Address(RVA = "0x705124", Offset = "0x705124", VA = "0x705124")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE318", Offset = "0x5CE318")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public float[] projRawR
	{
		[Token(Token = "0x6001257")]
		[Address(RVA = "0x70512C", Offset = "0x70512C", VA = "0x70512C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE328", Offset = "0x5CE328")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001258")]
		[Address(RVA = "0x705134", Offset = "0x705134", VA = "0x705134")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE338", Offset = "0x5CE338")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public WaveVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x6001259")]
		[Address(RVA = "0x70513C", Offset = "0x70513C", VA = "0x70513C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x705144", Offset = "0x705144", VA = "0x705144")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public StereoRenderingPath acturalStereoRenderingPath
	{
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x70514C", Offset = "0x70514C", VA = "0x70514C")]
		get
		{
			return default(StereoRenderingPath);
		}
	}

	[Token(Token = "0x170000A6")]
	public bool IsSinglePass
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x705154", Offset = "0x705154", VA = "0x705154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE348", Offset = "0x5CE348")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x70515C", Offset = "0x70515C", VA = "0x70515C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE358", Offset = "0x5CE358")]
		private set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public bool isExpanded
	{
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x705164", Offset = "0x705164", VA = "0x705164")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000A8")]
	public Camera centerCamera
	{
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x7054AC", Offset = "0x7054AC", VA = "0x7054AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000A9")]
	public TextureManager textureManager
	{
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x705564", Offset = "0x705564", VA = "0x705564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE368", Offset = "0x5CE368")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x70556C", Offset = "0x70556C", VA = "0x70556C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE378", Offset = "0x5CE378")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D68E0", Offset = "0x5D68E0")]
	public ColorSpace QSColorSpace
	{
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x705574", Offset = "0x705574", VA = "0x705574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE388", Offset = "0x5CE388")]
		get
		{
			return default(ColorSpace);
		}
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x70557C", Offset = "0x70557C", VA = "0x70557C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE398", Offset = "0x5CE398")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public WVR_PoseOriginModel origin
	{
		[Token(Token = "0x6001265")]
		[Address(RVA = "0x705584", Offset = "0x705584", VA = "0x705584")]
		get
		{
			return default(WVR_PoseOriginModel);
		}
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x70558C", Offset = "0x70558C", VA = "0x70558C")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public float PixelDensity
	{
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x70CC28", Offset = "0x70CC28", VA = "0x70CC28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AD")]
	public float OverDraw
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x70CC30", Offset = "0x70CC30", VA = "0x70CC30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AE")]
	public float ResolutionScale
	{
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x70CC38", Offset = "0x70CC38", VA = "0x70CC38")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600125E")]
	public T GetComponentFromChildren<T>(string name)
	{
		return (T)null;
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x7070D4", Offset = "0x7070D4", VA = "0x7070D4")]
	public static void InitializeGraphic([Optional] RenderThreadSynchronizer synchronizer)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x705594", Offset = "0x705594", VA = "0x705594")]
	public void OnIpdChanged(params object[] args)
	{
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x7073A0", Offset = "0x7073A0", VA = "0x7073A0")]
	public static bool IsVRSinglePassBuildTimeSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x7073A8", Offset = "0x7073A8", VA = "0x7073A8")]
	private bool checkVRSinglePassSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x707CAC", Offset = "0x707CAC", VA = "0x707CAC")]
	private void SwitchDeviceView(bool enableSinglepass)
	{
	}

	[Token(Token = "0x600126C")]
	[Address(RVA = "0x707CCC", Offset = "0x707CCC", VA = "0x707CCC")]
	private void SwitchKeyword(bool enable)
	{
	}

	[Token(Token = "0x600126D")]
	[Address(RVA = "0x707D70", Offset = "0x707D70", VA = "0x707D70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x7084B0", Offset = "0x7084B0", VA = "0x7084B0")]
	private void enableRenderLoop(bool start)
	{
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x7085AC", Offset = "0x7085AC", VA = "0x7085AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x7089DC", Offset = "0x7089DC", VA = "0x7089DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x708E30", Offset = "0x708E30", VA = "0x708E30")]
	private static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x6F5F68", Offset = "0x6F5F68", VA = "0x6F5F68")]
	public static void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x70A320", Offset = "0x70A320", VA = "0x70A320")]
	private static bool checkSurfaceChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x70A518", Offset = "0x70A518", VA = "0x70A518")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x70A8A8", Offset = "0x70A8A8", VA = "0x70A8A8")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x70A960", Offset = "0x70A960", VA = "0x70A960")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x70AA08", Offset = "0x70AA08", VA = "0x70AA08")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x70AAD4", Offset = "0x70AAD4", VA = "0x70AAD4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001279")]
	[Address(RVA = "0x70B0D8", Offset = "0x70B0D8", VA = "0x70B0D8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600127A")]
	[Address(RVA = "0x708524", Offset = "0x708524", VA = "0x708524")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CE3A8", Offset = "0x5CE3A8")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x600127B")]
	[Address(RVA = "0x70B318", Offset = "0x70B318", VA = "0x70B318")]
	private void RenderCycle()
	{
	}

	[Token(Token = "0x600127C")]
	[Address(RVA = "0x70CABC", Offset = "0x70CABC", VA = "0x70CABC")]
	private void GetSubmitTextureParams(WVR_Eye eye, IntPtr texture, [Out] WVR_TextureParams_t[] textureParams, ref WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x6001280")]
	[Address(RVA = "0x707284", Offset = "0x707284", VA = "0x707284")]
	private void UpdateViewports()
	{
	}

	[Token(Token = "0x6001281")]
	[Address(RVA = "0x70CC40", Offset = "0x70CC40", VA = "0x70CC40")]
	public void SetResolutionScale(float scale)
	{
	}

	[Token(Token = "0x6001282")]
	[Address(RVA = "0x70B700", Offset = "0x70B700", VA = "0x70B700")]
	private void RenderEyeBoth(WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6001283")]
	[Address(RVA = "0x70BED8", Offset = "0x70BED8", VA = "0x70BED8")]
	private void RenderEye(WaveVR_Camera wvrCamera, WVR_Eye eye)
	{
	}

	[Token(Token = "0x6001284")]
	[Address(RVA = "0x70CE9C", Offset = "0x70CE9C", VA = "0x70CE9C")]
	private static void AddRaycaster(GameObject obj)
	{
	}

	[Token(Token = "0x6001285")]
	[Address(RVA = "0x70D158", Offset = "0x70D158", VA = "0x70D158")]
	private WaveVR_Camera CreateCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x6001286")]
	[Address(RVA = "0x70DCC8", Offset = "0x70DCC8", VA = "0x70DCC8")]
	private WaveVR_Camera CreateEyeBoth()
	{
		return null;
	}

	[Token(Token = "0x6001287")]
	[Address(RVA = "0x71019C", Offset = "0x71019C", VA = "0x71019C")]
	private WaveVR_Camera CreateEye(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x6001288")]
	[Address(RVA = "0x710E90", Offset = "0x710E90", VA = "0x710E90")]
	private void createLoadingBlack()
	{
	}

	[Token(Token = "0x6001289")]
	[Address(RVA = "0x7088F0", Offset = "0x7088F0", VA = "0x7088F0")]
	private void setLoadingCanvas(bool enabled)
	{
	}

	[Token(Token = "0x600128A")]
	[Address(RVA = "0x6F8AC0", Offset = "0x6F8AC0", VA = "0x6F8AC0")]
	public static void Expand(WaveVR_Render head)
	{
	}

	[Token(Token = "0x600128B")]
	[Address(RVA = "0x7113D8", Offset = "0x7113D8", VA = "0x7113D8")]
	public static void Collapse(WaveVR_Render head)
	{
	}

	[Token(Token = "0x600128C")]
	[Address(RVA = "0x710D54", Offset = "0x710D54", VA = "0x710D54")]
	private float GetFieldOfView(float[] projRaw)
	{
		return default(float);
	}

	[Token(Token = "0x600128D")]
	[Address(RVA = "0x7119B8", Offset = "0x7119B8", VA = "0x7119B8")]
	private static float[] GetEditorProjectionRaw(float fov, float width, float height)
	{
		return null;
	}

	[Token(Token = "0x600128E")]
	[Address(RVA = "0x711BCC", Offset = "0x711BCC", VA = "0x711BCC")]
	public static void debugLogMatrix(Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x600128F")]
	[Address(RVA = "0x70EF2C", Offset = "0x70EF2C", VA = "0x70EF2C")]
	private static Matrix4x4 MakeCullingProjectionMatrix(float[] projRawL, float[] projRawR, float near, float far, Vector3 leftEyePosition, Vector3 rightEyePosition, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001290")]
	[Address(RVA = "0x70ECF8", Offset = "0x70ECF8", VA = "0x70ECF8")]
	private static Matrix4x4 GetProjection(float[] projRaw, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001291")]
	[Address(RVA = "0x712B9C", Offset = "0x712B9C", VA = "0x712B9C")]
	public static Matrix4x4 MakeProjection(float l, float r, float t, float b, float n, float f, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x6001292")]
	[Address(RVA = "0x70C754", Offset = "0x70C754", VA = "0x70C754")]
	private void TimeControl()
	{
	}

	[Token(Token = "0x6001293")]
	[Address(RVA = "0x70CCE0", Offset = "0x70CCE0", VA = "0x70CCE0")]
	public void SafeExecuteRenderEyeCallback(RenderCallbackWithEyeAndCamera multi, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6001294")]
	[Address(RVA = "0x712DC0", Offset = "0x712DC0", VA = "0x712DC0")]
	public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality peripheralQuality)
	{
	}

	[Token(Token = "0x6001295")]
	[Address(RVA = "0x712F94", Offset = "0x712F94", VA = "0x712F94")]
	public static void SetPoseUsedOnSubmit(WVR_PoseState_t pose)
	{
	}

	[Token(Token = "0x6001296")]
	[Address(RVA = "0x71305C", Offset = "0x71305C", VA = "0x71305C")]
	public static void ResetPoseUsedOnSubmit()
	{
	}

	[Token(Token = "0x6001297")]
	[Address(RVA = "0x7130EC", Offset = "0x7130EC", VA = "0x7130EC")]
	public static void SetSubmitExtendedFlag(WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x6001298")]
	[Address(RVA = "0x71317C", Offset = "0x71317C", VA = "0x71317C")]
	public WaveVR_Render()
	{
	}

	[Token(Token = "0x600129A")]
	[Address(RVA = "0x713A10", Offset = "0x713A10", VA = "0x713A10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE420", Offset = "0x5CE420")]
	private void <Start>b__110_0(RenderCallback a)
	{
	}

	[Token(Token = "0x600129B")]
	[Address(RVA = "0x713A44", Offset = "0x713A44", VA = "0x713A44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE430", Offset = "0x5CE430")]
	private void <RenderLoop>b__121_0(RenderCallback a)
	{
	}

	[Token(Token = "0x600129C")]
	[Address(RVA = "0x713A78", Offset = "0x713A78", VA = "0x713A78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE440", Offset = "0x5CE440")]
	private void <RenderLoop>b__121_1(RenderCallback a)
	{
	}

	[Token(Token = "0x600129D")]
	[Address(RVA = "0x713AAC", Offset = "0x713AAC", VA = "0x713AAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE450", Offset = "0x5CE450")]
	private void <RenderCycle>b__122_0(RenderCallback a)
	{
	}
}
[Token(Token = "0x200022E")]
public class WaveVR_RenderMask : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	private class Data
	{
		[Token(Token = "0x4002AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Eye eye;

		[Token(Token = "0x4002AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera camera;

		[Token(Token = "0x4002AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Camera wvrCamera;

		[Token(Token = "0x4002AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x4002AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mesh mesh;

		[Token(Token = "0x6002751")]
		[Address(RVA = "0x23B3FAC", Offset = "0x23B3FAC", VA = "0x23B3FAC")]
		public Data()
		{
		}
	}

	[Token(Token = "0x20005A0")]
	public delegate void BeforeCreateMaskCommandBuffer(WaveVR_RenderMask renderMask);

	[Token(Token = "0x20005A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DCC", Offset = "0x5C2DCC")]
	private sealed class <Initialization>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4002AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4002ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4002ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_RenderMask <>4__this;

		[Token(Token = "0x4002ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private WaveVR_Render <render>5__2;

		[Token(Token = "0x17000312")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002759")]
			[Address(RVA = "0x23B7AA8", Offset = "0x23B7AA8", VA = "0x23B7AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000313")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600275B")]
			[Address(RVA = "0x23B7B38", Offset = "0x23B7B38", VA = "0x23B7B38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002756")]
		[Address(RVA = "0x23B592C", Offset = "0x23B592C", VA = "0x23B592C")]
		[DebuggerHidden]
		public <Initialization>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002757")]
		[Address(RVA = "0x23B75D4", Offset = "0x23B75D4", VA = "0x23B75D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002758")]
		[Address(RVA = "0x23B75D8", Offset = "0x23B75D8", VA = "0x23B75D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600275A")]
		[Address(RVA = "0x23B7AB0", Offset = "0x23B7AB0", VA = "0x23B7AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4001A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x4001A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private List<Data> data;

	[Token(Token = "0x4001A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool isGraphicReady;

	[Token(Token = "0x4001A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool isCameraReady;

	[Token(Token = "0x4001A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Shader renderMaskShader;

	[Token(Token = "0x4001A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material renderMaskMaterial;

	[Token(Token = "0x4001A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Mesh renderMaskMeshLeft;

	[Token(Token = "0x4001A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Mesh renderMaskMeshRight;

	[Token(Token = "0x4001A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Mesh renderMaskMeshBoth;

	[Token(Token = "0x4001A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color32 color;

	[Token(Token = "0x4001A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public BeforeCreateMaskCommandBuffer beforeCreateMaskCommandBuffer;

	[Token(Token = "0x600129E")]
	[Address(RVA = "0x23B37B0", Offset = "0x23B37B0", VA = "0x23B37B0")]
	private bool CheckCameras()
	{
		return default(bool);
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x23B39A0", Offset = "0x23B39A0", VA = "0x23B39A0")]
	private bool CheckCommandBuffers()
	{
		return default(bool);
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x23B3AF4", Offset = "0x23B3AF4", VA = "0x23B3AF4")]
	private void PrepareCameras(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x23B3FD8", Offset = "0x23B3FD8", VA = "0x23B3FD8")]
	private void MyPreCull(Camera cam)
	{
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x23B4C94", Offset = "0x23B4C94", VA = "0x23B4C94")]
	private void MyPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x23B50B4", Offset = "0x23B50B4", VA = "0x23B50B4")]
	private void OnConfigurationChanged(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x23B50B8", Offset = "0x23B50B8", VA = "0x23B50B8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60012A5")]
	[Address(RVA = "0x23B5304", Offset = "0x23B5304", VA = "0x23B5304")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60012A6")]
	[Address(RVA = "0x23B58A0", Offset = "0x23B58A0", VA = "0x23B58A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CE460", Offset = "0x5CE460")]
	private IEnumerator Initialization()
	{
		return null;
	}

	[Token(Token = "0x60012A7")]
	[Address(RVA = "0x23B594C", Offset = "0x23B594C", VA = "0x23B594C")]
	public void SetMaskColor(Color32 c)
	{
	}

	[Token(Token = "0x60012A8")]
	[Address(RVA = "0x23B5A6C", Offset = "0x23B5A6C", VA = "0x23B5A6C")]
	private Mesh GetStencilMesh(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x60012A9")]
	[Address(RVA = "0x23B661C", Offset = "0x23B661C", VA = "0x23B661C")]
	private Mesh GetEyeBothMesh(Mesh l, Mesh r)
	{
		return null;
	}

	[Token(Token = "0x60012AA")]
	[Address(RVA = "0x23B3FFC", Offset = "0x23B3FFC", VA = "0x23B3FFC")]
	private void createMaskCommandBuffer()
	{
	}

	[Token(Token = "0x60012AB")]
	[Address(RVA = "0x23B5054", Offset = "0x23B5054", VA = "0x23B5054")]
	private void addRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x60012AC")]
	[Address(RVA = "0x23B4E70", Offset = "0x23B4E70", VA = "0x23B4E70")]
	private void removeRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x60012AD")]
	[Address(RVA = "0x23B5810", Offset = "0x23B5810", VA = "0x23B5810")]
	private void cleanData()
	{
	}

	[Token(Token = "0x60012AE")]
	[Address(RVA = "0x23B6C50", Offset = "0x23B6C50", VA = "0x23B6C50")]
	public WaveVR_RenderMask()
	{
	}

	[Token(Token = "0x60012B0")]
	[Address(RVA = "0x23B6D7C", Offset = "0x23B6D7C", VA = "0x23B6D7C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE4D8", Offset = "0x5CE4D8")]
	private void <createMaskCommandBuffer>b__25_0(BeforeCreateMaskCommandBuffer a)
	{
	}
}
[Token(Token = "0x200022F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1890", Offset = "0x5C1890")]
public class WaveVR_Reticle : MonoBehaviour
{
	[Token(Token = "0x4001A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool ListenToDevice;

	[Token(Token = "0x4001A97")]
	private const string LOG_TAG = "WaveVR_Reticle";

	[Token(Token = "0x4001A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4001A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int reticleSegments;

	[Token(Token = "0x4001A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x4001A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color reticleColor;

	[Token(Token = "0x4001A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool colorFlickerPerSecond;

	[Token(Token = "0x4001A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool deepeningColorRotation;

	[Token(Token = "0x4001A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int rotationSpeed;

	[Token(Token = "0x4001A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float reticleInnerDiameter;

	[Token(Token = "0x4001AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float reticleOuterDiameter;

	[Token(Token = "0x4001AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float interactObjInnerDiameter;

	[Token(Token = "0x4001AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float interactObjOuterDiameter;

	[Token(Token = "0x4001AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float kReticleDistanceMax;

	[Token(Token = "0x4001AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material materialComp;

	[Token(Token = "0x4001AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Mesh mesh;

	[Token(Token = "0x4001AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float reticleDistanceInMeters;

	[Token(Token = "0x4001AA7")]
	private const float kReticleDistanceMin = 1f;

	[Token(Token = "0x4001AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float reticleInnerAngle;

	[Token(Token = "0x4001AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float reticleOuterAngle;

	[Token(Token = "0x4001AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float kReticleMinInnerAngle;

	[Token(Token = "0x4001AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float kReticleMinOuterAngle;

	[Token(Token = "0x4001AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float kReticleGrowthInnerAngle;

	[Token(Token = "0x4001AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float kReticleGrowthOuterAngle;

	[Token(Token = "0x4001AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Color colorFactor;

	[Token(Token = "0x4001AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float colorFlickerTime;

	[Token(Token = "0x4001AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float progressTime;

	[Token(Token = "0x4001AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool isTriggerProgress;

	[Token(Token = "0x4001AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int rotSpeedLimit;

	[Token(Token = "0x4001AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool enabledReticle;

	[Token(Token = "0x4001AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool meshIsCreated;

	[Token(Token = "0x4001AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int internalRotationSpeed;

	[Token(Token = "0x4001AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int colorIter;

	[Token(Token = "0x4001AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float[] colorRotation;

	[Token(Token = "0x4001AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int[] rotSpeedBound;

	[Token(Token = "0x4001AB9")]
	private const float reticleInnerDiameterMin = 0f;

	[Token(Token = "0x4001ABA")]
	private const float reticleInnerDiameterMax = 0.0002f;

	[Token(Token = "0x4001ABB")]
	private const float reticleOuterDiameterMin = 0.005f;

	[Token(Token = "0x4001ABC")]
	private const float reticleOuterDiameterMax = 0.01f;

	[Token(Token = "0x4001ABD")]
	private const float interactObjInnerDiameterMin = 0.015f;

	[Token(Token = "0x4001ABE")]
	private const float interactObjInnerDiameterMax = 0.022f;

	[Token(Token = "0x4001ABF")]
	private const float interactObjOuterDiameterMin = 0.026f;

	[Token(Token = "0x4001AC0")]
	private const float interactObjOuterDiameterMax = 0.035f;

	[Token(Token = "0x4001AC1")]
	private const float kReticleDistanceValidateMax = 10f;

	[Token(Token = "0x60012B1")]
	[Address(RVA = "0x23BFDCC", Offset = "0x23BFDCC", VA = "0x23BFDCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60012B2")]
	[Address(RVA = "0x23C1EE8", Offset = "0x23C1EE8", VA = "0x23C1EE8")]
	private void setReticleAngle()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x23C1FF4", Offset = "0x23C1FF4", VA = "0x23C1FF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x23C1DD4", Offset = "0x23C1DD4", VA = "0x23C1DD4")]
	private void initialReticle()
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x23C1EB0", Offset = "0x23C1EB0", VA = "0x23C1EB0")]
	private void removeReticle()
	{
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x23C2DE8", Offset = "0x23C2DE8", VA = "0x23C2DE8")]
	private void CreateGazePointer()
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x23C2B28", Offset = "0x23C2B28", VA = "0x23C2B28")]
	private void UpdateRotSpeedBound(int speedSetting)
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x23C3254", Offset = "0x23C3254", VA = "0x23C3254")]
	public void ShowReticle()
	{
	}

	[Token(Token = "0x60012B9")]
	[Address(RVA = "0x23C3260", Offset = "0x23C3260", VA = "0x23C3260")]
	public void RemoveReticle()
	{
	}

	[Token(Token = "0x60012BA")]
	[Address(RVA = "0x23C326C", Offset = "0x23C326C", VA = "0x23C326C")]
	public void SetColorFlicker(bool switchOn)
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x23C3274", Offset = "0x23C3274", VA = "0x23C3274")]
	public bool GetColorFlicker()
	{
		return default(bool);
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x23C327C", Offset = "0x23C327C", VA = "0x23C327C")]
	public void OnGazeEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x23C33D8", Offset = "0x23C33D8", VA = "0x23C33D8")]
	public void OnGazeStay(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x23C3408", Offset = "0x23C3408", VA = "0x23C3408")]
	public void OnGazeExit(Camera camera, GameObject target)
	{
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x23C3420", Offset = "0x23C3420", VA = "0x23C3420")]
	public void OnGazeTriggerStart(Camera camera)
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x23C3424", Offset = "0x23C3424", VA = "0x23C3424")]
	public void OnGazeTriggerEnd(Camera camera)
	{
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x23C3428", Offset = "0x23C3428", VA = "0x23C3428")]
	public void GetPointerRadius(out float innerRadius, out float outerRadius)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x23C34F8", Offset = "0x23C34F8", VA = "0x23C34F8")]
	public void setProgressBarTime(float time)
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x23C3500", Offset = "0x23C3500", VA = "0x23C3500")]
	public float getReticleCurrentDistance()
	{
		return default(float);
	}

	[Token(Token = "0x60012C4")]
	[Address(RVA = "0x23C3508", Offset = "0x23C3508", VA = "0x23C3508")]
	public void triggerProgressBar(bool switchOn)
	{
	}

	[Token(Token = "0x60012C5")]
	[Address(RVA = "0x23C32AC", Offset = "0x23C32AC", VA = "0x23C32AC")]
	private void SetGazeTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x60012C6")]
	[Address(RVA = "0x23C35C0", Offset = "0x23C35C0", VA = "0x23C35C0")]
	public void SetReticleColor(Color reticle_color)
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x23BFE20", Offset = "0x23BFE20", VA = "0x23BFE20")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x23C3F34", Offset = "0x23C3F34", VA = "0x23C3F34")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x23C3660", Offset = "0x23C3660", VA = "0x23C3660")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x23C38AC", Offset = "0x23C38AC", VA = "0x23C38AC")]
	private static bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x23C1CE4", Offset = "0x23C1CE4", VA = "0x23C1CE4")]
	private void Validate()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x23C3B1C", Offset = "0x23C3B1C", VA = "0x23C3B1C")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x23C4180", Offset = "0x23C4180", VA = "0x23C4180")]
	public WaveVR_Reticle()
	{
	}
}
[Token(Token = "0x2000230")]
public class WaveVR_Screenshot
{
	[Token(Token = "0x4001AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x60012CE")]
	[Address(RVA = "0x23C4258", Offset = "0x23C4258", VA = "0x23C4258")]
	private static void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60012CF")]
	[Address(RVA = "0x23C4328", Offset = "0x23C4328", VA = "0x23C4328")]
	public static bool requestScreenshot(WVR_ScreenshotMode mode, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x60012D0")]
	[Address(RVA = "0x23C47BC", Offset = "0x23C47BC", VA = "0x23C47BC")]
	public WaveVR_Screenshot()
	{
	}
}
[Token(Token = "0x2000231")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C1908", Offset = "0x5C1908")]
public class WaveVR_TrackedButtons : MonoBehaviour
{
	[Token(Token = "0x20005A2")]
	public struct ClickedEventArgs
	{
		[Token(Token = "0x4002ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType device;

		[Token(Token = "0x4002ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint flags;

		[Token(Token = "0x4002ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 axis;
	}

	[Token(Token = "0x20005A3")]
	public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);

	[Token(Token = "0x4001AC3")]
	public const string LOG_TAG = "WaveVR_TrackedButtons";

	[Token(Token = "0x4001AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong Input_Mask_Menu;

	[Token(Token = "0x4001AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ulong Input_Mask_Grip;

	[Token(Token = "0x4001AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ulong Input_Mask_DPad_Left;

	[Token(Token = "0x4001AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ulong Input_Mask_DPad_Up;

	[Token(Token = "0x4001AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ulong Input_Mask_DPad_Right;

	[Token(Token = "0x4001AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ulong Input_Mask_DPad_Down;

	[Token(Token = "0x4001ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static ulong Input_Mask_Volume_Up;

	[Token(Token = "0x4001ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ulong Input_Mask_Volume_Down;

	[Token(Token = "0x4001ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ulong Input_Mask_Hmd_Enter;

	[Token(Token = "0x4001ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static ulong Input_Mask_Touchpad;

	[Token(Token = "0x4001ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static ulong Input_Mask_Trigger;

	[Token(Token = "0x4001ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static ulong Input_Mask_DigitalTrigger;

	[Token(Token = "0x4001AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x4001AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool triggerPressed;

	[Token(Token = "0x4001AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private bool menuPressed;

	[Token(Token = "0x4001AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private bool padPressed;

	[Token(Token = "0x4001AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private bool gripPressed;

	[Token(Token = "0x4001AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private bool padTouched;

	[Token(Token = "0x4001AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	private bool hmdEnterPressed;

	[Token(Token = "0x4001AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private uint inputMask;

	[Token(Token = "0x14000013")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x23CA834", Offset = "0x23CA834", VA = "0x23CA834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE4E8", Offset = "0x5CE4E8")]
		add
		{
		}
		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x23CA940", Offset = "0x23CA940", VA = "0x23CA940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE4F8", Offset = "0x5CE4F8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000014")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x60012D4")]
		[Address(RVA = "0x23CAA4C", Offset = "0x23CAA4C", VA = "0x23CAA4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE508", Offset = "0x5CE508")]
		add
		{
		}
		[Token(Token = "0x60012D5")]
		[Address(RVA = "0x23CAB58", Offset = "0x23CAB58", VA = "0x23CAB58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE518", Offset = "0x5CE518")]
		remove
		{
		}
	}

	[Token(Token = "0x14000015")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x60012D6")]
		[Address(RVA = "0x23CAC64", Offset = "0x23CAC64", VA = "0x23CAC64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE528", Offset = "0x5CE528")]
		add
		{
		}
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x23CAD70", Offset = "0x23CAD70", VA = "0x23CAD70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE538", Offset = "0x5CE538")]
		remove
		{
		}
	}

	[Token(Token = "0x14000016")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x23CAE7C", Offset = "0x23CAE7C", VA = "0x23CAE7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE548", Offset = "0x5CE548")]
		add
		{
		}
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x23CAF88", Offset = "0x23CAF88", VA = "0x23CAF88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE558", Offset = "0x5CE558")]
		remove
		{
		}
	}

	[Token(Token = "0x14000017")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x23CB094", Offset = "0x23CB094", VA = "0x23CB094")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE568", Offset = "0x5CE568")]
		add
		{
		}
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x23CB1A0", Offset = "0x23CB1A0", VA = "0x23CB1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE578", Offset = "0x5CE578")]
		remove
		{
		}
	}

	[Token(Token = "0x14000018")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x60012DC")]
		[Address(RVA = "0x23CB2AC", Offset = "0x23CB2AC", VA = "0x23CB2AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE588", Offset = "0x5CE588")]
		add
		{
		}
		[Token(Token = "0x60012DD")]
		[Address(RVA = "0x23CB3B8", Offset = "0x23CB3B8", VA = "0x23CB3B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE598", Offset = "0x5CE598")]
		remove
		{
		}
	}

	[Token(Token = "0x14000019")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x60012DE")]
		[Address(RVA = "0x23CB4C4", Offset = "0x23CB4C4", VA = "0x23CB4C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5A8", Offset = "0x5CE5A8")]
		add
		{
		}
		[Token(Token = "0x60012DF")]
		[Address(RVA = "0x23CB5D0", Offset = "0x23CB5D0", VA = "0x23CB5D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5B8", Offset = "0x5CE5B8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001A")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x60012E0")]
		[Address(RVA = "0x23CB6DC", Offset = "0x23CB6DC", VA = "0x23CB6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5C8", Offset = "0x5CE5C8")]
		add
		{
		}
		[Token(Token = "0x60012E1")]
		[Address(RVA = "0x23CB7E8", Offset = "0x23CB7E8", VA = "0x23CB7E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5D8", Offset = "0x5CE5D8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001B")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x23CB8F4", Offset = "0x23CB8F4", VA = "0x23CB8F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5E8", Offset = "0x5CE5E8")]
		add
		{
		}
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x23CBA00", Offset = "0x23CBA00", VA = "0x23CBA00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE5F8", Offset = "0x5CE5F8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001C")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x23CBB0C", Offset = "0x23CBB0C", VA = "0x23CBB0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE608", Offset = "0x5CE608")]
		add
		{
		}
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x23CBC18", Offset = "0x23CBC18", VA = "0x23CBC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE618", Offset = "0x5CE618")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001D")]
	public event ClickedEventHandler HmdEnterClicked
	{
		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x23CBD24", Offset = "0x23CBD24", VA = "0x23CBD24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE628", Offset = "0x5CE628")]
		add
		{
		}
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x23CBE30", Offset = "0x23CBE30", VA = "0x23CBE30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE638", Offset = "0x5CE638")]
		remove
		{
		}
	}

	[Token(Token = "0x1400001E")]
	public event ClickedEventHandler HmdEnterUnclicked
	{
		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x23CBF3C", Offset = "0x23CBF3C", VA = "0x23CBF3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE648", Offset = "0x5CE648")]
		add
		{
		}
		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x23CC048", Offset = "0x23CC048", VA = "0x23CC048")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE658", Offset = "0x5CE658")]
		remove
		{
		}
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x23CC154", Offset = "0x23CC154", VA = "0x23CC154", Slot = "4")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x23CCA9C", Offset = "0x23CCA9C", VA = "0x23CCA9C", Slot = "5")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012EC")]
	[Address(RVA = "0x23CCB7C", Offset = "0x23CCB7C", VA = "0x23CCB7C", Slot = "6")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012ED")]
	[Address(RVA = "0x23CCC5C", Offset = "0x23CCC5C", VA = "0x23CCC5C", Slot = "7")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x23CCD3C", Offset = "0x23CCD3C", VA = "0x23CCD3C", Slot = "8")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x23CCE1C", Offset = "0x23CCE1C", VA = "0x23CCE1C", Slot = "9")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x23CCEFC", Offset = "0x23CCEFC", VA = "0x23CCEFC", Slot = "10")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x23CCFDC", Offset = "0x23CCFDC", VA = "0x23CCFDC", Slot = "11")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x23CD0BC", Offset = "0x23CD0BC", VA = "0x23CD0BC", Slot = "12")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x23CD19C", Offset = "0x23CD19C", VA = "0x23CD19C", Slot = "13")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F4")]
	[Address(RVA = "0x23CD27C", Offset = "0x23CD27C", VA = "0x23CD27C", Slot = "14")]
	public virtual void OnHmdEnterClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F5")]
	[Address(RVA = "0x23CD35C", Offset = "0x23CD35C", VA = "0x23CD35C", Slot = "15")]
	public virtual void OnHmdEnterUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x60012F6")]
	[Address(RVA = "0x23CD43C", Offset = "0x23CD43C", VA = "0x23CD43C")]
	private Vector2 GetAxis(WVR_AnalogState_t[] analogArray, WVR_InputId _id, WVR_AnalogType aType, int _count)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60012F7")]
	[Address(RVA = "0x23CDC04", Offset = "0x23CDC04", VA = "0x23CDC04")]
	private void Update()
	{
	}

	[Token(Token = "0x60012F8")]
	[Address(RVA = "0x23CE418", Offset = "0x23CE418", VA = "0x23CE418")]
	public WaveVR_TrackedButtons()
	{
	}
}
[Token(Token = "0x2000232")]
public static class WaveVR_Utils
{
	[Token(Token = "0x20005A4")]
	public enum DegreeField
	{
		[Token(Token = "0x4002AE1")]
		DOF3,
		[Token(Token = "0x4002AE2")]
		DOF6
	}

	[Token(Token = "0x20005A5")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4002AE4")]
		System,
		[Token(Token = "0x4002AE5")]
		Minimum,
		[Token(Token = "0x4002AE6")]
		Medium,
		[Token(Token = "0x4002AE7")]
		Maximum
	}

	[Token(Token = "0x20005A6")]
	public struct WVR_ButtonState_t
	{
		[Token(Token = "0x4002AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong BtnPressed;

		[Token(Token = "0x4002AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong BtnTouched;
	}

	[Token(Token = "0x20005A7")]
	public class OEMConfig
	{
		[Token(Token = "0x4002AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isSetCallback;

		[Token(Token = "0x6002760")]
		[Address(RVA = "0x23D1DF8", Offset = "0x23D1DF8", VA = "0x23D1DF8")]
		public static void OEMConfig_Changed()
		{
		}

		[Token(Token = "0x6002761")]
		[Address(RVA = "0x23D1EFC", Offset = "0x23D1EFC", VA = "0x23D1EFC")]
		public static void initOEMConfig()
		{
		}

		[Token(Token = "0x6002762")]
		[Address(RVA = "0x23C35D0", Offset = "0x23C35D0", VA = "0x23C35D0")]
		public static string getControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x6002763")]
		[Address(RVA = "0x23BAA00", Offset = "0x23BAA00", VA = "0x23BAA00")]
		public static string getBatteryConfig()
		{
			return null;
		}

		[Token(Token = "0x6002764")]
		[Address(RVA = "0x23D2074", Offset = "0x23D2074", VA = "0x23D2074")]
		public static string getSingleBeamEnableConfig()
		{
			return null;
		}

		[Token(Token = "0x6002765")]
		[Address(RVA = "0x23D2104", Offset = "0x23D2104", VA = "0x23D2104")]
		public OEMConfig()
		{
		}
	}

	[Token(Token = "0x20005A8")]
	public class Event
	{
		[Token(Token = "0x20006F8")]
		public delegate void Handler(params object[] args);

		[Token(Token = "0x4002AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEVICE_CONNECTED;

		[Token(Token = "0x4002AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string NEW_POSES;

		[Token(Token = "0x4002AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string AFTER_NEW_POSES;

		[Token(Token = "0x4002AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static string ALL_VREVENT;

		[Token(Token = "0x4002AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string BATTERY_STATUS_UPDATE;

		[Token(Token = "0x4002AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static string CONTROLLER_MODEL_LOADED;

		[Token(Token = "0x4002AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CONTROLLER_MODEL_UNLOADED;

		[Token(Token = "0x4002AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static string PRE_CULL_LEFT;

		[Token(Token = "0x4002AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string PRE_CULL_RIGHT;

		[Token(Token = "0x4002AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static string SWIPE_EVENT;

		[Token(Token = "0x4002AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string SYSTEMFOCUS_CHANGED;

		[Token(Token = "0x4002AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static string INTERACTION_MODE_CHANGED;

		[Token(Token = "0x4002AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string ADAPTIVE_CONTROLLER_READY;

		[Token(Token = "0x4002AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static string RENDER_CONFIGURATION_CHANGED;

		[Token(Token = "0x4002AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5CAD68", Offset = "0x5CAD68")]
		public static string DEVICE_ROLE_CHANGED;

		[Token(Token = "0x4002AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static string DS_ASSETS_NOT_FOUND;

		[Token(Token = "0x4002AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string OEM_CONFIG_CHANGED;

		[Token(Token = "0x4002AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static string DEVICE_STATUS_UPDATE;

		[Token(Token = "0x4002AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string IPD_CHANGED;

		[Token(Token = "0x4002AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private static Dictionary<string, List<Handler>> listeners;

		[Token(Token = "0x6002767")]
		[Address(RVA = "0x23B9E48", Offset = "0x23B9E48", VA = "0x23B9E48")]
		public static void Listen(string message, Handler action)
		{
		}

		[Token(Token = "0x6002768")]
		[Address(RVA = "0x23BA3C8", Offset = "0x23BA3C8", VA = "0x23BA3C8")]
		public static void Remove(string message, Handler action)
		{
		}

		[Token(Token = "0x6002769")]
		[Address(RVA = "0x23BEE5C", Offset = "0x23BEE5C", VA = "0x23BEE5C")]
		public static void Send(string message, params object[] args)
		{
		}

		[Token(Token = "0x600276A")]
		[Address(RVA = "0x23D1B58", Offset = "0x23D1B58", VA = "0x23D1B58")]
		public Event()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005A9")]
	public struct RigidTransform
	{
		[Token(Token = "0x4002AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4002B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x17000314")]
		public static RigidTransform identity
		{
			[Token(Token = "0x600276C")]
			[Address(RVA = "0x23D261C", Offset = "0x23D261C", VA = "0x23D261C")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x600276D")]
		[Address(RVA = "0x5DAB50", Offset = "0x5DAB50", VA = "0x5DAB50")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600276E")]
		[Address(RVA = "0x5DAB88", Offset = "0x5DAB88", VA = "0x5DAB88")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x600276F")]
		[Address(RVA = "0x5DAB90", Offset = "0x5DAB90", VA = "0x5DAB90")]
		public RigidTransform(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x6002770")]
		[Address(RVA = "0x23BE680", Offset = "0x23BE680", VA = "0x23BE680")]
		public static Matrix4x4 toMatrix44(WVR_Matrix4f_t pose, bool glToUnity = true)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002771")]
		[Address(RVA = "0x23D29F8", Offset = "0x23D29F8", VA = "0x23D29F8")]
		public static WVR_Matrix4f_t ToWVRMatrix(Matrix4x4 m, bool unityToGL = true)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6002772")]
		[Address(RVA = "0x5DAC04", Offset = "0x5DAC04", VA = "0x5DAC04")]
		public void update(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x6002773")]
		[Address(RVA = "0x5DAC78", Offset = "0x5DAC78", VA = "0x5DAC78")]
		public void update(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x6002774")]
		[Address(RVA = "0x5DACB0", Offset = "0x5DACB0", VA = "0x5DACB0", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002775")]
		[Address(RVA = "0x5DACB8", Offset = "0x5DACB8", VA = "0x5DACB8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002776")]
		[Address(RVA = "0x23D30BC", Offset = "0x23D30BC", VA = "0x23D30BC")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002777")]
		[Address(RVA = "0x23D31FC", Offset = "0x23D31FC", VA = "0x23D31FC")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002778")]
		[Address(RVA = "0x23D333C", Offset = "0x23D333C", VA = "0x23D333C")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x6002779")]
		[Address(RVA = "0x5DACE8", Offset = "0x5DACE8", VA = "0x5DACE8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x600277A")]
		[Address(RVA = "0x5DACF0", Offset = "0x5DACF0", VA = "0x5DACF0")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600277B")]
		[Address(RVA = "0x5DAD04", Offset = "0x5DAD04", VA = "0x5DAD04")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600277C")]
		[Address(RVA = "0x23D37B0", Offset = "0x23D37B0", VA = "0x23D37B0")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20005AA")]
	public class Trace
	{
		[Token(Token = "0x600277D")]
		[Address(RVA = "0x23D3800", Offset = "0x23D3800", VA = "0x23D3800")]
		public static void BeginSection(string sectionName, bool inRenderThread = true)
		{
		}

		[Token(Token = "0x600277E")]
		[Address(RVA = "0x23D39FC", Offset = "0x23D39FC", VA = "0x23D39FC")]
		public static void EndSection(bool inRenderThread = true)
		{
		}

		[Token(Token = "0x600277F")]
		[Address(RVA = "0x23D3AA8", Offset = "0x23D3AA8", VA = "0x23D3AA8")]
		public Trace()
		{
		}
	}

	[Token(Token = "0x20005AB")]
	private delegate void RenderEventDelegate(int e);

	[Token(Token = "0x20005AC")]
	public delegate void CustomRenderThreadFunc();

	[Token(Token = "0x20005AD")]
	public enum EngineThreadID
	{
		[Token(Token = "0x4002B02")]
		JAVA_THREAD,
		[Token(Token = "0x4002B03")]
		GAME_THREAD,
		[Token(Token = "0x4002B04")]
		RENDER_THREAD,
		[Token(Token = "0x4002B05")]
		WORKER1_THREAD,
		[Token(Token = "0x4002B06")]
		WORKER2_THREAD
	}

	[Token(Token = "0x20005AE")]
	public enum EngineEventID
	{
		[Token(Token = "0x4002B08")]
		ENGINE_EVENT_ID_BEGIN = 40960,
		[Token(Token = "0x4002B09")]
		HMD_CREATE,
		[Token(Token = "0x4002B0A")]
		HMD_INITIAILZED,
		[Token(Token = "0x4002B0B")]
		HMD_RESUME,
		[Token(Token = "0x4002B0C")]
		HMD_PAUSE,
		[Token(Token = "0x4002B0D")]
		HMD_TERMINATED,
		[Token(Token = "0x4002B0E")]
		FIRST_FRAME,
		[Token(Token = "0x4002B0F")]
		FRAME_START,
		[Token(Token = "0x4002B10")]
		FRAME_END,
		[Token(Token = "0x4002B11")]
		UNITY_AWAKE,
		[Token(Token = "0x4002B12")]
		UNITY_ENABLE,
		[Token(Token = "0x4002B13")]
		UNITY_DISABLE,
		[Token(Token = "0x4002B14")]
		UNITY_START,
		[Token(Token = "0x4002B15")]
		UNITY_DESTROY,
		[Token(Token = "0x4002B16")]
		UNITY_APPLICATION_RESUME,
		[Token(Token = "0x4002B17")]
		UNITY_APPLICATION_PAUSE,
		[Token(Token = "0x4002B18")]
		UNITY_APPLICATION_QUIT,
		[Token(Token = "0x4002B19")]
		ENGINE_EVENT_ID_END
	}

	[Token(Token = "0x4001AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string LOG_TAG;

	[Token(Token = "0x4001AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static Queue TraceSessionNameQueue;

	[Token(Token = "0x4001AE6")]
	public const int k_nRenderEventID_SubmitL = 1;

	[Token(Token = "0x4001AE7")]
	public const int k_nRenderEventID_SubmitR = 2;

	[Token(Token = "0x4001AE8")]
	public const int k_nRenderEventID_SubmitBoth = 3;

	[Token(Token = "0x4001AE9")]
	public const int k_nRenderEventID_GraphicInitial = 8;

	[Token(Token = "0x4001AEA")]
	public const int k_nRenderEventID_GraphicShutdown = 9;

	[Token(Token = "0x4001AEB")]
	public const int k_nRenderEventID_RenderEyeL = 256;

	[Token(Token = "0x4001AEC")]
	public const int k_nRenderEventID_RenderEyeR = 257;

	[Token(Token = "0x4001AED")]
	public const int k_nRenderEventID_RenderEyeEndL = 258;

	[Token(Token = "0x4001AEE")]
	public const int k_nRenderEventID_RenderEyeEndR = 259;

	[Token(Token = "0x4001AEF")]
	public const int k_nRenderEventID_RenderEyeBoth = 273;

	[Token(Token = "0x4001AF0")]
	public const int k_nRenderEventID_RenderEyeEndBoth = 274;

	[Token(Token = "0x4001AF1")]
	public const int RENDEREVENTID_INIT_GRAPHIC = 0;

	[Token(Token = "0x4001AF2")]
	public const int RENDEREVENTID_SHUTDOWN_GRAPHIC = 1;

	[Token(Token = "0x4001AF3")]
	public const int RENDEREVENTID_Systrace_BeginSession = 4;

	[Token(Token = "0x4001AF4")]
	public const int RENDEREVENTID_Systrace_EndSession = 5;

	[Token(Token = "0x4001AF5")]
	public const int RENDEREVENTID_StartCamera = 21;

	[Token(Token = "0x4001AF6")]
	public const int RENDEREVENTID_StopCamera = 22;

	[Token(Token = "0x4001AF7")]
	public const int RENDEREVENTID_UpdateCamera = 23;

	[Token(Token = "0x4001AF8")]
	public const int RENDEREVENTID_RenderMaskLeft = 30;

	[Token(Token = "0x4001AF9")]
	public const int RENDEREVENTID_RenderMaskRight = 31;

	[Token(Token = "0x4001AFA")]
	public const int RENDEREVENTID_SinglePassPrepare = 90;

	[Token(Token = "0x4001AFB")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing2x = 92;

	[Token(Token = "0x4001AFC")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing4x = 94;

	[Token(Token = "0x4001AFD")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing8x = 98;

	[Token(Token = "0x4001AFE")]
	public const int RENDEREVENTID_SinglePassBeforeForwardOpaque = 86;

	[Token(Token = "0x4001AFF")]
	public const int RENDEREVENTID_SinglePassPostRender = 87;

	[Token(Token = "0x4001B00")]
	public const int RENDEREVENTID_ExecuteCustomFunction = 45;

	[Token(Token = "0x4001B01")]
	public const int RENDEREVENTID_EditorEmptyOperation = 65536;

	[Token(Token = "0x4001B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static RenderEventDelegate RenderEventHandle;

	[Token(Token = "0x4001B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static IntPtr RenderEventHandlePtr;

	[Token(Token = "0x4001B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static CustomRenderThreadFunc mCustomRenderThreadFunc;

	[Token(Token = "0x60012FA")]
	public static void SafeExecuteAllDelegate<T>(Delegate multi, Action<T> invoker, bool throws = false)
	{
	}

	[Token(Token = "0x60012FB")]
	[Address(RVA = "0x23CF018", Offset = "0x23CF018", VA = "0x23CF018")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x60012FC")]
	[Address(RVA = "0x23BE984", Offset = "0x23BE984", VA = "0x23BE984")]
	public static Quaternion GetRotation(Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60012FD")]
	[Address(RVA = "0x23BE950", Offset = "0x23BE950", VA = "0x23BE950")]
	public static Vector3 GetPosition(Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012FE")]
	[Address(RVA = "0x23BED80", Offset = "0x23BED80", VA = "0x23BED80")]
	public static Vector3 GetScale(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60012FF")]
	[Address(RVA = "0x23CF10C", Offset = "0x23CF10C", VA = "0x23CF10C")]
	public static string GetControllerName(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x23CF544", Offset = "0x23CF544", VA = "0x23CF544")]
	public static void notifyActivityUnityStarted()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6001301")]
	[Address(RVA = "0x23CF660", Offset = "0x23CF660", VA = "0x23CF660")]
	public static extern void NativeRenderEvent(int eventID);

	[PreserveSig]
	[Token(Token = "0x6001302")]
	[Address(RVA = "0x23CF768", Offset = "0x23CF768", VA = "0x23CF768")]
	public static extern void SetColorSpace(int colorspace);

	[PreserveSig]
	[Token(Token = "0x6001303")]
	[Address(RVA = "0x23CF868", Offset = "0x23CF868", VA = "0x23CF868")]
	public static extern void SetSubmitOptionalArgument([Out] WVR_PoseState_t[] poses, int submit_extend_flag);

	[PreserveSig]
	[Token(Token = "0x6001304")]
	[Address(RVA = "0x23CFA50", Offset = "0x23CFA50", VA = "0x23CFA50")]
	public static extern void NativeProcessEngineEvent(uint tID, uint eventID);

	[PreserveSig]
	[Token(Token = "0x6001305")]
	[Address(RVA = "0x23CFB70", Offset = "0x23CFB70", VA = "0x23CFB70")]
	public static extern int IsSinglePassSupported();

	[PreserveSig]
	[Token(Token = "0x6001306")]
	[Address(RVA = "0x23CFC70", Offset = "0x23CFC70", VA = "0x23CFC70")]
	public static extern IntPtr PrepareSinglePassTexture(int antiAliasing, int width, int height);

	[PreserveSig]
	[Token(Token = "0x6001307")]
	[Address(RVA = "0x23CFD98", Offset = "0x23CFD98", VA = "0x23CFD98")]
	public static extern void SinglePassBeforeForwardOpaque();

	[PreserveSig]
	[Token(Token = "0x6001308")]
	[Address(RVA = "0x23CFE70", Offset = "0x23CFE70", VA = "0x23CFE70")]
	public static extern void SinglePassPostRender();

	[PreserveSig]
	[Token(Token = "0x6001309")]
	[Address(RVA = "0x23CFF70", Offset = "0x23CFF70", VA = "0x23CFF70")]
	private static extern void TraceBeginSection(string name);

	[PreserveSig]
	[Token(Token = "0x600130A")]
	[Address(RVA = "0x23D0098", Offset = "0x23D0098", VA = "0x23D0098")]
	private static extern void TraceEndSection();

	[PreserveSig]
	[Token(Token = "0x600130B")]
	[Address(RVA = "0x23B1918", Offset = "0x23B1918", VA = "0x23B1918")]
	public static extern bool WVR_IsATWActive();

	[PreserveSig]
	[Token(Token = "0x600130C")]
	[Address(RVA = "0x23D0190", Offset = "0x23D0190", VA = "0x23D0190")]
	public static extern int WVR_GetNumberOfTextures();

	[PreserveSig]
	[Token(Token = "0x600130D")]
	[Address(RVA = "0x23D0298", Offset = "0x23D0298", VA = "0x23D0298")]
	public static extern IntPtr WVR_StoreRenderTextures(int[] texturesIDs, int size, bool eEye, WVR_TextureTarget target);

	[PreserveSig]
	[Token(Token = "0x600130E")]
	[Address(RVA = "0x23D03D0", Offset = "0x23D03D0", VA = "0x23D03D0")]
	public static extern uint WVR_GetAvailableTextureID(IntPtr queue);

	[PreserveSig]
	[Token(Token = "0x600130F")]
	[Address(RVA = "0x23D04E8", Offset = "0x23D04E8", VA = "0x23D04E8")]
	public static extern bool WVR_IsPresentedOnExternal();

	[PreserveSig]
	[Token(Token = "0x6001310")]
	[Address(RVA = "0x23D05F8", Offset = "0x23D05F8", VA = "0x23D05F8")]
	public static extern int WVR_LoadCriteriaData(string criteriaData);

	[PreserveSig]
	[Token(Token = "0x6001311")]
	[Address(RVA = "0x23D0730", Offset = "0x23D0730", VA = "0x23D0730")]
	public static extern int WVR_StartPerformanceTest(string sceneID);

	[PreserveSig]
	[Token(Token = "0x6001312")]
	[Address(RVA = "0x23D0870", Offset = "0x23D0870", VA = "0x23D0870")]
	public static extern int WVR_EndPerformanceTest(StringBuilder pReport, uint ReportSize);

	[PreserveSig]
	[Token(Token = "0x6001313")]
	[Address(RVA = "0x23D09B8", Offset = "0x23D09B8", VA = "0x23D09B8")]
	public static extern uint WVR_GetPerformanceReportSize();

	[PreserveSig]
	[Token(Token = "0x6001314")]
	[Address(RVA = "0x23D0A90", Offset = "0x23D0A90", VA = "0x23D0A90")]
	public static extern bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[PreserveSig]
	[Token(Token = "0x6001315")]
	[Address(RVA = "0x23B64D0", Offset = "0x23B64D0", VA = "0x23B64D0")]
	public static extern void WVR_GetStencilMesh(WVR_Eye eEye, ref uint vertexCount, ref uint triangleCount, uint floatArrayCount, [In][Out] float[] vertexData, uint intArrayCount, [In][Out] int[] indexData);

	[Token(Token = "0x6001316")]
	[Address(RVA = "0x23CE618", Offset = "0x23CE618", VA = "0x23CE618")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CE678", Offset = "0x5CE678")]
	private static void RenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6001317")]
	[Address(RVA = "0x23D0FF4", Offset = "0x23D0FF4", VA = "0x23D0FF4")]
	private static IntPtr GetFunctionPointerForDelegate(Delegate del)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001318")]
	[Address(RVA = "0x23D1078", Offset = "0x23D1078", VA = "0x23D1078")]
	public static void SendRenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x23B1A14", Offset = "0x23B1A14", VA = "0x23B1A14")]
	public static void IssueEngineEvent(EngineEventID eventID)
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x23D1114", Offset = "0x23D1114", VA = "0x23D1114")]
	public static void IssueEngineEvent(EngineThreadID tID, EngineEventID eventID)
	{
	}
}
namespace Weelco
{
	[Token(Token = "0x2000233")]
	public class MouseCameraRotation : MonoBehaviour
	{
		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6DF4", Offset = "0x5C6DF4")]
		public bool alwaysRotate;

		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool lerpBack;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speedH;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float speedV;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speedL;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float yaw;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float pitch;

		[Token(Token = "0x600131C")]
		[Address(RVA = "0x22FC364", Offset = "0x22FC364", VA = "0x22FC364")]
		private void Start()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0x22FC3D8", Offset = "0x22FC3D8", VA = "0x22FC3D8")]
		private void Update()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0x22FC428", Offset = "0x22FC428", VA = "0x22FC428")]
		private void MouseRotate()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0x22FC540", Offset = "0x22FC540", VA = "0x22FC540")]
		private void LerpBack()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0x22FC7BC", Offset = "0x22FC7BC", VA = "0x22FC7BC")]
		public MouseCameraRotation()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class VRKeyboardDemo : MonoBehaviour
	{
		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int maxOutputChars;

		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Text inputFieldLabel;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRKeyboardFull keyboard;

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x2308584", Offset = "0x2308584", VA = "0x2308584")]
		private void Start()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x230872C", Offset = "0x230872C", VA = "0x230872C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x23088B8", Offset = "0x23088B8", VA = "0x23088B8")]
		private void HandleClick(string value)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x2308988", Offset = "0x2308988", VA = "0x2308988")]
		private void BackspaceKey()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x2308A9C", Offset = "0x2308A9C", VA = "0x2308A9C")]
		private void EnterKey()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x2308AA0", Offset = "0x2308AA0", VA = "0x2308AA0")]
		private void TypeKey(string value)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x2308B24", Offset = "0x2308B24", VA = "0x2308B24")]
		private void TypeKey(char key)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x2308C08", Offset = "0x2308C08", VA = "0x2308C08")]
		public VRKeyboardDemo()
		{
		}
	}
}
namespace Weelco.VRKeyboard
{
	[Token(Token = "0x2000235")]
	public class VRKeyboardBase : VRKeyboardData
	{
		[Token(Token = "0x20005AF")]
		public delegate void VRKeyboardBtnClick(string value);

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VRKeyboardBtnClick OnVRKeyboardBtnClick;

		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool Initialized;

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x230348C", Offset = "0x230348C", VA = "0x230348C")]
		public VRKeyboardBase()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class VRKeyboardButton : VRKeyboardBase
	{
		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Button button;

		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text label;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Image icon;

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x2303D8C", Offset = "0x2303D8C", VA = "0x2303D8C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x2303E60", Offset = "0x2303E60", VA = "0x2303E60")]
		public void Init()
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x23040FC", Offset = "0x23040FC", VA = "0x23040FC")]
		public void SetKeyText(string value, bool ignoreIcon = false)
		{
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x230420C", Offset = "0x230420C", VA = "0x230420C")]
		private void HandleClick()
		{
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x2304258", Offset = "0x2304258", VA = "0x2304258")]
		public VRKeyboardButton()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public abstract class VRKeyboardData : MonoBehaviour
	{
		[Token(Token = "0x4001B14")]
		public const string ABC = "abc";

		[Token(Token = "0x4001B15")]
		public const string SYM = "sym";

		[Token(Token = "0x4001B16")]
		public const string BACK = "BACK";

		[Token(Token = "0x4001B17")]
		public const string ENTER = "ENTER";

		[Token(Token = "0x4001B18")]
		public const string UP = "UP";

		[Token(Token = "0x4001B19")]
		public const string LOW = "LOW";

		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] allLettersLowercase;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly string[] allLettersUppercase;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] allSpecials;

		[Token(Token = "0x600132F")]
		[Address(RVA = "0x2303510", Offset = "0x2303510", VA = "0x2303510")]
		protected VRKeyboardData()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class VRKeyboardFull : VRKeyboardBase
	{
		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private VRKeyboardButton[] keys;

		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool areLettersActive;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isLowercase;

		[Token(Token = "0x6001331")]
		[Address(RVA = "0x2307B2C", Offset = "0x2307B2C", VA = "0x2307B2C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0x2307CCC", Offset = "0x2307CCC", VA = "0x2307CCC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0x2307FE8", Offset = "0x2307FE8", VA = "0x2307FE8")]
		private void HandleClick(string value)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0x230818C", Offset = "0x230818C", VA = "0x230818C")]
		private void ChangeSpecialLetters()
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x23083E8", Offset = "0x23083E8", VA = "0x23083E8")]
		private void LowerUpperKeys()
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0x2308578", Offset = "0x2308578", VA = "0x2308578")]
		public VRKeyboardFull()
		{
		}
	}
}
namespace Weelco.VRInput
{
	[Token(Token = "0x2000239")]
	public abstract class IUIHitPointer : IUIPointer
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float LaserHitScale;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color LaserColor;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool HitAlwaysOn;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool UseCustomLaserPointer;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject hitPoint;

		[Token(Token = "0x6001337")]
		public abstract bool ButtonDown();

		[Token(Token = "0x6001338")]
		public abstract bool ButtonUp();

		[Token(Token = "0x6001339")]
		[Address(RVA = "0x22FC7E8", Offset = "0x22FC7E8", VA = "0x22FC7E8", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0x22FCC74", Offset = "0x22FCC74", VA = "0x22FCC74", Slot = "9")]
		protected override void UpdateRaycasting(bool isHit, float distance)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0x22FCDBC", Offset = "0x22FCDBC", VA = "0x22FCDBC")]
		protected IUIHitPointer()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public abstract class IUILaserPointer : IUIHitPointer
	{
		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IsRightHand;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool UseHapticPulse;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float LaserThickness;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject customExternalPointer;

		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private GameObject pointer;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _distanceLimit;

		[Token(Token = "0x600133C")]
		[Address(RVA = "0x22FCDCC", Offset = "0x22FCDCC", VA = "0x22FCDCC", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0x22FD268", Offset = "0x22FD268", VA = "0x22FD268", Slot = "9")]
		protected override void UpdateRaycasting(bool isHit, float distance)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0x22FD4A8", Offset = "0x22FD4A8", VA = "0x22FD4A8")]
		protected IUILaserPointer()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public abstract class IUIPointer
	{
		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private float _distanceLimit;

		[Token(Token = "0x170000AF")]
		public abstract Transform target
		{
			[Token(Token = "0x6001341")]
			get;
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0x22FD4B0", Offset = "0x22FD4B0", VA = "0x22FD4B0", Slot = "4")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x22FD6F0", Offset = "0x22FD6F0", VA = "0x22FD6F0")]
		public void LimitLaserDistance(float distance)
		{
		}

		[Token(Token = "0x6001342")]
		public abstract void Initialize();

		[Token(Token = "0x6001343")]
		public abstract void OnEnterControl(GameObject control);

		[Token(Token = "0x6001344")]
		public abstract void OnExitControl(GameObject control);

		[Token(Token = "0x6001345")]
		protected abstract void UpdateRaycasting(bool isHit, float distance);

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x22FCDC4", Offset = "0x22FCDC4", VA = "0x22FCDC4")]
		protected IUIPointer()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class OVRUIHitPointer : IUIHitPointer
	{
		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVRInput.Button primaryTrigger;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVRInput.Controller controller;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRCameraRig oculusRig;

		[Token(Token = "0x170000B0")]
		public override Transform target
		{
			[Token(Token = "0x600134B")]
			[Address(RVA = "0x22FD8D4", Offset = "0x22FD8D4", VA = "0x22FD8D4", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x22FD7AC", Offset = "0x22FD7AC", VA = "0x22FD7AC", Slot = "10")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x22FD83C", Offset = "0x22FD83C", VA = "0x22FD83C", Slot = "11")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x22FD8CC", Offset = "0x22FD8CC", VA = "0x22FD8CC", Slot = "7")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x22FD8D0", Offset = "0x22FD8D0", VA = "0x22FD8D0", Slot = "8")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x22FD9F4", Offset = "0x22FD9F4", VA = "0x22FD9F4")]
		public OVRUIHitPointer()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class OVRUILaserPointer : IUILaserPointer
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OVRInput.Button primaryTrigger;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OVRInput.Controller controller;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private OVRCameraRig oculusRig;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRHapticsClip enterHapticClip;

		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private OVRHapticsClip exitHapticClip;

		[Token(Token = "0x170000B1")]
		public override Transform target
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0x22FDC08", Offset = "0x22FDC08", VA = "0x22FDC08", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x22FD9FC", Offset = "0x22FD9FC", VA = "0x22FD9FC", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x22FDA00", Offset = "0x22FDA00", VA = "0x22FDA00", Slot = "10")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x22FDB00", Offset = "0x22FDB00", VA = "0x22FDB00", Slot = "11")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x22FDC00", Offset = "0x22FDC00", VA = "0x22FDC00", Slot = "7")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x22FDC04", Offset = "0x22FDC04", VA = "0x22FDC04", Slot = "8")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x22FDDA8", Offset = "0x22FDDA8", VA = "0x22FDDA8")]
		private void InitHaptics()
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0x22FDEC4", Offset = "0x22FDEC4", VA = "0x22FDEC4")]
		private void WriteHapticSamples(OVRHapticsClip clip, float freq, float amplitude, int duration)
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0x22FDFDC", Offset = "0x22FDFDC", VA = "0x22FDFDC")]
		public OVRUILaserPointer()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class UIGazePointer : IUIPointer
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform GazeCanvas;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image GazeProgressBar;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float GazeClickTimer;

		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float GazeClickTimerDelay;

		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _isOver;

		[Token(Token = "0x170000B2")]
		public override Transform target
		{
			[Token(Token = "0x600135A")]
			[Address(RVA = "0x22FE008", Offset = "0x22FE008", VA = "0x22FE008", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0x22FDFE4", Offset = "0x22FDFE4", VA = "0x22FDFE4", Slot = "6")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0x22FDFE8", Offset = "0x22FDFE8", VA = "0x22FDFE8", Slot = "7")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0x22FDFF4", Offset = "0x22FDFF4", VA = "0x22FDFF4", Slot = "8")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x22FE000", Offset = "0x22FE000", VA = "0x22FE000")]
		public bool IsOver()
		{
			return default(bool);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x22FE0F4", Offset = "0x22FE0F4", VA = "0x22FE0F4", Slot = "9")]
		protected override void UpdateRaycasting(bool isHit, float distance)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x22FE0F8", Offset = "0x22FE0F8", VA = "0x22FE0F8")]
		public UIGazePointer()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class ViveUILaserPointer : IUILaserPointer
	{
		[Token(Token = "0x170000B3")]
		public override Transform target
		{
			[Token(Token = "0x6001361")]
			[Address(RVA = "0x23033FC", Offset = "0x23033FC", VA = "0x23033FC", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x23032DC", Offset = "0x23032DC", VA = "0x23032DC", Slot = "10")]
		public override bool ButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x23032E4", Offset = "0x23032E4", VA = "0x23032E4", Slot = "11")]
		public override bool ButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x23032EC", Offset = "0x23032EC", VA = "0x23032EC", Slot = "7")]
		public override void OnEnterControl(GameObject control)
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x2303374", Offset = "0x2303374", VA = "0x2303374", Slot = "8")]
		public override void OnExitControl(GameObject control)
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x2303484", Offset = "0x2303484", VA = "0x2303484")]
		public ViveUILaserPointer()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class VRGazeInputModule : VRInputModule
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject lastActiveButton;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameObject currentLook;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lookTimer;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Dictionary<UIGazePointer, VRInputControllerData> controllerData;

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x22FE100", Offset = "0x22FE100", VA = "0x22FE100", Slot = "26")]
		public override void AddController(IUIPointer controller)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x22FE230", Offset = "0x22FE230", VA = "0x22FE230", Slot = "27")]
		public override void RemoveController(IUIPointer controller)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x22FE32C", Offset = "0x22FE32C", VA = "0x22FE32C", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x23001B0", Offset = "0x23001B0", VA = "0x23001B0")]
		public VRGazeInputModule()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class VRHitInputModule : VRInputModule
	{
		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<IUIHitPointer, VRInputControllerData> controllerData;

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x2300270", Offset = "0x2300270", VA = "0x2300270", Slot = "26")]
		public override void AddController(IUIPointer controller)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x2300398", Offset = "0x2300398", VA = "0x2300398", Slot = "27")]
		public override void RemoveController(IUIPointer controller)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x2300494", Offset = "0x2300494", VA = "0x2300494", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x2301A0C", Offset = "0x2301A0C", VA = "0x2301A0C")]
		private void Select(GameObject go)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x2301B1C", Offset = "0x2301B1C", VA = "0x2301B1C")]
		public VRHitInputModule()
		{
		}
	}
	[Token(Token = "0x2000242")]
	internal class VRInputControllerData
	{
		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public VRInputEventData pointerEvent;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject currentPoint;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject currentPressed;

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x22FE228", Offset = "0x22FE228", VA = "0x22FE228")]
		public VRInputControllerData()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class VRInputEventData : PointerEventData
	{
		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject current;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public IUIPointer controller;

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x2300034", Offset = "0x2300034", VA = "0x2300034")]
		public VRInputEventData(EventSystem e)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x2301BD4", Offset = "0x2301BD4", VA = "0x2301BD4", Slot = "4")]
		public override void Reset()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public abstract class VRInputModule : BaseInputModule
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRInputModule _instance;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Camera UICamera;

		[Token(Token = "0x170000B4")]
		public static VRInputModule instance
		{
			[Token(Token = "0x600136F")]
			[Address(RVA = "0x2301BE8", Offset = "0x2301BE8", VA = "0x2301BE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001370")]
		public abstract void AddController(IUIPointer controller);

		[Token(Token = "0x6001371")]
		public abstract void RemoveController(IUIPointer controller);

		[Token(Token = "0x6001372")]
		[Address(RVA = "0x2301C74", Offset = "0x2301C74", VA = "0x2301C74", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0x2301E38", Offset = "0x2301E38", VA = "0x2301E38", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0x22FFEBC", Offset = "0x22FFEBC", VA = "0x22FFEBC")]
		protected void UpdateCameraPosition(IUIPointer controller)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0x230003C", Offset = "0x230003C", VA = "0x230003C")]
		protected Vector2 GetCameraSize()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0x23000C4", Offset = "0x23000C4", VA = "0x23000C4")]
		protected void ClearSelection()
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0x2300268", Offset = "0x2300268", VA = "0x2300268")]
		protected VRInputModule()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class VRInputSettings : MonoBehaviour
	{
		[Token(Token = "0x20005B0")]
		public enum InputControlMethod
		{
			[Token(Token = "0x4002B1B")]
			MOUSE,
			[Token(Token = "0x4002B1C")]
			GOOGLEVR,
			[Token(Token = "0x4002B1D")]
			GAZE,
			[Token(Token = "0x4002B1E")]
			VIVE,
			[Token(Token = "0x4002B1F")]
			OCULUS_INPUT,
			[Token(Token = "0x4002B20")]
			OCULUS_TOUCH
		}

		[Token(Token = "0x20005B1")]
		public enum Hand
		{
			[Token(Token = "0x4002B22")]
			Both,
			[Token(Token = "0x4002B23")]
			Right,
			[Token(Token = "0x4002B24")]
			Left
		}

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public InputControlMethod ControlMethod;

		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public GameObject customExternalPointer;

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Hand usedHand;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Button oculusTouchInteractionButton;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private OVRInput.Button oculusInputInteractionButton;

		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform gazeCanvas;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Image gazeProgressBar;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float gazeClickTimer;

		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float gazeClickTimerDelay;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float laserThickness;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float laserHitScale;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color laserColor;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool useHapticPulse;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool useCustomLaserPointer;

		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool hitAlwaysOn;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private List<IUIPointer> _pointersList;

		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VRInputSettings _instance;

		[Token(Token = "0x170000B5")]
		public static VRInputSettings instance
		{
			[Token(Token = "0x6001379")]
			[Address(RVA = "0x2302010", Offset = "0x2302010", VA = "0x2302010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		public OVRInput.Button OculusTouchInteractionButton
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0x2303174", Offset = "0x2303174", VA = "0x2303174")]
			get
			{
				return default(OVRInput.Button);
			}
			[Token(Token = "0x6001384")]
			[Address(RVA = "0x230317C", Offset = "0x230317C", VA = "0x230317C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public OVRInput.Button OculusInputInteractionButton
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0x2303184", Offset = "0x2303184", VA = "0x2303184")]
			get
			{
				return default(OVRInput.Button);
			}
			[Token(Token = "0x6001386")]
			[Address(RVA = "0x230318C", Offset = "0x230318C", VA = "0x230318C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public float LaserThickness
		{
			[Token(Token = "0x6001387")]
			[Address(RVA = "0x2303194", Offset = "0x2303194", VA = "0x2303194")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001388")]
			[Address(RVA = "0x230319C", Offset = "0x230319C", VA = "0x230319C")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float LaserHitScale
		{
			[Token(Token = "0x6001389")]
			[Address(RVA = "0x23031A4", Offset = "0x23031A4", VA = "0x23031A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600138A")]
			[Address(RVA = "0x23031AC", Offset = "0x23031AC", VA = "0x23031AC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public Color LaserColor
		{
			[Token(Token = "0x600138B")]
			[Address(RVA = "0x23031B4", Offset = "0x23031B4", VA = "0x23031B4")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600138C")]
			[Address(RVA = "0x23031C4", Offset = "0x23031C4", VA = "0x23031C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public bool UseHapticPulse
		{
			[Token(Token = "0x600138D")]
			[Address(RVA = "0x23031D4", Offset = "0x23031D4", VA = "0x23031D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138E")]
			[Address(RVA = "0x23031DC", Offset = "0x23031DC", VA = "0x23031DC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool UseCustomLaserPointer
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0x23031E4", Offset = "0x23031E4", VA = "0x23031E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001390")]
			[Address(RVA = "0x23031EC", Offset = "0x23031EC", VA = "0x23031EC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool HitAlwaysOn
		{
			[Token(Token = "0x6001391")]
			[Address(RVA = "0x23031F4", Offset = "0x23031F4", VA = "0x23031F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001392")]
			[Address(RVA = "0x23031FC", Offset = "0x23031FC", VA = "0x23031FC")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public Hand UsedHand
		{
			[Token(Token = "0x6001393")]
			[Address(RVA = "0x2303204", Offset = "0x2303204", VA = "0x2303204")]
			get
			{
				return default(Hand);
			}
			[Token(Token = "0x6001394")]
			[Address(RVA = "0x230320C", Offset = "0x230320C", VA = "0x230320C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6001395")]
			[Address(RVA = "0x2303214", Offset = "0x2303214", VA = "0x2303214")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001396")]
			[Address(RVA = "0x230321C", Offset = "0x230321C", VA = "0x230321C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0x2303224", Offset = "0x2303224", VA = "0x2303224")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001398")]
			[Address(RVA = "0x230322C", Offset = "0x230322C", VA = "0x230322C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public Transform GazeCanvas
		{
			[Token(Token = "0x6001399")]
			[Address(RVA = "0x2303234", Offset = "0x2303234", VA = "0x2303234")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139A")]
			[Address(RVA = "0x230323C", Offset = "0x230323C", VA = "0x230323C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public Image GazeProgressBar
		{
			[Token(Token = "0x600139B")]
			[Address(RVA = "0x2303244", Offset = "0x2303244", VA = "0x2303244")]
			get
			{
				return null;
			}
			[Token(Token = "0x600139C")]
			[Address(RVA = "0x230324C", Offset = "0x230324C", VA = "0x230324C")]
			set
			{
			}
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0x230209C", Offset = "0x230209C", VA = "0x230209C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0x2302240", Offset = "0x2302240", VA = "0x2302240")]
		private void Start()
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0x2302CCC", Offset = "0x2302CCC", VA = "0x2302CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0x2302E30", Offset = "0x2302E30", VA = "0x2302E30")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0x2302430", Offset = "0x2302430", VA = "0x2302430")]
		private void createEventSystem(InputControlMethod method)
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0x2302920", Offset = "0x2302920", VA = "0x2302920")]
		private void createOculusTouch(bool isRightHand)
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0x2302AB0", Offset = "0x2302AB0", VA = "0x2302AB0")]
		private void createOculusInput()
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0x2302BDC", Offset = "0x2302BDC", VA = "0x2302BDC")]
		private void createGazePointer()
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0x2303074", Offset = "0x2303074", VA = "0x2303074")]
		private void initPointer(IUIPointer pointer)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x2303258", Offset = "0x2303258", VA = "0x2303258")]
		public VRInputSettings()
		{
		}
	}
}
namespace WaveVR_Log
{
	[Token(Token = "0x2000246")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C194C", Offset = "0x5C194C")]
	public class Log
	{
		[Token(Token = "0x20005B2")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x4002B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string tag;

			[Token(Token = "0x4002B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private string message;

			[Token(Token = "0x4002B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string enter;

			[Token(Token = "0x4002B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private string exit;

			[Token(Token = "0x4002B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool logInEditor;

			[Token(Token = "0x600278C")]
			[Address(RVA = "0x6FCC4C", Offset = "0x6FCC4C", VA = "0x6FCC4C")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x600278D")]
			[Address(RVA = "0x6FCFE4", Offset = "0x6FCFE4", VA = "0x6FCFE4", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		public class PeriodLog
		{
			[Token(Token = "0x20006F9")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x4002B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float interval;

			[Token(Token = "0x4002B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private float lastTime;

			[Token(Token = "0x4002B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private bool print;

			[Token(Token = "0x600278E")]
			[Address(RVA = "0x6FCFA8", Offset = "0x6FCFA8", VA = "0x6FCFA8")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0x6FD084", Offset = "0x6FD084", VA = "0x6FD084")]
			public void check()
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0x6FD0C8", Offset = "0x6FD0C8", VA = "0x6FD0C8")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002791")]
			[Address(RVA = "0x6FD164", Offset = "0x6FD164", VA = "0x6FD164")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4001B56")]
		private const int ANDROID_LOG_VERBOSE = 2;

		[Token(Token = "0x4001B57")]
		private const int ANDROID_LOG_DEBUG = 3;

		[Token(Token = "0x4001B58")]
		private const int ANDROID_LOG_INFO = 4;

		[Token(Token = "0x4001B59")]
		private const int ANDROID_LOG_WARN = 5;

		[Token(Token = "0x4001B5A")]
		private const int ANDROID_LOG_ERROR = 6;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeriodLog gpl;

		[PreserveSig]
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x6FC7E0", Offset = "0x6FC7E0", VA = "0x6FC7E0")]
		internal static extern int __android_log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x6FC938", Offset = "0x6FC938", VA = "0x6FC938")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x6FC9D0", Offset = "0x6FC9D0", VA = "0x6FC9D0")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x6FCA68", Offset = "0x6FCA68", VA = "0x6FCA68")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0x6FCB00", Offset = "0x6FCB00", VA = "0x6FCB00")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0x6FCB98", Offset = "0x6FCB98", VA = "0x6FCB98")]
		public static EnterAndExit ee(string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x6FCD18", Offset = "0x6FCD18", VA = "0x6FCD18")]
		public static EnterAndExit ee(string tag, string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x6FCDC4", Offset = "0x6FCDC4", VA = "0x6FCDC4")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0x6FCE68", Offset = "0x6FCE68", VA = "0x6FCE68")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x6FCEFC", Offset = "0x6FCEFC", VA = "0x6FCEFC")]
		public Log()
		{
		}
	}
}
namespace WVR_Log
{
	[Token(Token = "0x2000247")]
	public class Log
	{
		[Token(Token = "0x20005B4")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x4002B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private string tag;

			[Token(Token = "0x4002B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private string message;

			[Token(Token = "0x4002B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string enter;

			[Token(Token = "0x4002B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private string exit;

			[Token(Token = "0x4002B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool logInEditor;

			[Token(Token = "0x6002792")]
			[Address(RVA = "0x24DF224", Offset = "0x24DF224", VA = "0x24DF224")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002793")]
			[Address(RVA = "0x24DF60C", Offset = "0x24DF60C", VA = "0x24DF60C", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		public class PeriodLog
		{
			[Token(Token = "0x20006FA")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x4002B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float interval;

			[Token(Token = "0x4002B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private float lastTime;

			[Token(Token = "0x4002B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAD78", Offset = "0x5CAD78")]
			private bool <Print>k__BackingField;

			[Token(Token = "0x17000315")]
			public bool Print
			{
				[Token(Token = "0x6002794")]
				[Address(RVA = "0x24DF6AC", Offset = "0x24DF6AC", VA = "0x24DF6AC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4214", Offset = "0x5D4214")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002795")]
				[Address(RVA = "0x24DF6B4", Offset = "0x24DF6B4", VA = "0x24DF6B4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4224", Offset = "0x5D4224")]
				private set
				{
				}
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0x24DF5D8", Offset = "0x24DF5D8", VA = "0x24DF5D8")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x6002797")]
			[Address(RVA = "0x24DF6BC", Offset = "0x24DF6BC", VA = "0x24DF6BC")]
			public void check()
			{
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0x24DF700", Offset = "0x24DF700", VA = "0x24DF700")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002799")]
			[Address(RVA = "0x24DF79C", Offset = "0x24DF79C", VA = "0x24DF79C")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D4234", Offset = "0x5D4234")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableDebugLog;

		[Token(Token = "0x4001B5D")]
		private const int LOG_VERBOSE = 2;

		[Token(Token = "0x4001B5E")]
		private const int LOG_DEBUG = 3;

		[Token(Token = "0x4001B5F")]
		private const int LOG_INFO = 4;

		[Token(Token = "0x4001B60")]
		private const int LOG_WARN = 5;

		[Token(Token = "0x4001B61")]
		private const int LOG_ERROR = 6;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SBLength;

		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly StringBuilder SB;

		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static PeriodLog gpl;

		[Token(Token = "0x170000C3")]
		public static StringBuilder CSB
		{
			[Token(Token = "0x60013AA")]
			[Address(RVA = "0x24DEC80", Offset = "0x24DEC80", VA = "0x24DEC80")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x24DED28", Offset = "0x24DED28", VA = "0x24DED28")]
		internal static extern int __log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0x24DEE78", Offset = "0x24DEE78", VA = "0x24DEE78")]
		public static void v(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0x24DEF10", Offset = "0x24DEF10", VA = "0x24DEF10")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0x24DEFA8", Offset = "0x24DEFA8", VA = "0x24DEFA8")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0x24DF040", Offset = "0x24DF040", VA = "0x24DF040")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0x24DF0D8", Offset = "0x24DF0D8", VA = "0x24DF0D8")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x24DF170", Offset = "0x24DF170", VA = "0x24DF170")]
		public static EnterAndExit ee(string message)
		{
			return null;
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x24DF2F0", Offset = "0x24DF2F0", VA = "0x24DF2F0")]
		public static EnterAndExit ee(string tag, string message)
		{
			return null;
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x24DF39C", Offset = "0x24DF39C", VA = "0x24DF39C")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x24DF440", Offset = "0x24DF440", VA = "0x24DF440")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x24DF4DC", Offset = "0x24DF4DC", VA = "0x24DF4DC")]
		public Log()
		{
		}
	}
}
namespace wvr
{
	[Token(Token = "0x2000248")]
	public enum WVR_AppType
	{
		[Token(Token = "0x4001B66")]
		WVR_AppType_VRContent = 1,
		[Token(Token = "0x4001B67")]
		WVR_AppType_NonVRContent
	}
	[Token(Token = "0x2000249")]
	public enum WVR_InitError
	{
		[Token(Token = "0x4001B69")]
		WVR_InitError_None,
		[Token(Token = "0x4001B6A")]
		WVR_InitError_Unknown,
		[Token(Token = "0x4001B6B")]
		WVR_InitError_NotInitialized
	}
	[Token(Token = "0x200024A")]
	public enum WVR_EventType
	{
		[Token(Token = "0x4001B6D")]
		WVR_EventType_Quit = 1000,
		[Token(Token = "0x4001B6E")]
		WVR_EventType_SystemInteractionModeChanged = 1001,
		[Token(Token = "0x4001B6F")]
		WVR_EventType_SystemGazeTriggerTypeChanged = 1002,
		[Token(Token = "0x4001B70")]
		WVR_EventType_TrackingModeChanged = 1003,
		[Token(Token = "0x4001B71")]
		WVR_EventType_RecommendedQuality_Lower = 1004,
		[Token(Token = "0x4001B72")]
		WVR_EventType_RecommendedQuality_Higher = 1005,
		[Token(Token = "0x4001B73")]
		WVR_EventType_DeviceConnected = 2000,
		[Token(Token = "0x4001B74")]
		WVR_EventType_DeviceDisconnected = 2001,
		[Token(Token = "0x4001B75")]
		WVR_EventType_DeviceStatusUpdate = 2002,
		[Token(Token = "0x4001B76")]
		WVR_EventType_DeviceSuspend = 2003,
		[Token(Token = "0x4001B77")]
		WVR_EventType_DeviceResume = 2004,
		[Token(Token = "0x4001B78")]
		WVR_EventType_IpdChanged = 2005,
		[Token(Token = "0x4001B79")]
		WVR_EventType_DeviceRoleChanged = 2006,
		[Token(Token = "0x4001B7A")]
		WVR_EventType_BatteryStatusUpdate = 2007,
		[Token(Token = "0x4001B7B")]
		WVR_EventType_ChargeStatusUpdate = 2008,
		[Token(Token = "0x4001B7C")]
		WVR_EventType_DeviceErrorStatusUpdate = 2009,
		[Token(Token = "0x4001B7D")]
		WVR_EventType_BatteryTemperatureStatusUpdate = 2010,
		[Token(Token = "0x4001B7E")]
		WVR_EventType_RecenterSuccess = 2011,
		[Token(Token = "0x4001B7F")]
		WVR_EventType_RecenterFail = 2012,
		[Token(Token = "0x4001B80")]
		WVR_EventType_RecenterSuccess3DoF = 2013,
		[Token(Token = "0x4001B81")]
		WVR_EventType_RecenterFail3DoF = 2014,
		[Token(Token = "0x4001B82")]
		WVR_EventType_ButtonPressed = 3000,
		[Token(Token = "0x4001B83")]
		WVR_EventType_ButtonUnpressed = 3001,
		[Token(Token = "0x4001B84")]
		WVR_EventType_TouchTapped = 3002,
		[Token(Token = "0x4001B85")]
		WVR_EventType_TouchUntapped = 3003,
		[Token(Token = "0x4001B86")]
		WVR_EventType_LeftToRightSwipe = 3004,
		[Token(Token = "0x4001B87")]
		WVR_EventType_RightToLeftSwipe = 3005,
		[Token(Token = "0x4001B88")]
		WVR_EventType_DownToUpSwipe = 3006,
		[Token(Token = "0x4001B89")]
		WVR_EventType_UpToDownSwipe = 3007
	}
	[Token(Token = "0x200024B")]
	public enum WVR_PeripheralQuality
	{
		[Token(Token = "0x4001B8B")]
		Low,
		[Token(Token = "0x4001B8C")]
		Middle,
		[Token(Token = "0x4001B8D")]
		High
	}
	[Token(Token = "0x200024C")]
	public enum WVR_DeviceType
	{
		[Token(Token = "0x4001B8F")]
		WVR_DeviceType_Invalid,
		[Token(Token = "0x4001B90")]
		WVR_DeviceType_HMD,
		[Token(Token = "0x4001B91")]
		WVR_DeviceType_Controller_Right,
		[Token(Token = "0x4001B92")]
		WVR_DeviceType_Controller_Left
	}
	[Token(Token = "0x200024D")]
	public enum WVR_RecenterType
	{
		[Token(Token = "0x4001B94")]
		WVR_RecenterType_Disabled,
		[Token(Token = "0x4001B95")]
		WVR_RecenterType_YawOnly,
		[Token(Token = "0x4001B96")]
		WVR_RecenterType_YawAndPosition,
		[Token(Token = "0x4001B97")]
		WVR_RecenterType_RotationAndPosition
	}
	[Token(Token = "0x200024E")]
	public enum WVR_InputType
	{
		[Token(Token = "0x4001B99")]
		WVR_InputType_Button = 1,
		[Token(Token = "0x4001B9A")]
		WVR_InputType_Touch = 2,
		[Token(Token = "0x4001B9B")]
		WVR_InputType_Analog = 4
	}
	[Token(Token = "0x200024F")]
	public enum WVR_BatteryStatus
	{
		[Token(Token = "0x4001B9D")]
		WVR_BatteryStatus_Unknown,
		[Token(Token = "0x4001B9E")]
		WVR_BatteryStatus_Normal,
		[Token(Token = "0x4001B9F")]
		WVR_BatteryStatus_Low,
		[Token(Token = "0x4001BA0")]
		WVR_BatteryStatus_UltraLow
	}
	[Token(Token = "0x2000250")]
	public enum WVR_ChargeStatus
	{
		[Token(Token = "0x4001BA2")]
		WVR_ChargeStatus_Unknown,
		[Token(Token = "0x4001BA3")]
		WVR_ChargeStatus_Discharging,
		[Token(Token = "0x4001BA4")]
		WVR_ChargeStatus_Charging,
		[Token(Token = "0x4001BA5")]
		WVR_ChargeStatus_Full
	}
	[Token(Token = "0x2000251")]
	public enum WVR_BatteryTemperatureStatus
	{
		[Token(Token = "0x4001BA7")]
		WVR_BatteryTemperature_Unknown,
		[Token(Token = "0x4001BA8")]
		WVR_BatteryTemperature_Normal,
		[Token(Token = "0x4001BA9")]
		WVR_BatteryTemperature_Overheat,
		[Token(Token = "0x4001BAA")]
		WVR_BatteryTemperature_UltraOverheat
	}
	[Token(Token = "0x2000252")]
	public enum WVR_DeviceErrorStatus
	{
		[Token(Token = "0x4001BAC")]
		WVR_DeviceErrorStatus_None = 0,
		[Token(Token = "0x4001BAD")]
		WVR_DeviceErrorStatus_BatteryOverheat = 1,
		[Token(Token = "0x4001BAE")]
		WVR_DeviceErrorStatus_BatteryOverheatRestore = 2,
		[Token(Token = "0x4001BAF")]
		WVR_DeviceErrorStatus_BatteryOvervoltage = 4,
		[Token(Token = "0x4001BB0")]
		WVR_DeviceErrorStatus_BatteryOvervoltageRestore = 8,
		[Token(Token = "0x4001BB1")]
		WVR_DeviceErrorStatus_DeviceConnectFail = 0x10,
		[Token(Token = "0x4001BB2")]
		WVR_DeviceErrorStatus_DeviceConnectRestore = 0x20,
		[Token(Token = "0x4001BB3")]
		WVR_DeviceErrorStatus_DeviceLostTracking = 0x40,
		[Token(Token = "0x4001BB4")]
		WVR_DeviceErrorStatus_DeviceLostTrackingRestore = 0x80,
		[Token(Token = "0x4001BB5")]
		WVR_DeviceErrorStatus_ChargeFail = 0x100,
		[Token(Token = "0x4001BB6")]
		WVR_DeviceErrorStatus_ChargeRestore = 0x200
	}
	[Token(Token = "0x2000253")]
	public enum WVR_DeviceErrorState
	{
		[Token(Token = "0x4001BB8")]
		WVR_DeviceErrorState_None,
		[Token(Token = "0x4001BB9")]
		WVR_DeviceErrorState_BatteryOverheat,
		[Token(Token = "0x4001BBA")]
		WVR_DeviceErrorState_BatteryOvervoltage,
		[Token(Token = "0x4001BBB")]
		WVR_DeviceErrorState_DeviceConnectFail,
		[Token(Token = "0x4001BBC")]
		WVR_DeviceErrorState_DeviceLostTracking,
		[Token(Token = "0x4001BBD")]
		WVR_DeviceErrorState_ChargeFail
	}
	[Token(Token = "0x2000254")]
	public enum WVR_InputId
	{
		[Token(Token = "0x4001BBF")]
		WVR_InputId_0 = 0,
		[Token(Token = "0x4001BC0")]
		WVR_InputId_1 = 1,
		[Token(Token = "0x4001BC1")]
		WVR_InputId_2 = 2,
		[Token(Token = "0x4001BC2")]
		WVR_InputId_3 = 3,
		[Token(Token = "0x4001BC3")]
		WVR_InputId_4 = 4,
		[Token(Token = "0x4001BC4")]
		WVR_InputId_5 = 5,
		[Token(Token = "0x4001BC5")]
		WVR_InputId_6 = 6,
		[Token(Token = "0x4001BC6")]
		WVR_InputId_7 = 7,
		[Token(Token = "0x4001BC7")]
		WVR_InputId_8 = 8,
		[Token(Token = "0x4001BC8")]
		WVR_InputId_9 = 9,
		[Token(Token = "0x4001BC9")]
		WVR_InputId_14 = 14,
		[Token(Token = "0x4001BCA")]
		WVR_InputId_15 = 15,
		[Token(Token = "0x4001BCB")]
		WVR_InputId_16 = 16,
		[Token(Token = "0x4001BCC")]
		WVR_InputId_17 = 17,
		[Token(Token = "0x4001BCD")]
		WVR_InputId_18 = 18,
		[Token(Token = "0x4001BCE")]
		WVR_InputId_Alias1_System = 0,
		[Token(Token = "0x4001BCF")]
		WVR_InputId_Alias1_Menu = 1,
		[Token(Token = "0x4001BD0")]
		WVR_InputId_Alias1_Grip = 2,
		[Token(Token = "0x4001BD1")]
		WVR_InputId_Alias1_DPad_Left = 3,
		[Token(Token = "0x4001BD2")]
		WVR_InputId_Alias1_DPad_Up = 4,
		[Token(Token = "0x4001BD3")]
		WVR_InputId_Alias1_DPad_Right = 5,
		[Token(Token = "0x4001BD4")]
		WVR_InputId_Alias1_DPad_Down = 6,
		[Token(Token = "0x4001BD5")]
		WVR_InputId_Alias1_Volume_Up = 7,
		[Token(Token = "0x4001BD6")]
		WVR_InputId_Alias1_Volume_Down = 8,
		[Token(Token = "0x4001BD7")]
		WVR_InputId_Alias1_Digital_Trigger = 9,
		[Token(Token = "0x4001BD8")]
		WVR_InputId_Alias1_Back = 14,
		[Token(Token = "0x4001BD9")]
		WVR_InputId_Alias1_Enter = 15,
		[Token(Token = "0x4001BDA")]
		WVR_InputId_Alias1_Touchpad = 16,
		[Token(Token = "0x4001BDB")]
		WVR_InputId_Alias1_Trigger = 17,
		[Token(Token = "0x4001BDC")]
		WVR_InputId_Alias1_Thumbstick = 18,
		[Token(Token = "0x4001BDD")]
		WVR_InputId_Max = 32
	}
	[Token(Token = "0x2000255")]
	public enum WVR_AnalogType
	{
		[Token(Token = "0x4001BDF")]
		WVR_AnalogType_None,
		[Token(Token = "0x4001BE0")]
		WVR_AnalogType_2D,
		[Token(Token = "0x4001BE1")]
		WVR_AnalogType_1D
	}
	[Token(Token = "0x2000256")]
	public enum WVR_Intensity
	{
		[Token(Token = "0x4001BE3")]
		WVR_Intensity_Weak = 1,
		[Token(Token = "0x4001BE4")]
		WVR_Intensity_Light,
		[Token(Token = "0x4001BE5")]
		WVR_Intensity_Normal,
		[Token(Token = "0x4001BE6")]
		WVR_Intensity_Strong,
		[Token(Token = "0x4001BE7")]
		WVR_Intensity_Severe
	}
	[Token(Token = "0x2000257")]
	public enum WVR_PoseOriginModel
	{
		[Token(Token = "0x4001BE9")]
		WVR_PoseOriginModel_OriginOnHead,
		[Token(Token = "0x4001BEA")]
		WVR_PoseOriginModel_OriginOnGround,
		[Token(Token = "0x4001BEB")]
		WVR_PoseOriginModel_OriginOnTrackingObserver,
		[Token(Token = "0x4001BEC")]
		WVR_PoseOriginModel_OriginOnHead_3DoF
	}
	[Token(Token = "0x2000258")]
	public enum WVR_ArenaVisible
	{
		[Token(Token = "0x4001BEE")]
		WVR_ArenaVisible_Auto,
		[Token(Token = "0x4001BEF")]
		WVR_ArenaVisible_ForceOn,
		[Token(Token = "0x4001BF0")]
		WVR_ArenaVisible_ForceOff
	}
	[Token(Token = "0x2000259")]
	public enum WVR_GraphicsApiType
	{
		[Token(Token = "0x4001BF2")]
		WVR_GraphicsApiType_OpenGL = 1
	}
	[Token(Token = "0x200025A")]
	public enum WVR_ScreenshotMode
	{
		[Token(Token = "0x4001BF4")]
		WVR_ScreenshotMode_Default,
		[Token(Token = "0x4001BF5")]
		WVR_ScreenshotMode_Raw,
		[Token(Token = "0x4001BF6")]
		WVR_ScreenshotMode_Distorted
	}
	[Token(Token = "0x200025B")]
	public enum WVR_SubmitError
	{
		[Token(Token = "0x4001BF8")]
		WVR_SubmitError_None = 0,
		[Token(Token = "0x4001BF9")]
		WVR_SubmitError_InvalidTexture = 400,
		[Token(Token = "0x4001BFA")]
		WVR_SubmitError_ThreadStop = 401,
		[Token(Token = "0x4001BFB")]
		WVR_SubmitError_BufferSubmitFailed = 402,
		[Token(Token = "0x4001BFC")]
		WVR_SubmitError_Max = 65535
	}
	[Token(Token = "0x200025C")]
	public enum WVR_SubmitExtend
	{
		[Token(Token = "0x4001BFE")]
		WVR_SubmitExtend_Default = 0,
		[Token(Token = "0x4001BFF")]
		WVR_SubmitExtend_DisableDistortion = 1,
		[Token(Token = "0x4001C00")]
		WVR_SubmitExtend_PartialTexture = 0x10
	}
	[Token(Token = "0x200025D")]
	public enum WVR_Eye
	{
		[Token(Token = "0x4001C02")]
		WVR_Eye_Left,
		[Token(Token = "0x4001C03")]
		WVR_Eye_Right,
		[Token(Token = "0x4001C04")]
		WVR_Eye_Both,
		[Token(Token = "0x4001C05")]
		WVR_Eye_None
	}
	[Token(Token = "0x200025E")]
	public enum WVR_TextureTarget
	{
		[Token(Token = "0x4001C07")]
		WVR_TextureTarget_2D,
		[Token(Token = "0x4001C08")]
		WVR_TextureTarget_2D_ARRAY
	}
	[Token(Token = "0x200025F")]
	public enum WVR_TextureFormat
	{
		[Token(Token = "0x4001C0A")]
		WVR_TextureFormat_RGBA
	}
	[Token(Token = "0x2000260")]
	public enum WVR_TextureType
	{
		[Token(Token = "0x4001C0C")]
		WVR_TextureType_UnsignedByte
	}
	[Token(Token = "0x2000261")]
	public enum WVR_RenderError
	{
		[Token(Token = "0x4001C0E")]
		WVR_RenderError_None = 0,
		[Token(Token = "0x4001C0F")]
		WVR_RenderError_RuntimeInitFailed = 410,
		[Token(Token = "0x4001C10")]
		WVR_RenderError_ContextSetupFailed = 411,
		[Token(Token = "0x4001C11")]
		WVR_RenderError_DisplaySetupFailed = 412,
		[Token(Token = "0x4001C12")]
		WVR_RenderError_LibNotSupported = 413,
		[Token(Token = "0x4001C13")]
		WVR_RenderError_NullPtr = 414,
		[Token(Token = "0x4001C14")]
		WVR_RenderError_Max = 65535
	}
	[Token(Token = "0x2000262")]
	public enum WVR_RenderConfig
	{
		[Token(Token = "0x4001C16")]
		WVR_RenderConfig_Default = 0,
		[Token(Token = "0x4001C17")]
		WVR_RenderConfig_Disable_SingleBuffer = 1,
		[Token(Token = "0x4001C18")]
		WVR_RenderConfig_Disable_Reprojection = 2,
		[Token(Token = "0x4001C19")]
		WVR_RenderConfig_sRGB = 4
	}
	[Token(Token = "0x2000263")]
	public enum WVR_CameraImageType
	{
		[Token(Token = "0x4001C1B")]
		WVR_CameraImageType_Invalid,
		[Token(Token = "0x4001C1C")]
		WVR_CameraImageType_SingleEye,
		[Token(Token = "0x4001C1D")]
		WVR_CameraImageType_DualEye
	}
	[Token(Token = "0x2000264")]
	public enum WVR_CameraImageFormat
	{
		[Token(Token = "0x4001C1F")]
		WVR_CameraImageFormat_Invalid,
		[Token(Token = "0x4001C20")]
		WVR_CameraImageFormat_YUV_420,
		[Token(Token = "0x4001C21")]
		WVR_CameraImageFormat_Grayscale
	}
	[Token(Token = "0x2000265")]
	public enum WVR_CameraPosition
	{
		[Token(Token = "0x4001C23")]
		WVR_CameraPosition_Invalid,
		[Token(Token = "0x4001C24")]
		WVR_CameraPosition_left,
		[Token(Token = "0x4001C25")]
		WVR_CameraPosition_Right
	}
	[Token(Token = "0x2000266")]
	public enum WVR_OverlayError
	{
		[Token(Token = "0x4001C27")]
		WVR_OverlayError_None = 0,
		[Token(Token = "0x4001C28")]
		WVR_OverlayError_UnknownOverlay = 10,
		[Token(Token = "0x4001C29")]
		WVR_OverlayError_OverlayUnavailable = 11,
		[Token(Token = "0x4001C2A")]
		WVR_OverlayError_InvalidParameter = 20
	}
	[Token(Token = "0x2000267")]
	public enum WVR_OverlayTransformType
	{
		[Token(Token = "0x4001C2C")]
		WVR_OverlayTransformType_None,
		[Token(Token = "0x4001C2D")]
		WVR_OverlayTransformType_Absolute,
		[Token(Token = "0x4001C2E")]
		WVR_OverlayTransformType_Fixed
	}
	[Token(Token = "0x2000268")]
	public enum WVR_NumDoF
	{
		[Token(Token = "0x4001C30")]
		WVR_NumDoF_3DoF,
		[Token(Token = "0x4001C31")]
		WVR_NumDoF_6DoF
	}
	[Token(Token = "0x2000269")]
	public enum WVR_ArenaShape
	{
		[Token(Token = "0x4001C33")]
		WVR_ArenaShape_None,
		[Token(Token = "0x4001C34")]
		WVR_ArenaShape_Rectangle,
		[Token(Token = "0x4001C35")]
		WVR_ArenaShape_Round
	}
	[Token(Token = "0x200026A")]
	public enum WVR_InteractionMode
	{
		[Token(Token = "0x4001C37")]
		WVR_InteractionMode_SystemDefault = 1,
		[Token(Token = "0x4001C38")]
		WVR_InteractionMode_Gaze,
		[Token(Token = "0x4001C39")]
		WVR_InteractionMode_Controller
	}
	[Token(Token = "0x200026B")]
	public enum WVR_GazeTriggerType
	{
		[Token(Token = "0x4001C3B")]
		WVR_GazeTriggerType_Timeout = 1,
		[Token(Token = "0x4001C3C")]
		WVR_GazeTriggerType_Button,
		[Token(Token = "0x4001C3D")]
		WVR_GazeTriggerType_TimeoutButton
	}
	[Token(Token = "0x200026C")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4001C3F")]
		WVR_PerfLevel_System,
		[Token(Token = "0x4001C40")]
		WVR_PerfLevel_Minimum,
		[Token(Token = "0x4001C41")]
		WVR_PerfLevel_Medium,
		[Token(Token = "0x4001C42")]
		WVR_PerfLevel_Maximum,
		[Token(Token = "0x4001C43")]
		WVR_PerfLevel_NumPerfLevels
	}
	[Token(Token = "0x200026D")]
	public enum WVR_RenderQuality
	{
		[Token(Token = "0x4001C45")]
		WVR_RenderQuality_Low = 1,
		[Token(Token = "0x4001C46")]
		WVR_RenderQuality_Medium,
		[Token(Token = "0x4001C47")]
		WVR_RenderQuality_High,
		[Token(Token = "0x4001C48")]
		WVR_RenderQuality_NumRenderQuality
	}
	[Token(Token = "0x200026E")]
	public enum WVR_SimulationType
	{
		[Token(Token = "0x4001C4A")]
		WVR_SimulationType_Auto,
		[Token(Token = "0x4001C4B")]
		WVR_SimulationType_ForceOn,
		[Token(Token = "0x4001C4C")]
		WVR_SimulationType_ForceOff
	}
	[Token(Token = "0x200026F")]
	public enum WVR_EyePoseStatus
	{
		[Token(Token = "0x4001C4E")]
		WVR_GazePointValid = 1,
		[Token(Token = "0x4001C4F")]
		WVR_GazeVectorValid = 2,
		[Token(Token = "0x4001C50")]
		WVR_EyeOpennessValid = 4,
		[Token(Token = "0x4001C51")]
		WVR_EyePupilDilationValid = 8,
		[Token(Token = "0x4001C52")]
		WVR_EyePositionGuideValid = 0x10
	}
	[Token(Token = "0x2000270")]
	public struct WVR_RenderInitParams_t
	{
		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_GraphicsApiType graphicsApi;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong renderConfig;
	}
	[Token(Token = "0x2000271")]
	public struct WVR_Matrix4f_t
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000272")]
	public struct WVR_Vector2f_t
	{
		[Token(Token = "0x4001C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000273")]
	public struct WVR_Vector3f_t
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000274")]
	public struct WVR_CameraIntrinsic_t
	{
		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t focalLength;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t principalPoint;
	}
	[Token(Token = "0x2000275")]
	public struct WVR_CameraInfo_t
	{
		[Token(Token = "0x4001C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CameraImageType imgType;

		[Token(Token = "0x4001C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_CameraImageFormat imgFormat;

		[Token(Token = "0x4001C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint width;

		[Token(Token = "0x4001C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint height;

		[Token(Token = "0x4001C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint size;
	}
	[Token(Token = "0x2000276")]
	public struct WVR_Quatf_t
	{
		[Token(Token = "0x4001C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x4001C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float x;

		[Token(Token = "0x4001C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float y;

		[Token(Token = "0x4001C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float z;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000277")]
	public struct WVR_PoseState_t
	{
		[Token(Token = "0x4001C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValidPose;

		[Token(Token = "0x4001C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_Matrix4f_t PoseMatrix;

		[Token(Token = "0x4001C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WVR_Vector3f_t Velocity;

		[Token(Token = "0x4001C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WVR_Vector3f_t AngularVelocity;

		[Token(Token = "0x4001C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Is6DoFPose;

		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long PoseTimestamp_ns;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WVR_Vector3f_t Acceleration;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WVR_Vector3f_t AngularAcceleration;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float PredictedMilliSec;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public WVR_PoseOriginModel OriginModel;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public WVR_Pose_t RawPose;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000278")]
	public struct WVR_DevicePosePair_t
	{
		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType type;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_PoseState_t pose;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000279")]
	public struct WVR_TextureLayout_t
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t leftLowUVs;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t rightUpUVs;
	}
	[Token(Token = "0x200027A")]
	public struct WVR_TextureParams_t
	{
		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr id;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_TextureTarget target;

		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_TextureLayout_t layout;
	}
	[Token(Token = "0x200027B")]
	public struct WVR_RenderProps_t
	{
		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float refreshRate;

		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool hasExternal;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ipdMeter;
	}
	[Token(Token = "0x200027C")]
	public struct WVR_CommonEvent_t
	{
		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_EventType type;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long timestamp;
	}
	[Token(Token = "0x200027D")]
	public struct WVR_DeviceEvent_t
	{
		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;
	}
	[Token(Token = "0x200027E")]
	public struct WVR_InputEvent_t
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_InputId inputId;
	}
	[StructLayout(2)]
	[Token(Token = "0x200027F")]
	public struct WVR_Event_t
	{
		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputEvent_t input;
	}
	[Token(Token = "0x2000280")]
	public struct WVR_Axis_t
	{
		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000281")]
	public struct WVR_AnalogState_t
	{
		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_AnalogType type;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Axis_t axis;
	}
	[Token(Token = "0x2000282")]
	public struct WVR_InputAttribute_t
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint capability;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_AnalogType axis_type;
	}
	[Token(Token = "0x2000283")]
	public struct WVR_InputMappingPair_t
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputAttribute_t destination;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_InputAttribute_t source;
	}
	[StructLayout(2)]
	[Token(Token = "0x2000284")]
	public struct WVR_Pose_t
	{
		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector3f_t position;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Quatf_t rotation;
	}
	[Token(Token = "0x2000285")]
	public struct WVR_OverlayPosition_t
	{
		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;
	}
	[Token(Token = "0x2000286")]
	public struct WVR_OverlayBlendColor_t
	{
		[Token(Token = "0x4001CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;
	}
	[Token(Token = "0x2000287")]
	public struct WVR_OverlayTexture_t
	{
		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint textureId;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint width;

		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint height;
	}
	[Token(Token = "0x2000288")]
	public struct WVR_ArenaRectangle_t
	{
		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float width;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float length;
	}
	[Token(Token = "0x2000289")]
	public struct WVR_ArenaRound_t
	{
		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float diameter;
	}
	[StructLayout(2)]
	[Token(Token = "0x200028A")]
	public struct WVR_ArenaArea_t
	{
		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRectangle_t rectangle;

		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRound_t round;
	}
	[Token(Token = "0x200028B")]
	public struct WVR_Arena_t
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaShape shape;

		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_ArenaArea_t area;
	}
	[Token(Token = "0x200028C")]
	public delegate void WVR_OverlayInputEventCallback(int overlayId, WVR_EventType type, WVR_InputId inputId);
	[Token(Token = "0x200028D")]
	public struct WVR_OverlayInputEvent_t
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int overlayId;

		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr callback;
	}
	[Token(Token = "0x200028E")]
	public struct WVR_RenderFoveationParams
	{
		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalX;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float focalY;

		[Token(Token = "0x4001CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fovealFov;

		[Token(Token = "0x4001CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_PeripheralQuality periQuality;
	}
	[Token(Token = "0x200028F")]
	public struct FBXInfo_t
	{
		[Token(Token = "0x4001CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Matrix4f_t matrix;

		[Token(Token = "0x4001CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public uint verticeCount;

		[Token(Token = "0x4001CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public uint normalCount;

		[Token(Token = "0x4001CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public uint uvCount;

		[Token(Token = "0x4001CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public uint indiceCount;

		[Token(Token = "0x4001CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr meshName;
	}
	[Token(Token = "0x2000290")]
	public struct MeshInfo_t
	{
		[Token(Token = "0x4001CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] _vectice;

		[Token(Token = "0x4001CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3[] _normal;

		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2[] _uv;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int[] _indice;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _active;
	}
	[Token(Token = "0x2000291")]
	public struct StencilMesh_t
	{
		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint vertCount;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr vertData;

		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint triCount;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr indexData;
	}
	[Token(Token = "0x2000292")]
	public struct WVR_RequestResult
	{
		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mPermission;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool mGranted;
	}
	[Token(Token = "0x2000293")]
	public struct WVR_EyePose_t
	{
		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyePoseStatus;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyePoseStatus;

		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyePoseStatus;

		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Vector3f_t leftEyeGazePoint;

		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Vector3f_t rightEyeGazePoint;

		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_Vector3f_t combinedEyeGazePoint;

		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_Vector3f_t leftEyeGazeVector;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WVR_Vector3f_t rightEyeGazeVector;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WVR_Vector3f_t combinedEyeGazeVector;

		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x4001CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public WVR_Vector3f_t leftEyePositionGuide;

		[Token(Token = "0x4001CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WVR_Vector3f_t rightEyePositionGuide;

		[Token(Token = "0x4001CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public long timestamp;
	}
	[Token(Token = "0x2000294")]
	public delegate void WVR_RequestCompleteCallback(List<WVR_RequestResult> results);
	[Token(Token = "0x2000295")]
	public delegate void WVR_RequestUsbCompleteCallback(bool result);
	[Token(Token = "0x2000296")]
	public delegate void WVR_OnOEMConfigChanged();
	[Token(Token = "0x2000297")]
	public class Interop
	{
		[Token(Token = "0x20005B6")]
		public class WVR_Base
		{
			[Token(Token = "0x4002B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static WVR_Base instance;

			[Token(Token = "0x17000316")]
			public static WVR_Base Instance
			{
				[Token(Token = "0x600279A")]
				[Address(RVA = "0x230BEC4", Offset = "0x230BEC4", VA = "0x230BEC4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0x23101E0", Offset = "0x23101E0", VA = "0x23101E0", Slot = "4")]
			public virtual bool PollEventQueue(ref WVR_Event_t e)
			{
				return default(bool);
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0x23101E8", Offset = "0x23101E8", VA = "0x23101E8", Slot = "5")]
			public virtual int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x600279D")]
			[Address(RVA = "0x23101F0", Offset = "0x23101F0", VA = "0x23101F0", Slot = "6")]
			public virtual WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_AnalogType);
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0x23101F8", Offset = "0x23101F8", VA = "0x23101F8", Slot = "7")]
			public virtual bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
			{
				return default(bool);
			}

			[Token(Token = "0x600279F")]
			[Address(RVA = "0x2310200", Offset = "0x2310200", VA = "0x2310200", Slot = "8")]
			public virtual int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0x2310208", Offset = "0x2310208", VA = "0x2310208", Slot = "9")]
			public virtual bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0x2310210", Offset = "0x2310210", VA = "0x2310210", Slot = "10")]
			public virtual bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0x2310218", Offset = "0x2310218", VA = "0x2310218", Slot = "11")]
			public virtual WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_Axis_t);
			}

			[Token(Token = "0x60027A3")]
			[Address(RVA = "0x2310228", Offset = "0x2310228", VA = "0x2310228", Slot = "12")]
			public virtual void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
			{
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0x231022C", Offset = "0x231022C", VA = "0x231022C", Slot = "13")]
			public virtual void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
			{
			}

			[Token(Token = "0x60027A5")]
			[Address(RVA = "0x2310230", Offset = "0x2310230", VA = "0x2310230", Slot = "14")]
			public virtual bool IsDeviceConnected(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0x2310238", Offset = "0x2310238", VA = "0x2310238", Slot = "15")]
			public virtual void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
			{
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0x231023C", Offset = "0x231023C", VA = "0x231023C", Slot = "16")]
			public virtual void InAppRecenter(WVR_RecenterType recenterType)
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0x2310240", Offset = "0x2310240", VA = "0x2310240", Slot = "17")]
			public virtual void SetNeckModelEnabled(bool enabled)
			{
			}

			[Token(Token = "0x60027A9")]
			[Address(RVA = "0x2310244", Offset = "0x2310244", VA = "0x2310244", Slot = "18")]
			public virtual void SetNeckModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0x2310248", Offset = "0x2310248", VA = "0x2310248", Slot = "19")]
			public virtual void SetArmModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x60027AB")]
			[Address(RVA = "0x231024C", Offset = "0x231024C", VA = "0x231024C", Slot = "20")]
			public virtual void SetArmSticky(bool stickyArm)
			{
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0x2310250", Offset = "0x2310250", VA = "0x2310250", Slot = "21")]
			public virtual bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
			{
				return default(bool);
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0x2310258", Offset = "0x2310258", VA = "0x2310258", Slot = "22")]
			public virtual bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
			{
				return default(bool);
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0x2310260", Offset = "0x2310260", VA = "0x2310260", Slot = "23")]
			public virtual uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
			{
				return default(uint);
			}

			[Token(Token = "0x60027AF")]
			[Address(RVA = "0x2310268", Offset = "0x2310268", VA = "0x2310268", Slot = "24")]
			public virtual WVR_Arena_t GetArena()
			{
				return default(WVR_Arena_t);
			}

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0x231027C", Offset = "0x231027C", VA = "0x231027C", Slot = "25")]
			public virtual bool SetArena(ref WVR_Arena_t arena)
			{
				return default(bool);
			}

			[Token(Token = "0x60027B1")]
			[Address(RVA = "0x2310284", Offset = "0x2310284", VA = "0x2310284", Slot = "26")]
			public virtual WVR_ArenaVisible GetArenaVisible()
			{
				return default(WVR_ArenaVisible);
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0x231028C", Offset = "0x231028C", VA = "0x231028C", Slot = "27")]
			public virtual void SetArenaVisible(WVR_ArenaVisible config)
			{
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0x2310290", Offset = "0x2310290", VA = "0x2310290", Slot = "28")]
			public virtual bool IsOverArenaRange()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0x2310298", Offset = "0x2310298", VA = "0x2310298", Slot = "29")]
			public virtual float GetDeviceBatteryPercentage(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x60027B5")]
			[Address(RVA = "0x23102A0", Offset = "0x23102A0", VA = "0x23102A0", Slot = "30")]
			public virtual WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryStatus);
			}

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0x23102A8", Offset = "0x23102A8", VA = "0x23102A8", Slot = "31")]
			public virtual WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
			{
				return default(WVR_ChargeStatus);
			}

			[Token(Token = "0x60027B7")]
			[Address(RVA = "0x23102B0", Offset = "0x23102B0", VA = "0x23102B0", Slot = "32")]
			public virtual WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryTemperatureStatus);
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0x23102B8", Offset = "0x23102B8", VA = "0x23102B8", Slot = "33")]
			public virtual float GetBatteryTemperature(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0x23102C0", Offset = "0x23102C0", VA = "0x23102C0", Slot = "34")]
			public virtual bool StartEyeTracking()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0x23102C8", Offset = "0x23102C8", VA = "0x23102C8", Slot = "35")]
			public virtual void StopEyeTracking()
			{
			}

			[Token(Token = "0x60027BB")]
			[Address(RVA = "0x23102CC", Offset = "0x23102CC", VA = "0x23102CC", Slot = "36")]
			public virtual bool GetEyePose(ref WVR_EyePose_t eyePose)
			{
				return default(bool);
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0x23102D4", Offset = "0x23102D4", VA = "0x23102D4", Slot = "37")]
			public virtual WVR_InitError Init(WVR_AppType eType)
			{
				return default(WVR_InitError);
			}

			[Token(Token = "0x60027BD")]
			[Address(RVA = "0x23102DC", Offset = "0x23102DC", VA = "0x23102DC", Slot = "38")]
			public virtual void PostInit()
			{
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0x23102E0", Offset = "0x23102E0", VA = "0x23102E0", Slot = "39")]
			public virtual void Quit()
			{
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0x23102E4", Offset = "0x23102E4", VA = "0x23102E4", Slot = "40")]
			public virtual IntPtr GetInitErrorString(WVR_InitError error)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0x23102EC", Offset = "0x23102EC", VA = "0x23102EC", Slot = "41")]
			public virtual uint GetWaveRuntimeVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x60027C1")]
			[Address(RVA = "0x23102F4", Offset = "0x23102F4", VA = "0x23102F4", Slot = "42")]
			public virtual uint GetWaveSDKVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0x23102FC", Offset = "0x23102FC", VA = "0x23102FC", Slot = "43")]
			public virtual bool IsInputFocusCapturedBySystem()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C3")]
			[Address(RVA = "0x2310304", Offset = "0x2310304", VA = "0x2310304", Slot = "44")]
			internal virtual WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
			{
				return default(WVR_RenderError);
			}

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0x231030C", Offset = "0x231030C", VA = "0x231030C", Slot = "45")]
			internal virtual bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
			{
				return default(bool);
			}

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0x2310314", Offset = "0x2310314", VA = "0x2310314", Slot = "46")]
			internal virtual bool EnableAdaptiveQuality(bool enable)
			{
				return default(bool);
			}

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0x231031C", Offset = "0x231031C", VA = "0x231031C", Slot = "47")]
			internal virtual bool IsAdaptiveQualityEnabled()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0x2310324", Offset = "0x2310324", VA = "0x2310324", Slot = "48")]
			public virtual bool StartCamera(ref WVR_CameraInfo_t info)
			{
				return default(bool);
			}

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0x231032C", Offset = "0x231032C", VA = "0x231032C", Slot = "49")]
			public virtual void StopCamera()
			{
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0x2310330", Offset = "0x2310330", VA = "0x2310330", Slot = "50")]
			public virtual bool UpdateTexture(uint textureid)
			{
				return default(bool);
			}

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0x2310338", Offset = "0x2310338", VA = "0x2310338", Slot = "51")]
			public virtual bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
			{
				return default(bool);
			}

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0x2310340", Offset = "0x2310340", VA = "0x2310340", Slot = "52")]
			public virtual bool IsDeviceSuspend(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0x2310348", Offset = "0x2310348", VA = "0x2310348", Slot = "53")]
			public virtual void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
			{
			}

			[Token(Token = "0x60027CD")]
			[Address(RVA = "0x231034C", Offset = "0x231034C", VA = "0x231034C", Slot = "54")]
			public virtual WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
			{
				return default(WVR_NumDoF);
			}

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0x2310354", Offset = "0x2310354", VA = "0x2310354", Slot = "55")]
			public virtual void SetParameters(WVR_DeviceType type, IntPtr pchValue)
			{
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0x2310358", Offset = "0x2310358", VA = "0x2310358", Slot = "56")]
			public virtual uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
			{
				return default(uint);
			}

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0x2310360", Offset = "0x2310360", VA = "0x2310360", Slot = "57")]
			public virtual WVR_DeviceType GetDefaultControllerRole()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0x2310368", Offset = "0x2310368", VA = "0x2310368", Slot = "58")]
			public virtual bool SetInteractionMode(WVR_InteractionMode mode)
			{
				return default(bool);
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0x2310370", Offset = "0x2310370", VA = "0x2310370", Slot = "59")]
			public virtual WVR_InteractionMode GetInteractionMode()
			{
				return default(WVR_InteractionMode);
			}

			[Token(Token = "0x60027D3")]
			[Address(RVA = "0x2310378", Offset = "0x2310378", VA = "0x2310378", Slot = "60")]
			public virtual bool SetGazeTriggerType(WVR_GazeTriggerType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0x2310380", Offset = "0x2310380", VA = "0x2310380", Slot = "61")]
			public virtual WVR_GazeTriggerType GetGazeTriggerType()
			{
				return default(WVR_GazeTriggerType);
			}

			[Token(Token = "0x60027D5")]
			[Address(RVA = "0x2310388", Offset = "0x2310388", VA = "0x2310388", Slot = "62")]
			public virtual bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
			{
				return default(bool);
			}

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0x2310390", Offset = "0x2310390", VA = "0x2310390", Slot = "63")]
			public virtual void GetRenderTargetSize(ref uint width, ref uint height)
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0x2310394", Offset = "0x2310394", VA = "0x2310394", Slot = "64")]
			public virtual WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0x23103B4", Offset = "0x23103B4", VA = "0x23103B4", Slot = "65")]
			public virtual void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
			{
			}

			[Token(Token = "0x60027D9")]
			[Address(RVA = "0x23103B8", Offset = "0x23103B8", VA = "0x23103B8", Slot = "66")]
			public virtual void SetOverfillRatio(float ratioX, float ratioY)
			{
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0x23103BC", Offset = "0x23103BC", VA = "0x23103BC", Slot = "67")]
			public virtual WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0x23103DC", Offset = "0x23103DC", VA = "0x23103DC", Slot = "68")]
			public virtual WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
			{
				return default(WVR_SubmitError);
			}

			[Token(Token = "0x60027DC")]
			[Address(RVA = "0x23103E4", Offset = "0x23103E4", VA = "0x23103E4", Slot = "69")]
			public virtual void PreRenderEye(WVR_Eye eye, [Out] WVR_TextureParams_t[] param, [Out] WVR_RenderFoveationParams[] foveationParams)
			{
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0x23103E8", Offset = "0x23103E8", VA = "0x23103E8", Slot = "70")]
			public virtual bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
			{
				return default(bool);
			}

			[Token(Token = "0x60027DE")]
			[Address(RVA = "0x23103F0", Offset = "0x23103F0", VA = "0x23103F0", Slot = "71")]
			public virtual void RenderMask(WVR_Eye eye)
			{
			}

			[Token(Token = "0x60027DF")]
			[Address(RVA = "0x23103F4", Offset = "0x23103F4", VA = "0x23103F4", Slot = "72")]
			public virtual bool GetRenderProps(ref WVR_RenderProps_t props)
			{
				return default(bool);
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0x23103FC", Offset = "0x23103FC", VA = "0x23103FC", Slot = "73")]
			public virtual IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0x2310404", Offset = "0x2310404", VA = "0x2310404", Slot = "74")]
			public virtual uint GetTextureQueueLength(IntPtr handle)
			{
				return default(uint);
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0x231040C", Offset = "0x231040C", VA = "0x231040C", Slot = "75")]
			public virtual WVR_TextureParams_t GetTexture(IntPtr handle, int index)
			{
				return default(WVR_TextureParams_t);
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0x2310424", Offset = "0x2310424", VA = "0x2310424", Slot = "76")]
			public virtual int GetAvailableTextureIndex(IntPtr handle)
			{
				return default(int);
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0x231042C", Offset = "0x231042C", VA = "0x231042C", Slot = "77")]
			public virtual void ReleaseTextureQueue(IntPtr handle)
			{
			}

			[Token(Token = "0x60027E5")]
			[Address(RVA = "0x2310430", Offset = "0x2310430", VA = "0x2310430", Slot = "78")]
			public virtual bool IsRenderFoveationSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0x2310438", Offset = "0x2310438", VA = "0x2310438", Slot = "79")]
			public virtual void RenderFoveation(bool enable)
			{
			}

			[Token(Token = "0x60027E7")]
			[Address(RVA = "0x231043C", Offset = "0x231043C", VA = "0x231043C", Slot = "80")]
			public virtual void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
			{
			}

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x2310440", Offset = "0x2310440", VA = "0x2310440", Slot = "81")]
			public virtual string DeployRenderModelAssets(int deviceIndex, string renderModelName)
			{
				return null;
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0x231049C", Offset = "0x231049C", VA = "0x231049C", Slot = "82")]
			public virtual void SetFocusedController(WVR_DeviceType focusController)
			{
			}

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x23104A0", Offset = "0x23104A0", VA = "0x23104A0", Slot = "83")]
			public virtual WVR_DeviceType GetFocusedController()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x60027EB")]
			[Address(RVA = "0x23104A8", Offset = "0x23104A8", VA = "0x23104A8", Slot = "84")]
			public virtual bool OpenMesh(string filename, ref uint sessiionid, IntPtr errorCode, bool merge)
			{
				return default(bool);
			}

			[Token(Token = "0x60027EC")]
			[Address(RVA = "0x23104B0", Offset = "0x23104B0", VA = "0x23104B0", Slot = "85")]
			public virtual bool GetSectionCount(uint sessionid, ref uint sectionCount)
			{
				return default(bool);
			}

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0x23104B8", Offset = "0x23104B8", VA = "0x23104B8", Slot = "86")]
			public virtual bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
			{
				return default(bool);
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0x23104C0", Offset = "0x23104C0", VA = "0x23104C0", Slot = "87")]
			public virtual bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
			{
				return default(bool);
			}

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x23104C8", Offset = "0x23104C8", VA = "0x23104C8", Slot = "88")]
			public virtual void ReleaseMesh(uint sessionid)
			{
			}

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x23104CC", Offset = "0x23104CC", VA = "0x23104CC", Slot = "89")]
			public virtual bool IsPermissionInitialed()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x23104D4", Offset = "0x23104D4", VA = "0x23104D4", Slot = "90")]
			public virtual bool ShowDialogOnScene()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0x23104DC", Offset = "0x23104DC", VA = "0x23104DC", Slot = "91")]
			public virtual bool IsPermissionGranted(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0x23104E4", Offset = "0x23104E4", VA = "0x23104E4", Slot = "92")]
			public virtual bool ShouldGrantPermission(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0x23104EC", Offset = "0x23104EC", VA = "0x23104EC", Slot = "93")]
			public virtual void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
			{
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0x23104F0", Offset = "0x23104F0", VA = "0x23104F0", Slot = "94")]
			public virtual void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0x23104F4", Offset = "0x23104F4", VA = "0x23104F4", Slot = "95")]
			public virtual string GetStringBySystemLanguage(string stringName)
			{
				return null;
			}

			[Token(Token = "0x60027F7")]
			[Address(RVA = "0x23104FC", Offset = "0x23104FC", VA = "0x23104FC", Slot = "96")]
			public virtual string GetStringByLanguage(string stringName, string lang, string country)
			{
				return null;
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0x2310504", Offset = "0x2310504", VA = "0x2310504", Slot = "97")]
			public virtual string GetSystemLanguage()
			{
				return null;
			}

			[Token(Token = "0x60027F9")]
			[Address(RVA = "0x2310560", Offset = "0x2310560", VA = "0x2310560", Slot = "98")]
			public virtual string GetSystemCountry()
			{
				return null;
			}

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0x23105BC", Offset = "0x23105BC", VA = "0x23105BC", Slot = "99")]
			public virtual string GetOEMConfigByKey(string key)
			{
				return null;
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0x2310618", Offset = "0x2310618", VA = "0x2310618", Slot = "100")]
			public virtual void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
			{
			}

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0x231061C", Offset = "0x231061C", VA = "0x231061C")]
			public WVR_Base()
			{
			}
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x230BE1C", Offset = "0x230BE1C", VA = "0x230BE1C")]
		public static bool WVR_PollEventQueue(ref WVR_Event_t e)
		{
			return default(bool);
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x230C000", Offset = "0x230C000", VA = "0x230C000")]
		public static int WVR_GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x230C0B0", Offset = "0x230C0B0", VA = "0x230C0B0")]
		public static WVR_AnalogType WVR_GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_AnalogType);
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x230C160", Offset = "0x230C160", VA = "0x230C160")]
		public static bool WVR_GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x230C238", Offset = "0x230C238", VA = "0x230C238")]
		public static int WVR_GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x230C2E8", Offset = "0x230C2E8", VA = "0x230C2E8")]
		public static bool WVR_GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x230C398", Offset = "0x230C398", VA = "0x230C398")]
		public static bool WVR_GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x230C448", Offset = "0x230C448", VA = "0x230C448")]
		public static WVR_Axis_t WVR_GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_Axis_t);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x230C50C", Offset = "0x230C50C", VA = "0x230C50C")]
		public static void WVR_GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x230C5D8", Offset = "0x230C5D8", VA = "0x230C5D8")]
		public static void WVR_GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x230C69C", Offset = "0x230C69C", VA = "0x230C69C")]
		public static bool WVR_IsDeviceConnected(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x230C744", Offset = "0x230C744", VA = "0x230C744")]
		public static void WVR_TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
		{
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x230C814", Offset = "0x230C814", VA = "0x230C814")]
		public static void WVR_InAppRecenter(WVR_RecenterType recenterType)
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x230C8BC", Offset = "0x230C8BC", VA = "0x230C8BC")]
		public static void WVR_SetNeckModelEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0x230C964", Offset = "0x230C964", VA = "0x230C964")]
		public static void WVR_SetNeckModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0x230CA0C", Offset = "0x230CA0C", VA = "0x230CA0C")]
		public static void WVR_SetArmModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0x230CAB4", Offset = "0x230CAB4", VA = "0x230CAB4")]
		public static void WVR_SetArmSticky(bool stickyArm)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0x230CB5C", Offset = "0x230CB5C", VA = "0x230CB5C")]
		public static bool WVR_SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0x230CC20", Offset = "0x230CC20", VA = "0x230CC20")]
		public static bool WVR_GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x230CCE4", Offset = "0x230CCE4", VA = "0x230CCE4")]
		public static uint WVR_GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
		{
			return default(uint);
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x230CDA8", Offset = "0x230CDA8", VA = "0x230CDA8")]
		public static WVR_Arena_t WVR_GetArena()
		{
			return default(WVR_Arena_t);
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x230CE50", Offset = "0x230CE50", VA = "0x230CE50")]
		public static bool WVR_SetArena(ref WVR_Arena_t arena)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x230CEF8", Offset = "0x230CEF8", VA = "0x230CEF8")]
		public static WVR_ArenaVisible WVR_GetArenaVisible()
		{
			return default(WVR_ArenaVisible);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x230CF98", Offset = "0x230CF98", VA = "0x230CF98")]
		public static void WVR_SetArenaVisible(WVR_ArenaVisible config)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x230D040", Offset = "0x230D040", VA = "0x230D040")]
		public static bool WVR_IsOverArenaRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x230D0E0", Offset = "0x230D0E0", VA = "0x230D0E0")]
		public static float WVR_GetDeviceBatteryPercentage(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x230D188", Offset = "0x230D188", VA = "0x230D188")]
		public static WVR_BatteryStatus WVR_GetBatteryStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryStatus);
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x230D230", Offset = "0x230D230", VA = "0x230D230")]
		public static WVR_ChargeStatus WVR_GetChargeStatus(WVR_DeviceType type)
		{
			return default(WVR_ChargeStatus);
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x230D2D8", Offset = "0x230D2D8", VA = "0x230D2D8")]
		public static WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryTemperatureStatus);
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x230D380", Offset = "0x230D380", VA = "0x230D380")]
		public static float WVR_GetBatteryTemperature(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x230D428", Offset = "0x230D428", VA = "0x230D428")]
		public static bool WVR_StartEyeTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x230D4C8", Offset = "0x230D4C8", VA = "0x230D4C8")]
		public static void WVR_StopEyeTracking()
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x230D568", Offset = "0x230D568", VA = "0x230D568")]
		public static bool WVR_GetEyePose(ref WVR_EyePose_t eyePose)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x230D610", Offset = "0x230D610", VA = "0x230D610")]
		public static WVR_InitError WVR_Init(WVR_AppType eType)
		{
			return default(WVR_InitError);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x230D6B8", Offset = "0x230D6B8", VA = "0x230D6B8")]
		public static void WVR_PostInit()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x230D758", Offset = "0x230D758", VA = "0x230D758")]
		public static void WVR_Quit()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x230D7F8", Offset = "0x230D7F8", VA = "0x230D7F8")]
		public static IntPtr WVR_GetInitErrorString(WVR_InitError error)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0x230D8A0", Offset = "0x230D8A0", VA = "0x230D8A0")]
		public static uint WVR_GetWaveRuntimeVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0x230D940", Offset = "0x230D940", VA = "0x230D940")]
		public static uint WVR_GetWaveSDKVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0x230D9E0", Offset = "0x230D9E0", VA = "0x230D9E0")]
		public static bool WVR_IsInputFocusCapturedBySystem()
		{
			return default(bool);
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0x230DA80", Offset = "0x230DA80", VA = "0x230DA80")]
		internal static WVR_RenderError WVR_RenderInit(ref WVR_RenderInitParams_t param)
		{
			return default(WVR_RenderError);
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0x230DB28", Offset = "0x230DB28", VA = "0x230DB28")]
		public static bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0x230DBD8", Offset = "0x230DBD8", VA = "0x230DBD8")]
		public static bool WVR_EnableAdaptiveQuality(bool enable)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x230DC80", Offset = "0x230DC80", VA = "0x230DC80")]
		public static bool WVR_IsAdaptiveQualityEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x230DD20", Offset = "0x230DD20", VA = "0x230DD20")]
		public static bool WVR_StartCamera(ref WVR_CameraInfo_t info)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x230DDC8", Offset = "0x230DDC8", VA = "0x230DDC8")]
		public static void WVR_StopCamera()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0x230DE68", Offset = "0x230DE68", VA = "0x230DE68")]
		public static bool WVR_UpdateTexture(uint textureid)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0x230DF10", Offset = "0x230DF10", VA = "0x230DF10")]
		public static bool WVR_GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0x230DFC0", Offset = "0x230DFC0", VA = "0x230DFC0")]
		public static bool WVR_IsDeviceSuspend(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0x230E068", Offset = "0x230E068", VA = "0x230E068")]
		public static void WVR_ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0x230E12C", Offset = "0x230E12C", VA = "0x230E12C")]
		public static WVR_NumDoF WVR_GetDegreeOfFreedom(WVR_DeviceType type)
		{
			return default(WVR_NumDoF);
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0x230E1D4", Offset = "0x230E1D4", VA = "0x230E1D4")]
		public static void WVR_SetParameters(WVR_DeviceType type, IntPtr pchValue)
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0x230E284", Offset = "0x230E284", VA = "0x230E284")]
		public static uint WVR_GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x230E350", Offset = "0x230E350", VA = "0x230E350")]
		public static WVR_DeviceType WVR_GetDefaultControllerRole()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x230E3F0", Offset = "0x230E3F0", VA = "0x230E3F0")]
		public static bool WVR_SetInteractionMode(WVR_InteractionMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x230E498", Offset = "0x230E498", VA = "0x230E498")]
		public static WVR_InteractionMode WVR_GetInteractionMode()
		{
			return default(WVR_InteractionMode);
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x230E538", Offset = "0x230E538", VA = "0x230E538")]
		public static bool WVR_SetGazeTriggerType(WVR_GazeTriggerType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0x230E5E0", Offset = "0x230E5E0", VA = "0x230E5E0")]
		public static WVR_GazeTriggerType WVR_GetGazeTriggerType()
		{
			return default(WVR_GazeTriggerType);
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0x230E680", Offset = "0x230E680", VA = "0x230E680")]
		public static bool WVR_GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0x230E730", Offset = "0x230E730", VA = "0x230E730")]
		public static void WVR_GetRenderTargetSize(ref uint width, ref uint height)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0x230E7E0", Offset = "0x230E7E0", VA = "0x230E7E0")]
		public static WVR_Matrix4f_t WVR_GetProjection(WVR_Eye eye, float near, float far)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0x230E8B8", Offset = "0x230E8B8", VA = "0x230E8B8")]
		public static void WVR_GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0x230E988", Offset = "0x230E988", VA = "0x230E988")]
		public static void WVR_SetOverfillRatio(float ratioX, float ratioY)
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0x230EA38", Offset = "0x230EA38", VA = "0x230EA38")]
		public static WVR_Matrix4f_t WVR_GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0x230EAFC", Offset = "0x230EAFC", VA = "0x230EAFC")]
		public static WVR_SubmitError WVR_SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
		{
			return default(WVR_SubmitError);
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0x230EBC8", Offset = "0x230EBC8", VA = "0x230EBC8")]
		public static void WVR_PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0x230EC8C", Offset = "0x230EC8C", VA = "0x230EC8C")]
		public static bool WVR_RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
		{
			return default(bool);
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0x230ED58", Offset = "0x230ED58", VA = "0x230ED58")]
		public static void WVR_RenderMask(WVR_Eye eye)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0x230EE00", Offset = "0x230EE00", VA = "0x230EE00")]
		public static bool WVR_GetRenderProps(ref WVR_RenderProps_t props)
		{
			return default(bool);
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0x230EEA8", Offset = "0x230EEA8", VA = "0x230EEA8")]
		public static IntPtr WVR_ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0x230EF80", Offset = "0x230EF80", VA = "0x230EF80")]
		public static uint WVR_GetTextureQueueLength(IntPtr handle)
		{
			return default(uint);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0x230F028", Offset = "0x230F028", VA = "0x230F028")]
		public static WVR_TextureParams_t WVR_GetTexture(IntPtr handle, int index)
		{
			return default(WVR_TextureParams_t);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0x230F0EC", Offset = "0x230F0EC", VA = "0x230F0EC")]
		public static int WVR_GetAvailableTextureIndex(IntPtr handle)
		{
			return default(int);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0x230F194", Offset = "0x230F194", VA = "0x230F194")]
		public static void WVR_ReleaseTextureQueue(IntPtr handle)
		{
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0x230F23C", Offset = "0x230F23C", VA = "0x230F23C")]
		public static bool WVR_IsRenderFoveationSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0x230F2DC", Offset = "0x230F2DC", VA = "0x230F2DC")]
		public static void WVR_RenderFoveation(bool enable)
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0x230F384", Offset = "0x230F384", VA = "0x230F384")]
		public static bool WVR_IsPermissionInitialed()
		{
			return default(bool);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0x230F424", Offset = "0x230F424", VA = "0x230F424")]
		public static bool WVR_ShowDialogOnScene()
		{
			return default(bool);
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0x230F4C4", Offset = "0x230F4C4", VA = "0x230F4C4")]
		public static bool WVR_IsPermissionGranted(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0x230F56C", Offset = "0x230F56C", VA = "0x230F56C")]
		public static bool WVR_ShouldGrantPermission(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0x230F614", Offset = "0x230F614", VA = "0x230F614")]
		public static void WVR_RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0x230F6C4", Offset = "0x230F6C4", VA = "0x230F6C4")]
		public static void WVR_RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0x230F76C", Offset = "0x230F76C", VA = "0x230F76C")]
		public static string WVR_GetStringBySystemLanguage(string stringName)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0x230F814", Offset = "0x230F814", VA = "0x230F814")]
		public static string WVR_GetStringByLanguage(string stringName, string lang, string country)
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0x230F8D8", Offset = "0x230F8D8", VA = "0x230F8D8")]
		public static string WVR_GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0x230F978", Offset = "0x230F978", VA = "0x230F978")]
		public static string WVR_GetSystemCountry()
		{
			return null;
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0x230FA18", Offset = "0x230FA18", VA = "0x230FA18")]
		public static void WVR_SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0x230FADC", Offset = "0x230FADC", VA = "0x230FADC")]
		public static string WVR_DeployRenderModelAssets(int deviceIndex, string renderModelName)
		{
			return null;
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0x230FB8C", Offset = "0x230FB8C", VA = "0x230FB8C")]
		public static void WVR_SetFocusedController(WVR_DeviceType focusController)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0x230FC34", Offset = "0x230FC34", VA = "0x230FC34")]
		public static WVR_DeviceType WVR_GetFocusedController()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0x230FCD4", Offset = "0x230FCD4", VA = "0x230FCD4")]
		public static bool WVR_OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
		{
			return default(bool);
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0x230FDA0", Offset = "0x230FDA0", VA = "0x230FDA0")]
		public static bool WVR_GetSectionCount(uint sessionid, ref uint sectionCount)
		{
			return default(bool);
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0x230FE50", Offset = "0x230FE50", VA = "0x230FE50")]
		public static bool WVR_GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
		{
			return default(bool);
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0x230FF00", Offset = "0x230FF00", VA = "0x230FF00")]
		public static bool WVR_GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0x230FFE0", Offset = "0x230FFE0", VA = "0x230FFE0")]
		public static void WVR_ReleaseMesh(uint sessiionid)
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0x2310088", Offset = "0x2310088", VA = "0x2310088")]
		public static string WVR_GetOEMConfigByKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0x2310130", Offset = "0x2310130", VA = "0x2310130")]
		public static void WVR_SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0x23101D8", Offset = "0x23101D8", VA = "0x23101D8")]
		public Interop()
		{
		}
	}
}
namespace wvr.TypeExtensions
{
	[Token(Token = "0x2000298")]
	public static class ClassExtensions
	{
	}
	[Token(Token = "0x2000299")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6001429")]
		[Address(RVA = "0x202EFF8", Offset = "0x202EFF8", VA = "0x202EFF8")]
		public static string Name(this WVR_DeviceType e)
		{
			return null;
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0x202F074", Offset = "0x202F074", VA = "0x202F074")]
		public static string Name(this WVR_InputId e)
		{
			return null;
		}
	}
}
namespace wvr.render
{
	[Token(Token = "0x200029A")]
	public class WaveVR_FoveatedRendering : MonoBehaviour
	{
		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DDC", Offset = "0x5C2DDC")]
		private sealed class <SetEnableCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WaveVR_FoveatedRendering <>4__this;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002801")]
				[Address(RVA = "0x2035388", Offset = "0x2035388", VA = "0x2035388", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002803")]
				[Address(RVA = "0x2035418", Offset = "0x2035418", VA = "0x2035418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0x2034210", Offset = "0x2034210", VA = "0x2034210")]
			[DebuggerHidden]
			public <SetEnableCoroutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x60027FF")]
			[Address(RVA = "0x2034FD4", Offset = "0x2034FD4", VA = "0x2034FD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002800")]
			[Address(RVA = "0x2034FD8", Offset = "0x2034FD8", VA = "0x2034FD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002802")]
			[Address(RVA = "0x2035390", Offset = "0x2035390", VA = "0x2035390", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TAG;

		[Token(Token = "0x4001CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string StaticTrackedObjectName;

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C6F30", Offset = "0x5C6F30")]
		private static WaveVR_FoveatedRendering <Instance>k__BackingField;

		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool useValuesInInspector;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6F40", Offset = "0x5C6F40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6F40", Offset = "0x5C6F40")]
		[SerializeField]
		private float leftClearVisionFOV;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C6FA4", Offset = "0x5C6FA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C6FA4", Offset = "0x5C6FA4")]
		[SerializeField]
		private float rightClearVisionFOV;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7008", Offset = "0x5C7008")]
		[SerializeField]
		private WVR_PeripheralQuality leftPeripheralQuality;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7050", Offset = "0x5C7050")]
		[SerializeField]
		private WVR_PeripheralQuality rightPeripheralQuality;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7098", Offset = "0x5C7098")]
		[SerializeField]
		private Vector3 staticFocalPoint;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private static bool isEnabled;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C70E0", Offset = "0x5C70E0")]
		[SerializeField]
		private GameObject trackedObject;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameObject staticTrackedObject;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7154", Offset = "0x5C7154")]
		private Vector2 <LeftNDCSpace>k__BackingField;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7164", Offset = "0x5C7164")]
		private Vector2 <RightNDCSpace>k__BackingField;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isDirty;

		[Token(Token = "0x170000C4")]
		public static WaveVR_FoveatedRendering Instance
		{
			[Token(Token = "0x600142B")]
			[Address(RVA = "0x2033408", Offset = "0x2033408", VA = "0x2033408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE710", Offset = "0x5CE710")]
			get
			{
				return null;
			}
			[Token(Token = "0x600142C")]
			[Address(RVA = "0x2033494", Offset = "0x2033494", VA = "0x2033494")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE720", Offset = "0x5CE720")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public float LeftClearVisionFOV
		{
			[Token(Token = "0x600142D")]
			[Address(RVA = "0x2033524", Offset = "0x2033524", VA = "0x2033524")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600142E")]
			[Address(RVA = "0x203352C", Offset = "0x203352C", VA = "0x203352C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public float RightClearVisionFOV
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0x20335CC", Offset = "0x20335CC", VA = "0x20335CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0x20335D4", Offset = "0x20335D4", VA = "0x20335D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public WVR_PeripheralQuality LeftPeripheralQuality
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0x2033674", Offset = "0x2033674", VA = "0x2033674")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6001432")]
			[Address(RVA = "0x203367C", Offset = "0x203367C", VA = "0x203367C")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public WVR_PeripheralQuality RightPeripheralQuality
		{
			[Token(Token = "0x6001433")]
			[Address(RVA = "0x203368C", Offset = "0x203368C", VA = "0x203368C")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6001434")]
			[Address(RVA = "0x2033694", Offset = "0x2033694", VA = "0x2033694")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public Vector3 StaticFocalPoint
		{
			[Token(Token = "0x6001435")]
			[Address(RVA = "0x20336A4", Offset = "0x20336A4", VA = "0x20336A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001436")]
			[Address(RVA = "0x20336B8", Offset = "0x20336B8", VA = "0x20336B8")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public GameObject TrackedObject
		{
			[Token(Token = "0x6001437")]
			[Address(RVA = "0x20336CC", Offset = "0x20336CC", VA = "0x20336CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001438")]
			[Address(RVA = "0x20336D4", Offset = "0x20336D4", VA = "0x20336D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public Vector2 LeftNDCSpace
		{
			[Token(Token = "0x6001439")]
			[Address(RVA = "0x20336E4", Offset = "0x20336E4", VA = "0x20336E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE730", Offset = "0x5CE730")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600143A")]
			[Address(RVA = "0x20336F8", Offset = "0x20336F8", VA = "0x20336F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE740", Offset = "0x5CE740")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public Vector2 RightNDCSpace
		{
			[Token(Token = "0x600143B")]
			[Address(RVA = "0x2033704", Offset = "0x2033704", VA = "0x2033704")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE750", Offset = "0x5CE750")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600143C")]
			[Address(RVA = "0x2033718", Offset = "0x2033718", VA = "0x2033718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE760", Offset = "0x5CE760")]
			private set
			{
			}
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0x2033724", Offset = "0x2033724", VA = "0x2033724")]
		public void Apply()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0x2033E64", Offset = "0x2033E64", VA = "0x2033E64")]
		private void ValidateFOV(float fov)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0x2033F30", Offset = "0x2033F30", VA = "0x2033F30")]
		private void ValidateQuality(WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0x2033FD8", Offset = "0x2033FD8", VA = "0x2033FD8")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0x2034008", Offset = "0x2034008", VA = "0x2034008")]
		public void Set(WVR_Eye eye, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0x2034148", Offset = "0x2034148", VA = "0x2034148")]
		public void Set(float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0x2034184", Offset = "0x2034184", VA = "0x2034184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CE770", Offset = "0x5CE770")]
		private IEnumerator SetEnableCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0x2034230", Offset = "0x2034230", VA = "0x2034230")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0x20342E4", Offset = "0x20342E4", VA = "0x20342E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0x2034488", Offset = "0x2034488", VA = "0x2034488")]
		private void CreateTrackedObject(WaveVR_Render render)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0x2034764", Offset = "0x2034764", VA = "0x2034764")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0x20337C0", Offset = "0x20337C0", VA = "0x20337C0")]
		private void doUpdate()
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0x2034774", Offset = "0x2034774", VA = "0x2034774")]
		public static Vector2 WorldToNDC_GL(Camera camera, Vector3 worldPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0x2034B30", Offset = "0x2034B30", VA = "0x2034B30")]
		private static void SetFoveatedRenderingParameterCheck(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0x2034D08", Offset = "0x2034D08", VA = "0x2034D08")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0x2034DCC", Offset = "0x2034DCC", VA = "0x2034DCC")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, Vector2 ndcSpace, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0x2034EA8", Offset = "0x2034EA8", VA = "0x2034EA8")]
		public WaveVR_FoveatedRendering()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public struct TextureConfig
	{
		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int depth;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RenderTextureFormat format;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useMipMap;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int anisoLevel;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FilterMode filterMode;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int antiAliasing;
	}
	[Token(Token = "0x200029C")]
	public class EyeConfig
	{
		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7174", Offset = "0x5C7174")]
		private bool <isBoth>k__BackingField;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7184", Offset = "0x5C7184")]
		private bool <isLeft>k__BackingField;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7194", Offset = "0x5C7194")]
		private bool <isRight>k__BackingField;

		[Token(Token = "0x170000CD")]
		public bool isBoth
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0x2030A70", Offset = "0x2030A70", VA = "0x2030A70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE7E8", Offset = "0x5CE7E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001451")]
			[Address(RVA = "0x2030A60", Offset = "0x2030A60", VA = "0x2030A60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE7F8", Offset = "0x5CE7F8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public bool isLeft
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0x2030A68", Offset = "0x2030A68", VA = "0x2030A68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE808", Offset = "0x5CE808")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001453")]
			[Address(RVA = "0x2030A50", Offset = "0x2030A50", VA = "0x2030A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE818", Offset = "0x5CE818")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000CF")]
		public bool isRight
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0x2030A78", Offset = "0x2030A78", VA = "0x2030A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE828", Offset = "0x5CE828")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001455")]
			[Address(RVA = "0x2030A58", Offset = "0x2030A58", VA = "0x2030A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE838", Offset = "0x5CE838")]
			protected set
			{
			}
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0x2030A04", Offset = "0x2030A04", VA = "0x2030A04")]
		public EyeConfig(WVR_Eye eye)
		{
		}
	}
	[Token(Token = "0x200029D")]
	public abstract class TexturePool<T> : EyeConfig where T : class
	{
		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr queue;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> rts;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, T> textures;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, int> depthes;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TextureConfig cfg;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71A4", Offset = "0x5C71A4")]
		private int <size>k__BackingField;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71B4", Offset = "0x5C71B4")]
		private T <currentRt>k__BackingField;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71C4", Offset = "0x5C71C4")]
		private int <currentPtr>k__BackingField;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71D4", Offset = "0x5C71D4")]
		private int <currentDepthPtr>k__BackingField;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71E4", Offset = "0x5C71E4")]
		private bool <isReleased>k__BackingField;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] keyArray;

		[Token(Token = "0x170000D0")]
		public TextureConfig Config
		{
			[Token(Token = "0x6001456")]
			get
			{
				return default(TextureConfig);
			}
			[Token(Token = "0x6001457")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public int size
		{
			[Token(Token = "0x6001458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE848", Offset = "0x5CE848")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001459")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE858", Offset = "0x5CE858")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public T currentRt
		{
			[Token(Token = "0x600145A")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE868", Offset = "0x5CE868")]
			get
			{
				return null;
			}
			[Token(Token = "0x600145B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE878", Offset = "0x5CE878")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		public int currentPtr
		{
			[Token(Token = "0x600145C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE888", Offset = "0x5CE888")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600145D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE898", Offset = "0x5CE898")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D4")]
		public int currentDepthPtr
		{
			[Token(Token = "0x600145E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8A8", Offset = "0x5CE8A8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600145F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8B8", Offset = "0x5CE8B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public bool isReleased
		{
			[Token(Token = "0x6001460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8C8", Offset = "0x5CE8C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001461")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8D8", Offset = "0x5CE8D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001462")]
		protected abstract T CreateTexture(TextureConfig cfg);

		[Token(Token = "0x6001463")]
		protected abstract bool CfgValidate(T rt);

		[Token(Token = "0x6001464")]
		protected abstract int GetNativePtr(T rt);

		[Token(Token = "0x6001465")]
		protected abstract int GetNativeDepthBufferPtr(T rt);

		[Token(Token = "0x6001466")]
		protected abstract void ReleaseTexture(T rt);

		[Token(Token = "0x6001467")]
		public TexturePool(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6001468")]
		~TexturePool()
		{
		}

		[Token(Token = "0x6001469")]
		private T GetRenderTextureByPtr(int ptr)
		{
			return null;
		}

		[Token(Token = "0x600146A")]
		private int GetDepthByPtr(int ptr)
		{
			return default(int);
		}

		[Token(Token = "0x600146B")]
		public void next()
		{
		}

		[Token(Token = "0x600146C")]
		private void ReplaceCurrentWithNewTexture()
		{
		}

		[Token(Token = "0x600146D")]
		public void Release()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class TexturePool2DArray : TexturePool<Texture2DArray>
	{
		[Token(Token = "0x600146E")]
		[Address(RVA = "0x2032800", Offset = "0x2032800", VA = "0x2032800")]
		public TexturePool2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0x20328F0", Offset = "0x20328F0", VA = "0x20328F0", Slot = "4")]
		protected override Texture2DArray CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0x20329F4", Offset = "0x20329F4", VA = "0x20329F4", Slot = "5")]
		protected override bool CfgValidate(Texture2DArray rt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0x2032A68", Offset = "0x2032A68", VA = "0x2032A68", Slot = "6")]
		protected override int GetNativePtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0x2032B20", Offset = "0x2032B20", VA = "0x2032B20", Slot = "7")]
		protected override int GetNativeDepthBufferPtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0x2032B28", Offset = "0x2032B28", VA = "0x2032B28", Slot = "8")]
		protected override void ReleaseTexture(Texture2DArray rt)
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class TexturePoolRenderTexture2DArray : TexturePool<RenderTexture>
	{
		[Token(Token = "0x6001474")]
		[Address(RVA = "0x2031C34", Offset = "0x2031C34", VA = "0x2031C34")]
		public TexturePoolRenderTexture2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6001475")]
		[Address(RVA = "0x2032F5C", Offset = "0x2032F5C", VA = "0x2032F5C", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6001476")]
		[Address(RVA = "0x2033178", Offset = "0x2033178", VA = "0x2033178", Slot = "5")]
		protected override bool CfgValidate(RenderTexture rt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001477")]
		[Address(RVA = "0x20331EC", Offset = "0x20331EC", VA = "0x20331EC", Slot = "6")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0x20332A4", Offset = "0x20332A4", VA = "0x20332A4", Slot = "7")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0x203335C", Offset = "0x203335C", VA = "0x203335C", Slot = "8")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class TexturePoolRenderTexture : TexturePool<RenderTexture>
	{
		[Token(Token = "0x600147A")]
		[Address(RVA = "0x2031D24", Offset = "0x2031D24", VA = "0x2031D24")]
		public TexturePoolRenderTexture(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0x2032B2C", Offset = "0x2032B2C", VA = "0x2032B2C", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0x2032CCC", Offset = "0x2032CCC", VA = "0x2032CCC", Slot = "5")]
		protected override bool CfgValidate(RenderTexture rt)
		{
			return default(bool);
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x2032D40", Offset = "0x2032D40", VA = "0x2032D40", Slot = "6")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x2032DF8", Offset = "0x2032DF8", VA = "0x2032DF8", Slot = "7")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x2032EB0", Offset = "0x2032EB0", VA = "0x2032EB0", Slot = "8")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class TextureManager
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string TAG;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int poolSize;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C71F4", Offset = "0x5C71F4")]
		private bool <IsSinglePass>k__BackingField;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7204", Offset = "0x5C7204")]
		private bool <AllowAntiAliasing>k__BackingField;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7214", Offset = "0x5C7214")]
		private TexturePoolRenderTexture <left>k__BackingField;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7224", Offset = "0x5C7224")]
		private TexturePoolRenderTexture <right>k__BackingField;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7234", Offset = "0x5C7234")]
		private TexturePoolRenderTexture2DArray <both>k__BackingField;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int screenWidth;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int screenHeight;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly float pixelDensity;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float resolutionScale;

		[Token(Token = "0x170000D6")]
		public bool IsSinglePass
		{
			[Token(Token = "0x6001480")]
			[Address(RVA = "0x2030A80", Offset = "0x2030A80", VA = "0x2030A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8E8", Offset = "0x5CE8E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001481")]
			[Address(RVA = "0x2030A88", Offset = "0x2030A88", VA = "0x2030A88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE8F8", Offset = "0x5CE8F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D7")]
		public bool AllowAntiAliasing
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0x2030A90", Offset = "0x2030A90", VA = "0x2030A90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE908", Offset = "0x5CE908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001483")]
			[Address(RVA = "0x2030A98", Offset = "0x2030A98", VA = "0x2030A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE918", Offset = "0x5CE918")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D8")]
		public TexturePoolRenderTexture left
		{
			[Token(Token = "0x6001484")]
			[Address(RVA = "0x2030AA0", Offset = "0x2030AA0", VA = "0x2030AA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE928", Offset = "0x5CE928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001485")]
			[Address(RVA = "0x2030AA8", Offset = "0x2030AA8", VA = "0x2030AA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE938", Offset = "0x5CE938")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public TexturePoolRenderTexture right
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0x2030AB0", Offset = "0x2030AB0", VA = "0x2030AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE948", Offset = "0x5CE948")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001487")]
			[Address(RVA = "0x2030AB8", Offset = "0x2030AB8", VA = "0x2030AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE958", Offset = "0x5CE958")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public TexturePoolRenderTexture2DArray both
		{
			[Token(Token = "0x6001488")]
			[Address(RVA = "0x2030AC0", Offset = "0x2030AC0", VA = "0x2030AC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE968", Offset = "0x5CE968")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001489")]
			[Address(RVA = "0x2030AC8", Offset = "0x2030AC8", VA = "0x2030AC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CE978", Offset = "0x5CE978")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public float PixelDensity
		{
			[Token(Token = "0x600148A")]
			[Address(RVA = "0x2030AD0", Offset = "0x2030AD0", VA = "0x2030AD0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000DC")]
		public float ResolutionScale
		{
			[Token(Token = "0x600148B")]
			[Address(RVA = "0x2030AD8", Offset = "0x2030AD8", VA = "0x2030AD8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000DD")]
		public float FinalScale
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0x2030AE0", Offset = "0x2030AE0", VA = "0x2030AE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x2030AF4", Offset = "0x2030AF4", VA = "0x2030AF4")]
		public TextureManager(bool isSinglePass, bool allowAntiAliasing, float pixelDensity = 1f, float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x2031800", Offset = "0x2031800", VA = "0x2031800")]
		public void ReleaseTexturePools()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x2031A28", Offset = "0x2031A28", VA = "0x2031A28")]
		private float GetPreviewImageRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x2031B40", Offset = "0x2031B40", VA = "0x2031B40")]
		private static int ToMultipleOfTwo(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0x2030F6C", Offset = "0x2030F6C", VA = "0x2030F6C")]
		public void reset()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0x2031B4C", Offset = "0x2031B4C", VA = "0x2031B4C")]
		public bool validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0x2031E20", Offset = "0x2031E20", VA = "0x2031E20")]
		public void Resize(float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0x2032354", Offset = "0x2032354", VA = "0x2032354")]
		public void Next()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0x203243C", Offset = "0x203243C", VA = "0x203243C")]
		public int GetNativePtr(WVR_Eye eye)
		{
			return default(int);
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0x20324E4", Offset = "0x20324E4", VA = "0x20324E4")]
		public int GetNativePtrLR(bool isLeftEye)
		{
			return default(int);
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0x203256C", Offset = "0x203256C", VA = "0x203256C")]
		public int GetNativePtrBoth()
		{
			return default(int);
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0x20325E4", Offset = "0x20325E4", VA = "0x20325E4")]
		public Texture GetRenderTexture(WVR_Eye eye)
		{
			return null;
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0x203268C", Offset = "0x203268C", VA = "0x203268C")]
		public RenderTexture GetRenderTextureBoth()
		{
			return null;
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0x2032704", Offset = "0x2032704", VA = "0x2032704")]
		public RenderTexture GetRenderTextureLR(bool isLeftEye)
		{
			return null;
		}
	}
}
namespace wvr.render.gl
{
	[Token(Token = "0x20002A2")]
	public static class UGL
	{
		[Token(Token = "0x20005B8")]
		public enum GLenum2
		{
			[Token(Token = "0x4002B3A")]
			GL_DEPTH_BUFFER_BIT = 256,
			[Token(Token = "0x4002B3B")]
			GL_STENCIL_BUFFER_BIT = 1024,
			[Token(Token = "0x4002B3C")]
			GL_COLOR_BUFFER_BIT = 16384,
			[Token(Token = "0x4002B3D")]
			GL_FALSE = 0,
			[Token(Token = "0x4002B3E")]
			GL_TRUE = 1,
			[Token(Token = "0x4002B3F")]
			GL_POINTS = 0,
			[Token(Token = "0x4002B40")]
			GL_LINES = 1,
			[Token(Token = "0x4002B41")]
			GL_LINE_LOOP = 2,
			[Token(Token = "0x4002B42")]
			GL_LINE_STRIP = 3,
			[Token(Token = "0x4002B43")]
			GL_TRIANGLES = 4,
			[Token(Token = "0x4002B44")]
			GL_TRIANGLE_STRIP = 5,
			[Token(Token = "0x4002B45")]
			GL_TRIANGLE_FAN = 6,
			[Token(Token = "0x4002B46")]
			GL_ZERO = 0,
			[Token(Token = "0x4002B47")]
			GL_ONE = 1,
			[Token(Token = "0x4002B48")]
			GL_SRC_COLOR = 768,
			[Token(Token = "0x4002B49")]
			GL_ONE_MINUS_SRC_COLOR = 769,
			[Token(Token = "0x4002B4A")]
			GL_SRC_ALPHA = 770,
			[Token(Token = "0x4002B4B")]
			GL_ONE_MINUS_SRC_ALPHA = 771,
			[Token(Token = "0x4002B4C")]
			GL_DST_ALPHA = 772,
			[Token(Token = "0x4002B4D")]
			GL_ONE_MINUS_DST_ALPHA = 773,
			[Token(Token = "0x4002B4E")]
			GL_DST_COLOR = 774,
			[Token(Token = "0x4002B4F")]
			GL_ONE_MINUS_DST_COLOR = 775,
			[Token(Token = "0x4002B50")]
			GL_SRC_ALPHA_SATURATE = 776,
			[Token(Token = "0x4002B51")]
			GL_FUNC_ADD = 32774,
			[Token(Token = "0x4002B52")]
			GL_BLEND_EQUATION = 32777,
			[Token(Token = "0x4002B53")]
			GL_BLEND_EQUATION_RGB = 32777,
			[Token(Token = "0x4002B54")]
			GL_BLEND_EQUATION_ALPHA = 34877,
			[Token(Token = "0x4002B55")]
			GL_FUNC_SUBTRACT = 32778,
			[Token(Token = "0x4002B56")]
			GL_FUNC_REVERSE_SUBTRACT = 32779,
			[Token(Token = "0x4002B57")]
			GL_BLEND_DST_RGB = 32968,
			[Token(Token = "0x4002B58")]
			GL_BLEND_SRC_RGB = 32969,
			[Token(Token = "0x4002B59")]
			GL_BLEND_DST_ALPHA = 32970,
			[Token(Token = "0x4002B5A")]
			GL_BLEND_SRC_ALPHA = 32971,
			[Token(Token = "0x4002B5B")]
			GL_CONSTANT_COLOR = 32769,
			[Token(Token = "0x4002B5C")]
			GL_ONE_MINUS_CONSTANT_COLOR = 32770,
			[Token(Token = "0x4002B5D")]
			GL_CONSTANT_ALPHA = 32771,
			[Token(Token = "0x4002B5E")]
			GL_ONE_MINUS_CONSTANT_ALPHA = 32772,
			[Token(Token = "0x4002B5F")]
			GL_BLEND_COLOR = 32773,
			[Token(Token = "0x4002B60")]
			GL_ARRAY_BUFFER = 34962,
			[Token(Token = "0x4002B61")]
			GL_ELEMENT_ARRAY_BUFFER = 34963,
			[Token(Token = "0x4002B62")]
			GL_ARRAY_BUFFER_BINDING = 34964,
			[Token(Token = "0x4002B63")]
			GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965,
			[Token(Token = "0x4002B64")]
			GL_STREAM_DRAW = 35040,
			[Token(Token = "0x4002B65")]
			GL_STATIC_DRAW = 35044,
			[Token(Token = "0x4002B66")]
			GL_DYNAMIC_DRAW = 35048,
			[Token(Token = "0x4002B67")]
			GL_BUFFER_SIZE = 34660,
			[Token(Token = "0x4002B68")]
			GL_BUFFER_USAGE = 34661,
			[Token(Token = "0x4002B69")]
			GL_CURRENT_VERTEX_ATTRIB = 34342,
			[Token(Token = "0x4002B6A")]
			GL_FRONT = 1028,
			[Token(Token = "0x4002B6B")]
			GL_BACK = 1029,
			[Token(Token = "0x4002B6C")]
			GL_FRONT_AND_BACK = 1032,
			[Token(Token = "0x4002B6D")]
			GL_TEXTURE_2D = 3553,
			[Token(Token = "0x4002B6E")]
			GL_CULL_FACE = 2884,
			[Token(Token = "0x4002B6F")]
			GL_BLEND = 3042,
			[Token(Token = "0x4002B70")]
			GL_DITHER = 3024,
			[Token(Token = "0x4002B71")]
			GL_STENCIL_TEST = 2960,
			[Token(Token = "0x4002B72")]
			GL_DEPTH_TEST = 2929,
			[Token(Token = "0x4002B73")]
			GL_SCISSOR_TEST = 3089,
			[Token(Token = "0x4002B74")]
			GL_POLYGON_OFFSET_FILL = 32823,
			[Token(Token = "0x4002B75")]
			GL_SAMPLE_ALPHA_TO_COVERAGE = 32926,
			[Token(Token = "0x4002B76")]
			GL_SAMPLE_COVERAGE = 32928,
			[Token(Token = "0x4002B77")]
			GL_NO_ERROR = 0,
			[Token(Token = "0x4002B78")]
			GL_INVALID_ENUM = 1280,
			[Token(Token = "0x4002B79")]
			GL_INVALID_VALUE = 1281,
			[Token(Token = "0x4002B7A")]
			GL_INVALID_OPERATION = 1282,
			[Token(Token = "0x4002B7B")]
			GL_OUT_OF_MEMORY = 1285,
			[Token(Token = "0x4002B7C")]
			GL_CW = 2304,
			[Token(Token = "0x4002B7D")]
			GL_CCW = 2305,
			[Token(Token = "0x4002B7E")]
			GL_LINE_WIDTH = 2849,
			[Token(Token = "0x4002B7F")]
			GL_ALIASED_POINT_SIZE_RANGE = 33901,
			[Token(Token = "0x4002B80")]
			GL_ALIASED_LINE_WIDTH_RANGE = 33902,
			[Token(Token = "0x4002B81")]
			GL_CULL_FACE_MODE = 2885,
			[Token(Token = "0x4002B82")]
			GL_FRONT_FACE = 2886,
			[Token(Token = "0x4002B83")]
			GL_DEPTH_RANGE = 2928,
			[Token(Token = "0x4002B84")]
			GL_DEPTH_WRITEMASK = 2930,
			[Token(Token = "0x4002B85")]
			GL_DEPTH_CLEAR_VALUE = 2931,
			[Token(Token = "0x4002B86")]
			GL_DEPTH_FUNC = 2932,
			[Token(Token = "0x4002B87")]
			GL_STENCIL_CLEAR_VALUE = 2961,
			[Token(Token = "0x4002B88")]
			GL_STENCIL_FUNC = 2962,
			[Token(Token = "0x4002B89")]
			GL_STENCIL_FAIL = 2964,
			[Token(Token = "0x4002B8A")]
			GL_STENCIL_PASS_DEPTH_FAIL = 2965,
			[Token(Token = "0x4002B8B")]
			GL_STENCIL_PASS_DEPTH_PASS = 2966,
			[Token(Token = "0x4002B8C")]
			GL_STENCIL_REF = 2967,
			[Token(Token = "0x4002B8D")]
			GL_STENCIL_VALUE_MASK = 2963,
			[Token(Token = "0x4002B8E")]
			GL_STENCIL_WRITEMASK = 2968,
			[Token(Token = "0x4002B8F")]
			GL_STENCIL_BACK_FUNC = 34816,
			[Token(Token = "0x4002B90")]
			GL_STENCIL_BACK_FAIL = 34817,
			[Token(Token = "0x4002B91")]
			GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818,
			[Token(Token = "0x4002B92")]
			GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819,
			[Token(Token = "0x4002B93")]
			GL_STENCIL_BACK_REF = 36003,
			[Token(Token = "0x4002B94")]
			GL_STENCIL_BACK_VALUE_MASK = 36004,
			[Token(Token = "0x4002B95")]
			GL_STENCIL_BACK_WRITEMASK = 36005,
			[Token(Token = "0x4002B96")]
			GL_VIEWPORT = 2978,
			[Token(Token = "0x4002B97")]
			GL_SCISSOR_BOX = 3088,
			[Token(Token = "0x4002B98")]
			GL_COLOR_CLEAR_VALUE = 3106,
			[Token(Token = "0x4002B99")]
			GL_COLOR_WRITEMASK = 3107,
			[Token(Token = "0x4002B9A")]
			GL_UNPACK_ALIGNMENT = 3317,
			[Token(Token = "0x4002B9B")]
			GL_PACK_ALIGNMENT = 3333,
			[Token(Token = "0x4002B9C")]
			GL_MAX_TEXTURE_SIZE = 3379,
			[Token(Token = "0x4002B9D")]
			GL_MAX_VIEWPORT_DIMS = 3386,
			[Token(Token = "0x4002B9E")]
			GL_SUBPIXEL_BITS = 3408,
			[Token(Token = "0x4002B9F")]
			GL_RED_BITS = 3410,
			[Token(Token = "0x4002BA0")]
			GL_GREEN_BITS = 3411,
			[Token(Token = "0x4002BA1")]
			GL_BLUE_BITS = 3412,
			[Token(Token = "0x4002BA2")]
			GL_ALPHA_BITS = 3413,
			[Token(Token = "0x4002BA3")]
			GL_DEPTH_BITS = 3414,
			[Token(Token = "0x4002BA4")]
			GL_STENCIL_BITS = 3415,
			[Token(Token = "0x4002BA5")]
			GL_POLYGON_OFFSET_UNITS = 10752,
			[Token(Token = "0x4002BA6")]
			GL_POLYGON_OFFSET_FACTOR = 32824,
			[Token(Token = "0x4002BA7")]
			GL_TEXTURE_BINDING_2D = 32873,
			[Token(Token = "0x4002BA8")]
			GL_SAMPLE_BUFFERS = 32936,
			[Token(Token = "0x4002BA9")]
			GL_SAMPLES = 32937,
			[Token(Token = "0x4002BAA")]
			GL_SAMPLE_COVERAGE_VALUE = 32938,
			[Token(Token = "0x4002BAB")]
			GL_SAMPLE_COVERAGE_INVERT = 32939,
			[Token(Token = "0x4002BAC")]
			GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466,
			[Token(Token = "0x4002BAD")]
			GL_COMPRESSED_TEXTURE_FORMATS = 34467,
			[Token(Token = "0x4002BAE")]
			GL_DONT_CARE = 4352,
			[Token(Token = "0x4002BAF")]
			GL_FASTEST = 4353,
			[Token(Token = "0x4002BB0")]
			GL_NICEST = 4354,
			[Token(Token = "0x4002BB1")]
			GL_GENERATE_MIPMAP_HINT = 33170,
			[Token(Token = "0x4002BB2")]
			GL_BYTE = 5120,
			[Token(Token = "0x4002BB3")]
			GL_UNSIGNED_BYTE = 5121,
			[Token(Token = "0x4002BB4")]
			GL_SHORT = 5122,
			[Token(Token = "0x4002BB5")]
			GL_UNSIGNED_SHORT = 5123,
			[Token(Token = "0x4002BB6")]
			GL_INT = 5124,
			[Token(Token = "0x4002BB7")]
			GL_UNSIGNED_INT = 5125,
			[Token(Token = "0x4002BB8")]
			GL_FLOAT = 5126,
			[Token(Token = "0x4002BB9")]
			GL_FIXED = 5132,
			[Token(Token = "0x4002BBA")]
			GL_DEPTH_COMPONENT = 6402,
			[Token(Token = "0x4002BBB")]
			GL_ALPHA = 6406,
			[Token(Token = "0x4002BBC")]
			GL_RGB = 6407,
			[Token(Token = "0x4002BBD")]
			GL_RGBA = 6408,
			[Token(Token = "0x4002BBE")]
			GL_LUMINANCE = 6409,
			[Token(Token = "0x4002BBF")]
			GL_LUMINANCE_ALPHA = 6410,
			[Token(Token = "0x4002BC0")]
			GL_UNSIGNED_SHORT_4_4_4_4 = 32819,
			[Token(Token = "0x4002BC1")]
			GL_UNSIGNED_SHORT_5_5_5_1 = 32820,
			[Token(Token = "0x4002BC2")]
			GL_UNSIGNED_SHORT_5_6_5 = 33635,
			[Token(Token = "0x4002BC3")]
			GL_FRAGMENT_SHADER = 35632,
			[Token(Token = "0x4002BC4")]
			GL_VERTEX_SHADER = 35633,
			[Token(Token = "0x4002BC5")]
			GL_MAX_VERTEX_ATTRIBS = 34921,
			[Token(Token = "0x4002BC6")]
			GL_MAX_VERTEX_UNIFORM_VECTORS = 36347,
			[Token(Token = "0x4002BC7")]
			GL_MAX_VARYING_VECTORS = 36348,
			[Token(Token = "0x4002BC8")]
			GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,
			[Token(Token = "0x4002BC9")]
			GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
			[Token(Token = "0x4002BCA")]
			GL_MAX_TEXTURE_IMAGE_UNITS = 34930,
			[Token(Token = "0x4002BCB")]
			GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349,
			[Token(Token = "0x4002BCC")]
			GL_SHADER_TYPE = 35663,
			[Token(Token = "0x4002BCD")]
			GL_DELETE_STATUS = 35712,
			[Token(Token = "0x4002BCE")]
			GL_LINK_STATUS = 35714,
			[Token(Token = "0x4002BCF")]
			GL_VALIDATE_STATUS = 35715,
			[Token(Token = "0x4002BD0")]
			GL_ATTACHED_SHADERS = 35717,
			[Token(Token = "0x4002BD1")]
			GL_ACTIVE_UNIFORMS = 35718,
			[Token(Token = "0x4002BD2")]
			GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719,
			[Token(Token = "0x4002BD3")]
			GL_ACTIVE_ATTRIBUTES = 35721,
			[Token(Token = "0x4002BD4")]
			GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722,
			[Token(Token = "0x4002BD5")]
			GL_SHADING_LANGUAGE_VERSION = 35724,
			[Token(Token = "0x4002BD6")]
			GL_CURRENT_PROGRAM = 35725,
			[Token(Token = "0x4002BD7")]
			GL_NEVER = 512,
			[Token(Token = "0x4002BD8")]
			GL_LESS = 513,
			[Token(Token = "0x4002BD9")]
			GL_EQUAL = 514,
			[Token(Token = "0x4002BDA")]
			GL_LEQUAL = 515,
			[Token(Token = "0x4002BDB")]
			GL_GREATER = 516,
			[Token(Token = "0x4002BDC")]
			GL_NOTEQUAL = 517,
			[Token(Token = "0x4002BDD")]
			GL_GEQUAL = 518,
			[Token(Token = "0x4002BDE")]
			GL_ALWAYS = 519,
			[Token(Token = "0x4002BDF")]
			GL_KEEP = 7680,
			[Token(Token = "0x4002BE0")]
			GL_REPLACE = 7681,
			[Token(Token = "0x4002BE1")]
			GL_INCR = 7682,
			[Token(Token = "0x4002BE2")]
			GL_DECR = 7683,
			[Token(Token = "0x4002BE3")]
			GL_INVERT = 5386,
			[Token(Token = "0x4002BE4")]
			GL_INCR_WRAP = 34055,
			[Token(Token = "0x4002BE5")]
			GL_DECR_WRAP = 34056,
			[Token(Token = "0x4002BE6")]
			GL_VENDOR = 7936,
			[Token(Token = "0x4002BE7")]
			GL_RENDERER = 7937,
			[Token(Token = "0x4002BE8")]
			GL_VERSION = 7938,
			[Token(Token = "0x4002BE9")]
			GL_EXTENSIONS = 7939,
			[Token(Token = "0x4002BEA")]
			GL_NEAREST = 9728,
			[Token(Token = "0x4002BEB")]
			GL_LINEAR = 9729,
			[Token(Token = "0x4002BEC")]
			GL_NEAREST_MIPMAP_NEAREST = 9984,
			[Token(Token = "0x4002BED")]
			GL_LINEAR_MIPMAP_NEAREST = 9985,
			[Token(Token = "0x4002BEE")]
			GL_NEAREST_MIPMAP_LINEAR = 9986,
			[Token(Token = "0x4002BEF")]
			GL_LINEAR_MIPMAP_LINEAR = 9987,
			[Token(Token = "0x4002BF0")]
			GL_TEXTURE_MAG_FILTER = 10240,
			[Token(Token = "0x4002BF1")]
			GL_TEXTURE_MIN_FILTER = 10241,
			[Token(Token = "0x4002BF2")]
			GL_TEXTURE_WRAP_S = 10242,
			[Token(Token = "0x4002BF3")]
			GL_TEXTURE_WRAP_T = 10243,
			[Token(Token = "0x4002BF4")]
			GL_TEXTURE = 5890,
			[Token(Token = "0x4002BF5")]
			GL_TEXTURE_CUBE_MAP = 34067,
			[Token(Token = "0x4002BF6")]
			GL_TEXTURE_BINDING_CUBE_MAP = 34068,
			[Token(Token = "0x4002BF7")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069,
			[Token(Token = "0x4002BF8")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,
			[Token(Token = "0x4002BF9")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
			[Token(Token = "0x4002BFA")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,
			[Token(Token = "0x4002BFB")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,
			[Token(Token = "0x4002BFC")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
			[Token(Token = "0x4002BFD")]
			GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076,
			[Token(Token = "0x4002BFE")]
			GL_TEXTURE0 = 33984,
			[Token(Token = "0x4002BFF")]
			GL_TEXTURE1 = 33985,
			[Token(Token = "0x4002C00")]
			GL_TEXTURE2 = 33986,
			[Token(Token = "0x4002C01")]
			GL_TEXTURE3 = 33987,
			[Token(Token = "0x4002C02")]
			GL_TEXTURE4 = 33988,
			[Token(Token = "0x4002C03")]
			GL_TEXTURE5 = 33989,
			[Token(Token = "0x4002C04")]
			GL_TEXTURE6 = 33990,
			[Token(Token = "0x4002C05")]
			GL_TEXTURE7 = 33991,
			[Token(Token = "0x4002C06")]
			GL_TEXTURE8 = 33992,
			[Token(Token = "0x4002C07")]
			GL_TEXTURE9 = 33993,
			[Token(Token = "0x4002C08")]
			GL_TEXTURE10 = 33994,
			[Token(Token = "0x4002C09")]
			GL_TEXTURE11 = 33995,
			[Token(Token = "0x4002C0A")]
			GL_TEXTURE12 = 33996,
			[Token(Token = "0x4002C0B")]
			GL_TEXTURE13 = 33997,
			[Token(Token = "0x4002C0C")]
			GL_TEXTURE14 = 33998,
			[Token(Token = "0x4002C0D")]
			GL_TEXTURE15 = 33999,
			[Token(Token = "0x4002C0E")]
			GL_TEXTURE16 = 34000,
			[Token(Token = "0x4002C0F")]
			GL_TEXTURE17 = 34001,
			[Token(Token = "0x4002C10")]
			GL_TEXTURE18 = 34002,
			[Token(Token = "0x4002C11")]
			GL_TEXTURE19 = 34003,
			[Token(Token = "0x4002C12")]
			GL_TEXTURE20 = 34004,
			[Token(Token = "0x4002C13")]
			GL_TEXTURE21 = 34005,
			[Token(Token = "0x4002C14")]
			GL_TEXTURE22 = 34006,
			[Token(Token = "0x4002C15")]
			GL_TEXTURE23 = 34007,
			[Token(Token = "0x4002C16")]
			GL_TEXTURE24 = 34008,
			[Token(Token = "0x4002C17")]
			GL_TEXTURE25 = 34009,
			[Token(Token = "0x4002C18")]
			GL_TEXTURE26 = 34010,
			[Token(Token = "0x4002C19")]
			GL_TEXTURE27 = 34011,
			[Token(Token = "0x4002C1A")]
			GL_TEXTURE28 = 34012,
			[Token(Token = "0x4002C1B")]
			GL_TEXTURE29 = 34013,
			[Token(Token = "0x4002C1C")]
			GL_TEXTURE30 = 34014,
			[Token(Token = "0x4002C1D")]
			GL_TEXTURE31 = 34015,
			[Token(Token = "0x4002C1E")]
			GL_ACTIVE_TEXTURE = 34016,
			[Token(Token = "0x4002C1F")]
			GL_REPEAT = 10497,
			[Token(Token = "0x4002C20")]
			GL_CLAMP_TO_EDGE = 33071,
			[Token(Token = "0x4002C21")]
			GL_MIRRORED_REPEAT = 33648,
			[Token(Token = "0x4002C22")]
			GL_FLOAT_VEC2 = 35664,
			[Token(Token = "0x4002C23")]
			GL_FLOAT_VEC3 = 35665,
			[Token(Token = "0x4002C24")]
			GL_FLOAT_VEC4 = 35666,
			[Token(Token = "0x4002C25")]
			GL_INT_VEC2 = 35667,
			[Token(Token = "0x4002C26")]
			GL_INT_VEC3 = 35668,
			[Token(Token = "0x4002C27")]
			GL_INT_VEC4 = 35669,
			[Token(Token = "0x4002C28")]
			GL_BOOL = 35670,
			[Token(Token = "0x4002C29")]
			GL_BOOL_VEC2 = 35671,
			[Token(Token = "0x4002C2A")]
			GL_BOOL_VEC3 = 35672,
			[Token(Token = "0x4002C2B")]
			GL_BOOL_VEC4 = 35673,
			[Token(Token = "0x4002C2C")]
			GL_FLOAT_MAT2 = 35674,
			[Token(Token = "0x4002C2D")]
			GL_FLOAT_MAT3 = 35675,
			[Token(Token = "0x4002C2E")]
			GL_FLOAT_MAT4 = 35676,
			[Token(Token = "0x4002C2F")]
			GL_SAMPLER_2D = 35678,
			[Token(Token = "0x4002C30")]
			GL_SAMPLER_CUBE = 35680,
			[Token(Token = "0x4002C31")]
			GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
			[Token(Token = "0x4002C32")]
			GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339,
			[Token(Token = "0x4002C33")]
			GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340,
			[Token(Token = "0x4002C34")]
			GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341,
			[Token(Token = "0x4002C35")]
			GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,
			[Token(Token = "0x4002C36")]
			GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373,
			[Token(Token = "0x4002C37")]
			GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,
			[Token(Token = "0x4002C38")]
			GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738,
			[Token(Token = "0x4002C39")]
			GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739,
			[Token(Token = "0x4002C3A")]
			GL_COMPILE_STATUS = 35713,
			[Token(Token = "0x4002C3B")]
			GL_INFO_LOG_LENGTH = 35716,
			[Token(Token = "0x4002C3C")]
			GL_SHADER_SOURCE_LENGTH = 35720,
			[Token(Token = "0x4002C3D")]
			GL_SHADER_COMPILER = 36346,
			[Token(Token = "0x4002C3E")]
			GL_SHADER_BINARY_FORMATS = 36344,
			[Token(Token = "0x4002C3F")]
			GL_NUM_SHADER_BINARY_FORMATS = 36345,
			[Token(Token = "0x4002C40")]
			GL_LOW_FLOAT = 36336,
			[Token(Token = "0x4002C41")]
			GL_MEDIUM_FLOAT = 36337,
			[Token(Token = "0x4002C42")]
			GL_HIGH_FLOAT = 36338,
			[Token(Token = "0x4002C43")]
			GL_LOW_INT = 36339,
			[Token(Token = "0x4002C44")]
			GL_MEDIUM_INT = 36340,
			[Token(Token = "0x4002C45")]
			GL_HIGH_INT = 36341,
			[Token(Token = "0x4002C46")]
			GL_FRAMEBUFFER = 36160,
			[Token(Token = "0x4002C47")]
			GL_RENDERBUFFER = 36161,
			[Token(Token = "0x4002C48")]
			GL_RGBA4 = 32854,
			[Token(Token = "0x4002C49")]
			GL_RGB5_A1 = 32855,
			[Token(Token = "0x4002C4A")]
			GL_RGB565 = 36194,
			[Token(Token = "0x4002C4B")]
			GL_DEPTH_COMPONENT16 = 33189,
			[Token(Token = "0x4002C4C")]
			GL_STENCIL_INDEX8 = 36168,
			[Token(Token = "0x4002C4D")]
			GL_RENDERBUFFER_WIDTH = 36162,
			[Token(Token = "0x4002C4E")]
			GL_RENDERBUFFER_HEIGHT = 36163,
			[Token(Token = "0x4002C4F")]
			GL_RENDERBUFFER_INTERNAL_FORMAT = 36164,
			[Token(Token = "0x4002C50")]
			GL_RENDERBUFFER_RED_SIZE = 36176,
			[Token(Token = "0x4002C51")]
			GL_RENDERBUFFER_GREEN_SIZE = 36177,
			[Token(Token = "0x4002C52")]
			GL_RENDERBUFFER_BLUE_SIZE = 36178,
			[Token(Token = "0x4002C53")]
			GL_RENDERBUFFER_ALPHA_SIZE = 36179,
			[Token(Token = "0x4002C54")]
			GL_RENDERBUFFER_DEPTH_SIZE = 36180,
			[Token(Token = "0x4002C55")]
			GL_RENDERBUFFER_STENCIL_SIZE = 36181,
			[Token(Token = "0x4002C56")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
			[Token(Token = "0x4002C57")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,
			[Token(Token = "0x4002C58")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
			[Token(Token = "0x4002C59")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,
			[Token(Token = "0x4002C5A")]
			GL_COLOR_ATTACHMENT0 = 36064,
			[Token(Token = "0x4002C5B")]
			GL_DEPTH_ATTACHMENT = 36096,
			[Token(Token = "0x4002C5C")]
			GL_STENCIL_ATTACHMENT = 36128,
			[Token(Token = "0x4002C5D")]
			GL_NONE = 0,
			[Token(Token = "0x4002C5E")]
			GL_FRAMEBUFFER_COMPLETE = 36053,
			[Token(Token = "0x4002C5F")]
			GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
			[Token(Token = "0x4002C60")]
			GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,
			[Token(Token = "0x4002C61")]
			GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
			[Token(Token = "0x4002C62")]
			GL_FRAMEBUFFER_UNSUPPORTED = 36061,
			[Token(Token = "0x4002C63")]
			GL_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x4002C64")]
			GL_RENDERBUFFER_BINDING = 36007,
			[Token(Token = "0x4002C65")]
			GL_MAX_RENDERBUFFER_SIZE = 34024,
			[Token(Token = "0x4002C66")]
			GL_INVALID_FRAMEBUFFER_OPERATION = 1286
		}

		[Token(Token = "0x20005B9")]
		public enum GLenum3
		{
			[Token(Token = "0x4002C68")]
			GL_READ_BUFFER = 3074,
			[Token(Token = "0x4002C69")]
			GL_UNPACK_ROW_LENGTH = 3314,
			[Token(Token = "0x4002C6A")]
			GL_UNPACK_SKIP_ROWS = 3315,
			[Token(Token = "0x4002C6B")]
			GL_UNPACK_SKIP_PIXELS = 3316,
			[Token(Token = "0x4002C6C")]
			GL_PACK_ROW_LENGTH = 3330,
			[Token(Token = "0x4002C6D")]
			GL_PACK_SKIP_ROWS = 3331,
			[Token(Token = "0x4002C6E")]
			GL_PACK_SKIP_PIXELS = 3332,
			[Token(Token = "0x4002C6F")]
			GL_COLOR = 6144,
			[Token(Token = "0x4002C70")]
			GL_DEPTH = 6145,
			[Token(Token = "0x4002C71")]
			GL_STENCIL = 6146,
			[Token(Token = "0x4002C72")]
			GL_RED = 6403,
			[Token(Token = "0x4002C73")]
			GL_RGB8 = 32849,
			[Token(Token = "0x4002C74")]
			GL_RGBA8 = 32856,
			[Token(Token = "0x4002C75")]
			GL_RGB10_A2 = 32857,
			[Token(Token = "0x4002C76")]
			GL_TEXTURE_BINDING_3D = 32874,
			[Token(Token = "0x4002C77")]
			GL_UNPACK_SKIP_IMAGES = 32877,
			[Token(Token = "0x4002C78")]
			GL_UNPACK_IMAGE_HEIGHT = 32878,
			[Token(Token = "0x4002C79")]
			GL_TEXTURE_3D = 32879,
			[Token(Token = "0x4002C7A")]
			GL_TEXTURE_WRAP_R = 32882,
			[Token(Token = "0x4002C7B")]
			GL_MAX_3D_TEXTURE_SIZE = 32883,
			[Token(Token = "0x4002C7C")]
			GL_UNSIGNED_INT_2_10_10_10_REV = 33640,
			[Token(Token = "0x4002C7D")]
			GL_MAX_ELEMENTS_VERTICES = 33000,
			[Token(Token = "0x4002C7E")]
			GL_MAX_ELEMENTS_INDICES = 33001,
			[Token(Token = "0x4002C7F")]
			GL_TEXTURE_MIN_LOD = 33082,
			[Token(Token = "0x4002C80")]
			GL_TEXTURE_MAX_LOD = 33083,
			[Token(Token = "0x4002C81")]
			GL_TEXTURE_BASE_LEVEL = 33084,
			[Token(Token = "0x4002C82")]
			GL_TEXTURE_MAX_LEVEL = 33085,
			[Token(Token = "0x4002C83")]
			GL_MIN = 32775,
			[Token(Token = "0x4002C84")]
			GL_MAX = 32776,
			[Token(Token = "0x4002C85")]
			GL_DEPTH_COMPONENT24 = 33190,
			[Token(Token = "0x4002C86")]
			GL_MAX_TEXTURE_LOD_BIAS = 34045,
			[Token(Token = "0x4002C87")]
			GL_TEXTURE_COMPARE_MODE = 34892,
			[Token(Token = "0x4002C88")]
			GL_TEXTURE_COMPARE_FUNC = 34893,
			[Token(Token = "0x4002C89")]
			GL_CURRENT_QUERY = 34917,
			[Token(Token = "0x4002C8A")]
			GL_QUERY_RESULT = 34918,
			[Token(Token = "0x4002C8B")]
			GL_QUERY_RESULT_AVAILABLE = 34919,
			[Token(Token = "0x4002C8C")]
			GL_BUFFER_MAPPED = 35004,
			[Token(Token = "0x4002C8D")]
			GL_BUFFER_MAP_POINTER = 35005,
			[Token(Token = "0x4002C8E")]
			GL_STREAM_READ = 35041,
			[Token(Token = "0x4002C8F")]
			GL_STREAM_COPY = 35042,
			[Token(Token = "0x4002C90")]
			GL_STATIC_READ = 35045,
			[Token(Token = "0x4002C91")]
			GL_STATIC_COPY = 35046,
			[Token(Token = "0x4002C92")]
			GL_DYNAMIC_READ = 35049,
			[Token(Token = "0x4002C93")]
			GL_DYNAMIC_COPY = 35050,
			[Token(Token = "0x4002C94")]
			GL_MAX_DRAW_BUFFERS = 34852,
			[Token(Token = "0x4002C95")]
			GL_DRAW_BUFFER0 = 34853,
			[Token(Token = "0x4002C96")]
			GL_DRAW_BUFFER1 = 34854,
			[Token(Token = "0x4002C97")]
			GL_DRAW_BUFFER2 = 34855,
			[Token(Token = "0x4002C98")]
			GL_DRAW_BUFFER3 = 34856,
			[Token(Token = "0x4002C99")]
			GL_DRAW_BUFFER4 = 34857,
			[Token(Token = "0x4002C9A")]
			GL_DRAW_BUFFER5 = 34858,
			[Token(Token = "0x4002C9B")]
			GL_DRAW_BUFFER6 = 34859,
			[Token(Token = "0x4002C9C")]
			GL_DRAW_BUFFER7 = 34860,
			[Token(Token = "0x4002C9D")]
			GL_DRAW_BUFFER8 = 34861,
			[Token(Token = "0x4002C9E")]
			GL_DRAW_BUFFER9 = 34862,
			[Token(Token = "0x4002C9F")]
			GL_DRAW_BUFFER10 = 34863,
			[Token(Token = "0x4002CA0")]
			GL_DRAW_BUFFER11 = 34864,
			[Token(Token = "0x4002CA1")]
			GL_DRAW_BUFFER12 = 34865,
			[Token(Token = "0x4002CA2")]
			GL_DRAW_BUFFER13 = 34866,
			[Token(Token = "0x4002CA3")]
			GL_DRAW_BUFFER14 = 34867,
			[Token(Token = "0x4002CA4")]
			GL_DRAW_BUFFER15 = 34868,
			[Token(Token = "0x4002CA5")]
			GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657,
			[Token(Token = "0x4002CA6")]
			GL_MAX_VERTEX_UNIFORM_COMPONENTS = 35658,
			[Token(Token = "0x4002CA7")]
			GL_SAMPLER_3D = 35679,
			[Token(Token = "0x4002CA8")]
			GL_SAMPLER_2D_SHADOW = 35682,
			[Token(Token = "0x4002CA9")]
			GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 35723,
			[Token(Token = "0x4002CAA")]
			GL_PIXEL_PACK_BUFFER = 35051,
			[Token(Token = "0x4002CAB")]
			GL_PIXEL_UNPACK_BUFFER = 35052,
			[Token(Token = "0x4002CAC")]
			GL_PIXEL_PACK_BUFFER_BINDING = 35053,
			[Token(Token = "0x4002CAD")]
			GL_PIXEL_UNPACK_BUFFER_BINDING = 35055,
			[Token(Token = "0x4002CAE")]
			GL_FLOAT_MAT2x3 = 35685,
			[Token(Token = "0x4002CAF")]
			GL_FLOAT_MAT2x4 = 35686,
			[Token(Token = "0x4002CB0")]
			GL_FLOAT_MAT3x2 = 35687,
			[Token(Token = "0x4002CB1")]
			GL_FLOAT_MAT3x4 = 35688,
			[Token(Token = "0x4002CB2")]
			GL_FLOAT_MAT4x2 = 35689,
			[Token(Token = "0x4002CB3")]
			GL_FLOAT_MAT4x3 = 35690,
			[Token(Token = "0x4002CB4")]
			GL_SRGB = 35904,
			[Token(Token = "0x4002CB5")]
			GL_SRGB8 = 35905,
			[Token(Token = "0x4002CB6")]
			GL_SRGB8_ALPHA8 = 35907,
			[Token(Token = "0x4002CB7")]
			GL_COMPARE_REF_TO_TEXTURE = 34894,
			[Token(Token = "0x4002CB8")]
			GL_MAJOR_VERSION = 33307,
			[Token(Token = "0x4002CB9")]
			GL_MINOR_VERSION = 33308,
			[Token(Token = "0x4002CBA")]
			GL_NUM_EXTENSIONS = 33309,
			[Token(Token = "0x4002CBB")]
			GL_RGBA32F = 34836,
			[Token(Token = "0x4002CBC")]
			GL_RGB32F = 34837,
			[Token(Token = "0x4002CBD")]
			GL_RGBA16F = 34842,
			[Token(Token = "0x4002CBE")]
			GL_RGB16F = 34843,
			[Token(Token = "0x4002CBF")]
			GL_VERTEX_ATTRIB_ARRAY_INTEGER = 35069,
			[Token(Token = "0x4002CC0")]
			GL_MAX_ARRAY_TEXTURE_LAYERS = 35071,
			[Token(Token = "0x4002CC1")]
			GL_MIN_PROGRAM_TEXEL_OFFSET = 35076,
			[Token(Token = "0x4002CC2")]
			GL_MAX_PROGRAM_TEXEL_OFFSET = 35077,
			[Token(Token = "0x4002CC3")]
			GL_MAX_VARYING_COMPONENTS = 35659,
			[Token(Token = "0x4002CC4")]
			GL_TEXTURE_2D_ARRAY = 35866,
			[Token(Token = "0x4002CC5")]
			GL_TEXTURE_BINDING_2D_ARRAY = 35869,
			[Token(Token = "0x4002CC6")]
			GL_R11F_G11F_B10F = 35898,
			[Token(Token = "0x4002CC7")]
			GL_UNSIGNED_INT_10F_11F_11F_REV = 35899,
			[Token(Token = "0x4002CC8")]
			GL_RGB9_E5 = 35901,
			[Token(Token = "0x4002CC9")]
			GL_UNSIGNED_INT_5_9_9_9_REV = 35902,
			[Token(Token = "0x4002CCA")]
			GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 35958,
			[Token(Token = "0x4002CCB")]
			GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 35967,
			[Token(Token = "0x4002CCC")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968,
			[Token(Token = "0x4002CCD")]
			GL_TRANSFORM_FEEDBACK_VARYINGS = 35971,
			[Token(Token = "0x4002CCE")]
			GL_TRANSFORM_FEEDBACK_BUFFER_START = 35972,
			[Token(Token = "0x4002CCF")]
			GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973,
			[Token(Token = "0x4002CD0")]
			GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976,
			[Token(Token = "0x4002CD1")]
			GL_RASTERIZER_DISCARD = 35977,
			[Token(Token = "0x4002CD2")]
			GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978,
			[Token(Token = "0x4002CD3")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979,
			[Token(Token = "0x4002CD4")]
			GL_INTERLEAVED_ATTRIBS = 35980,
			[Token(Token = "0x4002CD5")]
			GL_SEPARATE_ATTRIBS = 35981,
			[Token(Token = "0x4002CD6")]
			GL_TRANSFORM_FEEDBACK_BUFFER = 35982,
			[Token(Token = "0x4002CD7")]
			GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983,
			[Token(Token = "0x4002CD8")]
			GL_RGBA32UI = 36208,
			[Token(Token = "0x4002CD9")]
			GL_RGB32UI = 36209,
			[Token(Token = "0x4002CDA")]
			GL_RGBA16UI = 36214,
			[Token(Token = "0x4002CDB")]
			GL_RGB16UI = 36215,
			[Token(Token = "0x4002CDC")]
			GL_RGBA8UI = 36220,
			[Token(Token = "0x4002CDD")]
			GL_RGB8UI = 36221,
			[Token(Token = "0x4002CDE")]
			GL_RGBA32I = 36226,
			[Token(Token = "0x4002CDF")]
			GL_RGB32I = 36227,
			[Token(Token = "0x4002CE0")]
			GL_RGBA16I = 36232,
			[Token(Token = "0x4002CE1")]
			GL_RGB16I = 36233,
			[Token(Token = "0x4002CE2")]
			GL_RGBA8I = 36238,
			[Token(Token = "0x4002CE3")]
			GL_RGB8I = 36239,
			[Token(Token = "0x4002CE4")]
			GL_RED_INTEGER = 36244,
			[Token(Token = "0x4002CE5")]
			GL_RGB_INTEGER = 36248,
			[Token(Token = "0x4002CE6")]
			GL_RGBA_INTEGER = 36249,
			[Token(Token = "0x4002CE7")]
			GL_SAMPLER_2D_ARRAY = 36289,
			[Token(Token = "0x4002CE8")]
			GL_SAMPLER_2D_ARRAY_SHADOW = 36292,
			[Token(Token = "0x4002CE9")]
			GL_SAMPLER_CUBE_SHADOW = 36293,
			[Token(Token = "0x4002CEA")]
			GL_UNSIGNED_INT_VEC2 = 36294,
			[Token(Token = "0x4002CEB")]
			GL_UNSIGNED_INT_VEC3 = 36295,
			[Token(Token = "0x4002CEC")]
			GL_UNSIGNED_INT_VEC4 = 36296,
			[Token(Token = "0x4002CED")]
			GL_INT_SAMPLER_2D = 36298,
			[Token(Token = "0x4002CEE")]
			GL_INT_SAMPLER_3D = 36299,
			[Token(Token = "0x4002CEF")]
			GL_INT_SAMPLER_CUBE = 36300,
			[Token(Token = "0x4002CF0")]
			GL_INT_SAMPLER_2D_ARRAY = 36303,
			[Token(Token = "0x4002CF1")]
			GL_UNSIGNED_INT_SAMPLER_2D = 36306,
			[Token(Token = "0x4002CF2")]
			GL_UNSIGNED_INT_SAMPLER_3D = 36307,
			[Token(Token = "0x4002CF3")]
			GL_UNSIGNED_INT_SAMPLER_CUBE = 36308,
			[Token(Token = "0x4002CF4")]
			GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311,
			[Token(Token = "0x4002CF5")]
			GL_BUFFER_ACCESS_FLAGS = 37151,
			[Token(Token = "0x4002CF6")]
			GL_BUFFER_MAP_LENGTH = 37152,
			[Token(Token = "0x4002CF7")]
			GL_BUFFER_MAP_OFFSET = 37153,
			[Token(Token = "0x4002CF8")]
			GL_DEPTH_COMPONENT32F = 36012,
			[Token(Token = "0x4002CF9")]
			GL_DEPTH32F_STENCIL8 = 36013,
			[Token(Token = "0x4002CFA")]
			GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 36269,
			[Token(Token = "0x4002CFB")]
			GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296,
			[Token(Token = "0x4002CFC")]
			GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297,
			[Token(Token = "0x4002CFD")]
			GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298,
			[Token(Token = "0x4002CFE")]
			GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299,
			[Token(Token = "0x4002CFF")]
			GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300,
			[Token(Token = "0x4002D00")]
			GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301,
			[Token(Token = "0x4002D01")]
			GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302,
			[Token(Token = "0x4002D02")]
			GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303,
			[Token(Token = "0x4002D03")]
			GL_FRAMEBUFFER_DEFAULT = 33304,
			[Token(Token = "0x4002D04")]
			GL_FRAMEBUFFER_UNDEFINED = 33305,
			[Token(Token = "0x4002D05")]
			GL_DEPTH_STENCIL_ATTACHMENT = 33306,
			[Token(Token = "0x4002D06")]
			GL_DEPTH_STENCIL = 34041,
			[Token(Token = "0x4002D07")]
			GL_UNSIGNED_INT_24_8 = 34042,
			[Token(Token = "0x4002D08")]
			GL_DEPTH24_STENCIL8 = 35056,
			[Token(Token = "0x4002D09")]
			GL_UNSIGNED_NORMALIZED = 35863,
			[Token(Token = "0x4002D0A")]
			GL_DRAW_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x4002D0B")]
			GL_READ_FRAMEBUFFER = 36008,
			[Token(Token = "0x4002D0C")]
			GL_DRAW_FRAMEBUFFER = 36009,
			[Token(Token = "0x4002D0D")]
			GL_READ_FRAMEBUFFER_BINDING = 36010,
			[Token(Token = "0x4002D0E")]
			GL_RENDERBUFFER_SAMPLES = 36011,
			[Token(Token = "0x4002D0F")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052,
			[Token(Token = "0x4002D10")]
			GL_MAX_COLOR_ATTACHMENTS = 36063,
			[Token(Token = "0x4002D11")]
			GL_COLOR_ATTACHMENT1 = 36065,
			[Token(Token = "0x4002D12")]
			GL_COLOR_ATTACHMENT2 = 36066,
			[Token(Token = "0x4002D13")]
			GL_COLOR_ATTACHMENT3 = 36067,
			[Token(Token = "0x4002D14")]
			GL_COLOR_ATTACHMENT4 = 36068,
			[Token(Token = "0x4002D15")]
			GL_COLOR_ATTACHMENT5 = 36069,
			[Token(Token = "0x4002D16")]
			GL_COLOR_ATTACHMENT6 = 36070,
			[Token(Token = "0x4002D17")]
			GL_COLOR_ATTACHMENT7 = 36071,
			[Token(Token = "0x4002D18")]
			GL_COLOR_ATTACHMENT8 = 36072,
			[Token(Token = "0x4002D19")]
			GL_COLOR_ATTACHMENT9 = 36073,
			[Token(Token = "0x4002D1A")]
			GL_COLOR_ATTACHMENT10 = 36074,
			[Token(Token = "0x4002D1B")]
			GL_COLOR_ATTACHMENT11 = 36075,
			[Token(Token = "0x4002D1C")]
			GL_COLOR_ATTACHMENT12 = 36076,
			[Token(Token = "0x4002D1D")]
			GL_COLOR_ATTACHMENT13 = 36077,
			[Token(Token = "0x4002D1E")]
			GL_COLOR_ATTACHMENT14 = 36078,
			[Token(Token = "0x4002D1F")]
			GL_COLOR_ATTACHMENT15 = 36079,
			[Token(Token = "0x4002D20")]
			GL_COLOR_ATTACHMENT16 = 36080,
			[Token(Token = "0x4002D21")]
			GL_COLOR_ATTACHMENT17 = 36081,
			[Token(Token = "0x4002D22")]
			GL_COLOR_ATTACHMENT18 = 36082,
			[Token(Token = "0x4002D23")]
			GL_COLOR_ATTACHMENT19 = 36083,
			[Token(Token = "0x4002D24")]
			GL_COLOR_ATTACHMENT20 = 36084,
			[Token(Token = "0x4002D25")]
			GL_COLOR_ATTACHMENT21 = 36085,
			[Token(Token = "0x4002D26")]
			GL_COLOR_ATTACHMENT22 = 36086,
			[Token(Token = "0x4002D27")]
			GL_COLOR_ATTACHMENT23 = 36087,
			[Token(Token = "0x4002D28")]
			GL_COLOR_ATTACHMENT24 = 36088,
			[Token(Token = "0x4002D29")]
			GL_COLOR_ATTACHMENT25 = 36089,
			[Token(Token = "0x4002D2A")]
			GL_COLOR_ATTACHMENT26 = 36090,
			[Token(Token = "0x4002D2B")]
			GL_COLOR_ATTACHMENT27 = 36091,
			[Token(Token = "0x4002D2C")]
			GL_COLOR_ATTACHMENT28 = 36092,
			[Token(Token = "0x4002D2D")]
			GL_COLOR_ATTACHMENT29 = 36093,
			[Token(Token = "0x4002D2E")]
			GL_COLOR_ATTACHMENT30 = 36094,
			[Token(Token = "0x4002D2F")]
			GL_COLOR_ATTACHMENT31 = 36095,
			[Token(Token = "0x4002D30")]
			GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182,
			[Token(Token = "0x4002D31")]
			GL_MAX_SAMPLES = 36183,
			[Token(Token = "0x4002D32")]
			GL_HALF_FLOAT = 5131,
			[Token(Token = "0x4002D33")]
			GL_MAP_READ_BIT = 1,
			[Token(Token = "0x4002D34")]
			GL_MAP_WRITE_BIT = 2,
			[Token(Token = "0x4002D35")]
			GL_MAP_INVALIDATE_RANGE_BIT = 4,
			[Token(Token = "0x4002D36")]
			GL_MAP_INVALIDATE_BUFFER_BIT = 8,
			[Token(Token = "0x4002D37")]
			GL_MAP_FLUSH_EXPLICIT_BIT = 16,
			[Token(Token = "0x4002D38")]
			GL_MAP_UNSYNCHRONIZED_BIT = 32,
			[Token(Token = "0x4002D39")]
			GL_RG = 33319,
			[Token(Token = "0x4002D3A")]
			GL_RG_INTEGER = 33320,
			[Token(Token = "0x4002D3B")]
			GL_R8 = 33321,
			[Token(Token = "0x4002D3C")]
			GL_RG8 = 33323,
			[Token(Token = "0x4002D3D")]
			GL_R16F = 33325,
			[Token(Token = "0x4002D3E")]
			GL_R32F = 33326,
			[Token(Token = "0x4002D3F")]
			GL_RG16F = 33327,
			[Token(Token = "0x4002D40")]
			GL_RG32F = 33328,
			[Token(Token = "0x4002D41")]
			GL_R8I = 33329,
			[Token(Token = "0x4002D42")]
			GL_R8UI = 33330,
			[Token(Token = "0x4002D43")]
			GL_R16I = 33331,
			[Token(Token = "0x4002D44")]
			GL_R16UI = 33332,
			[Token(Token = "0x4002D45")]
			GL_R32I = 33333,
			[Token(Token = "0x4002D46")]
			GL_R32UI = 33334,
			[Token(Token = "0x4002D47")]
			GL_RG8I = 33335,
			[Token(Token = "0x4002D48")]
			GL_RG8UI = 33336,
			[Token(Token = "0x4002D49")]
			GL_RG16I = 33337,
			[Token(Token = "0x4002D4A")]
			GL_RG16UI = 33338,
			[Token(Token = "0x4002D4B")]
			GL_RG32I = 33339,
			[Token(Token = "0x4002D4C")]
			GL_RG32UI = 33340,
			[Token(Token = "0x4002D4D")]
			GL_VERTEX_ARRAY_BINDING = 34229,
			[Token(Token = "0x4002D4E")]
			GL_R8_SNORM = 36756,
			[Token(Token = "0x4002D4F")]
			GL_RG8_SNORM = 36757,
			[Token(Token = "0x4002D50")]
			GL_RGB8_SNORM = 36758,
			[Token(Token = "0x4002D51")]
			GL_RGBA8_SNORM = 36759,
			[Token(Token = "0x4002D52")]
			GL_SIGNED_NORMALIZED = 36764,
			[Token(Token = "0x4002D53")]
			GL_PRIMITIVE_RESTART_FIXED_INDEX = 36201,
			[Token(Token = "0x4002D54")]
			GL_COPY_READ_BUFFER = 36662,
			[Token(Token = "0x4002D55")]
			GL_COPY_WRITE_BUFFER = 36663,
			[Token(Token = "0x4002D56")]
			GL_COPY_READ_BUFFER_BINDING = 36662,
			[Token(Token = "0x4002D57")]
			GL_COPY_WRITE_BUFFER_BINDING = 36663,
			[Token(Token = "0x4002D58")]
			GL_UNIFORM_BUFFER = 35345,
			[Token(Token = "0x4002D59")]
			GL_UNIFORM_BUFFER_BINDING = 35368,
			[Token(Token = "0x4002D5A")]
			GL_UNIFORM_BUFFER_START = 35369,
			[Token(Token = "0x4002D5B")]
			GL_UNIFORM_BUFFER_SIZE = 35370,
			[Token(Token = "0x4002D5C")]
			GL_MAX_VERTEX_UNIFORM_BLOCKS = 35371,
			[Token(Token = "0x4002D5D")]
			GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 35373,
			[Token(Token = "0x4002D5E")]
			GL_MAX_COMBINED_UNIFORM_BLOCKS = 35374,
			[Token(Token = "0x4002D5F")]
			GL_MAX_UNIFORM_BUFFER_BINDINGS = 35375,
			[Token(Token = "0x4002D60")]
			GL_MAX_UNIFORM_BLOCK_SIZE = 35376,
			[Token(Token = "0x4002D61")]
			GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377,
			[Token(Token = "0x4002D62")]
			GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379,
			[Token(Token = "0x4002D63")]
			GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380,
			[Token(Token = "0x4002D64")]
			GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 35381,
			[Token(Token = "0x4002D65")]
			GL_ACTIVE_UNIFORM_BLOCKS = 35382,
			[Token(Token = "0x4002D66")]
			GL_UNIFORM_TYPE = 35383,
			[Token(Token = "0x4002D67")]
			GL_UNIFORM_SIZE = 35384,
			[Token(Token = "0x4002D68")]
			GL_UNIFORM_NAME_LENGTH = 35385,
			[Token(Token = "0x4002D69")]
			GL_UNIFORM_BLOCK_INDEX = 35386,
			[Token(Token = "0x4002D6A")]
			GL_UNIFORM_OFFSET = 35387,
			[Token(Token = "0x4002D6B")]
			GL_UNIFORM_ARRAY_STRIDE = 35388,
			[Token(Token = "0x4002D6C")]
			GL_UNIFORM_MATRIX_STRIDE = 35389,
			[Token(Token = "0x4002D6D")]
			GL_UNIFORM_IS_ROW_MAJOR = 35390,
			[Token(Token = "0x4002D6E")]
			GL_UNIFORM_BLOCK_BINDING = 35391,
			[Token(Token = "0x4002D6F")]
			GL_UNIFORM_BLOCK_DATA_SIZE = 35392,
			[Token(Token = "0x4002D70")]
			GL_UNIFORM_BLOCK_NAME_LENGTH = 35393,
			[Token(Token = "0x4002D71")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394,
			[Token(Token = "0x4002D72")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395,
			[Token(Token = "0x4002D73")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396,
			[Token(Token = "0x4002D74")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398,
			[Token(Token = "0x4002D75")]
			GL_MAX_VERTEX_OUTPUT_COMPONENTS = 37154,
			[Token(Token = "0x4002D76")]
			GL_MAX_FRAGMENT_INPUT_COMPONENTS = 37157,
			[Token(Token = "0x4002D77")]
			GL_MAX_SERVER_WAIT_TIMEOUT = 37137,
			[Token(Token = "0x4002D78")]
			GL_OBJECT_TYPE = 37138,
			[Token(Token = "0x4002D79")]
			GL_SYNC_CONDITION = 37139,
			[Token(Token = "0x4002D7A")]
			GL_SYNC_STATUS = 37140,
			[Token(Token = "0x4002D7B")]
			GL_SYNC_FLAGS = 37141,
			[Token(Token = "0x4002D7C")]
			GL_SYNC_FENCE = 37142,
			[Token(Token = "0x4002D7D")]
			GL_SYNC_GPU_COMMANDS_COMPLETE = 37143,
			[Token(Token = "0x4002D7E")]
			GL_UNSIGNALED = 37144,
			[Token(Token = "0x4002D7F")]
			GL_SIGNALED = 37145,
			[Token(Token = "0x4002D80")]
			GL_ALREADY_SIGNALED = 37146,
			[Token(Token = "0x4002D81")]
			GL_TIMEOUT_EXPIRED = 37147,
			[Token(Token = "0x4002D82")]
			GL_CONDITION_SATISFIED = 37148,
			[Token(Token = "0x4002D83")]
			GL_WAIT_FAILED = 37149,
			[Token(Token = "0x4002D84")]
			GL_SYNC_FLUSH_COMMANDS_BIT = 1,
			[Token(Token = "0x4002D85")]
			GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 35070,
			[Token(Token = "0x4002D86")]
			GL_ANY_SAMPLES_PASSED = 35887,
			[Token(Token = "0x4002D87")]
			GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 36202,
			[Token(Token = "0x4002D88")]
			GL_SAMPLER_BINDING = 35097,
			[Token(Token = "0x4002D89")]
			GL_RGB10_A2UI = 36975,
			[Token(Token = "0x4002D8A")]
			GL_TEXTURE_SWIZZLE_R = 36418,
			[Token(Token = "0x4002D8B")]
			GL_TEXTURE_SWIZZLE_G = 36419,
			[Token(Token = "0x4002D8C")]
			GL_TEXTURE_SWIZZLE_B = 36420,
			[Token(Token = "0x4002D8D")]
			GL_TEXTURE_SWIZZLE_A = 36421,
			[Token(Token = "0x4002D8E")]
			GL_GREEN = 6404,
			[Token(Token = "0x4002D8F")]
			GL_BLUE = 6405,
			[Token(Token = "0x4002D90")]
			GL_INT_2_10_10_10_REV = 36255,
			[Token(Token = "0x4002D91")]
			GL_TRANSFORM_FEEDBACK = 36386,
			[Token(Token = "0x4002D92")]
			GL_TRANSFORM_FEEDBACK_PAUSED = 36387,
			[Token(Token = "0x4002D93")]
			GL_TRANSFORM_FEEDBACK_ACTIVE = 36388,
			[Token(Token = "0x4002D94")]
			GL_TRANSFORM_FEEDBACK_BINDING = 36389,
			[Token(Token = "0x4002D95")]
			GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 33367,
			[Token(Token = "0x4002D96")]
			GL_PROGRAM_BINARY_LENGTH = 34625,
			[Token(Token = "0x4002D97")]
			GL_NUM_PROGRAM_BINARY_FORMATS = 34814,
			[Token(Token = "0x4002D98")]
			GL_PROGRAM_BINARY_FORMATS = 34815,
			[Token(Token = "0x4002D99")]
			GL_COMPRESSED_R11_EAC = 37488,
			[Token(Token = "0x4002D9A")]
			GL_COMPRESSED_SIGNED_R11_EAC = 37489,
			[Token(Token = "0x4002D9B")]
			GL_COMPRESSED_RG11_EAC = 37490,
			[Token(Token = "0x4002D9C")]
			GL_COMPRESSED_SIGNED_RG11_EAC = 37491,
			[Token(Token = "0x4002D9D")]
			GL_COMPRESSED_RGB8_ETC2 = 37492,
			[Token(Token = "0x4002D9E")]
			GL_COMPRESSED_SRGB8_ETC2 = 37493,
			[Token(Token = "0x4002D9F")]
			GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494,
			[Token(Token = "0x4002DA0")]
			GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495,
			[Token(Token = "0x4002DA1")]
			GL_COMPRESSED_RGBA8_ETC2_EAC = 37496,
			[Token(Token = "0x4002DA2")]
			GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497,
			[Token(Token = "0x4002DA3")]
			GL_TEXTURE_IMMUTABLE_FORMAT = 37167,
			[Token(Token = "0x4002DA4")]
			GL_MAX_ELEMENT_INDEX = 36203,
			[Token(Token = "0x4002DA5")]
			GL_NUM_SAMPLE_COUNTS = 37760,
			[Token(Token = "0x4002DA6")]
			GL_TEXTURE_IMMUTABLE_LEVELS = 33503
		}

		[PreserveSig]
		[Token(Token = "0x600149C")]
		[Address(RVA = "0x2035420", Offset = "0x2035420", VA = "0x2035420")]
		public static extern void GenTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x600149D")]
		[Address(RVA = "0x20355B0", Offset = "0x20355B0", VA = "0x20355B0")]
		public static extern void BindTexture(int target, uint texture);

		[PreserveSig]
		[Token(Token = "0x600149E")]
		[Address(RVA = "0x20356C0", Offset = "0x20356C0", VA = "0x20356C0")]
		public static extern void DeleteTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x600149F")]
		[Address(RVA = "0x2035858", Offset = "0x2035858", VA = "0x2035858")]
		public static extern void TexStorage3D(int target, int levels, int internalformat, int width, int height, int depth);

		[PreserveSig]
		[Token(Token = "0x60014A0")]
		[Address(RVA = "0x2035988", Offset = "0x2035988", VA = "0x2035988")]
		public static extern void GetTexParameteriv(int target, uint pname, ref int params_k);

		[PreserveSig]
		[Token(Token = "0x60014A1")]
		[Address(RVA = "0x2035AA8", Offset = "0x2035AA8", VA = "0x2035AA8")]
		public static extern void FramebufferTexture2D(int target, int attachment, int textarget, uint texture, int level);

		[PreserveSig]
		[Token(Token = "0x60014A2")]
		[Address(RVA = "0x2035BE0", Offset = "0x2035BE0", VA = "0x2035BE0")]
		public static extern void FramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, uint renderbuffer);

		[PreserveSig]
		[Token(Token = "0x60014A3")]
		[Address(RVA = "0x2035D18", Offset = "0x2035D18", VA = "0x2035D18")]
		public static extern void FramebufferTextureMultisampleMultiviewOVR(int target, int attachment, uint texture, int level, int samples, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x60014A4")]
		[Address(RVA = "0x2035E38", Offset = "0x2035E38", VA = "0x2035E38")]
		public static extern void FramebufferTextureMultiviewOVR(int target, int attachment, uint texture, int level, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x60014A5")]
		[Address(RVA = "0x2035F48", Offset = "0x2035F48", VA = "0x2035F48")]
		public static extern void Clear(uint mask);
	}
}
namespace wvr.render.thread
{
	[Token(Token = "0x20002A3")]
	public class RenderThreadSyncObject
	{
		[Token(Token = "0x20005BA")]
		public delegate void RenderEventDelegate(int e);

		[Token(Token = "0x20005BB")]
		public delegate void Receiver(PreAllocatedQueue dataQueue);

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RenderEventDelegate handle;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly IntPtr handlePtr;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<RenderThreadSyncObject> CommandList;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly PreAllocatedQueue queue;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly Receiver receiver;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int id;

		[Token(Token = "0x170000DE")]
		public PreAllocatedQueue Queue
		{
			[Token(Token = "0x60014A7")]
			[Address(RVA = "0x2036198", Offset = "0x2036198", VA = "0x2036198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x2036114", Offset = "0x2036114", VA = "0x2036114")]
		private static IntPtr GetFunctionPointerForDelegate(Delegate del)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x20361A0", Offset = "0x20361A0", VA = "0x20361A0")]
		public RenderThreadSyncObject(Receiver render)
		{
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x2036434", Offset = "0x2036434", VA = "0x2036434", Slot = "1")]
		~RenderThreadSyncObject()
		{
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x2036548", Offset = "0x2036548", VA = "0x2036548")]
		private void IssuePluginEvent(IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x2036558", Offset = "0x2036558", VA = "0x2036558")]
		private void IssuePluginEvent(CommandBuffer cmdBuf, IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x2036594", Offset = "0x2036594", VA = "0x2036594")]
		public void IssueEvent()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0x2036630", Offset = "0x2036630", VA = "0x2036630")]
		public void IssueInCommandBuffer(CommandBuffer cmdBuf)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0x20366EC", Offset = "0x20366EC", VA = "0x20366EC")]
		private void Receive()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0x203603C", Offset = "0x203603C", VA = "0x203603C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CE988", Offset = "0x5CE988")]
		private static void RunSyncObjectInRenderThread(int id)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class WaveVR_RenderThreadExample
	{
		[Token(Token = "0x20005BC")]
		public class TestMessage : wvr.render.utils.Message
		{
			[Token(Token = "0x4002DA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int textureId;

			[Token(Token = "0x600280C")]
			[Address(RVA = "0x2037BF4", Offset = "0x2037BF4", VA = "0x2037BF4")]
			public TestMessage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DEC", Offset = "0x5C2DEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002DA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002DA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static RenderThreadSyncObject.Receiver <>9__1_0;

			[Token(Token = "0x600280E")]
			[Address(RVA = "0x203795C", Offset = "0x203795C", VA = "0x203795C")]
			public <>c()
			{
			}

			[Token(Token = "0x600280F")]
			[Address(RVA = "0x2037964", Offset = "0x2037964", VA = "0x2037964")]
			internal void <Example1>b__1_0(PreAllocatedQueue queue)
			{
			}
		}

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0x20375A0", Offset = "0x20375A0", VA = "0x20375A0")]
		private static void Example1()
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0x20378E0", Offset = "0x20378E0", VA = "0x20378E0")]
		public WaveVR_RenderThreadExample()
		{
		}
	}
}
namespace wvr.render.utils
{
	[Token(Token = "0x20002A5")]
	public class Message
	{
		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isFree;

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0x2037C04", Offset = "0x2037C04", VA = "0x2037C04")]
		public Message()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class MessagePool
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly List<Message> pool;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int index;

		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x2037C14", Offset = "0x2037C14", VA = "0x2037C14")]
		public MessagePool()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x2037CA4", Offset = "0x2037CA4", VA = "0x2037CA4")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60014B6")]
		public T Obtain<T>() where T : Message, new()
		{
			return null;
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x2037D30", Offset = "0x2037D30", VA = "0x2037D30")]
		public void Lock(Message msg)
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0x2037BCC", Offset = "0x2037BCC", VA = "0x2037BCC")]
		public void Release(Message msg)
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class PreAllocatedQueue : MessagePool
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Message> list;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int queueBegin;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int queueEnd;

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0x2036338", Offset = "0x2036338", VA = "0x2036338")]
		public PreAllocatedQueue()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0x2037D58", Offset = "0x2037D58", VA = "0x2037D58")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0x20377F4", Offset = "0x20377F4", VA = "0x20377F4")]
		public void Enqueue(Message msg)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0x2037B3C", Offset = "0x2037B3C", VA = "0x2037B3C")]
		public Message Dequeue()
		{
			return null;
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20002A8")]
	public enum JSONNodeType
	{
		[Token(Token = "0x4001D14")]
		Array = 1,
		[Token(Token = "0x4001D15")]
		Object = 2,
		[Token(Token = "0x4001D16")]
		String = 3,
		[Token(Token = "0x4001D17")]
		Number = 4,
		[Token(Token = "0x4001D18")]
		NullValue = 5,
		[Token(Token = "0x4001D19")]
		Boolean = 6,
		[Token(Token = "0x4001D1A")]
		None = 7,
		[Token(Token = "0x4001D1B")]
		Custom = 255
	}
	[Token(Token = "0x20002A9")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4001D1D")]
		Compact,
		[Token(Token = "0x4001D1E")]
		Indent
	}
	[Token(Token = "0x20002AA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C19C8", Offset = "0x5C19C8")]
	public abstract class JSONNode
	{
		[Token(Token = "0x20005BE")]
		public struct Enumerator
		{
			[Token(Token = "0x20006FB")]
			private enum Type
			{
				[Token(Token = "0x40032C6")]
				None,
				[Token(Token = "0x40032C7")]
				Array,
				[Token(Token = "0x40032C8")]
				Object
			}

			[Token(Token = "0x4002DAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4002DAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4002DAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x17000319")]
			public bool IsValid
			{
				[Token(Token = "0x6002810")]
				[Address(RVA = "0x5D71E4", Offset = "0x5D71E4", VA = "0x5D71E4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700031A")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002813")]
				[Address(RVA = "0x5D7270", Offset = "0x5D7270", VA = "0x5D7270")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002811")]
			[Address(RVA = "0x5D71F4", Offset = "0x5D71F4", VA = "0x5D71F4")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002812")]
			[Address(RVA = "0x5D7234", Offset = "0x5D7234", VA = "0x5D7234")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0x5D7284", Offset = "0x5D7284", VA = "0x5D7284")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005BF")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4002DAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700031B")]
			public JSONNode Current
			{
				[Token(Token = "0x6002818")]
				[Address(RVA = "0x5D751C", Offset = "0x5D751C", VA = "0x5D751C")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002815")]
			[Address(RVA = "0x5D7448", Offset = "0x5D7448", VA = "0x5D7448")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0x5D7488", Offset = "0x5D7488", VA = "0x5D7488")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002817")]
			[Address(RVA = "0x5D74C4", Offset = "0x5D74C4", VA = "0x5D74C4")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0x5D7524", Offset = "0x5D7524", VA = "0x5D7524")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0x5D752C", Offset = "0x5D752C", VA = "0x5D752C")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x20005C0")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4002DAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700031C")]
			public JSONNode Current
			{
				[Token(Token = "0x600281E")]
				[Address(RVA = "0x5D73BC", Offset = "0x5D73BC", VA = "0x5D73BC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281B")]
			[Address(RVA = "0x5D72E8", Offset = "0x5D72E8", VA = "0x5D72E8")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0x5D7328", Offset = "0x5D7328", VA = "0x5D7328")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600281D")]
			[Address(RVA = "0x5D7364", Offset = "0x5D7364", VA = "0x5D7364")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0x5D73C4", Offset = "0x5D73C4", VA = "0x5D73C4")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002820")]
			[Address(RVA = "0x5D73CC", Offset = "0x5D73CC", VA = "0x5D73CC")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x20005C1")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4002DAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private JSONNode m_Node;

			[Token(Token = "0x4002DB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x1700031D")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002822")]
				[Address(RVA = "0x20FF8F8", Offset = "0x20FF8F8", VA = "0x20FF8F8", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002823")]
				[Address(RVA = "0x20FF90C", Offset = "0x20FF90C", VA = "0x20FF90C", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002821")]
			[Address(RVA = "0x20FC890", Offset = "0x20FC890", VA = "0x20FC890")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0x20FF990", Offset = "0x20FF990", VA = "0x20FF990", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0x20FF998", Offset = "0x20FF998", VA = "0x20FF998", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0x20FF9B8", Offset = "0x20FF9B8", VA = "0x20FF9B8", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002827")]
			[Address(RVA = "0x20FFA2C", Offset = "0x20FFA2C", VA = "0x20FFA2C", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0x20FFB1C", Offset = "0x20FFB1C", VA = "0x20FFB1C", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2DFC", Offset = "0x5C2DFC")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x1700031F")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600282C")]
				[Address(RVA = "0x20FEBC0", Offset = "0x20FEBC0", VA = "0x20FEBC0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282E")]
				[Address(RVA = "0x20FEC50", Offset = "0x20FEC50", VA = "0x20FEC50", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002829")]
			[Address(RVA = "0x20FC5A4", Offset = "0x20FC5A4", VA = "0x20FC5A4")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0x20FEBA4", Offset = "0x20FEBA4", VA = "0x20FEBA4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0x20FEBA8", Offset = "0x20FEBA8", VA = "0x20FEBA8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282D")]
			[Address(RVA = "0x20FEBC8", Offset = "0x20FEBC8", VA = "0x20FEBC8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600282F")]
			[Address(RVA = "0x20FEC58", Offset = "0x20FEC58", VA = "0x20FEC58", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0x20FED08", Offset = "0x20FED08", VA = "0x20FED08", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E0C", Offset = "0x5C2E0C")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000321")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002836")]
				[Address(RVA = "0x20FF404", Offset = "0x20FF404", VA = "0x20FF404", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002838")]
				[Address(RVA = "0x20FF494", Offset = "0x20FF494", VA = "0x20FF494", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0x20FC668", Offset = "0x20FC668", VA = "0x20FC668")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0x20FED0C", Offset = "0x20FED0C", VA = "0x20FED0C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002833")]
			[Address(RVA = "0x20FEF20", Offset = "0x20FEF20", VA = "0x20FEF20", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0x20FEE48", Offset = "0x20FEE48", VA = "0x20FEE48")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002835")]
			[Address(RVA = "0x20FED70", Offset = "0x20FED70", VA = "0x20FED70")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002837")]
			[Address(RVA = "0x20FF40C", Offset = "0x20FF40C", VA = "0x20FF40C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002839")]
			[Address(RVA = "0x20FF49C", Offset = "0x20FF49C", VA = "0x20FF49C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600283A")]
			[Address(RVA = "0x20FF568", Offset = "0x20FF568", VA = "0x20FF568", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4001D20")]
		[AttributeAttribute(Name = "ThreadStaticAttribute", RVA = "0x5C7244", Offset = "0x5C7244")]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x170000DF")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x60014BD")]
			get;
		}

		[Token(Token = "0x170000E0")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0x20FC3D4", Offset = "0x20FC3D4", VA = "0x20FC3D4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0x20FC3DC", Offset = "0x20FC3DC", VA = "0x20FC3DC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60014C0")]
			[Address(RVA = "0x20FC3E0", Offset = "0x20FC3E0", VA = "0x20FC3E0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C1")]
			[Address(RVA = "0x20FC3E8", Offset = "0x20FC3E8", VA = "0x20FC3E8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public virtual string Value
		{
			[Token(Token = "0x60014C2")]
			[Address(RVA = "0x20FC3EC", Offset = "0x20FC3EC", VA = "0x20FC3EC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C3")]
			[Address(RVA = "0x20FC448", Offset = "0x20FC448", VA = "0x20FC448", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public virtual int Count
		{
			[Token(Token = "0x60014C4")]
			[Address(RVA = "0x20FC44C", Offset = "0x20FC44C", VA = "0x20FC44C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000E4")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x60014C5")]
			[Address(RVA = "0x20FC454", Offset = "0x20FC454", VA = "0x20FC454", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E5")]
		public virtual bool IsString
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x20FC45C", Offset = "0x20FC45C", VA = "0x20FC45C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x20FC464", Offset = "0x20FC464", VA = "0x20FC464", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E7")]
		public virtual bool IsNull
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x20FC46C", Offset = "0x20FC46C", VA = "0x20FC46C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E8")]
		public virtual bool IsArray
		{
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x20FC474", Offset = "0x20FC474", VA = "0x20FC474", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E9")]
		public virtual bool IsObject
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x20FC47C", Offset = "0x20FC47C", VA = "0x20FC47C", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public virtual bool Inline
		{
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x20FC484", Offset = "0x20FC484", VA = "0x20FC484", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0x20FC48C", Offset = "0x20FC48C", VA = "0x20FC48C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60014D2")]
			[Address(RVA = "0x20FC524", Offset = "0x20FC524", VA = "0x20FC524", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEA00", Offset = "0x5CEA00")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EC")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0x20FC5D0", Offset = "0x20FC5D0", VA = "0x20FC5D0")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEA78", Offset = "0x5CEA78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0x20FC820", Offset = "0x20FC820", VA = "0x20FC820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EE")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0x20FC990", Offset = "0x20FC990", VA = "0x20FC990")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x170000EF")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0x20FCA34", Offset = "0x20FCA34", VA = "0x20FCA34")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x170000F0")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0x20FCAD8", Offset = "0x20FCAD8", VA = "0x20FCAD8", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0x20FCBA0", Offset = "0x20FCBA0", VA = "0x20FCBA0", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000F1")]
		public virtual int AsInt
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0x20FCBE0", Offset = "0x20FCBE0", VA = "0x20FCBE0", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0x20FCC08", Offset = "0x20FCC08", VA = "0x20FCC08", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0x20FCC3C", Offset = "0x20FCC3C", VA = "0x20FCC3C", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0x20FCC64", Offset = "0x20FCC64", VA = "0x20FCC64", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0x20FCC98", Offset = "0x20FCC98", VA = "0x20FCC98", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0x20FCD80", Offset = "0x20FCD80", VA = "0x20FCD80", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0x20FCE18", Offset = "0x20FCE18", VA = "0x20FCE18", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0x20FCEAC", Offset = "0x20FCEAC", VA = "0x20FCEAC", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0x20FD880", Offset = "0x20FD880", VA = "0x20FD880")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x20FC490", Offset = "0x20FC490", VA = "0x20FC490", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x20FC494", Offset = "0x20FC494", VA = "0x20FC494", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x20FC50C", Offset = "0x20FC50C", VA = "0x20FC50C", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x20FC514", Offset = "0x20FC514", VA = "0x20FC514", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0x20FC51C", Offset = "0x20FC51C", VA = "0x20FC51C", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x20FC694", Offset = "0x20FC694", VA = "0x20FC694", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0x20FC758", Offset = "0x20FC758", VA = "0x20FC758", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x60014D6")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x60014D7")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x20FCF40", Offset = "0x20FCF40", VA = "0x20FCF40")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0x20FD03C", Offset = "0x20FD03C", VA = "0x20FD03C")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0x20FD298", Offset = "0x20FD298", VA = "0x20FD298")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0x20FD318", Offset = "0x20FD318", VA = "0x20FD318")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x20FD3D4", Offset = "0x20FD3D4", VA = "0x20FD3D4")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0x20FD458", Offset = "0x20FD458", VA = "0x20FD458")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x20FD50C", Offset = "0x20FD50C", VA = "0x20FD50C")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0x20FD58C", Offset = "0x20FD58C", VA = "0x20FD58C")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0x20FD640", Offset = "0x20FD640", VA = "0x20FD640")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0x20FD6B4", Offset = "0x20FD6B4", VA = "0x20FD6B4")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0x20FD768", Offset = "0x20FD768", VA = "0x20FD768")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0x20FD0F0", Offset = "0x20FD0F0", VA = "0x20FD0F0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0x20FD7D8", Offset = "0x20FD7D8", VA = "0x20FD7D8")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0x20FD864", Offset = "0x20FD864", VA = "0x20FD864", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0x20FD878", Offset = "0x20FD878", VA = "0x20FD878", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0x20FD9C8", Offset = "0x20FD9C8", VA = "0x20FD9C8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0x20FDE98", Offset = "0x20FDE98", VA = "0x20FDE98")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0x20FE10C", Offset = "0x20FE10C", VA = "0x20FE10C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0x20FB7C4", Offset = "0x20FB7C4", VA = "0x20FB7C4")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C19FC", Offset = "0x5C19FC")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E1C", Offset = "0x5C2E1C")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000323")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600283F")]
				[Address(RVA = "0x22EE664", Offset = "0x22EE664", VA = "0x22EE664", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002841")]
				[Address(RVA = "0x22EE6F4", Offset = "0x22EE6F4", VA = "0x22EE6F4", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600283B")]
			[Address(RVA = "0x22EE110", Offset = "0x22EE110", VA = "0x22EE110")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600283C")]
			[Address(RVA = "0x22EE43C", Offset = "0x22EE43C", VA = "0x22EE43C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600283D")]
			[Address(RVA = "0x22EE4C0", Offset = "0x22EE4C0", VA = "0x22EE4C0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600283E")]
			[Address(RVA = "0x22EE454", Offset = "0x22EE454", VA = "0x22EE454")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002840")]
			[Address(RVA = "0x22EE66C", Offset = "0x22EE66C", VA = "0x22EE66C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002842")]
			[Address(RVA = "0x22EE6FC", Offset = "0x22EE6FC", VA = "0x22EE6FC", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002843")]
			[Address(RVA = "0x22EE7C8", Offset = "0x22EE7C8", VA = "0x22EE7C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x170000F7")]
		public override bool Inline
		{
			[Token(Token = "0x60014FA")]
			[Address(RVA = "0x22ED8DC", Offset = "0x22ED8DC", VA = "0x22ED8DC", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0x22ED8E4", Offset = "0x22ED8E4", VA = "0x22ED8E4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000F8")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0x22ED8EC", Offset = "0x22ED8EC", VA = "0x22ED8EC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000F9")]
		public override bool IsArray
		{
			[Token(Token = "0x60014FD")]
			[Address(RVA = "0x22ED8F4", Offset = "0x22ED8F4", VA = "0x22ED8F4", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public override JSONNode Item
		{
			[Token(Token = "0x60014FF")]
			[Address(RVA = "0x22ED9B8", Offset = "0x22ED9B8", VA = "0x22ED9B8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001500")]
			[Address(RVA = "0x22EDAA4", Offset = "0x22EDAA4", VA = "0x22EDAA4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001501")]
			[Address(RVA = "0x22EDC18", Offset = "0x22EDC18", VA = "0x22EDC18", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001502")]
			[Address(RVA = "0x22EDC8C", Offset = "0x22EDC8C", VA = "0x22EDC8C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public override int Count
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0x22EDD88", Offset = "0x22EDD88", VA = "0x22EDD88", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000FD")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001507")]
			[Address(RVA = "0x22EE078", Offset = "0x22EE078", VA = "0x22EE078", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEAF0", Offset = "0x5CEAF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0x22ED8FC", Offset = "0x22ED8FC", VA = "0x22ED8FC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0x22EDE00", Offset = "0x22EDE00", VA = "0x22EDE00", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0x22EDEFC", Offset = "0x22EDEFC", VA = "0x22EDEFC", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0x22EDFF4", Offset = "0x22EDFF4", VA = "0x22EDFF4", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0x22EE13C", Offset = "0x22EE13C", VA = "0x22EE13C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0x22EE384", Offset = "0x22EE384", VA = "0x22EE384")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C1A30", Offset = "0x5C1A30")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E2C", Offset = "0x5C2E2C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4002DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JSONNode aNode;

			[Token(Token = "0x6002844")]
			[Address(RVA = "0x210114C", Offset = "0x210114C", VA = "0x210114C")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002845")]
			[Address(RVA = "0x2101698", Offset = "0x2101698", VA = "0x2101698")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E3C", Offset = "0x5C2E3C")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONObject <>4__this;

			[Token(Token = "0x4002DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000325")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600284A")]
				[Address(RVA = "0x21019B8", Offset = "0x21019B8", VA = "0x21019B8", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600284C")]
				[Address(RVA = "0x2101A48", Offset = "0x2101A48", VA = "0x2101A48", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002846")]
			[Address(RVA = "0x21011EC", Offset = "0x21011EC", VA = "0x21011EC")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002847")]
			[Address(RVA = "0x210174C", Offset = "0x210174C", VA = "0x210174C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002848")]
			[Address(RVA = "0x21017D0", Offset = "0x21017D0", VA = "0x21017D0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002849")]
			[Address(RVA = "0x2101764", Offset = "0x2101764", VA = "0x2101764")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600284B")]
			[Address(RVA = "0x21019C0", Offset = "0x21019C0", VA = "0x21019C0", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600284D")]
			[Address(RVA = "0x2101A50", Offset = "0x2101A50", VA = "0x2101A50", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600284E")]
			[Address(RVA = "0x2101B1C", Offset = "0x2101B1C", VA = "0x2101B1C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inline;

		[Token(Token = "0x170000FE")]
		public override bool Inline
		{
			[Token(Token = "0x600150A")]
			[Address(RVA = "0x2100510", Offset = "0x2100510", VA = "0x2100510", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600150B")]
			[Address(RVA = "0x2100518", Offset = "0x2100518", VA = "0x2100518", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0x2100520", Offset = "0x2100520", VA = "0x2100520", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000100")]
		public override bool IsObject
		{
			[Token(Token = "0x600150D")]
			[Address(RVA = "0x2100528", Offset = "0x2100528", VA = "0x2100528", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000101")]
		public override JSONNode Item
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0x21005EC", Offset = "0x21005EC", VA = "0x21005EC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001510")]
			[Address(RVA = "0x21006D0", Offset = "0x21006D0", VA = "0x21006D0", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0x210082C", Offset = "0x210082C", VA = "0x210082C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001512")]
			[Address(RVA = "0x2100910", Offset = "0x2100910", VA = "0x2100910", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public override int Count
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0x2100AA0", Offset = "0x2100AA0", VA = "0x2100AA0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000104")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x6001518")]
			[Address(RVA = "0x2101154", Offset = "0x2101154", VA = "0x2101154", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEB68", Offset = "0x5CEB68")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0x2100530", Offset = "0x2100530", VA = "0x2100530", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001514")]
		[Address(RVA = "0x2100B18", Offset = "0x2100B18", VA = "0x2100B18", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001515")]
		[Address(RVA = "0x2100D18", Offset = "0x2100D18", VA = "0x2100D18", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0x2100E0C", Offset = "0x2100E0C", VA = "0x2100E0C", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0x2100F3C", Offset = "0x2100F3C", VA = "0x2100F3C", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0x2101218", Offset = "0x2101218", VA = "0x2101218", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0x20FBB18", Offset = "0x20FBB18", VA = "0x20FBB18")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_Data;

		[Token(Token = "0x17000105")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600151B")]
			[Address(RVA = "0x2101B20", Offset = "0x2101B20", VA = "0x2101B20", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000106")]
		public override bool IsString
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0x2101B28", Offset = "0x2101B28", VA = "0x2101B28", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000107")]
		public override string Value
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0x2101B48", Offset = "0x2101B48", VA = "0x2101B48", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0x2101B50", Offset = "0x2101B50", VA = "0x2101B50", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0x2101B30", Offset = "0x2101B30", VA = "0x2101B30", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0x20FCFB0", Offset = "0x20FCFB0", VA = "0x20FCFB0")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0x2101B58", Offset = "0x2101B58", VA = "0x2101B58", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0x2101C4C", Offset = "0x2101C4C", VA = "0x2101C4C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0x2101D84", Offset = "0x2101D84", VA = "0x2101D84", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AE")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private double m_Data;

		[Token(Token = "0x17000108")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0x2100040", Offset = "0x2100040", VA = "0x2100040", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000109")]
		public override bool IsNumber
		{
			[Token(Token = "0x6001525")]
			[Address(RVA = "0x2100048", Offset = "0x2100048", VA = "0x2100048", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public override string Value
		{
			[Token(Token = "0x6001527")]
			[Address(RVA = "0x2100068", Offset = "0x2100068", VA = "0x2100068", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001528")]
			[Address(RVA = "0x2100074", Offset = "0x2100074", VA = "0x2100074", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public override double AsDouble
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0x2100120", Offset = "0x2100120", VA = "0x2100120", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600152A")]
			[Address(RVA = "0x210012C", Offset = "0x210012C", VA = "0x210012C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0x2100050", Offset = "0x2100050", VA = "0x2100050", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0x20FBE08", Offset = "0x20FBE08", VA = "0x20FBE08")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0x210013C", Offset = "0x210013C", VA = "0x210013C")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x600152D")]
		[Address(RVA = "0x21001DC", Offset = "0x21001DC", VA = "0x21001DC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600152E")]
		[Address(RVA = "0x2100224", Offset = "0x2100224", VA = "0x2100224")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x600152F")]
		[Address(RVA = "0x2100380", Offset = "0x2100380", VA = "0x2100380", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001530")]
		[Address(RVA = "0x2100504", Offset = "0x2100504", VA = "0x2100504", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002AF")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_Data;

		[Token(Token = "0x1700010C")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6001531")]
			[Address(RVA = "0x22EE7CC", Offset = "0x22EE7CC", VA = "0x22EE7CC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700010D")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0x22EE7D4", Offset = "0x22EE7D4", VA = "0x22EE7D4", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public override string Value
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0x22EE7F4", Offset = "0x22EE7F4", VA = "0x22EE7F4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0x22EE800", Offset = "0x22EE800", VA = "0x22EE800", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public override bool AsBool
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0x22EE8A8", Offset = "0x22EE8A8", VA = "0x22EE8A8", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0x22EE8B0", Offset = "0x22EE8B0", VA = "0x22EE8B0", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6001533")]
		[Address(RVA = "0x22EE7DC", Offset = "0x22EE7DC", VA = "0x22EE7DC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0x22EE8B8", Offset = "0x22EE8B8", VA = "0x22EE8B8")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6001539")]
		[Address(RVA = "0x22EE944", Offset = "0x22EE944", VA = "0x22EE944")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0x22EE9E4", Offset = "0x22EE9E4", VA = "0x22EE9E4", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0x22EEA78", Offset = "0x22EEA78", VA = "0x22EEA78", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0x22EEB0C", Offset = "0x22EEB0C", VA = "0x22EEB0C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002B0")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool reuseSameInstance;

		[Token(Token = "0x17000110")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0x20FFE04", Offset = "0x20FFE04", VA = "0x20FFE04", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000111")]
		public override bool IsNull
		{
			[Token(Token = "0x6001540")]
			[Address(RVA = "0x20FFE0C", Offset = "0x20FFE0C", VA = "0x20FFE0C", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public override string Value
		{
			[Token(Token = "0x6001542")]
			[Address(RVA = "0x20FFE2C", Offset = "0x20FFE2C", VA = "0x20FFE2C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001543")]
			[Address(RVA = "0x20FFE88", Offset = "0x20FFE88", VA = "0x20FFE88", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public override bool AsBool
		{
			[Token(Token = "0x6001544")]
			[Address(RVA = "0x20FFE8C", Offset = "0x20FFE8C", VA = "0x20FFE8C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001545")]
			[Address(RVA = "0x20FFE94", Offset = "0x20FFE94", VA = "0x20FFE94", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600153D")]
		[Address(RVA = "0x20FFCA4", Offset = "0x20FFCA4", VA = "0x20FFCA4")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x600153E")]
		[Address(RVA = "0x20FFD80", Offset = "0x20FFD80", VA = "0x20FFD80")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0x20FFE14", Offset = "0x20FFE14", VA = "0x20FFE14", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0x20FFE98", Offset = "0x20FFE98", VA = "0x20FFE98", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0x20FFF40", Offset = "0x20FFF40", VA = "0x20FFF40", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0x20FFF48", Offset = "0x20FFF48", VA = "0x20FFF48", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C1A64", Offset = "0x5C1A64")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private JSONNode m_Node;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Key;

		[Token(Token = "0x17000114")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x20FB710", Offset = "0x20FB710", VA = "0x20FB710", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000115")]
		public override JSONNode Item
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0x20FB8E4", Offset = "0x20FB8E4", VA = "0x20FB8E4", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001550")]
			[Address(RVA = "0x20FB954", Offset = "0x20FB954", VA = "0x20FB954", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0x20FB9F8", Offset = "0x20FB9F8", VA = "0x20FB9F8", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001552")]
			[Address(RVA = "0x20FBA70", Offset = "0x20FBA70", VA = "0x20FBA70", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public override int AsInt
		{
			[Token(Token = "0x6001559")]
			[Address(RVA = "0x20FBD80", Offset = "0x20FBD80", VA = "0x20FBD80", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600155A")]
			[Address(RVA = "0x20FBEA4", Offset = "0x20FBEA4", VA = "0x20FBEA4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public override float AsFloat
		{
			[Token(Token = "0x600155B")]
			[Address(RVA = "0x20FBF30", Offset = "0x20FBF30", VA = "0x20FBF30", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600155C")]
			[Address(RVA = "0x20FBFB8", Offset = "0x20FBFB8", VA = "0x20FBFB8", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public override double AsDouble
		{
			[Token(Token = "0x600155D")]
			[Address(RVA = "0x20FC048", Offset = "0x20FC048", VA = "0x20FC048", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600155E")]
			[Address(RVA = "0x20FC0DC", Offset = "0x20FC0DC", VA = "0x20FC0DC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public override bool AsBool
		{
			[Token(Token = "0x600155F")]
			[Address(RVA = "0x20FC168", Offset = "0x20FC168", VA = "0x20FC168", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001560")]
			[Address(RVA = "0x20FC1E8", Offset = "0x20FC1E8", VA = "0x20FC1E8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001561")]
			[Address(RVA = "0x20FC268", Offset = "0x20FC268", VA = "0x20FC268", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011C")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0x20FC2E4", Offset = "0x20FC2E4", VA = "0x20FC2E4", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0x20FB718", Offset = "0x20FB718", VA = "0x20FB718", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0x20FB730", Offset = "0x20FB730", VA = "0x20FB730")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x20FB7CC", Offset = "0x20FB7CC", VA = "0x20FB7CC")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x20FB860", Offset = "0x20FB860", VA = "0x20FB860")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0x20FBBD0", Offset = "0x20FBBD0", VA = "0x20FBBD0", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0x20FBC74", Offset = "0x20FBC74", VA = "0x20FBC74", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0x20FBD1C", Offset = "0x20FBD1C", VA = "0x20FBD1C")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0x20FBD3C", Offset = "0x20FBD3C", VA = "0x20FBD3C")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0x20FBD58", Offset = "0x20FBD58", VA = "0x20FBD58", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0x20FBD78", Offset = "0x20FBD78", VA = "0x20FBD78", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0x20FC35C", Offset = "0x20FC35C", VA = "0x20FC35C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public static class JSON
	{
		[Token(Token = "0x6001564")]
		[Address(RVA = "0x22ED858", Offset = "0x22ED858", VA = "0x22ED858")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace PublicKeyConvert
{
	[Token(Token = "0x20002B3")]
	public class PEMKeyLoader
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte[] SeqOID;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0x20EBC68", Offset = "0x20EBC68", VA = "0x20EBC68")]
		private static bool CompareBytearrays(byte[] a, byte[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0x20EBD30", Offset = "0x20EBD30", VA = "0x20EBD30")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(byte[] x509key)
		{
			return null;
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0x20EC30C", Offset = "0x20EC30C", VA = "0x20EC30C")]
		public static RSACryptoServiceProvider CryptoServiceProviderFromPublicKeyInfo(string base64EncodedKey)
		{
			return null;
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0x20EC458", Offset = "0x20EC458", VA = "0x20EC458")]
		public PEMKeyLoader()
		{
		}
	}
}
namespace Viveport
{
	[Token(Token = "0x20002B4")]
	public class MainThreadDispatcher : MonoBehaviour
	{
		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E4C", Offset = "0x5C2E4C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4002DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MainThreadDispatcher <>4__this;

			[Token(Token = "0x4002DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public IEnumerator action;

			[Token(Token = "0x600284F")]
			[Address(RVA = "0x246EFDC", Offset = "0x246EFDC", VA = "0x246EFDC")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002850")]
			[Address(RVA = "0x246F158", Offset = "0x246F158", VA = "0x246F158")]
			internal void <Enqueue>b__0()
			{
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E5C", Offset = "0x5C2E5C")]
		private sealed class <ActionWrapper>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002854")]
				[Address(RVA = "0x246F1FC", Offset = "0x246F1FC", VA = "0x246F1FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002856")]
				[Address(RVA = "0x246F28C", Offset = "0x246F28C", VA = "0x246F28C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002851")]
			[Address(RVA = "0x246F090", Offset = "0x246F090", VA = "0x246F090")]
			[DebuggerHidden]
			public <ActionWrapper>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002852")]
			[Address(RVA = "0x246F18C", Offset = "0x246F18C", VA = "0x246F18C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002853")]
			[Address(RVA = "0x246F190", Offset = "0x246F190", VA = "0x246F190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002855")]
			[Address(RVA = "0x246F204", Offset = "0x246F204", VA = "0x246F204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E6C", Offset = "0x5C2E6C")]
		private sealed class <ActionWrapper>d__13<T1> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1> action;

			[Token(Token = "0x4002DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600285A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600285C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002857")]
			[DebuggerHidden]
			public <ActionWrapper>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002858")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002859")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600285B")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E7C", Offset = "0x5C2E7C")]
		private sealed class <ActionWrapper>d__14<T1, T2> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2> action;

			[Token(Token = "0x4002DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002860")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002862")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600285D")]
			[DebuggerHidden]
			public <ActionWrapper>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x600285E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600285F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002861")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E8C", Offset = "0x5C2E8C")]
		private sealed class <ActionWrapper>d__15<T1, T2, T3> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3> action;

			[Token(Token = "0x4002DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002866")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002868")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002863")]
			[DebuggerHidden]
			public <ActionWrapper>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002864")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002865")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002867")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2E9C", Offset = "0x5C2E9C")]
		private sealed class <ActionWrapper>d__16<T1, T2, T3, T4> : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4002DDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x4002DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T1, T2, T3, T4> action;

			[Token(Token = "0x4002DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T1 param1;

			[Token(Token = "0x4002DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T2 param2;

			[Token(Token = "0x4002DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T3 param3;

			[Token(Token = "0x4002DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T4 param4;

			[Token(Token = "0x1700032F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600286C")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000330")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600286E")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002869")]
			[DebuggerHidden]
			public <ActionWrapper>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x600286A")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600286B")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600286D")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Queue<Action> actions;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static MainThreadDispatcher instance;

		[Token(Token = "0x600156A")]
		[Address(RVA = "0x246E82C", Offset = "0x246E82C", VA = "0x246E82C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0x246E98C", Offset = "0x246E98C", VA = "0x246E98C")]
		public void Update()
		{
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0x246EBBC", Offset = "0x246EBBC", VA = "0x246EBBC")]
		public static MainThreadDispatcher Instance()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0x246ED28", Offset = "0x246ED28", VA = "0x246ED28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0x246EDB8", Offset = "0x246EDB8", VA = "0x246EDB8")]
		public void Enqueue(IEnumerator action)
		{
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0x246EFE4", Offset = "0x246EFE4", VA = "0x246EFE4")]
		public void Enqueue(Action action)
		{
		}

		[Token(Token = "0x6001570")]
		public void Enqueue<T1>(Action<T1> action, T1 param1)
		{
		}

		[Token(Token = "0x6001571")]
		public void Enqueue<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
		}

		[Token(Token = "0x6001572")]
		public void Enqueue<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
		}

		[Token(Token = "0x6001573")]
		public void Enqueue<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0x246F004", Offset = "0x246F004", VA = "0x246F004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEBE0", Offset = "0x5CEBE0")]
		private IEnumerator ActionWrapper(Action action)
		{
			return null;
		}

		[Token(Token = "0x6001575")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEC58", Offset = "0x5CEC58")]
		private IEnumerator ActionWrapper<T1>(Action<T1> action, T1 param1)
		{
			return null;
		}

		[Token(Token = "0x6001576")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CECD0", Offset = "0x5CECD0")]
		private IEnumerator ActionWrapper<T1, T2>(Action<T1, T2> action, T1 param1, T2 param2)
		{
			return null;
		}

		[Token(Token = "0x6001577")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CED48", Offset = "0x5CED48")]
		private IEnumerator ActionWrapper<T1, T2, T3>(Action<T1, T2, T3> action, T1 param1, T2 param2, T3 param3)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CEDC0", Offset = "0x5CEDC0")]
		private IEnumerator ActionWrapper<T1, T2, T3, T4>(Action<T1, T2, T3, T4> action, T1 param1, T2 param2, T3 param3, T4 param4)
		{
			return null;
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0x246F0B0", Offset = "0x246F0B0", VA = "0x246F0B0")]
		public MainThreadDispatcher()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public enum Locale
	{
		[Token(Token = "0x4001D30")]
		US,
		[Token(Token = "0x4001D31")]
		DE,
		[Token(Token = "0x4001D32")]
		JP,
		[Token(Token = "0x4001D33")]
		KR,
		[Token(Token = "0x4001D34")]
		RU,
		[Token(Token = "0x4001D35")]
		CN,
		[Token(Token = "0x4001D36")]
		TW,
		[Token(Token = "0x4001D37")]
		FR
	}
	[Token(Token = "0x20002B6")]
	public delegate void StatusCallback(int nResult);
	[Token(Token = "0x20002B7")]
	public delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20002B8")]
	public delegate void QueryRuntimeModeCallback(int nResult, int emu);
	[Token(Token = "0x20002B9")]
	public class Leaderboard
	{
		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7254", Offset = "0x5C7254")]
		private int <Rank>k__BackingField;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7264", Offset = "0x5C7264")]
		private int <Score>k__BackingField;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7274", Offset = "0x5C7274")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x1700011D")]
		public int Rank
		{
			[Token(Token = "0x6001587")]
			[Address(RVA = "0x246E814", Offset = "0x246E814", VA = "0x246E814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE38", Offset = "0x5CEE38")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001588")]
			[Address(RVA = "0x246E604", Offset = "0x246E604", VA = "0x246E604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE48", Offset = "0x5CEE48")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public int Score
		{
			[Token(Token = "0x6001589")]
			[Address(RVA = "0x246E81C", Offset = "0x246E81C", VA = "0x246E81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE58", Offset = "0x5CEE58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600158A")]
			[Address(RVA = "0x246E60C", Offset = "0x246E60C", VA = "0x246E60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE68", Offset = "0x5CEE68")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public string UserName
		{
			[Token(Token = "0x600158B")]
			[Address(RVA = "0x246E824", Offset = "0x246E824", VA = "0x246E824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE78", Offset = "0x5CEE78")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158C")]
			[Address(RVA = "0x246E5FC", Offset = "0x246E5FC", VA = "0x246E5FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE88", Offset = "0x5CEE88")]
			set
			{
			}
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0x246E5F4", Offset = "0x246E5F4", VA = "0x246E5F4")]
		public Leaderboard()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class SubscriptionStatus
	{
		[Token(Token = "0x20005CD")]
		public enum Platform
		{
			[Token(Token = "0x4002DE1")]
			Windows,
			[Token(Token = "0x4002DE2")]
			Android
		}

		[Token(Token = "0x20005CE")]
		public enum TransactionType
		{
			[Token(Token = "0x4002DE4")]
			Unknown,
			[Token(Token = "0x4002DE5")]
			Paid,
			[Token(Token = "0x4002DE6")]
			Redeem,
			[Token(Token = "0x4002DE7")]
			FreeTrial
		}

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7284", Offset = "0x5C7284")]
		private List<Platform> <Platforms>k__BackingField;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7294", Offset = "0x5C7294")]
		private TransactionType <Type>k__BackingField;

		[Token(Token = "0x17000120")]
		public List<Platform> Platforms
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x24706A8", Offset = "0x24706A8", VA = "0x24706A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEE98", Offset = "0x5CEE98")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x24706C0", Offset = "0x24706C0", VA = "0x24706C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEEA8", Offset = "0x5CEEA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public TransactionType Type
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x24706C8", Offset = "0x24706C8", VA = "0x24706C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEEB8", Offset = "0x5CEEB8")]
			get
			{
				return default(TransactionType);
			}
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x24706B0", Offset = "0x24706B0", VA = "0x24706B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CEEC8", Offset = "0x5CEEC8")]
			set
			{
			}
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0x2470614", Offset = "0x2470614", VA = "0x2470614")]
		public SubscriptionStatus()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class Api
	{
		[Token(Token = "0x20005CF")]
		public abstract class LicenseChecker
		{
			[Token(Token = "0x600286F")]
			public abstract void OnSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired);

			[Token(Token = "0x6002870")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002871")]
			[Address(RVA = "0x232F630", Offset = "0x232F630", VA = "0x232F630")]
			protected LicenseChecker()
			{
			}
		}

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly List<GetLicenseCallback> InternalGetLicenseCallbacks;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal static readonly List<Viveport.Internal.StatusCallback> InternalStatusCallbacks;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly List<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		internal static readonly List<Viveport.Internal.StatusCallback2> InternalStatusCallback2s;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly List<LicenseChecker> InternalLicenseCheckers;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Viveport.Internal.StatusCallback initIl2cppCallback;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Viveport.Internal.StatusCallback shutdownIl2cppCallback;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly string VERSION;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static string _appId;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string _appKey;

		[Token(Token = "0x6001593")]
		[Address(RVA = "0x232E8D8", Offset = "0x232E8D8", VA = "0x232E8D8")]
		public static void GetLicense(LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0x232E778", Offset = "0x232E778", VA = "0x232E778")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CEED8", Offset = "0x5CEED8")]
		private static void InitIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0x232EC38", Offset = "0x232EC38", VA = "0x232EC38")]
		public static int Init(StatusCallback callback, string appId)
		{
			return default(int);
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x232E828", Offset = "0x232E828", VA = "0x232E828")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CEF50", Offset = "0x5CEF50")]
		private static void ShutdownIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x6001597")]
		[Address(RVA = "0x232F000", Offset = "0x232F000", VA = "0x232F000")]
		public static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x232F300", Offset = "0x232F300", VA = "0x232F300")]
		public static string Version()
		{
			return null;
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x232F470", Offset = "0x232F470", VA = "0x232F470")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class User
	{
		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x24706D8", Offset = "0x24706D8", VA = "0x24706D8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CEFC8", Offset = "0x5CEFC8")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x2470758", Offset = "0x2470758", VA = "0x2470758")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x2470934", Offset = "0x2470934", VA = "0x2470934")]
		public static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x247096C", Offset = "0x247096C", VA = "0x247096C")]
		public static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x24709A4", Offset = "0x24709A4", VA = "0x24709A4")]
		public static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x24709DC", Offset = "0x24709DC", VA = "0x24709DC")]
		public User()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class UserStats
	{
		[Token(Token = "0x20005D0")]
		public enum LeaderBoardRequestType
		{
			[Token(Token = "0x4002DE9")]
			GlobalData,
			[Token(Token = "0x4002DEA")]
			GlobalDataAroundUser,
			[Token(Token = "0x4002DEB")]
			LocalData,
			[Token(Token = "0x4002DEC")]
			LocalDataAroundUser
		}

		[Token(Token = "0x20005D1")]
		public enum LeaderBoardTimeRange
		{
			[Token(Token = "0x4002DEE")]
			AllTime,
			[Token(Token = "0x4002DEF")]
			Daily,
			[Token(Token = "0x4002DF0")]
			Weekly,
			[Token(Token = "0x4002DF1")]
			Monthly
		}

		[Token(Token = "0x20005D2")]
		public enum LeaderBoardSortMethod
		{
			[Token(Token = "0x4002DF3")]
			None,
			[Token(Token = "0x4002DF4")]
			Ascending,
			[Token(Token = "0x4002DF5")]
			Descending
		}

		[Token(Token = "0x20005D3")]
		public enum LeaderBoardDiaplayType
		{
			[Token(Token = "0x4002DF7")]
			None,
			[Token(Token = "0x4002DF8")]
			Numeric,
			[Token(Token = "0x4002DF9")]
			TimeSeconds,
			[Token(Token = "0x4002DFA")]
			TimeMilliSeconds
		}

		[Token(Token = "0x20005D4")]
		public enum LeaderBoardScoreMethod
		{
			[Token(Token = "0x4002DFC")]
			None,
			[Token(Token = "0x4002DFD")]
			KeepBest,
			[Token(Token = "0x4002DFE")]
			ForceUpdate
		}

		[Token(Token = "0x20005D5")]
		public enum AchievementDisplayAttribute
		{
			[Token(Token = "0x4002E00")]
			Name,
			[Token(Token = "0x4002E01")]
			Desc,
			[Token(Token = "0x4002E02")]
			Hidden
		}

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Viveport.Internal.StatusCallback downloadStatsIl2cppCallback;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback uploadStatsIl2cppCallback;

		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback;

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x24709E4", Offset = "0x24709E4", VA = "0x24709E4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF040", Offset = "0x5CF040")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x2470C64", Offset = "0x2470C64", VA = "0x2470C64")]
		public static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x2470A64", Offset = "0x2470A64", VA = "0x2470A64")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF0B8", Offset = "0x5CF0B8")]
		private static void DownloadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x2470E40", Offset = "0x2470E40", VA = "0x2470E40")]
		public static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x247101C", Offset = "0x247101C", VA = "0x247101C")]
		public static int GetStat(string name, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x2471020", Offset = "0x2471020", VA = "0x2471020")]
		public static float GetStat(string name, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x2471024", Offset = "0x2471024", VA = "0x2471024")]
		public static void SetStat(string name, int value)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x2471028", Offset = "0x2471028", VA = "0x2471028")]
		public static void SetStat(string name, float value)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x2470AE4", Offset = "0x2470AE4", VA = "0x2470AE4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF130", Offset = "0x5CF130")]
		private static void UploadStatsIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0x247102C", Offset = "0x247102C", VA = "0x247102C")]
		public static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x2471208", Offset = "0x2471208", VA = "0x2471208")]
		public static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x247120C", Offset = "0x247120C", VA = "0x247120C")]
		public static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x2471210", Offset = "0x2471210", VA = "0x2471210")]
		public static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0x2471214", Offset = "0x2471214", VA = "0x2471214")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x2471218", Offset = "0x2471218", VA = "0x2471218")]
		public static string GetAchievementDisplayAttribute(string pchName, AchievementDisplayAttribute attr, Locale locale)
		{
			return null;
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x247121C", Offset = "0x247121C", VA = "0x247121C")]
		public static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0x2471220", Offset = "0x2471220", VA = "0x2471220")]
		public static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x2470B64", Offset = "0x2470B64", VA = "0x2470B64")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF1A8", Offset = "0x5CF1A8")]
		private static void DownloadLeaderboardScoresIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x2471224", Offset = "0x2471224", VA = "0x2471224")]
		public static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, LeaderBoardRequestType eLeaderboardDataRequest, LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x2470BE4", Offset = "0x2470BE4", VA = "0x2470BE4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF220", Offset = "0x5CF220")]
		private static void UploadLeaderboardScoreIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x2471430", Offset = "0x2471430", VA = "0x2471430")]
		public static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScore)
		{
			return default(int);
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0x247161C", Offset = "0x247161C", VA = "0x247161C")]
		public static Leaderboard GetLeaderboardScore(int index)
		{
			return null;
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x2471620", Offset = "0x2471620", VA = "0x2471620")]
		public static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0x2471624", Offset = "0x2471624", VA = "0x2471624")]
		public static LeaderBoardSortMethod GetLeaderboardSortMethod()
		{
			return default(LeaderBoardSortMethod);
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x2471628", Offset = "0x2471628", VA = "0x2471628")]
		public static LeaderBoardDiaplayType GetLeaderboardDisplayType()
		{
			return default(LeaderBoardDiaplayType);
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x247162C", Offset = "0x247162C", VA = "0x247162C")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class ArcadeLeaderboard
	{
		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x232F640", Offset = "0x232F640", VA = "0x232F640")]
		public ArcadeLeaderboard()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	public class IAPurchase
	{
		[Token(Token = "0x20005D6")]
		private class IAPHandler : BaseHandler
		{
			[Token(Token = "0x4002E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static IAPurchaseListener listener;

			[Token(Token = "0x6002872")]
			[Address(RVA = "0x2330CAC", Offset = "0x2330CAC", VA = "0x2330CAC")]
			public IAPHandler(IAPurchaseListener cb)
			{
			}

			[Token(Token = "0x6002873")]
			[Address(RVA = "0x2330D20", Offset = "0x2330D20", VA = "0x2330D20")]
			public IAPurchaseCallback getIsReadyHandler()
			{
				return null;
			}

			[Token(Token = "0x6002874")]
			[Address(RVA = "0x2331EFC", Offset = "0x2331EFC", VA = "0x2331EFC", Slot = "4")]
			protected override void IsReadyHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002875")]
			[Address(RVA = "0x2330E98", Offset = "0x2330E98", VA = "0x2330E98")]
			public IAPurchaseCallback getRequestHandler()
			{
				return null;
			}

			[Token(Token = "0x6002876")]
			[Address(RVA = "0x2332578", Offset = "0x2332578", VA = "0x2332578", Slot = "5")]
			protected override void RequestHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002877")]
			[Address(RVA = "0x2331100", Offset = "0x2331100", VA = "0x2331100")]
			public IAPurchaseCallback getPurchaseHandler()
			{
				return null;
			}

			[Token(Token = "0x6002878")]
			[Address(RVA = "0x2332BF4", Offset = "0x2332BF4", VA = "0x2332BF4", Slot = "6")]
			protected override void PurchaseHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002879")]
			[Address(RVA = "0x2331278", Offset = "0x2331278", VA = "0x2331278")]
			public IAPurchaseCallback getQueryHandler()
			{
				return null;
			}

			[Token(Token = "0x600287A")]
			[Address(RVA = "0x2333480", Offset = "0x2333480", VA = "0x2333480", Slot = "7")]
			protected override void QueryHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287B")]
			[Address(RVA = "0x23313E8", Offset = "0x23313E8", VA = "0x23313E8")]
			public IAPurchaseCallback getQueryListHandler()
			{
				return null;
			}

			[Token(Token = "0x600287C")]
			[Address(RVA = "0x2334314", Offset = "0x2334314", VA = "0x2334314", Slot = "8")]
			protected override void QueryListHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287D")]
			[Address(RVA = "0x2331558", Offset = "0x2331558", VA = "0x2331558")]
			public IAPurchaseCallback getBalanceHandler()
			{
				return null;
			}

			[Token(Token = "0x600287E")]
			[Address(RVA = "0x2335A48", Offset = "0x2335A48", VA = "0x2335A48", Slot = "9")]
			protected override void BalanceHandler(int code, string message)
			{
			}

			[Token(Token = "0x600287F")]
			[Address(RVA = "0x233170C", Offset = "0x233170C", VA = "0x233170C")]
			public IAPurchaseCallback getRequestSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002880")]
			[Address(RVA = "0x23362D8", Offset = "0x23362D8", VA = "0x23362D8", Slot = "10")]
			protected override void RequestSubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002881")]
			[Address(RVA = "0x2331884", Offset = "0x2331884", VA = "0x2331884")]
			public IAPurchaseCallback getRequestSubscriptionWithPlanIDHandler()
			{
				return null;
			}

			[Token(Token = "0x6002882")]
			[Address(RVA = "0x233691C", Offset = "0x233691C", VA = "0x233691C", Slot = "11")]
			protected override void RequestSubscriptionWithPlanIDHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002883")]
			[Address(RVA = "0x23319FC", Offset = "0x23319FC", VA = "0x23319FC")]
			public IAPurchaseCallback getSubscribeHandler()
			{
				return null;
			}

			[Token(Token = "0x6002884")]
			[Address(RVA = "0x2336F60", Offset = "0x2336F60", VA = "0x2336F60", Slot = "12")]
			protected override void SubscribeHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002885")]
			[Address(RVA = "0x2331B74", Offset = "0x2331B74", VA = "0x2331B74")]
			public IAPurchaseCallback getQuerySubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x6002886")]
			[Address(RVA = "0x23378C8", Offset = "0x23378C8", VA = "0x23378C8", Slot = "13")]
			protected override void QuerySubscriptionHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002887")]
			[Address(RVA = "0x2331CE4", Offset = "0x2331CE4", VA = "0x2331CE4")]
			public IAPurchaseCallback getQuerySubscriptionListHandler()
			{
				return null;
			}

			[Token(Token = "0x6002888")]
			[Address(RVA = "0x2337FB0", Offset = "0x2337FB0", VA = "0x2337FB0", Slot = "14")]
			protected override void QuerySubscriptionListHandler(int code, string message)
			{
			}

			[Token(Token = "0x6002889")]
			[Address(RVA = "0x2331E5C", Offset = "0x2331E5C", VA = "0x2331E5C")]
			public IAPurchaseCallback getCancelSubscriptionHandler()
			{
				return null;
			}

			[Token(Token = "0x600288A")]
			[Address(RVA = "0x2338690", Offset = "0x2338690", VA = "0x2338690", Slot = "15")]
			protected override void CancelSubscriptionHandler(int code, string message)
			{
			}
		}

		[Token(Token = "0x20005D7")]
		private abstract class BaseHandler
		{
			[Token(Token = "0x600288B")]
			protected abstract void IsReadyHandler(int code, string message);

			[Token(Token = "0x600288C")]
			protected abstract void RequestHandler(int code, string message);

			[Token(Token = "0x600288D")]
			protected abstract void PurchaseHandler(int code, string message);

			[Token(Token = "0x600288E")]
			protected abstract void QueryHandler(int code, string message);

			[Token(Token = "0x600288F")]
			protected abstract void QueryListHandler(int code, string message);

			[Token(Token = "0x6002890")]
			protected abstract void BalanceHandler(int code, string message);

			[Token(Token = "0x6002891")]
			protected abstract void RequestSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002892")]
			protected abstract void RequestSubscriptionWithPlanIDHandler(int code, string message);

			[Token(Token = "0x6002893")]
			protected abstract void SubscribeHandler(int code, string message);

			[Token(Token = "0x6002894")]
			protected abstract void QuerySubscriptionHandler(int code, string message);

			[Token(Token = "0x6002895")]
			protected abstract void QuerySubscriptionListHandler(int code, string message);

			[Token(Token = "0x6002896")]
			protected abstract void CancelSubscriptionHandler(int code, string message);

			[Token(Token = "0x6002897")]
			[Address(RVA = "0x2331EF4", Offset = "0x2331EF4", VA = "0x2331EF4")]
			protected BaseHandler()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		public class IAPurchaseListener
		{
			[Token(Token = "0x6002898")]
			[Address(RVA = "0x2338BFC", Offset = "0x2338BFC", VA = "0x2338BFC", Slot = "4")]
			public virtual void OnSuccess(string pchCurrencyName)
			{
			}

			[Token(Token = "0x6002899")]
			[Address(RVA = "0x2338C00", Offset = "0x2338C00", VA = "0x2338C00", Slot = "5")]
			public virtual void OnRequestSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600289A")]
			[Address(RVA = "0x2338C04", Offset = "0x2338C04", VA = "0x2338C04", Slot = "6")]
			public virtual void OnPurchaseSuccess(string pchPurchaseId)
			{
			}

			[Token(Token = "0x600289B")]
			[Address(RVA = "0x2338C08", Offset = "0x2338C08", VA = "0x2338C08", Slot = "7")]
			public virtual void OnQuerySuccess(QueryResponse response)
			{
			}

			[Token(Token = "0x600289C")]
			[Address(RVA = "0x2338C0C", Offset = "0x2338C0C", VA = "0x2338C0C", Slot = "8")]
			public virtual void OnQuerySuccess(QueryListResponse response)
			{
			}

			[Token(Token = "0x600289D")]
			[Address(RVA = "0x2338C10", Offset = "0x2338C10", VA = "0x2338C10", Slot = "9")]
			public virtual void OnBalanceSuccess(string pchBalance)
			{
			}

			[Token(Token = "0x600289E")]
			[Address(RVA = "0x2338C14", Offset = "0x2338C14", VA = "0x2338C14", Slot = "10")]
			public virtual void OnFailure(int nCode, string pchMessage)
			{
			}

			[Token(Token = "0x600289F")]
			[Address(RVA = "0x2338C18", Offset = "0x2338C18", VA = "0x2338C18", Slot = "11")]
			public virtual void OnRequestSubscriptionSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A0")]
			[Address(RVA = "0x2338C1C", Offset = "0x2338C1C", VA = "0x2338C1C", Slot = "12")]
			public virtual void OnRequestSubscriptionWithPlanIDSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A1")]
			[Address(RVA = "0x2338C20", Offset = "0x2338C20", VA = "0x2338C20", Slot = "13")]
			public virtual void OnSubscribeSuccess(string pchSubscriptionId)
			{
			}

			[Token(Token = "0x60028A2")]
			[Address(RVA = "0x2338C24", Offset = "0x2338C24", VA = "0x2338C24", Slot = "14")]
			public virtual void OnQuerySubscriptionSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028A3")]
			[Address(RVA = "0x2338C28", Offset = "0x2338C28", VA = "0x2338C28", Slot = "15")]
			public virtual void OnQuerySubscriptionListSuccess(Subscription[] subscriptionlist)
			{
			}

			[Token(Token = "0x60028A4")]
			[Address(RVA = "0x2338C2C", Offset = "0x2338C2C", VA = "0x2338C2C", Slot = "16")]
			public virtual void OnCancelSubscriptionSuccess(bool bCanceled)
			{
			}

			[Token(Token = "0x60028A5")]
			[Address(RVA = "0x2338C30", Offset = "0x2338C30", VA = "0x2338C30")]
			public IAPurchaseListener()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		public class QueryResponse
		{
			[Token(Token = "0x4002E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAD88", Offset = "0x5CAD88")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAD98", Offset = "0x5CAD98")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADA8", Offset = "0x5CADA8")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADB8", Offset = "0x5CADB8")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADC8", Offset = "0x5CADC8")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADD8", Offset = "0x5CADD8")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000331")]
			public string order_id
			{
				[Token(Token = "0x60028A6")]
				[Address(RVA = "0x2338C50", Offset = "0x2338C50", VA = "0x2338C50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D463C", Offset = "0x5D463C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028A7")]
				[Address(RVA = "0x23342E4", Offset = "0x23342E4", VA = "0x23342E4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D464C", Offset = "0x5D464C")]
				set
				{
				}
			}

			[Token(Token = "0x17000332")]
			public string purchase_id
			{
				[Token(Token = "0x60028A8")]
				[Address(RVA = "0x2338C58", Offset = "0x2338C58", VA = "0x2338C58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D465C", Offset = "0x5D465C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028A9")]
				[Address(RVA = "0x23342DC", Offset = "0x23342DC", VA = "0x23342DC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D466C", Offset = "0x5D466C")]
				set
				{
				}
			}

			[Token(Token = "0x17000333")]
			public string status
			{
				[Token(Token = "0x60028AA")]
				[Address(RVA = "0x2338C60", Offset = "0x2338C60", VA = "0x2338C60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D467C", Offset = "0x5D467C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028AB")]
				[Address(RVA = "0x233430C", Offset = "0x233430C", VA = "0x233430C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D468C", Offset = "0x5D468C")]
				set
				{
				}
			}

			[Token(Token = "0x17000334")]
			public string price
			{
				[Token(Token = "0x60028AC")]
				[Address(RVA = "0x2338C68", Offset = "0x2338C68", VA = "0x2338C68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D469C", Offset = "0x5D469C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028AD")]
				[Address(RVA = "0x23342EC", Offset = "0x23342EC", VA = "0x23342EC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46AC", Offset = "0x5D46AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000335")]
			public string currency
			{
				[Token(Token = "0x60028AE")]
				[Address(RVA = "0x2338C70", Offset = "0x2338C70", VA = "0x2338C70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46BC", Offset = "0x5D46BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028AF")]
				[Address(RVA = "0x23342F4", Offset = "0x23342F4", VA = "0x23342F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46CC", Offset = "0x5D46CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000336")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028B0")]
				[Address(RVA = "0x2338C78", Offset = "0x2338C78", VA = "0x2338C78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46DC", Offset = "0x5D46DC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028B1")]
				[Address(RVA = "0x23342FC", Offset = "0x23342FC", VA = "0x23342FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46EC", Offset = "0x5D46EC")]
				set
				{
				}
			}

			[Token(Token = "0x60028B2")]
			[Address(RVA = "0x23342D4", Offset = "0x23342D4", VA = "0x23342D4")]
			public QueryResponse()
			{
			}
		}

		[Token(Token = "0x20005DA")]
		public class QueryResponse2
		{
			[Token(Token = "0x4002E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADE8", Offset = "0x5CADE8")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CADF8", Offset = "0x5CADF8")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4002E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE08", Offset = "0x5CAE08")]
			private string <purchase_id>k__BackingField;

			[Token(Token = "0x4002E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE18", Offset = "0x5CAE18")]
			private string <user_data>k__BackingField;

			[Token(Token = "0x4002E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE28", Offset = "0x5CAE28")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE38", Offset = "0x5CAE38")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE48", Offset = "0x5CAE48")]
			private long <paid_timestamp>k__BackingField;

			[Token(Token = "0x17000337")]
			public string order_id
			{
				[Token(Token = "0x60028B3")]
				[Address(RVA = "0x2338C80", Offset = "0x2338C80", VA = "0x2338C80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D46FC", Offset = "0x5D46FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B4")]
				[Address(RVA = "0x2335A00", Offset = "0x2335A00", VA = "0x2335A00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D470C", Offset = "0x5D470C")]
				set
				{
				}
			}

			[Token(Token = "0x17000338")]
			public string app_id
			{
				[Token(Token = "0x60028B5")]
				[Address(RVA = "0x2338C88", Offset = "0x2338C88", VA = "0x2338C88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D471C", Offset = "0x5D471C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B6")]
				[Address(RVA = "0x23359E8", Offset = "0x23359E8", VA = "0x23359E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D472C", Offset = "0x5D472C")]
				set
				{
				}
			}

			[Token(Token = "0x17000339")]
			public string purchase_id
			{
				[Token(Token = "0x60028B7")]
				[Address(RVA = "0x2338C90", Offset = "0x2338C90", VA = "0x2338C90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D473C", Offset = "0x5D473C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028B8")]
				[Address(RVA = "0x23359F8", Offset = "0x23359F8", VA = "0x23359F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D474C", Offset = "0x5D474C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033A")]
			public string user_data
			{
				[Token(Token = "0x60028B9")]
				[Address(RVA = "0x2338C98", Offset = "0x2338C98", VA = "0x2338C98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D475C", Offset = "0x5D475C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BA")]
				[Address(RVA = "0x2335A10", Offset = "0x2335A10", VA = "0x2335A10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D476C", Offset = "0x5D476C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033B")]
			public string price
			{
				[Token(Token = "0x60028BB")]
				[Address(RVA = "0x2338CA0", Offset = "0x2338CA0", VA = "0x2338CA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D477C", Offset = "0x5D477C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BC")]
				[Address(RVA = "0x2335A08", Offset = "0x2335A08", VA = "0x2335A08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D478C", Offset = "0x5D478C")]
				set
				{
				}
			}

			[Token(Token = "0x1700033C")]
			public string currency
			{
				[Token(Token = "0x60028BD")]
				[Address(RVA = "0x2338CA8", Offset = "0x2338CA8", VA = "0x2338CA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D479C", Offset = "0x5D479C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028BE")]
				[Address(RVA = "0x23359F0", Offset = "0x23359F0", VA = "0x23359F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47AC", Offset = "0x5D47AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700033D")]
			public long paid_timestamp
			{
				[Token(Token = "0x60028BF")]
				[Address(RVA = "0x2338CB0", Offset = "0x2338CB0", VA = "0x2338CB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47BC", Offset = "0x5D47BC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028C0")]
				[Address(RVA = "0x2335A18", Offset = "0x2335A18", VA = "0x2335A18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47CC", Offset = "0x5D47CC")]
				set
				{
				}
			}

			[Token(Token = "0x60028C1")]
			[Address(RVA = "0x23359E0", Offset = "0x23359E0", VA = "0x23359E0")]
			public QueryResponse2()
			{
			}
		}

		[Token(Token = "0x20005DB")]
		public class QueryListResponse
		{
			[Token(Token = "0x4002E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE58", Offset = "0x5CAE58")]
			private int <total>k__BackingField;

			[Token(Token = "0x4002E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE68", Offset = "0x5CAE68")]
			private int <from>k__BackingField;

			[Token(Token = "0x4002E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE78", Offset = "0x5CAE78")]
			private int <to>k__BackingField;

			[Token(Token = "0x4002E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public List<QueryResponse2> purchaseList;

			[Token(Token = "0x1700033E")]
			public int total
			{
				[Token(Token = "0x60028C2")]
				[Address(RVA = "0x2338C38", Offset = "0x2338C38", VA = "0x2338C38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47DC", Offset = "0x5D47DC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028C3")]
				[Address(RVA = "0x2335A30", Offset = "0x2335A30", VA = "0x2335A30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47EC", Offset = "0x5D47EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700033F")]
			public int from
			{
				[Token(Token = "0x60028C4")]
				[Address(RVA = "0x2338C40", Offset = "0x2338C40", VA = "0x2338C40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D47FC", Offset = "0x5D47FC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028C5")]
				[Address(RVA = "0x2335A38", Offset = "0x2335A38", VA = "0x2335A38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D480C", Offset = "0x5D480C")]
				set
				{
				}
			}

			[Token(Token = "0x17000340")]
			public int to
			{
				[Token(Token = "0x60028C6")]
				[Address(RVA = "0x2338C48", Offset = "0x2338C48", VA = "0x2338C48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D481C", Offset = "0x5D481C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028C7")]
				[Address(RVA = "0x2335A40", Offset = "0x2335A40", VA = "0x2335A40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D482C", Offset = "0x5D482C")]
				set
				{
				}
			}

			[Token(Token = "0x60028C8")]
			[Address(RVA = "0x2335A28", Offset = "0x2335A28", VA = "0x2335A28")]
			public QueryListResponse()
			{
			}
		}

		[Token(Token = "0x20005DC")]
		public class StatusDetailTransaction
		{
			[Token(Token = "0x4002E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE88", Offset = "0x5CAE88")]
			private long <create_time>k__BackingField;

			[Token(Token = "0x4002E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAE98", Offset = "0x5CAE98")]
			private string <payment_method>k__BackingField;

			[Token(Token = "0x4002E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAEA8", Offset = "0x5CAEA8")]
			private string <status>k__BackingField;

			[Token(Token = "0x17000341")]
			public long create_time
			{
				[Token(Token = "0x60028C9")]
				[Address(RVA = "0x2338D28", Offset = "0x2338D28", VA = "0x2338D28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D483C", Offset = "0x5D483C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028CA")]
				[Address(RVA = "0x2338D30", Offset = "0x2338D30", VA = "0x2338D30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D484C", Offset = "0x5D484C")]
				set
				{
				}
			}

			[Token(Token = "0x17000342")]
			public string payment_method
			{
				[Token(Token = "0x60028CB")]
				[Address(RVA = "0x2338D40", Offset = "0x2338D40", VA = "0x2338D40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D485C", Offset = "0x5D485C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028CC")]
				[Address(RVA = "0x2338D48", Offset = "0x2338D48", VA = "0x2338D48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D486C", Offset = "0x5D486C")]
				set
				{
				}
			}

			[Token(Token = "0x17000343")]
			public string status
			{
				[Token(Token = "0x60028CD")]
				[Address(RVA = "0x2338D50", Offset = "0x2338D50", VA = "0x2338D50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D487C", Offset = "0x5D487C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028CE")]
				[Address(RVA = "0x2338D58", Offset = "0x2338D58", VA = "0x2338D58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D488C", Offset = "0x5D488C")]
				set
				{
				}
			}

			[Token(Token = "0x60028CF")]
			[Address(RVA = "0x2338D60", Offset = "0x2338D60", VA = "0x2338D60")]
			public StatusDetailTransaction()
			{
			}
		}

		[Token(Token = "0x20005DD")]
		public class StatusDetail
		{
			[Token(Token = "0x4002E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAEB8", Offset = "0x5CAEB8")]
			private long <date_next_charge>k__BackingField;

			[Token(Token = "0x4002E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAEC8", Offset = "0x5CAEC8")]
			private StatusDetailTransaction[] <transactions>k__BackingField;

			[Token(Token = "0x4002E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAED8", Offset = "0x5CAED8")]
			private string <cancel_reason>k__BackingField;

			[Token(Token = "0x17000344")]
			public long date_next_charge
			{
				[Token(Token = "0x60028D0")]
				[Address(RVA = "0x2338CE8", Offset = "0x2338CE8", VA = "0x2338CE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D489C", Offset = "0x5D489C")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028D1")]
				[Address(RVA = "0x2338CF0", Offset = "0x2338CF0", VA = "0x2338CF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48AC", Offset = "0x5D48AC")]
				set
				{
				}
			}

			[Token(Token = "0x17000345")]
			public StatusDetailTransaction[] transactions
			{
				[Token(Token = "0x60028D2")]
				[Address(RVA = "0x2338D00", Offset = "0x2338D00", VA = "0x2338D00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48BC", Offset = "0x5D48BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D3")]
				[Address(RVA = "0x2338D08", Offset = "0x2338D08", VA = "0x2338D08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48CC", Offset = "0x5D48CC")]
				set
				{
				}
			}

			[Token(Token = "0x17000346")]
			public string cancel_reason
			{
				[Token(Token = "0x60028D4")]
				[Address(RVA = "0x2338D10", Offset = "0x2338D10", VA = "0x2338D10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48DC", Offset = "0x5D48DC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D5")]
				[Address(RVA = "0x2338D18", Offset = "0x2338D18", VA = "0x2338D18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48EC", Offset = "0x5D48EC")]
				set
				{
				}
			}

			[Token(Token = "0x60028D6")]
			[Address(RVA = "0x2338D20", Offset = "0x2338D20", VA = "0x2338D20")]
			public StatusDetail()
			{
			}
		}

		[Token(Token = "0x20005DE")]
		public class TimePeriod
		{
			[Token(Token = "0x4002E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAEE8", Offset = "0x5CAEE8")]
			private string <time_type>k__BackingField;

			[Token(Token = "0x4002E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAEF8", Offset = "0x5CAEF8")]
			private int <value>k__BackingField;

			[Token(Token = "0x17000347")]
			public string time_type
			{
				[Token(Token = "0x60028D7")]
				[Address(RVA = "0x2338E48", Offset = "0x2338E48", VA = "0x2338E48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D48FC", Offset = "0x5D48FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028D8")]
				[Address(RVA = "0x2338E50", Offset = "0x2338E50", VA = "0x2338E50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D490C", Offset = "0x5D490C")]
				set
				{
				}
			}

			[Token(Token = "0x17000348")]
			public int value
			{
				[Token(Token = "0x60028D9")]
				[Address(RVA = "0x2338E58", Offset = "0x2338E58", VA = "0x2338E58")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D491C", Offset = "0x5D491C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028DA")]
				[Address(RVA = "0x2338E60", Offset = "0x2338E60", VA = "0x2338E60")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D492C", Offset = "0x5D492C")]
				set
				{
				}
			}

			[Token(Token = "0x60028DB")]
			[Address(RVA = "0x2338E68", Offset = "0x2338E68", VA = "0x2338E68")]
			public TimePeriod()
			{
			}
		}

		[Token(Token = "0x20005DF")]
		public class Subscription
		{
			[Token(Token = "0x4002E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF08", Offset = "0x5CAF08")]
			private string <app_id>k__BackingField;

			[Token(Token = "0x4002E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF18", Offset = "0x5CAF18")]
			private string <order_id>k__BackingField;

			[Token(Token = "0x4002E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF28", Offset = "0x5CAF28")]
			private string <subscription_id>k__BackingField;

			[Token(Token = "0x4002E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF38", Offset = "0x5CAF38")]
			private string <price>k__BackingField;

			[Token(Token = "0x4002E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF48", Offset = "0x5CAF48")]
			private string <currency>k__BackingField;

			[Token(Token = "0x4002E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF58", Offset = "0x5CAF58")]
			private long <subscribed_timestamp>k__BackingField;

			[Token(Token = "0x4002E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF68", Offset = "0x5CAF68")]
			private TimePeriod <free_trial_period>k__BackingField;

			[Token(Token = "0x4002E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF78", Offset = "0x5CAF78")]
			private TimePeriod <charge_period>k__BackingField;

			[Token(Token = "0x4002E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF88", Offset = "0x5CAF88")]
			private int <number_of_charge_period>k__BackingField;

			[Token(Token = "0x4002E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAF98", Offset = "0x5CAF98")]
			private string <plan_id>k__BackingField;

			[Token(Token = "0x4002E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFA8", Offset = "0x5CAFA8")]
			private string <plan_name>k__BackingField;

			[Token(Token = "0x4002E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFB8", Offset = "0x5CAFB8")]
			private string <status>k__BackingField;

			[Token(Token = "0x4002E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFC8", Offset = "0x5CAFC8")]
			private StatusDetail <status_detail>k__BackingField;

			[Token(Token = "0x17000349")]
			public string app_id
			{
				[Token(Token = "0x60028DC")]
				[Address(RVA = "0x2338D68", Offset = "0x2338D68", VA = "0x2338D68")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D493C", Offset = "0x5D493C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DD")]
				[Address(RVA = "0x2338D70", Offset = "0x2338D70", VA = "0x2338D70")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D494C", Offset = "0x5D494C")]
				set
				{
				}
			}

			[Token(Token = "0x1700034A")]
			public string order_id
			{
				[Token(Token = "0x60028DE")]
				[Address(RVA = "0x2338D78", Offset = "0x2338D78", VA = "0x2338D78")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D495C", Offset = "0x5D495C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028DF")]
				[Address(RVA = "0x2338D80", Offset = "0x2338D80", VA = "0x2338D80")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D496C", Offset = "0x5D496C")]
				set
				{
				}
			}

			[Token(Token = "0x1700034B")]
			public string subscription_id
			{
				[Token(Token = "0x60028E0")]
				[Address(RVA = "0x2338D88", Offset = "0x2338D88", VA = "0x2338D88")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D497C", Offset = "0x5D497C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E1")]
				[Address(RVA = "0x2338D90", Offset = "0x2338D90", VA = "0x2338D90")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D498C", Offset = "0x5D498C")]
				set
				{
				}
			}

			[Token(Token = "0x1700034C")]
			public string price
			{
				[Token(Token = "0x60028E2")]
				[Address(RVA = "0x2338D98", Offset = "0x2338D98", VA = "0x2338D98")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D499C", Offset = "0x5D499C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E3")]
				[Address(RVA = "0x2338DA0", Offset = "0x2338DA0", VA = "0x2338DA0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49AC", Offset = "0x5D49AC")]
				set
				{
				}
			}

			[Token(Token = "0x1700034D")]
			public string currency
			{
				[Token(Token = "0x60028E4")]
				[Address(RVA = "0x2338DA8", Offset = "0x2338DA8", VA = "0x2338DA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49BC", Offset = "0x5D49BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E5")]
				[Address(RVA = "0x2338DB0", Offset = "0x2338DB0", VA = "0x2338DB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49CC", Offset = "0x5D49CC")]
				set
				{
				}
			}

			[Token(Token = "0x1700034E")]
			public long subscribed_timestamp
			{
				[Token(Token = "0x60028E6")]
				[Address(RVA = "0x2338DB8", Offset = "0x2338DB8", VA = "0x2338DB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49DC", Offset = "0x5D49DC")]
				get
				{
					return default(long);
				}
				[Token(Token = "0x60028E7")]
				[Address(RVA = "0x2338DC0", Offset = "0x2338DC0", VA = "0x2338DC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49EC", Offset = "0x5D49EC")]
				set
				{
				}
			}

			[Token(Token = "0x1700034F")]
			public TimePeriod free_trial_period
			{
				[Token(Token = "0x60028E8")]
				[Address(RVA = "0x2338DD0", Offset = "0x2338DD0", VA = "0x2338DD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D49FC", Offset = "0x5D49FC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028E9")]
				[Address(RVA = "0x2338DD8", Offset = "0x2338DD8", VA = "0x2338DD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A0C", Offset = "0x5D4A0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000350")]
			public TimePeriod charge_period
			{
				[Token(Token = "0x60028EA")]
				[Address(RVA = "0x2338DE0", Offset = "0x2338DE0", VA = "0x2338DE0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A1C", Offset = "0x5D4A1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028EB")]
				[Address(RVA = "0x2338DE8", Offset = "0x2338DE8", VA = "0x2338DE8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A2C", Offset = "0x5D4A2C")]
				set
				{
				}
			}

			[Token(Token = "0x17000351")]
			public int number_of_charge_period
			{
				[Token(Token = "0x60028EC")]
				[Address(RVA = "0x2338DF0", Offset = "0x2338DF0", VA = "0x2338DF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A3C", Offset = "0x5D4A3C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028ED")]
				[Address(RVA = "0x2338DF8", Offset = "0x2338DF8", VA = "0x2338DF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A4C", Offset = "0x5D4A4C")]
				set
				{
				}
			}

			[Token(Token = "0x17000352")]
			public string plan_id
			{
				[Token(Token = "0x60028EE")]
				[Address(RVA = "0x2338E00", Offset = "0x2338E00", VA = "0x2338E00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A5C", Offset = "0x5D4A5C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028EF")]
				[Address(RVA = "0x2338E08", Offset = "0x2338E08", VA = "0x2338E08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A6C", Offset = "0x5D4A6C")]
				set
				{
				}
			}

			[Token(Token = "0x17000353")]
			public string plan_name
			{
				[Token(Token = "0x60028F0")]
				[Address(RVA = "0x2338E10", Offset = "0x2338E10", VA = "0x2338E10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A7C", Offset = "0x5D4A7C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F1")]
				[Address(RVA = "0x2338E18", Offset = "0x2338E18", VA = "0x2338E18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A8C", Offset = "0x5D4A8C")]
				set
				{
				}
			}

			[Token(Token = "0x17000354")]
			public string status
			{
				[Token(Token = "0x60028F2")]
				[Address(RVA = "0x2338E20", Offset = "0x2338E20", VA = "0x2338E20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4A9C", Offset = "0x5D4A9C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F3")]
				[Address(RVA = "0x2338E28", Offset = "0x2338E28", VA = "0x2338E28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4AAC", Offset = "0x5D4AAC")]
				set
				{
				}
			}

			[Token(Token = "0x17000355")]
			public StatusDetail status_detail
			{
				[Token(Token = "0x60028F4")]
				[Address(RVA = "0x2338E30", Offset = "0x2338E30", VA = "0x2338E30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4ABC", Offset = "0x5D4ABC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028F5")]
				[Address(RVA = "0x2338E38", Offset = "0x2338E38", VA = "0x2338E38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4ACC", Offset = "0x5D4ACC")]
				set
				{
				}
			}

			[Token(Token = "0x60028F6")]
			[Address(RVA = "0x2338E40", Offset = "0x2338E40", VA = "0x2338E40")]
			public Subscription()
			{
			}
		}

		[Token(Token = "0x20005E0")]
		public class QuerySubscritionResponse
		{
			[Token(Token = "0x4002E2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFD8", Offset = "0x5CAFD8")]
			private int <statusCode>k__BackingField;

			[Token(Token = "0x4002E2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFE8", Offset = "0x5CAFE8")]
			private string <message>k__BackingField;

			[Token(Token = "0x4002E2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CAFF8", Offset = "0x5CAFF8")]
			private List<Subscription> <subscriptions>k__BackingField;

			[Token(Token = "0x17000356")]
			public int statusCode
			{
				[Token(Token = "0x60028F7")]
				[Address(RVA = "0x2338CB8", Offset = "0x2338CB8", VA = "0x2338CB8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4ADC", Offset = "0x5D4ADC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60028F8")]
				[Address(RVA = "0x2338CC0", Offset = "0x2338CC0", VA = "0x2338CC0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4AEC", Offset = "0x5D4AEC")]
				set
				{
				}
			}

			[Token(Token = "0x17000357")]
			public string message
			{
				[Token(Token = "0x60028F9")]
				[Address(RVA = "0x2338CC8", Offset = "0x2338CC8", VA = "0x2338CC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4AFC", Offset = "0x5D4AFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028FA")]
				[Address(RVA = "0x2338CD0", Offset = "0x2338CD0", VA = "0x2338CD0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4B0C", Offset = "0x5D4B0C")]
				set
				{
				}
			}

			[Token(Token = "0x17000358")]
			public List<Subscription> subscriptions
			{
				[Token(Token = "0x60028FB")]
				[Address(RVA = "0x2337FA8", Offset = "0x2337FA8", VA = "0x2337FA8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4B1C", Offset = "0x5D4B1C")]
				get
				{
					return null;
				}
				[Token(Token = "0x60028FC")]
				[Address(RVA = "0x2338CD8", Offset = "0x2338CD8", VA = "0x2338CD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D4B2C", Offset = "0x5D4B2C")]
				set
				{
				}
			}

			[Token(Token = "0x60028FD")]
			[Address(RVA = "0x2338CE0", Offset = "0x2338CE0", VA = "0x2338CE0")]
			public QuerySubscritionResponse()
			{
			}
		}

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IAPurchaseCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IAPurchaseCallback request01Il2cppCallback;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IAPurchaseCallback request02Il2cppCallback;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IAPurchaseCallback purchaseIl2cppCallback;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IAPurchaseCallback query01Il2cppCallback;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static IAPurchaseCallback query02Il2cppCallback;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IAPurchaseCallback getBalanceIl2cppCallback;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static IAPurchaseCallback requestSubscriptionIl2cppCallback;

		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static IAPurchaseCallback subscribeIl2cppCallback;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IAPurchaseCallback querySubscriptionIl2cppCallback;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static IAPurchaseCallback querySubscriptionListIl2cppCallback;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IAPurchaseCallback cancelSubscriptionIl2cppCallback;

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x23304A8", Offset = "0x23304A8", VA = "0x23304A8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF298", Offset = "0x5CF298")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x2330BC4", Offset = "0x2330BC4", VA = "0x2330BC4")]
		public static void IsReady(IAPurchaseListener listener, string pchAppKey)
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x2330534", Offset = "0x2330534", VA = "0x2330534")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF310", Offset = "0x5CF310")]
		private static void Request01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x2330DB0", Offset = "0x2330DB0", VA = "0x2330DB0")]
		public static void Request(IAPurchaseListener listener, string pchPrice)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x23305C0", Offset = "0x23305C0", VA = "0x23305C0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF388", Offset = "0x5CF388")]
		private static void Request02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x2330F28", Offset = "0x2330F28", VA = "0x2330F28")]
		public static void Request(IAPurchaseListener listener, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x233064C", Offset = "0x233064C", VA = "0x233064C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF400", Offset = "0x5CF400")]
		private static void PurchaseIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x2331018", Offset = "0x2331018", VA = "0x2331018")]
		public static void Purchase(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x23306D8", Offset = "0x23306D8", VA = "0x23306D8")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF478", Offset = "0x5CF478")]
		private static void Query01Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x2331190", Offset = "0x2331190", VA = "0x2331190")]
		public static void Query(IAPurchaseListener listener, string pchPurchaseId)
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x2330764", Offset = "0x2330764", VA = "0x2330764")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF4F0", Offset = "0x5CF4F0")]
		private static void Query02Il2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x2331308", Offset = "0x2331308", VA = "0x2331308")]
		public static void Query(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x23307F0", Offset = "0x23307F0", VA = "0x23307F0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF568", Offset = "0x5CF568")]
		private static void GetBalanceIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x2331478", Offset = "0x2331478", VA = "0x2331478")]
		public static void GetBalance(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x233087C", Offset = "0x233087C", VA = "0x233087C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF5E0", Offset = "0x5CF5E0")]
		private static void RequestSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x23315E8", Offset = "0x23315E8", VA = "0x23315E8")]
		public static void RequestSubscription(IAPurchaseListener listener, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x2330908", Offset = "0x2330908", VA = "0x2330908")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF658", Offset = "0x5CF658")]
		private static void RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x233179C", Offset = "0x233179C", VA = "0x233179C")]
		public static void RequestSubscriptionWithPlanID(IAPurchaseListener listener, string pchPlanId)
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x2330994", Offset = "0x2330994", VA = "0x2330994")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF6D0", Offset = "0x5CF6D0")]
		private static void SubscribeIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x2331914", Offset = "0x2331914", VA = "0x2331914")]
		public static void Subscribe(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x2330A20", Offset = "0x2330A20", VA = "0x2330A20")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF748", Offset = "0x5CF748")]
		private static void QuerySubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0x2331A8C", Offset = "0x2331A8C", VA = "0x2331A8C")]
		public static void QuerySubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0x2330AAC", Offset = "0x2330AAC", VA = "0x2330AAC")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF7C0", Offset = "0x5CF7C0")]
		private static void QuerySubscriptionListIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0x2331C04", Offset = "0x2331C04", VA = "0x2331C04")]
		public static void QuerySubscriptionList(IAPurchaseListener listener)
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0x2330B38", Offset = "0x2330B38", VA = "0x2330B38")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF838", Offset = "0x5CF838")]
		private static void CancelSubscriptionIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0x2331D74", Offset = "0x2331D74", VA = "0x2331D74")]
		public static void CancelSubscription(IAPurchaseListener listener, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0x2331EEC", Offset = "0x2331EEC", VA = "0x2331EEC")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	public class DLC
	{
		[Token(Token = "0x60015D7")]
		[Address(RVA = "0x232FE8C", Offset = "0x232FE8C", VA = "0x232FE8C")]
		public DLC()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public class Subscription
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback2 isReadyIl2cppCallback;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x2470248", Offset = "0x2470248", VA = "0x2470248")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF8B0", Offset = "0x5CF8B0")]
		private static void IsReadyIl2cppCallback(int errorCode, string message)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x24702D0", Offset = "0x24702D0", VA = "0x24702D0")]
		public static void IsReady(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0x24704AC", Offset = "0x24704AC", VA = "0x24704AC")]
		public static SubscriptionStatus GetUserStatus()
		{
			return null;
		}

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0x24706B8", Offset = "0x24706B8", VA = "0x24706B8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class Deeplink
	{
		[Token(Token = "0x20005E1")]
		public abstract class DeeplinkChecker
		{
			[Token(Token = "0x60028FE")]
			public abstract void OnSuccess();

			[Token(Token = "0x60028FF")]
			public abstract void OnFailure(int errorCode, string errorMessage);

			[Token(Token = "0x6002900")]
			[Address(RVA = "0x23304A0", Offset = "0x23304A0", VA = "0x23304A0")]
			protected DeeplinkChecker()
			{
			}
		}

		[Token(Token = "0x4001D5C")]
		private const int MaxIdLength = 256;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Viveport.Internal.StatusCallback isReadyIl2cppCallback;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Viveport.Internal.StatusCallback2 goToAppIl2cppCallback;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback;

		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback;

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0x232FE94", Offset = "0x232FE94", VA = "0x232FE94")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5CF928", Offset = "0x5CF928")]
		private static void IsReadyIl2cppCallback(int errorCode)
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0x232FF18", Offset = "0x232FF18", VA = "0x232FF18")]
		public static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x2330100", Offset = "0x2330100", VA = "0x2330100")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x23301F0", Offset = "0x23301F0", VA = "0x23301F0")]
		public static void GoToApp(DeeplinkChecker checker, string appId, string launchData, string branchName)
		{
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0x23302E0", Offset = "0x23302E0", VA = "0x23302E0")]
		public static void GoToStore(DeeplinkChecker checker, string appId = "")
		{
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0x23303A0", Offset = "0x23303A0", VA = "0x23303A0")]
		public static void GoToAppOrGoToStore(DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0x2330490", Offset = "0x2330490", VA = "0x2330490")]
		public static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0x2330498", Offset = "0x2330498", VA = "0x2330498")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	internal class Token
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0x24706D0", Offset = "0x24706D0", VA = "0x24706D0")]
		public Token()
		{
		}
	}
}
namespace Viveport.Internal
{
	[Token(Token = "0x20002C4")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C1A98", Offset = "0x5C1A98")]
	internal delegate void GetLicenseCallback(string message, string signature);
	[Token(Token = "0x20002C5")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C1AAC", Offset = "0x5C1AAC")]
	internal delegate void StatusCallback(int nResult);
	[Token(Token = "0x20002C6")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C1AC0", Offset = "0x5C1AC0")]
	internal delegate void StatusCallback2(int nResult, string message);
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C1AD4", Offset = "0x5C1AD4")]
	internal delegate void QueryRuntimeModeCallback(int nResult, int nMode);
	[Token(Token = "0x20002C8")]
	internal enum ELeaderboardDataRequest
	{
		[Token(Token = "0x4001D63")]
		k_ELeaderboardDataRequestGlobal,
		[Token(Token = "0x4001D64")]
		k_ELeaderboardDataRequestGlobalAroundUser,
		[Token(Token = "0x4001D65")]
		k_ELeaderboardDataRequestLocal,
		[Token(Token = "0x4001D66")]
		k_ELeaderboardDataRequestLocaleAroundUser
	}
	[Token(Token = "0x20002C9")]
	internal enum ELeaderboardDataTimeRange
	{
		[Token(Token = "0x4001D68")]
		k_ELeaderboardDataScropeAllTime,
		[Token(Token = "0x4001D69")]
		k_ELeaderboardDataScropeDaily,
		[Token(Token = "0x4001D6A")]
		k_ELeaderboardDataScropeWeekly,
		[Token(Token = "0x4001D6B")]
		k_ELeaderboardDataScropeMonthly
	}
	[Token(Token = "0x20002CA")]
	internal enum ELeaderboardSortMethod
	{
		[Token(Token = "0x4001D6D")]
		k_ELeaderboardSortMethodNone,
		[Token(Token = "0x4001D6E")]
		k_ELeaderboardSortMethodAscending,
		[Token(Token = "0x4001D6F")]
		k_ELeaderboardSortMethodDescending
	}
	[Token(Token = "0x20002CB")]
	internal enum ELeaderboardDisplayType
	{
		[Token(Token = "0x4001D71")]
		k_ELeaderboardDisplayTypeNone,
		[Token(Token = "0x4001D72")]
		k_ELeaderboardDisplayTypeNumeric,
		[Token(Token = "0x4001D73")]
		k_ELeaderboardDisplayTypeTimeSeconds,
		[Token(Token = "0x4001D74")]
		k_ELeaderboardDisplayTypeTimeMilliSeconds
	}
	[Token(Token = "0x20002CC")]
	internal enum ELeaderboardUploadScoreMethod
	{
		[Token(Token = "0x4001D76")]
		k_ELeaderboardUploadScoreMethodNone,
		[Token(Token = "0x4001D77")]
		k_ELeaderboardUploadScoreMethodKeepBest,
		[Token(Token = "0x4001D78")]
		k_ELeaderboardUploadScoreMethodForceUpdate
	}
	[Token(Token = "0x20002CD")]
	internal enum ESubscriptionTransactionType
	{
		[Token(Token = "0x4001D7A")]
		UNKNOWN,
		[Token(Token = "0x4001D7B")]
		PAID,
		[Token(Token = "0x4001D7C")]
		REDEEM,
		[Token(Token = "0x4001D7D")]
		FREEE_TRIAL
	}
	[Token(Token = "0x20002CE")]
	internal enum ELocale
	{
		[Token(Token = "0x4001D7F")]
		k_ELocaleUS,
		[Token(Token = "0x4001D80")]
		k_ELocaleDE,
		[Token(Token = "0x4001D81")]
		k_ELocaleJP,
		[Token(Token = "0x4001D82")]
		k_ELocaleKR,
		[Token(Token = "0x4001D83")]
		k_ELocaleRU,
		[Token(Token = "0x4001D84")]
		k_ELocaleCN,
		[Token(Token = "0x4001D85")]
		k_ELocaleTW,
		[Token(Token = "0x4001D86")]
		k_ELocaleFR
	}
	[Token(Token = "0x20002CF")]
	internal enum EAchievementDisplayAttribute
	{
		[Token(Token = "0x4001D88")]
		k_EAchievementDisplayAttributeName,
		[Token(Token = "0x4001D89")]
		k_EAchievementDisplayAttributeDesc,
		[Token(Token = "0x4001D8A")]
		k_EAchievementDisplayAttributeHidden
	}
	[Token(Token = "0x20002D0")]
	internal struct LeaderboardEntry_t
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal int m_nGlobalRank;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal int m_nScore;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal string m_pUserName;
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C1AE8", Offset = "0x5C1AE8")]
	internal delegate void IAPurchaseCallback(int code, string message);
	[Token(Token = "0x20002D2")]
	internal struct IAPCurrency_t
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal string m_pName;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		internal string m_pSymbol;
	}
	[Token(Token = "0x20002D3")]
	internal class Api
	{
		[Token(Token = "0x20005E2")]
		internal class AndroidLicenseChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Viveport.Api.LicenseChecker checker;

			[Token(Token = "0x6002901")]
			[Address(RVA = "0x2467640", Offset = "0x2467640", VA = "0x2467640")]
			internal AndroidLicenseChecker(Viveport.Api.LicenseChecker checker)
			{
			}

			[Token(Token = "0x6002902")]
			[Address(RVA = "0x24676DC", Offset = "0x24676DC", VA = "0x24676DC")]
			internal void onSuccess(long issueTime, long expirationTime, int latestVersion, bool updateRequired)
			{
			}

			[Token(Token = "0x6002903")]
			[Address(RVA = "0x246799C", Offset = "0x246799C", VA = "0x246799C")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0x232EE28", Offset = "0x232EE28", VA = "0x232EE28")]
		internal static int Init(StatusCallback callback, string pchAppKey)
		{
			return default(int);
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0x232F1D4", Offset = "0x232F1D4", VA = "0x232F1D4")]
		internal static int Shutdown(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0x232F3CC", Offset = "0x232F3CC", VA = "0x232F3CC")]
		internal static string Version()
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0x232EA14", Offset = "0x232EA14", VA = "0x232EA14")]
		internal static void GetLicense(Viveport.Api.LicenseChecker checker, string appId, string appKey)
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0x233995C", Offset = "0x233995C", VA = "0x233995C")]
		public Api()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	internal class User
	{
		[Token(Token = "0x60015FE")]
		[Address(RVA = "0x246C3E0", Offset = "0x246C3E0", VA = "0x246C3E0")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0x246C570", Offset = "0x246C570", VA = "0x246C570")]
		internal static string GetUserId()
		{
			return null;
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0x246C688", Offset = "0x246C688", VA = "0x246C688")]
		internal static string GetUserName()
		{
			return null;
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0x246C7A0", Offset = "0x246C7A0", VA = "0x246C7A0")]
		internal static string GetUserAvatarUrl()
		{
			return null;
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0x246C8B8", Offset = "0x246C8B8", VA = "0x246C8B8")]
		public User()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	internal class UserStats
	{
		[Token(Token = "0x6001603")]
		[Address(RVA = "0x246C8C0", Offset = "0x246C8C0", VA = "0x246C8C0")]
		internal static int IsReady(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0x246CA50", Offset = "0x246CA50", VA = "0x246CA50")]
		internal static int DownloadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0x246CBE0", Offset = "0x246CBE0", VA = "0x246CBE0")]
		internal static int UploadStats(StatusCallback callback)
		{
			return default(int);
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0x246CD70", Offset = "0x246CD70", VA = "0x246CD70")]
		internal static int SetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0x246CEFC", Offset = "0x246CEFC", VA = "0x246CEFC")]
		internal static int SetStat(string pchName, float fData)
		{
			return default(int);
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0x246D094", Offset = "0x246D094", VA = "0x246D094")]
		internal static int GetStat(string pchName, int nData)
		{
			return default(int);
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x246D220", Offset = "0x246D220", VA = "0x246D220")]
		internal static float GetStat(string pchName, float fData)
		{
			return default(float);
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x246D3B8", Offset = "0x246D3B8", VA = "0x246D3B8")]
		internal static bool GetAchievement(string pchName)
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x246D4C8", Offset = "0x246D4C8", VA = "0x246D4C8")]
		internal static int GetAchievementUnlockTime(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x246D5D8", Offset = "0x246D5D8", VA = "0x246D5D8")]
		internal static int SetAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x246D6E8", Offset = "0x246D6E8", VA = "0x246D6E8")]
		internal static int ClearAchievement(string pchName)
		{
			return default(int);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x246D7F8", Offset = "0x246D7F8", VA = "0x246D7F8")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr)
		{
			return null;
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x246D984", Offset = "0x246D984", VA = "0x246D984")]
		internal static string GetAchievementDisplayAttribute(string pchName, EAchievementDisplayAttribute attr, ELocale locale)
		{
			return null;
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x246DB84", Offset = "0x246DB84", VA = "0x246DB84")]
		internal static string GetAchievementIcon(string pchName)
		{
			return null;
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x246DC94", Offset = "0x246DC94", VA = "0x246DC94")]
		internal static int DownloadLeaderboardScores(StatusCallback callback, string pchLeaderboardName, ELeaderboardDataRequest nDataRequest, ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd)
		{
			return default(int);
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x246E050", Offset = "0x246E050", VA = "0x246E050")]
		internal static int UploadLeaderboardScore(StatusCallback callback, string pchLeaderboardName, int nScores)
		{
			return default(int);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x246E2B0", Offset = "0x246E2B0", VA = "0x246E2B0")]
		internal static Leaderboard GetLeaderboardScore(int nIndex)
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x246E614", Offset = "0x246E614", VA = "0x246E614")]
		internal static int GetLeaderboardScoreCount()
		{
			return default(int);
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x246E6BC", Offset = "0x246E6BC", VA = "0x246E6BC")]
		internal static ELeaderboardSortMethod GetLeaderboardSortMethod()
		{
			return default(ELeaderboardSortMethod);
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x246E764", Offset = "0x246E764", VA = "0x246E764")]
		internal static ELeaderboardDisplayType GetLeaderboardDisplayType()
		{
			return default(ELeaderboardDisplayType);
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x246E80C", Offset = "0x246E80C", VA = "0x246E80C")]
		public UserStats()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	internal class Deeplink
	{
		[Token(Token = "0x20005E3")]
		internal class AndroidDeeplinkChecker : AndroidJavaProxy
		{
			[Token(Token = "0x4002E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Viveport.Deeplink.DeeplinkChecker checker;

			[Token(Token = "0x6002904")]
			[Address(RVA = "0x2467F78", Offset = "0x2467F78", VA = "0x2467F78")]
			internal AndroidDeeplinkChecker(Viveport.Deeplink.DeeplinkChecker checker)
			{
			}

			[Token(Token = "0x6002905")]
			[Address(RVA = "0x2468530", Offset = "0x2468530", VA = "0x2468530")]
			internal void onSuccess()
			{
			}

			[Token(Token = "0x6002906")]
			[Address(RVA = "0x24685DC", Offset = "0x24685DC", VA = "0x24685DC")]
			internal void onFailure(int errorCode, string errorMessage)
			{
			}
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x2467C28", Offset = "0x2467C28", VA = "0x2467C28")]
		internal static void IsReady(StatusCallback callback)
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x2467D50", Offset = "0x2467D50", VA = "0x2467D50")]
		internal static void GoToApp(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x2468014", Offset = "0x2468014", VA = "0x2468014")]
		internal static void GoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId)
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0x24681E8", Offset = "0x24681E8", VA = "0x24681E8")]
		internal static void GoToAppOrGoToStore(Viveport.Deeplink.DeeplinkChecker checker, string appId, string launchData)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0x2468410", Offset = "0x2468410", VA = "0x2468410")]
		internal static string GetAppLaunchData()
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0x2468528", Offset = "0x2468528", VA = "0x2468528")]
		public Deeplink()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	internal class IAPurchase
	{
		[Token(Token = "0x600161E")]
		[Address(RVA = "0x2469148", Offset = "0x2469148", VA = "0x2469148")]
		internal static void IsReady(IAPurchaseCallback callback, string pchAppKey)
		{
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0x2469320", Offset = "0x2469320", VA = "0x2469320")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0x24694F8", Offset = "0x24694F8", VA = "0x24694F8")]
		internal static void Request(IAPurchaseCallback callback, string pchPrice, string pchUserData)
		{
		}

		[Token(Token = "0x6001621")]
		[Address(RVA = "0x2469724", Offset = "0x2469724", VA = "0x2469724")]
		internal static void Purchase(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x24698FC", Offset = "0x24698FC", VA = "0x24698FC")]
		internal static void Query(IAPurchaseCallback callback, string pchPurchaseId)
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x2469AD4", Offset = "0x2469AD4", VA = "0x2469AD4")]
		internal static void Query(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x2469C58", Offset = "0x2469C58", VA = "0x2469C58")]
		internal static void GetBalance(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x2469DDC", Offset = "0x2469DDC", VA = "0x2469DDC")]
		internal static void RequestSubscription(IAPurchaseCallback callback, string pchPrice, string pchFreeTrialType, int nFreeTrialValue, string pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, string pchPlanId)
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x246A214", Offset = "0x246A214", VA = "0x246A214")]
		internal static void RequestSubscriptionWithPlanID(IAPurchaseCallback callback, string pchPlanId)
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x246A3EC", Offset = "0x246A3EC", VA = "0x246A3EC")]
		internal static void Subscribe(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x246A5C4", Offset = "0x246A5C4", VA = "0x246A5C4")]
		internal static void QuerySubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x246A79C", Offset = "0x246A79C", VA = "0x246A79C")]
		internal static void QuerySubscriptionList(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x246A920", Offset = "0x246A920", VA = "0x246A920")]
		internal static void CancelSubscription(IAPurchaseCallback callback, string pchSubscriptionId)
		{
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x246AAF8", Offset = "0x246AAF8", VA = "0x246AAF8")]
		public IAPurchase()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	internal class Subscription
	{
		[Token(Token = "0x600162C")]
		[Address(RVA = "0x246BFF4", Offset = "0x246BFF4", VA = "0x246BFF4")]
		internal static int IsReady(StatusCallback2 callback)
		{
			return default(int);
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x246C17C", Offset = "0x246C17C", VA = "0x246C17C")]
		internal static bool IsWindowsSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x246C224", Offset = "0x246C224", VA = "0x246C224")]
		internal static bool IsAndroidSubscriber()
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x246C2CC", Offset = "0x246C2CC", VA = "0x246C2CC")]
		internal static ESubscriptionTransactionType GetTransactionType()
		{
			return default(ESubscriptionTransactionType);
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x246C3D8", Offset = "0x246C3D8", VA = "0x246C3D8")]
		public Subscription()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	internal class Android
	{
		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AndroidJavaObject _api;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static AndroidJavaObject _iAPurchase;

		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AndroidJavaClass _unityPlayer;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static AndroidJavaObject _user;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static AndroidJavaObject _userStats;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static AndroidJavaObject _subscription;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static AndroidJavaObject _deeplink;

		[Token(Token = "0x17000122")]
		internal static AndroidJavaClass UnityPlayer
		{
			[Token(Token = "0x6001637")]
			[Address(RVA = "0x2339384", Offset = "0x2339384", VA = "0x2339384")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000123")]
		internal static AndroidJavaObject CurrentActivity
		{
			[Token(Token = "0x6001638")]
			[Address(RVA = "0x2339440", Offset = "0x2339440", VA = "0x2339440")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000124")]
		internal static AndroidJavaObject CurrentContext
		{
			[Token(Token = "0x6001639")]
			[Address(RVA = "0x23394C8", Offset = "0x23394C8", VA = "0x23394C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x2338E70", Offset = "0x2338E70", VA = "0x2338E70")]
		internal static AndroidJavaObject GetJavaAPI()
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x2338F4C", Offset = "0x2338F4C", VA = "0x2338F4C")]
		internal static AndroidJavaObject GetJavaUser()
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x2339024", Offset = "0x2339024", VA = "0x2339024")]
		internal static AndroidJavaObject GetJavaUserStats()
		{
			return null;
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x23390FC", Offset = "0x23390FC", VA = "0x23390FC")]
		internal static AndroidJavaObject GetJavaIAPurchase()
		{
			return null;
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x23391D4", Offset = "0x23391D4", VA = "0x23391D4")]
		internal static AndroidJavaObject GetJavaSubscription()
		{
			return null;
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x23392AC", Offset = "0x23392AC", VA = "0x23392AC")]
		internal static AndroidJavaObject GetDeeplink()
		{
			return null;
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x23394CC", Offset = "0x23394CC", VA = "0x23394CC")]
		public Android()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	internal class AndroidPluginCallback : AndroidJavaProxy
	{
		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IAPurchaseCallback callback;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private StatusCallback statusCallback;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private StatusCallback2 statusCallback2;

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x23394D4", Offset = "0x23394D4", VA = "0x23394D4")]
		internal AndroidPluginCallback(IAPurchaseCallback callback)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x2339570", Offset = "0x2339570", VA = "0x2339570")]
		internal AndroidPluginCallback(StatusCallback callback)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x233960C", Offset = "0x233960C", VA = "0x233960C")]
		internal AndroidPluginCallback(StatusCallback2 callback)
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x23396A8", Offset = "0x23396A8", VA = "0x23396A8")]
		internal void onResult(int statusCode, string result)
		{
		}
	}
}
namespace Viveport.Arcade
{
	[Token(Token = "0x20002DB")]
	internal class Session
	{
		[Token(Token = "0x600163F")]
		[Address(RVA = "0x232F638", Offset = "0x232F638", VA = "0x232F638")]
		public Session()
		{
		}
	}
}
namespace Viveport.Core
{
	[Token(Token = "0x20002DC")]
	public class Logger
	{
		[Token(Token = "0x4001D9A")]
		private const string LoggerTypeNameUnity = "UnityEngine.Debug";

		[Token(Token = "0x4001D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool _hasDetected;

		[Token(Token = "0x4001D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool _usingUnityLog;

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Type _unityLogType;

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x232F648", Offset = "0x232F648", VA = "0x232F648")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x232FB9C", Offset = "0x232FB9C", VA = "0x232FB9C")]
		private static void ConsoleLog(string message)
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x232F768", Offset = "0x232F768", VA = "0x232F768")]
		private static void UnityLog(string message)
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x232FC68", Offset = "0x232FC68", VA = "0x232FC68")]
		private static Type GetType(string typeName)
		{
			return null;
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x232FE1C", Offset = "0x232FE1C", VA = "0x232FE1C")]
		public Logger()
		{
		}
	}
}
namespace LitJson
{
	[Token(Token = "0x20002DD")]
	public enum JsonType
	{
		[Token(Token = "0x4001D9F")]
		None,
		[Token(Token = "0x4001DA0")]
		Object,
		[Token(Token = "0x4001DA1")]
		Array,
		[Token(Token = "0x4001DA2")]
		String,
		[Token(Token = "0x4001DA3")]
		Int,
		[Token(Token = "0x4001DA4")]
		Long,
		[Token(Token = "0x4001DA5")]
		Double,
		[Token(Token = "0x4001DA6")]
		Boolean
	}
	[Token(Token = "0x20002DE")]
	public interface IJsonWrapper : IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary
	{
		[Token(Token = "0x17000125")]
		bool IsArray
		{
			[Token(Token = "0x6001646")]
			get;
		}

		[Token(Token = "0x17000126")]
		bool IsBoolean
		{
			[Token(Token = "0x6001647")]
			get;
		}

		[Token(Token = "0x17000127")]
		bool IsDouble
		{
			[Token(Token = "0x6001648")]
			get;
		}

		[Token(Token = "0x17000128")]
		bool IsInt
		{
			[Token(Token = "0x6001649")]
			get;
		}

		[Token(Token = "0x17000129")]
		bool IsLong
		{
			[Token(Token = "0x600164A")]
			get;
		}

		[Token(Token = "0x1700012A")]
		bool IsObject
		{
			[Token(Token = "0x600164B")]
			get;
		}

		[Token(Token = "0x1700012B")]
		bool IsString
		{
			[Token(Token = "0x600164C")]
			get;
		}

		[Token(Token = "0x600164D")]
		bool GetBoolean();

		[Token(Token = "0x600164E")]
		double GetDouble();

		[Token(Token = "0x600164F")]
		int GetInt();

		[Token(Token = "0x6001650")]
		JsonType GetJsonType();

		[Token(Token = "0x6001651")]
		long GetLong();

		[Token(Token = "0x6001652")]
		string GetString();

		[Token(Token = "0x6001653")]
		void SetBoolean(bool val);

		[Token(Token = "0x6001654")]
		void SetDouble(double val);

		[Token(Token = "0x6001655")]
		void SetInt(int val);

		[Token(Token = "0x6001656")]
		void SetJsonType(JsonType type);

		[Token(Token = "0x6001657")]
		void SetLong(long val);

		[Token(Token = "0x6001658")]
		void SetString(string val);

		[Token(Token = "0x6001659")]
		string ToJson();

		[Token(Token = "0x600165A")]
		void ToJson(JsonWriter writer);
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C1AFC", Offset = "0x5C1AFC")]
	public class JsonData : IJsonWrapper, IList, ICollection, IEnumerable, IOrderedDictionary, IDictionary, IEquatable<JsonData>
	{
		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IList<JsonData> inst_array;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inst_boolean;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double inst_double;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int inst_int;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private long inst_long;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDictionary<string, JsonData> inst_object;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private string inst_string;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string json;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private JsonType type;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IList<KeyValuePair<string, JsonData>> object_list;

		[Token(Token = "0x1700012C")]
		public int Count
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x2442A04", Offset = "0x2442A04", VA = "0x2442A04")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700012D")]
		public bool IsArray
		{
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x2442C48", Offset = "0x2442C48", VA = "0x2442C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012E")]
		public bool IsBoolean
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x2442C5C", Offset = "0x2442C5C", VA = "0x2442C5C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		public bool IsDouble
		{
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x2442C70", Offset = "0x2442C70", VA = "0x2442C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000130")]
		public bool IsInt
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x2442C84", Offset = "0x2442C84", VA = "0x2442C84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000131")]
		public bool IsLong
		{
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x2442C98", Offset = "0x2442C98", VA = "0x2442C98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000132")]
		public bool IsObject
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x2442CAC", Offset = "0x2442CAC", VA = "0x2442CAC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000133")]
		public bool IsString
		{
			[Token(Token = "0x6001662")]
			[Address(RVA = "0x2442CBC", Offset = "0x2442CBC", VA = "0x2442CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000134")]
		private int System.Collections.ICollection.Count
		{
			[Token(Token = "0x6001663")]
			[Address(RVA = "0x2442CD0", Offset = "0x2442CD0", VA = "0x2442CD0", Slot = "37")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000135")]
		private bool System.Collections.ICollection.IsSynchronized
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0x2442CD4", Offset = "0x2442CD4", VA = "0x2442CD4", Slot = "39")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000136")]
		private object System.Collections.ICollection.SyncRoot
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0x2442DB4", Offset = "0x2442DB4", VA = "0x2442DB4", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000137")]
		private bool System.Collections.IDictionary.IsFixedSize
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0x2442E94", Offset = "0x2442E94", VA = "0x2442E94", Slot = "54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000138")]
		private bool System.Collections.IDictionary.IsReadOnly
		{
			[Token(Token = "0x6001667")]
			[Address(RVA = "0x2443140", Offset = "0x2443140", VA = "0x2443140", Slot = "53")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		private ICollection System.Collections.IDictionary.Keys
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0x2443220", Offset = "0x2443220", VA = "0x2443220", Slot = "48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013A")]
		private ICollection System.Collections.IDictionary.Values
		{
			[Token(Token = "0x6001669")]
			[Address(RVA = "0x24436BC", Offset = "0x24436BC", VA = "0x24436BC", Slot = "49")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013B")]
		private bool LitJson.IJsonWrapper.IsArray
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0x2443B58", Offset = "0x2443B58", VA = "0x2443B58", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013C")]
		private bool LitJson.IJsonWrapper.IsBoolean
		{
			[Token(Token = "0x600166B")]
			[Address(RVA = "0x2443B6C", Offset = "0x2443B6C", VA = "0x2443B6C", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		private bool LitJson.IJsonWrapper.IsDouble
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0x2443B80", Offset = "0x2443B80", VA = "0x2443B80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		private bool LitJson.IJsonWrapper.IsInt
		{
			[Token(Token = "0x600166D")]
			[Address(RVA = "0x2443B94", Offset = "0x2443B94", VA = "0x2443B94", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013F")]
		private bool LitJson.IJsonWrapper.IsLong
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0x2443BA8", Offset = "0x2443BA8", VA = "0x2443BA8", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000140")]
		private bool LitJson.IJsonWrapper.IsObject
		{
			[Token(Token = "0x600166F")]
			[Address(RVA = "0x2443BBC", Offset = "0x2443BBC", VA = "0x2443BBC", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000141")]
		private bool LitJson.IJsonWrapper.IsString
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0x2443BCC", Offset = "0x2443BCC", VA = "0x2443BCC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		private bool System.Collections.IList.IsFixedSize
		{
			[Token(Token = "0x6001671")]
			[Address(RVA = "0x2443BE0", Offset = "0x2443BE0", VA = "0x2443BE0", Slot = "31")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000143")]
		private bool System.Collections.IList.IsReadOnly
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0x2443E58", Offset = "0x2443E58", VA = "0x2443E58", Slot = "30")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000144")]
		private object System.Collections.IDictionary.Item
		{
			[Token(Token = "0x6001673")]
			[Address(RVA = "0x2443F38", Offset = "0x2443F38", VA = "0x2443F38", Slot = "46")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001674")]
			[Address(RVA = "0x2444020", Offset = "0x2444020", VA = "0x2444020", Slot = "47")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		private object System.Collections.Specialized.IOrderedDictionary.Item
		{
			[Token(Token = "0x6001675")]
			[Address(RVA = "0x24446D8", Offset = "0x24446D8", VA = "0x24446D8", Slot = "41")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001676")]
			[Address(RVA = "0x24447F4", Offset = "0x24447F4", VA = "0x24447F4", Slot = "42")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		private object System.Collections.IList.Item
		{
			[Token(Token = "0x6001677")]
			[Address(RVA = "0x2444AA0", Offset = "0x2444AA0", VA = "0x2444AA0", Slot = "25")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001678")]
			[Address(RVA = "0x2444B88", Offset = "0x2444B88", VA = "0x2444B88", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public JsonData Item
		{
			[Token(Token = "0x6001679")]
			[Address(RVA = "0x2444F08", Offset = "0x2444F08", VA = "0x2444F08")]
			get
			{
				return null;
			}
			[Token(Token = "0x600167A")]
			[Address(RVA = "0x2444230", Offset = "0x2444230", VA = "0x2444230")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public JsonData Item
		{
			[Token(Token = "0x600167B")]
			[Address(RVA = "0x2444FF0", Offset = "0x2444FF0", VA = "0x2444FF0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600167C")]
			[Address(RVA = "0x2444BBC", Offset = "0x2444BBC", VA = "0x2444BBC")]
			set
			{
			}
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0x24451AC", Offset = "0x24451AC", VA = "0x24451AC")]
		public JsonData()
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0x24451B4", Offset = "0x24451B4", VA = "0x24451B4")]
		public JsonData(bool boolean)
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0x24451DC", Offset = "0x24451DC", VA = "0x24451DC")]
		public JsonData(double number)
		{
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0x244520C", Offset = "0x244520C", VA = "0x244520C")]
		public JsonData(int number)
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0x2445234", Offset = "0x2445234", VA = "0x2445234")]
		public JsonData(long number)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0x2445264", Offset = "0x2445264", VA = "0x2445264")]
		public JsonData(object obj)
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x2445488", Offset = "0x2445488", VA = "0x2445488")]
		public JsonData(string str)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x24454B0", Offset = "0x24454B0", VA = "0x24454B0")]
		public static implicit operator JsonData(bool data)
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x244552C", Offset = "0x244552C", VA = "0x244552C")]
		public static implicit operator JsonData(double data)
		{
			return null;
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x24455B0", Offset = "0x24455B0", VA = "0x24455B0")]
		public static implicit operator JsonData(int data)
		{
			return null;
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x244562C", Offset = "0x244562C", VA = "0x244562C")]
		public static implicit operator JsonData(long data)
		{
			return null;
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x24456B0", Offset = "0x24456B0", VA = "0x24456B0")]
		public static implicit operator JsonData(string data)
		{
			return null;
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x244572C", Offset = "0x244572C", VA = "0x244572C")]
		public static explicit operator bool(JsonData data)
		{
			return default(bool);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x24457EC", Offset = "0x24457EC", VA = "0x24457EC")]
		public static explicit operator double(JsonData data)
		{
			return default(double);
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x24458B0", Offset = "0x24458B0", VA = "0x24458B0")]
		public static explicit operator int(JsonData data)
		{
			return default(int);
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x2445970", Offset = "0x2445970", VA = "0x2445970")]
		public static explicit operator long(JsonData data)
		{
			return default(long);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x2445A30", Offset = "0x2445A30", VA = "0x2445A30")]
		public static explicit operator string(JsonData data)
		{
			return null;
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x2445AF0", Offset = "0x2445AF0", VA = "0x2445AF0", Slot = "36")]
		private void System.Collections.ICollection.CopyTo(Array array, int index)
		{
		}

		[Token(Token = "0x600168F")]
		[Address(RVA = "0x2445BE0", Offset = "0x2445BE0", VA = "0x2445BE0", Slot = "51")]
		private void System.Collections.IDictionary.Add(object key, object value)
		{
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0x2445E2C", Offset = "0x2445E2C", VA = "0x2445E2C", Slot = "52")]
		private void System.Collections.IDictionary.Clear()
		{
		}

		[Token(Token = "0x6001691")]
		[Address(RVA = "0x2445FA0", Offset = "0x2445FA0", VA = "0x2445FA0", Slot = "50")]
		private bool System.Collections.IDictionary.Contains(object key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x2446088", Offset = "0x2446088", VA = "0x2446088", Slot = "55")]
		private IDictionaryEnumerator System.Collections.IDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0x244614C", Offset = "0x244614C", VA = "0x244614C", Slot = "56")]
		private void System.Collections.IDictionary.Remove(object key)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0x24464F4", Offset = "0x24464F4", VA = "0x24464F4", Slot = "40")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x24465D4", Offset = "0x24465D4", VA = "0x24465D4", Slot = "11")]
		private bool LitJson.IJsonWrapper.GetBoolean()
		{
			return default(bool);
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x2446684", Offset = "0x2446684", VA = "0x2446684", Slot = "12")]
		private double LitJson.IJsonWrapper.GetDouble()
		{
			return default(double);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x2446738", Offset = "0x2446738", VA = "0x2446738", Slot = "13")]
		private int LitJson.IJsonWrapper.GetInt()
		{
			return default(int);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x24467E8", Offset = "0x24467E8", VA = "0x24467E8", Slot = "15")]
		private long LitJson.IJsonWrapper.GetLong()
		{
			return default(long);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x2446898", Offset = "0x2446898", VA = "0x2446898", Slot = "16")]
		private string LitJson.IJsonWrapper.GetString()
		{
			return null;
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x2446948", Offset = "0x2446948", VA = "0x2446948", Slot = "17")]
		private void LitJson.IJsonWrapper.SetBoolean(bool val)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x2446960", Offset = "0x2446960", VA = "0x2446960", Slot = "18")]
		private void LitJson.IJsonWrapper.SetDouble(double val)
		{
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x2446980", Offset = "0x2446980", VA = "0x2446980", Slot = "19")]
		private void LitJson.IJsonWrapper.SetInt(int val)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x2446998", Offset = "0x2446998", VA = "0x2446998", Slot = "21")]
		private void LitJson.IJsonWrapper.SetLong(long val)
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x24469B8", Offset = "0x24469B8", VA = "0x24469B8", Slot = "22")]
		private void LitJson.IJsonWrapper.SetString(string val)
		{
		}

		[Token(Token = "0x600169F")]
		[Address(RVA = "0x24469D0", Offset = "0x24469D0", VA = "0x24469D0", Slot = "23")]
		private string LitJson.IJsonWrapper.ToJson()
		{
			return null;
		}

		[Token(Token = "0x60016A0")]
		[Address(RVA = "0x2446AB8", Offset = "0x2446AB8", VA = "0x2446AB8", Slot = "24")]
		private void LitJson.IJsonWrapper.ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0x2446B28", Offset = "0x2446B28", VA = "0x2446B28", Slot = "27")]
		private int System.Collections.IList.Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60016A2")]
		[Address(RVA = "0x2446C28", Offset = "0x2446C28", VA = "0x2446C28", Slot = "29")]
		private void System.Collections.IList.Clear()
		{
		}

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0x2446D10", Offset = "0x2446D10", VA = "0x2446D10", Slot = "28")]
		private bool System.Collections.IList.Contains(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0x2446DF8", Offset = "0x2446DF8", VA = "0x2446DF8", Slot = "32")]
		private int System.Collections.IList.IndexOf(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0x2446EE0", Offset = "0x2446EE0", VA = "0x2446EE0", Slot = "33")]
		private void System.Collections.IList.Insert(int index, object value)
		{
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0x2446FE0", Offset = "0x2446FE0", VA = "0x2446FE0", Slot = "34")]
		private void System.Collections.IList.Remove(object value)
		{
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0x24470D0", Offset = "0x24470D0", VA = "0x24470D0", Slot = "35")]
		private void System.Collections.IList.RemoveAt(int index)
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0x24471C0", Offset = "0x24471C0", VA = "0x24471C0", Slot = "43")]
		private IDictionaryEnumerator System.Collections.Specialized.IOrderedDictionary.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0x24472EC", Offset = "0x24472EC", VA = "0x24472EC", Slot = "44")]
		private void System.Collections.Specialized.IOrderedDictionary.Insert(int idx, object key, object value)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0x24474B0", Offset = "0x24474B0", VA = "0x24474B0", Slot = "45")]
		private void System.Collections.Specialized.IOrderedDictionary.RemoveAt(int idx)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0x2442AE4", Offset = "0x2442AE4", VA = "0x2442AE4")]
		private ICollection EnsureCollection()
		{
			return null;
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0x2442F74", Offset = "0x2442F74", VA = "0x2442F74")]
		private IDictionary EnsureDictionary()
		{
			return null;
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x2443CC0", Offset = "0x2443CC0", VA = "0x2443CC0")]
		private IList EnsureList()
		{
			return null;
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0x2444180", Offset = "0x2444180", VA = "0x2444180")]
		private JsonData ToJsonData(object obj)
		{
			return null;
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0x24476F0", Offset = "0x24476F0", VA = "0x24476F0")]
		private static void WriteJson(IJsonWrapper obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0x2446B2C", Offset = "0x2446B2C", VA = "0x2446B2C")]
		public int Add(object value)
		{
			return default(int);
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x2449224", Offset = "0x2449224", VA = "0x2449224")]
		public void Clear()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0x2449364", Offset = "0x2449364", VA = "0x2449364", Slot = "57")]
		public bool Equals(JsonData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0x24494B4", Offset = "0x24494B4", VA = "0x24494B4", Slot = "14")]
		public JsonType GetJsonType()
		{
			return default(JsonType);
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0x24494BC", Offset = "0x24494BC", VA = "0x24494BC", Slot = "20")]
		public void SetJsonType(JsonType type)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x24469D4", Offset = "0x24469D4", VA = "0x24469D4")]
		public string ToJson()
		{
			return null;
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x2446ABC", Offset = "0x2446ABC", VA = "0x2446ABC")]
		public void ToJson(JsonWriter writer)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x2449710", Offset = "0x2449710", VA = "0x2449710", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E0")]
	internal class OrderedDictionaryEnumerator : IDictionaryEnumerator, IEnumerator
	{
		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IEnumerator<KeyValuePair<string, JsonData>> list_enumerator;

		[Token(Token = "0x17000149")]
		public object Current
		{
			[Token(Token = "0x60016B8")]
			[Address(RVA = "0x245BA80", Offset = "0x245BA80", VA = "0x245BA80", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014A")]
		public DictionaryEntry Entry
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x245BB04", Offset = "0x245BB04", VA = "0x245BB04", Slot = "6")]
			get
			{
				return default(DictionaryEntry);
			}
		}

		[Token(Token = "0x1700014B")]
		public object Key
		{
			[Token(Token = "0x60016BA")]
			[Address(RVA = "0x245BC50", Offset = "0x245BC50", VA = "0x245BC50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700014C")]
		public object Value
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x245BD5C", Offset = "0x245BD5C", VA = "0x245BD5C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x24472CC", Offset = "0x24472CC", VA = "0x24472CC")]
		public OrderedDictionaryEnumerator(IEnumerator<KeyValuePair<string, JsonData>> enumerator)
		{
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0x245BE68", Offset = "0x245BE68", VA = "0x245BE68", Slot = "7")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0x245BF40", Offset = "0x245BF40", VA = "0x245BF40", Slot = "9")]
		public void Reset()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public class JsonException : ApplicationException
	{
		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x2449810", Offset = "0x2449810", VA = "0x2449810")]
		public JsonException()
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x2449818", Offset = "0x2449818", VA = "0x2449818")]
		internal JsonException(ParserToken token)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x24498B8", Offset = "0x24498B8", VA = "0x24498B8")]
		internal JsonException(ParserToken token, Exception inner_exception)
		{
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0x2449960", Offset = "0x2449960", VA = "0x2449960")]
		internal JsonException(int c)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0x2449A00", Offset = "0x2449A00", VA = "0x2449A00")]
		internal JsonException(int c, Exception inner_exception)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0x2449AA8", Offset = "0x2449AA8", VA = "0x2449AA8")]
		public JsonException(string message)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x2449AB0", Offset = "0x2449AB0", VA = "0x2449AB0")]
		public JsonException(string message, Exception inner_exception)
		{
		}
	}
	[Token(Token = "0x20002E2")]
	internal struct PropertyMetadata
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MemberInfo Info;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool IsField;

		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Type Type;
	}
	[Token(Token = "0x20002E3")]
	internal struct ArrayMetadata
	{
		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_array;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		private bool is_list;

		[Token(Token = "0x1700014D")]
		public Type ElementType
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0x5DAE4C", Offset = "0x5DAE4C", VA = "0x5DAE4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0x5DAE54", Offset = "0x5DAE54", VA = "0x5DAE54")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public bool IsArray
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0x5DAE5C", Offset = "0x5DAE5C", VA = "0x5DAE5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x5DAE64", Offset = "0x5DAE64", VA = "0x5DAE64")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public bool IsList
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x5DAE6C", Offset = "0x5DAE6C", VA = "0x5DAE6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CB")]
			[Address(RVA = "0x5DAE74", Offset = "0x5DAE74", VA = "0x5DAE74")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20002E4")]
	internal struct ObjectMetadata
	{
		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type element_type;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private bool is_dictionary;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private IDictionary<string, PropertyMetadata> properties;

		[Token(Token = "0x17000150")]
		public Type ElementType
		{
			[Token(Token = "0x60016CC")]
			[Address(RVA = "0x5DAED8", Offset = "0x5DAED8", VA = "0x5DAED8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x5DAEE0", Offset = "0x5DAEE0", VA = "0x5DAEE0")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public bool IsDictionary
		{
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x5DAEE8", Offset = "0x5DAEE8", VA = "0x5DAEE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x5DAEF0", Offset = "0x5DAEF0", VA = "0x5DAEF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public IDictionary<string, PropertyMetadata> Properties
		{
			[Token(Token = "0x60016D0")]
			[Address(RVA = "0x5DAEF8", Offset = "0x5DAEF8", VA = "0x5DAEF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0x5DAF00", Offset = "0x5DAF00", VA = "0x5DAF00")]
			set
			{
			}
		}
	}
	[Token(Token = "0x20002E5")]
	internal delegate void ExporterFunc(object obj, JsonWriter writer);
	[Token(Token = "0x20002E6")]
	public delegate void ExporterFunc<T>(T obj, JsonWriter writer);
	[Token(Token = "0x20002E7")]
	internal delegate object ImporterFunc(object input);
	[Token(Token = "0x20002E8")]
	public delegate TValue ImporterFunc<TJson, TValue>(TJson input);
	[Token(Token = "0x20002E9")]
	public delegate IJsonWrapper WrapperFactory();
	[Token(Token = "0x20002EA")]
	public class JsonMapper
	{
		[Serializable]
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2EAC", Offset = "0x5C2EAC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static ExporterFunc <>9__23_0;

			[Token(Token = "0x4002E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static ExporterFunc <>9__23_1;

			[Token(Token = "0x4002E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static ExporterFunc <>9__23_2;

			[Token(Token = "0x4002E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static ExporterFunc <>9__23_3;

			[Token(Token = "0x4002E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static ExporterFunc <>9__23_4;

			[Token(Token = "0x4002E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static ExporterFunc <>9__23_5;

			[Token(Token = "0x4002E36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static ExporterFunc <>9__23_6;

			[Token(Token = "0x4002E37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static ExporterFunc <>9__23_7;

			[Token(Token = "0x4002E38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static ExporterFunc <>9__23_8;

			[Token(Token = "0x4002E39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static ExporterFunc <>9__23_9;

			[Token(Token = "0x4002E3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public static ImporterFunc <>9__24_0;

			[Token(Token = "0x4002E3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static ImporterFunc <>9__24_1;

			[Token(Token = "0x4002E3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public static ImporterFunc <>9__24_2;

			[Token(Token = "0x4002E3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static ImporterFunc <>9__24_3;

			[Token(Token = "0x4002E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public static ImporterFunc <>9__24_4;

			[Token(Token = "0x4002E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static ImporterFunc <>9__24_5;

			[Token(Token = "0x4002E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public static ImporterFunc <>9__24_6;

			[Token(Token = "0x4002E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static ImporterFunc <>9__24_7;

			[Token(Token = "0x4002E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public static ImporterFunc <>9__24_8;

			[Token(Token = "0x4002E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static ImporterFunc <>9__24_9;

			[Token(Token = "0x4002E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public static ImporterFunc <>9__24_10;

			[Token(Token = "0x4002E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static ImporterFunc <>9__24_11;

			[Token(Token = "0x4002E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public static ImporterFunc <>9__24_12;

			[Token(Token = "0x4002E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static WrapperFactory <>9__29_0;

			[Token(Token = "0x4002E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public static WrapperFactory <>9__30_0;

			[Token(Token = "0x4002E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static WrapperFactory <>9__31_0;

			[Token(Token = "0x6002908")]
			[Address(RVA = "0x2454714", Offset = "0x2454714", VA = "0x2454714")]
			public <>c()
			{
			}

			[Token(Token = "0x6002909")]
			[Address(RVA = "0x245471C", Offset = "0x245471C", VA = "0x245471C")]
			internal void <RegisterBaseExporters>b__23_0(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290A")]
			[Address(RVA = "0x24547DC", Offset = "0x24547DC", VA = "0x24547DC")]
			internal void <RegisterBaseExporters>b__23_1(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290B")]
			[Address(RVA = "0x245489C", Offset = "0x245489C", VA = "0x245489C")]
			internal void <RegisterBaseExporters>b__23_2(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290C")]
			[Address(RVA = "0x24549A4", Offset = "0x24549A4", VA = "0x24549A4")]
			internal void <RegisterBaseExporters>b__23_3(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290D")]
			[Address(RVA = "0x2454B64", Offset = "0x2454B64", VA = "0x2454B64")]
			internal void <RegisterBaseExporters>b__23_4(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290E")]
			[Address(RVA = "0x2454C24", Offset = "0x2454C24", VA = "0x2454C24")]
			internal void <RegisterBaseExporters>b__23_5(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x600290F")]
			[Address(RVA = "0x2454CE4", Offset = "0x2454CE4", VA = "0x2454CE4")]
			internal void <RegisterBaseExporters>b__23_6(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002910")]
			[Address(RVA = "0x2454DA4", Offset = "0x2454DA4", VA = "0x2454DA4")]
			internal void <RegisterBaseExporters>b__23_7(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002911")]
			[Address(RVA = "0x2454E74", Offset = "0x2454E74", VA = "0x2454E74")]
			internal void <RegisterBaseExporters>b__23_8(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002912")]
			[Address(RVA = "0x2454F00", Offset = "0x2454F00", VA = "0x2454F00")]
			internal void <RegisterBaseExporters>b__23_9(object obj, JsonWriter writer)
			{
			}

			[Token(Token = "0x6002913")]
			[Address(RVA = "0x2454F94", Offset = "0x2454F94", VA = "0x2454F94")]
			internal object <RegisterBaseImporters>b__24_0(object input)
			{
				return null;
			}

			[Token(Token = "0x6002914")]
			[Address(RVA = "0x2455058", Offset = "0x2455058", VA = "0x2455058")]
			internal object <RegisterBaseImporters>b__24_1(object input)
			{
				return null;
			}

			[Token(Token = "0x6002915")]
			[Address(RVA = "0x245511C", Offset = "0x245511C", VA = "0x245511C")]
			internal object <RegisterBaseImporters>b__24_2(object input)
			{
				return null;
			}

			[Token(Token = "0x6002916")]
			[Address(RVA = "0x24551E0", Offset = "0x24551E0", VA = "0x24551E0")]
			internal object <RegisterBaseImporters>b__24_3(object input)
			{
				return null;
			}

			[Token(Token = "0x6002917")]
			[Address(RVA = "0x24552A4", Offset = "0x24552A4", VA = "0x24552A4")]
			internal object <RegisterBaseImporters>b__24_4(object input)
			{
				return null;
			}

			[Token(Token = "0x6002918")]
			[Address(RVA = "0x2455368", Offset = "0x2455368", VA = "0x2455368")]
			internal object <RegisterBaseImporters>b__24_5(object input)
			{
				return null;
			}

			[Token(Token = "0x6002919")]
			[Address(RVA = "0x245542C", Offset = "0x245542C", VA = "0x245542C")]
			internal object <RegisterBaseImporters>b__24_6(object input)
			{
				return null;
			}

			[Token(Token = "0x600291A")]
			[Address(RVA = "0x24554F0", Offset = "0x24554F0", VA = "0x24554F0")]
			internal object <RegisterBaseImporters>b__24_7(object input)
			{
				return null;
			}

			[Token(Token = "0x600291B")]
			[Address(RVA = "0x24555BC", Offset = "0x24555BC", VA = "0x24555BC")]
			internal object <RegisterBaseImporters>b__24_8(object input)
			{
				return null;
			}

			[Token(Token = "0x600291C")]
			[Address(RVA = "0x2455680", Offset = "0x2455680", VA = "0x2455680")]
			internal object <RegisterBaseImporters>b__24_9(object input)
			{
				return null;
			}

			[Token(Token = "0x600291D")]
			[Address(RVA = "0x2455754", Offset = "0x2455754", VA = "0x2455754")]
			internal object <RegisterBaseImporters>b__24_10(object input)
			{
				return null;
			}

			[Token(Token = "0x600291E")]
			[Address(RVA = "0x2455818", Offset = "0x2455818", VA = "0x2455818")]
			internal object <RegisterBaseImporters>b__24_11(object input)
			{
				return null;
			}

			[Token(Token = "0x600291F")]
			[Address(RVA = "0x2455940", Offset = "0x2455940", VA = "0x2455940")]
			internal object <RegisterBaseImporters>b__24_12(object input)
			{
				return null;
			}

			[Token(Token = "0x6002920")]
			[Address(RVA = "0x2455AB8", Offset = "0x2455AB8", VA = "0x2455AB8")]
			internal IJsonWrapper <ToObject>b__29_0()
			{
				return null;
			}

			[Token(Token = "0x6002921")]
			[Address(RVA = "0x2455B24", Offset = "0x2455B24", VA = "0x2455B24")]
			internal IJsonWrapper <ToObject>b__30_0()
			{
				return null;
			}

			[Token(Token = "0x6002922")]
			[Address(RVA = "0x2455B90", Offset = "0x2455B90", VA = "0x2455B90")]
			internal IJsonWrapper <ToObject>b__31_0()
			{
				return null;
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2EBC", Offset = "0x5C2EBC")]
		private sealed class <>c__DisplayClass37_0<T>
		{
			[Token(Token = "0x4002E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ExporterFunc<T> exporter;

			[Token(Token = "0x6002923")]
			public <>c__DisplayClass37_0()
			{
			}

			[Token(Token = "0x6002924")]
			internal void <RegisterExporter>b__0(object obj, JsonWriter writer)
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2ECC", Offset = "0x5C2ECC")]
		private sealed class <>c__DisplayClass38_0<TJson, TValue>
		{
			[Token(Token = "0x4002E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImporterFunc<TJson, TValue> importer;

			[Token(Token = "0x6002925")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x6002926")]
			internal object <RegisterImporter>b__0(object input)
			{
				return null;
			}
		}

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int max_nesting_depth;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IFormatProvider datetime_format;

		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IDictionary<Type, ExporterFunc> base_exporters_table;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IDictionary<Type, ExporterFunc> custom_exporters_table;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> base_importers_table;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static IDictionary<Type, IDictionary<Type, ImporterFunc>> custom_importers_table;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IDictionary<Type, ArrayMetadata> array_metadata;

		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static readonly object array_metadata_lock;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IDictionary<Type, IDictionary<Type, MethodInfo>> conv_ops;

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static readonly object conv_ops_lock;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IDictionary<Type, ObjectMetadata> object_metadata;

		[Token(Token = "0x4001DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static readonly object object_metadata_lock;

		[Token(Token = "0x4001DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static IDictionary<Type, IList<PropertyMetadata>> type_properties;

		[Token(Token = "0x4001DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static readonly object type_properties_lock;

		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static JsonWriter static_writer;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private static readonly object static_writer_lock;

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0x2449AB8", Offset = "0x2449AB8", VA = "0x2449AB8")]
		static JsonMapper()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x244C6AC", Offset = "0x244C6AC", VA = "0x244C6AC")]
		private static void AddArrayMetadata(Type type)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x244CCBC", Offset = "0x244CCBC", VA = "0x244CCBC")]
		private static void AddObjectMetadata(Type type)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0x244D558", Offset = "0x244D558", VA = "0x244D558")]
		private static void AddTypeProperties(Type type)
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0x244DBB0", Offset = "0x244DBB0", VA = "0x244DBB0")]
		private static MethodInfo GetConvOp(Type t1, Type t2)
		{
			return null;
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0x244E718", Offset = "0x244E718", VA = "0x244E718")]
		private static object ReadValue(Type inst_type, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0x2450724", Offset = "0x2450724", VA = "0x2450724")]
		private static IJsonWrapper ReadValue(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x2449E94", Offset = "0x2449E94", VA = "0x2449E94")]
		private static void RegisterBaseExporters()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x244B23C", Offset = "0x244B23C", VA = "0x244B23C")]
		private static void RegisterBaseImporters()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0x2451418", Offset = "0x2451418", VA = "0x2451418")]
		private static void RegisterImporter(IDictionary<Type, IDictionary<Type, ImporterFunc>> table, Type json_type, Type value_type, ImporterFunc importer)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0x24516FC", Offset = "0x24516FC", VA = "0x24516FC")]
		private static void WriteValue(object obj, JsonWriter writer, bool writer_is_private, int depth)
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0x24538F8", Offset = "0x24538F8", VA = "0x24538F8")]
		public static string ToJson(object obj)
		{
			return null;
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x2453BF0", Offset = "0x2453BF0", VA = "0x2453BF0")]
		public static void ToJson(object obj, JsonWriter writer)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x2453C88", Offset = "0x2453C88", VA = "0x2453C88")]
		public static JsonData ToObject(JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0x2453F20", Offset = "0x2453F20", VA = "0x2453F20")]
		public static JsonData ToObject(TextReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0x2454148", Offset = "0x2454148", VA = "0x2454148")]
		public static JsonData ToObject(string json)
		{
			return null;
		}

		[Token(Token = "0x60016F6")]
		public static T ToObject<T>(JsonReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60016F7")]
		public static T ToObject<T>(TextReader reader)
		{
			return (T)null;
		}

		[Token(Token = "0x60016F8")]
		public static T ToObject<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0x2453E98", Offset = "0x2453E98", VA = "0x2453E98")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, JsonReader reader)
		{
			return null;
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0x2454344", Offset = "0x2454344", VA = "0x2454344")]
		public static IJsonWrapper ToWrapper(WrapperFactory factory, string json)
		{
			return null;
		}

		[Token(Token = "0x60016FB")]
		public static void RegisterExporter<T>(ExporterFunc<T> exporter)
		{
		}

		[Token(Token = "0x60016FC")]
		public static void RegisterImporter<TJson, TValue>(ImporterFunc<TJson, TValue> importer)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0x2454470", Offset = "0x2454470", VA = "0x2454470")]
		public static void UnregisterExporters()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0x2454584", Offset = "0x2454584", VA = "0x2454584")]
		public static void UnregisterImporters()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x2454698", Offset = "0x2454698", VA = "0x2454698")]
		public JsonMapper()
		{
		}
	}
	[Token(Token = "0x20002EB")]
	public enum JsonToken
	{
		[Token(Token = "0x4001DCC")]
		None,
		[Token(Token = "0x4001DCD")]
		ObjectStart,
		[Token(Token = "0x4001DCE")]
		PropertyName,
		[Token(Token = "0x4001DCF")]
		ObjectEnd,
		[Token(Token = "0x4001DD0")]
		ArrayStart,
		[Token(Token = "0x4001DD1")]
		ArrayEnd,
		[Token(Token = "0x4001DD2")]
		Int,
		[Token(Token = "0x4001DD3")]
		Long,
		[Token(Token = "0x4001DD4")]
		Double,
		[Token(Token = "0x4001DD5")]
		String,
		[Token(Token = "0x4001DD6")]
		Boolean,
		[Token(Token = "0x4001DD7")]
		Null
	}
	[Token(Token = "0x20002EC")]
	public class JsonReader
	{
		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<int, IDictionary<int, int[]>> parse_table;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Stack<int> automaton_stack;

		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int current_input;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int current_symbol;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool end_of_json;

		[Token(Token = "0x4001DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		private bool end_of_input;

		[Token(Token = "0x4001DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Lexer lexer;

		[Token(Token = "0x4001DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool parser_in_string;

		[Token(Token = "0x4001DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool parser_return;

		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool read_started;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextReader reader;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool reader_is_owned;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private object token_value;

		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private JsonToken token;

		[Token(Token = "0x17000153")]
		public bool AllowComments
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0x2455BFC", Offset = "0x2455BFC", VA = "0x2455BFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001701")]
			[Address(RVA = "0x2455C28", Offset = "0x2455C28", VA = "0x2455C28")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x6001702")]
			[Address(RVA = "0x2455C58", Offset = "0x2455C58", VA = "0x2455C58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001703")]
			[Address(RVA = "0x2455C84", Offset = "0x2455C84", VA = "0x2455C84")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public bool EndOfInput
		{
			[Token(Token = "0x6001704")]
			[Address(RVA = "0x2455CB4", Offset = "0x2455CB4", VA = "0x2455CB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000156")]
		public bool EndOfJson
		{
			[Token(Token = "0x6001705")]
			[Address(RVA = "0x2455CBC", Offset = "0x2455CBC", VA = "0x2455CBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000157")]
		public JsonToken Token
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0x245062C", Offset = "0x245062C", VA = "0x245062C")]
			get
			{
				return default(JsonToken);
			}
		}

		[Token(Token = "0x17000158")]
		public object Value
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0x2450634", Offset = "0x2450634", VA = "0x2450634")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x2455CC4", Offset = "0x2455CC4", VA = "0x2455CC4")]
		static JsonReader()
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x24543EC", Offset = "0x24543EC", VA = "0x24543EC")]
		public JsonReader(string json_text)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x2454140", Offset = "0x2454140", VA = "0x2454140")]
		public JsonReader(TextReader reader)
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x2456658", Offset = "0x2456658", VA = "0x2456658")]
		private JsonReader(TextReader reader, bool owned)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x2455CC8", Offset = "0x2455CC8", VA = "0x2455CC8")]
		private static void PopulateParseTable()
		{
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x2456A1C", Offset = "0x2456A1C", VA = "0x2456A1C")]
		private static void TableAddCol(ParserToken row, int col, params int[] symbols)
		{
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x24568CC", Offset = "0x24568CC", VA = "0x24568CC")]
		private static void TableAddRow(ParserToken rule)
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x2456BDC", Offset = "0x2456BDC", VA = "0x2456BDC")]
		private void ProcessNumber(string number)
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x2456DCC", Offset = "0x2456DCC", VA = "0x2456DCC")]
		private void ProcessSymbol()
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0x2456FE8", Offset = "0x2456FE8", VA = "0x2456FE8")]
		private bool ReadToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0x2457360", Offset = "0x2457360", VA = "0x2457360")]
		public void Close()
		{
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x2450084", Offset = "0x2450084", VA = "0x2450084")]
		public bool Read()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002ED")]
	internal enum Condition
	{
		[Token(Token = "0x4001DE7")]
		InArray,
		[Token(Token = "0x4001DE8")]
		InObject,
		[Token(Token = "0x4001DE9")]
		NotAProperty,
		[Token(Token = "0x4001DEA")]
		Property,
		[Token(Token = "0x4001DEB")]
		Value
	}
	[Token(Token = "0x20002EE")]
	internal class WriterContext
	{
		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int Count;

		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool InArray;

		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool InObject;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool ExpectingValue;

		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Padding;

		[Token(Token = "0x6001714")]
		[Address(RVA = "0x24579D0", Offset = "0x24579D0", VA = "0x24579D0")]
		public WriterContext()
		{
		}
	}
	[Token(Token = "0x20002EF")]
	public class JsonWriter
	{
		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static NumberFormatInfo number_format;

		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private WriterContext context;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Stack<WriterContext> ctx_stack;

		[Token(Token = "0x4001DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool has_reached_end;

		[Token(Token = "0x4001DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private char[] hex_seq;

		[Token(Token = "0x4001DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int indentation;

		[Token(Token = "0x4001DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int indent_value;

		[Token(Token = "0x4001DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder inst_string_builder;

		[Token(Token = "0x4001DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool pretty_print;

		[Token(Token = "0x4001DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool validate;

		[Token(Token = "0x4001DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextWriter writer;

		[Token(Token = "0x17000159")]
		public int IndentValue
		{
			[Token(Token = "0x6001715")]
			[Address(RVA = "0x24573C8", Offset = "0x24573C8", VA = "0x24573C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001716")]
			[Address(RVA = "0x24573D0", Offset = "0x24573D0", VA = "0x24573D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public bool PrettyPrint
		{
			[Token(Token = "0x6001717")]
			[Address(RVA = "0x24573FC", Offset = "0x24573FC", VA = "0x24573FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001718")]
			[Address(RVA = "0x2457404", Offset = "0x2457404", VA = "0x2457404")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public TextWriter TextWriter
		{
			[Token(Token = "0x6001719")]
			[Address(RVA = "0x24537D8", Offset = "0x24537D8", VA = "0x24537D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015C")]
		public bool Validate
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0x2449708", Offset = "0x2449708", VA = "0x2449708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0x2449700", Offset = "0x2449700", VA = "0x2449700")]
			set
			{
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0x245740C", Offset = "0x245740C", VA = "0x245740C")]
		static JsonWriter()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0x2449DE8", Offset = "0x2449DE8", VA = "0x2449DE8")]
		public JsonWriter()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0x245757C", Offset = "0x245757C", VA = "0x245757C")]
		public JsonWriter(StringBuilder sb)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0x2449638", Offset = "0x2449638", VA = "0x2449638")]
		public JsonWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0x24575FC", Offset = "0x24575FC", VA = "0x24575FC")]
		private void DoValidation(Condition cond)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0x2457474", Offset = "0x2457474", VA = "0x2457474")]
		private void Init()
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0x24579D8", Offset = "0x24579D8", VA = "0x24579D8")]
		private static void IntToHex(int n, char[] hex)
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0x2457A50", Offset = "0x2457A50", VA = "0x2457A50")]
		private void Indent()
		{
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0x2457A6C", Offset = "0x2457A6C", VA = "0x2457A6C")]
		private void Put(string str)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0x2457B24", Offset = "0x2457B24", VA = "0x2457B24")]
		private void PutNewline()
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0x2457B2C", Offset = "0x2457B2C", VA = "0x2457B2C")]
		private void PutNewline(bool add_comma)
		{
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0x2457C0C", Offset = "0x2457C0C", VA = "0x2457C0C")]
		private void PutString(string str)
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0x245802C", Offset = "0x245802C", VA = "0x245802C")]
		private void Unindent()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0x2458048", Offset = "0x2458048", VA = "0x2458048", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0x2453AF0", Offset = "0x2453AF0", VA = "0x2453AF0")]
		public void Reset()
		{
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0x2448714", Offset = "0x2448714", VA = "0x2448714")]
		public void Write(bool boolean)
		{
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0x2454A38", Offset = "0x2454A38", VA = "0x2454A38")]
		public void Write(decimal number)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0x24487D4", Offset = "0x24487D4", VA = "0x24487D4")]
		public void Write(double number)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0x2448978", Offset = "0x2448978", VA = "0x2448978")]
		public void Write(int number)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0x2448A88", Offset = "0x2448A88", VA = "0x2448A88")]
		public void Write(long number)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0x2448660", Offset = "0x2448660", VA = "0x2448660")]
		public void Write(string str)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0x24537E0", Offset = "0x24537E0", VA = "0x24537E0")]
		public void Write(ulong number)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0x2448CA4", Offset = "0x2448CA4", VA = "0x2448CA4")]
		public void WriteArrayEnd()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0x2448BA0", Offset = "0x2448BA0", VA = "0x2448BA0")]
		public void WriteArrayStart()
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0x24490D8", Offset = "0x24490D8", VA = "0x24490D8")]
		public void WriteObjectEnd()
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0x2448DF0", Offset = "0x2448DF0", VA = "0x2448DF0")]
		public void WriteObjectStart()
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0x2448EF4", Offset = "0x2448EF4", VA = "0x2448EF4")]
		public void WritePropertyName(string property_name)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	internal class FsmContext
	{
		[Token(Token = "0x4001DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool Return;

		[Token(Token = "0x4001DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int NextState;

		[Token(Token = "0x4001DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Lexer L;

		[Token(Token = "0x4001DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int StateStack;

		[Token(Token = "0x6001737")]
		[Address(RVA = "0x2442160", Offset = "0x2442160", VA = "0x2442160")]
		public FsmContext()
		{
		}
	}
	[Token(Token = "0x20002F1")]
	internal class Lexer
	{
		[Token(Token = "0x20005E7")]
		private delegate bool StateHandler(FsmContext ctx);

		[Token(Token = "0x4001E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int[] fsm_return_table;

		[Token(Token = "0x4001E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static StateHandler[] fsm_handler_table;

		[Token(Token = "0x4001E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool allow_comments;

		[Token(Token = "0x4001E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private bool allow_single_quoted_strings;

		[Token(Token = "0x4001E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		private bool end_of_input;

		[Token(Token = "0x4001E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private FsmContext fsm_context;

		[Token(Token = "0x4001E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int input_buffer;

		[Token(Token = "0x4001E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int input_char;

		[Token(Token = "0x4001E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextReader reader;

		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int state;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder string_buffer;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string string_value;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int token;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int unichar;

		[Token(Token = "0x1700015D")]
		public bool AllowComments
		{
			[Token(Token = "0x6001738")]
			[Address(RVA = "0x2455C20", Offset = "0x2455C20", VA = "0x2455C20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001739")]
			[Address(RVA = "0x2455C50", Offset = "0x2455C50", VA = "0x2455C50")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public bool AllowSingleQuotedStrings
		{
			[Token(Token = "0x600173A")]
			[Address(RVA = "0x2455C7C", Offset = "0x2455C7C", VA = "0x2455C7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600173B")]
			[Address(RVA = "0x2455CAC", Offset = "0x2455CAC", VA = "0x2455CAC")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public bool EndOfInput
		{
			[Token(Token = "0x600173C")]
			[Address(RVA = "0x2457358", Offset = "0x2457358", VA = "0x2457358")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000160")]
		public int Token
		{
			[Token(Token = "0x600173D")]
			[Address(RVA = "0x24573C0", Offset = "0x24573C0", VA = "0x24573C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000161")]
		public string StringValue
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0x2456FE0", Offset = "0x2456FE0", VA = "0x2456FE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0x24580CC", Offset = "0x24580CC", VA = "0x24580CC")]
		static Lexer()
		{
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0x24567F0", Offset = "0x24567F0", VA = "0x24567F0")]
		public Lexer(TextReader reader)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0x2459128", Offset = "0x2459128", VA = "0x2459128")]
		private static int HexValue(int digit)
		{
			return default(int);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0x24580D0", Offset = "0x24580D0", VA = "0x24580D0")]
		private static void PopulateFsmTables()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0x24591E0", Offset = "0x24591E0", VA = "0x24591E0")]
		private static char ProcessEscChar(int esc_char)
		{
			return default(char);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x24592EC", Offset = "0x24592EC", VA = "0x24592EC")]
		private static bool State1(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x245968C", Offset = "0x245968C", VA = "0x245968C")]
		private static bool State2(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x24597F4", Offset = "0x24597F4", VA = "0x24597F4")]
		private static bool State3(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x2459A84", Offset = "0x2459A84", VA = "0x2459A84")]
		private static bool State4(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x2459C70", Offset = "0x2459C70", VA = "0x2459C70")]
		private static bool State5(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x2459D68", Offset = "0x2459D68", VA = "0x2459D68")]
		private static bool State6(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x2459F90", Offset = "0x2459F90", VA = "0x2459F90")]
		private static bool State7(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x245A0AC", Offset = "0x245A0AC", VA = "0x245A0AC")]
		private static bool State8(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x245A254", Offset = "0x245A254", VA = "0x245A254")]
		private static bool State9(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0x245A2CC", Offset = "0x245A2CC", VA = "0x245A2CC")]
		private static bool State10(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0x245A344", Offset = "0x245A344", VA = "0x245A344")]
		private static bool State11(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0x245A3BC", Offset = "0x245A3BC", VA = "0x245A3BC")]
		private static bool State12(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0x245A434", Offset = "0x245A434", VA = "0x245A434")]
		private static bool State13(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0x245A4AC", Offset = "0x245A4AC", VA = "0x245A4AC")]
		private static bool State14(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0x245A524", Offset = "0x245A524", VA = "0x245A524")]
		private static bool State15(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0x245A59C", Offset = "0x245A59C", VA = "0x245A59C")]
		private static bool State16(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0x245A614", Offset = "0x245A614", VA = "0x245A614")]
		private static bool State17(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0x245A68C", Offset = "0x245A68C", VA = "0x245A68C")]
		private static bool State18(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0x245A704", Offset = "0x245A704", VA = "0x245A704")]
		private static bool State19(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0x245A820", Offset = "0x245A820", VA = "0x245A820")]
		private static bool State20(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0x245A898", Offset = "0x245A898", VA = "0x245A898")]
		private static bool State21(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0x245AA70", Offset = "0x245AA70", VA = "0x245AA70")]
		private static bool State22(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x245ADA0", Offset = "0x245ADA0", VA = "0x245ADA0")]
		private static bool State23(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x245AEBC", Offset = "0x245AEBC", VA = "0x245AEBC")]
		private static bool State24(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x245AF54", Offset = "0x245AF54", VA = "0x245AF54")]
		private static bool State25(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0x245AFE0", Offset = "0x245AFE0", VA = "0x245AFE0")]
		private static bool State26(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x245B060", Offset = "0x245B060", VA = "0x245B060")]
		private static bool State27(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0x245B0E0", Offset = "0x245B0E0", VA = "0x245B0E0")]
		private static bool State28(FsmContext ctx)
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x245965C", Offset = "0x245965C", VA = "0x245965C")]
		private bool GetChar()
		{
			return default(bool);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0x245B180", Offset = "0x245B180", VA = "0x245B180")]
		private int NextChar()
		{
			return default(int);
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0x2457074", Offset = "0x2457074", VA = "0x2457074")]
		public bool NextToken()
		{
			return default(bool);
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0x2459A78", Offset = "0x2459A78", VA = "0x2459A78")]
		private void UngetChar()
		{
		}
	}
	[Token(Token = "0x20002F2")]
	internal enum ParserToken
	{
		[Token(Token = "0x4001E0F")]
		None = 65536,
		[Token(Token = "0x4001E10")]
		Number,
		[Token(Token = "0x4001E11")]
		True,
		[Token(Token = "0x4001E12")]
		False,
		[Token(Token = "0x4001E13")]
		Null,
		[Token(Token = "0x4001E14")]
		CharSeq,
		[Token(Token = "0x4001E15")]
		Char,
		[Token(Token = "0x4001E16")]
		Text,
		[Token(Token = "0x4001E17")]
		Object,
		[Token(Token = "0x4001E18")]
		ObjectPrime,
		[Token(Token = "0x4001E19")]
		Pair,
		[Token(Token = "0x4001E1A")]
		PairRest,
		[Token(Token = "0x4001E1B")]
		Array,
		[Token(Token = "0x4001E1C")]
		ArrayPrime,
		[Token(Token = "0x4001E1D")]
		Value,
		[Token(Token = "0x4001E1E")]
		ValueRest,
		[Token(Token = "0x4001E1F")]
		String,
		[Token(Token = "0x4001E20")]
		End,
		[Token(Token = "0x4001E21")]
		Epsilon
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20002F3")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_color;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_highlight;

		[Token(Token = "0x17000162")]
		public bool Highlight
		{
			[Token(Token = "0x6001764")]
			[Address(RVA = "0x9E048C", Offset = "0x9E048C", VA = "0x9E048C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001765")]
			[Address(RVA = "0x9E0494", Offset = "0x9E0494", VA = "0x9E0494")]
			set
			{
			}
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0x9E049C", Offset = "0x9E049C", VA = "0x9E049C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0x9E0728", Offset = "0x9E0728", VA = "0x9E0728", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0x9E0748", Offset = "0x9E0748", VA = "0x9E0748", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0x9E0784", Offset = "0x9E0784", VA = "0x9E0784")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0x9E05C4", Offset = "0x9E05C4", VA = "0x9E05C4")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0x9E0A80", Offset = "0x9E0A80", VA = "0x9E0A80")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string m_materialColorField;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Renderer m_renderer;

		[Token(Token = "0x4001E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_inRange;

		[Token(Token = "0x4001E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_targeted;

		[Token(Token = "0x17000163")]
		public bool InRange
		{
			[Token(Token = "0x600176D")]
			[Address(RVA = "0x9E145C", Offset = "0x9E145C", VA = "0x9E145C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600176E")]
			[Address(RVA = "0x9E1464", Offset = "0x9E1464", VA = "0x9E1464")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public bool Targeted
		{
			[Token(Token = "0x600176F")]
			[Address(RVA = "0x9E16EC", Offset = "0x9E16EC", VA = "0x9E16EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001770")]
			[Address(RVA = "0x9E16F4", Offset = "0x9E16F4", VA = "0x9E16F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0x9E16FC", Offset = "0x9E16FC", VA = "0x9E16FC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x9E146C", Offset = "0x9E146C", VA = "0x9E146C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x9E198C", Offset = "0x9E198C", VA = "0x9E198C")]
		public void SetColor(Color focusColor)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x9E1A18", Offset = "0x9E1A18", VA = "0x9E1A18")]
		public void ClearColor()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x9E1AA0", Offset = "0x9E1AA0", VA = "0x9E1AA0")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1B30", Offset = "0x5C1B30")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		public Color m_focusColor;

		[Token(Token = "0x4001E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4001E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000165")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001776")]
			[Address(RVA = "0x9E1AA8", Offset = "0x9E1AA8", VA = "0x9E1AA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001777")]
			[Address(RVA = "0x9E1AB0", Offset = "0x9E1AB0", VA = "0x9E1AB0")]
			set
			{
			}
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0x9E1AC8", Offset = "0x9E1AC8", VA = "0x9E1AC8", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0x9E1CC8", Offset = "0x9E1CC8", VA = "0x9E1CC8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0x9E2A60", Offset = "0x9E2A60", VA = "0x9E2A60", Slot = "8")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0x9E3404", Offset = "0x9E3404", VA = "0x9E3404", Slot = "9")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0x9E394C", Offset = "0x9E394C", VA = "0x9E394C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0x9E2088", Offset = "0x9E2088", VA = "0x9E2088")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0x9E3AC8", Offset = "0x9E3AC8", VA = "0x9E3AC8")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0x9E4064", Offset = "0x9E4064", VA = "0x9E4064", Slot = "10")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0x9E4080", Offset = "0x9E4080", VA = "0x9E4080", Slot = "11")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0x9E4088", Offset = "0x9E4088", VA = "0x9E4088")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20005E8")]
		public enum CrosshairState
		{
			[Token(Token = "0x4002E4D")]
			Disabled,
			[Token(Token = "0x4002E4E")]
			Enabled,
			[Token(Token = "0x4002E4F")]
			Targeted
		}

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private CrosshairState m_state;

		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6001782")]
		[Address(RVA = "0x9E66C4", Offset = "0x9E66C4", VA = "0x9E66C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0x9E18B4", Offset = "0x9E18B4", VA = "0x9E18B4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0x9E674C", Offset = "0x9E674C", VA = "0x9E674C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0x9E679C", Offset = "0x9E679C", VA = "0x9E679C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x6001786")]
		[Address(RVA = "0x9E650C", Offset = "0x9E650C", VA = "0x9E650C")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0x9E65E4", Offset = "0x9E65E4", VA = "0x9E65E4")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0x9E66BC", Offset = "0x9E66BC", VA = "0x9E66BC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6001789")]
		[Address(RVA = "0x9ED8E0", Offset = "0x9ED8E0", VA = "0x9ED8E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0x9ED9E0", Offset = "0x9ED9E0", VA = "0x9ED9E0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0x9ED9EC", Offset = "0x9ED9EC", VA = "0x9ED9EC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0x9ED9F8", Offset = "0x9ED9F8", VA = "0x9ED9F8")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x600178D")]
		[Address(RVA = "0x9DE864", Offset = "0x9DE864", VA = "0x9DE864")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0x9DE8DC", Offset = "0x9DE8DC", VA = "0x9DE8DC")]
		private void Update()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0x9DEC88", Offset = "0x9DEC88", VA = "0x9DEC88")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0x9DEDC4", Offset = "0x9DEDC4", VA = "0x9DEDC4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0x9DE8E0", Offset = "0x9DE8E0", VA = "0x9DE8E0")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0x9DEEF8", Offset = "0x9DEEF8", VA = "0x9DEEF8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20005E9")]
		public enum ContactTest
		{
			[Token(Token = "0x4002E51")]
			PerpenTest,
			[Token(Token = "0x4002E52")]
			BackwardsPress
		}

		[Token(Token = "0x4001E46")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001E47")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4001E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4001E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4001E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _toolTagsMask;

		[Token(Token = "0x4001E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4001E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000166")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0x9DEFB8", Offset = "0x9DEFB8", VA = "0x9DEFB8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000167")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0x9DEFC0", Offset = "0x9DEFC0", VA = "0x9DEFC0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x9DEFD4", Offset = "0x9DEFD4", VA = "0x9DEFD4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x9DF190", Offset = "0x9DF190", VA = "0x9DF190")]
		private void CallEventsOnOldDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0x9DF3F0", Offset = "0x9DF3F0", VA = "0x9DF3F0")]
		private void CallEventsOnNewDepth(InteractableCollisionDepth newDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0x9DF57C", Offset = "0x9DF57C", VA = "0x9DF57C")]
		private void SustainEventsOnDepth(InteractableCollisionDepth depth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0x9DF714", Offset = "0x9DF714", VA = "0x9DF714", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0x9DFDA8", Offset = "0x9DFDA8", VA = "0x9DFDA8")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0x9DFF6C", Offset = "0x9DFF6C", VA = "0x9DFF6C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0x9E0070", Offset = "0x9E0070", VA = "0x9E0070")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0x9E0214", Offset = "0x9E0214", VA = "0x9E0214")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4001E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C73E4", Offset = "0x5C73E4")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C73F4", Offset = "0x5C73F4")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000168")]
		public Collider Collider
		{
			[Token(Token = "0x600179E")]
			[Address(RVA = "0x9E0350", Offset = "0x9E0350", VA = "0x9E0350", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9A0", Offset = "0x5CF9A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600179F")]
			[Address(RVA = "0x9E0358", Offset = "0x9E0358", VA = "0x9E0358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9B0", Offset = "0x5CF9B0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60017A0")]
			[Address(RVA = "0x9DEDBC", Offset = "0x9DEDBC", VA = "0x9DEDBC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9C0", Offset = "0x5CF9C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017A1")]
			[Address(RVA = "0x9E0360", Offset = "0x9E0360", VA = "0x9E0360")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9D0", Offset = "0x5CF9D0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60017A2")]
			[Address(RVA = "0x9E0368", Offset = "0x9E0368", VA = "0x9E0368", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0x9E03EC", Offset = "0x9E03EC", VA = "0x9E03EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0x9E0484", Offset = "0x9E0484", VA = "0x9E0484")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700016B")]
		Collider Collider
		{
			[Token(Token = "0x60017A5")]
			get;
		}

		[Token(Token = "0x1700016C")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60017A6")]
			get;
		}

		[Token(Token = "0x1700016D")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60017A7")]
			get;
		}
	}
	[Token(Token = "0x20002FD")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly float FrameTime;

		[Token(Token = "0x4001E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0x9DF330", Offset = "0x9DF330", VA = "0x9DF330")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public enum InteractionType
	{
		[Token(Token = "0x4001E5B")]
		Enter,
		[Token(Token = "0x4001E5C")]
		Stay,
		[Token(Token = "0x4001E5D")]
		Exit
	}
	[Token(Token = "0x20002FF")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20005EA")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4002E54")]
			Mesh,
			[Token(Token = "0x4002E55")]
			Skeleton,
			[Token(Token = "0x4002E56")]
			Both
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2EDC", Offset = "0x5C2EDC")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000359")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600292E")]
				[Address(RVA = "0x9E7BE0", Offset = "0x9E7BE0", VA = "0x9E7BE0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002930")]
				[Address(RVA = "0x9E7C70", Offset = "0x9E7C70", VA = "0x9E7C70", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600292B")]
			[Address(RVA = "0x9E7438", Offset = "0x9E7438", VA = "0x9E7438")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x600292C")]
			[Address(RVA = "0x9E78B8", Offset = "0x9E78B8", VA = "0x9E78B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600292D")]
			[Address(RVA = "0x9E78BC", Offset = "0x9E78BC", VA = "0x9E78BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600292F")]
			[Address(RVA = "0x9E7BE8", Offset = "0x9E7BE8", VA = "0x9E7BE8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E5E")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4001E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4001E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4001E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRHand[] _hand;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int HandAlphaId;

		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7424", Offset = "0x5C7424")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700016E")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60017A9")]
			[Address(RVA = "0x9E50C4", Offset = "0x9E50C4", VA = "0x9E50C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017AA")]
			[Address(RVA = "0x9E67A4", Offset = "0x9E67A4", VA = "0x9E67A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60017AB")]
			[Address(RVA = "0x9E6068", Offset = "0x9E6068", VA = "0x9E6068")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017AC")]
			[Address(RVA = "0x9E6818", Offset = "0x9E6818", VA = "0x9E6818")]
			private set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60017AD")]
			[Address(RVA = "0x9E688C", Offset = "0x9E688C", VA = "0x9E688C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017AE")]
			[Address(RVA = "0x9E68CC", Offset = "0x9E68CC", VA = "0x9E68CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0x9E6940", Offset = "0x9E6940", VA = "0x9E6940")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B0")]
			[Address(RVA = "0x9E6980", Offset = "0x9E6980", VA = "0x9E6980")]
			private set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60017B1")]
			[Address(RVA = "0x9E69F4", Offset = "0x9E69F4", VA = "0x9E69F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B2")]
			[Address(RVA = "0x9E6A34", Offset = "0x9E6A34", VA = "0x9E6A34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60017B3")]
			[Address(RVA = "0x9E5084", Offset = "0x9E5084", VA = "0x9E5084")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B4")]
			[Address(RVA = "0x9E6AA8", Offset = "0x9E6AA8", VA = "0x9E6AA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000174")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0x9E6028", Offset = "0x9E6028", VA = "0x9E6028")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0x9E6B1C", Offset = "0x9E6B1C", VA = "0x9E6B1C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0x9E6B90", Offset = "0x9E6B90", VA = "0x9E6B90")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017B8")]
			[Address(RVA = "0x9E6BD0", Offset = "0x9E6BD0", VA = "0x9E6BD0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60017B9")]
			[Address(RVA = "0x9E6C44", Offset = "0x9E6C44", VA = "0x9E6C44")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BA")]
			[Address(RVA = "0x9E6C84", Offset = "0x9E6C84", VA = "0x9E6C84")]
			private set
			{
			}
		}

		[Token(Token = "0x17000177")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60017BB")]
			[Address(RVA = "0x9E6CF8", Offset = "0x9E6CF8", VA = "0x9E6CF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BC")]
			[Address(RVA = "0x9E6D38", Offset = "0x9E6D38", VA = "0x9E6D38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60017BD")]
			[Address(RVA = "0x9E11F0", Offset = "0x9E11F0", VA = "0x9E11F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9E0", Offset = "0x5CF9E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017BE")]
			[Address(RVA = "0x9E6DAC", Offset = "0x9E6DAC", VA = "0x9E6DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CF9F0", Offset = "0x5CF9F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x9E6E10", Offset = "0x9E6E10", VA = "0x9E6E10")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x9E735C", Offset = "0x9E735C", VA = "0x9E735C")]
		private void Update()
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x9E72D0", Offset = "0x9E72D0", VA = "0x9E72D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFA00", Offset = "0x5CFA00")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x9E1254", Offset = "0x9E1254", VA = "0x9E1254")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x9E7458", Offset = "0x9E7458", VA = "0x9E7458")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0x9E60A8", Offset = "0x9E60A8", VA = "0x9E60A8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0x9E4E48", Offset = "0x9E4E48", VA = "0x9E4E48")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0x9E77B0", Offset = "0x9E77B0", VA = "0x9E77B0")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000300")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005EC")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6002931")]
			[Address(RVA = "0x9E85FC", Offset = "0x9E85FC", VA = "0x9E85FC")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4001E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4001E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000179")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60017C7")]
			[Address(RVA = "0x9DF3E8", Offset = "0x9DF3E8", VA = "0x9DF3E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017A")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60017C8")]
			[Address(RVA = "0x9DF3E0", Offset = "0x9DF3E0", VA = "0x9DF3E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60017C9")]
			[Address(RVA = "0x9DF328", Offset = "0x9DF328", VA = "0x9DF328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60017CA")]
			[Address(RVA = "0x9E7C78", Offset = "0x9E7C78", VA = "0x9E7C78", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x9E7C80", Offset = "0x9E7C80", VA = "0x9E7C80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFA78", Offset = "0x5CFA78")]
			add
			{
			}
			[Token(Token = "0x60017CC")]
			[Address(RVA = "0x9E7D8C", Offset = "0x9E7D8C", VA = "0x9E7D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFA88", Offset = "0x5CFA88")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60017CE")]
			[Address(RVA = "0x9E7F0C", Offset = "0x9E7F0C", VA = "0x9E7F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFA98", Offset = "0x5CFA98")]
			add
			{
			}
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0x9E8018", Offset = "0x9E8018", VA = "0x9E8018")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFAA8", Offset = "0x5CFAA8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60017D1")]
			[Address(RVA = "0x9E8198", Offset = "0x9E8198", VA = "0x9E8198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFAB8", Offset = "0x5CFAB8")]
			add
			{
			}
			[Token(Token = "0x60017D2")]
			[Address(RVA = "0x9E82A4", Offset = "0x9E82A4", VA = "0x9E82A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFAC8", Offset = "0x5CFAC8")]
			remove
			{
			}
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x9E7E98", Offset = "0x9E7E98", VA = "0x9E7E98", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x9E8124", Offset = "0x9E8124", VA = "0x9E8124", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x9E83B0", Offset = "0x9E83B0", VA = "0x9E83B0", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60017D4")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool);

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x9DF110", Offset = "0x9DF110", VA = "0x9DF110", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x9E84D0", Offset = "0x9E84D0", VA = "0x9E84D0", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x9E0348", Offset = "0x9E0348", VA = "0x9E0348")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4001E76")]
		None,
		[Token(Token = "0x4001E77")]
		Proximity,
		[Token(Token = "0x4001E78")]
		Contact,
		[Token(Token = "0x4001E79")]
		Action
	}
	[Token(Token = "0x2000302")]
	public enum InteractableState
	{
		[Token(Token = "0x4001E7B")]
		Default,
		[Token(Token = "0x4001E7C")]
		ProximityState,
		[Token(Token = "0x4001E7D")]
		ContactState,
		[Token(Token = "0x4001E7E")]
		ActionState
	}
	[Token(Token = "0x2000303")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x9DFEC0", Offset = "0x9DFEC0", VA = "0x9DFEC0")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700017D")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x60017D9")]
			[Address(RVA = "0x9E8660", Offset = "0x9E8660", VA = "0x9E8660")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x9E8424", Offset = "0x9E8424", VA = "0x9E8424")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x9E8550", Offset = "0x9E8550", VA = "0x9E8550")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x9E86EC", Offset = "0x9E86EC", VA = "0x9E86EC")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000305")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2EEC", Offset = "0x5C2EEC")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform[] toolObjects;

			[Token(Token = "0x4002E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool isRightHand;

			[Token(Token = "0x4002E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4002E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4002E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4002E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4002E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x1700035B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002936")]
				[Address(RVA = "0x9E9EE8", Offset = "0x9E9EE8", VA = "0x9E9EE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002938")]
				[Address(RVA = "0x9E9F78", Offset = "0x9E9F78", VA = "0x9E9F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002932")]
			[Address(RVA = "0x9E982C", Offset = "0x9E982C", VA = "0x9E982C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002933")]
			[Address(RVA = "0x9E99D8", Offset = "0x9E99D8", VA = "0x9E99D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002934")]
			[Address(RVA = "0x9E9A5C", Offset = "0x9E9A5C", VA = "0x9E9A5C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002935")]
			[Address(RVA = "0x9E99F0", Offset = "0x9E99F0", VA = "0x9E99F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002937")]
			[Address(RVA = "0x9E9EF0", Offset = "0x9E9EF0", VA = "0x9E9EF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x9E96F8", Offset = "0x9E96F8", VA = "0x9E96F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0x9E976C", Offset = "0x9E976C", VA = "0x9E976C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFAD8", Offset = "0x5CFAD8")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0x9E984C", Offset = "0x9E984C", VA = "0x9E984C")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0x9E99D0", Offset = "0x9E99D0", VA = "0x9E99D0")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _leftPinch;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool _rightPinch;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700017E")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0x9E45BC", Offset = "0x9E45BC", VA = "0x9E45BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0x9E4794", Offset = "0x9E4794", VA = "0x9E4794")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0x9E9F80", Offset = "0x9E9F80", VA = "0x9E9F80")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0x9EA0C0", Offset = "0x9EA0C0", VA = "0x9EA0C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0x9EA584", Offset = "0x9EA584", VA = "0x9EA584")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x9EA5B4", Offset = "0x9EA5B4", VA = "0x9EA5B4")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x9EAAB4", Offset = "0x9EAAB4", VA = "0x9EAAB4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x9EAC3C", Offset = "0x9EAC3C", VA = "0x9EAC3C")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2EFC", Offset = "0x5C2EFC")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700035D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600293C")]
				[Address(RVA = "0x9E637C", Offset = "0x9E637C", VA = "0x9E637C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700035E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600293E")]
				[Address(RVA = "0x9E640C", Offset = "0x9E640C", VA = "0x9E640C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002939")]
			[Address(RVA = "0x9E4968", Offset = "0x9E4968", VA = "0x9E4968")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x600293A")]
			[Address(RVA = "0x9E5AF0", Offset = "0x9E5AF0", VA = "0x9E5AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600293B")]
			[Address(RVA = "0x9E5AF4", Offset = "0x9E5AF4", VA = "0x9E5AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600293D")]
			[Address(RVA = "0x9E6384", Offset = "0x9E6384", VA = "0x9E6384", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001E8E")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4001E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4001E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4001E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4001E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int _currVelocityFrame;

		[Token(Token = "0x4001E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4001E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _position;

		[Token(Token = "0x4001E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4001E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _lastScale;

		[Token(Token = "0x4001E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _isInitialized;

		[Token(Token = "0x4001E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700017F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0x9E4438", Offset = "0x9E4438", VA = "0x9E4438", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000180")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0x9E4440", Offset = "0x9E4440", VA = "0x9E4440", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000181")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0x9E4448", Offset = "0x9E4448", VA = "0x9E4448", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000182")]
		public override bool EnableState
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0x9E4450", Offset = "0x9E4450", VA = "0x9E4450", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0x9E449C", Offset = "0x9E449C", VA = "0x9E449C", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x9E44F0", Offset = "0x9E44F0", VA = "0x9E44F0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x9E48DC", Offset = "0x9E48DC", VA = "0x9E48DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFB50", Offset = "0x5CFB50")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x9E4988", Offset = "0x9E4988", VA = "0x9E4988")]
		private void Update()
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x9E5118", Offset = "0x9E5118", VA = "0x9E5118")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x9E5454", Offset = "0x9E5454", VA = "0x9E5454")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x9E5624", Offset = "0x9E5624", VA = "0x9E5624", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0x9E5998", Offset = "0x9E5998", VA = "0x9E5998", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0x9E599C", Offset = "0x9E599C", VA = "0x9E599C", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0x9E59A0", Offset = "0x9E59A0", VA = "0x9E59A0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4001E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C74B4", Offset = "0x5C74B4")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4001E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C74C4", Offset = "0x5C74C4")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4001E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C74D4", Offset = "0x5C74D4")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000183")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60017F8")]
			[Address(RVA = "0x9E6414", Offset = "0x9E6414", VA = "0x9E6414", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFBC8", Offset = "0x5CFBC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60017F9")]
			[Address(RVA = "0x9E48D4", Offset = "0x9E48D4", VA = "0x9E48D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFBD8", Offset = "0x5CFBD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000184")]
		public bool EnableState
		{
			[Token(Token = "0x60017FA")]
			[Address(RVA = "0x9E641C", Offset = "0x9E641C", VA = "0x9E641C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FB")]
			[Address(RVA = "0x9E6448", Offset = "0x9E6448", VA = "0x9E6448", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000185")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60017FC")]
			[Address(RVA = "0x9E647C", Offset = "0x9E647C", VA = "0x9E647C", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFBE8", Offset = "0x5CFBE8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017FD")]
			[Address(RVA = "0x9E6484", Offset = "0x9E6484", VA = "0x9E6484", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFBF8", Offset = "0x5CFBF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public float SphereRadius
		{
			[Token(Token = "0x60017FE")]
			[Address(RVA = "0x9E5104", Offset = "0x9E5104", VA = "0x9E5104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC08", Offset = "0x5CFC08")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017FF")]
			[Address(RVA = "0x9E648C", Offset = "0x9E648C", VA = "0x9E648C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC18", Offset = "0x5CFC18")]
			private set
			{
			}
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0x9E6494", Offset = "0x9E6494", VA = "0x9E6494")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0x9E6500", Offset = "0x9E6500", VA = "0x9E6500", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0x9E6504", Offset = "0x9E6504", VA = "0x9E6504")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4001E9E")]
		None = 0,
		[Token(Token = "0x4001E9F")]
		Ray = 1,
		[Token(Token = "0x4001EA0")]
		Poke = 4,
		[Token(Token = "0x4001EA1")]
		All = -1
	}
	[Token(Token = "0x200030A")]
	public enum ToolInputState
	{
		[Token(Token = "0x4001EA3")]
		Inactive,
		[Token(Token = "0x4001EA4")]
		PrimaryInputDown,
		[Token(Token = "0x4001EA5")]
		PrimaryInputDownStay,
		[Token(Token = "0x4001EA6")]
		PrimaryInputUp
	}
	[Token(Token = "0x200030B")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4001EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4001EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001803")]
		[Address(RVA = "0x9E5968", Offset = "0x9E5968", VA = "0x9E5968")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C74E4", Offset = "0x5C74E4")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C74F4", Offset = "0x5C74F4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7504", Offset = "0x5C7504")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000187")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001804")]
			[Address(RVA = "0x9E0204", Offset = "0x9E0204", VA = "0x9E0204")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000188")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001805")]
			[Address(RVA = "0x9E020C", Offset = "0x9E020C", VA = "0x9E020C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC28", Offset = "0x5CFC28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x9E8784", Offset = "0x9E8784", VA = "0x9E8784")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC38", Offset = "0x5CFC38")]
			set
			{
			}
		}

		[Token(Token = "0x17000189")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001807")]
			get;
		}

		[Token(Token = "0x1700018A")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001808")]
			get;
		}

		[Token(Token = "0x1700018B")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001809")]
			get;
		}

		[Token(Token = "0x1700018C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600180A")]
			[Address(RVA = "0x9E01F0", Offset = "0x9E01F0", VA = "0x9E01F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC48", Offset = "0x5CFC48")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600180B")]
			[Address(RVA = "0x9E5618", Offset = "0x9E5618", VA = "0x9E5618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC58", Offset = "0x5CFC58")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x600180C")]
			[Address(RVA = "0x9DFEAC", Offset = "0x9DFEAC", VA = "0x9DFEAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC68", Offset = "0x5CFC68")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600180D")]
			[Address(RVA = "0x9E510C", Offset = "0x9E510C", VA = "0x9E510C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC78", Offset = "0x5CFC78")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6001812")]
			get;
			[Token(Token = "0x6001813")]
			set;
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0x9E878C", Offset = "0x9E878C", VA = "0x9E878C")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600180F")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6001810")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6001811")]
		public abstract void DeFocus();

		[Token(Token = "0x6001814")]
		public abstract void Initialize();

		[Token(Token = "0x6001815")]
		[Address(RVA = "0x9E8794", Offset = "0x9E8794", VA = "0x9E8794")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0x9E8800", Offset = "0x9E8800", VA = "0x9E8800")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0x9E8878", Offset = "0x9E8878", VA = "0x9E8878", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0x9E8BD8", Offset = "0x9E8BD8", VA = "0x9E8BD8", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001819")]
		[Address(RVA = "0x9E59B4", Offset = "0x9E59B4", VA = "0x9E59B4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200030D")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700018F")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x600181A")]
			get;
		}

		[Token(Token = "0x17000190")]
		bool EnableState
		{
			[Token(Token = "0x600181C")]
			get;
			[Token(Token = "0x600181D")]
			set;
		}

		[Token(Token = "0x17000191")]
		bool ToolActivateState
		{
			[Token(Token = "0x600181E")]
			get;
			[Token(Token = "0x600181F")]
			set;
		}

		[Token(Token = "0x600181B")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200030E")]
	public class PinchStateModule
	{
		[Token(Token = "0x20005EF")]
		private enum PinchState
		{
			[Token(Token = "0x4002E67")]
			None,
			[Token(Token = "0x4002E68")]
			PinchDown,
			[Token(Token = "0x4002E69")]
			PinchStay,
			[Token(Token = "0x4002E6A")]
			PinchUp
		}

		[Token(Token = "0x4001EB3")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4001EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private PinchState _currPinchState;

		[Token(Token = "0x4001EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000192")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0x9EDA00", Offset = "0x9EDA00", VA = "0x9EDA00")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000193")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0x9EDA9C", Offset = "0x9EDA9C", VA = "0x9EDA9C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000194")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0x9EDB38", Offset = "0x9EDB38", VA = "0x9EDB38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0x9EDBD4", Offset = "0x9EDBD4", VA = "0x9EDBD4")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0x9EDBF8", Offset = "0x9EDBF8", VA = "0x9EDBF8")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4001EB6")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4001EB7")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4001EB8")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001EB9")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001EBA")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7524", Offset = "0x5C7524")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _initialized;

		[Token(Token = "0x17000195")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001825")]
			[Address(RVA = "0x9EDF20", Offset = "0x9EDF20", VA = "0x9EDF20", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000196")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001826")]
			[Address(RVA = "0x9EDF28", Offset = "0x9EDF28", VA = "0x9EDF28", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000197")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001827")]
			[Address(RVA = "0x9EDFB4", Offset = "0x9EDFB4", VA = "0x9EDFB4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000198")]
		public override bool EnableState
		{
			[Token(Token = "0x6001828")]
			[Address(RVA = "0x9EDFBC", Offset = "0x9EDFBC", VA = "0x9EDFBC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001829")]
			[Address(RVA = "0x9EE010", Offset = "0x9EE010", VA = "0x9EE010", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0x9EE0BC", Offset = "0x9EE0BC", VA = "0x9EE0BC", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0x9EE12C", Offset = "0x9EE12C", VA = "0x9EE12C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0x9EE1E8", Offset = "0x9EE1E8", VA = "0x9EE1E8")]
		private void Update()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0x9EE654", Offset = "0x9EE654", VA = "0x9EE654")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0x9EE784", Offset = "0x9EE784", VA = "0x9EE784", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0x9EEC4C", Offset = "0x9EEC4C", VA = "0x9EEC4C")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0x9EEE68", Offset = "0x9EEE68", VA = "0x9EEE68")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0x9EEF9C", Offset = "0x9EEF9C", VA = "0x9EEF9C")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0x9EF39C", Offset = "0x9EF39C", VA = "0x9EF39C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0x9EF8C4", Offset = "0x9EF8C4", VA = "0x9EF8C4", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0x9EF9B8", Offset = "0x9EF9B8", VA = "0x9EF9B8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0x9EF9F0", Offset = "0x9EF9F0", VA = "0x9EF9F0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4001EC6")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4001EC7")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _toolActivateState;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7590", Offset = "0x5C7590")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000199")]
		public bool EnableState
		{
			[Token(Token = "0x6001836")]
			[Address(RVA = "0x9EDFE4", Offset = "0x9EDFE4", VA = "0x9EDFE4", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001837")]
			[Address(RVA = "0x9EE040", Offset = "0x9EE040", VA = "0x9EE040", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001838")]
			[Address(RVA = "0x9EFAD4", Offset = "0x9EFAD4", VA = "0x9EFAD4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001839")]
			[Address(RVA = "0x9EE610", Offset = "0x9EE610", VA = "0x9EE610", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600183B")]
			[Address(RVA = "0x9EFDB8", Offset = "0x9EFDB8", VA = "0x9EFDB8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC88", Offset = "0x5CFC88")]
			get
			{
				return null;
			}
			[Token(Token = "0x600183C")]
			[Address(RVA = "0x9EE124", Offset = "0x9EE124", VA = "0x9EE124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFC98", Offset = "0x5CFC98")]
			set
			{
			}
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0x9EFADC", Offset = "0x9EFADC", VA = "0x9EFADC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x9EF8FC", Offset = "0x9EF8FC", VA = "0x9EF8FC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0x9EFDC0", Offset = "0x9EFDC0", VA = "0x9EFDC0")]
		private void Update()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0x9F028C", Offset = "0x9F028C", VA = "0x9F028C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x9F0488", Offset = "0x9F0488", VA = "0x9F0488")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000311")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool useSpherecast;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700019C")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6001841")]
			[Address(RVA = "0x9E40B4", Offset = "0x9E40B4", VA = "0x9E40B4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001842")]
			[Address(RVA = "0x9E40BC", Offset = "0x9E40BC", VA = "0x9E40BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6001843")]
			[Address(RVA = "0x9E416C", Offset = "0x9E416C", VA = "0x9E416C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001844")]
			[Address(RVA = "0x9E4174", Offset = "0x9E4174", VA = "0x9E4174")]
			set
			{
			}
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0x9E4208", Offset = "0x9E4208", VA = "0x9E4208")]
		private void Start()
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0x9E4408", Offset = "0x9E4408", VA = "0x9E4408")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0x9E441C", Offset = "0x9E441C", VA = "0x9E441C")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0x9E4430", Offset = "0x9E4430", VA = "0x9E4430")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x9E0BA4", Offset = "0x9E0BA4", VA = "0x9E0BA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x9E0BA8", Offset = "0x9E0BA8", VA = "0x9E0BA8")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x9E0C3C", Offset = "0x9E0C3C", VA = "0x9E0C3C")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x9E0D68", Offset = "0x9E0D68", VA = "0x9E0D68")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x9E0E94", Offset = "0x9E0E94", VA = "0x9E0E94")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x9E0FAC", Offset = "0x9E0FAC", VA = "0x9E0FAC")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x9E10F8", Offset = "0x9E10F8", VA = "0x9E10F8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x9E1158", Offset = "0x9E1158", VA = "0x9E1158")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x9E1358", Offset = "0x9E1358", VA = "0x9E1358")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0x9E13F4", Offset = "0x9E13F4", VA = "0x9E13F4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x9E13FC", Offset = "0x9E13FC", VA = "0x9E13FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0x9E1400", Offset = "0x9E1400", VA = "0x9E1400")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x9E13A4", Offset = "0x9E13A4", VA = "0x9E13A4")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0x9E1454", Offset = "0x9E1454", VA = "0x9E1454")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F0C", Offset = "0x5C2F0C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4002E6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4002E6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <startTime>5__3;

			[Token(Token = "0x4002E70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <endTime>5__4;

			[Token(Token = "0x1700035F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002942")]
				[Address(RVA = "0x9ED848", Offset = "0x9ED848", VA = "0x9ED848", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000360")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002944")]
				[Address(RVA = "0x9ED8D8", Offset = "0x9ED8D8", VA = "0x9ED8D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600293F")]
			[Address(RVA = "0x9ED468", Offset = "0x9ED468", VA = "0x9ED468")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002940")]
			[Address(RVA = "0x9ED580", Offset = "0x9ED580", VA = "0x9ED580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002941")]
			[Address(RVA = "0x9ED584", Offset = "0x9ED584", VA = "0x9ED584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002943")]
			[Address(RVA = "0x9ED850", Offset = "0x9ED850", VA = "0x9ED850", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001ED7")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001ED8")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x9ECEC8", Offset = "0x9ECEC8", VA = "0x9ECEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0x9ECF9C", Offset = "0x9ECF9C", VA = "0x9ECF9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x9ED374", Offset = "0x9ED374", VA = "0x9ED374")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0x9ED2E8", Offset = "0x9ED2E8", VA = "0x9ED2E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFCA8", Offset = "0x5CFCA8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x9ED488", Offset = "0x9ED488", VA = "0x9ED488")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		public enum SelectionState
		{
			[Token(Token = "0x4002E72")]
			Off,
			[Token(Token = "0x4002E73")]
			Selected,
			[Token(Token = "0x4002E74")]
			Highlighted
		}

		[Token(Token = "0x4001EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4001EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700019E")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x9F04FC", Offset = "0x9F04FC", VA = "0x9F04FC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x9F0504", Offset = "0x9F0504", VA = "0x9F0504")]
			set
			{
			}
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0x9F0714", Offset = "0x9F0714", VA = "0x9F0714")]
		private void Awake()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x9F09B0", Offset = "0x9F09B0", VA = "0x9F09B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x9F0580", Offset = "0x9F0580", VA = "0x9F0580")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x9F0AC4", Offset = "0x9F0AC4", VA = "0x9F0AC4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20005F2")]
		public enum SegmentType
		{
			[Token(Token = "0x4002E76")]
			Straight,
			[Token(Token = "0x4002E77")]
			LeftTurn,
			[Token(Token = "0x4002E78")]
			RightTurn,
			[Token(Token = "0x4002E79")]
			Switch
		}

		[Token(Token = "0x4001EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _gridSize;

		[Token(Token = "0x4001EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int _subDivCount;

		[Token(Token = "0x4001EED")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001EEE")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject _mesh;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7670", Offset = "0x5C7670")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Pose _p1;

		[Token(Token = "0x4001EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Pose _p2;

		[Token(Token = "0x4001EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Pose _endPose;

		[Token(Token = "0x1700019F")]
		public float StartDistance
		{
			[Token(Token = "0x6001863")]
			[Address(RVA = "0x9F0B44", Offset = "0x9F0B44", VA = "0x9F0B44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFD20", Offset = "0x5CFD20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001864")]
			[Address(RVA = "0x9F0B4C", Offset = "0x9F0B4C", VA = "0x9F0B4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFD30", Offset = "0x5CFD30")]
			set
			{
			}
		}

		[Token(Token = "0x170001A0")]
		public float GridSize
		{
			[Token(Token = "0x6001865")]
			[Address(RVA = "0x9F0B54", Offset = "0x9F0B54", VA = "0x9F0B54")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001866")]
			[Address(RVA = "0x9F0B5C", Offset = "0x9F0B5C", VA = "0x9F0B5C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public int SubDivCount
		{
			[Token(Token = "0x6001867")]
			[Address(RVA = "0x9F0B64", Offset = "0x9F0B64", VA = "0x9F0B64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001868")]
			[Address(RVA = "0x9F0B6C", Offset = "0x9F0B6C", VA = "0x9F0B6C")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public SegmentType Type
		{
			[Token(Token = "0x6001869")]
			[Address(RVA = "0x9F0B74", Offset = "0x9F0B74", VA = "0x9F0B74")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170001A3")]
		public Pose EndPose
		{
			[Token(Token = "0x600186A")]
			[Address(RVA = "0x9F0B7C", Offset = "0x9F0B7C", VA = "0x9F0B7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public float Radius
		{
			[Token(Token = "0x600186B")]
			[Address(RVA = "0x9F11E8", Offset = "0x9F11E8", VA = "0x9F11E8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A5")]
		public float SegmentLength
		{
			[Token(Token = "0x600186D")]
			[Address(RVA = "0x9F0BE0", Offset = "0x9F0BE0", VA = "0x9F0BE0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x9F11FC", Offset = "0x9F11FC", VA = "0x9F11FC")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x9F121C", Offset = "0x9F121C", VA = "0x9F121C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x9F0C28", Offset = "0x9F0C28", VA = "0x9F0C28")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x9F1220", Offset = "0x9F1220", VA = "0x9F1220")]
		private void Update()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x9F1224", Offset = "0x9F1224", VA = "0x9F1224")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x9F12AC", Offset = "0x9F12AC", VA = "0x9F12AC")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x9F2084", Offset = "0x9F2084", VA = "0x9F2084")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x9F24FC", Offset = "0x9F24FC", VA = "0x9F24FC")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F1C", Offset = "0x5C2F1C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4002E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <startTime>5__2;

			[Token(Token = "0x4002E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <endTime>5__3;

			[Token(Token = "0x17000361")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002948")]
				[Address(RVA = "0x9F34F0", Offset = "0x9F34F0", VA = "0x9F34F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000362")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600294A")]
				[Address(RVA = "0x9F3580", Offset = "0x9F3580", VA = "0x9F3580", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002945")]
			[Address(RVA = "0x9F31D0", Offset = "0x9F31D0", VA = "0x9F31D0")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002946")]
			[Address(RVA = "0x9F32B0", Offset = "0x9F32B0", VA = "0x9F32B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002947")]
			[Address(RVA = "0x9F32B4", Offset = "0x9F32B4", VA = "0x9F32B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002949")]
			[Address(RVA = "0x9F34F8", Offset = "0x9F34F8", VA = "0x9F34F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001EF4")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001EF5")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int _materialColorId;

		[Token(Token = "0x4001F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4001F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x9F25B0", Offset = "0x9F25B0", VA = "0x9F25B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x9F26C0", Offset = "0x9F26C0", VA = "0x9F26C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x9F2790", Offset = "0x9F2790", VA = "0x9F2790")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x9F2934", Offset = "0x9F2934", VA = "0x9F2934")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x9F2B18", Offset = "0x9F2B18", VA = "0x9F2B18")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x9F2D44", Offset = "0x9F2D44", VA = "0x9F2D44")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x9F30C8", Offset = "0x9F30C8", VA = "0x9F30C8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x9F2F18", Offset = "0x9F2F18", VA = "0x9F2F18")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x9F2F2C", Offset = "0x9F2F2C", VA = "0x9F2F2C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x9F3144", Offset = "0x9F3144", VA = "0x9F3144")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFD40", Offset = "0x5CFD40")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x9F31F0", Offset = "0x9F31F0", VA = "0x9F31F0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170001A6")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001880")]
			[Address(RVA = "0x9F3588", Offset = "0x9F3588", VA = "0x9F3588")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x9F359C", Offset = "0x9F359C", VA = "0x9F359C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x9F35A4", Offset = "0x9F35A4", VA = "0x9F35A4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x9F3C2C", Offset = "0x9F3C2C", VA = "0x9F3C2C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001F08")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001F09")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C7770", Offset = "0x5C7770")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float scale;

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Pose _frontPose;

		[Token(Token = "0x4001F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Pose _rearPose;

		[Token(Token = "0x170001A7")]
		public float Distance
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x9F35F0", Offset = "0x9F35F0", VA = "0x9F35F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFDB8", Offset = "0x5CFDB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001885")]
			[Address(RVA = "0x9F35F8", Offset = "0x9F35F8", VA = "0x9F35F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFDC8", Offset = "0x5CFDC8")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001A8")]
		public float Scale
		{
			[Token(Token = "0x6001886")]
			[Address(RVA = "0x9F3D4C", Offset = "0x9F3D4C", VA = "0x9F3D4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x9F3D54", Offset = "0x9F3D54", VA = "0x9F3D54")]
			set
			{
			}
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0x9F35A0", Offset = "0x9F35A0", VA = "0x9F35A0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x9F3D5C", Offset = "0x9F3D5C", VA = "0x9F3D5C")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x9F3600", Offset = "0x9F3600", VA = "0x9F3600")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x9F3AA4", Offset = "0x9F3AA4", VA = "0x9F3AA4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x600188C")]
		public abstract void UpdatePosition();

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x9F3CB8", Offset = "0x9F3CB8", VA = "0x9F3CB8")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x200031A")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F2C", Offset = "0x5C2F2C")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float animationLength;

			[Token(Token = "0x4002E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000363")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600294E")]
				[Address(RVA = "0x9F497C", Offset = "0x9F497C", VA = "0x9F497C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000364")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002950")]
				[Address(RVA = "0x9F4A0C", Offset = "0x9F4A0C", VA = "0x9F4A0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600294B")]
			[Address(RVA = "0x9F4470", Offset = "0x9F4470", VA = "0x9F4470")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x600294C")]
			[Address(RVA = "0x9F464C", Offset = "0x9F464C", VA = "0x9F464C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600294D")]
			[Address(RVA = "0x9F4650", Offset = "0x9F4650", VA = "0x9F4650", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600294F")]
			[Address(RVA = "0x9F4984", Offset = "0x9F4984", VA = "0x9F4984", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _colorId;

		[Token(Token = "0x4001F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x9F3F1C", Offset = "0x9F3F1C", VA = "0x9F3F1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x9F3F74", Offset = "0x9F3F74", VA = "0x9F3F74")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x9F40C8", Offset = "0x9F40C8", VA = "0x9F40C8")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x9F427C", Offset = "0x9F427C", VA = "0x9F427C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x9F4124", Offset = "0x9F4124", VA = "0x9F4124")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x9F43BC", Offset = "0x9F43BC", VA = "0x9F43BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFDD8", Offset = "0x5CFDD8")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x9F4490", Offset = "0x9F4490", VA = "0x9F4490")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x9F453C", Offset = "0x9F453C", VA = "0x9F453C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x9F45D8", Offset = "0x9F45D8", VA = "0x9F45D8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20005F5")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4002E8C")]
			Start,
			[Token(Token = "0x4002E8D")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4002E8E")]
			Stop
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F3C", Offset = "0x5C2F3C")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool startTrain;

			[Token(Token = "0x4002E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <startTime>5__4;

			[Token(Token = "0x4002E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <endTime>5__5;

			[Token(Token = "0x4002E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000365")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002954")]
				[Address(RVA = "0x2361E3C", Offset = "0x2361E3C", VA = "0x2361E3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000366")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002956")]
				[Address(RVA = "0x2361ECC", Offset = "0x2361ECC", VA = "0x2361ECC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002951")]
			[Address(RVA = "0x2361A60", Offset = "0x2361A60", VA = "0x2361A60")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6002952")]
			[Address(RVA = "0x2361A80", Offset = "0x2361A80", VA = "0x2361A80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002953")]
			[Address(RVA = "0x2361A84", Offset = "0x2361A84", VA = "0x2361A84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002955")]
			[Address(RVA = "0x2361E44", Offset = "0x2361E44", VA = "0x2361E44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F1C")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001F1D")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001F1E")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001F1F")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C77D0", Offset = "0x5C77D0")]
		protected float _initialSpeed;

		[Token(Token = "0x4001F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4001F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _isMoving;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool _reverse;

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentSpeed;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _speedDiv;

		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x9F4A14", Offset = "0x9F4A14", VA = "0x9F4A14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x9F4BC8", Offset = "0x9F4BC8", VA = "0x9F4BC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x9F4BD8", Offset = "0x9F4BD8", VA = "0x9F4BD8", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x9E0BF4", Offset = "0x9E0BF4", VA = "0x9E0BF4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x9F4B24", Offset = "0x9F4B24", VA = "0x9F4B24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFE50", Offset = "0x5CFE50")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x9F4D74", Offset = "0x9F4D74", VA = "0x9F4D74")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x9F4D00", Offset = "0x9F4D00", VA = "0x9F4D00")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x9E0C88", Offset = "0x9E0C88", VA = "0x9E0C88")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x9E0DB4", Offset = "0x9E0DB4", VA = "0x9E0DB4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x9F505C", Offset = "0x9F505C", VA = "0x9F505C")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x9F51A0", Offset = "0x9F51A0", VA = "0x9F51A0")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x9E0EE0", Offset = "0x9E0EE0", VA = "0x9E0EE0")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x9E0FF8", Offset = "0x9E0FF8", VA = "0x9E0FF8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x9E1148", Offset = "0x9E1148", VA = "0x9E1148")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x9F524C", Offset = "0x9F524C", VA = "0x9F524C")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _trainLength;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170001A9")]
		public float TrackLength
		{
			[Token(Token = "0x60018A7")]
			[Address(RVA = "0x2361ED4", Offset = "0x2361ED4", VA = "0x2361ED4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018A8")]
			[Address(RVA = "0x2361EDC", Offset = "0x2361EDC", VA = "0x2361EDC")]
			private set
			{
			}
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x2361EE4", Offset = "0x2361EE4", VA = "0x2361EE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x2362234", Offset = "0x2362234", VA = "0x2362234")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x2361EE8", Offset = "0x2361EE8", VA = "0x2361EE8")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x2362398", Offset = "0x2362398", VA = "0x2362398")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x2362528", Offset = "0x2362528", VA = "0x2362528")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class Pose
	{
		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 Position;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion Rotation;

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x9EDDDC", Offset = "0x9EDDDC", VA = "0x9EDDDC")]
		public Pose()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x9EDED0", Offset = "0x9EDED0", VA = "0x9EDED0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200031E")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F4C", Offset = "0x5C2F4C")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float goalSpeed;

			[Token(Token = "0x4002E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <totalTime>5__2;

			[Token(Token = "0x4002E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000367")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600295A")]
				[Address(RVA = "0x2362CA0", Offset = "0x2362CA0", VA = "0x2362CA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000368")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600295C")]
				[Address(RVA = "0x2362D30", Offset = "0x2362D30", VA = "0x2362D30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002957")]
			[Address(RVA = "0x236284C", Offset = "0x236284C", VA = "0x236284C")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002958")]
			[Address(RVA = "0x2362A1C", Offset = "0x2362A1C", VA = "0x2362A1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002959")]
			[Address(RVA = "0x2362A20", Offset = "0x2362A20", VA = "0x2362A20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600295B")]
			[Address(RVA = "0x2362CA8", Offset = "0x2362CA8", VA = "0x2362CA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F5C", Offset = "0x5C2F5C")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public AudioClip initial;

			[Token(Token = "0x4002EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AudioClip clip;

			[Token(Token = "0x17000369")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002960")]
				[Address(RVA = "0x2362E38", Offset = "0x2362E38", VA = "0x2362E38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002962")]
				[Address(RVA = "0x2362EC8", Offset = "0x2362EC8", VA = "0x2362EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600295D")]
			[Address(RVA = "0x2362950", Offset = "0x2362950", VA = "0x2362950")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600295E")]
			[Address(RVA = "0x2362D38", Offset = "0x2362D38", VA = "0x2362D38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600295F")]
			[Address(RVA = "0x2362D3C", Offset = "0x2362D3C", VA = "0x2362D3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002961")]
			[Address(RVA = "0x2362E40", Offset = "0x2362E40", VA = "0x2362E40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F42")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C79B0", Offset = "0x5C79B0")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float _currentSpeed;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _rotAngle;

		[Token(Token = "0x170001AA")]
		public bool IsMoving
		{
			[Token(Token = "0x60018B0")]
			[Address(RVA = "0x236254C", Offset = "0x236254C", VA = "0x236254C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFEC8", Offset = "0x5CFEC8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018B1")]
			[Address(RVA = "0x2362554", Offset = "0x2362554", VA = "0x2362554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CFED8", Offset = "0x5CFED8")]
			private set
			{
			}
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x236255C", Offset = "0x236255C", VA = "0x236255C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x23625B4", Offset = "0x23625B4", VA = "0x23625B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x2362744", Offset = "0x2362744", VA = "0x2362744")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x2362798", Offset = "0x2362798", VA = "0x2362798")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFEE8", Offset = "0x5CFEE8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x236286C", Offset = "0x236286C", VA = "0x236286C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFF60", Offset = "0x5CFF60")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x2362970", Offset = "0x2362970", VA = "0x2362970")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x2362A14", Offset = "0x2362A14", VA = "0x2362A14")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4001F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4001F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x2362ED0", Offset = "0x2362ED0", VA = "0x2362ED0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x2362F68", Offset = "0x2362F68", VA = "0x2362F68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x2363068", Offset = "0x2363068", VA = "0x2363068")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x23631B0", Offset = "0x23631B0", VA = "0x23631B0")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x2363278", Offset = "0x2363278", VA = "0x2363278")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x23633B8", Offset = "0x23633B8", VA = "0x23633B8")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x2000320")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4001F53")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001F54")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001F55")]
		EUDT_None,
		[Token(Token = "0x4001F56")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x2000321")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F6C", Offset = "0x5C2F6C")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x1700036B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002966")]
				[Address(RVA = "0x9ECE30", Offset = "0x9ECE30", VA = "0x9ECE30", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002968")]
				[Address(RVA = "0x9ECEC0", Offset = "0x9ECEC0", VA = "0x9ECEC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002963")]
			[Address(RVA = "0x9EC198", Offset = "0x9EC198", VA = "0x9EC198")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002964")]
			[Address(RVA = "0x9ECACC", Offset = "0x9ECACC", VA = "0x9ECACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002965")]
			[Address(RVA = "0x9ECAD0", Offset = "0x9ECAD0", VA = "0x9ECAD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002967")]
			[Address(RVA = "0x9ECE38", Offset = "0x9ECE38", VA = "0x9ECE38", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inMenu;

		[Token(Token = "0x4001F58")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001F59")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001F5A")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C79F0", Offset = "0x5C79F0")]
		public GameObject mainCamera;

		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject uiCamera;

		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4001F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4001F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C7A44", Offset = "0x5C7A44")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float heightBetweenItems;

		[Token(Token = "0x4001F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int numLevels;

		[Token(Token = "0x4001F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int numLoopsTrigger;

		[Token(Token = "0x4001F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x9EAD10", Offset = "0x9EAD10", VA = "0x9EAD10")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x9EBAD0", Offset = "0x9EBAD0", VA = "0x9EBAD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x9EBC48", Offset = "0x9EBC48", VA = "0x9EBC48")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x9EBE08", Offset = "0x9EBE08", VA = "0x9EBE08")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x9EBFC8", Offset = "0x9EBFC8", VA = "0x9EBFC8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x9EBC24", Offset = "0x9EBC24", VA = "0x9EBC24")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x9EC10C", Offset = "0x9EC10C", VA = "0x9EC10C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5CFFD8", Offset = "0x5CFFD8")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x9EC1B8", Offset = "0x9EC1B8", VA = "0x9EC1B8")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x9EB2C4", Offset = "0x9EB2C4", VA = "0x9EB2C4")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x9EC340", Offset = "0x9EC340", VA = "0x9EC340")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x9EC1F0", Offset = "0x9EC1F0", VA = "0x9EC1F0")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x9EC814", Offset = "0x9EC814", VA = "0x9EC814")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x9EC8F0", Offset = "0x9EC8F0", VA = "0x9EC8F0")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x9EC988", Offset = "0x9EC988", VA = "0x9EC988")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0050", Offset = "0x5D0050")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x9EC9F4", Offset = "0x9EC9F4", VA = "0x9EC9F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0060", Offset = "0x5D0060")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x9ECA60", Offset = "0x9ECA60", VA = "0x9ECA60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0070", Offset = "0x5D0070")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x2000322")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1BB8", Offset = "0x5C1BB8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F7C", Offset = "0x5C2F7C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x600296A")]
			[Address(RVA = "0x9D1328", Offset = "0x9D1328", VA = "0x9D1328")]
			public <>c()
			{
			}

			[Token(Token = "0x600296B")]
			[Address(RVA = "0x9D1330", Offset = "0x9D1330", VA = "0x9D1330")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001F6F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001F70")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001F71")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001F72")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001F73")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001F74")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001F75")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001F76")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001F77")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001F78")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001F79")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4001F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4001F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider[] m_colliders;

		[Token(Token = "0x4001F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4001F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPointing;

		[Token(Token = "0x4001F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_pointBlend;

		[Token(Token = "0x4001F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4001F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x9D0070", Offset = "0x9D0070", VA = "0x9D0070")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0x9D00D8", Offset = "0x9D00D8", VA = "0x9D00D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x9D0630", Offset = "0x9D0630", VA = "0x9D0630")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x9D0730", Offset = "0x9D0730", VA = "0x9D0730")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x9D0880", Offset = "0x9D0880", VA = "0x9D0880")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x9D0D14", Offset = "0x9D0D14", VA = "0x9D0D14")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0x9D0F04", Offset = "0x9D0F04", VA = "0x9D0F04")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x9D10E4", Offset = "0x9D10E4", VA = "0x9D10E4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x9D092C", Offset = "0x9D092C", VA = "0x9D092C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0x9D09EC", Offset = "0x9D09EC", VA = "0x9D09EC")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0x9D03E4", Offset = "0x9D03E4", VA = "0x9D03E4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x9D1290", Offset = "0x9D1290", VA = "0x9D1290")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x2000323")]
	public enum HandPoseId
	{
		[Token(Token = "0x4001F8C")]
		Default,
		[Token(Token = "0x4001F8D")]
		Generic,
		[Token(Token = "0x4001F8E")]
		PingPongBall,
		[Token(Token = "0x4001F8F")]
		Controller
	}
	[Token(Token = "0x2000324")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001AB")]
		public bool AllowPointing
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x9D1280", Offset = "0x9D1280", VA = "0x9D1280")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AC")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x9D1288", Offset = "0x9D1288", VA = "0x9D1288")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x9D1278", Offset = "0x9D1278", VA = "0x9D1278")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0x9D1360", Offset = "0x9D1360", VA = "0x9D1360")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4001F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4001F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0x9D1368", Offset = "0x9D1368", VA = "0x9D1368")]
		private void Update()
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0x9D16E0", Offset = "0x9D16E0", VA = "0x9D16E0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x9D1758", Offset = "0x9D1758", VA = "0x9D1758")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x9D17AC", Offset = "0x9D17AC", VA = "0x9D17AC")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000326")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4001F97")]
		TRIANGLES,
		[Token(Token = "0x4001F98")]
		QUADS
	}
	[Token(Token = "0x2000327")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4001F9A")]
		ABSORPTION,
		[Token(Token = "0x4001F9B")]
		TRANSMISSION,
		[Token(Token = "0x4001F9C")]
		SCATTERING
	}
	[Token(Token = "0x2000328")]
	public struct MeshGroup
	{
		[Token(Token = "0x4001F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4001F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public UIntPtr faceCount;

		[Token(Token = "0x4001F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FaceType faceType;

		[Token(Token = "0x4001FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000329")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4001FA1")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4001FA2")]
		public const string Tab = "    ";

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x9D2080", Offset = "0x9D2080", VA = "0x9D2080")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0080", Offset = "0x5D0080")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0080", Offset = "0x5D0080")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0x9D2124", Offset = "0x9D2124", VA = "0x9D2124")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D00E0", Offset = "0x5D00E0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D00E0", Offset = "0x5D00E0")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x9D21D0", Offset = "0x9D21D0", VA = "0x9D21D0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0140", Offset = "0x5D0140")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0140", Offset = "0x5D0140")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x9D2274", Offset = "0x9D2274", VA = "0x9D2274")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D01B4", Offset = "0x5D01B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D01B4", Offset = "0x5D01B4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x9D2318", Offset = "0x9D2318", VA = "0x9D2318")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0214", Offset = "0x5D0214")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D0214", Offset = "0x5D0214")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class CAPI
	{
		[Token(Token = "0x20005FB")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20005FC")]
		public enum Result
		{
			[Token(Token = "0x4002EAA")]
			Success = 0,
			[Token(Token = "0x4002EAB")]
			Failure = -1000,
			[Token(Token = "0x4002EAC")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4002EAD")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4002EAE")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4002EAF")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4002EB0")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4002EB1")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4002EB2")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20005FD")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4002EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6002970")]
			[Address(RVA = "0x9DDF90", Offset = "0x9DDF90", VA = "0x9DDF90")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4001FA3")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4001FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4001FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4001FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4001FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4001FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4001FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4001FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4001FAB")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4001FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0x9D2448", Offset = "0x9D2448", VA = "0x9D2448")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x9D2548", Offset = "0x9D2548", VA = "0x9D2548")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x9D276C", Offset = "0x9D276C", VA = "0x9D276C")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0x9D2888", Offset = "0x9D2888", VA = "0x9D2888")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x9D2988", Offset = "0x9D2988", VA = "0x9D2988")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x9D2A88", Offset = "0x9D2A88", VA = "0x9D2A88")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0x9D2BA0", Offset = "0x9D2BA0", VA = "0x9D2BA0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x9D2CD0", Offset = "0x9D2CD0", VA = "0x9D2CD0")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x9D2DB8", Offset = "0x9D2DB8", VA = "0x9D2DB8")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x9D2EE8", Offset = "0x9D2EE8", VA = "0x9D2EE8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x9D2FC8", Offset = "0x9D2FC8", VA = "0x9D2FC8")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x9D30D8", Offset = "0x9D30D8", VA = "0x9D30D8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x9D31C8", Offset = "0x9D31C8", VA = "0x9D31C8")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x9D32B0", Offset = "0x9D32B0", VA = "0x9D32B0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x9D33A8", Offset = "0x9D33A8", VA = "0x9D33A8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x9D34A8", Offset = "0x9D34A8", VA = "0x9D34A8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x9D35A0", Offset = "0x9D35A0", VA = "0x9D35A0")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x9D3690", Offset = "0x9D3690", VA = "0x9D3690")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x9D3788", Offset = "0x9D3788", VA = "0x9D3788")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x60018FB")]
		[Address(RVA = "0x9D3890", Offset = "0x9D3890", VA = "0x9D3890")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x60018FC")]
		[Address(RVA = "0x9D3988", Offset = "0x9D3988", VA = "0x9D3988")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x9D3A98", Offset = "0x9D3A98", VA = "0x9D3A98")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x9D3BA0", Offset = "0x9D3BA0", VA = "0x9D3BA0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x9D3D00", Offset = "0x9D3D00", VA = "0x9D3D00")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001900")]
		[Address(RVA = "0x9D3DA0", Offset = "0x9D3DA0", VA = "0x9D3DA0")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001901")]
		[Address(RVA = "0x9D3EA0", Offset = "0x9D3EA0", VA = "0x9D3EA0")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001902")]
		[Address(RVA = "0x9D4060", Offset = "0x9D4060", VA = "0x9D4060")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001903")]
		[Address(RVA = "0x9D4200", Offset = "0x9D4200", VA = "0x9D4200")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001904")]
		[Address(RVA = "0x9D4320", Offset = "0x9D4320", VA = "0x9D4320")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001905")]
		[Address(RVA = "0x9D4410", Offset = "0x9D4410", VA = "0x9D4410")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001906")]
		[Address(RVA = "0x9D4500", Offset = "0x9D4500", VA = "0x9D4500")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001907")]
		[Address(RVA = "0x9D45E8", Offset = "0x9D45E8", VA = "0x9D45E8")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001908")]
		[Address(RVA = "0x9D46D8", Offset = "0x9D46D8", VA = "0x9D46D8")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x9D47F0", Offset = "0x9D47F0", VA = "0x9D47F0")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x9D4970", Offset = "0x9D4970", VA = "0x9D4970")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600190B")]
		[Address(RVA = "0x9D4890", Offset = "0x9D4890", VA = "0x9D4890")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x600190C")]
		[Address(RVA = "0x9D4BFC", Offset = "0x9D4BFC", VA = "0x9D4BFC")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x600190D")]
		[Address(RVA = "0x9D4D60", Offset = "0x9D4D60", VA = "0x9D4D60")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x600190E")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x9D4E40", Offset = "0x9D4E40", VA = "0x9D4E40")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001910")]
		[Address(RVA = "0x9D5150", Offset = "0x9D5150", VA = "0x9D5150")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x9D5230", Offset = "0x9D5230", VA = "0x9D5230")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001912")]
		[Address(RVA = "0x9D5398", Offset = "0x9D5398", VA = "0x9D5398")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x9D5484", Offset = "0x9D5484", VA = "0x9D5484")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001914")]
		[Address(RVA = "0x9D55E8", Offset = "0x9D55E8", VA = "0x9D55E8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x9D56D4", Offset = "0x9D56D4", VA = "0x9D56D4")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001916")]
		[Address(RVA = "0x9D5838", Offset = "0x9D5838", VA = "0x9D5838")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x9D591C", Offset = "0x9D591C", VA = "0x9D591C")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001918")]
		[Address(RVA = "0x9D5A80", Offset = "0x9D5A80", VA = "0x9D5A80")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001919")]
		[Address(RVA = "0x9D5B68", Offset = "0x9D5B68", VA = "0x9D5B68")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x600191A")]
		[Address(RVA = "0x9D5C50", Offset = "0x9D5C50", VA = "0x9D5C50")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x600191B")]
		[Address(RVA = "0x9D5D48", Offset = "0x9D5D48", VA = "0x9D5D48")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x9D5E5C", Offset = "0x9D5E5C", VA = "0x9D5E5C")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x9D606C", Offset = "0x9D606C", VA = "0x9D606C")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x600191E")]
		[Address(RVA = "0x9D61A0", Offset = "0x9D61A0", VA = "0x9D61A0")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600191F")]
		[Address(RVA = "0x9D5F90", Offset = "0x9D5F90", VA = "0x9D5F90")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001920")]
		[Address(RVA = "0x9D6288", Offset = "0x9D6288", VA = "0x9D6288")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001921")]
		[Address(RVA = "0x9D6370", Offset = "0x9D6370", VA = "0x9D6370")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001922")]
		[Address(RVA = "0x9D6460", Offset = "0x9D6460", VA = "0x9D6460")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001923")]
		[Address(RVA = "0x9D6540", Offset = "0x9D6540", VA = "0x9D6540")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001924")]
		[Address(RVA = "0x9D6630", Offset = "0x9D6630", VA = "0x9D6630")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001925")]
		[Address(RVA = "0x9D6720", Offset = "0x9D6720", VA = "0x9D6720")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x9D6838", Offset = "0x9D6838", VA = "0x9D6838")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001927")]
		[Address(RVA = "0x9D6AE8", Offset = "0x9D6AE8", VA = "0x9D6AE8")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001928")]
		[Address(RVA = "0x9D6BD4", Offset = "0x9D6BD4", VA = "0x9D6BD4")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001929")]
		[Address(RVA = "0x9D6DC0", Offset = "0x9D6DC0", VA = "0x9D6DC0")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x9D6EB4", Offset = "0x9D6EB4", VA = "0x9D6EB4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x600192B")]
		[Address(RVA = "0x9D6FE8", Offset = "0x9D6FE8", VA = "0x9D6FE8")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x600192C")]
		[Address(RVA = "0x9D70C8", Offset = "0x9D70C8", VA = "0x9D70C8")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x9D71A8", Offset = "0x9D71A8", VA = "0x9D71A8")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x600192E")]
		[Address(RVA = "0x9D72E0", Offset = "0x9D72E0", VA = "0x9D72E0")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x9D73BC", Offset = "0x9D73BC", VA = "0x9D73BC")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001930")]
		[Address(RVA = "0x9D74F0", Offset = "0x9D74F0", VA = "0x9D74F0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001931")]
		[Address(RVA = "0x9D75E0", Offset = "0x9D75E0", VA = "0x9D75E0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001932")]
		[Address(RVA = "0x9D76D0", Offset = "0x9D76D0", VA = "0x9D76D0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001933")]
		[Address(RVA = "0x9D77C8", Offset = "0x9D77C8", VA = "0x9D77C8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001934")]
		[Address(RVA = "0x9D78C0", Offset = "0x9D78C0", VA = "0x9D78C0")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001935")]
		[Address(RVA = "0x9D79B0", Offset = "0x9D79B0", VA = "0x9D79B0")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001936")]
		[Address(RVA = "0x9D7AA8", Offset = "0x9D7AA8", VA = "0x9D7AA8")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001937")]
		[Address(RVA = "0x9D7BA8", Offset = "0x9D7BA8", VA = "0x9D7BA8")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001938")]
		[Address(RVA = "0x9D7C98", Offset = "0x9D7C98", VA = "0x9D7C98")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001939")]
		[Address(RVA = "0x9D7D90", Offset = "0x9D7D90", VA = "0x9D7D90")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600193A")]
		[Address(RVA = "0x9D7EB0", Offset = "0x9D7EB0", VA = "0x9D7EB0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600193B")]
		[Address(RVA = "0x9D7FB0", Offset = "0x9D7FB0", VA = "0x9D7FB0")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600193C")]
		[Address(RVA = "0x9D80A0", Offset = "0x9D80A0", VA = "0x9D80A0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600193D")]
		[Address(RVA = "0x9D8190", Offset = "0x9D8190", VA = "0x9D8190")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600193E")]
		[Address(RVA = "0x9D8280", Offset = "0x9D8280", VA = "0x9D8280")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x600193F")]
		[Address(RVA = "0x9D8370", Offset = "0x9D8370", VA = "0x9D8370")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001940")]
		[Address(RVA = "0x9D8470", Offset = "0x9D8470", VA = "0x9D8470")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001941")]
		[Address(RVA = "0x9D8560", Offset = "0x9D8560", VA = "0x9D8560")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001942")]
		[Address(RVA = "0x9D8650", Offset = "0x9D8650", VA = "0x9D8650")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001943")]
		[Address(RVA = "0x9D8738", Offset = "0x9D8738", VA = "0x9D8738")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001944")]
		[Address(RVA = "0x9D8838", Offset = "0x9D8838", VA = "0x9D8838")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001945")]
		[Address(RVA = "0x9D8940", Offset = "0x9D8940", VA = "0x9D8940")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001946")]
		[Address(RVA = "0x9D8A38", Offset = "0x9D8A38", VA = "0x9D8A38")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001947")]
		[Address(RVA = "0x9D8B30", Offset = "0x9D8B30", VA = "0x9D8B30")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001948")]
		[Address(RVA = "0x9D8C68", Offset = "0x9D8C68", VA = "0x9D8C68")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001949")]
		[Address(RVA = "0x9D8D54", Offset = "0x9D8D54", VA = "0x9D8D54")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x600194A")]
		[Address(RVA = "0x9D8E88", Offset = "0x9D8E88", VA = "0x9D8E88")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x600194B")]
		[Address(RVA = "0x9D8F78", Offset = "0x9D8F78", VA = "0x9D8F78")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600194C")]
		[Address(RVA = "0x9D90E0", Offset = "0x9D90E0", VA = "0x9D90E0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x600194D")]
		[Address(RVA = "0x9D91D0", Offset = "0x9D91D0", VA = "0x9D91D0")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0x9D93F0", Offset = "0x9D93F0", VA = "0x9D93F0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x600194F")]
		[Address(RVA = "0x9D9728", Offset = "0x9D9728", VA = "0x9D9728")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001950")]
		[Address(RVA = "0x9D9308", Offset = "0x9D9308", VA = "0x9D9308")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001951")]
		[Address(RVA = "0x9D9818", Offset = "0x9D9818", VA = "0x9D9818")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001952")]
		[Address(RVA = "0x9D9900", Offset = "0x9D9900", VA = "0x9D9900")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001953")]
		[Address(RVA = "0x9D99E8", Offset = "0x9D99E8", VA = "0x9D99E8")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001954")]
		[Address(RVA = "0x9D9AD0", Offset = "0x9D9AD0", VA = "0x9D9AD0")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001955")]
		[Address(RVA = "0x9D9BB8", Offset = "0x9D9BB8", VA = "0x9D9BB8")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001956")]
		[Address(RVA = "0x9D9CB8", Offset = "0x9D9CB8", VA = "0x9D9CB8")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001957")]
		[Address(RVA = "0x9D9DB8", Offset = "0x9D9DB8", VA = "0x9D9DB8")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001958")]
		[Address(RVA = "0x9D9EA8", Offset = "0x9D9EA8", VA = "0x9D9EA8")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001959")]
		[Address(RVA = "0x9D9F88", Offset = "0x9D9F88", VA = "0x9D9F88")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x600195A")]
		[Address(RVA = "0x9DA068", Offset = "0x9DA068", VA = "0x9DA068")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600195B")]
		[Address(RVA = "0x9DA180", Offset = "0x9DA180", VA = "0x9DA180")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600195C")]
		[Address(RVA = "0x9DA268", Offset = "0x9DA268", VA = "0x9DA268")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x600195D")]
		[Address(RVA = "0x9DA378", Offset = "0x9DA378", VA = "0x9DA378")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600195E")]
		[Address(RVA = "0x9DA530", Offset = "0x9DA530", VA = "0x9DA530")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x600195F")]
		[Address(RVA = "0x9DA650", Offset = "0x9DA650", VA = "0x9DA650")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x9DA738", Offset = "0x9DA738", VA = "0x9DA738")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x9DA7B8", Offset = "0x9DA7B8", VA = "0x9DA7B8")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001962")]
		[Address(RVA = "0x9DA910", Offset = "0x9DA910", VA = "0x9DA910")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x9DA9FC", Offset = "0x9DA9FC", VA = "0x9DA9FC")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001964")]
		[Address(RVA = "0x9DAB98", Offset = "0x9DAB98", VA = "0x9DAB98")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001965")]
		[Address(RVA = "0x9DAC78", Offset = "0x9DAC78", VA = "0x9DAC78")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x9DADA8", Offset = "0x9DADA8", VA = "0x9DADA8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001967")]
		[Address(RVA = "0x9DB360", Offset = "0x9DB360", VA = "0x9DB360")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001968")]
		[Address(RVA = "0x9DB440", Offset = "0x9DB440", VA = "0x9DB440")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x9DB52C", Offset = "0x9DB52C", VA = "0x9DB52C")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600196A")]
		[Address(RVA = "0x9DC248", Offset = "0x9DC248", VA = "0x9DC248")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x600196B")]
		[Address(RVA = "0x9DC320", Offset = "0x9DC320", VA = "0x9DC320")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x9D23C4", Offset = "0x9D23C4", VA = "0x9D23C4")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5D0274", Offset = "0x5D0274")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x600196D")]
		[Address(RVA = "0x9DC448", Offset = "0x9DC448", VA = "0x9DC448")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x600196E")]
		[Address(RVA = "0x9DC538", Offset = "0x9DC538", VA = "0x9DC538")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x600196F")]
		[Address(RVA = "0x9DC650", Offset = "0x9DC650", VA = "0x9DC650")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001970")]
		[Address(RVA = "0x9DC730", Offset = "0x9DC730", VA = "0x9DC730")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001971")]
		[Address(RVA = "0x9DC808", Offset = "0x9DC808", VA = "0x9DC808")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001972")]
		[Address(RVA = "0x9DD958", Offset = "0x9DD958", VA = "0x9DD958")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x9DDA38", Offset = "0x9DDA38", VA = "0x9DDA38")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001974")]
		[Address(RVA = "0x9DE0F0", Offset = "0x9DE0F0", VA = "0x9DE0F0")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x9DDEDC", Offset = "0x9DDEDC", VA = "0x9DDEDC")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0x9DE1E4", Offset = "0x9DE1E4", VA = "0x9DE1E4")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x200032B")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4001FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x5C7B0C", Offset = "0x5C7B0C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4001FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x11FD52C", Offset = "0x11FD52C", VA = "0x11FD52C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x11FD530", Offset = "0x11FD530", VA = "0x11FD530")]
		private void Update()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x11FD63C", Offset = "0x11FD63C", VA = "0x11FD63C")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool autoActivate;

		[Token(Token = "0x4001FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7B8C", Offset = "0x5C7B8C")]
		public bool autoRetrigger;

		[Token(Token = "0x4001FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C7BC0", Offset = "0x5C7BC0")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7C08", Offset = "0x5C7C08")]
		public Transform[] playPositions;

		[Token(Token = "0x4001FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool activated;

		[Token(Token = "0x4001FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int playingIdx;

		[Token(Token = "0x4001FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float nextPlayTime;

		[Token(Token = "0x4001FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float fadeTime;

		[Token(Token = "0x4001FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastPosIdx;

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x11F0878", Offset = "0x11F0878", VA = "0x11F0878")]
		private void Awake()
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x11F0A10", Offset = "0x11F0A10", VA = "0x11F0A10")]
		private void Update()
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x11F0CEC", Offset = "0x11F0CEC", VA = "0x11F0CEC")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0x11F0A78", Offset = "0x11F0A78", VA = "0x11F0A78")]
		public void Play()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0x11F0E70", Offset = "0x11F0E70", VA = "0x11F0E70")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0x11F1028", Offset = "0x11F1028", VA = "0x11F1028")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001FBA")]
		Default,
		[Token(Token = "0x4001FBB")]
		Preload,
		[Token(Token = "0x4001FBC")]
		ManualPreload
	}
	[Token(Token = "0x200032E")]
	public enum Fade
	{
		[Token(Token = "0x4001FBE")]
		In,
		[Token(Token = "0x4001FBF")]
		Out
	}
	[Serializable]
	[Token(Token = "0x200032F")]
	public class SoundGroup
	{
		[Token(Token = "0x4001FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x4001FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C7C3C", Offset = "0x5C7C3C")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float volumeOverride;

		[Token(Token = "0x4001FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C7C58", Offset = "0x5C7C58")]
		public int playingSoundCount;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0x11FD3E0", Offset = "0x11FD3E0", VA = "0x11FD3E0")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0x11FD480", Offset = "0x11FD480", VA = "0x11FD480")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x11FB974", Offset = "0x11FB974", VA = "0x11FB974")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x11FBAC0", Offset = "0x11FBAC0", VA = "0x11FBAC0")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x11FC8E0", Offset = "0x11FC8E0", VA = "0x11FC8E0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000330")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20005FE")]
		public enum Fade
		{
			[Token(Token = "0x4002EB5")]
			In,
			[Token(Token = "0x4002EB6")]
			Out
		}

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F8C", Offset = "0x5C2F8C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4002EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SoundPriority priority;

			[Token(Token = "0x6002972")]
			[Address(RVA = "0x11F75A4", Offset = "0x11F75A4", VA = "0x11F75A4")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002973")]
			[Address(RVA = "0x11FB24C", Offset = "0x11FB24C", VA = "0x11FB24C")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2F9C", Offset = "0x5C2F9C")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6002975")]
			[Address(RVA = "0x11FB18C", Offset = "0x11FB18C", VA = "0x11FB18C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002976")]
			[Address(RVA = "0x11FB194", Offset = "0x11FB194", VA = "0x11FB194")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7C68", Offset = "0x5C7C68")]
		public bool makePersistent;

		[Token(Token = "0x4001FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7CD0", Offset = "0x5C7CD0")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7D24", Offset = "0x5C7D24")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7D90", Offset = "0x5C7D90")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7DF4", Offset = "0x5C7DF4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7E54", Offset = "0x5C7E54")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7EBC", Offset = "0x5C7EBC")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7F14", Offset = "0x5C7F14")]
		public bool verboseLogging;

		[Token(Token = "0x4001FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7F70", Offset = "0x5C7F70")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7FB4", Offset = "0x5C7FB4")]
		public float volumeSoundFX;

		[Token(Token = "0x4001FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C7FE8", Offset = "0x5C7FE8")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static FastList<string> names;

		[Token(Token = "0x4001FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] defaultSound;

		[Token(Token = "0x4001FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static bool hideWarnings;

		[Token(Token = "0x4001FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private static bool soundEnabled;

		[Token(Token = "0x4001FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001AE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001986")]
			[Address(RVA = "0x11F110C", Offset = "0x11F110C", VA = "0x11F110C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001987")]
			[Address(RVA = "0x11F1244", Offset = "0x11F1244", VA = "0x11F1244")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B0")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001988")]
			[Address(RVA = "0x11F12D0", Offset = "0x11F12D0", VA = "0x11F12D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B1")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001989")]
			[Address(RVA = "0x11F1370", Offset = "0x11F1370", VA = "0x11F1370")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600198A")]
			[Address(RVA = "0x11F1410", Offset = "0x11F1410", VA = "0x11F1410")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600198B")]
			[Address(RVA = "0x11F14B0", Offset = "0x11F14B0", VA = "0x11F14B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x11F1550", Offset = "0x11F1550", VA = "0x11F1550")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001997")]
			[Address(RVA = "0x11F4690", Offset = "0x11F4690", VA = "0x11F4690")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0x11F15F0", Offset = "0x11F15F0", VA = "0x11F15F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0x11F18E0", Offset = "0x11F18E0", VA = "0x11F18E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0x11F15F4", Offset = "0x11F15F4", VA = "0x11F15F4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0x11F2E48", Offset = "0x11F2E48", VA = "0x11F2E48")]
		private void Update()
		{
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0x11F1ABC", Offset = "0x11F1ABC", VA = "0x11F1ABC")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0x11F3828", Offset = "0x11F3828", VA = "0x11F3828")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0x11F3A78", Offset = "0x11F3A78", VA = "0x11F3A78")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x11F3CC0", Offset = "0x11F3CC0", VA = "0x11F3CC0")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x11F3E2C", Offset = "0x11F3E2C", VA = "0x11F3E2C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11F3F20", Offset = "0x11F3F20", VA = "0x11F3F20")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0x11F23FC", Offset = "0x11F23FC", VA = "0x11F23FC")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0x11F2E4C", Offset = "0x11F2E4C", VA = "0x11F2E4C")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0x11F4A00", Offset = "0x11F4A00", VA = "0x11F4A00")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0x11F4B40", Offset = "0x11F4B40", VA = "0x11F4B40")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0x11F4C80", Offset = "0x11F4C80", VA = "0x11F4C80")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0x11F4854", Offset = "0x11F4854", VA = "0x11F4854")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0x11F4E90", Offset = "0x11F4E90", VA = "0x11F4E90")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0x11F5038", Offset = "0x11F5038", VA = "0x11F5038")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0x11F52C0", Offset = "0x11F52C0", VA = "0x11F52C0")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0x11F0D78", Offset = "0x11F0D78", VA = "0x11F0D78")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x11F0F30", Offset = "0x11F0F30", VA = "0x11F0F30")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0x11F54C8", Offset = "0x11F54C8", VA = "0x11F54C8")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0x11F55DC", Offset = "0x11F55DC", VA = "0x11F55DC")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0x11F569C", Offset = "0x11F569C", VA = "0x11F569C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0x11F57C8", Offset = "0x11F57C8", VA = "0x11F57C8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0x11F58B4", Offset = "0x11F58B4", VA = "0x11F58B4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x60019A8")]
		[Address(RVA = "0x11F59E4", Offset = "0x11F59E4", VA = "0x11F59E4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x11F6B0C", Offset = "0x11F6B0C", VA = "0x11F6B0C")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x11F75AC", Offset = "0x11F75AC", VA = "0x11F75AC")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x11F77DC", Offset = "0x11F77DC", VA = "0x11F77DC")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x11F8D94", Offset = "0x11F8D94", VA = "0x11F8D94")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x11F5C30", Offset = "0x11F5C30", VA = "0x11F5C30")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0x11F8EB8", Offset = "0x11F8EB8", VA = "0x11F8EB8")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0x11F9018", Offset = "0x11F9018", VA = "0x11F9018")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0x11F9184", Offset = "0x11F9184", VA = "0x11F9184")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0x11F971C", Offset = "0x11F971C", VA = "0x11F971C")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0x11F99E4", Offset = "0x11F99E4", VA = "0x11F99E4")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0x11F9B30", Offset = "0x11F9B30", VA = "0x11F9B30")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0x11F9D78", Offset = "0x11F9D78", VA = "0x11F9D78")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0x11F9EA8", Offset = "0x11F9EA8", VA = "0x11F9EA8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0x11FA060", Offset = "0x11FA060", VA = "0x11FA060")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x11FA698", Offset = "0x11FA698", VA = "0x11FA698")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001FE7")]
		None = -1,
		[Token(Token = "0x4001FE8")]
		Reserved,
		[Token(Token = "0x4001FE9")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transitionTime;

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0x11FB358", Offset = "0x11FB358", VA = "0x11FB358")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000333")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float minDefaultVal;

		[Token(Token = "0x4001FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float maxDefaultVal;

		[Token(Token = "0x4001FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float min;

		[Token(Token = "0x4001FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float max;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0x11FB30C", Offset = "0x11FB30C", VA = "0x11FB30C")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x2000334")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000601")]
		public enum FadeState
		{
			[Token(Token = "0x4002EBB")]
			Null,
			[Token(Token = "0x4002EBC")]
			FadingIn,
			[Token(Token = "0x4002EBD")]
			FadingOut,
			[Token(Token = "0x4002EBE")]
			Ducking
		}

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FAC", Offset = "0x5C2FAC")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public SoundEmitter other;

			[Token(Token = "0x4002EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeTime;

			[Token(Token = "0x4002EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float toVolume;

			[Token(Token = "0x1700036D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600297A")]
				[Address(RVA = "0x11FC0C4", Offset = "0x11FC0C4", VA = "0x11FC0C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700036E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600297C")]
				[Address(RVA = "0x11FC154", Offset = "0x11FC154", VA = "0x11FC154", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002977")]
			[Address(RVA = "0x11FBCEC", Offset = "0x11FBCEC", VA = "0x11FBCEC")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6002978")]
			[Address(RVA = "0x11FBF8C", Offset = "0x11FBF8C", VA = "0x11FBF8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002979")]
			[Address(RVA = "0x11FBF90", Offset = "0x11FBF90", VA = "0x11FBF90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600297B")]
			[Address(RVA = "0x11FC0CC", Offset = "0x11FC0CC", VA = "0x11FC0CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FBC", Offset = "0x5C2FBC")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float toVolume;

			[Token(Token = "0x4002EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float fadeTime;

			[Token(Token = "0x4002ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <start>5__2;

			[Token(Token = "0x4002ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private float <end>5__3;

			[Token(Token = "0x4002ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <startTime>5__4;

			[Token(Token = "0x4002ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x1700036F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002980")]
				[Address(RVA = "0x11FC740", Offset = "0x11FC740", VA = "0x11FC740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000370")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002982")]
				[Address(RVA = "0x11FC7D0", Offset = "0x11FC7D0", VA = "0x11FC7D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600297D")]
			[Address(RVA = "0x11FBF34", Offset = "0x11FBF34", VA = "0x11FBF34")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x600297E")]
			[Address(RVA = "0x11FC558", Offset = "0x11FC558", VA = "0x11FC558", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600297F")]
			[Address(RVA = "0x11FC55C", Offset = "0x11FC55C", VA = "0x11FC55C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002981")]
			[Address(RVA = "0x11FC748", Offset = "0x11FC748", VA = "0x11FC748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FCC", Offset = "0x5C2FCC")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delaySecs;

			[Token(Token = "0x4002ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Fade fadeType;

			[Token(Token = "0x4002ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float defaultVolume;

			[Token(Token = "0x4002ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float fadeTime;

			[Token(Token = "0x4002ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private float <start>5__2;

			[Token(Token = "0x4002ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <end>5__3;

			[Token(Token = "0x4002ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4002ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__5;

			[Token(Token = "0x4002ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000371")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002986")]
				[Address(RVA = "0x11FC4C0", Offset = "0x11FC4C0", VA = "0x11FC4C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000372")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002988")]
				[Address(RVA = "0x11FC550", Offset = "0x11FC550", VA = "0x11FC550", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002983")]
			[Address(RVA = "0x11FBF54", Offset = "0x11FBF54", VA = "0x11FBF54")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6002984")]
			[Address(RVA = "0x11FC15C", Offset = "0x11FC15C", VA = "0x11FC15C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002985")]
			[Address(RVA = "0x11FC160", Offset = "0x11FC160", VA = "0x11FC160", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002987")]
			[Address(RVA = "0x11FC4C8", Offset = "0x11FC4C8", VA = "0x11FC4C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EmitterChannel channel;

		[Token(Token = "0x4001FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool disableSpatialization;

		[Token(Token = "0x4001FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8028", Offset = "0x5C8028")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8038", Offset = "0x5C8038")]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8048", Offset = "0x5C8048")]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8058", Offset = "0x5C8058")]
		public float endPlayTime;

		[Token(Token = "0x4001FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8068", Offset = "0x5C8068")]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8078", Offset = "0x5C8078")]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8088", Offset = "0x5C8088")]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C8098", Offset = "0x5C8098")]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C80A8", Offset = "0x5C80A8")]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C80B8", Offset = "0x5C80B8")]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C80C8", Offset = "0x5C80C8")]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001B6")]
		public float volume
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x11F8D68", Offset = "0x11F8D68", VA = "0x11F8D68")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x11FB3FC", Offset = "0x11FB3FC", VA = "0x11FB3FC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float pitch
		{
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x11FB430", Offset = "0x11FB430", VA = "0x11FB430")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019BE")]
			[Address(RVA = "0x11FB45C", Offset = "0x11FB45C", VA = "0x11FB45C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public AudioClip clip
		{
			[Token(Token = "0x60019BF")]
			[Address(RVA = "0x11FB490", Offset = "0x11FB490", VA = "0x11FB490")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019C0")]
			[Address(RVA = "0x11FB4BC", Offset = "0x11FB4BC", VA = "0x11FB4BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float time
		{
			[Token(Token = "0x60019C1")]
			[Address(RVA = "0x11FB4F0", Offset = "0x11FB4F0", VA = "0x11FB4F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019C2")]
			[Address(RVA = "0x11F59B0", Offset = "0x11F59B0", VA = "0x11F59B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public float length
		{
			[Token(Token = "0x60019C3")]
			[Address(RVA = "0x11FB51C", Offset = "0x11FB51C", VA = "0x11FB51C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BB")]
		public bool loop
		{
			[Token(Token = "0x60019C4")]
			[Address(RVA = "0x11FB614", Offset = "0x11FB614", VA = "0x11FB614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C5")]
			[Address(RVA = "0x11FB640", Offset = "0x11FB640", VA = "0x11FB640")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public bool mute
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0x11FB674", Offset = "0x11FB674", VA = "0x11FB674")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0x11FB6A0", Offset = "0x11FB6A0", VA = "0x11FB6A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x60019C8")]
			[Address(RVA = "0x11FB6D4", Offset = "0x11FB6D4", VA = "0x11FB6D4")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x60019C9")]
			[Address(RVA = "0x11FB700", Offset = "0x11FB700", VA = "0x11FB700")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public bool isPlaying
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x11FB734", Offset = "0x11FB734", VA = "0x11FB734")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0x11FB760", Offset = "0x11FB760", VA = "0x11FB760")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0x11F8D54", Offset = "0x11F8D54", VA = "0x11F8D54")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0x11F9010", Offset = "0x11F9010", VA = "0x11F9010")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x11F9178", Offset = "0x11F9178", VA = "0x11F9178")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0x11F4724", Offset = "0x11F4724", VA = "0x11F4724")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0x11F471C", Offset = "0x11F471C", VA = "0x11F471C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x11F9CBC", Offset = "0x11F9CBC", VA = "0x11F9CBC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x11F498C", Offset = "0x11F498C", VA = "0x11F498C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x11FBA14", Offset = "0x11FBA14", VA = "0x11FBA14")]
		public void Play()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x11FBA7C", Offset = "0x11FBA7C", VA = "0x11FBA7C")]
		public void Pause()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x11F472C", Offset = "0x11F472C", VA = "0x11F472C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0x11FBB60", Offset = "0x11FBB60", VA = "0x11FBB60")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x11F95DC", Offset = "0x11F95DC", VA = "0x11F95DC")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x11F98E8", Offset = "0x11F98E8", VA = "0x11F98E8")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x11F4E48", Offset = "0x11F4E48", VA = "0x11F4E48")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x11FBBD8", Offset = "0x11FBBD8", VA = "0x11FBBD8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x11FBC04", Offset = "0x11FBC04", VA = "0x11FBC04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D02EC", Offset = "0x5D02EC")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x11FBD0C", Offset = "0x11FBD0C", VA = "0x11FBD0C")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x11F53C0", Offset = "0x11F53C0", VA = "0x11F53C0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x11F5448", Offset = "0x11F5448", VA = "0x11F5448")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x11F521C", Offset = "0x11F521C", VA = "0x11F521C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x11F4F90", Offset = "0x11F4F90", VA = "0x11F4F90")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x11FBD64", Offset = "0x11FBD64", VA = "0x11FBD64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D0364", Offset = "0x5D0364")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x11FBE34", Offset = "0x11FBE34", VA = "0x11FBE34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D03DC", Offset = "0x5D03DC")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x11FBF74", Offset = "0x11FBF74", VA = "0x11FBF74")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4002000")]
		Random,
		[Token(Token = "0x4002001")]
		Sequential
	}
	[Token(Token = "0x2000336")]
	public enum FreqHint
	{
		[Token(Token = "0x4002003")]
		None,
		[Token(Token = "0x4002004")]
		Wide,
		[Token(Token = "0x4002005")]
		Narrow
	}
	[Token(Token = "0x2000337")]
	public enum SoundPriority
	{
		[Token(Token = "0x4002007")]
		VeryLow = -2,
		[Token(Token = "0x4002008")]
		Low,
		[Token(Token = "0x4002009")]
		Default,
		[Token(Token = "0x400200A")]
		High,
		[Token(Token = "0x400200B")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class OSPProps
	{
		[Token(Token = "0x400200C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C80D8", Offset = "0x5C80D8")]
		public bool enableSpatialization;

		[Token(Token = "0x400200D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C810C", Offset = "0x5C810C")]
		public bool useFastOverride;

		[Token(Token = "0x400200E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C816C", Offset = "0x5C816C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C816C", Offset = "0x5C816C")]
		public float gain;

		[Token(Token = "0x400200F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C81F4", Offset = "0x5C81F4")]
		public bool enableInvSquare;

		[Token(Token = "0x4002010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C825C", Offset = "0x5C825C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C825C", Offset = "0x5C825C")]
		public float volumetric;

		[Token(Token = "0x4002011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C82B0", Offset = "0x5C82B0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C82B0", Offset = "0x5C82B0")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x11FB368", Offset = "0x11FB368", VA = "0x11FB368")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class SoundFX
	{
		[Token(Token = "0x4002012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C831C", Offset = "0x5C831C")]
		public string name;

		[Token(Token = "0x4002013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8370", Offset = "0x5C8370")]
		public SoundFXNext playback;

		[Token(Token = "0x4002014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C83A4", Offset = "0x5C83A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C83A4", Offset = "0x5C83A4")]
		public float volume;

		[Token(Token = "0x4002015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C841C", Offset = "0x5C841C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C841C", Offset = "0x5C841C")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4002016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8480", Offset = "0x5C8480")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C8480", Offset = "0x5C8480")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4002017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8524", Offset = "0x5C8524")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4002018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8558", Offset = "0x5C8558")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4002019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C85AC", Offset = "0x5C85AC")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400201A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C85E0", Offset = "0x5C85E0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C85E0", Offset = "0x5C85E0")]
		public float spread;

		[Token(Token = "0x400201B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8634", Offset = "0x5C8634")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8634", Offset = "0x5C8634")]
		public float pctChanceToPlay;

		[Token(Token = "0x400201C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8684", Offset = "0x5C8684")]
		public SoundPriority priority;

		[Token(Token = "0x400201D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C86B8", Offset = "0x5C86B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x5C86B8", Offset = "0x5C86B8")]
		public Vector2 delay;

		[Token(Token = "0x400201E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C871C", Offset = "0x5C871C")]
		public bool looping;

		[Token(Token = "0x400201F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public OSPProps ospProps;

		[Token(Token = "0x4002020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8788", Offset = "0x5C8788")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4002021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4002022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4002023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int lastIdx;

		[Token(Token = "0x4002024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int playingIdx;

		[Token(Token = "0x170001BF")]
		public int Length
		{
			[Token(Token = "0x60019E6")]
			[Address(RVA = "0x11FC7D8", Offset = "0x11FC7D8", VA = "0x11FC7D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C0")]
		public bool IsValid
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0x11FC7FC", Offset = "0x11FC7FC", VA = "0x11FC7FC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001C1")]
		public SoundGroup Group
		{
			[Token(Token = "0x60019E8")]
			[Address(RVA = "0x11F8D4C", Offset = "0x11F8D4C", VA = "0x11F8D4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0x11F3820", Offset = "0x11F3820", VA = "0x11F3820")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x60019EA")]
			[Address(RVA = "0x11F8C24", Offset = "0x11F8C24", VA = "0x11F8C24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x60019EB")]
			[Address(RVA = "0x11F8C60", Offset = "0x11F8C60", VA = "0x11F8C60")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x11FAA88", Offset = "0x11FAA88", VA = "0x11FAA88")]
		public SoundFX()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x11F8AA8", Offset = "0x11F8AA8", VA = "0x11F8AA8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x11F8C8C", Offset = "0x11F8C8C", VA = "0x11F8C8C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x11F8C34", Offset = "0x11F8C34", VA = "0x11F8C34")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x11FC904", Offset = "0x11FC904", VA = "0x11FC904")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0x11F8C78", Offset = "0x11F8C78", VA = "0x11F8C78")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0x11FCA74", Offset = "0x11FCA74", VA = "0x11FCA74")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x11FCB78", Offset = "0x11FCB78", VA = "0x11FCB78")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x11FCCBC", Offset = "0x11FCCBC", VA = "0x11FCCBC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x11FCD50", Offset = "0x11FCD50", VA = "0x11FCD50")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x11FCDEC", Offset = "0x11FCDEC", VA = "0x11FCDEC")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0x11FCE90", Offset = "0x11FCE90", VA = "0x11FCE90")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0x11FCF24", Offset = "0x11FCF24", VA = "0x11FCF24")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public class SoundFXRef
	{
		[Token(Token = "0x4002025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string soundFXName;

		[Token(Token = "0x4002026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool initialized;

		[Token(Token = "0x4002027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001C4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x11FCFB0", Offset = "0x11FCFB0", VA = "0x11FCFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C5")]
		public string name
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x11FD0C4", Offset = "0x11FD0C4", VA = "0x11FD0C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x11FD0CC", Offset = "0x11FD0CC", VA = "0x11FD0CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public int Length
		{
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x11FD0D4", Offset = "0x11FD0D4", VA = "0x11FD0D4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C7")]
		public bool IsValid
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x11FD120", Offset = "0x11FD120", VA = "0x11FD120")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0x11FCFD4", Offset = "0x11FCFD4", VA = "0x11FCFD4")]
		private void Init()
		{
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0x11FD15C", Offset = "0x11FD15C", VA = "0x11FD15C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0x11FD198", Offset = "0x11FD198", VA = "0x11FD198")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x11FD1DC", Offset = "0x11FD1DC", VA = "0x11FD1DC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0x11F0CFC", Offset = "0x11F0CFC", VA = "0x11F0CFC")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x11FD220", Offset = "0x11FD220", VA = "0x11FD220")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x11FD264", Offset = "0x11FD264", VA = "0x11FD264")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x11FD2B0", Offset = "0x11FD2B0", VA = "0x11FD2B0")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x11FD2EC", Offset = "0x11FD2EC", VA = "0x11FD2EC")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x11FD330", Offset = "0x11FD330", VA = "0x11FD330")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x11FD36C", Offset = "0x11FD36C", VA = "0x11FD36C")]
		public SoundFXRef()
		{
		}
	}
}
namespace NatCorder
{
	[Token(Token = "0x200033B")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1C30", Offset = "0x5C1C30")]
	public sealed class GIFRecorder : IMediaRecorder, IDisposable, IAbstractRecorder
	{
		[Token(Token = "0x4002028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IMediaRecorder recorder;

		[Token(Token = "0x170001C8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D68F0", Offset = "0x5D68F0")]
		public int pixelWidth
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0x219DBD0", Offset = "0x219DBD0", VA = "0x219DBD0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001C9")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6924", Offset = "0x5D6924")]
		public int pixelHeight
		{
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0x219DCA8", Offset = "0x219DCA8", VA = "0x219DCA8", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CA")]
		private IMediaRecorder NatCorder.Internal.IAbstractRecorder.recorder
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x219E86C", Offset = "0x219E86C", VA = "0x219E86C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x219BC58", Offset = "0x219BC58", VA = "0x219BC58")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0454", Offset = "0x5D0454")]
		public GIFRecorder(int imageWidth, int imageHeight, float frameDuration, Action<string> recordingCallback)
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x219C5BC", Offset = "0x219C5BC", VA = "0x219C5BC", Slot = "9")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0490", Offset = "0x5D0490")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A0C")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D04DC", Offset = "0x5D04DC")]
		[AttributeAttribute(Name = "CodeAttribute", RVA = "0x5D04DC", Offset = "0x5D04DC")]
		public void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x219E76C", Offset = "0x219E76C", VA = "0x219E76C", Slot = "7")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0554", Offset = "0x5D0554")]
		public void CommitFrame(IntPtr nativeBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x219E868", Offset = "0x219E868", VA = "0x219E868", Slot = "8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D05A0", Offset = "0x5D05A0")]
		public void CommitSamples(float[] sampleBuffer, long timestamp)
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1C68", Offset = "0x5C1C68")]
	public sealed class HEVCRecorder : IMediaRecorder, IDisposable, IAbstractRecorder
	{
		[Token(Token = "0x4002029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IMediaRecorder recorder;

		[Token(Token = "0x170001CB")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6958", Offset = "0x5D6958")]
		public int pixelWidth
		{
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x219E874", Offset = "0x219E874", VA = "0x219E874", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D698C", Offset = "0x5D698C")]
		public int pixelHeight
		{
			[Token(Token = "0x6001A11")]
			[Address(RVA = "0x219E94C", Offset = "0x219E94C", VA = "0x219E94C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CD")]
		private IMediaRecorder NatCorder.Internal.IAbstractRecorder.recorder
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x219F39C", Offset = "0x219F39C", VA = "0x219F39C", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x219EA24", Offset = "0x219EA24", VA = "0x219EA24")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D05E0", Offset = "0x5D05E0")]
		public HEVCRecorder(int width, int height, float framerate, int sampleRate, int channelCount, Action<string> recordingCallback, int bitrate = 5909760, int keyframeInterval = 3)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x219F0CC", Offset = "0x219F0CC", VA = "0x219F0CC", Slot = "9")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0620", Offset = "0x5D0620")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A14")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D066C", Offset = "0x5D066C")]
		[AttributeAttribute(Name = "CodeAttribute", RVA = "0x5D066C", Offset = "0x5D066C")]
		public void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x219F1A4", Offset = "0x219F1A4", VA = "0x219F1A4", Slot = "7")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D06E4", Offset = "0x5D06E4")]
		public void CommitFrame(IntPtr nativeBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x219F2A0", Offset = "0x219F2A0", VA = "0x219F2A0", Slot = "8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0730", Offset = "0x5D0730")]
		[AttributeAttribute(Name = "CodeAttribute", RVA = "0x5D0730", Offset = "0x5D0730")]
		public void CommitSamples(float[] sampleBuffer, long timestamp)
		{
		}
	}
	[Token(Token = "0x200033D")]
	public interface IMediaRecorder : IDisposable
	{
		[Token(Token = "0x170001CE")]
		int pixelWidth
		{
			[Token(Token = "0x6001A18")]
			get;
		}

		[Token(Token = "0x170001CF")]
		int pixelHeight
		{
			[Token(Token = "0x6001A19")]
			get;
		}

		[Token(Token = "0x6001A1A")]
		void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct;

		[Token(Token = "0x6001A1B")]
		void CommitFrame(IntPtr nativeBuffer, long timestamp);

		[Token(Token = "0x6001A1C")]
		void CommitSamples(float[] sampleBuffer, long timestamp);
	}
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1CA4", Offset = "0x5C1CA4")]
	public sealed class MP4Recorder : IMediaRecorder, IDisposable, IAbstractRecorder
	{
		[Token(Token = "0x400202A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IMediaRecorder recorder;

		[Token(Token = "0x170001D0")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D69C0", Offset = "0x5D69C0")]
		public int pixelWidth
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x21A3120", Offset = "0x21A3120", VA = "0x21A3120", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D1")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D69F4", Offset = "0x5D69F4")]
		public int pixelHeight
		{
			[Token(Token = "0x6001A1E")]
			[Address(RVA = "0x21A31F8", Offset = "0x21A31F8", VA = "0x21A31F8", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D2")]
		private IMediaRecorder NatCorder.Internal.IAbstractRecorder.recorder
		{
			[Token(Token = "0x6001A24")]
			[Address(RVA = "0x21A34C8", Offset = "0x21A34C8", VA = "0x21A34C8", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x219CE50", Offset = "0x219CE50", VA = "0x219CE50")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D07A8", Offset = "0x5D07A8")]
		public MP4Recorder(int width, int height, float framerate, int sampleRate, int channelCount, Action<string> recordingCallback, int bitrate = 5909760, int keyframeInterval = 3)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x219D738", Offset = "0x219D738", VA = "0x219D738", Slot = "9")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D07E4", Offset = "0x5D07E4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A21")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0830", Offset = "0x5D0830")]
		[AttributeAttribute(Name = "CodeAttribute", RVA = "0x5D0830", Offset = "0x5D0830")]
		public void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct
		{
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x21A32D0", Offset = "0x21A32D0", VA = "0x21A32D0", Slot = "7")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D08A8", Offset = "0x5D08A8")]
		public void CommitFrame(IntPtr nativeBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x21A33CC", Offset = "0x21A33CC", VA = "0x21A33CC", Slot = "8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D08F4", Offset = "0x5D08F4")]
		[AttributeAttribute(Name = "CodeAttribute", RVA = "0x5D08F4", Offset = "0x5D08F4")]
		public void CommitSamples(float[] sampleBuffer, long timestamp)
		{
		}
	}
}
namespace NatCorder.Inputs
{
	[Token(Token = "0x200033F")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1CDC", Offset = "0x5C1CDC")]
	public sealed class AudioInput : IDisposable
	{
		[Token(Token = "0x2000605")]
		private class AudioInputAttachment : MonoBehaviour
		{
			[Token(Token = "0x4002EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Action<float[]> sampleBufferDelegate;

			[Token(Token = "0x6002989")]
			[Address(RVA = "0x219F68C", Offset = "0x219F68C", VA = "0x219F68C")]
			private void OnAudioFilterRead(float[] data, int channels)
			{
			}

			[Token(Token = "0x600298A")]
			[Address(RVA = "0x219F700", Offset = "0x219F700", VA = "0x219F700")]
			public AudioInputAttachment()
			{
			}
		}

		[Token(Token = "0x400202B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IMediaRecorder mediaRecorder;

		[Token(Token = "0x400202C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly IClock clock;

		[Token(Token = "0x400202D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly AudioInputAttachment attachment;

		[Token(Token = "0x400202E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly bool mute;

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x219F3A4", Offset = "0x219F3A4", VA = "0x219F3A4")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D096C", Offset = "0x5D096C")]
		public AudioInput(IMediaRecorder mediaRecorder, IClock clock, AudioListener audioListener)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x219D4D4", Offset = "0x219D4D4", VA = "0x219D4D4")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D09B0", Offset = "0x5D09B0")]
		public AudioInput(IMediaRecorder mediaRecorder, IClock clock, AudioSource audioSource, bool mute = false)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x219D694", Offset = "0x219D694", VA = "0x219D694", Slot = "4")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D09F4", Offset = "0x5D09F4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x219F4B8", Offset = "0x219F4B8", VA = "0x219F4B8")]
		private void OnSampleBuffer(float[] data)
		{
		}
	}
	[Token(Token = "0x2000340")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1D14", Offset = "0x5C1D14")]
	public sealed class CameraInput : IDisposable
	{
		[Token(Token = "0x2000606")]
		private sealed class CameraInputAttachment : MonoBehaviour
		{
			[Token(Token = "0x600298B")]
			[Address(RVA = "0x21A0450", Offset = "0x21A0450", VA = "0x21A0450")]
			public CameraInputAttachment()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FDC", Offset = "0x5C2FDC")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Comparison<Camera> <>9__1_0;

			[Token(Token = "0x600298D")]
			[Address(RVA = "0x219FF10", Offset = "0x219FF10", VA = "0x219FF10")]
			public <>c()
			{
			}

			[Token(Token = "0x600298E")]
			[Address(RVA = "0x219FF18", Offset = "0x219FF18", VA = "0x219FF18")]
			internal int <.ctor>b__1_0(Camera a, Camera b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FEC", Offset = "0x5C2FEC")]
		private sealed class <OnFrame>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraInput <>4__this;

			[Token(Token = "0x4002EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private WaitForEndOfFrame <yielder>5__2;

			[Token(Token = "0x17000373")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002992")]
				[Address(RVA = "0x21A03B8", Offset = "0x21A03B8", VA = "0x21A03B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000374")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002994")]
				[Address(RVA = "0x21A0448", Offset = "0x21A0448", VA = "0x21A0448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600298F")]
			[Address(RVA = "0x219FE7C", Offset = "0x219FE7C", VA = "0x219FE7C")]
			[DebuggerHidden]
			public <OnFrame>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002990")]
			[Address(RVA = "0x219FF88", Offset = "0x219FF88", VA = "0x219FF88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002991")]
			[Address(RVA = "0x219FF8C", Offset = "0x219FF8C", VA = "0x219FF8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002993")]
			[Address(RVA = "0x21A03C0", Offset = "0x21A03C0", VA = "0x21A03C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400202F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C87E8", Offset = "0x5C87E8")]
		public int frameSkip;

		[Token(Token = "0x4002030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly IClock clock;

		[Token(Token = "0x4002031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Camera[] cameras;

		[Token(Token = "0x4002032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly RenderTextureInput frameInput;

		[Token(Token = "0x4002033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CameraInputAttachment frameHelper;

		[Token(Token = "0x4002034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly RenderTexture framebuffer;

		[Token(Token = "0x4002035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int frameCount;

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x219C0E8", Offset = "0x219C0E8", VA = "0x219C0E8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0A28", Offset = "0x5D0A28")]
		public CameraInput(IMediaRecorder mediaRecorder, IClock clock, params Camera[] cameras)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x219C50C", Offset = "0x219C50C", VA = "0x219C50C", Slot = "4")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0A64", Offset = "0x5D0A64")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x219FB50", Offset = "0x219FB50", VA = "0x219FB50")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D0A98", Offset = "0x5D0A98")]
		private IEnumerator OnFrame()
		{
			return null;
		}
	}
	[Token(Token = "0x2000341")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1D4C", Offset = "0x5C1D4C")]
	public sealed class RenderTextureInput : IDisposable
	{
		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C2FFC", Offset = "0x5C2FFC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4002EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RenderTextureInput <>4__this;

			[Token(Token = "0x4002EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public AndroidJavaObject nativeRecorder;

			[Token(Token = "0x4002EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int textureID;

			[Token(Token = "0x4002EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public long timestamp;

			[Token(Token = "0x6002995")]
			[Address(RVA = "0x21A1088", Offset = "0x21A1088", VA = "0x21A1088")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x6002996")]
			[Address(RVA = "0x21A1284", Offset = "0x21A1284", VA = "0x21A1284")]
			internal void <CommitAndroid>b__0()
			{
			}
		}

		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C300C", Offset = "0x5C300C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x4002EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RenderTextureInput <>4__this;

			[Token(Token = "0x4002EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long timestamp;

			[Token(Token = "0x4002EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public IntPtr texturePtr;

			[Token(Token = "0x4002EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Action<IntPtr> commitFrame;

			[Token(Token = "0x6002997")]
			[Address(RVA = "0x21A1090", Offset = "0x21A1090", VA = "0x21A1090")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x6002998")]
			[Address(RVA = "0x21A14F0", Offset = "0x21A14F0", VA = "0x21A14F0")]
			internal void <CommitiOS>b__0(IntPtr pixelBuffer)
			{
			}

			[Token(Token = "0x6002999")]
			[Address(RVA = "0x21A16B8", Offset = "0x21A16B8", VA = "0x21A16B8")]
			internal void <CommitiOS>b__1()
			{
			}
		}

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C301C", Offset = "0x5C301C")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public RenderTextureInput <>4__this;

			[Token(Token = "0x4002EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public long timestamp;

			[Token(Token = "0x600299A")]
			[Address(RVA = "0x21A1098", Offset = "0x21A1098", VA = "0x21A1098")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600299B")]
			[Address(RVA = "0x21A10AC", Offset = "0x21A10AC", VA = "0x21A10AC")]
			internal void <CommitAsync>b__0(AsyncGPUReadbackRequest request)
			{
			}
		}

		[Token(Token = "0x4002036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly IMediaRecorder mediaRecorder;

		[Token(Token = "0x4002037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private readonly byte[] pixelBuffer;

		[Token(Token = "0x4002038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Texture2D readbackBuffer;

		[Token(Token = "0x4002039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly IntPtr readbackiOS;

		[Token(Token = "0x400203A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool disposed;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x219F708", Offset = "0x219F708", VA = "0x219F708")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0B10", Offset = "0x5D0B10")]
		public RenderTextureInput(IMediaRecorder mediaRecorder)
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x219FBDC", Offset = "0x219FBDC", VA = "0x219FBDC", Slot = "4")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0B54", Offset = "0x5D0B54")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x21A02FC", Offset = "0x21A02FC", VA = "0x21A02FC")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0B88", Offset = "0x5D0B88")]
		public void CommitFrame(RenderTexture framebuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x21A06D4", Offset = "0x21A06D4", VA = "0x21A06D4")]
		private void CommitAndroid(RenderTexture framebuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x21A0AB4", Offset = "0x21A0AB4", VA = "0x21A0AB4")]
		private void CommitiOS(RenderTexture framebuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x21A0E50", Offset = "0x21A0E50", VA = "0x21A0E50")]
		private void CommitSync(RenderTexture framebuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x21A0D40", Offset = "0x21A0D40", VA = "0x21A0D40")]
		private void CommitAsync(RenderTexture framebuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x21A0554", Offset = "0x21A0554", VA = "0x21A0554")]
		private static IntPtr MTLReadbackCreate(int width, int height)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x21A10A0", Offset = "0x21A10A0", VA = "0x21A10A0")]
		private static void MTLReadbackDispose(IntPtr readback)
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x21A10A4", Offset = "0x21A10A4", VA = "0x21A10A4")]
		private static void MTLReadbackReadback(IntPtr readback, IntPtr texture, Action<IntPtr, IntPtr> handler, IntPtr context)
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x21A0458", Offset = "0x21A0458", VA = "0x21A0458")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5D0BD4", Offset = "0x5D0BD4")]
		private static void OnReadback(IntPtr context, IntPtr pixelBuffer)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x21A10A8", Offset = "0x21A10A8", VA = "0x21A10A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0C4C", Offset = "0x5D0C4C")]
		private void <Dispose>b__1_0()
		{
		}
	}
}
namespace NatCorder.Internal
{
	[Token(Token = "0x2000342")]
	public interface IAbstractRecorder
	{
		[Token(Token = "0x170001D3")]
		IMediaRecorder recorder
		{
			[Token(Token = "0x6001A38")]
			get;
		}
	}
	[Token(Token = "0x2000343")]
	public sealed class MediaRecorderAndroid : AndroidJavaProxy, IMediaRecorder, IDisposable
	{
		[Token(Token = "0x400203B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C885C", Offset = "0x5C885C")]
		private int <pixelWidth>k__BackingField;

		[Token(Token = "0x400203C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C886C", Offset = "0x5C886C")]
		private int <pixelHeight>k__BackingField;

		[Token(Token = "0x400203D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly AndroidJavaObject recorder;

		[Token(Token = "0x400203E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly Action<string> callback;

		[Token(Token = "0x400203F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AndroidJavaObject nativeBuffer;

		[Token(Token = "0x4002040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly AndroidJavaClass Unmanaged;

		[Token(Token = "0x170001D4")]
		public int pixelWidth
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x21A1E90", Offset = "0x21A1E90", VA = "0x21A1E90", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0C5C", Offset = "0x5D0C5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A3A")]
			[Address(RVA = "0x21A1E98", Offset = "0x21A1E98", VA = "0x21A1E98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0C6C", Offset = "0x5D0C6C")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public int pixelHeight
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x21A1EA0", Offset = "0x21A1EA0", VA = "0x21A1EA0", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0C7C", Offset = "0x5D0C7C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x21A1EA8", Offset = "0x21A1EA8", VA = "0x21A1EA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0C8C", Offset = "0x5D0C8C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x219DEBC", Offset = "0x219DEBC", VA = "0x219DEBC")]
		public MediaRecorderAndroid(AndroidJavaObject recorder, int width, int height, string recordingPath, Action<string> callback)
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x21A1EB0", Offset = "0x21A1EB0", VA = "0x21A1EB0", Slot = "14")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A3F")]
		public void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x21A1FA8", Offset = "0x21A1FA8", VA = "0x21A1FA8", Slot = "12")]
		public void CommitFrame(IntPtr pixelBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x21A25E8", Offset = "0x21A25E8", VA = "0x21A25E8", Slot = "13")]
		public void CommitSamples(float[] sampleBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x21A276C", Offset = "0x21A276C", VA = "0x21A276C")]
		[AttributeAttribute(Name = "PreserveAttribute", RVA = "0x5D0C9C", Offset = "0x5D0C9C")]
		private void onRecording(string path)
		{
		}
	}
	[Token(Token = "0x2000344")]
	public static class MediaRecorderBridge
	{
		[Token(Token = "0x4002041")]
		private const string Assembly = "NatCorder";

		[Token(Token = "0x4002042")]
		private const UnmanagedType StringType = UnmanagedType.LPStr;

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x21A27EC", Offset = "0x21A27EC", VA = "0x21A27EC")]
		public static IntPtr CreateMP4Recorder(int width, int height, float framerate, int bitrate, int keyframeInterval, int sampleRate, int channelCount)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0x219F080", Offset = "0x219F080", VA = "0x219F080")]
		public static IntPtr CreateHEVCRecorder(int width, int height, float framerate, int bitrate, int keyframeInterval, int sampleRate, int channelCount)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0x219DD80", Offset = "0x219DD80", VA = "0x219DD80")]
		public static IntPtr CreateGIFRecorder(int width, int height, float frameDuration)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x21A2838", Offset = "0x21A2838", VA = "0x21A2838")]
		public static void StartRecording(this IntPtr recorder, string recordingDirectory, Action<IntPtr, IntPtr> callback, IntPtr context)
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x21A283C", Offset = "0x21A283C", VA = "0x21A283C")]
		public static void StopRecording(this IntPtr recorder)
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x21A2840", Offset = "0x21A2840", VA = "0x21A2840")]
		public static void EncodeFrame(this IntPtr recorder, IntPtr pixelBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x21A2844", Offset = "0x21A2844", VA = "0x21A2844")]
		public static void EncodeSamples(this IntPtr recorder, float[] sampleBuffer, int sampleCount, long timestamp)
		{
		}
	}
	[Token(Token = "0x2000345")]
	public interface IDispatcher : IDisposable
	{
		[Token(Token = "0x6001A4A")]
		void Dispatch(Action workload);
	}
	[Token(Token = "0x2000346")]
	public class MainDispatcher : IDispatcher, IDisposable
	{
		[Token(Token = "0x200060C")]
		private class DispatcherAttachment : MonoBehaviour, IDispatcher, IDisposable
		{
			[Token(Token = "0x4002EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private readonly Queue<Action> queue;

			[Token(Token = "0x600299C")]
			[Address(RVA = "0x21A1864", Offset = "0x21A1864", VA = "0x21A1864", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x600299D")]
			[Address(RVA = "0x21A1958", Offset = "0x21A1958", VA = "0x21A1958", Slot = "4")]
			public void Dispatch(Action workload)
			{
			}

			[Token(Token = "0x600299E")]
			[Address(RVA = "0x21A1B00", Offset = "0x21A1B00", VA = "0x21A1B00")]
			private void Awake()
			{
			}

			[Token(Token = "0x600299F")]
			[Address(RVA = "0x21A1BA0", Offset = "0x21A1BA0", VA = "0x21A1BA0")]
			private void Update()
			{
			}

			[Token(Token = "0x60029A0")]
			[Address(RVA = "0x21A1E04", Offset = "0x21A1E04", VA = "0x21A1E04")]
			public DispatcherAttachment()
			{
			}
		}

		[Token(Token = "0x4002043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly DispatcherAttachment attachment;

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x21A1784", Offset = "0x21A1784", VA = "0x21A1784")]
		public MainDispatcher()
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x21A183C", Offset = "0x21A183C", VA = "0x21A183C", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x21A1928", Offset = "0x21A1928", VA = "0x21A1928", Slot = "4")]
		public void Dispatch(Action workload)
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class RenderDispatcher : IDispatcher, IDisposable
	{
		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x5C302C", Offset = "0x5C302C")]
		private delegate void UnityRenderingEvent(int context);

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x21A2BFC", Offset = "0x21A2BFC", VA = "0x21A2BFC", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x21A05AC", Offset = "0x21A05AC", VA = "0x21A05AC", Slot = "4")]
		public void Dispatch(Action workload)
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x21A2B0C", Offset = "0x21A2B0C", VA = "0x21A2B0C")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5D0CEC", Offset = "0x5D0CEC")]
		private static void DequeueRender(int context)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x21A05A4", Offset = "0x21A05A4", VA = "0x21A05A4")]
		public RenderDispatcher()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public sealed class DocAttribute : Attribute
	{
		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x21A1774", Offset = "0x21A1774", VA = "0x21A1774")]
		public DocAttribute(string descriptionKey)
		{
		}

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x21A177C", Offset = "0x21A177C", VA = "0x21A177C")]
		public DocAttribute(string summaryKey, string descriptionKey)
		{
		}
	}
	[Token(Token = "0x2000349")]
	public sealed class CodeAttribute : Attribute
	{
		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x21A176C", Offset = "0x21A176C", VA = "0x21A176C")]
		public CodeAttribute(string key)
		{
		}
	}
	[Token(Token = "0x200034A")]
	public sealed class RefAttribute : Attribute
	{
		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x21A2B04", Offset = "0x21A2B04", VA = "0x21A2B04")]
		public RefAttribute(params string[] keys)
		{
		}
	}
	[Token(Token = "0x200034B")]
	public sealed class MediaRecorderiOS : IMediaRecorder, IDisposable
	{
		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3040", Offset = "0x5C3040")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MediaRecorderiOS instance;

			[Token(Token = "0x4002EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string pathStr;

			[Token(Token = "0x60029A5")]
			[Address(RVA = "0x21A2A38", Offset = "0x21A2A38", VA = "0x21A2A38")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60029A6")]
			[Address(RVA = "0x21A2A40", Offset = "0x21A2A40", VA = "0x21A2A40")]
			internal void <OnRecording>b__0()
			{
			}
		}

		[Token(Token = "0x4002044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C887C", Offset = "0x5C887C")]
		private int <pixelWidth>k__BackingField;

		[Token(Token = "0x4002045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C888C", Offset = "0x5C888C")]
		private int <pixelHeight>k__BackingField;

		[Token(Token = "0x4002046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly IntPtr recorder;

		[Token(Token = "0x4002047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly Action<string> callback;

		[Token(Token = "0x4002048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MainDispatcher callbackDispatcher;

		[Token(Token = "0x170001D6")]
		public int pixelWidth
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0x21A2A00", Offset = "0x21A2A00", VA = "0x21A2A00", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0D64", Offset = "0x5D0D64")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0x21A2A08", Offset = "0x21A2A08", VA = "0x21A2A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0D74", Offset = "0x5D0D74")]
			private set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public int pixelHeight
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0x21A2A10", Offset = "0x21A2A10", VA = "0x21A2A10", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0D84", Offset = "0x5D0D84")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0x21A2A18", Offset = "0x21A2A18", VA = "0x21A2A18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0D94", Offset = "0x5D0D94")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x219DDD0", Offset = "0x219DDD0", VA = "0x219DDD0")]
		public MediaRecorderiOS(IntPtr recorder, int width, int height, string recordingPath, Action<string> callback)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x21A2A20", Offset = "0x21A2A20", VA = "0x21A2A20", Slot = "9")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001A5C")]
		public void CommitFrame<T>(T[] pixelBuffer, long timestamp) where T : struct
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x21A2A24", Offset = "0x21A2A24", VA = "0x21A2A24", Slot = "7")]
		public void CommitFrame(IntPtr nativeBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x21A2A28", Offset = "0x21A2A28", VA = "0x21A2A28", Slot = "8")]
		public void CommitSamples(float[] sampleBuffer, long timestamp)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x21A2848", Offset = "0x21A2848", VA = "0x21A2848")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x5D0DA4", Offset = "0x5D0DA4")]
		private static void OnRecording(IntPtr context, IntPtr path)
		{
		}
	}
}
namespace NatCorder.Clocks
{
	[Token(Token = "0x200034C")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1D9C", Offset = "0x5C1D9C")]
	public class FixedIntervalClock : IClock
	{
		[Token(Token = "0x4002049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C889C", Offset = "0x5C889C")]
		private double <Interval>k__BackingField;

		[Token(Token = "0x400204A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C88AC", Offset = "0x5C88AC")]
		private long <Timestamp>k__BackingField;

		[Token(Token = "0x170001D8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6A28", Offset = "0x5D6A28")]
		public double Interval
		{
			[Token(Token = "0x6001A60")]
			[Address(RVA = "0x219B530", Offset = "0x219B530", VA = "0x219B530")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0E1C", Offset = "0x5D0E1C")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001A61")]
			[Address(RVA = "0x219B53C", Offset = "0x219B53C", VA = "0x219B53C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0E2C", Offset = "0x5D0E2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6A70", Offset = "0x5D6A70")]
		public long Timestamp
		{
			[MethodImpl(32)]
			[Token(Token = "0x6001A62")]
			[Address(RVA = "0x219B54C", Offset = "0x219B54C", VA = "0x219B54C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0E3C", Offset = "0x5D0E3C")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x219B554", Offset = "0x219B554", VA = "0x219B554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D0E4C", Offset = "0x5D0E4C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x219B564", Offset = "0x219B564", VA = "0x219B564")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0E5C", Offset = "0x5D0E5C")]
		public FixedIntervalClock(double interval)
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x219B598", Offset = "0x219B598", VA = "0x219B598")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0EA8", Offset = "0x5D0EA8")]
		public FixedIntervalClock(int framerate)
		{
		}

		[MethodImpl(32)]
		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x219B5D8", Offset = "0x219B5D8", VA = "0x219B5D8")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D0EF4", Offset = "0x5D0EF4")]
		public void Tick()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public interface IClock
	{
		[Token(Token = "0x170001DA")]
		long Timestamp
		{
			[Token(Token = "0x6001A67")]
			get;
		}
	}
	[Token(Token = "0x200034E")]
	[AttributeAttribute(Name = "DocAttribute", RVA = "0x5C1DDC", Offset = "0x5C1DDC")]
	public class RealtimeClock : IClock
	{
		[Token(Token = "0x400204B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private readonly Stopwatch stopwatch;

		[Token(Token = "0x170001DB")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6AA4", Offset = "0x5D6AA4")]
		public long Timestamp
		{
			[MethodImpl(32)]
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0x219B618", Offset = "0x219B618", VA = "0x219B618", Slot = "4")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170001DC")]
		[AttributeAttribute(Name = "DocAttribute", RVA = "0x5D6AD8", Offset = "0x5D6AD8")]
		public bool Paused
		{
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0x219B680", Offset = "0x219B680", VA = "0x219B680")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A6A")]
			[Address(RVA = "0x219B6B0", Offset = "0x219B6B0", VA = "0x219B6B0")]
			set
			{
			}
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x219B770", Offset = "0x219B770", VA = "0x219B770")]
		public RealtimeClock()
		{
		}
	}
}
namespace NatCorder.Examples
{
	[Token(Token = "0x200034F")]
	public class Giffy : MonoBehaviour
	{
		[Token(Token = "0x400204C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C88BC", Offset = "0x5C88BC")]
		public int imageWidth;

		[Token(Token = "0x400204D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int imageHeight;

		[Token(Token = "0x400204E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float frameDuration;

		[Token(Token = "0x400204F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GIFRecorder gifRecorder;

		[Token(Token = "0x4002050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private CameraInput cameraInput;

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x219BAA0", Offset = "0x219BAA0", VA = "0x219BAA0")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x219C4C4", Offset = "0x219C4C4", VA = "0x219C4C4")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x219C694", Offset = "0x219C694", VA = "0x219C694")]
		private void OnGIF(string path)
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0x219C744", Offset = "0x219C744", VA = "0x219C744")]
		public Giffy()
		{
		}
	}
	[Token(Token = "0x2000350")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1E18", Offset = "0x5C1E18")]
	public class CameraPreview : MonoBehaviour
	{
		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3050", Offset = "0x5C3050")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraPreview <>4__this;

			[Token(Token = "0x17000375")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029AA")]
				[Address(RVA = "0x219BA08", Offset = "0x219BA08", VA = "0x219BA08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000376")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029AC")]
				[Address(RVA = "0x219BA98", Offset = "0x219BA98", VA = "0x219BA98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029A7")]
			[Address(RVA = "0x219B88C", Offset = "0x219B88C", VA = "0x219B88C")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60029A8")]
			[Address(RVA = "0x219B8B4", Offset = "0x219B8B4", VA = "0x219B8B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029A9")]
			[Address(RVA = "0x219B8B8", Offset = "0x219B8B8", VA = "0x219B8B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029AB")]
			[Address(RVA = "0x219BA10", Offset = "0x219BA10", VA = "0x219BA10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool useFrontCamera;

		[Token(Token = "0x4002052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RawImage rawImage;

		[Token(Token = "0x4002053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private AspectRatioFitter aspectFitter;

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x219B800", Offset = "0x219B800", VA = "0x219B800")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D0F38", Offset = "0x5D0F38")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x219B8AC", Offset = "0x219B8AC", VA = "0x219B8AC")]
		public CameraPreview()
		{
		}
	}
	[Token(Token = "0x2000351")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C1EAC", Offset = "0x5C1EAC")]
	public class RecordButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3060", Offset = "0x5C3060")]
		private sealed class <Countdown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RecordButton <>4__this;

			[Token(Token = "0x4002EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <startTime>5__2;

			[Token(Token = "0x17000377")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029B0")]
				[Address(RVA = "0x219CB5C", Offset = "0x219CB5C", VA = "0x219CB5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000378")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B2")]
				[Address(RVA = "0x219CBEC", Offset = "0x219CBEC", VA = "0x219CBEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029AD")]
			[Address(RVA = "0x219C944", Offset = "0x219C944", VA = "0x219C944")]
			[DebuggerHidden]
			public <Countdown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60029AE")]
			[Address(RVA = "0x219C96C", Offset = "0x219C96C", VA = "0x219C96C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029AF")]
			[Address(RVA = "0x219C970", Offset = "0x219C970", VA = "0x219C970", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B1")]
			[Address(RVA = "0x219CB64", Offset = "0x219CB64", VA = "0x219CB64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Image button;

		[Token(Token = "0x4002055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image countdown;

		[Token(Token = "0x4002056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEvent onTouchDown;

		[Token(Token = "0x4002057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent onTouchUp;

		[Token(Token = "0x4002058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool pressed;

		[Token(Token = "0x4002059")]
		private const float MaxRecordingTime = 10f;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x219C768", Offset = "0x219C768", VA = "0x219C768")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x219C76C", Offset = "0x219C76C", VA = "0x219C76C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x219C888", Offset = "0x219C888", VA = "0x219C888", Slot = "4")]
		private void UnityEngine.EventSystems.IPointerDownHandler.OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x219C938", Offset = "0x219C938", VA = "0x219C938", Slot = "5")]
		private void UnityEngine.EventSystems.IPointerUpHandler.OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x219C8AC", Offset = "0x219C8AC", VA = "0x219C8AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D0FB0", Offset = "0x5D0FB0")]
		private IEnumerator Countdown()
		{
			return null;
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x219C964", Offset = "0x219C964", VA = "0x219C964")]
		public RecordButton()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class ReplayCam : MonoBehaviour
	{
		[Token(Token = "0x400205A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8908", Offset = "0x5C8908")]
		public int videoWidth;

		[Token(Token = "0x400205B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int videoHeight;

		[Token(Token = "0x400205C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8940", Offset = "0x5C8940")]
		public bool recordMicrophone;

		[Token(Token = "0x400205D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource microphoneSource;

		[Token(Token = "0x400205E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private MP4Recorder videoRecorder;

		[Token(Token = "0x400205F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IClock recordingClock;

		[Token(Token = "0x4002060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private CameraInput cameraInput;

		[Token(Token = "0x4002061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private AudioInput audioInput;

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x219CBF4", Offset = "0x219CBF4", VA = "0x219CBF4")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x219D4D0", Offset = "0x219D4D0", VA = "0x219D4D0")]
		private void StartMicrophone()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x219D5F0", Offset = "0x219D5F0", VA = "0x219D5F0")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x219D668", Offset = "0x219D668", VA = "0x219D668")]
		private void StopMicrophone()
		{
		}

		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x219D810", Offset = "0x219D810", VA = "0x219D810")]
		private void OnReplay(string path)
		{
		}

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x219D8C0", Offset = "0x219D8C0", VA = "0x219D8C0")]
		public ReplayCam()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class WebCam : MonoBehaviour
	{
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3070", Offset = "0x5C3070")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x17000379")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029B6")]
				[Address(RVA = "0x219DB38", Offset = "0x219DB38", VA = "0x219DB38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029B8")]
				[Address(RVA = "0x219DBC8", Offset = "0x219DBC8", VA = "0x219DBC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029B3")]
			[Address(RVA = "0x219D9F0", Offset = "0x219D9F0", VA = "0x219D9F0")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x60029B4")]
			[Address(RVA = "0x219DACC", Offset = "0x219DACC", VA = "0x219DACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029B5")]
			[Address(RVA = "0x219DAD0", Offset = "0x219DAD0", VA = "0x219DAD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029B7")]
			[Address(RVA = "0x219DB40", Offset = "0x219DB40", VA = "0x219DB40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RawImage rawImage;

		[Token(Token = "0x4002063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AspectRatioFitter aspectFitter;

		[Token(Token = "0x4002064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private MP4Recorder videoRecorder;

		[Token(Token = "0x4002065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IClock clock;

		[Token(Token = "0x4002066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color32[] pixelBuffer;

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x219D8D8", Offset = "0x219D8D8", VA = "0x219D8D8")]
		public void StartRecording()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x219D944", Offset = "0x219D944", VA = "0x219D944")]
		public void StopRecording()
		{
		}

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x219D97C", Offset = "0x219D97C", VA = "0x219D97C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1028", Offset = "0x5D1028")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x219DA10", Offset = "0x219DA10", VA = "0x219DA10")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x219DA14", Offset = "0x219DA14", VA = "0x219DA14")]
		private void OnRecording(string path)
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x219DAC4", Offset = "0x219DAC4", VA = "0x219DAC4")]
		public WebCam()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000354")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3080", Offset = "0x5C3080")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60029BA")]
			[Address(RVA = "0x23E4110", Offset = "0x23E4110", VA = "0x23E4110")]
			public <>c()
			{
			}

			[Token(Token = "0x60029BB")]
			[Address(RVA = "0x23E4118", Offset = "0x23E4118", VA = "0x23E4118")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x4002067")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x4002069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float X;

		[Token(Token = "0x400206A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float Y;

		[Token(Token = "0x400206B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Z;

		[Token(Token = "0x400206C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Yaw;

		[Token(Token = "0x400206D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Pitch;

		[Token(Token = "0x400206E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Roll;

		[Token(Token = "0x400206F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float FieldOfVision;

		[Token(Token = "0x4002070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float NearClip;

		[Token(Token = "0x4002071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float FarClip;

		[Token(Token = "0x4002072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float HMDOffset;

		[Token(Token = "0x4002073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float NearOffset;

		[Token(Token = "0x4002074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170001DD")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x23E2EA0", Offset = "0x23E2EA0", VA = "0x23E2EA0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DE")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x23E2F54", Offset = "0x23E2F54", VA = "0x23E2F54")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000022")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x23E2B80", Offset = "0x23E2B80", VA = "0x23E2B80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D10A0", Offset = "0x5D10A0")]
			add
			{
			}
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x23E2D10", Offset = "0x23E2D10", VA = "0x23E2D10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D10B0", Offset = "0x5D10B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x23E3044", Offset = "0x23E3044", VA = "0x23E3044")]
		static Calibration()
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x23E3EFC", Offset = "0x23E3EFC", VA = "0x23E3EFC")]
		private static void Reset()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x23E3310", Offset = "0x23E3310", VA = "0x23E3310")]
		public static void Read()
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x23E3FF4", Offset = "0x23E3FF4", VA = "0x23E3FF4")]
		private static bool TryParseInvariantFloat(string number, out float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000355")]
	public static class Extensions
	{
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x23E4190", Offset = "0x23E4190", VA = "0x23E4190")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x23E4284", Offset = "0x23E4284", VA = "0x23E4284")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x23E4490", Offset = "0x23E4490", VA = "0x23E4490")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1F34", Offset = "0x5C1F34")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3090", Offset = "0x5C3090")]
		private sealed class <>c
		{
			[Token(Token = "0x4002EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<TrackedDevicePose_t, int, <>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x4002EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x4002EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x4002EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x4002EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x4002EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x60029BD")]
			[Address(RVA = "0x23E54CC", Offset = "0x23E54CC", VA = "0x23E54CC")]
			public <>c()
			{
			}

			[Token(Token = "0x60029BE")]
			[Address(RVA = "0x23E54D4", Offset = "0x23E54D4", VA = "0x23E54D4")]
			internal <>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x60029BF")]
			[Address(RVA = "0x23E559C", Offset = "0x23E559C", VA = "0x23E559C")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x60029C0")]
			[Address(RVA = "0x23E5620", Offset = "0x23E5620", VA = "0x23E5620")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x60029C1")]
			[Address(RVA = "0x23E57BC", Offset = "0x23E57BC", VA = "0x23E57BC")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x60029C2")]
			[Address(RVA = "0x23E5878", Offset = "0x23E5878", VA = "0x23E5878")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x60029C3")]
			[Address(RVA = "0x23E5AC8", Offset = "0x23E5AC8", VA = "0x23E5AC8")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4002075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8988", Offset = "0x5C8988")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x4002076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x4002077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x4002078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170001DF")]
		public bool IsValid
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x23E44C4", Offset = "0x23E44C4", VA = "0x23E44C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E0")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x23E44D8", Offset = "0x23E44D8", VA = "0x23E44D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D10E0", Offset = "0x5D10E0")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001A91")]
			[Address(RVA = "0x23E44E0", Offset = "0x23E44E0", VA = "0x23E44E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D10F0", Offset = "0x5D10F0")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x23E44E8", Offset = "0x23E44E8", VA = "0x23E44E8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x23E4588", Offset = "0x23E4588", VA = "0x23E4588")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x23E45F0", Offset = "0x23E45F0", VA = "0x23E45F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x23E4674", Offset = "0x23E4674", VA = "0x23E4674")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x23E45F4", Offset = "0x23E45F4", VA = "0x23E45F4")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x23E4678", Offset = "0x23E4678", VA = "0x23E4678")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x23E477C", Offset = "0x23E477C", VA = "0x23E477C")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x23E4570", Offset = "0x23E4570", VA = "0x23E4570")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x23E4AB4", Offset = "0x23E4AB4", VA = "0x23E4AB4")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x23E5210", Offset = "0x23E5210", VA = "0x23E5210")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x23E53D4", Offset = "0x23E53D4", VA = "0x23E53D4")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x2000357")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x5C1F74", Offset = "0x5C1F74")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x4002079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string text;

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x23E5CE4", Offset = "0x23E5CE4", VA = "0x23E5CE4")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x2000358")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1FA8", Offset = "0x5C1FA8")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x400207A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C8998", Offset = "0x5C8998")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x400207B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C89F4", Offset = "0x5C89F4")]
		public Camera HMDCamera;

		[Token(Token = "0x400207C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C8A04", Offset = "0x5C8A04")]
		public bool DisableStandardAssets;

		[Token(Token = "0x400207D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x5C8A14", Offset = "0x5C8A14")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x400207E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool WasActive;

		[Token(Token = "0x400207F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x4002080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x4002081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x4002082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170001E1")]
		public Transform Origin
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0x23E5D04", Offset = "0x23E5D04", VA = "0x23E5D04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x23E5DC8", Offset = "0x23E5DC8", VA = "0x23E5DC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x23E6178", Offset = "0x23E6178", VA = "0x23E6178")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x23E63F0", Offset = "0x23E63F0", VA = "0x23E63F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x23E6444", Offset = "0x23E6444", VA = "0x23E6444")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x23E621C", Offset = "0x23E621C", VA = "0x23E621C")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x23E664C", Offset = "0x23E664C", VA = "0x23E664C")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x23E6CE0", Offset = "0x23E6CE0", VA = "0x23E6CE0")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x23E66D4", Offset = "0x23E66D4", VA = "0x23E66D4")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x23E6EB0", Offset = "0x23E6EB0", VA = "0x23E6EB0")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x23E67CC", Offset = "0x23E67CC", VA = "0x23E67CC")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x23E6DB8", Offset = "0x23E6DB8", VA = "0x23E6DB8")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x23E7194", Offset = "0x23E7194", VA = "0x23E7194")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000359")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C1FDC", Offset = "0x5C1FDC")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30A0", Offset = "0x5C30A0")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x1700037B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029C7")]
				[Address(RVA = "0x23E8C84", Offset = "0x23E8C84", VA = "0x23E8C84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029C9")]
				[Address(RVA = "0x23E8D14", Offset = "0x23E8D14", VA = "0x23E8D14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029C4")]
			[Address(RVA = "0x23E8B18", Offset = "0x23E8B18", VA = "0x23E8B18")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x60029C5")]
			[Address(RVA = "0x23E8B40", Offset = "0x23E8B40", VA = "0x23E8B40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029C6")]
			[Address(RVA = "0x23E8B44", Offset = "0x23E8B44", VA = "0x23E8B44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029C8")]
			[Address(RVA = "0x23E8C8C", Offset = "0x23E8C8C", VA = "0x23E8C8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _isSetup;

		[Token(Token = "0x4002084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LIV _liv;

		[Token(Token = "0x4002085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Camera _mrCamera;

		[Token(Token = "0x4002086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform _hmd;

		[Token(Token = "0x4002087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject _clipQuad;

		[Token(Token = "0x4002088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material _clipMaterial;

		[Token(Token = "0x4002089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material _blitMaterial;

		[Token(Token = "0x400208A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x400208B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x400208C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x23E6FA8", Offset = "0x23E6FA8", VA = "0x23E6FA8")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x23E71C0", Offset = "0x23E71C0", VA = "0x23E71C0")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x23E750C", Offset = "0x23E750C", VA = "0x23E750C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x23E77BC", Offset = "0x23E77BC", VA = "0x23E77BC")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x23E7C40", Offset = "0x23E7C40", VA = "0x23E7C40")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x23E7FE0", Offset = "0x23E7FE0", VA = "0x23E7FE0")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x23E83B8", Offset = "0x23E83B8", VA = "0x23E83B8")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x23E8878", Offset = "0x23E8878", VA = "0x23E8878")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x23E88F8", Offset = "0x23E88F8", VA = "0x23E88F8")]
		private void Composite()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x23E8A68", Offset = "0x23E8A68", VA = "0x23E8A68")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x23E8A8C", Offset = "0x23E8A8C", VA = "0x23E8A8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1100", Offset = "0x5D1100")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x23E8B38", Offset = "0x23E8B38", VA = "0x23E8B38")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C2020", Offset = "0x5C2020")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30B0", Offset = "0x5C30B0")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x1700037D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029CD")]
				[Address(RVA = "0x23E9438", Offset = "0x23E9438", VA = "0x23E9438", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700037E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029CF")]
				[Address(RVA = "0x23E94C8", Offset = "0x23E94C8", VA = "0x23E94C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029CA")]
			[Address(RVA = "0x23E92D8", Offset = "0x23E92D8", VA = "0x23E92D8")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60029CB")]
			[Address(RVA = "0x23E9350", Offset = "0x23E9350", VA = "0x23E9350", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029CC")]
			[Address(RVA = "0x23E9354", Offset = "0x23E9354", VA = "0x23E9354", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029CE")]
			[Address(RVA = "0x23E9440", Offset = "0x23E9440", VA = "0x23E9440", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public static bool IsActive
		{
			[Token(Token = "0x6001ABC")]
			[Address(RVA = "0x23E6440", Offset = "0x23E6440", VA = "0x23E6440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public static int TextureWidth
		{
			[Token(Token = "0x6001ABD")]
			[Address(RVA = "0x23E7C38", Offset = "0x23E7C38", VA = "0x23E7C38")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E4")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001ABE")]
			[Address(RVA = "0x23E7C3C", Offset = "0x23E7C3C", VA = "0x23E7C3C")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x23E8D20", Offset = "0x23E8D20", VA = "0x23E8D20")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x23E8E20", Offset = "0x23E8E20", VA = "0x23E8E20")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x23E8F28", Offset = "0x23E8F28", VA = "0x23E8F28")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x23E9020", Offset = "0x23E9020", VA = "0x23E9020")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x23E9118", Offset = "0x23E9118", VA = "0x23E9118")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x23E8A2C", Offset = "0x23E8A2C", VA = "0x23E8A2C")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x23E9228", Offset = "0x23E9228", VA = "0x23E9228")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x23E924C", Offset = "0x23E924C", VA = "0x23E924C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1178", Offset = "0x5D1178")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x23E92F8", Offset = "0x23E92F8", VA = "0x23E92F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x23E9348", Offset = "0x23E9348", VA = "0x23E9348")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x200035B")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x400208D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x400208E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static Type SteamVRCamera;

		[Token(Token = "0x400208F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x4002090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x23E94D0", Offset = "0x23E94D0", VA = "0x23E94D0")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x23E9534", Offset = "0x23E9534", VA = "0x23E9534")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Lexic
{
	[Token(Token = "0x200035C")]
	public class NameGenerator : MonoBehaviour
	{
		[Token(Token = "0x4002091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string namesSourceClass;

		[Token(Token = "0x4002092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public System.Random rng;

		[Token(Token = "0x4002093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private List<string> rules;

		[Token(Token = "0x4002094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Regex ruleRegex;

		[Token(Token = "0x4002095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Regex tokenRegex;

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x240A6B4", Offset = "0x240A6B4", VA = "0x240A6B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x240A6C4", Offset = "0x240A6C4", VA = "0x240A6C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x240AA68", Offset = "0x240AA68", VA = "0x240AA68")]
		public bool ValidateRules()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x240AC80", Offset = "0x240AC80", VA = "0x240AC80")]
		public string GetNextRandomName()
		{
			return null;
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x240B43C", Offset = "0x240B43C", VA = "0x240B43C")]
		public NameGenerator()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public class AccessoryNames : BaseNames
	{
		[Token(Token = "0x4002096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x4002097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x23EE8E0", Offset = "0x23EE8E0", VA = "0x23EE8E0")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x23EE99C", Offset = "0x23EE99C", VA = "0x23EE99C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x23EEA28", Offset = "0x23EEA28", VA = "0x23EEA28")]
		public AccessoryNames()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public class ArmorNames : BaseNames
	{
		[Token(Token = "0x4002098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x4002099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x23F0BA0", Offset = "0x23F0BA0", VA = "0x23F0BA0")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x23F0C5C", Offset = "0x23F0C5C", VA = "0x23F0C5C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x23F0CE8", Offset = "0x23F0CE8", VA = "0x23F0CE8")]
		public ArmorNames()
		{
		}
	}
	[Token(Token = "0x200035F")]
	public class BaseNames
	{
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x23F3014", Offset = "0x23F3014", VA = "0x23F3014")]
		public static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x23F309C", Offset = "0x23F309C", VA = "0x23F309C")]
		public static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x23EEA30", Offset = "0x23EEA30", VA = "0x23EEA30")]
		public BaseNames()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class CelticFemaleNames : BaseNames
	{
		[Token(Token = "0x400209A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x400209B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x23F3124", Offset = "0x23F3124", VA = "0x23F3124")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x23F31E0", Offset = "0x23F31E0", VA = "0x23F31E0")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x23F326C", Offset = "0x23F326C", VA = "0x23F326C")]
		public CelticFemaleNames()
		{
		}
	}
	[Token(Token = "0x2000361")]
	public class CelticMaleNames : BaseNames
	{
		[Token(Token = "0x400209C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x400209D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x23F4090", Offset = "0x23F4090", VA = "0x23F4090")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x23F414C", Offset = "0x23F414C", VA = "0x23F414C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x23F41D8", Offset = "0x23F41D8", VA = "0x23F41D8")]
		public CelticMaleNames()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class DemonFemaleNames : BaseNames
	{
		[Token(Token = "0x400209E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x400209F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x23F5124", Offset = "0x23F5124", VA = "0x23F5124")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x23F51E0", Offset = "0x23F51E0", VA = "0x23F51E0")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x23F526C", Offset = "0x23F526C", VA = "0x23F526C")]
		public DemonFemaleNames()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class DemonMaleNames : BaseNames
	{
		[Token(Token = "0x40020A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x23F9EB4", Offset = "0x23F9EB4", VA = "0x23F9EB4")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x23F9F70", Offset = "0x23F9F70", VA = "0x23F9F70")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x23F9FFC", Offset = "0x23F9FFC", VA = "0x23F9FFC")]
		public DemonMaleNames()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class ExampleNames : BaseNames
	{
		[Token(Token = "0x40020A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x23FEC44", Offset = "0x23FEC44", VA = "0x23FEC44")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x23FED00", Offset = "0x23FED00", VA = "0x23FED00")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x23FED8C", Offset = "0x23FED8C", VA = "0x23FED8C")]
		public ExampleNames()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class FantasyFemaleNames : BaseNames
	{
		[Token(Token = "0x40020A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x23FF2E0", Offset = "0x23FF2E0", VA = "0x23FF2E0")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x23FF39C", Offset = "0x23FF39C", VA = "0x23FF39C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x23FF428", Offset = "0x23FF428", VA = "0x23FF428")]
		public FantasyFemaleNames()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class FantasyFemaleNames2 : BaseNames
	{
		[Token(Token = "0x40020A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x2400748", Offset = "0x2400748", VA = "0x2400748")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x2400804", Offset = "0x2400804", VA = "0x2400804")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x2400890", Offset = "0x2400890", VA = "0x2400890")]
		public FantasyFemaleNames2()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class FantasyMaleNames : BaseNames
	{
		[Token(Token = "0x40020A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x2402C38", Offset = "0x2402C38", VA = "0x2402C38")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x2402CF4", Offset = "0x2402CF4", VA = "0x2402CF4")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x2402D80", Offset = "0x2402D80", VA = "0x2402D80")]
		public FantasyMaleNames()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class FantasyMaleNames2 : BaseNames
	{
		[Token(Token = "0x40020AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x24040A0", Offset = "0x24040A0", VA = "0x24040A0")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x240415C", Offset = "0x240415C", VA = "0x240415C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x24041E8", Offset = "0x24041E8", VA = "0x24041E8")]
		public FantasyMaleNames2()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class KingNames : BaseNames
	{
		[Token(Token = "0x40020AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x24083A0", Offset = "0x24083A0", VA = "0x24083A0")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x240845C", Offset = "0x240845C", VA = "0x240845C")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x24084E8", Offset = "0x24084E8", VA = "0x24084E8")]
		public KingNames()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class TownNames : BaseNames
	{
		[Token(Token = "0x40020AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x240B4F8", Offset = "0x240B4F8", VA = "0x240B4F8")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x240B5B4", Offset = "0x240B5B4", VA = "0x240B5B4")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x240B640", Offset = "0x240B640", VA = "0x240B640")]
		public TownNames()
		{
		}
	}
	[Token(Token = "0x200036B")]
	public class WeaponNames : BaseNames
	{
		[Token(Token = "0x40020B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, List<string>> syllableSets;

		[Token(Token = "0x40020B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<string> rules;

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x240F8B4", Offset = "0x240F8B4", VA = "0x240F8B4")]
		public new static List<string> GetSyllableSet(string key)
		{
			return null;
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x240F970", Offset = "0x240F970", VA = "0x240F970")]
		public new static List<string> GetRules()
		{
			return null;
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x240F9FC", Offset = "0x240F9FC", VA = "0x240F9FC")]
		public WeaponNames()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x200036C")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xFD0708", Offset = "0xFD0708", VA = "0xFD0708")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xFD0904", Offset = "0xFD0904", VA = "0xFD0904")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x200036D")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0xFD12C8", Offset = "0xFD12C8", VA = "0xFD12C8")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0xFD13F8", Offset = "0xFD13F8", VA = "0xFD13F8")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0xFD1454", Offset = "0xFD1454", VA = "0xFD1454")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xFD1324", Offset = "0xFD1324", VA = "0xFD1324")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xFD191C", Offset = "0xFD191C", VA = "0xFD191C")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40020B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40020B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string _NormalString;

		[Token(Token = "0x40020B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TermsPopup", RVA = "0x5C8A24", Offset = "0x5C8A24")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xFD1924", Offset = "0xFD1924", VA = "0xFD1924")]
		public void Start()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xFD1BE0", Offset = "0xFD1BE0", VA = "0xFD1BE0")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xFD1BE8", Offset = "0xFD1BE8", VA = "0xFD1BE8", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0xFD1CBC", Offset = "0xFD1CBC", VA = "0xFD1CBC")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40020B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string OriginalText;

		[Token(Token = "0x40020B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string TranslatedText;

		[Token(Token = "0x40020B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool IsTranslating;

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x220CF24", Offset = "0x220CF24", VA = "0x220CF24")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x220D448", Offset = "0x220D448", VA = "0x220D448")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x220D6C8", Offset = "0x220D6C8", VA = "0x220D6C8")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x220D76C", Offset = "0x220D76C", VA = "0x220D76C")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x220D530", Offset = "0x220D530", VA = "0x220D530")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x220DA2C", Offset = "0x220DA2C", VA = "0x220DA2C")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x220DC70", Offset = "0x220DC70", VA = "0x220DC70")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x220DC78", Offset = "0x220DC78", VA = "0x220DC78")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x220DC80", Offset = "0x220DC80", VA = "0x220DC80")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x220DC88", Offset = "0x220DC88", VA = "0x220DC88")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x2000371")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x220DD10", Offset = "0x220DD10", VA = "0x220DD10")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x220DDF4", Offset = "0x220DDF4", VA = "0x220DDF4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x220DE88", Offset = "0x220DE88", VA = "0x220DE88", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x220DE90", Offset = "0x220DE90", VA = "0x220DE90")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x221814C", Offset = "0x221814C", VA = "0x221814C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x22181BC", Offset = "0x22181BC", VA = "0x22181BC")]
		private void test()
		{
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x22182D0", Offset = "0x22182D0", VA = "0x22182D0")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x2000373")]
	public static class PersistentStorage
	{
		[Token(Token = "0x2000616")]
		public enum eFileType
		{
			[Token(Token = "0x4002F06")]
			Raw,
			[Token(Token = "0x4002F07")]
			Persistent,
			[Token(Token = "0x4002F08")]
			Temporal,
			[Token(Token = "0x4002F09")]
			Streaming
		}

		[Token(Token = "0x40020B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x2207CB4", Offset = "0x2207CB4", VA = "0x2207CB4")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x2207D94", Offset = "0x2207D94", VA = "0x2207D94")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x2207E74", Offset = "0x2207E74", VA = "0x2207E74")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x2207F4C", Offset = "0x2207F4C", VA = "0x2207F4C")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x2208024", Offset = "0x2208024", VA = "0x2208024")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x22080F4", Offset = "0x22080F4", VA = "0x22080F4")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x22081C4", Offset = "0x22081C4", VA = "0x22081C4")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x22082C0", Offset = "0x22082C0", VA = "0x22082C0")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x22083B4", Offset = "0x22083B4", VA = "0x22083B4")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x22084A8", Offset = "0x22084A8", VA = "0x22084A8")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000374")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xFE1B34", Offset = "0xFE1B34", VA = "0xFE1B34", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xFE1E60", Offset = "0xFE1E60", VA = "0xFE1E60", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xFE2120", Offset = "0xFE2120", VA = "0xFE2120", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xFE23A8", Offset = "0xFE23A8", VA = "0xFE23A8", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xFE23B0", Offset = "0xFE23B0", VA = "0xFE23B0", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xFE23BC", Offset = "0xFE23BC", VA = "0xFE23BC", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xFE23C4", Offset = "0xFE23C4", VA = "0xFE23C4")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xFE246C", Offset = "0xFE246C", VA = "0xFE246C", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xFE27B0", Offset = "0xFE27B0", VA = "0xFE27B0", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xFE2AE8", Offset = "0xFE2AE8", VA = "0xFE2AE8", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xFE2E14", Offset = "0xFE2E14", VA = "0xFE2E14", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xFE313C", Offset = "0xFE313C", VA = "0xFE313C")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xFE3144", Offset = "0xFE3144", VA = "0xFE3144")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000376")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40020B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string[] mSpecializations;

		[Token(Token = "0x40020BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xFCFD60", Offset = "0xFCFD60", VA = "0xFCFD60", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xFD05B4", Offset = "0xFD05B4", VA = "0xFD05B4", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xFD0630", Offset = "0xFD0630", VA = "0xFD0630", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xFD0700", Offset = "0xFD0700", VA = "0xFD0700")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40020BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x2215F68", Offset = "0x2215F68", VA = "0x2215F68")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x2215F94", Offset = "0x2215F94", VA = "0x2215F94")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x2216294", Offset = "0x2216294", VA = "0x2216294")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x221669C", Offset = "0x221669C", VA = "0x221669C")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x22163D8", Offset = "0x22163D8", VA = "0x22163D8")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x2216B88", Offset = "0x2216B88", VA = "0x2216B88")]
		public static void AppendSpecializations(string text, [Optional] List<string> list)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000378")]
	public class EventCallback
	{
		[Token(Token = "0x40020BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MonoBehaviour Target;

		[Token(Token = "0x40020BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string MethodName;

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xFD111C", Offset = "0xFD111C", VA = "0xFD111C")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xFD11A8", Offset = "0xFD11A8", VA = "0xFD11A8")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xFD1254", Offset = "0xFD1254", VA = "0xFD1254")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public enum ePluralType
	{
		[Token(Token = "0x40020BF")]
		Zero,
		[Token(Token = "0x40020C0")]
		One,
		[Token(Token = "0x40020C1")]
		Two,
		[Token(Token = "0x40020C2")]
		Few,
		[Token(Token = "0x40020C3")]
		Many,
		[Token(Token = "0x40020C4")]
		Plural
	}
	[Token(Token = "0x200037A")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000617")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x4002F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x4002F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string GoogleCode;

			[Token(Token = "0x4002F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool HasJoinedWords;

			[Token(Token = "0x4002F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int PluralRule;
		}

		[Token(Token = "0x40020C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xFD1CC4", Offset = "0xFD1CC4", VA = "0xFD1CC4")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xFD2254", Offset = "0xFD2254", VA = "0xFD2254")]
		public static List<string> GetLanguagesForDropdown(string Filter, string CodesToExclude)
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xFD203C", Offset = "0xFD203C", VA = "0xFD203C")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xFD29B4", Offset = "0xFD29B4", VA = "0xFD29B4")]
		public static string GetFormatedLanguageName(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xFD2B4C", Offset = "0xFD2B4C", VA = "0xFD2B4C")]
		public static string GetCodedLanguage(string Language, string code)
		{
			return null;
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xFD2C38", Offset = "0xFD2C38", VA = "0xFD2C38")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xFD2E0C", Offset = "0xFD2E0C", VA = "0xFD2E0C")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xFD30B4", Offset = "0xFD30B4", VA = "0xFD30B4")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xFD34A4", Offset = "0xFD34A4", VA = "0xFD34A4")]
		public static List<string> GetAllInternationalCodes()
		{
			return null;
		}

		[Token(Token = "0x6001B50")]
		[Address(RVA = "0xFD3708", Offset = "0xFD3708", VA = "0xFD3708")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B51")]
		[Address(RVA = "0xFD397C", Offset = "0xFD397C", VA = "0xFD397C")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x6001B52")]
		[Address(RVA = "0xFD3C10", Offset = "0xFD3C10", VA = "0xFD3C10")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B53")]
		[Address(RVA = "0xFD3E90", Offset = "0xFD3E90", VA = "0xFD3E90")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x6001B54")]
		[Address(RVA = "0xFD46EC", Offset = "0xFD46EC", VA = "0xFD46EC")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x6001B55")]
		[Address(RVA = "0xFD46CC", Offset = "0xFD46CC", VA = "0xFD46CC")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200037B")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x2000618")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x2000619")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30C0", Offset = "0x5C30C0")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4002F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4002F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string text;

			[Token(Token = "0x4002F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4002F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public string LanguageCodeTo;

			[Token(Token = "0x60029D8")]
			[Address(RVA = "0xFDBD40", Offset = "0xFDBD40", VA = "0xFDBD40")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60029D9")]
			[Address(RVA = "0xFE051C", Offset = "0xFE051C", VA = "0xFE051C")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30D0", Offset = "0x5C30D0")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x1700037F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029DD")]
				[Address(RVA = "0xFE08A4", Offset = "0xFE08A4", VA = "0xFE08A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000380")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029DF")]
				[Address(RVA = "0xFE0934", Offset = "0xFE0934", VA = "0xFE0934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029DA")]
			[Address(RVA = "0xFDDAC8", Offset = "0xFDDAC8", VA = "0xFDDAC8")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60029DB")]
			[Address(RVA = "0xFE0648", Offset = "0xFE0648", VA = "0xFE0648", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029DC")]
			[Address(RVA = "0xFE064C", Offset = "0xFE064C", VA = "0xFE064C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029DE")]
			[Address(RVA = "0xFE08AC", Offset = "0xFE08AC", VA = "0xFE08AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40020C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x40020C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xFDB68C", Offset = "0xFDB68C", VA = "0xFDB68C")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xFDBA84", Offset = "0xFDBA84", VA = "0xFDBA84")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xFDCA5C", Offset = "0xFDCA5C", VA = "0xFDCA5C")]
		public static string ForceTranslate(string text, string LanguageCodeFrom, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xFDC9B0", Offset = "0xFDC9B0", VA = "0xFDC9B0")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xFDD204", Offset = "0xFDD204", VA = "0xFDD204")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xFDD2B4", Offset = "0xFDD2B4", VA = "0xFDD2B4")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xFDD0CC", Offset = "0xFDD0CC", VA = "0xFDD0CC")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xFDDA54", Offset = "0xFDDA54", VA = "0xFDDA54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D11F0", Offset = "0x5D11F0")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xFDDAE8", Offset = "0xFDDAE8", VA = "0xFDDAE8")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xFDE484", Offset = "0xFDE484", VA = "0xFDE484")]
		public static bool IsTranslating()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xFDE5C4", Offset = "0xFDE5C4", VA = "0xFDE5C4")]
		public static void CancelCurrentGoogleTranslations()
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xFDC718", Offset = "0xFDC718", VA = "0xFDC718")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xFDE810", Offset = "0xFDE810", VA = "0xFDE810")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xFDCBD8", Offset = "0xFDCBD8", VA = "0xFDCBD8")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xFDF798", Offset = "0xFDF798", VA = "0xFDF798")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xFDE16C", Offset = "0xFDE16C", VA = "0xFDE16C")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xFDEB94", Offset = "0xFDEB94", VA = "0xFDEB94")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xFDEE58", Offset = "0xFDEE58", VA = "0xFDEE58")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xFDEC5C", Offset = "0xFDEC5C", VA = "0xFDEC5C")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xFDF8C8", Offset = "0xFDF8C8", VA = "0xFDF8C8")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xFDE3B8", Offset = "0xFDE3B8", VA = "0xFDE3B8")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xFDEF8C", Offset = "0xFDEF8C", VA = "0xFDEF8C")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xFDCF60", Offset = "0xFDCF60", VA = "0xFDCF60")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xFDFAEC", Offset = "0xFDFAEC", VA = "0xFDFAEC")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xFDFE50", Offset = "0xFDFE50", VA = "0xFDFE50")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xFE02F8", Offset = "0xFE02F8", VA = "0xFE02F8")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xFDD958", Offset = "0xFDD958", VA = "0xFDD958")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x200037C")]
	public struct TranslationQuery
	{
		[Token(Token = "0x40020C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x40020C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string Text;

		[Token(Token = "0x40020CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string LanguageCode;

		[Token(Token = "0x40020CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x40020CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Results;

		[Token(Token = "0x40020CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string[] Tags;
	}
	[Token(Token = "0x200037D")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x200061C")]
		public enum eJobState
		{
			[Token(Token = "0x4002F15")]
			Running,
			[Token(Token = "0x4002F16")]
			Succeeded,
			[Token(Token = "0x4002F17")]
			Failed
		}

		[Token(Token = "0x40020CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public eJobState mJobState;

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x22182D8", Offset = "0x22182D8", VA = "0x22182D8", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x22182E0", Offset = "0x22182E0", VA = "0x22182E0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x22182E4", Offset = "0x22182E4", VA = "0x22182E4")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x40020CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityWebRequest www;

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x221A374", Offset = "0x221A374", VA = "0x221A374", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x22183A8", Offset = "0x22183A8", VA = "0x22183A8")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x40020D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40020D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40020D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> mQueries;

		[Token(Token = "0x40020D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string mErrorMessage;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x22182EC", Offset = "0x22182EC", VA = "0x22182EC")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x22183B0", Offset = "0x22183B0", VA = "0x22183B0")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0x221853C", Offset = "0x221853C", VA = "0x221853C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0x221861C", Offset = "0x221861C", VA = "0x221861C")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x40020D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x40020D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x40020D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x40020D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40020D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40020D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mErrorMessage;

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0x2218764", Offset = "0x2218764", VA = "0x2218764")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0x22189A8", Offset = "0x22189A8", VA = "0x22189A8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0x2218BD8", Offset = "0x2218BD8", VA = "0x2218BD8", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x40020DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40020DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0x22187F4", Offset = "0x22187F4", VA = "0x22187F4")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x2218C2C", Offset = "0x2218C2C", VA = "0x2218C2C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x2218CF8", Offset = "0x2218CF8", VA = "0x2218CF8")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
		[Serializable]
		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30E0", Offset = "0x5C30E0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Comparison<KeyValuePair<string, string>> <>9__8_0;

			[Token(Token = "0x4002F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__12_0;

			[Token(Token = "0x4002F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static MatchEvaluator <>9__12_1;

			[Token(Token = "0x60029E1")]
			[Address(RVA = "0x221A0D0", Offset = "0x221A0D0", VA = "0x221A0D0")]
			public <>c()
			{
			}

			[Token(Token = "0x60029E2")]
			[Address(RVA = "0x221A0D8", Offset = "0x221A0D8", VA = "0x221A0D8")]
			internal int <FindAllQueries>b__8_0(KeyValuePair<string, string> a, KeyValuePair<string, string> b)
			{
				return default(int);
			}

			[Token(Token = "0x60029E3")]
			[Address(RVA = "0x221A180", Offset = "0x221A180", VA = "0x221A180")]
			internal string <ParseTranslationResult>b__12_0(Match match)
			{
				return null;
			}

			[Token(Token = "0x60029E4")]
			[Address(RVA = "0x221A27C", Offset = "0x221A27C", VA = "0x221A27C")]
			internal string <ParseTranslationResult>b__12_1(Match match)
			{
				return null;
			}
		}

		[Token(Token = "0x40020DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x40020DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x40020DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mErrorMessage;

		[Token(Token = "0x40020DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string mCurrentBatch_ToLanguageCode;

		[Token(Token = "0x40020E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string mCurrentBatch_FromLanguageCode;

		[Token(Token = "0x40020E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private List<string> mCurrentBatch_Text;

		[Token(Token = "0x40020E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<KeyValuePair<string, string>> mQueries;

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x2218E24", Offset = "0x2218E24", VA = "0x2218E24")]
		public TranslationJob_WEB(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x2218E5C", Offset = "0x2218E5C", VA = "0x2218E5C")]
		private void FindAllQueries()
		{
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x22192D4", Offset = "0x22192D4", VA = "0x22192D4")]
		private void ExecuteNextBatch()
		{
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x22197D0", Offset = "0x22197D0", VA = "0x22197D0", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x22198B0", Offset = "0x22198B0", VA = "0x22198B0")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x2219A08", Offset = "0x2219A08", VA = "0x2219A08")]
		private string ParseTranslationResult(string html, string OriginalText)
		{
			return null;
		}
	}
	[Token(Token = "0x2000383")]
	public enum eLanguageDataFlags
	{
		[Token(Token = "0x40020E4")]
		DISABLED = 1,
		[Token(Token = "0x40020E5")]
		KEEP_LOADED = 2,
		[Token(Token = "0x40020E6")]
		NOT_LOADED = 4
	}
	[Serializable]
	[Token(Token = "0x2000384")]
	public class LanguageData
	{
		[Token(Token = "0x40020E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x40020E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Code;

		[Token(Token = "0x40020E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x40020EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool Compressed;

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xFE4534", Offset = "0xFE4534", VA = "0xFE4534")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xFE4548", Offset = "0xFE4548", VA = "0xFE4548")]
		public void SetEnabled(bool bEnabled)
		{
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xFE4560", Offset = "0xFE4560", VA = "0xFE4560")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xFE4574", Offset = "0xFE4574", VA = "0xFE4574")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xFE4588", Offset = "0xFE4588", VA = "0xFE4588")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xFE45A0", Offset = "0xFE45A0", VA = "0xFE45A0")]
		public void SetCanBeUnLoaded(bool allowUnloading)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xFE45B8", Offset = "0xFE45B8", VA = "0xFE45B8")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C2068", Offset = "0x5C2068")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C2068", Offset = "0x5C2068")]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x200061E")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x40020EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LanguageSourceData mSource;

		[Token(Token = "0x40020EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int version;

		[Token(Token = "0x40020ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool NeverDestroy;

		[Token(Token = "0x40020EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x40020EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x40020F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x40020F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x40020F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string Google_WebServiceURL;

		[Token(Token = "0x40020F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x40020F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x40020F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x40020F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x40020F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x40020F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x40020FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x40020FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x40020FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public List<TermData> mTerms;

		[Token(Token = "0x40020FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x40020FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x40020FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string mTerm_AppName;

		[Token(Token = "0x170001E5")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001B8F")]
			[Address(RVA = "0xFE45C0", Offset = "0xFE45C0", VA = "0xFE45C0", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0xFE45C8", Offset = "0xFE45C8", VA = "0xFE45C8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0xFE45D0", Offset = "0xFE45D0", VA = "0xFE45D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D1268", Offset = "0x5D1268")]
			add
			{
			}
			[Token(Token = "0x6001B92")]
			[Address(RVA = "0xFE46DC", Offset = "0xFE46DC", VA = "0xFE46DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D1278", Offset = "0x5D1278")]
			remove
			{
			}
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xFE47E8", Offset = "0xFE47E8", VA = "0xFE47E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xFE48C8", Offset = "0xFE48C8", VA = "0xFE48C8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xFE4978", Offset = "0xFE4978", VA = "0xFE4978")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xFE4AC0", Offset = "0xFE4AC0", VA = "0xFE4AC0", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xFE4ACC", Offset = "0xFE4ACC", VA = "0xFE4ACC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xFE52F8", Offset = "0xFE52F8", VA = "0xFE52F8")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5C20C0", Offset = "0x5C20C0")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4002100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170001E6")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x6001B99")]
			[Address(RVA = "0xFE5CF0", Offset = "0xFE5CF0", VA = "0xFE5CF0", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0xFE5CF8", Offset = "0xFE5CF8", VA = "0xFE5CF8", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xFE5D00", Offset = "0xFE5D00", VA = "0xFE5D00")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public interface ILanguageSource
	{
		[Token(Token = "0x170001E7")]
		LanguageSourceData SourceData
		{
			[Token(Token = "0x6001B9C")]
			get;
			[Token(Token = "0x6001B9D")]
			set;
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C214C", Offset = "0x5C214C")]
	public class LanguageSourceData
	{
		[Token(Token = "0x200061F")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4002F1D")]
			Empty,
			[Token(Token = "0x4002F1E")]
			Fallback,
			[Token(Token = "0x4002F1F")]
			ShowWarning,
			[Token(Token = "0x4002F20")]
			ShowTerm
		}

		[Token(Token = "0x2000620")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x4002F22")]
			Never,
			[Token(Token = "0x4002F23")]
			OnlyInDevice,
			[Token(Token = "0x4002F24")]
			EditorAndDevice
		}

		[Token(Token = "0x2000621")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x4002F26")]
			Always,
			[Token(Token = "0x4002F27")]
			Never,
			[Token(Token = "0x4002F28")]
			Daily,
			[Token(Token = "0x4002F29")]
			Weekly,
			[Token(Token = "0x4002F2A")]
			Monthly,
			[Token(Token = "0x4002F2B")]
			OnlyOnce,
			[Token(Token = "0x4002F2C")]
			EveryOtherDay
		}

		[Token(Token = "0x2000622")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4002F2E")]
			Manual,
			[Token(Token = "0x4002F2F")]
			OnSceneLoaded,
			[Token(Token = "0x4002F30")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C30F0", Offset = "0x5C30F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x4002F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x4002F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x4002F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x4002F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Comparison<TermData> <>9__43_0;

			[Token(Token = "0x4002F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<TermData> <>9__47_0;

			[Token(Token = "0x60029EA")]
			[Address(RVA = "0xFF07A4", Offset = "0xFF07A4", VA = "0xFF07A4")]
			public <>c()
			{
			}

			[Token(Token = "0x60029EB")]
			[Address(RVA = "0xFF07AC", Offset = "0xFF07AC", VA = "0xFF07AC")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x60029EC")]
			[Address(RVA = "0xFF0834", Offset = "0xFF0834", VA = "0xFF0834")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x60029ED")]
			[Address(RVA = "0xFF0860", Offset = "0xFF0860", VA = "0xFF0860")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60029EE")]
			[Address(RVA = "0xFF0934", Offset = "0xFF0934", VA = "0xFF0934")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60029EF")]
			[Address(RVA = "0xFF0998", Offset = "0xFF0998", VA = "0xFF0998")]
			internal int <Export_I2CSV>b__43_0(TermData a, TermData b)
			{
				return default(int);
			}

			[Token(Token = "0x60029F0")]
			[Address(RVA = "0xFF09E0", Offset = "0xFF09E0", VA = "0xFF09E0")]
			internal int <Export_CSV>b__47_0(TermData a, TermData b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3100", Offset = "0x5C3100")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4002F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool JustCheck;

			[Token(Token = "0x4002F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x17000381")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60029F4")]
				[Address(RVA = "0xFF0DE8", Offset = "0xFF0DE8", VA = "0xFF0DE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000382")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60029F6")]
				[Address(RVA = "0xFF0E78", Offset = "0xFF0E78", VA = "0xFF0E78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60029F1")]
			[Address(RVA = "0xFED8CC", Offset = "0xFED8CC", VA = "0xFED8CC")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x60029F2")]
			[Address(RVA = "0xFF0A28", Offset = "0xFF0A28", VA = "0xFF0A28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60029F3")]
			[Address(RVA = "0xFF0A2C", Offset = "0xFF0A2C", VA = "0xFF0A2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60029F5")]
			[Address(RVA = "0xFF0DF0", Offset = "0xFF0DF0", VA = "0xFF0DF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x4002101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ILanguageSource owner;

		[Token(Token = "0x4002102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4002103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4002104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x4002105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
		public bool mIsGlobalSource;

		[Token(Token = "0x4002106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TermData> mTerms;

		[Token(Token = "0x4002107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4002108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4002109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x400210A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTerm_AppName;

		[Token(Token = "0x400210B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x400210C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x400210D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x400210E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400210F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4002110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x4002111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x4002112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4002113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x4002114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x4002115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4002117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4002118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4002119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private string mDelayedGoogleData;

		[Token(Token = "0x400211A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x400211B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static char[] CategorySeparators;

		[Token(Token = "0x170001E8")]
		public UnityEngine.Object ownerObject
		{
			[Token(Token = "0x6001B9E")]
			[Address(RVA = "0xFE5D78", Offset = "0xFE5D78", VA = "0xFE5D78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000024")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0xFE51EC", Offset = "0xFE51EC", VA = "0xFE51EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D1288", Offset = "0x5D1288")]
			add
			{
			}
			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0xFE5E10", Offset = "0xFE5E10", VA = "0xFE5E10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D1298", Offset = "0x5D1298")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xFE482C", Offset = "0xFE482C", VA = "0xFE482C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xFE48F8", Offset = "0xFE48F8", VA = "0xFE48F8")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xFE6BB8", Offset = "0xFE6BB8", VA = "0xFE6BB8")]
		public bool IsEqualTo(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xFE7434", Offset = "0xFE7434", VA = "0xFE7434")]
		internal bool ManagerHasASimilarSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xFE75B0", Offset = "0xFE75B0", VA = "0xFE75B0")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xFE76AC", Offset = "0xFE76AC", VA = "0xFE76AC")]
		public bool IsGlobalSource()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xFE76B4", Offset = "0xFE76B4", VA = "0xFE76B4")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x6001BA8")]
		[Address(RVA = "0xFE6580", Offset = "0xFE6580", VA = "0xFE6580")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001BA9")]
		[Address(RVA = "0xFE76B8", Offset = "0xFE76B8", VA = "0xFE76B8")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001BAA")]
		[Address(RVA = "0xFE77C8", Offset = "0xFE77C8", VA = "0xFE77C8")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xFE7848", Offset = "0xFE7848", VA = "0xFE7848")]
		public void AddAsset(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xFE7908", Offset = "0xFE7908", VA = "0xFE7908")]
		public string Export_I2CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xFE8234", Offset = "0xFE8234", VA = "0xFE8234")]
		private static void AppendI2Term(StringBuilder Builder, int nLanguages, string Term, TermData termData, char Separator, string forceSpecialization)
		{
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xFE85F0", Offset = "0xFE85F0", VA = "0xFE85F0")]
		private static void AppendI2Text(StringBuilder Builder, string text)
		{
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xFE86FC", Offset = "0xFE86FC", VA = "0xFE86FC")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xFE8EC0", Offset = "0xFE8EC0", VA = "0xFE8EC0")]
		public string Export_CSV(string Category, char Separator = ',', bool specializationsAsRows = true)
		{
			return null;
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xFE9AA8", Offset = "0xFE9AA8", VA = "0xFE9AA8")]
		private static void AppendTerm(StringBuilder Builder, int nLanguages, string Term, TermData termData, string specialization, char Separator)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xFE98F4", Offset = "0xFE98F4", VA = "0xFE98F4")]
		private static void AppendString(StringBuilder Builder, string Text, char Separator)
		{
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xFE9E2C", Offset = "0xFE9E2C", VA = "0xFE9E2C")]
		private static void AppendTranslation(StringBuilder Builder, string Text, char Separator, string tags)
		{
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xFEA018", Offset = "0xFEA018", VA = "0xFEA018")]
		public UnityWebRequest Export_Google_CreateWWWcall(eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xFEA274", Offset = "0xFEA274", VA = "0xFEA274")]
		private string Export_Google_CreateData()
		{
			return null;
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xFEA758", Offset = "0xFEA758", VA = "0xFEA758")]
		public string Import_CSV(string Category, string CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xFEB7E4", Offset = "0xFEB7E4", VA = "0xFEB7E4")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xFEA79C", Offset = "0xFEA79C", VA = "0xFEA79C")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xFEB824", Offset = "0xFEB824", VA = "0xFEB824")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xFEBE30", Offset = "0xFEBE30", VA = "0xFEBE30")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xFEC18C", Offset = "0xFEC18C", VA = "0xFEC18C")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xFEC494", Offset = "0xFEC494", VA = "0xFEC494")]
		public static void FreeUnusedLanguages()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xFEC734", Offset = "0xFEC734", VA = "0xFEC734")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xFECC64", Offset = "0xFECC64", VA = "0xFECC64")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xFED4F8", Offset = "0xFED4F8", VA = "0xFED4F8")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xFEC9FC", Offset = "0xFEC9FC", VA = "0xFEC9FC")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xFED824", Offset = "0xFED824", VA = "0xFED824")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D12A8", Offset = "0x5D12A8")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xFED8EC", Offset = "0xFED8EC", VA = "0xFED8EC")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xFED990", Offset = "0xFED990", VA = "0xFED990")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xFEDB24", Offset = "0xFEDB24", VA = "0xFEDB24")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xFEDCB0", Offset = "0xFEDCB0", VA = "0xFEDCB0")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xFECD0C", Offset = "0xFECD0C", VA = "0xFECD0C")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xFE6E7C", Offset = "0xFE6E7C", VA = "0xFE6E7C")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xFEDFC4", Offset = "0xFEDFC4", VA = "0xFEDFC4")]
		public LanguageData GetLanguageData(string language, bool AllowDiscartingRegion = true)
		{
			return null;
		}

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xFEE07C", Offset = "0xFEE07C", VA = "0xFEE07C")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xFEB8C8", Offset = "0xFEB8C8", VA = "0xFEB8C8")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xFEDD78", Offset = "0xFEDD78", VA = "0xFEDD78")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xFEE154", Offset = "0xFEE154", VA = "0xFEE154")]
		public static bool AreTheSameLanguage(string Language1, string Language2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xFEE208", Offset = "0xFEE208", VA = "0xFEE208")]
		public static string GetLanguageWithoutRegion(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xFEE308", Offset = "0xFEE308", VA = "0xFEE308")]
		public void AddLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xFEE3A0", Offset = "0xFEE3A0", VA = "0xFEE3A0")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xFEE5D8", Offset = "0xFEE5D8", VA = "0xFEE5D8")]
		public void RemoveLanguage(string LanguageName)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xFEEA04", Offset = "0xFEEA04", VA = "0xFEEA04")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xFEEBB0", Offset = "0xFEEBB0", VA = "0xFEEBB0")]
		public List<string> GetLanguagesCode(bool allowRegions = true, bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xFEEDF4", Offset = "0xFEEDF4", VA = "0xFEEDF4")]
		public bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xFEEEC8", Offset = "0xFEEEC8", VA = "0xFEEEC8")]
		public void EnableLanguage(string Language, bool bEnabled)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xFEEF9C", Offset = "0xFEEF9C", VA = "0xFEEF9C")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xFEEFAC", Offset = "0xFEEFAC", VA = "0xFEEFAC")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xFEF27C", Offset = "0xFEF27C", VA = "0xFEF27C")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xFEF754", Offset = "0xFEF754", VA = "0xFEF754")]
		public void LoadAllLanguages(bool forceLoad = false)
		{
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xFEF468", Offset = "0xFEF468", VA = "0xFEF468")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xFEC018", Offset = "0xFEC018", VA = "0xFEC018")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xFEBF34", Offset = "0xFEBF34", VA = "0xFEBF34")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xFEA4E8", Offset = "0xFEA4E8", VA = "0xFEA4E8")]
		public List<string> GetCategories(bool OnlyMainCategory = false, [Optional] List<string> Categories)
		{
			return null;
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xFEF994", Offset = "0xFEF994", VA = "0xFEF994")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xFEF808", Offset = "0xFEF808", VA = "0xFEF808")]
		public static string GetCategoryFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001BDF")]
		[Address(RVA = "0xFEFADC", Offset = "0xFEFADC", VA = "0xFEFADC")]
		public static void DeserializeFullTerm(string FullTerm, out string Key, out string Category, bool OnlyMainCategory = false)
		{
		}

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xFE61E8", Offset = "0xFE61E8", VA = "0xFE61E8")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xFEFCB4", Offset = "0xFEFCB4", VA = "0xFEFCB4")]
		public string GetTranslation(string term, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xFEFD60", Offset = "0xFEFD60", VA = "0xFEFD60")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xFE8A8C", Offset = "0xFE8A8C", VA = "0xFE8A8C")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xFEFFE0", Offset = "0xFEFFE0", VA = "0xFEFFE0")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xFE7148", Offset = "0xFE7148", VA = "0xFE7148")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xFF0274", Offset = "0xFF0274", VA = "0xFF0274")]
		public bool ContainsTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xFF0290", Offset = "0xFF0290", VA = "0xFF0290")]
		public List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xFF0000", Offset = "0xFF0000", VA = "0xFF0000")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x6001BE9")]
		[Address(RVA = "0xFF0518", Offset = "0xFF0518", VA = "0xFF0518")]
		public void RemoveTerm(string term)
		{
		}

		[Token(Token = "0x6001BEA")]
		[Address(RVA = "0xFEBB68", Offset = "0xFEBB68", VA = "0xFEBB68")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xFE5028", Offset = "0xFE5028", VA = "0xFE5028")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x400211D")]
		None,
		[Token(Token = "0x400211E")]
		Replace,
		[Token(Token = "0x400211F")]
		Merge,
		[Token(Token = "0x4002120")]
		AddNewTerms
	}
	[Token(Token = "0x200038A")]
	public class LocalizationReader
	{
		[Token(Token = "0x6001BED")]
		[Address(RVA = "0x21FEBAC", Offset = "0x21FEBAC", VA = "0x21FEBAC")]
		public static Dictionary<string, string> ReadTextAsset(TextAsset asset)
		{
			return null;
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0x21FEE98", Offset = "0x21FEE98", VA = "0x21FEE98")]
		public static bool TextAsset_ReadLine(string line, out string key, out string value, out string category, out string comment, out string termType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0x21FF3CC", Offset = "0x21FF3CC", VA = "0x21FF3CC")]
		public static string ReadCSVfile(string Path, Encoding encoding)
		{
			return null;
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0x21FF5D4", Offset = "0x21FF5D4", VA = "0x21FF5D4")]
		public static List<string[]> ReadCSV(string Text, char Separator = ',')
		{
			return null;
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0x21FF6E0", Offset = "0x21FF6E0", VA = "0x21FF6E0")]
		private static string[] ParseCSVline(string Line, ref int iStart, char Separator)
		{
			return null;
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0x21FF934", Offset = "0x21FF934", VA = "0x21FF934")]
		private static void AddCSVtoken(ref List<string> list, ref string Line, int iEnd, ref int iWordStart)
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0x21FFB28", Offset = "0x21FFB28", VA = "0x21FFB28")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0x21FF2FC", Offset = "0x21FF2FC", VA = "0x21FF2FC")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0x21FFDA4", Offset = "0x21FFDA4", VA = "0x21FFDA4")]
		public static string EncodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0x21FF244", Offset = "0x21FF244", VA = "0x21FF244")]
		public static string DecodeString(string str)
		{
			return null;
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0x21FFEDC", Offset = "0x21FFEDC", VA = "0x21FFEDC")]
		public LocalizationReader()
		{
		}
	}
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C215C", Offset = "0x5C215C")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x2000625")]
		public enum TermModification
		{
			[Token(Token = "0x4002F3E")]
			DontModify,
			[Token(Token = "0x4002F3F")]
			ToUpper,
			[Token(Token = "0x4002F40")]
			ToLower,
			[Token(Token = "0x4002F41")]
			ToUpperFirst,
			[Token(Token = "0x4002F42")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3110", Offset = "0x5C3110")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Predicate<UnityEngine.Object> <>9__49_0;

			[Token(Token = "0x4002F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<UnityEngine.Object, string> <>9__49_1;

			[Token(Token = "0x4002F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__49_2;

			[Token(Token = "0x4002F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__49_3;

			[Token(Token = "0x60029F8")]
			[Address(RVA = "0x22018A0", Offset = "0x22018A0", VA = "0x22018A0")]
			public <>c()
			{
			}

			[Token(Token = "0x60029F9")]
			[Address(RVA = "0x22018A8", Offset = "0x22018A8", VA = "0x22018A8")]
			internal bool <UpdateAssetDictionary>b__49_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x60029FA")]
			[Address(RVA = "0x2201930", Offset = "0x2201930", VA = "0x2201930")]
			internal string <UpdateAssetDictionary>b__49_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x60029FB")]
			[Address(RVA = "0x220195C", Offset = "0x220195C", VA = "0x220195C")]
			internal string <UpdateAssetDictionary>b__49_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x60029FC")]
			[Address(RVA = "0x2201A30", Offset = "0x2201A30", VA = "0x2201A30")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__49_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4002121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string mTerm;

		[Token(Token = "0x4002122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x4002123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x4002124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x4002125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x4002126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x4002127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public string TermPrefix;

		[Token(Token = "0x4002128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string TermSuffix;

		[Token(Token = "0x4002129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x400212A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x400212B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool IgnoreRTL;

		[Token(Token = "0x400212C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x400212D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x400212E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x400212F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4002130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4002131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x4002132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4002133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x4002134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x4002135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string SecondaryTranslation;

		[Token(Token = "0x4002136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string CallBackTerm;

		[Token(Token = "0x4002137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4002138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4002139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x400213A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x400213B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x400213C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x400213D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x400213E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x400213F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170001E9")]
		public string Term
		{
			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0x21FFEE4", Offset = "0x21FFEE4", VA = "0x21FFEE4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0x21FFEEC", Offset = "0x21FFEEC", VA = "0x21FFEEC")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001BFA")]
			[Address(RVA = "0x21FFF28", Offset = "0x21FFF28", VA = "0x21FFF28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0x21FFF30", Offset = "0x21FFF30", VA = "0x21FFF30")]
			set
			{
			}
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0x21FFF80", Offset = "0x21FFF80", VA = "0x21FFF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0x2200A84", Offset = "0x2200A84", VA = "0x2200A84")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0x2200A8C", Offset = "0x2200A8C", VA = "0x2200A8C")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0x21FDC58", Offset = "0x21FDC58", VA = "0x21FDC58")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0x22003F0", Offset = "0x22003F0", VA = "0x22003F0")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0x2200AF8", Offset = "0x2200AF8", VA = "0x2200AF8")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C02")]
		[Address(RVA = "0x2200C9C", Offset = "0x2200C9C", VA = "0x2200C9C")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0x2200DAC", Offset = "0x2200DAC", VA = "0x2200DAC")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0x21FFEF0", Offset = "0x21FFEF0", VA = "0x21FFEF0")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0x21FFF3C", Offset = "0x21FFF3C", VA = "0x21FFF3C")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x6001C06")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0x21FFFB4", Offset = "0x21FFFB4", VA = "0x21FFFB4")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x6001C08")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C09")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0x2200DEC", Offset = "0x2200DEC", VA = "0x2200DEC")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001C0B")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0x2200F50", Offset = "0x2200F50", VA = "0x2200F50")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0x2201564", Offset = "0x2201564", VA = "0x2201564")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0x2201624", Offset = "0x2201624", VA = "0x2201624")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0x22016A8", Offset = "0x22016A8", VA = "0x22016A8")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C21A4", Offset = "0x5C21A4")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x4002140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<string> _Terms;

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0x2201A94", Offset = "0x2201A94", VA = "0x2201A94")]
		public void Start()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0x2201C90", Offset = "0x2201C90", VA = "0x2201C90")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0x2201D4C", Offset = "0x2201D4C", VA = "0x2201D4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0x2201B58", Offset = "0x2201B58", VA = "0x2201B58")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0x2201DD8", Offset = "0x2201DD8", VA = "0x2201DD8")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6001C15")]
		[Address(RVA = "0x2202004", Offset = "0x2202004", VA = "0x2202004")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6001C16")]
		[Address(RVA = "0x220251C", Offset = "0x220251C", VA = "0x220251C")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001C17")]
		[Address(RVA = "0x220230C", Offset = "0x220230C", VA = "0x220230C")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001C18")]
		[Address(RVA = "0x2202818", Offset = "0x2202818", VA = "0x2202818")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public static class LocalizationManager
	{
		[Token(Token = "0x2000627")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x2000628")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3120", Offset = "0x5C3120")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x4002F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<string> Languages;

			[Token(Token = "0x4002F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002A05")]
			[Address(RVA = "0x21FC56C", Offset = "0x21FC56C", VA = "0x21FC56C")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x6002A06")]
			[Address(RVA = "0x21FC574", Offset = "0x21FC574", VA = "0x21FC574")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3130", Offset = "0x5C3130")]
		private sealed class <>c__DisplayClass34_0
		{
			[Token(Token = "0x4002F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<string> Languages;

			[Token(Token = "0x4002F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x6002A07")]
			[Address(RVA = "0x21FC5F8", Offset = "0x21FC5F8", VA = "0x21FC5F8")]
			public <>c__DisplayClass34_0()
			{
			}

			[Token(Token = "0x6002A08")]
			[Address(RVA = "0x21FC600", Offset = "0x21FC600", VA = "0x21FC600")]
			internal bool <GetAllLanguagesCode>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3140", Offset = "0x5C3140")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6002A0A")]
			[Address(RVA = "0x21FC4DC", Offset = "0x21FC4DC", VA = "0x21FC4DC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A0B")]
			[Address(RVA = "0x21FC4E4", Offset = "0x21FC4E4", VA = "0x21FC4E4")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3150", Offset = "0x5C3150")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x4002F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject root;

			[Token(Token = "0x6002A0C")]
			[Address(RVA = "0x21FC684", Offset = "0x21FC684", VA = "0x21FC684")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6002A0D")]
			[Address(RVA = "0x21FC68C", Offset = "0x21FC68C", VA = "0x21FC68C")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3160", Offset = "0x5C3160")]
		private sealed class <>c__DisplayClass43_0
		{
			[Token(Token = "0x4002F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Dictionary<string, object> parameters;

			[Token(Token = "0x6002A0E")]
			[Address(RVA = "0x21FC71C", Offset = "0x21FC71C", VA = "0x21FC71C")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002A0F")]
			[Address(RVA = "0x21FC724", Offset = "0x21FC724", VA = "0x21FC724")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3170", Offset = "0x5C3170")]
		private sealed class <Delayed_Import_Google>d__59 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x4002F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LanguageSourceData source;

			[Token(Token = "0x4002F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool justCheck;

			[Token(Token = "0x17000383")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A13")]
				[Address(RVA = "0x21FCAF4", Offset = "0x21FCAF4", VA = "0x21FCAF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000384")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A15")]
				[Address(RVA = "0x21FCB84", Offset = "0x21FCB84", VA = "0x21FCB84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A10")]
			[Address(RVA = "0x21FCA00", Offset = "0x21FCA00", VA = "0x21FCA00")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__59(int <>1__state)
			{
			}

			[Token(Token = "0x6002A11")]
			[Address(RVA = "0x21FCA20", Offset = "0x21FCA20", VA = "0x21FCA20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A12")]
			[Address(RVA = "0x21FCA24", Offset = "0x21FCA24", VA = "0x21FCA24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A14")]
			[Address(RVA = "0x21FCAFC", Offset = "0x21FCAFC", VA = "0x21FCAFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3180", Offset = "0x5C3180")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4002F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x6002A16")]
			[Address(RVA = "0x21FC7C4", Offset = "0x21FC7C4", VA = "0x21FC7C4")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x6002A17")]
			[Address(RVA = "0x21FC7CC", Offset = "0x21FC7CC", VA = "0x21FC7CC")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3190", Offset = "0x5C3190")]
		private sealed class <Coroutine_LocalizeAll>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x17000385")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A1B")]
				[Address(RVA = "0x21FC968", Offset = "0x21FC968", VA = "0x21FC968", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000386")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A1D")]
				[Address(RVA = "0x21FC9F8", Offset = "0x21FC9F8", VA = "0x21FC9F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A18")]
			[Address(RVA = "0x21FC818", Offset = "0x21FC818", VA = "0x21FC818")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6002A19")]
			[Address(RVA = "0x21FC838", Offset = "0x21FC838", VA = "0x21FC838", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A1A")]
			[Address(RVA = "0x21FC83C", Offset = "0x21FC83C", VA = "0x21FC83C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A1C")]
			[Address(RVA = "0x21FC970", Offset = "0x21FC970", VA = "0x21FC970", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x4002142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static string mLanguageCode;

		[Token(Token = "0x4002143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x4002144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x4002145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public static bool IsRight2Left;

		[Token(Token = "0x4002146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public static bool HasJoinedWords;

		[Token(Token = "0x4002147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x4002148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x4002149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x400214A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static string[] GlobalSources;

		[Token(Token = "0x400214B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x400214C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x400214E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x400214F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x4002150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170001EB")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xFEC6A4", Offset = "0xFEC6A4", VA = "0xFEC6A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xFD17D8", Offset = "0xFD17D8", VA = "0xFD17D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001EC")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xFF2784", Offset = "0xFF2784", VA = "0xFF2784")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xFF2814", Offset = "0xFF2814", VA = "0xFF2814")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public static string CurrentRegion
		{
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0xFF2C68", Offset = "0xFF2C68", VA = "0xFF2C68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xFF2E84", Offset = "0xFF2E84", VA = "0xFF2E84")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public static string CurrentRegionCode
		{
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xFF3110", Offset = "0xFF3110", VA = "0xFF3110")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xFF3230", Offset = "0xFF3230", VA = "0xFF3230")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public static CultureInfo CurrentCulture
		{
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0xFF3398", Offset = "0xFF3398", VA = "0xFF3398")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000025")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xFD0E28", Offset = "0xFD0E28", VA = "0xFD0E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D1398", Offset = "0x5D1398")]
			add
			{
			}
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xFD0C94", Offset = "0xFD0C94", VA = "0xFD0C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D13A8", Offset = "0x5D13A8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C19")]
		[Address(RVA = "0xFDBD48", Offset = "0xFDBD48", VA = "0xFDBD48")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6001C1A")]
		[Address(RVA = "0xFF1918", Offset = "0xFF1918", VA = "0xFF1918")]
		public static string GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001C1B")]
		[Address(RVA = "0xFEDD70", Offset = "0xFEDD70", VA = "0xFEDD70")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001C1C")]
		[Address(RVA = "0xFDB790", Offset = "0xFDB790", VA = "0xFDB790")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xFF24F0", Offset = "0xFF24F0", VA = "0xFF24F0")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xFF3424", Offset = "0xFF3424", VA = "0xFF3424")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xFCFC58", Offset = "0xFCFC58", VA = "0xFCFC58")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xFF3564", Offset = "0xFF3564", VA = "0xFF3564")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xFF1190", Offset = "0xFF1190", VA = "0xFF1190")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xFD14B0", Offset = "0xFD14B0", VA = "0xFD14B0")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xFF1974", Offset = "0xFF1974", VA = "0xFF1974")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xFF21E4", Offset = "0xFF21E4", VA = "0xFF21E4")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xFF2950", Offset = "0xFF2950", VA = "0xFF2950")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xFF37F0", Offset = "0xFF37F0", VA = "0xFF37F0")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xFF3B48", Offset = "0xFF3B48", VA = "0xFF3B48")]
		public static List<string> GetAllLanguagesCode(bool allowRegions = true, bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xFF3E04", Offset = "0xFF3E04", VA = "0xFF3E04")]
		public static bool IsLanguageEnabled(string Language)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xFF3F88", Offset = "0xFF3F88", VA = "0xFF3F88")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xFF41B0", Offset = "0xFF41B0", VA = "0xFF41B0")]
		public static void PreviewLanguage(string NewLanguage)
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xFF0E80", Offset = "0xFF0E80", VA = "0xFF0E80")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xFF42D4", Offset = "0xFF42D4", VA = "0xFF42D4")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xFF4A88", Offset = "0xFF4A88", VA = "0xFF4A88")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C37")]
		[Address(RVA = "0xFF4B84", Offset = "0xFF4B84", VA = "0xFF4B84")]
		public static void ApplyLocalizationParams(ref string translation, Dictionary<string, object> parameters, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xFF4430", Offset = "0xFF4430", VA = "0xFF4430")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xFF4E9C", Offset = "0xFF4E9C", VA = "0xFF4E9C")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xFF525C", Offset = "0xFF525C", VA = "0xFF525C")]
		private static string GetPluralType(MatchCollection matches, string langCode, _GetParam getParam)
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xFF5548", Offset = "0xFF5548", VA = "0xFF5548")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xFF55D0", Offset = "0xFF55D0", VA = "0xFF55D0")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0xFF5BA4", Offset = "0xFF5BA4", VA = "0xFF5BA4")]
		public static string FixRTL_IfNeeded(string text, int maxCharacters = 0, bool ignoreNumber = false)
		{
			return null;
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0xFF361C", Offset = "0xFF361C", VA = "0xFF361C")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3F")]
		[Address(RVA = "0xFF10C0", Offset = "0xFF10C0", VA = "0xFF10C0")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xFF5C78", Offset = "0xFF5C78", VA = "0xFF5C78")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xFF60E0", Offset = "0xFF60E0", VA = "0xFF60E0")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xFF5E40", Offset = "0xFF5E40", VA = "0xFF5E40")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xFE5F1C", Offset = "0xFE5F1C", VA = "0xFE5F1C")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xFF636C", Offset = "0xFF636C", VA = "0xFF636C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1320", Offset = "0x5D1320")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xFE6AFC", Offset = "0xFE6AFC", VA = "0xFE6AFC")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xFF6434", Offset = "0xFF6434", VA = "0xFF6434")]
		public static bool IsGlobalSource(string SourceName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xFF64EC", Offset = "0xFF64EC", VA = "0xFF64EC")]
		public static LanguageSourceData GetSourceContaining(string term, bool fallbackToFirst = true)
		{
			return null;
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xFF67E4", Offset = "0xFF67E4", VA = "0xFF67E4")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xFF69A4", Offset = "0xFF69A4", VA = "0xFF69A4")]
		public static void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xFF36D4", Offset = "0xFF36D4", VA = "0xFF36D4")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xFF6B00", Offset = "0xFF6B00", VA = "0xFF6B00")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xFF701C", Offset = "0xFF701C", VA = "0xFF701C")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x6001C4F")]
		[Address(RVA = "0xFD0840", Offset = "0xFD0840", VA = "0xFD0840")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6001C50")]
		[Address(RVA = "0xFF7660", Offset = "0xFF7660", VA = "0xFF7660")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return null;
		}

		[Token(Token = "0x6001C51")]
		[Address(RVA = "0xFF739C", Offset = "0xFF739C", VA = "0xFF739C")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C52")]
		public static T GetTranslatedObject<T>(string AssetName, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C53")]
		public static T GetTranslatedObjectByTermName<T>(string Term, [Optional] Localize optionalLocComp) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001C54")]
		[Address(RVA = "0xFF7718", Offset = "0xFF7718", VA = "0xFF7718")]
		public static string GetAppName(string languageCode)
		{
			return null;
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xFE69BC", Offset = "0xFE69BC", VA = "0xFE69BC")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xFF7D18", Offset = "0xFF7D18", VA = "0xFF7D18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D13B8", Offset = "0x5D13B8")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xFF7AD4", Offset = "0xFF7AD4", VA = "0xFF7AD4")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xFF7D88", Offset = "0xFF7D88", VA = "0xFF7D88")]
		public static List<string> GetCategories()
		{
			return null;
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xFF7F28", Offset = "0xFF7F28", VA = "0xFF7F28")]
		public static List<string> GetTermsList([Optional] string Category)
		{
			return null;
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xFF82E4", Offset = "0xFF82E4", VA = "0xFF82E4")]
		public static TermData GetTermData(string term)
		{
			return null;
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xFF4C80", Offset = "0xFF4C80", VA = "0xFF4C80")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x200038E")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x6001C5D")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x6001C5E")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x6001C5F")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x6001C60")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x6001C61")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x6001C62")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x6001C63")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x6001C64")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0xFE4524", Offset = "0xFE4524", VA = "0xFE4524")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x4002151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x6001C66")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C67")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x4002152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Name;

		[Token(Token = "0x4002153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Priority;

		[Token(Token = "0x6001C68")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x6001C69")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x6001C6A")]
		public abstract Type GetTargetType();

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xFE452C", Offset = "0xFE452C", VA = "0xFE452C")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x6001C6C")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001C6D")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x6001C6E")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x6001C6F")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C70")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x6001C71")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x4002154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4002155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x4002156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x22029D0", Offset = "0x22029D0", VA = "0x22029D0")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x22029D4", Offset = "0x22029D4", VA = "0x22029D4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D1430", Offset = "0x5D1430")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x2202AD4", Offset = "0x2202AD4", VA = "0x2202AD4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x2202ADC", Offset = "0x2202ADC", VA = "0x2202ADC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x2202AE4", Offset = "0x2202AE4", VA = "0x2202AE4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x2202AEC", Offset = "0x2202AEC", VA = "0x2202AEC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x2202AF4", Offset = "0x2202AF4", VA = "0x2202AF4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x2202AFC", Offset = "0x2202AFC", VA = "0x2202AFC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x2202C90", Offset = "0x2202C90", VA = "0x2202C90", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x22035C0", Offset = "0x22035C0", VA = "0x22035C0")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x2203958", Offset = "0x2203958", VA = "0x2203958")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x2203428", Offset = "0x2203428", VA = "0x2203428")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x22037E0", Offset = "0x22037E0", VA = "0x22037E0")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x2203BA0", Offset = "0x2203BA0", VA = "0x2203BA0")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x4002158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x4002159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x400215A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x400215B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool mInitializeAlignment;

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x2203C1C", Offset = "0x2203C1C", VA = "0x2203C1C")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0x2203C20", Offset = "0x2203C20", VA = "0x2203C20")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D1444", Offset = "0x5D1444")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0x2203D20", Offset = "0x2203D20", VA = "0x2203D20", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0x2203D28", Offset = "0x2203D28", VA = "0x2203D28", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0x2203D30", Offset = "0x2203D30", VA = "0x2203D30", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0x2203D38", Offset = "0x2203D38", VA = "0x2203D38", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0x2203D40", Offset = "0x2203D40", VA = "0x2203D40", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0x2203D48", Offset = "0x2203D48", VA = "0x2203D48", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0x2203EDC", Offset = "0x2203EDC", VA = "0x2203EDC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0x2204674", Offset = "0x2204674", VA = "0x2204674")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0x22046F0", Offset = "0x22046F0", VA = "0x22046F0")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x22046F4", Offset = "0x22046F4", VA = "0x22046F4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D1458", Offset = "0x5D1458")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x22047F4", Offset = "0x22047F4", VA = "0x22047F4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x22047FC", Offset = "0x22047FC", VA = "0x22047FC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x2204804", Offset = "0x2204804", VA = "0x2204804", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x220480C", Offset = "0x220480C", VA = "0x220480C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x2204814", Offset = "0x2204814", VA = "0x2204814", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x220481C", Offset = "0x220481C", VA = "0x220481C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x220493C", Offset = "0x220493C", VA = "0x220493C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x2204B3C", Offset = "0x2204B3C", VA = "0x2204B3C")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x22028A4", Offset = "0x22028A4", VA = "0x22028A4", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x2202900", Offset = "0x2202900", VA = "0x2202900")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x2204BA0", Offset = "0x2204BA0", VA = "0x2204BA0")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0x2204BA4", Offset = "0x2204BA4", VA = "0x2204BA4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D146C", Offset = "0x5D146C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x2204C90", Offset = "0x2204C90", VA = "0x2204C90", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x2204CEC", Offset = "0x2204CEC", VA = "0x2204CEC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x2204CF4", Offset = "0x2204CF4", VA = "0x2204CF4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x2204CFC", Offset = "0x2204CFC", VA = "0x2204CFC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x2204D04", Offset = "0x2204D04", VA = "0x2204D04", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x2204D0C", Offset = "0x2204D0C", VA = "0x2204D0C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x2204D14", Offset = "0x2204D14", VA = "0x2204D14", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x2204D54", Offset = "0x2204D54", VA = "0x2204D54", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x2204F38", Offset = "0x2204F38", VA = "0x2204F38")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x2204F9C", Offset = "0x2204F9C", VA = "0x2204F9C")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x2204FA0", Offset = "0x2204FA0", VA = "0x2204FA0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D1480", Offset = "0x5D1480")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x22050A0", Offset = "0x22050A0", VA = "0x22050A0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x22050A8", Offset = "0x22050A8", VA = "0x22050A8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x22050B0", Offset = "0x22050B0", VA = "0x22050B0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0x22050B8", Offset = "0x22050B8", VA = "0x22050B8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0x22050C0", Offset = "0x22050C0", VA = "0x22050C0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0x22050C8", Offset = "0x22050C8", VA = "0x22050C8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0x2205394", Offset = "0x2205394", VA = "0x2205394", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0x2205624", Offset = "0x2205624", VA = "0x2205624")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0x2202964", Offset = "0x2202964", VA = "0x2202964", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0x220296C", Offset = "0x220296C", VA = "0x220296C")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0x2205688", Offset = "0x2205688", VA = "0x2205688")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0x220568C", Offset = "0x220568C", VA = "0x220568C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D1494", Offset = "0x5D1494")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0x2205778", Offset = "0x2205778", VA = "0x2205778", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0x2205780", Offset = "0x2205780", VA = "0x2205780", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0x2205788", Offset = "0x2205788", VA = "0x2205788", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0x2205790", Offset = "0x2205790", VA = "0x2205790", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0x2205798", Offset = "0x2205798", VA = "0x2205798", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0x22057A0", Offset = "0x22057A0", VA = "0x22057A0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0x22057A8", Offset = "0x22057A8", VA = "0x22057A8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0x22057E8", Offset = "0x22057E8", VA = "0x22057E8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0x2205AEC", Offset = "0x2205AEC", VA = "0x2205AEC")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0x2205D80", Offset = "0x2205D80", VA = "0x2205D80")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x200039B")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0x2205DE4", Offset = "0x2205DE4", VA = "0x2205DE4")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001CBA")]
		[Address(RVA = "0x2205DE8", Offset = "0x2205DE8", VA = "0x2205DE8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D14A8", Offset = "0x5D14A8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CBB")]
		[Address(RVA = "0x2205EE8", Offset = "0x2205EE8", VA = "0x2205EE8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CBC")]
		[Address(RVA = "0x2205EF0", Offset = "0x2205EF0", VA = "0x2205EF0", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0x2205EF8", Offset = "0x2205EF8", VA = "0x2205EF8", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0x2205F00", Offset = "0x2205F00", VA = "0x2205F00", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0x2205F08", Offset = "0x2205F08", VA = "0x2205F08", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0x2205F10", Offset = "0x2205F10", VA = "0x2205F10", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0x2206034", Offset = "0x2206034", VA = "0x2206034", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0x2206174", Offset = "0x2206174", VA = "0x2206174")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x400215C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x400215D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x400215E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x400215F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0x22061D8", Offset = "0x22061D8", VA = "0x22061D8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0x22061DC", Offset = "0x22061DC", VA = "0x22061DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D14BC", Offset = "0x5D14BC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x22062DC", Offset = "0x22062DC", VA = "0x22062DC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x22062E4", Offset = "0x22062E4", VA = "0x22062E4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x22062EC", Offset = "0x22062EC", VA = "0x22062EC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x22062F4", Offset = "0x22062F4", VA = "0x22062F4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x22062FC", Offset = "0x22062FC", VA = "0x22062FC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x2206304", Offset = "0x2206304", VA = "0x2206304", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x2206494", Offset = "0x2206494", VA = "0x2206494", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x2206848", Offset = "0x2206848", VA = "0x2206848")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x22068BC", Offset = "0x22068BC", VA = "0x22068BC")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x22068C0", Offset = "0x22068C0", VA = "0x22068C0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D14D0", Offset = "0x5D14D0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x22069C0", Offset = "0x22069C0", VA = "0x22069C0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x22069C8", Offset = "0x22069C8", VA = "0x22069C8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0x22069D0", Offset = "0x22069D0", VA = "0x22069D0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x22069D8", Offset = "0x22069D8", VA = "0x22069D8", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0x2206A94", Offset = "0x2206A94", VA = "0x2206A94", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CD4")]
		[Address(RVA = "0x2206A9C", Offset = "0x2206A9C", VA = "0x2206A9C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CD5")]
		[Address(RVA = "0x2206CE8", Offset = "0x2206CE8", VA = "0x2206CE8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CD6")]
		[Address(RVA = "0x2206E28", Offset = "0x2206E28", VA = "0x2206E28")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0x2206E8C", Offset = "0x2206E8C", VA = "0x2206E8C")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0x2206E90", Offset = "0x2206E90", VA = "0x2206E90")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D14E4", Offset = "0x5D14E4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0x2206F90", Offset = "0x2206F90", VA = "0x2206F90", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0x2206F98", Offset = "0x2206F98", VA = "0x2206F98", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0x2206FA0", Offset = "0x2206FA0", VA = "0x2206FA0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0x2206FA8", Offset = "0x2206FA8", VA = "0x2206FA8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0x2206FB0", Offset = "0x2206FB0", VA = "0x2206FB0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0x2206FB8", Offset = "0x2206FB8", VA = "0x2206FB8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0x22070E0", Offset = "0x22070E0", VA = "0x22070E0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0x2207220", Offset = "0x2207220", VA = "0x2207220")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x4002160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x4002161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x4002162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x4002163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0x2207284", Offset = "0x2207284", VA = "0x2207284")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0x2207288", Offset = "0x2207288", VA = "0x2207288")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x5D14F8", Offset = "0x5D14F8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0x2207388", Offset = "0x2207388", VA = "0x2207388", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CE4")]
		[Address(RVA = "0x2207390", Offset = "0x2207390", VA = "0x2207390", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001CE5")]
		[Address(RVA = "0x2207398", Offset = "0x2207398", VA = "0x2207398", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0x22073A0", Offset = "0x22073A0", VA = "0x22073A0", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0x22073A8", Offset = "0x22073A8", VA = "0x22073A8", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0x22073B0", Offset = "0x22073B0", VA = "0x22073B0", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0x2207544", Offset = "0x2207544", VA = "0x2207544", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0x22079DC", Offset = "0x22079DC", VA = "0x22079DC")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0x2207AE4", Offset = "0x2207AE4", VA = "0x2207AE4")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public enum eTermType
	{
		[Token(Token = "0x4002165")]
		Text,
		[Token(Token = "0x4002166")]
		Font,
		[Token(Token = "0x4002167")]
		Texture,
		[Token(Token = "0x4002168")]
		AudioClip,
		[Token(Token = "0x4002169")]
		GameObject,
		[Token(Token = "0x400216A")]
		Sprite,
		[Token(Token = "0x400216B")]
		Material,
		[Token(Token = "0x400216C")]
		Child,
		[Token(Token = "0x400216D")]
		Mesh,
		[Token(Token = "0x400216E")]
		TextMeshPFont,
		[Token(Token = "0x400216F")]
		Object
	}
	[Token(Token = "0x20003A1")]
	public enum TranslationFlag : byte
	{
		[Token(Token = "0x4002171")]
		Normal = 1,
		[Token(Token = "0x4002172")]
		AutoTranslated
	}
	[Serializable]
	[Token(Token = "0x20003A2")]
	public class TermData
	{
		[Token(Token = "0x4002173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Term;

		[Token(Token = "0x4002174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x4002175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Description;

		[Token(Token = "0x4002176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string[] Languages;

		[Token(Token = "0x4002177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte[] Flags;

		[Token(Token = "0x4002178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0x2217544", Offset = "0x2217544", VA = "0x2217544")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0x22176A8", Offset = "0x22176A8", VA = "0x22176A8")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0x22177C8", Offset = "0x22177C8", VA = "0x22177C8")]
		public void RemoveSpecialization(string specialization)
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0x2217818", Offset = "0x2217818", VA = "0x2217818")]
		public void RemoveSpecialization(int idx, string specialization)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0x22179FC", Offset = "0x22179FC", VA = "0x22179FC")]
		public bool IsAutoTranslated(int idx, bool IsTouch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0x2217A48", Offset = "0x2217A48", VA = "0x2217A48")]
		public void Validate()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0x2217D70", Offset = "0x2217D70", VA = "0x2217D70")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0x2217E20", Offset = "0x2217E20", VA = "0x2217E20")]
		public bool HasSpecializations()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0x2217F54", Offset = "0x2217F54", VA = "0x2217F54")]
		public List<string> GetAllSpecializations()
		{
			return null;
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0x2218070", Offset = "0x2218070", VA = "0x2218070")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class TermsPopup : PropertyAttribute
	{
		[Token(Token = "0x4002179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C8AA8", Offset = "0x5C8AA8")]
		private string <Filter>k__BackingField;

		[Token(Token = "0x170001F0")]
		public string Filter
		{
			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0x2218144", Offset = "0x2218144", VA = "0x2218144")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D150C", Offset = "0x5D150C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CF8")]
			[Address(RVA = "0x221813C", Offset = "0x221813C", VA = "0x221813C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D151C", Offset = "0x5D151C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0x221811C", Offset = "0x221811C", VA = "0x221811C")]
		public TermsPopup(string filter = "")
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xFCFBDC", Offset = "0xFCFBDC", VA = "0xFCFBDC")]
		public void Start()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xFCFD58", Offset = "0xFCFD58", VA = "0xFCFD58")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x400217A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170001F1")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xFD090C", Offset = "0xFD090C", VA = "0xFD090C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xFD0AB8", Offset = "0xFD0AB8", VA = "0xFD0AB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0xFD0B5C", Offset = "0xFD0B5C", VA = "0xFD0B5C")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0xFD0B94", Offset = "0xFD0B94", VA = "0xFD0B94")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C21F4", Offset = "0x5C21F4")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x400217B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xFD0B9C", Offset = "0xFD0B9C", VA = "0xFD0B9C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xFD0FBC", Offset = "0xFD0FBC", VA = "0xFD0FBC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xFD1074", Offset = "0xFD1074", VA = "0xFD1074")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xFD10A0", Offset = "0xFD10A0", VA = "0xFD10A0")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31A0", Offset = "0x5C31A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x6002A1F")]
			[Address(RVA = "0xFE1B1C", Offset = "0xFE1B1C", VA = "0xFE1B1C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A20")]
			[Address(RVA = "0xFE1B24", Offset = "0xFE1B24", VA = "0xFE1B24")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xFE1260", Offset = "0xFE1260", VA = "0xFE1260")]
		internal static string Fix(string text)
		{
			return null;
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xFE1AA0", Offset = "0xFE1AA0", VA = "0xFE1AA0")]
		public HindiFixer()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31B0", Offset = "0x5C31B0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6002A22")]
			[Address(RVA = "0xFE450C", Offset = "0xFE450C", VA = "0xFE450C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002A23")]
			[Address(RVA = "0xFE4514", Offset = "0xFE4514", VA = "0xFE4514")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400217C")]
		public const string ValidChars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_";

		[Token(Token = "0x400217D")]
		public const string NumberChars = "0123456789";

		[Token(Token = "0x400217E")]
		public const string ValidNameSymbols = ".-_$#@*()[]{}+:?!&',^=<>~`";

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xFE314C", Offset = "0xFE314C", VA = "0xFE314C")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xFE3260", Offset = "0xFE3260", VA = "0xFE3260")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xFE3594", Offset = "0xFE3594", VA = "0xFE3594")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xFE3664", Offset = "0xFE3664", VA = "0xFE3664")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xFE3A44", Offset = "0xFE3A44", VA = "0xFE3A44")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xFE35C0", Offset = "0xFE35C0", VA = "0xFE35C0")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xFE3C14", Offset = "0xFE3C14", VA = "0xFE3C14")]
		public static bool RemoveResourcesPath(ref string sPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xFE3FA0", Offset = "0xFE3FA0", VA = "0xFE3FA0")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xFE3FA8", Offset = "0xFE3FA8", VA = "0xFE3FA8")]
		public static string GetPath(this Transform tr)
		{
			return null;
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xFE40C0", Offset = "0xFE40C0", VA = "0xFE40C0")]
		public static Transform FindObject(string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xFE40E0", Offset = "0xFE40E0", VA = "0xFE40E0")]
		public static Transform FindObject(Scene scene, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xFE42B8", Offset = "0xFE42B8", VA = "0xFE42B8")]
		public static Transform FindObject(Transform root, string objectPath)
		{
			return null;
		}

		[Token(Token = "0x6001D11")]
		public static H FindInParents<H>(Transform tr) where H : UnityEngine.Component
		{
			return null;
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0xFDF9C8", Offset = "0xFDF9C8", VA = "0xFDF9C8")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xFE446C", Offset = "0xFE446C", VA = "0xFE446C")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x6001D14")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x20003AA")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x2000633")]
		public struct ParamValue
		{
			[Token(Token = "0x4002F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x4002F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string Value;
		}

		[Token(Token = "0x400217F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x4002180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _IsGlobalManager;

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0x21FD8B0", Offset = "0x21FD8B0", VA = "0x21FD8B0", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0x21FD9DC", Offset = "0x21FD9DC", VA = "0x21FD9DC")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0x21FDB90", Offset = "0x21FDB90", VA = "0x21FDB90")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0x21FE914", Offset = "0x21FE914", VA = "0x21FE914", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0x21FE924", Offset = "0x21FE924", VA = "0x21FE924")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0x21FEA64", Offset = "0x21FEA64", VA = "0x21FEA64")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x21FEB20", Offset = "0x21FEB20", VA = "0x21FEB20")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AB")]
	public struct LocalizedString
	{
		[Token(Token = "0x4002181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x4002182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x4002183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x4002184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x4002185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x2207B58", Offset = "0x2207B58", VA = "0x2207B58")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x2207C64", Offset = "0x2207C64", VA = "0x2207C64")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x5D7D60", Offset = "0x5D7D60", VA = "0x5D7D60")]
		public LocalizedString(LocalizedString str)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x5D7D9C", Offset = "0x5D7D9C", VA = "0x5D7D9C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20003AC")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x220DE98", Offset = "0x220DE98", VA = "0x220DE98", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x220DFD8", Offset = "0x220DFD8", VA = "0x220DFD8", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x220E094", Offset = "0x220E094", VA = "0x220E094", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x220E09C", Offset = "0x220E09C", VA = "0x220E09C")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x6001D24")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x20003AE")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4002186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4002187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4002188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4002189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170001F2")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x6001D25")]
			[Address(RVA = "0x2201000", Offset = "0x2201000", VA = "0x2201000")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x220E0A4", Offset = "0x220E0A4", VA = "0x220E0A4")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001D27")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x220E1CC", Offset = "0x220E1CC", VA = "0x220E1CC")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x22014D8", Offset = "0x22014D8", VA = "0x22014D8")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D2A")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x220E140", Offset = "0x220E140", VA = "0x220E140")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x220E374", Offset = "0x220E374", VA = "0x220E374")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class RTLFixer
	{
		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x220859C", Offset = "0x220859C", VA = "0x220859C")]
		public static string Fix(string str)
		{
			return null;
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x2208938", Offset = "0x2208938", VA = "0x2208938")]
		public static string Fix(string str, bool rtl)
		{
			return null;
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x22085A8", Offset = "0x22085A8", VA = "0x22085A8")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x220A880", Offset = "0x220A880", VA = "0x220A880")]
		public RTLFixer()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	internal enum IsolatedArabicLetters
	{
		[Token(Token = "0x400218B")]
		Hamza = 65152,
		[Token(Token = "0x400218C")]
		Alef = 65165,
		[Token(Token = "0x400218D")]
		AlefHamza = 65155,
		[Token(Token = "0x400218E")]
		WawHamza = 65157,
		[Token(Token = "0x400218F")]
		AlefMaksoor = 65159,
		[Token(Token = "0x4002190")]
		AlefMaksora = 64508,
		[Token(Token = "0x4002191")]
		HamzaNabera = 65161,
		[Token(Token = "0x4002192")]
		Ba = 65167,
		[Token(Token = "0x4002193")]
		Ta = 65173,
		[Token(Token = "0x4002194")]
		Tha2 = 65177,
		[Token(Token = "0x4002195")]
		Jeem = 65181,
		[Token(Token = "0x4002196")]
		H7aa = 65185,
		[Token(Token = "0x4002197")]
		Khaa2 = 65189,
		[Token(Token = "0x4002198")]
		Dal = 65193,
		[Token(Token = "0x4002199")]
		Thal = 65195,
		[Token(Token = "0x400219A")]
		Ra2 = 65197,
		[Token(Token = "0x400219B")]
		Zeen = 65199,
		[Token(Token = "0x400219C")]
		Seen = 65201,
		[Token(Token = "0x400219D")]
		Sheen = 65205,
		[Token(Token = "0x400219E")]
		S9a = 65209,
		[Token(Token = "0x400219F")]
		Dha = 65213,
		[Token(Token = "0x40021A0")]
		T6a = 65217,
		[Token(Token = "0x40021A1")]
		T6ha = 65221,
		[Token(Token = "0x40021A2")]
		Ain = 65225,
		[Token(Token = "0x40021A3")]
		Gain = 65229,
		[Token(Token = "0x40021A4")]
		Fa = 65233,
		[Token(Token = "0x40021A5")]
		Gaf = 65237,
		[Token(Token = "0x40021A6")]
		Kaf = 65241,
		[Token(Token = "0x40021A7")]
		Lam = 65245,
		[Token(Token = "0x40021A8")]
		Meem = 65249,
		[Token(Token = "0x40021A9")]
		Noon = 65253,
		[Token(Token = "0x40021AA")]
		Ha = 65257,
		[Token(Token = "0x40021AB")]
		Waw = 65261,
		[Token(Token = "0x40021AC")]
		Ya = 65265,
		[Token(Token = "0x40021AD")]
		AlefMad = 65153,
		[Token(Token = "0x40021AE")]
		TaMarboota = 65171,
		[Token(Token = "0x40021AF")]
		PersianPe = 64342,
		[Token(Token = "0x40021B0")]
		PersianChe = 64378,
		[Token(Token = "0x40021B1")]
		PersianZe = 64394,
		[Token(Token = "0x40021B2")]
		PersianGaf = 64402,
		[Token(Token = "0x40021B3")]
		PersianGaf2 = 64398
	}
	[Token(Token = "0x20003B1")]
	internal enum GeneralArabicLetters
	{
		[Token(Token = "0x40021B5")]
		Hamza = 1569,
		[Token(Token = "0x40021B6")]
		Alef = 1575,
		[Token(Token = "0x40021B7")]
		AlefHamza = 1571,
		[Token(Token = "0x40021B8")]
		WawHamza = 1572,
		[Token(Token = "0x40021B9")]
		AlefMaksoor = 1573,
		[Token(Token = "0x40021BA")]
		AlefMagsora = 1609,
		[Token(Token = "0x40021BB")]
		HamzaNabera = 1574,
		[Token(Token = "0x40021BC")]
		Ba = 1576,
		[Token(Token = "0x40021BD")]
		Ta = 1578,
		[Token(Token = "0x40021BE")]
		Tha2 = 1579,
		[Token(Token = "0x40021BF")]
		Jeem = 1580,
		[Token(Token = "0x40021C0")]
		H7aa = 1581,
		[Token(Token = "0x40021C1")]
		Khaa2 = 1582,
		[Token(Token = "0x40021C2")]
		Dal = 1583,
		[Token(Token = "0x40021C3")]
		Thal = 1584,
		[Token(Token = "0x40021C4")]
		Ra2 = 1585,
		[Token(Token = "0x40021C5")]
		Zeen = 1586,
		[Token(Token = "0x40021C6")]
		Seen = 1587,
		[Token(Token = "0x40021C7")]
		Sheen = 1588,
		[Token(Token = "0x40021C8")]
		S9a = 1589,
		[Token(Token = "0x40021C9")]
		Dha = 1590,
		[Token(Token = "0x40021CA")]
		T6a = 1591,
		[Token(Token = "0x40021CB")]
		T6ha = 1592,
		[Token(Token = "0x40021CC")]
		Ain = 1593,
		[Token(Token = "0x40021CD")]
		Gain = 1594,
		[Token(Token = "0x40021CE")]
		Fa = 1601,
		[Token(Token = "0x40021CF")]
		Gaf = 1602,
		[Token(Token = "0x40021D0")]
		Kaf = 1603,
		[Token(Token = "0x40021D1")]
		Lam = 1604,
		[Token(Token = "0x40021D2")]
		Meem = 1605,
		[Token(Token = "0x40021D3")]
		Noon = 1606,
		[Token(Token = "0x40021D4")]
		Ha = 1607,
		[Token(Token = "0x40021D5")]
		Waw = 1608,
		[Token(Token = "0x40021D6")]
		Ya = 1610,
		[Token(Token = "0x40021D7")]
		AlefMad = 1570,
		[Token(Token = "0x40021D8")]
		TaMarboota = 1577,
		[Token(Token = "0x40021D9")]
		PersianPe = 1662,
		[Token(Token = "0x40021DA")]
		PersianChe = 1670,
		[Token(Token = "0x40021DB")]
		PersianZe = 1688,
		[Token(Token = "0x40021DC")]
		PersianGaf = 1711,
		[Token(Token = "0x40021DD")]
		PersianGaf2 = 1705
	}
	[Token(Token = "0x20003B2")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40021DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int from;

		[Token(Token = "0x40021DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int to;

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x22755F8", Offset = "0x22755F8", VA = "0x22755F8")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x20003B3")]
	internal class ArabicTable
	{
		[Token(Token = "0x40021E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40021E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170001F3")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6001D34")]
			[Address(RVA = "0x227694C", Offset = "0x227694C", VA = "0x227694C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x2275620", Offset = "0x2275620", VA = "0x2275620")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x22769E4", Offset = "0x22769E4", VA = "0x22769E4")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20003B4")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40021E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public char tashkeel;

		[Token(Token = "0x40021E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int position;

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0x220B38C", Offset = "0x220B38C", VA = "0x220B38C")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40021E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40021E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0x220A888", Offset = "0x220A888", VA = "0x220A888")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0x220B3B4", Offset = "0x220B3B4", VA = "0x220B3B4")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0x2208C18", Offset = "0x2208C18", VA = "0x2208C18")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0x220B6AC", Offset = "0x220B6AC", VA = "0x220B6AC")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0x220C5C0", Offset = "0x220C5C0", VA = "0x220C5C0")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0x220C1B0", Offset = "0x220C1B0", VA = "0x220C1B0")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0x220B830", Offset = "0x220B830", VA = "0x220B830")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x220CEA4", Offset = "0x220CEA4", VA = "0x220CEA4")]
		public RTLFixerTool()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C2258", Offset = "0x5C2258")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x40021E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string _Language;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x220E470", Offset = "0x220E470", VA = "0x220E470")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x220E474", Offset = "0x220E474", VA = "0x220E474")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x220E55C", Offset = "0x220E55C", VA = "0x220E55C")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C22A8", Offset = "0x5C22A8")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x220E564", Offset = "0x220E564", VA = "0x220E564")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x220E8C0", Offset = "0x220E8C0", VA = "0x220E8C0")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x220EA00", Offset = "0x220EA00", VA = "0x220EA00")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class StringObfucator
	{
		[Token(Token = "0x40021E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x2216E80", Offset = "0x2216E80", VA = "0x2216E80")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x22172B0", Offset = "0x22172B0", VA = "0x22172B0")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x22171F4", Offset = "0x22171F4", VA = "0x22171F4")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x22173C4", Offset = "0x22173C4", VA = "0x22173C4")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0x2216F94", Offset = "0x2216F94", VA = "0x2216F94")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0x22174A4", Offset = "0x22174A4", VA = "0x22174A4")]
		public StringObfucator()
		{
		}
	}
}
namespace I2.Loc.SimpleJSON
{
	[Token(Token = "0x20003B9")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x40021E9")]
		Array = 1,
		[Token(Token = "0x40021EA")]
		Class,
		[Token(Token = "0x40021EB")]
		Value,
		[Token(Token = "0x40021EC")]
		IntValue,
		[Token(Token = "0x40021ED")]
		DoubleValue,
		[Token(Token = "0x40021EE")]
		BoolValue,
		[Token(Token = "0x40021EF")]
		FloatValue
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C22FC", Offset = "0x5C22FC")]
	public class JSONNode
	{
		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31C0", Offset = "0x5C31C0")]
		private sealed class <get_Childs>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x17000387")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002A27")]
				[Address(RVA = "0x22155BC", Offset = "0x22155BC", VA = "0x22155BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000388")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A29")]
				[Address(RVA = "0x221564C", Offset = "0x221564C", VA = "0x221564C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A24")]
			[Address(RVA = "0x2213EF8", Offset = "0x2213EF8", VA = "0x2213EF8")]
			[DebuggerHidden]
			public <get_Childs>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6002A25")]
			[Address(RVA = "0x22155A0", Offset = "0x22155A0", VA = "0x22155A0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A26")]
			[Address(RVA = "0x22155A4", Offset = "0x22155A4", VA = "0x22155A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A28")]
			[Address(RVA = "0x22155C4", Offset = "0x22155C4", VA = "0x22155C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A2A")]
			[Address(RVA = "0x2215654", Offset = "0x2215654", VA = "0x2215654", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A2B")]
			[Address(RVA = "0x2215704", Offset = "0x2215704", VA = "0x2215704", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31D0", Offset = "0x5C31D0")]
		private sealed class <get_DeepChilds>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONNode <>4__this;

			[Token(Token = "0x4002F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4002F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x17000389")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002A31")]
				[Address(RVA = "0x2215E00", Offset = "0x2215E00", VA = "0x2215E00", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A33")]
				[Address(RVA = "0x2215E90", Offset = "0x2215E90", VA = "0x2215E90", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A2C")]
			[Address(RVA = "0x2213FBC", Offset = "0x2213FBC", VA = "0x2213FBC")]
			[DebuggerHidden]
			public <get_DeepChilds>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002A2D")]
			[Address(RVA = "0x2215708", Offset = "0x2215708", VA = "0x2215708", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A2E")]
			[Address(RVA = "0x221591C", Offset = "0x221591C", VA = "0x221591C", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A2F")]
			[Address(RVA = "0x2215844", Offset = "0x2215844", VA = "0x2215844")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A30")]
			[Address(RVA = "0x221576C", Offset = "0x221576C", VA = "0x221576C")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002A32")]
			[Address(RVA = "0x2215E08", Offset = "0x2215E08", VA = "0x2215E08", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A34")]
			[Address(RVA = "0x2215E98", Offset = "0x2215E98", VA = "0x2215E98", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A35")]
			[Address(RVA = "0x2215F64", Offset = "0x2215F64", VA = "0x2215F64", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0x2213D68", Offset = "0x2213D68", VA = "0x2213D68", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0x2213D70", Offset = "0x2213D70", VA = "0x2213D70", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0x2213D74", Offset = "0x2213D74", VA = "0x2213D74", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D51")]
			[Address(RVA = "0x2213D7C", Offset = "0x2213D7C", VA = "0x2213D7C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		public virtual string Value
		{
			[Token(Token = "0x6001D52")]
			[Address(RVA = "0x2213D80", Offset = "0x2213D80", VA = "0x2213D80", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D53")]
			[Address(RVA = "0x2213DDC", Offset = "0x2213DDC", VA = "0x2213DDC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public virtual int Count
		{
			[Token(Token = "0x6001D54")]
			[Address(RVA = "0x2213DE0", Offset = "0x2213DE0", VA = "0x2213DE0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public virtual IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001D59")]
			[Address(RVA = "0x2213E78", Offset = "0x2213E78", VA = "0x2213E78", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D153C", Offset = "0x5D153C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F9")]
		public IEnumerable<JSONNode> DeepChilds
		{
			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0x2213F24", Offset = "0x2213F24", VA = "0x2213F24")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D15B4", Offset = "0x5D15B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		public virtual int AsInt
		{
			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0x22140A0", Offset = "0x22140A0", VA = "0x22140A0", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D5E")]
			[Address(RVA = "0x22140E4", Offset = "0x22140E4", VA = "0x22140E4", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0x2214124", Offset = "0x2214124", VA = "0x2214124", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001D60")]
			[Address(RVA = "0x2214174", Offset = "0x2214174", VA = "0x2214174", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x170001FC")]
		public virtual double AsDouble
		{
			[Token(Token = "0x6001D61")]
			[Address(RVA = "0x22141B4", Offset = "0x22141B4", VA = "0x22141B4", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001D62")]
			[Address(RVA = "0x221427C", Offset = "0x221427C", VA = "0x221427C", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170001FD")]
		public virtual bool AsBool
		{
			[Token(Token = "0x6001D63")]
			[Address(RVA = "0x22142BC", Offset = "0x22142BC", VA = "0x22142BC", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001D64")]
			[Address(RVA = "0x22143A4", Offset = "0x22143A4", VA = "0x22143A4", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x6001D65")]
			[Address(RVA = "0x221443C", Offset = "0x221443C", VA = "0x221443C", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6001D66")]
			[Address(RVA = "0x22144D0", Offset = "0x22144D0", VA = "0x22144D0", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0x2213D64", Offset = "0x2213D64", VA = "0x2213D64", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0x2213DE8", Offset = "0x2213DE8", VA = "0x2213DE8", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0x2213E60", Offset = "0x2213E60", VA = "0x2213E60", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0x2213E68", Offset = "0x2213E68", VA = "0x2213E68", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0x2213E70", Offset = "0x2213E70", VA = "0x2213E70", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0x2213FE8", Offset = "0x2213FE8", VA = "0x2213FE8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x2214044", Offset = "0x2214044", VA = "0x2214044", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x2214564", Offset = "0x2214564", VA = "0x2214564")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x22145D8", Offset = "0x22145D8", VA = "0x22145D8")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x2212578", Offset = "0x2212578", VA = "0x2212578")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x2214620", Offset = "0x2214620", VA = "0x2214620")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x2214634", Offset = "0x2214634", VA = "0x2214634", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x22136E4", Offset = "0x22136E4", VA = "0x22136E4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x2211A80", Offset = "0x2211A80", VA = "0x2211A80")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x220EA0C", Offset = "0x220EA0C", VA = "0x220EA0C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x2214648", Offset = "0x2214648", VA = "0x2214648", Slot = "28")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x221464C", Offset = "0x221464C", VA = "0x221464C")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x22146D8", Offset = "0x22146D8", VA = "0x22146D8")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x2214774", Offset = "0x2214774", VA = "0x2214774")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x2214810", Offset = "0x2214810", VA = "0x2214810")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x22148AC", Offset = "0x22148AC", VA = "0x22148AC")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x2214A6C", Offset = "0x2214A6C", VA = "0x2214A6C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x2214C58", Offset = "0x2214C58", VA = "0x2214C58")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x2215028", Offset = "0x2215028", VA = "0x2215028")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x22150C4", Offset = "0x22150C4", VA = "0x22150C4")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x2215160", Offset = "0x2215160", VA = "0x2215160")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x22151FC", Offset = "0x22151FC", VA = "0x22151FC")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x2215364", Offset = "0x2215364", VA = "0x2215364")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x22154B4", Offset = "0x22154B4", VA = "0x22154B4")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x22103AC", Offset = "0x22103AC", VA = "0x22103AC")]
		public JSONNode()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C2330", Offset = "0x5C2330")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31E0", Offset = "0x5C31E0")]
		private sealed class <get_Childs>d__13 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700038B")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002A3A")]
				[Address(RVA = "0x221089C", Offset = "0x221089C", VA = "0x221089C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A3C")]
				[Address(RVA = "0x221092C", Offset = "0x221092C", VA = "0x221092C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A36")]
			[Address(RVA = "0x220FC38", Offset = "0x220FC38", VA = "0x220FC38")]
			[DebuggerHidden]
			public <get_Childs>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002A37")]
			[Address(RVA = "0x2210674", Offset = "0x2210674", VA = "0x2210674", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A38")]
			[Address(RVA = "0x22106F8", Offset = "0x22106F8", VA = "0x22106F8", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A39")]
			[Address(RVA = "0x221068C", Offset = "0x221068C", VA = "0x221068C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A3B")]
			[Address(RVA = "0x22108A4", Offset = "0x22108A4", VA = "0x22108A4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A3D")]
			[Address(RVA = "0x2210934", Offset = "0x2210934", VA = "0x2210934", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A3E")]
			[Address(RVA = "0x2210A00", Offset = "0x2210A00", VA = "0x2210A00", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000637")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C31F0", Offset = "0x5C31F0")]
		private sealed class <GetEnumerator>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONArray <>4__this;

			[Token(Token = "0x4002F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700038D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A43")]
				[Address(RVA = "0x22105DC", Offset = "0x22105DC", VA = "0x22105DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700038E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A45")]
				[Address(RVA = "0x221066C", Offset = "0x221066C", VA = "0x221066C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A3F")]
			[Address(RVA = "0x220FCF0", Offset = "0x220FCF0", VA = "0x220FCF0")]
			[DebuggerHidden]
			public <GetEnumerator>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A40")]
			[Address(RVA = "0x22103B4", Offset = "0x22103B4", VA = "0x22103B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A41")]
			[Address(RVA = "0x2210438", Offset = "0x2210438", VA = "0x2210438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A42")]
			[Address(RVA = "0x22103CC", Offset = "0x22103CC", VA = "0x22103CC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A44")]
			[Address(RVA = "0x22105E4", Offset = "0x22105E4", VA = "0x22105E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private List<JSONNode> m_List;

		[Token(Token = "0x17000200")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0x220F61C", Offset = "0x220F61C", VA = "0x220F61C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0x220F738", Offset = "0x220F738", VA = "0x220F738", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000201")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001D80")]
			[Address(RVA = "0x220F830", Offset = "0x220F830", VA = "0x220F830", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D81")]
			[Address(RVA = "0x220F8AC", Offset = "0x220F8AC", VA = "0x220F8AC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public override int Count
		{
			[Token(Token = "0x6001D82")]
			[Address(RVA = "0x220F92C", Offset = "0x220F92C", VA = "0x220F92C", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000203")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001D86")]
			[Address(RVA = "0x220FBA0", Offset = "0x220FBA0", VA = "0x220FBA0", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D162C", Offset = "0x5D162C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x220F9A4", Offset = "0x220F9A4", VA = "0x220F9A4", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x220FA24", Offset = "0x220FA24", VA = "0x220FA24", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x220FB1C", Offset = "0x220FB1C", VA = "0x220FB1C", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0x220FC64", Offset = "0x220FC64", VA = "0x220FC64", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D16A4", Offset = "0x5D16A4")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0x220FD10", Offset = "0x220FD10", VA = "0x220FD10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0x220FF18", Offset = "0x220FF18", VA = "0x220FF18", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0x22101C8", Offset = "0x22101C8", VA = "0x22101C8", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x2210320", Offset = "0x2210320", VA = "0x2210320")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C2364", Offset = "0x5C2364")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3200", Offset = "0x5C3200")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public JSONNode aNode;

			[Token(Token = "0x6002A46")]
			[Address(RVA = "0x2211434", Offset = "0x2211434", VA = "0x2211434")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002A47")]
			[Address(RVA = "0x22124FC", Offset = "0x22124FC", VA = "0x22124FC")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000639")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3210", Offset = "0x5C3210")]
		private sealed class <get_Childs>d__14 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private JSONNode <>2__current;

			[Token(Token = "0x4002F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4002F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x1700038F")]
			private JSONNode System.Collections.Generic.IEnumerator<I2.Loc.SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002A4C")]
				[Address(RVA = "0x2212B8C", Offset = "0x2212B8C", VA = "0x2212B8C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000390")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A4E")]
				[Address(RVA = "0x2212C1C", Offset = "0x2212C1C", VA = "0x2212C1C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A48")]
			[Address(RVA = "0x22114D4", Offset = "0x22114D4", VA = "0x22114D4")]
			[DebuggerHidden]
			public <get_Childs>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002A49")]
			[Address(RVA = "0x2212920", Offset = "0x2212920", VA = "0x2212920", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A4A")]
			[Address(RVA = "0x22129A4", Offset = "0x22129A4", VA = "0x22129A4", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A4B")]
			[Address(RVA = "0x2212938", Offset = "0x2212938", VA = "0x2212938")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A4D")]
			[Address(RVA = "0x2212B94", Offset = "0x2212B94", VA = "0x2212B94", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002A4F")]
			[Address(RVA = "0x2212C24", Offset = "0x2212C24", VA = "0x2212C24", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<I2.Loc.SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002A50")]
			[Address(RVA = "0x2212CF0", Offset = "0x2212CF0", VA = "0x2212CF0", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3220", Offset = "0x5C3220")]
		private sealed class <GetEnumerator>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONClass <>4__this;

			[Token(Token = "0x4002F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x17000391")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A55")]
				[Address(RVA = "0x2212888", Offset = "0x2212888", VA = "0x2212888", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000392")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A57")]
				[Address(RVA = "0x2212918", Offset = "0x2212918", VA = "0x2212918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A51")]
			[Address(RVA = "0x221158C", Offset = "0x221158C", VA = "0x221158C")]
			[DebuggerHidden]
			public <GetEnumerator>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002A52")]
			[Address(RVA = "0x2212624", Offset = "0x2212624", VA = "0x2212624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A53")]
			[Address(RVA = "0x22126A8", Offset = "0x22126A8", VA = "0x22126A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A54")]
			[Address(RVA = "0x221263C", Offset = "0x221263C", VA = "0x221263C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002A56")]
			[Address(RVA = "0x2212890", Offset = "0x2212890", VA = "0x2212890", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40021F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x17000204")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0x2210A04", Offset = "0x2210A04", VA = "0x2210A04", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8D")]
			[Address(RVA = "0x2210B14", Offset = "0x2210B14", VA = "0x2210B14", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0x2210BFC", Offset = "0x2210BFC", VA = "0x2210BFC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D8F")]
			[Address(RVA = "0x2210CE0", Offset = "0x2210CE0", VA = "0x2210CE0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000206")]
		public override int Count
		{
			[Token(Token = "0x6001D90")]
			[Address(RVA = "0x2210DF8", Offset = "0x2210DF8", VA = "0x2210DF8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000207")]
		public override IEnumerable<JSONNode> Childs
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x221143C", Offset = "0x221143C", VA = "0x221143C", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D171C", Offset = "0x5D171C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0x2210E70", Offset = "0x2210E70", VA = "0x2210E70", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0x2211000", Offset = "0x2211000", VA = "0x2211000", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0x22110F4", Offset = "0x22110F4", VA = "0x22110F4", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0x2211224", Offset = "0x2211224", VA = "0x2211224", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0x2211500", Offset = "0x2211500", VA = "0x2211500", Slot = "29")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1794", Offset = "0x5D1794")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001D97")]
		[Address(RVA = "0x22115AC", Offset = "0x22115AC", VA = "0x22115AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001D98")]
		[Address(RVA = "0x2211C40", Offset = "0x2211C40", VA = "0x2211C40", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0x22121D4", Offset = "0x22121D4", VA = "0x22121D4", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0x2212434", Offset = "0x2212434", VA = "0x2212434")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x40021F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private string m_Data;

		[Token(Token = "0x17000208")]
		public override string Value
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x2212CF4", Offset = "0x2212CF4", VA = "0x2212CF4", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x2212CFC", Offset = "0x2212CFC", VA = "0x2212CFC", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0x2212D04", Offset = "0x2212D04", VA = "0x2212D04")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0x2212D24", Offset = "0x2212D24", VA = "0x2212D24")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0x2212D58", Offset = "0x2212D58", VA = "0x2212D58")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x2212DA0", Offset = "0x2212DA0", VA = "0x2212DA0")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x2212DD4", Offset = "0x2212DD4", VA = "0x2212DD4")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x2212E08", Offset = "0x2212E08", VA = "0x2212E08", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x2212E7C", Offset = "0x2212E7C", VA = "0x2212E7C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x2212EF0", Offset = "0x2212EF0", VA = "0x2212EF0", Slot = "28")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x5C2398", Offset = "0x5C2398")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40021F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private JSONNode m_Node;

		[Token(Token = "0x40021F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string m_Key;

		[Token(Token = "0x17000209")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x22132F8", Offset = "0x22132F8", VA = "0x22132F8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DA9")]
			[Address(RVA = "0x2213374", Offset = "0x2213374", VA = "0x2213374", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		public override JSONNode Item
		{
			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x2213414", Offset = "0x2213414", VA = "0x2213414", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DAB")]
			[Address(RVA = "0x2213490", Offset = "0x2213490", VA = "0x2213490", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020B")]
		public override int AsInt
		{
			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0x22137A4", Offset = "0x22137A4", VA = "0x22137A4", Slot = "18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0x2213838", Offset = "0x2213838", VA = "0x2213838", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public override float AsFloat
		{
			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0x22138CC", Offset = "0x22138CC", VA = "0x22138CC", Slot = "20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DB7")]
			[Address(RVA = "0x2213960", Offset = "0x2213960", VA = "0x2213960", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public override double AsDouble
		{
			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0x22139F4", Offset = "0x22139F4", VA = "0x22139F4", Slot = "22")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6001DB9")]
			[Address(RVA = "0x2213AA4", Offset = "0x2213AA4", VA = "0x2213AA4", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public override bool AsBool
		{
			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0x2213B4C", Offset = "0x2213B4C", VA = "0x2213B4C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0x2213BE0", Offset = "0x2213BE0", VA = "0x2213BE0", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1700020F")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x2213C74", Offset = "0x2213C74", VA = "0x2213C74", Slot = "26")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x2213CEC", Offset = "0x2213CEC", VA = "0x2213CEC", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x220F710", Offset = "0x220F710", VA = "0x220F710")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x2210AEC", Offset = "0x2210AEC", VA = "0x2210AEC")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x2213274", Offset = "0x2213274", VA = "0x2213274")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x2213538", Offset = "0x2213538", VA = "0x2213538", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x22135D8", Offset = "0x22135D8", VA = "0x22135D8", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x2213680", Offset = "0x2213680", VA = "0x2213680")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0x22136A0", Offset = "0x22136A0", VA = "0x22136A0")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0x22136BC", Offset = "0x22136BC", VA = "0x22136BC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0x22136DC", Offset = "0x22136DC", VA = "0x22136DC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0x22136EC", Offset = "0x22136EC", VA = "0x22136EC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0x2213748", Offset = "0x2213748", VA = "0x2213748", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x20003BF")]
	public static class JSON
	{
		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0x220EA08", Offset = "0x220EA08", VA = "0x220EA08")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace UnityEngine.UI.Michsky.UI.Frost
{
	[Token(Token = "0x20003C0")]
	public class UIGradient : BaseMeshEffect
	{
		[Token(Token = "0x200063B")]
		public enum Type
		{
			[Token(Token = "0x4002F7B")]
			Horizontal,
			[Token(Token = "0x4002F7C")]
			Vertical,
			[Token(Token = "0x4002F7D")]
			Radial,
			[Token(Token = "0x4002F7E")]
			Diamond
		}

		[Token(Token = "0x200063C")]
		public enum Blend
		{
			[Token(Token = "0x4002F80")]
			Override,
			[Token(Token = "0x4002F81")]
			Add,
			[Token(Token = "0x4002F82")]
			Multiply
		}

		[Token(Token = "0x40021F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8AC8", Offset = "0x5C8AC8")]
		[SerializeField]
		private Gradient _effectGradient;

		[Token(Token = "0x40021F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8B14", Offset = "0x5C8B14")]
		[SerializeField]
		private Type _gradientType;

		[Token(Token = "0x40021F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Blend _blendMode;

		[Token(Token = "0x40021F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8B6C", Offset = "0x5C8B6C")]
		private float _offset;

		[Token(Token = "0x17000211")]
		public Blend BlendMode
		{
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x232475C", Offset = "0x232475C", VA = "0x232475C")]
			get
			{
				return default(Blend);
			}
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x2324764", Offset = "0x2324764", VA = "0x2324764")]
			set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public Gradient EffectGradient
		{
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x23247A4", Offset = "0x23247A4", VA = "0x23247A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0x23247AC", Offset = "0x23247AC", VA = "0x23247AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public Type GradientType
		{
			[Token(Token = "0x6001DC3")]
			[Address(RVA = "0x23247EC", Offset = "0x23247EC", VA = "0x23247EC")]
			get
			{
				return default(Type);
			}
			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0x23247F4", Offset = "0x23247F4", VA = "0x23247F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float Offset
		{
			[Token(Token = "0x6001DC5")]
			[Address(RVA = "0x2324834", Offset = "0x2324834", VA = "0x2324834")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x232483C", Offset = "0x232483C", VA = "0x232483C")]
			set
			{
			}
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x232487C", Offset = "0x232487C", VA = "0x232487C", Slot = "20")]
		public override void ModifyMesh(VertexHelper helper)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x23262A0", Offset = "0x23262A0", VA = "0x23262A0")]
		private Color BlendColor(Color colorA, Color colorB)
		{
			return default(Color);
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x2326358", Offset = "0x2326358", VA = "0x2326358")]
		public UIGradient()
		{
		}
	}
}
namespace Michsky.UI.ModernUIPack
{
	[Token(Token = "0x20003C1")]
	public class CustomInputField : MonoBehaviour
	{
		[Token(Token = "0x40021F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8BA8", Offset = "0x5C8BA8")]
		public Animator inputFieldAnimator;

		[Token(Token = "0x40021FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8BDC", Offset = "0x5C8BDC")]
		public GameObject fieldTrigger;

		[Token(Token = "0x40021FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TMP_InputField inputText;

		[Token(Token = "0x40021FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isEmpty;

		[Token(Token = "0x40021FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isClicked;

		[Token(Token = "0x40021FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string inAnim;

		[Token(Token = "0x40021FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string outAnim;

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x213C800", Offset = "0x213C800", VA = "0x213C800")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x213C8E4", Offset = "0x213C8E4", VA = "0x213C8E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x213C9E4", Offset = "0x213C9E4", VA = "0x213C9E4")]
		public void Animate()
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0x213CA48", Offset = "0x213CA48", VA = "0x213CA48")]
		public void FieldTrigger()
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x213CAB8", Offset = "0x213CAB8", VA = "0x213CAB8")]
		public CustomInputField()
		{
		}
	}
	[Token(Token = "0x20003C2")]
	public class HorizontalSelector : MonoBehaviour
	{
		[Token(Token = "0x4002200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TextMeshProUGUI label;

		[Token(Token = "0x4002201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TextMeshProUGUI labeHelper;

		[Token(Token = "0x4002202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Animator selectorAnimator;

		[Token(Token = "0x4002203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8C10", Offset = "0x5C8C10")]
		private int index;

		[Token(Token = "0x4002204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int defaultIndex;

		[Token(Token = "0x4002205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8C44", Offset = "0x5C8C44")]
		public List<string> elements;

		[Token(Token = "0x4002206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8C7C", Offset = "0x5C8C7C")]
		public UnityEvent onValueChanged;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0x213CB40", Offset = "0x213CB40", VA = "0x213CB40")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x213CD5C", Offset = "0x213CD5C", VA = "0x213CD5C")]
		public void PreviousClick()
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x213CF38", Offset = "0x213CF38", VA = "0x213CF38")]
		public void ForwardClick()
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x213D11C", Offset = "0x213D11C", VA = "0x213D11C")]
		public HorizontalSelector()
		{
		}
	}
}
namespace Michsky.UI.Frost
{
	[Token(Token = "0x20003C3")]
	public class AnimatedButton : MonoBehaviour
	{
		[Token(Token = "0x4002207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8CB0", Offset = "0x5C8CB0")]
		public bool isOn;

		[Token(Token = "0x4002208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEvent onEvents;

		[Token(Token = "0x4002209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UnityEvent offEvents;

		[Token(Token = "0x400220A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string onAnim;

		[Token(Token = "0x400220B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string offAnim;

		[Token(Token = "0x400220C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator objAnimator;

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x21339D4", Offset = "0x21339D4", VA = "0x21339D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x2133ADC", Offset = "0x2133ADC", VA = "0x2133ADC")]
		public void Animate()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x2133B94", Offset = "0x2133B94", VA = "0x2133B94")]
		public AnimatedButton()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class BlurManager : MonoBehaviour
	{
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3230", Offset = "0x5C3230")]
		private sealed class <BlurIn>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlurManager <>4__this;

			[Token(Token = "0x17000393")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A5B")]
				[Address(RVA = "0x21341B0", Offset = "0x21341B0", VA = "0x21341B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000394")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A5D")]
				[Address(RVA = "0x2134240", Offset = "0x2134240", VA = "0x2134240", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A58")]
			[Address(RVA = "0x2133D40", Offset = "0x2133D40", VA = "0x2133D40")]
			[DebuggerHidden]
			public <BlurIn>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002A59")]
			[Address(RVA = "0x2133FA0", Offset = "0x2133FA0", VA = "0x2133FA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A5A")]
			[Address(RVA = "0x2133FA4", Offset = "0x2133FA4", VA = "0x2133FA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A5C")]
			[Address(RVA = "0x21341B8", Offset = "0x21341B8", VA = "0x21341B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3240", Offset = "0x5C3240")]
		private sealed class <BlurOut>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BlurManager <>4__this;

			[Token(Token = "0x17000395")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A61")]
				[Address(RVA = "0x2134480", Offset = "0x2134480", VA = "0x2134480", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000396")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A63")]
				[Address(RVA = "0x2134510", Offset = "0x2134510", VA = "0x2134510", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A5E")]
			[Address(RVA = "0x2133DEC", Offset = "0x2133DEC", VA = "0x2133DEC")]
			[DebuggerHidden]
			public <BlurOut>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002A5F")]
			[Address(RVA = "0x2134248", Offset = "0x2134248", VA = "0x2134248", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A60")]
			[Address(RVA = "0x213424C", Offset = "0x213424C", VA = "0x213424C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A62")]
			[Address(RVA = "0x2134488", Offset = "0x2134488", VA = "0x2134488", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400220D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8CE4", Offset = "0x5C8CE4")]
		public Material blurMaterial;

		[Token(Token = "0x400220E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8D18", Offset = "0x5C8D18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8D18", Offset = "0x5C8D18")]
		public float blurValue;

		[Token(Token = "0x400220F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8D6C", Offset = "0x5C8D6C")]
		public float animationSpeed;

		[Token(Token = "0x4002210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string customProperty;

		[Token(Token = "0x4002211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentBlurValue;

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x2133C14", Offset = "0x2133C14", VA = "0x2133C14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x2133CB4", Offset = "0x2133CB4", VA = "0x2133CB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D180C", Offset = "0x5D180C")]
		private IEnumerator BlurIn()
		{
			return null;
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x2133D60", Offset = "0x2133D60", VA = "0x2133D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1884", Offset = "0x5D1884")]
		private IEnumerator BlurOut()
		{
			return null;
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x2133E0C", Offset = "0x2133E0C", VA = "0x2133E0C")]
		public void BlurInAnim()
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x2133E90", Offset = "0x2133E90", VA = "0x2133E90")]
		public void BlurOutAnim()
		{
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x2133F14", Offset = "0x2133F14", VA = "0x2133F14")]
		public void SetBlurValue(float cbv)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x2133F1C", Offset = "0x2133F1C", VA = "0x2133F1C")]
		public BlurManager()
		{
		}
	}
	[Token(Token = "0x20003C5")]
	public class CheckButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isOn;

		[Token(Token = "0x4002213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator buttonAnimator;

		[Token(Token = "0x4002214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool isHovering;

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x2134518", Offset = "0x2134518", VA = "0x2134518")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0x2134620", Offset = "0x2134620", VA = "0x2134620", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x21346C0", Offset = "0x21346C0", VA = "0x21346C0", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x2134760", Offset = "0x2134760", VA = "0x2134760")]
		public void Animate()
		{
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x2134588", Offset = "0x2134588", VA = "0x2134588")]
		public void CheckStart()
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x2134854", Offset = "0x2134854", VA = "0x2134854")]
		public CheckButton()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class DropdownSubMenu : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Animator panelAnimator;

		[Token(Token = "0x4002216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool isOpen;

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x213485C", Offset = "0x213485C", VA = "0x213485C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x21348C4", Offset = "0x21348C4", VA = "0x21348C4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x2134988", Offset = "0x2134988", VA = "0x2134988", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x2134A94", Offset = "0x2134A94", VA = "0x2134A94")]
		public void TriggerExit()
		{
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x2134BA0", Offset = "0x2134BA0", VA = "0x2134BA0")]
		public void ButtonClick()
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x2134C64", Offset = "0x2134C64", VA = "0x2134C64")]
		public DropdownSubMenu()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class ExitToSystem : MonoBehaviour
	{
		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0x2134C6C", Offset = "0x2134C6C", VA = "0x2134C6C")]
		public void ExitGame()
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x2134D00", Offset = "0x2134D00", VA = "0x2134D00")]
		public ExitToSystem()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class FeedbackSystem : MonoBehaviour
	{
		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x2134D08", Offset = "0x2134D08", VA = "0x2134D08")]
		public void SendFeedback()
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x21354AC", Offset = "0x21354AC", VA = "0x21354AC")]
		private string MyEscapeURL(string url)
		{
			return null;
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x2135544", Offset = "0x2135544", VA = "0x2135544")]
		public FeedbackSystem()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class FriendsPanelAnim : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Animator panelAnimator;

		[Token(Token = "0x4002218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8D8C", Offset = "0x5C8D8C")]
		public bool isConsole;

		[Token(Token = "0x4002219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool isOn;

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x213554C", Offset = "0x213554C", VA = "0x213554C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x21355B4", Offset = "0x21355B4", VA = "0x21355B4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0x2135630", Offset = "0x2135630", VA = "0x2135630", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x21356AC", Offset = "0x21356AC", VA = "0x21356AC")]
		public FriendsPanelAnim()
		{
		}
	}
	[Token(Token = "0x20003CA")]
	public class HoldKeyEvent : MonoBehaviour
	{
		[Token(Token = "0x400221A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8DC0", Offset = "0x5C8DC0")]
		[SerializeField]
		public KeyCode hotkey;

		[Token(Token = "0x400221B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8E04", Offset = "0x5C8E04")]
		[SerializeField]
		public UnityEvent holdAction;

		[Token(Token = "0x400221C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public UnityEvent releaseAction;

		[Token(Token = "0x400221D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isOn;

		[Token(Token = "0x400221E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isHolding;

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0x21356B4", Offset = "0x21356B4", VA = "0x21356B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0x2135738", Offset = "0x2135738", VA = "0x2135738")]
		public HoldKeyEvent()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class LaunchURL : MonoBehaviour
	{
		[Token(Token = "0x400221F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string URL;

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0x2135740", Offset = "0x2135740", VA = "0x2135740")]
		public void urlLinkOrWeb()
		{
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0x213574C", Offset = "0x213574C", VA = "0x213574C")]
		public LaunchURL()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class LayoutGroupPositionFix : MonoBehaviour
	{
		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3250", Offset = "0x5C3250")]
		private sealed class <ExecuteAfterTime>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float time;

			[Token(Token = "0x4002F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public LayoutGroupPositionFix <>4__this;

			[Token(Token = "0x17000397")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A67")]
				[Address(RVA = "0x2135A6C", Offset = "0x2135A6C", VA = "0x2135A6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000398")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A69")]
				[Address(RVA = "0x2135AFC", Offset = "0x2135AFC", VA = "0x2135AFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A64")]
			[Address(RVA = "0x21358F8", Offset = "0x21358F8", VA = "0x21358F8")]
			[DebuggerHidden]
			public <ExecuteAfterTime>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002A65")]
			[Address(RVA = "0x2135920", Offset = "0x2135920", VA = "0x2135920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A66")]
			[Address(RVA = "0x2135924", Offset = "0x2135924", VA = "0x2135924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A68")]
			[Address(RVA = "0x2135A74", Offset = "0x2135A74", VA = "0x2135A74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LayoutGroup layoutGroup;

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0x2135754", Offset = "0x2135754", VA = "0x2135754")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0x2135844", Offset = "0x2135844", VA = "0x2135844")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D18FC", Offset = "0x5D18FC")]
		private IEnumerator ExecuteAfterTime(float time)
		{
			return null;
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0x2135918", Offset = "0x2135918", VA = "0x2135918")]
		public LayoutGroupPositionFix()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class ListContentSizeFix : MonoBehaviour
	{
		[Token(Token = "0x4002221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Scrollbar scrollbar;

		[Token(Token = "0x4002222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isReversed;

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0x2135B04", Offset = "0x2135B04", VA = "0x2135B04")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x2135B40", Offset = "0x2135B40", VA = "0x2135B40")]
		public void FixListSize()
		{
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x2135B7C", Offset = "0x2135B7C", VA = "0x2135B7C")]
		public ListContentSizeFix()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x4002223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LoadingScreen instance;

		[Token(Token = "0x4002224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8E5C", Offset = "0x5C8E5C")]
		public CanvasGroup canvasAlpha;

		[Token(Token = "0x4002225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI status;

		[Token(Token = "0x4002226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TextMeshProUGUI title;

		[Token(Token = "0x4002227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI titleDescription;

		[Token(Token = "0x4002228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string prefabName;

		[Token(Token = "0x4002229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8E90", Offset = "0x5C8E90")]
		public TextMeshProUGUI hintsText;

		[Token(Token = "0x400222A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<string> HintList;

		[Token(Token = "0x400222B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool changeHintWithTimer;

		[Token(Token = "0x400222C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float hintTimerValue;

		[Token(Token = "0x400222D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float htvTimer;

		[Token(Token = "0x400222E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8ECC", Offset = "0x5C8ECC")]
		public Image imageObject;

		[Token(Token = "0x400222F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Animator fadingAnimator;

		[Token(Token = "0x4002230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Sprite> ImageList;

		[Token(Token = "0x4002231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool changeImageWithTimer;

		[Token(Token = "0x4002232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float imageTimerValue;

		[Token(Token = "0x4002233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8F08", Offset = "0x5C8F08")]
		public float imageFadingSpeed;

		[Token(Token = "0x4002234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float itvTimer;

		[Token(Token = "0x4002235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8F28", Offset = "0x5C8F28")]
		public bool enableTitleDesc;

		[Token(Token = "0x4002236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool enableRandomHints;

		[Token(Token = "0x4002237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool enableRandomImages;

		[Token(Token = "0x4002238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string titleText;

		[Token(Token = "0x4002239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public string titleDescText;

		[Token(Token = "0x400223A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C8F5C", Offset = "0x5C8F5C")]
		public float fadingAnimationSpeed;

		[Token(Token = "0x400223B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool isHintAlphaZero;

		[Token(Token = "0x400223C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UnityEngine.AsyncOperation loadingProcess;

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x2135E4C", Offset = "0x2135E4C", VA = "0x2135E4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x2135C04", Offset = "0x2135C04", VA = "0x2135C04")]
		public static void LoadScene(string sceneName)
		{
		}

		[Token(Token = "0x6001DFE")]
		[Address(RVA = "0x21360A0", Offset = "0x21360A0", VA = "0x21360A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DFF")]
		[Address(RVA = "0x21360D0", Offset = "0x21360D0", VA = "0x21360D0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x2136730", Offset = "0x2136730", VA = "0x2136730")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x20003CF")]
	public class LoadingStyle : MonoBehaviour
	{
		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x21368A4", Offset = "0x21368A4", VA = "0x21368A4")]
		public void SetStyle(string prefabToLoad)
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x2136934", Offset = "0x2136934", VA = "0x2136934")]
		public LoadingStyle()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public class LoadScene : MonoBehaviour
	{
		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x2135B84", Offset = "0x2135B84", VA = "0x2135B84")]
		public void ChangeToScene(string sceneName)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x2135E44", Offset = "0x2135E44", VA = "0x2135E44")]
		public LoadScene()
		{
		}
	}
	[Token(Token = "0x20003D1")]
	public class PressKey : MonoBehaviour
	{
		[Token(Token = "0x400223D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8F7C", Offset = "0x5C8F7C")]
		[SerializeField]
		public KeyCode hotkey;

		[Token(Token = "0x400223E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C8FC0", Offset = "0x5C8FC0")]
		[SerializeField]
		public UnityEvent pressAction;

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x213693C", Offset = "0x213693C", VA = "0x213693C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0x2136980", Offset = "0x2136980", VA = "0x2136980")]
		public PressKey()
		{
		}
	}
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C23CC", Offset = "0x5C23CC")]
	[AttributeAttribute(Name = "DisallowMultipleComponent", RVA = "0x5C23CC", Offset = "0x5C23CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x5C23CC", Offset = "0x5C23CC")]
	public class ReorderableList : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000640")]
		public struct ReorderableListEventStruct
		{
			[Token(Token = "0x4002F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public GameObject DroppedObject;

			[Token(Token = "0x4002F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int FromIndex;

			[Token(Token = "0x4002F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ReorderableList FromList;

			[Token(Token = "0x4002F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool IsAClone;

			[Token(Token = "0x4002F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject SourceObject;

			[Token(Token = "0x4002F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int ToIndex;

			[Token(Token = "0x4002F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ReorderableList ToList;

			[Token(Token = "0x6002A6A")]
			[Address(RVA = "0x5D76B4", Offset = "0x5D76B4", VA = "0x5D76B4")]
			public void Cancel()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000641")]
		public class ReorderableListHandler : UnityEvent<ReorderableListEventStruct>
		{
			[Token(Token = "0x6002A6B")]
			[Address(RVA = "0x2137178", Offset = "0x2137178", VA = "0x2137178")]
			public ReorderableListHandler()
			{
			}
		}

		[Token(Token = "0x400223F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9008", Offset = "0x5C9008")]
		public LayoutGroup ContentLayout;

		[Token(Token = "0x4002240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9070", Offset = "0x5C9070")]
		public RectTransform DraggableArea;

		[Token(Token = "0x4002241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C90A4", Offset = "0x5C90A4")]
		public bool IsDraggable;

		[Token(Token = "0x4002242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C90FC", Offset = "0x5C90FC")]
		public bool CloneDraggedObject;

		[Token(Token = "0x4002243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9160", Offset = "0x5C9160")]
		public bool IsDropable;

		[Token(Token = "0x4002244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C91C4", Offset = "0x5C91C4")]
		public ReorderableListHandler OnElementDropped;

		[Token(Token = "0x4002245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ReorderableListHandler OnElementGrabbed;

		[Token(Token = "0x4002246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReorderableListHandler OnElementRemoved;

		[Token(Token = "0x4002247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ReorderableListHandler OnElementAdded;

		[Token(Token = "0x4002248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _content;

		[Token(Token = "0x4002249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private ReorderableListContent _listContent;

		[Token(Token = "0x17000215")]
		public RectTransform Content
		{
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x2136988", Offset = "0x2136988", VA = "0x2136988")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0x2136A50", Offset = "0x2136A50", VA = "0x2136A50")]
		private Canvas GetCanvas()
		{
			return null;
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0x2136BBC", Offset = "0x2136BBC", VA = "0x2136BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0x2136FC0", Offset = "0x2136FC0", VA = "0x2136FC0")]
		public void TestReOrderableListTarget(ReorderableListEventStruct item)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0x21370B8", Offset = "0x21370B8", VA = "0x21370B8")]
		public ReorderableList()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public class ReorderableListContent : MonoBehaviour
	{
		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3260", Offset = "0x5C3260")]
		private sealed class <RefreshChildren>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ReorderableListContent <>4__this;

			[Token(Token = "0x17000399")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A6F")]
				[Address(RVA = "0x21378C4", Offset = "0x21378C4", VA = "0x21378C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A71")]
				[Address(RVA = "0x2137954", Offset = "0x2137954", VA = "0x2137954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A6C")]
			[Address(RVA = "0x21373DC", Offset = "0x21373DC", VA = "0x21373DC")]
			[DebuggerHidden]
			public <RefreshChildren>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002A6D")]
			[Address(RVA = "0x2137404", Offset = "0x2137404", VA = "0x2137404", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A6E")]
			[Address(RVA = "0x2137408", Offset = "0x2137408", VA = "0x2137408", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A70")]
			[Address(RVA = "0x21378CC", Offset = "0x21378CC", VA = "0x21378CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400224A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<Transform> _cachedChildren;

		[Token(Token = "0x400224B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<ReorderableListElement> _cachedListElement;

		[Token(Token = "0x400224C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ReorderableListElement _ele;

		[Token(Token = "0x400224D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ReorderableList _extList;

		[Token(Token = "0x400224E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RectTransform _rect;

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0x2137270", Offset = "0x2137270", VA = "0x2137270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0x21373A4", Offset = "0x21373A4", VA = "0x21373A4")]
		public void OnTransformChildrenChanged()
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0x2136ED0", Offset = "0x2136ED0", VA = "0x2136ED0")]
		public void Init(ReorderableList extList)
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0x2137318", Offset = "0x2137318", VA = "0x2137318")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1974", Offset = "0x5D1974")]
		private IEnumerator RefreshChildren()
		{
			return null;
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0x21373FC", Offset = "0x21373FC", VA = "0x21373FC")]
		public ReorderableListContent()
		{
		}
	}
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2494", Offset = "0x5C2494")]
	public class ReorderableListElement : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler
	{
		[Token(Token = "0x400224F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9208", Offset = "0x5C9208")]
		public bool IsGrabbable;

		[Token(Token = "0x4002250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9254", Offset = "0x5C9254")]
		public bool IsTransferable;

		[Token(Token = "0x4002251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C92B0", Offset = "0x5C92B0")]
		public bool isDroppableInSpace;

		[Token(Token = "0x4002252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<RaycastResult> _raycastResults;

		[Token(Token = "0x4002253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ReorderableList _currentReorderableListRaycasted;

		[Token(Token = "0x4002254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform _draggingObject;

		[Token(Token = "0x4002255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private LayoutElement _draggingObjectLE;

		[Token(Token = "0x4002256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 _draggingObjectOriginalSize;

		[Token(Token = "0x4002257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform _fakeElement;

		[Token(Token = "0x4002258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private LayoutElement _fakeElementLE;

		[Token(Token = "0x4002259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int _fromIndex;

		[Token(Token = "0x400225A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool _isDragging;

		[Token(Token = "0x400225B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform _rect;

		[Token(Token = "0x400225C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ReorderableList _reorderableList;

		[Token(Token = "0x400225D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal bool isValid;

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0x213795C", Offset = "0x213795C", VA = "0x213795C", Slot = "5")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0x21386DC", Offset = "0x21386DC", VA = "0x21386DC", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0x2138FC0", Offset = "0x2138FC0", VA = "0x2138FC0", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0x21382B0", Offset = "0x21382B0", VA = "0x21382B0")]
		private void CancelDrag()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0x2137FCC", Offset = "0x2137FCC", VA = "0x2137FCC")]
		private void RefreshSizes()
		{
		}

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0x2137854", Offset = "0x2137854", VA = "0x2137854")]
		public void Init(ReorderableList reorderableList)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0x21396D0", Offset = "0x21396D0", VA = "0x21396D0")]
		public ReorderableListElement()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class SliderManager : MonoBehaviour
	{
		[Token(Token = "0x400225E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9304", Offset = "0x5C9304")]
		public TextMeshProUGUI valueText;

		[Token(Token = "0x400225F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextMeshProUGUI popupValueText;

		[Token(Token = "0x4002260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9338", Offset = "0x5C9338")]
		public bool usePercent;

		[Token(Token = "0x4002261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool showValue;

		[Token(Token = "0x4002262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool showPopupValue;

		[Token(Token = "0x4002263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		public bool useRoundValue;

		[Token(Token = "0x4002264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Slider mainSlider;

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0x2139764", Offset = "0x2139764", VA = "0x2139764")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x21398C0", Offset = "0x21398C0", VA = "0x21398C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E1B")]
		[Address(RVA = "0x213A024", Offset = "0x213A024", VA = "0x213A024")]
		public SliderManager()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class SplashScreenManager : MonoBehaviour
	{
		[Token(Token = "0x4002265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C936C", Offset = "0x5C936C")]
		public GameObject splashScreen;

		[Token(Token = "0x4002266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject mainPanels;

		[Token(Token = "0x4002267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Animator backgroundAnimator;

		[Token(Token = "0x4002268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator startFadeIn;

		[Token(Token = "0x4002269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Animator mainPanelsAnimator;

		[Token(Token = "0x400226A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator splashScreenAnimator;

		[Token(Token = "0x400226B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C93A0", Offset = "0x5C93A0")]
		public bool disableSplashScreen;

		[Token(Token = "0x400226C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool enableLoginScreen;

		[Token(Token = "0x6001E1C")]
		[Address(RVA = "0x213A034", Offset = "0x213A034", VA = "0x213A034")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1D")]
		[Address(RVA = "0x213A23C", Offset = "0x213A23C", VA = "0x213A23C")]
		public SplashScreenManager()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class SwitchManager : MonoBehaviour
	{
		[Token(Token = "0x400226D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C93D4", Offset = "0x5C93D4")]
		public bool isOn;

		[Token(Token = "0x400226E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Animator switchAnimator;

		[Token(Token = "0x400226F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9408", Offset = "0x5C9408")]
		[SerializeField]
		public UnityEvent onEvent;

		[Token(Token = "0x4002270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent offEvent;

		[Token(Token = "0x4002271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string onTransition;

		[Token(Token = "0x4002272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string offTransition;

		[Token(Token = "0x6001E1E")]
		[Address(RVA = "0x213A24C", Offset = "0x213A24C", VA = "0x213A24C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0x213A2DC", Offset = "0x213A2DC", VA = "0x213A2DC")]
		public void AnimateSwitch()
		{
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0x213A394", Offset = "0x213A394", VA = "0x213A394")]
		public SwitchManager()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class TimedAction : MonoBehaviour
	{
		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C3270", Offset = "0x5C3270")]
		private sealed class <TimedEvent>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4002F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4002F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TimedAction <>4__this;

			[Token(Token = "0x1700039B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A75")]
				[Address(RVA = "0x213A714", Offset = "0x213A714", VA = "0x213A714", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002A77")]
				[Address(RVA = "0x213A7A4", Offset = "0x213A7A4", VA = "0x213A7A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A72")]
			[Address(RVA = "0x213A514", Offset = "0x213A514", VA = "0x213A514")]
			[DebuggerHidden]
			public <TimedEvent>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002A73")]
			[Address(RVA = "0x213A618", Offset = "0x213A618", VA = "0x213A618", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A74")]
			[Address(RVA = "0x213A61C", Offset = "0x213A61C", VA = "0x213A61C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002A76")]
			[Address(RVA = "0x213A71C", Offset = "0x213A71C", VA = "0x213A71C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9450", Offset = "0x5C9450")]
		public float timer;

		[Token(Token = "0x4002274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableAtStart;

		[Token(Token = "0x4002275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9490", Offset = "0x5C9490")]
		public UnityEvent timerAction;

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0x213A414", Offset = "0x213A414", VA = "0x213A414")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0x213A488", Offset = "0x213A488", VA = "0x213A488")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D19EC", Offset = "0x5D19EC")]
		private IEnumerator TimedEvent()
		{
			return null;
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0x213A534", Offset = "0x213A534", VA = "0x213A534")]
		public void StartIEnumerator()
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0x213A59C", Offset = "0x213A59C", VA = "0x213A59C")]
		public void StopIEnumerator()
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0x213A604", Offset = "0x213A604", VA = "0x213A604")]
		public TimedAction()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public class TimedProgressBar : MonoBehaviour
	{
		[Token(Token = "0x4002276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C94C8", Offset = "0x5C94C8")]
		public Transform loadingBar;

		[Token(Token = "0x4002277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform textPercent;

		[Token(Token = "0x4002278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C94FC", Offset = "0x5C94FC")]
		public bool isOn;

		[Token(Token = "0x4002279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C953C", Offset = "0x5C953C")]
		public float currentPercent;

		[Token(Token = "0x400227A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C9558", Offset = "0x5C9558")]
		public int speed;

		[Token(Token = "0x400227B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C9578", Offset = "0x5C9578")]
		public float totalValue;

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0x213A7AC", Offset = "0x213A7AC", VA = "0x213A7AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0x213A92C", Offset = "0x213A92C", VA = "0x213A92C")]
		public void SetTimer(int timer)
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0x213A93C", Offset = "0x213A93C", VA = "0x213A93C")]
		public TimedProgressBar()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class ToggleAnim : MonoBehaviour
	{
		[Token(Token = "0x400227C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9594", Offset = "0x5C9594")]
		public Toggle toggleObject;

		[Token(Token = "0x400227D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C95C8", Offset = "0x5C95C8")]
		public Animator toggleAnimator;

		[Token(Token = "0x400227E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C95FC", Offset = "0x5C95FC")]
		public string toggleOn;

		[Token(Token = "0x400227F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string toggleOff;

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0x213A944", Offset = "0x213A944", VA = "0x213A944")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0x213AA94", Offset = "0x213AA94", VA = "0x213AA94")]
		private void TaskOnClick(bool value)
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0x213AAF4", Offset = "0x213AAF4", VA = "0x213AAF4")]
		public void AnimateToggle()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0x213ABBC", Offset = "0x213ABBC", VA = "0x213ABBC")]
		public ToggleAnim()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class TooltipContent : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9634", Offset = "0x5C9634")]
		public string title;

		[Token(Token = "0x4002281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x5C9668", Offset = "0x5C9668")]
		public string description;

		[Token(Token = "0x4002282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9678", Offset = "0x5C9678")]
		public GameObject mouseTooltipObject;

		[Token(Token = "0x4002283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI mouseTitle;

		[Token(Token = "0x4002284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextMeshProUGUI mouseDescription;

		[Token(Token = "0x4002285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator mouseAnimator;

		[Token(Token = "0x4002286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private BlurManager mouseBlur;

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0x213ABC4", Offset = "0x213ABC4", VA = "0x213ABC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0x213AC70", Offset = "0x213AC70", VA = "0x213AC70", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0x213AD68", Offset = "0x213AD68", VA = "0x213AD68", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E30")]
		[Address(RVA = "0x213AE00", Offset = "0x213AE00", VA = "0x213AE00")]
		public TooltipContent()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class TooltipManager : MonoBehaviour
	{
		[Token(Token = "0x4002287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C96AC", Offset = "0x5C96AC")]
		[SerializeField]
		private Camera UICamera;

		[Token(Token = "0x4002288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject tooltipObject;

		[Token(Token = "0x4002289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject tooltipContent;

		[Token(Token = "0x400228A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform tooltipHelper;

		[Token(Token = "0x400228B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C96F4", Offset = "0x5C96F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5C96F4", Offset = "0x5C96F4")]
		public float tooltipSmoothness;

		[Token(Token = "0x400228C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9748", Offset = "0x5C9748")]
		public int vBorderTop;

		[Token(Token = "0x400228D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int vBorderBottom;

		[Token(Token = "0x400228E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hBorderLeft;

		[Token(Token = "0x400228F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int hBorderRight;

		[Token(Token = "0x4002290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 uiPos;

		[Token(Token = "0x4002291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 cursorPos;

		[Token(Token = "0x4002292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RectTransform tooltipRect;

		[Token(Token = "0x4002293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 contentPos;

		[Token(Token = "0x4002294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 tooltipVelocity;

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x213AE08", Offset = "0x213AE08", VA = "0x213AE08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x213AEF8", Offset = "0x213AEF8", VA = "0x213AEF8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x213B134", Offset = "0x213B134", VA = "0x213B134")]
		public void CheckForBounds()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x213B2B0", Offset = "0x213B2B0", VA = "0x213B2B0")]
		public TooltipManager()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class TopPanelButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4002295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Animator buttonAnimator;

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0x213B3B8", Offset = "0x213B3B8", VA = "0x213B3B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0x213B420", Offset = "0x213B420", VA = "0x213B420", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0x213B524", Offset = "0x213B524", VA = "0x213B524", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0x213B628", Offset = "0x213B628", VA = "0x213B628")]
		public TopPanelButton()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class TopPanelManager : MonoBehaviour
	{
		[Token(Token = "0x4002296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9784", Offset = "0x5C9784")]
		public List<GameObject> panels;

		[Token(Token = "0x4002297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C97BC", Offset = "0x5C97BC")]
		public List<GameObject> buttons;

		[Token(Token = "0x4002298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private string panelFadeIn;

		[Token(Token = "0x4002299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string panelFadeOut;

		[Token(Token = "0x400229A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string buttonFadeIn;

		[Token(Token = "0x400229B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string buttonFadeOut;

		[Token(Token = "0x400229C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private GameObject currentPanel;

		[Token(Token = "0x400229D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject nextPanel;

		[Token(Token = "0x400229E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private GameObject currentButton;

		[Token(Token = "0x400229F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject nextButton;

		[Token(Token = "0x40022A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C97F4", Offset = "0x5C97F4")]
		public int currentPanelIndex;

		[Token(Token = "0x40022A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentButtonlIndex;

		[Token(Token = "0x40022A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Animator currentPanelAnimator;

		[Token(Token = "0x40022A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator nextPanelAnimator;

		[Token(Token = "0x40022A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x40022A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0x213B630", Offset = "0x213B630", VA = "0x213B630")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0x213B79C", Offset = "0x213B79C", VA = "0x213B79C")]
		public void PanelAnim(int newPanel)
		{
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0x213BA34", Offset = "0x213BA34", VA = "0x213BA34")]
		public TopPanelManager()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class UIElementSound : MonoBehaviour, IPointerClickHandler, IEventSystemHandler, IPointerEnterHandler
	{
		[Token(Token = "0x40022A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9828", Offset = "0x5C9828")]
		public AudioClip hoverSound;

		[Token(Token = "0x40022A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip clickSound;

		[Token(Token = "0x40022A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AudioClip notificationSound;

		[Token(Token = "0x40022A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C985C", Offset = "0x5C985C")]
		public bool enableHoverSound;

		[Token(Token = "0x40022AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool enableClickSound;

		[Token(Token = "0x40022AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool isNotification;

		[Token(Token = "0x17000216")]
		private AudioSource HoverSource
		{
			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0x213BB28", Offset = "0x213BB28", VA = "0x213BB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000217")]
		private AudioSource ClickSource
		{
			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0x213BB8C", Offset = "0x213BB8C", VA = "0x213BB8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private AudioSource NotificationSource
		{
			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0x213BBF0", Offset = "0x213BBF0", VA = "0x213BBF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0x213BC54", Offset = "0x213BC54", VA = "0x213BC54")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0x213BD90", Offset = "0x213BD90", VA = "0x213BD90", Slot = "5")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0x213BDDC", Offset = "0x213BDDC", VA = "0x213BDDC", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0x213BE28", Offset = "0x213BE28", VA = "0x213BE28")]
		public void Notification()
		{
		}

		[Token(Token = "0x6001E43")]
		[Address(RVA = "0x213BE74", Offset = "0x213BE74", VA = "0x213BE74")]
		public UIElementSound()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class WeaponSelectionAnim : MonoBehaviour
	{
		[Token(Token = "0x40022AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Animator weaponListAnimator;

		[Token(Token = "0x40022AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GameObject> weaponButtons;

		[Token(Token = "0x40022AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject currentWeapon;

		[Token(Token = "0x40022AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private GameObject selectedWeapon;

		[Token(Token = "0x40022B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private GameObject currentButton;

		[Token(Token = "0x40022B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject nextButton;

		[Token(Token = "0x40022B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int currentButtonIndex;

		[Token(Token = "0x40022B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int nextButtonIndex;

		[Token(Token = "0x40022B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Animator currentWeaponAnimator;

		[Token(Token = "0x40022B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator currentButtonAnimator;

		[Token(Token = "0x40022B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Animator nextButtonAnimator;

		[Token(Token = "0x6001E44")]
		[Address(RVA = "0x213BE84", Offset = "0x213BE84", VA = "0x213BE84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E45")]
		[Address(RVA = "0x213BF68", Offset = "0x213BF68", VA = "0x213BF68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E46")]
		[Address(RVA = "0x213C774", Offset = "0x213C774", VA = "0x213C774")]
		public WeaponSelectionAnim()
		{
		}
	}
}
namespace TButt
{
	[Token(Token = "0x20003E1")]
	public class TBCamera2D : TBCameraBase
	{
		[Token(Token = "0x6001E47")]
		[Address(RVA = "0x24C9004", Offset = "0x24C9004", VA = "0x24C9004", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001E48")]
		[Address(RVA = "0x24C9218", Offset = "0x24C9218", VA = "0x24C9218", Slot = "10")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001E49")]
		[Address(RVA = "0x24C9CE8", Offset = "0x24C9CE8", VA = "0x24C9CE8", Slot = "11")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001E4A")]
		[Address(RVA = "0x24C90FC", Offset = "0x24C90FC", VA = "0x24C90FC")]
		protected void UpdateFOV()
		{
		}

		[Token(Token = "0x6001E4B")]
		[Address(RVA = "0x24CA830", Offset = "0x24CA830", VA = "0x24CA830")]
		public TBCamera2D()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	public class TBCameraGoogle : TBCameraBase
	{
		[Token(Token = "0x6001E4C")]
		[Address(RVA = "0x24CB5B0", Offset = "0x24CB5B0", VA = "0x24CB5B0")]
		public TBCameraGoogle()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class TBCameraOculus : TBCameraBase
	{
		[Token(Token = "0x6001E4D")]
		[Address(RVA = "0x24CB5B8", Offset = "0x24CB5B8", VA = "0x24CB5B8", Slot = "5")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x24CB7E4", Offset = "0x24CB7E4", VA = "0x24CB7E4", Slot = "6")]
		protected override void SetTrackingOrigin(TBSettings.TBTrackingOrigin origin)
		{
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x24CB8FC", Offset = "0x24CB8FC", VA = "0x24CB8FC", Slot = "7")]
		public override bool HeadsetHasPositionTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x24CB990", Offset = "0x24CB990", VA = "0x24CB990")]
		public TBCameraOculus()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class TBSteamVRCamera : TBCameraBase
	{
		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x2173598", Offset = "0x2173598", VA = "0x2173598")]
		public TBSteamVRCamera()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public class TBCameraBase : MonoBehaviour
	{
		[Token(Token = "0x40022B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected Camera _camera;

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x24CA840", Offset = "0x24CA840", VA = "0x24CA840", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x24CA8B0", Offset = "0x24CA8B0", VA = "0x24CA8B0", Slot = "5")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x24CACA8", Offset = "0x24CACA8", VA = "0x24CACA8", Slot = "6")]
		protected virtual void SetTrackingOrigin(TBSettings.TBTrackingOrigin origin)
		{
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x24CADD4", Offset = "0x24CADD4", VA = "0x24CADD4", Slot = "7")]
		public virtual bool HeadsetHasPositionTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0x24CADE0", Offset = "0x24CADE0", VA = "0x24CADE0", Slot = "8")]
		public virtual void Recenter()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0x24CAE5C", Offset = "0x24CAE5C", VA = "0x24CAE5C", Slot = "9")]
		public virtual bool HasUserPresence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0x24C9364", Offset = "0x24C9364", VA = "0x24C9364", Slot = "10")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0x24C9E20", Offset = "0x24C9E20", VA = "0x24C9E20", Slot = "11")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0x24C90A0", Offset = "0x24C90A0", VA = "0x24C90A0")]
		protected void UpdateEverything()
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0x24CAEE0", Offset = "0x24CAEE0", VA = "0x24CAEE0")]
		protected void UpdateClearFlags()
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0x24CAF7C", Offset = "0x24CAF7C", VA = "0x24CAF7C")]
		protected void UpdateBackgroundColor()
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0x24CB03C", Offset = "0x24CB03C", VA = "0x24CB03C")]
		protected void UpdateCullingMask()
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0x24CB0E4", Offset = "0x24CB0E4", VA = "0x24CB0E4")]
		protected void UpdateOcclusionCulling()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0x24CB188", Offset = "0x24CB188", VA = "0x24CB188")]
		protected void UpdateFarClip()
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0x24CB22C", Offset = "0x24CB22C", VA = "0x24CB22C")]
		protected void UpdateNearClip()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x24CB2D0", Offset = "0x24CB2D0", VA = "0x24CB2D0")]
		protected void UpdateSortMode()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x24CB36C", Offset = "0x24CB36C", VA = "0x24CB36C")]
		protected void UpdateStereoConvergence()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x24CB410", Offset = "0x24CB410", VA = "0x24CB410")]
		protected void UpdateStereoSeparation()
		{
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x24CB4B4", Offset = "0x24CB4B4", VA = "0x24CB4B4")]
		protected void UpdateDepth()
		{
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x24CA838", Offset = "0x24CA838", VA = "0x24CA838")]
		public TBCameraBase()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public class TBCameraRig : MonoBehaviour
	{
		[Token(Token = "0x2000644")]
		public enum CameraMode
		{
			[Token(Token = "0x4002F9B")]
			Single,
			[Token(Token = "0x4002F9C")]
			Dual
		}

		[Token(Token = "0x2000645")]
		public static class Events
		{
			[Token(Token = "0x20006FC")]
			public delegate void CameraSettingChangeEvent();

			[Token(Token = "0x4002F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static CameraSettingChangeEvent OnBackgroundColorChanged;

			[Token(Token = "0x4002F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static CameraSettingChangeEvent OnNearClipPlaneChanged;

			[Token(Token = "0x4002F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static CameraSettingChangeEvent OnFarClipPlaneChanged;

			[Token(Token = "0x4002FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static CameraSettingChangeEvent OnClearFlagsChanged;

			[Token(Token = "0x4002FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static CameraSettingChangeEvent OnOcclusionCullingChanged;

			[Token(Token = "0x4002FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static CameraSettingChangeEvent OnSortModeChanged;

			[Token(Token = "0x4002FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static CameraSettingChangeEvent OnCullingMaskChanged;

			[Token(Token = "0x4002FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public static CameraSettingChangeEvent OnDepthChanged;

			[Token(Token = "0x4002FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static CameraSettingChangeEvent OnStereoConvergenceChanged;

			[Token(Token = "0x4002FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public static CameraSettingChangeEvent OnStereoSeparationChanged;

			[Token(Token = "0x4002FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static CameraSettingChangeEvent OnFOVChanged;
		}

		[Token(Token = "0x40022B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TBCameraRig instance;

		[Token(Token = "0x40022B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9890", Offset = "0x5C9890")]
		private CameraClearFlags _clearFlags;

		[Token(Token = "0x40022BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98A0", Offset = "0x5C98A0")]
		private LayerMask _cullingMask;

		[Token(Token = "0x40022BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98B0", Offset = "0x5C98B0")]
		private Color _backgroundColor;

		[Token(Token = "0x40022BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98C0", Offset = "0x5C98C0")]
		private float _nearClipPlane;

		[Token(Token = "0x40022BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98D0", Offset = "0x5C98D0")]
		private float _farClipPlane;

		[Token(Token = "0x40022BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98E0", Offset = "0x5C98E0")]
		private bool _useOcclusionCulling;

		[Token(Token = "0x40022BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C98F0", Offset = "0x5C98F0")]
		private float _depth;

		[Token(Token = "0x40022C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9900", Offset = "0x5C9900")]
		private float _stereoConvergence;

		[Token(Token = "0x40022C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9910", Offset = "0x5C9910")]
		private float _stereoSeparation;

		[Token(Token = "0x40022C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9920", Offset = "0x5C9920")]
		private OpaqueSortMode _sortMode;

		[Token(Token = "0x40022C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9930", Offset = "0x5C9930")]
		private float _fieldOfView;

		[Token(Token = "0x40022C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CameraMode _cameraMode;

		[Token(Token = "0x40022C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float _startingScale;

		[Token(Token = "0x40022C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected Camera _primaryCamera;

		[Token(Token = "0x40022C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected Camera _2DCamera;

		[Token(Token = "0x40022C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Transform _centerEyeTransform;

		[Token(Token = "0x40022C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Transform _leftEyeTransform;

		[Token(Token = "0x40022CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Transform _rightEyeTransform;

		[Token(Token = "0x40022CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TBCameraBase _baseCamera;

		[Token(Token = "0x40022CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private TBCameraBase _base2DCamera;

		[Token(Token = "0x40022CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform _trackingVolume;

		[Token(Token = "0x40022CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Transform _audioListenerTransform;

		[Token(Token = "0x40022CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioListener _audioListener;

		[Token(Token = "0x40022D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool _useBlackoutSphere;

		[Token(Token = "0x40022D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		private bool _initialized;

		[Token(Token = "0x40022D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform _blackoutSphere;

		[Token(Token = "0x17000219")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B18", Offset = "0x5D6B18")]
		public CameraClearFlags clearFlags
		{
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x24CB558", Offset = "0x24CB558", VA = "0x24CB558")]
			get
			{
				return default(CameraClearFlags);
			}
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x24CD158", Offset = "0x24CD158", VA = "0x24CD158")]
			set
			{
			}
		}

		[Token(Token = "0x1700021A")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B28", Offset = "0x5D6B28")]
		public bool useOcclusionCulling
		{
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x24CB578", Offset = "0x24CB578", VA = "0x24CB578")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x24CD3E4", Offset = "0x24CD3E4", VA = "0x24CD3E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700021B")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B38", Offset = "0x5D6B38")]
		public LayerMask cullingMask
		{
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x24CB570", Offset = "0x24CB570", VA = "0x24CB570")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6001E77")]
			[Address(RVA = "0x24CD1D0", Offset = "0x24CD1D0", VA = "0x24CD1D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B48", Offset = "0x5D6B48")]
		public Color backgroundColor
		{
			[Token(Token = "0x6001E78")]
			[Address(RVA = "0x24CB560", Offset = "0x24CB560", VA = "0x24CB560")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x6001E79")]
			[Address(RVA = "0x24CD248", Offset = "0x24CD248", VA = "0x24CD248")]
			set
			{
			}
		}

		[Token(Token = "0x1700021D")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B58", Offset = "0x5D6B58")]
		public float nearClipPlane
		{
			[Token(Token = "0x6001E7A")]
			[Address(RVA = "0x24CB588", Offset = "0x24CB588", VA = "0x24CB588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E7B")]
			[Address(RVA = "0x24CD2DC", Offset = "0x24CD2DC", VA = "0x24CD2DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700021E")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B68", Offset = "0x5D6B68")]
		public float farClipPlane
		{
			[Token(Token = "0x6001E7C")]
			[Address(RVA = "0x24CB580", Offset = "0x24CB580", VA = "0x24CB580")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E7D")]
			[Address(RVA = "0x24CD360", Offset = "0x24CD360", VA = "0x24CD360")]
			set
			{
			}
		}

		[Token(Token = "0x1700021F")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B78", Offset = "0x5D6B78")]
		public OpaqueSortMode sortMode
		{
			[Token(Token = "0x6001E7E")]
			[Address(RVA = "0x24CB590", Offset = "0x24CB590", VA = "0x24CB590")]
			get
			{
				return default(OpaqueSortMode);
			}
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x24CAC30", Offset = "0x24CAC30", VA = "0x24CAC30")]
			set
			{
			}
		}

		[Token(Token = "0x17000220")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B88", Offset = "0x5D6B88")]
		public float stereoConvergence
		{
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x24CB598", Offset = "0x24CB598", VA = "0x24CB598")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x24CD4E0", Offset = "0x24CD4E0", VA = "0x24CD4E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000221")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6B98", Offset = "0x5D6B98")]
		public float stereoSeparation
		{
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x24CB5A0", Offset = "0x24CB5A0", VA = "0x24CB5A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x24CD564", Offset = "0x24CD564", VA = "0x24CD564")]
			set
			{
			}
		}

		[Token(Token = "0x17000222")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6BA8", Offset = "0x5D6BA8")]
		public float depth
		{
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x24CB5A8", Offset = "0x24CB5A8", VA = "0x24CB5A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x24CD45C", Offset = "0x24CD45C", VA = "0x24CD45C")]
			set
			{
			}
		}

		[Token(Token = "0x17000223")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5D6BB8", Offset = "0x5D6BB8")]
		public float fieldOfView
		{
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x24CA7A4", Offset = "0x24CA7A4", VA = "0x24CA7A4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x24CA7AC", Offset = "0x24CA7AC", VA = "0x24CA7AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x24CB998", Offset = "0x24CB998", VA = "0x24CB998", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x24CBB30", Offset = "0x24CBB30", VA = "0x24CBB30", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x24CBCB4", Offset = "0x24CBCB4", VA = "0x24CBCB4", Slot = "6")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x24CC620", Offset = "0x24CC620", VA = "0x24CC620", Slot = "7")]
		protected virtual void OnActiveSceneChanged(Scene oldScene, Scene newScene)
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x24CC63C", Offset = "0x24CC63C", VA = "0x24CC63C", Slot = "8")]
		protected virtual void CreateAudioListener()
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x24CC87C", Offset = "0x24CC87C", VA = "0x24CC87C", Slot = "9")]
		protected virtual void SetupVRCamera()
		{
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0x24CCE00", Offset = "0x24CCE00", VA = "0x24CCE00", Slot = "10")]
		protected virtual void Setup2DCamera()
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0x24CD034", Offset = "0x24CD034", VA = "0x24CD034", Slot = "11")]
		protected virtual void SetMainCamera(Camera camera, bool on)
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x24CC0A0", Offset = "0x24CC0A0", VA = "0x24CC0A0")]
		private void ReadInitialCameraSettings()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0x24CCB40", Offset = "0x24CCB40", VA = "0x24CCB40")]
		private void SetupNativeCamera(VRPlatform platform)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0x24CC310", Offset = "0x24CC310", VA = "0x24CC310")]
		private void DestroyTempCamera()
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0x24CD5E8", Offset = "0x24CD5E8", VA = "0x24CD5E8", Slot = "12")]
		public virtual void ToggleBlackoutSphere(bool on)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x24CDBD4", Offset = "0x24CDBD4", VA = "0x24CDBD4")]
		public CameraMode GetCameraMode()
		{
			return default(CameraMode);
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x24CDBDC", Offset = "0x24CDBDC", VA = "0x24CDBDC")]
		public void EnableVRCamera(bool on)
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x24CDC28", Offset = "0x24CDC28", VA = "0x24CDC28")]
		public Camera GetCenterEyeCamera()
		{
			return null;
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x24C8D04", Offset = "0x24C8D04", VA = "0x24C8D04")]
		public Transform GetCenter()
		{
			return null;
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x24CADCC", Offset = "0x24CADCC", VA = "0x24CADCC")]
		public Transform GetTrackingVolume()
		{
			return null;
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x24CDCD8", Offset = "0x24CDCD8", VA = "0x24CDCD8")]
		public AudioListener GetAudioListener()
		{
			return null;
		}

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x24CDCE0", Offset = "0x24CDCE0", VA = "0x24CDCE0")]
		public void SetScale(float scale)
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x24CDDD0", Offset = "0x24CDDD0", VA = "0x24CDDD0")]
		public void ResetScale()
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x24CDDD8", Offset = "0x24CDDD8", VA = "0x24CDDD8")]
		public bool HasPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x24CDE0C", Offset = "0x24CDE0C", VA = "0x24CDE0C")]
		public bool HasUserPresence()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x24CDE40", Offset = "0x24CDE40", VA = "0x24CDE40")]
		public TBCameraRig()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class TBTrackingNodeGoogle : TBTrackingNodeBase
	{
		[Token(Token = "0x6001E93")]
		[Address(RVA = "0x2176A9C", Offset = "0x2176A9C", VA = "0x2176A9C")]
		public TBTrackingNodeGoogle()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class TBTrackingNodeOculus : TBTrackingNodeBase
	{
		[Token(Token = "0x40022D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected OVRInput.Controller _controller;

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0x2176AAC", Offset = "0x2176AAC", VA = "0x2176AAC", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0x2176BEC", Offset = "0x2176BEC", VA = "0x2176BEC", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0x2176D2C", Offset = "0x2176D2C", VA = "0x2176D2C")]
		private void UpdateHandedness(bool needed)
		{
		}

		[Token(Token = "0x6001E97")]
		[Address(RVA = "0x2176E4C", Offset = "0x2176E4C", VA = "0x2176E4C", Slot = "6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D1A64", Offset = "0x5D1A64")]
		public override void TrackNode(XRNode node)
		{
		}

		[Token(Token = "0x6001E98")]
		[Address(RVA = "0x2176E5C", Offset = "0x2176E5C", VA = "0x2176E5C", Slot = "7")]
		public override void TrackNode(TBNode node)
		{
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x2176EB4", Offset = "0x2176EB4", VA = "0x2176EB4")]
		public TBTrackingNodeOculus()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public static class TBInput
	{
		[Token(Token = "0x2000646")]
		[Flags]
		public enum Button
		{
			[Token(Token = "0x4002FA9")]
			None = 0,
			[Token(Token = "0x4002FAA")]
			PrimaryTrigger = 1,
			[Token(Token = "0x4002FAB")]
			SecondaryTrigger = 2,
			[Token(Token = "0x4002FAC")]
			Start = 0x10,
			[Token(Token = "0x4002FAD")]
			Options = 0x20,
			[Token(Token = "0x4002FAE")]
			Action1 = 0x100,
			[Token(Token = "0x4002FAF")]
			Action2 = 0x200,
			[Token(Token = "0x4002FB0")]
			Action3 = 0x400,
			[Token(Token = "0x4002FB1")]
			Action4 = 0x800,
			[Token(Token = "0x4002FB2")]
			Action5 = 0x102,
			[Token(Token = "0x4002FB3")]
			Action6 = 0x202,
			[Token(Token = "0x4002FB4")]
			Action7 = 0x402,
			[Token(Token = "0x4002FB5")]
			Action8 = 0x802,
			[Token(Token = "0x4002FB6")]
			DpadUp = 0x1000,
			[Token(Token = "0x4002FB7")]
			DpadDown = 0x2000,
			[Token(Token = "0x4002FB8")]
			DpadLeft = 0x4000,
			[Token(Token = "0x4002FB9")]
			DpadRight = 0x8000,
			[Token(Token = "0x4002FBA")]
			Touchpad = 0x10000,
			[Token(Token = "0x4002FBB")]
			Joystick = 0x20000,
			[Token(Token = "0x4002FBC")]
			LeftStick = 0x40000,
			[Token(Token = "0x4002FBD")]
			RightStick = 0x80000,
			[Token(Token = "0x4002FBE")]
			LeftTrigger = 0x100000,
			[Token(Token = "0x4002FBF")]
			RightTrigger = 0x200000,
			[Token(Token = "0x4002FC0")]
			LeftBumper = 0x400000,
			[Token(Token = "0x4002FC1")]
			RightBumper = 0x800000,
			[Token(Token = "0x4002FC2")]
			Any = -1
		}

		[Token(Token = "0x2000647")]
		[Flags]
		public enum Controller
		{
			[Token(Token = "0x4002FC4")]
			None = 0,
			[Token(Token = "0x4002FC5")]
			LHandController = 1,
			[Token(Token = "0x4002FC6")]
			RHandController = 2,
			[Token(Token = "0x4002FC7")]
			ClickRemote = 3,
			[Token(Token = "0x4002FC8")]
			Mobile3DOFController = 4,
			[Token(Token = "0x4002FC9")]
			Gamepad = 5,
			[Token(Token = "0x4002FCA")]
			Active = 6
		}

		[Token(Token = "0x2000648")]
		[Flags]
		public enum ControlType
		{
			[Token(Token = "0x4002FCC")]
			None = 0,
			[Token(Token = "0x4002FCD")]
			Gamepad = 1,
			[Token(Token = "0x4002FCE")]
			HandControllers = 2,
			[Token(Token = "0x4002FCF")]
			Mobile3DOFController = 3,
			[Token(Token = "0x4002FD0")]
			ClickRemote = 4
		}

		[Token(Token = "0x2000649")]
		public enum Mobile3DOFHandedness
		{
			[Token(Token = "0x4002FD2")]
			Left,
			[Token(Token = "0x4002FD3")]
			Right,
			[Token(Token = "0x4002FD4")]
			Center
		}

		[Token(Token = "0x200064A")]
		public enum RumblePusleLength
		{
			[Token(Token = "0x4002FD6")]
			Short,
			[Token(Token = "0x4002FD7")]
			Medium,
			[Token(Token = "0x4002FD8")]
			Long
		}

		[Token(Token = "0x200064B")]
		public enum RumblePulseStrength
		{
			[Token(Token = "0x4002FDA")]
			Low,
			[Token(Token = "0x4002FDB")]
			Medium,
			[Token(Token = "0x4002FDC")]
			High
		}

		[Token(Token = "0x200064C")]
		public enum Finger
		{
			[Token(Token = "0x4002FDE")]
			Thumb = 0,
			[Token(Token = "0x4002FDF")]
			Index = 1,
			[Token(Token = "0x4002FE0")]
			Middle = 2,
			[Token(Token = "0x4002FE1")]
			Ring = 3,
			[Token(Token = "0x4002FE2")]
			Pinky = 4,
			[Token(Token = "0x4002FE3")]
			Grip = 10
		}

		[Token(Token = "0x200064D")]
		public static class Events
		{
			[Token(Token = "0x20006FD")]
			public delegate void ButtonEvent();

			[Token(Token = "0x20006FE")]
			public delegate void ControlTypeEvent(ControlType type);

			[Token(Token = "0x20006FF")]
			public delegate void HandednessEvent(Mobile3DOFHandedness handedness);

			[Token(Token = "0x2000700")]
			public static class Internal
			{
				[Token(Token = "0x6002C8F")]
				[Address(RVA = "0x24D97BC", Offset = "0x24D97BC", VA = "0x24D97BC")]
				public static void SendControllerConnectionEvent(ControlType controlType, bool connected)
				{
				}

				[Token(Token = "0x6002C90")]
				[Address(RVA = "0x24D983C", Offset = "0x24D983C", VA = "0x24D983C")]
				public static void RefreshInput(bool needed)
				{
				}

				[Token(Token = "0x6002C91")]
				[Address(RVA = "0x24D3178", Offset = "0x24D3178", VA = "0x24D3178")]
				public static void UpdateControlType(ControlType type)
				{
				}

				[Token(Token = "0x6002C92")]
				[Address(RVA = "0x24D9840", Offset = "0x24D9840", VA = "0x24D9840")]
				public static void UpdateHandedness(Mobile3DOFHandedness handedness)
				{
				}
			}

			[Token(Token = "0x2000701")]
			public static class Button
			{
				[Token(Token = "0x14000038")]
				public static event ButtonEvent OnPrimaryTriggerButtonDown
				{
					[Token(Token = "0x6002C93")]
					[Address(RVA = "0x24D6324", Offset = "0x24D6324", VA = "0x24D6324")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D620C", Offset = "0x5D620C")]
					add
					{
					}
					[Token(Token = "0x6002C94")]
					[Address(RVA = "0x24D6450", Offset = "0x24D6450", VA = "0x24D6450")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D621C", Offset = "0x5D621C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000039")]
				public static event ButtonEvent OnPrimaryTriggerButtonUp
				{
					[Token(Token = "0x6002C95")]
					[Address(RVA = "0x24D657C", Offset = "0x24D657C", VA = "0x24D657C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D622C", Offset = "0x5D622C")]
					add
					{
					}
					[Token(Token = "0x6002C96")]
					[Address(RVA = "0x24D66AC", Offset = "0x24D66AC", VA = "0x24D66AC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D623C", Offset = "0x5D623C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003A")]
				public static event ButtonEvent OnSecondaryTriggerButtonDown
				{
					[Token(Token = "0x6002C97")]
					[Address(RVA = "0x24D67DC", Offset = "0x24D67DC", VA = "0x24D67DC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D624C", Offset = "0x5D624C")]
					add
					{
					}
					[Token(Token = "0x6002C98")]
					[Address(RVA = "0x24D690C", Offset = "0x24D690C", VA = "0x24D690C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D625C", Offset = "0x5D625C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003B")]
				public static event ButtonEvent OnSecondaryTriggerButtonUp
				{
					[Token(Token = "0x6002C99")]
					[Address(RVA = "0x24D6A3C", Offset = "0x24D6A3C", VA = "0x24D6A3C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D626C", Offset = "0x5D626C")]
					add
					{
					}
					[Token(Token = "0x6002C9A")]
					[Address(RVA = "0x24D6B6C", Offset = "0x24D6B6C", VA = "0x24D6B6C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D627C", Offset = "0x5D627C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003C")]
				public static event ButtonEvent OnStartButtonDown
				{
					[Token(Token = "0x6002C9B")]
					[Address(RVA = "0x24D6C9C", Offset = "0x24D6C9C", VA = "0x24D6C9C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D628C", Offset = "0x5D628C")]
					add
					{
					}
					[Token(Token = "0x6002C9C")]
					[Address(RVA = "0x24D6DCC", Offset = "0x24D6DCC", VA = "0x24D6DCC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D629C", Offset = "0x5D629C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003D")]
				public static event ButtonEvent OnStartButtonUp
				{
					[Token(Token = "0x6002C9D")]
					[Address(RVA = "0x24D6EFC", Offset = "0x24D6EFC", VA = "0x24D6EFC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62AC", Offset = "0x5D62AC")]
					add
					{
					}
					[Token(Token = "0x6002C9E")]
					[Address(RVA = "0x24D702C", Offset = "0x24D702C", VA = "0x24D702C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62BC", Offset = "0x5D62BC")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003E")]
				public static event ButtonEvent OnOptionsButtonDown
				{
					[Token(Token = "0x6002C9F")]
					[Address(RVA = "0x24D715C", Offset = "0x24D715C", VA = "0x24D715C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62CC", Offset = "0x5D62CC")]
					add
					{
					}
					[Token(Token = "0x6002CA0")]
					[Address(RVA = "0x24D728C", Offset = "0x24D728C", VA = "0x24D728C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62DC", Offset = "0x5D62DC")]
					remove
					{
					}
				}

				[Token(Token = "0x1400003F")]
				public static event ButtonEvent OnOptionsButtonUp
				{
					[Token(Token = "0x6002CA1")]
					[Address(RVA = "0x24D73BC", Offset = "0x24D73BC", VA = "0x24D73BC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62EC", Offset = "0x5D62EC")]
					add
					{
					}
					[Token(Token = "0x6002CA2")]
					[Address(RVA = "0x24D74EC", Offset = "0x24D74EC", VA = "0x24D74EC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D62FC", Offset = "0x5D62FC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000040")]
				public static event ButtonEvent OnAction1ButtonDown
				{
					[Token(Token = "0x6002CA3")]
					[Address(RVA = "0x24D761C", Offset = "0x24D761C", VA = "0x24D761C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D630C", Offset = "0x5D630C")]
					add
					{
					}
					[Token(Token = "0x6002CA4")]
					[Address(RVA = "0x24D774C", Offset = "0x24D774C", VA = "0x24D774C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D631C", Offset = "0x5D631C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000041")]
				public static event ButtonEvent OnAction1ButtonUp
				{
					[Token(Token = "0x6002CA5")]
					[Address(RVA = "0x24D787C", Offset = "0x24D787C", VA = "0x24D787C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D632C", Offset = "0x5D632C")]
					add
					{
					}
					[Token(Token = "0x6002CA6")]
					[Address(RVA = "0x24D79AC", Offset = "0x24D79AC", VA = "0x24D79AC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D633C", Offset = "0x5D633C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000042")]
				public static event ButtonEvent OnAction2ButtonDown
				{
					[Token(Token = "0x6002CA7")]
					[Address(RVA = "0x24D7ADC", Offset = "0x24D7ADC", VA = "0x24D7ADC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D634C", Offset = "0x5D634C")]
					add
					{
					}
					[Token(Token = "0x6002CA8")]
					[Address(RVA = "0x24D7C0C", Offset = "0x24D7C0C", VA = "0x24D7C0C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D635C", Offset = "0x5D635C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000043")]
				public static event ButtonEvent OnAction2ButtonUp
				{
					[Token(Token = "0x6002CA9")]
					[Address(RVA = "0x24D7D3C", Offset = "0x24D7D3C", VA = "0x24D7D3C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D636C", Offset = "0x5D636C")]
					add
					{
					}
					[Token(Token = "0x6002CAA")]
					[Address(RVA = "0x24D7E6C", Offset = "0x24D7E6C", VA = "0x24D7E6C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D637C", Offset = "0x5D637C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000044")]
				public static event ButtonEvent OnAction3ButtonDown
				{
					[Token(Token = "0x6002CAB")]
					[Address(RVA = "0x24D7F9C", Offset = "0x24D7F9C", VA = "0x24D7F9C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D638C", Offset = "0x5D638C")]
					add
					{
					}
					[Token(Token = "0x6002CAC")]
					[Address(RVA = "0x24D80CC", Offset = "0x24D80CC", VA = "0x24D80CC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D639C", Offset = "0x5D639C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000045")]
				public static event ButtonEvent OnAction3ButtonUp
				{
					[Token(Token = "0x6002CAD")]
					[Address(RVA = "0x24D81FC", Offset = "0x24D81FC", VA = "0x24D81FC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63AC", Offset = "0x5D63AC")]
					add
					{
					}
					[Token(Token = "0x6002CAE")]
					[Address(RVA = "0x24D832C", Offset = "0x24D832C", VA = "0x24D832C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63BC", Offset = "0x5D63BC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000046")]
				public static event ButtonEvent OnAction4ButtonDown
				{
					[Token(Token = "0x6002CAF")]
					[Address(RVA = "0x24D845C", Offset = "0x24D845C", VA = "0x24D845C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63CC", Offset = "0x5D63CC")]
					add
					{
					}
					[Token(Token = "0x6002CB0")]
					[Address(RVA = "0x24D858C", Offset = "0x24D858C", VA = "0x24D858C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63DC", Offset = "0x5D63DC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000047")]
				public static event ButtonEvent OnAction4ButtonUp
				{
					[Token(Token = "0x6002CB1")]
					[Address(RVA = "0x24D86BC", Offset = "0x24D86BC", VA = "0x24D86BC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63EC", Offset = "0x5D63EC")]
					add
					{
					}
					[Token(Token = "0x6002CB2")]
					[Address(RVA = "0x24D87EC", Offset = "0x24D87EC", VA = "0x24D87EC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D63FC", Offset = "0x5D63FC")]
					remove
					{
					}
				}

				[Token(Token = "0x6002CB3")]
				[Address(RVA = "0x24D5084", Offset = "0x24D5084", VA = "0x24D5084")]
				public static void UpdateButtonEvents(Controller controller)
				{
				}
			}

			[Token(Token = "0x2000702")]
			public static class Touch
			{
				[Token(Token = "0x14000048")]
				public static event ButtonEvent OnPrimaryTriggerTouchDown
				{
					[Token(Token = "0x6002CB4")]
					[Address(RVA = "0x24D98B4", Offset = "0x24D98B4", VA = "0x24D98B4")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D640C", Offset = "0x5D640C")]
					add
					{
					}
					[Token(Token = "0x6002CB5")]
					[Address(RVA = "0x24D99E0", Offset = "0x24D99E0", VA = "0x24D99E0")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D641C", Offset = "0x5D641C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000049")]
				public static event ButtonEvent OnPrimaryTriggerTouchUp
				{
					[Token(Token = "0x6002CB6")]
					[Address(RVA = "0x24D9B0C", Offset = "0x24D9B0C", VA = "0x24D9B0C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D642C", Offset = "0x5D642C")]
					add
					{
					}
					[Token(Token = "0x6002CB7")]
					[Address(RVA = "0x24D9C3C", Offset = "0x24D9C3C", VA = "0x24D9C3C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D643C", Offset = "0x5D643C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004A")]
				public static event ButtonEvent OnSecondaryTriggerTouchDown
				{
					[Token(Token = "0x6002CB8")]
					[Address(RVA = "0x24D9D6C", Offset = "0x24D9D6C", VA = "0x24D9D6C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D644C", Offset = "0x5D644C")]
					add
					{
					}
					[Token(Token = "0x6002CB9")]
					[Address(RVA = "0x24D9E9C", Offset = "0x24D9E9C", VA = "0x24D9E9C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D645C", Offset = "0x5D645C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004B")]
				public static event ButtonEvent OnSecondaryTriggerTouchUp
				{
					[Token(Token = "0x6002CBA")]
					[Address(RVA = "0x24D9FCC", Offset = "0x24D9FCC", VA = "0x24D9FCC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D646C", Offset = "0x5D646C")]
					add
					{
					}
					[Token(Token = "0x6002CBB")]
					[Address(RVA = "0x24DA0FC", Offset = "0x24DA0FC", VA = "0x24DA0FC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D647C", Offset = "0x5D647C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004C")]
				public static event ButtonEvent OnStartTouchDown
				{
					[Token(Token = "0x6002CBC")]
					[Address(RVA = "0x24DA22C", Offset = "0x24DA22C", VA = "0x24DA22C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D648C", Offset = "0x5D648C")]
					add
					{
					}
					[Token(Token = "0x6002CBD")]
					[Address(RVA = "0x24DA35C", Offset = "0x24DA35C", VA = "0x24DA35C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D649C", Offset = "0x5D649C")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004D")]
				public static event ButtonEvent OnStartTouchUp
				{
					[Token(Token = "0x6002CBE")]
					[Address(RVA = "0x24DA48C", Offset = "0x24DA48C", VA = "0x24DA48C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64AC", Offset = "0x5D64AC")]
					add
					{
					}
					[Token(Token = "0x6002CBF")]
					[Address(RVA = "0x24DA5BC", Offset = "0x24DA5BC", VA = "0x24DA5BC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64BC", Offset = "0x5D64BC")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004E")]
				public static event ButtonEvent OnOptionsTouchDown
				{
					[Token(Token = "0x6002CC0")]
					[Address(RVA = "0x24DA6EC", Offset = "0x24DA6EC", VA = "0x24DA6EC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64CC", Offset = "0x5D64CC")]
					add
					{
					}
					[Token(Token = "0x6002CC1")]
					[Address(RVA = "0x24DA81C", Offset = "0x24DA81C", VA = "0x24DA81C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64DC", Offset = "0x5D64DC")]
					remove
					{
					}
				}

				[Token(Token = "0x1400004F")]
				public static event ButtonEvent OnOptionsTouchUp
				{
					[Token(Token = "0x6002CC2")]
					[Address(RVA = "0x24DA94C", Offset = "0x24DA94C", VA = "0x24DA94C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64EC", Offset = "0x5D64EC")]
					add
					{
					}
					[Token(Token = "0x6002CC3")]
					[Address(RVA = "0x24DAA7C", Offset = "0x24DAA7C", VA = "0x24DAA7C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D64FC", Offset = "0x5D64FC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000050")]
				public static event ButtonEvent OnAction1TouchDown
				{
					[Token(Token = "0x6002CC4")]
					[Address(RVA = "0x24DABAC", Offset = "0x24DABAC", VA = "0x24DABAC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D650C", Offset = "0x5D650C")]
					add
					{
					}
					[Token(Token = "0x6002CC5")]
					[Address(RVA = "0x24DACDC", Offset = "0x24DACDC", VA = "0x24DACDC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D651C", Offset = "0x5D651C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000051")]
				public static event ButtonEvent OnAction1TouchUp
				{
					[Token(Token = "0x6002CC6")]
					[Address(RVA = "0x24DAE0C", Offset = "0x24DAE0C", VA = "0x24DAE0C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D652C", Offset = "0x5D652C")]
					add
					{
					}
					[Token(Token = "0x6002CC7")]
					[Address(RVA = "0x24DAF3C", Offset = "0x24DAF3C", VA = "0x24DAF3C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D653C", Offset = "0x5D653C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000052")]
				public static event ButtonEvent OnAction2TouchDown
				{
					[Token(Token = "0x6002CC8")]
					[Address(RVA = "0x24DB06C", Offset = "0x24DB06C", VA = "0x24DB06C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D654C", Offset = "0x5D654C")]
					add
					{
					}
					[Token(Token = "0x6002CC9")]
					[Address(RVA = "0x24DB19C", Offset = "0x24DB19C", VA = "0x24DB19C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D655C", Offset = "0x5D655C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000053")]
				public static event ButtonEvent OnAction2TouchUp
				{
					[Token(Token = "0x6002CCA")]
					[Address(RVA = "0x24DB2CC", Offset = "0x24DB2CC", VA = "0x24DB2CC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D656C", Offset = "0x5D656C")]
					add
					{
					}
					[Token(Token = "0x6002CCB")]
					[Address(RVA = "0x24DB3FC", Offset = "0x24DB3FC", VA = "0x24DB3FC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D657C", Offset = "0x5D657C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000054")]
				public static event ButtonEvent OnAction3TouchDown
				{
					[Token(Token = "0x6002CCC")]
					[Address(RVA = "0x24DB52C", Offset = "0x24DB52C", VA = "0x24DB52C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D658C", Offset = "0x5D658C")]
					add
					{
					}
					[Token(Token = "0x6002CCD")]
					[Address(RVA = "0x24DB65C", Offset = "0x24DB65C", VA = "0x24DB65C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D659C", Offset = "0x5D659C")]
					remove
					{
					}
				}

				[Token(Token = "0x14000055")]
				public static event ButtonEvent OnAction3TouchUp
				{
					[Token(Token = "0x6002CCE")]
					[Address(RVA = "0x24DB78C", Offset = "0x24DB78C", VA = "0x24DB78C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65AC", Offset = "0x5D65AC")]
					add
					{
					}
					[Token(Token = "0x6002CCF")]
					[Address(RVA = "0x24DB8BC", Offset = "0x24DB8BC", VA = "0x24DB8BC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65BC", Offset = "0x5D65BC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000056")]
				public static event ButtonEvent OnAction4TouchDown
				{
					[Token(Token = "0x6002CD0")]
					[Address(RVA = "0x24DB9EC", Offset = "0x24DB9EC", VA = "0x24DB9EC")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65CC", Offset = "0x5D65CC")]
					add
					{
					}
					[Token(Token = "0x6002CD1")]
					[Address(RVA = "0x24DBB1C", Offset = "0x24DBB1C", VA = "0x24DBB1C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65DC", Offset = "0x5D65DC")]
					remove
					{
					}
				}

				[Token(Token = "0x14000057")]
				public static event ButtonEvent OnAction4TouchUp
				{
					[Token(Token = "0x6002CD2")]
					[Address(RVA = "0x24DBC4C", Offset = "0x24DBC4C", VA = "0x24DBC4C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65EC", Offset = "0x5D65EC")]
					add
					{
					}
					[Token(Token = "0x6002CD3")]
					[Address(RVA = "0x24DBD7C", Offset = "0x24DBD7C", VA = "0x24DBD7C")]
					[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D65FC", Offset = "0x5D65FC")]
					remove
					{
					}
				}

				[Token(Token = "0x6002CD4")]
				[Address(RVA = "0x24D59D4", Offset = "0x24D59D4", VA = "0x24D59D4")]
				public static void UpdateButtonEvents(Controller controller)
				{
				}
			}

			[Token(Token = "0x14000034")]
			public static event ControlTypeEvent OnControlTypeChanged
			{
				[Token(Token = "0x6002A78")]
				[Address(RVA = "0x24C1468", Offset = "0x24C1468", VA = "0x24C1468")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D565C", Offset = "0x5D565C")]
				add
				{
				}
				[Token(Token = "0x6002A79")]
				[Address(RVA = "0x24C1624", Offset = "0x24C1624", VA = "0x24C1624")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D566C", Offset = "0x5D566C")]
				remove
				{
				}
			}

			[Token(Token = "0x14000035")]
			public static event ControlTypeEvent OnControllerConnected
			{
				[Token(Token = "0x6002A7A")]
				[Address(RVA = "0x24D4BC4", Offset = "0x24D4BC4", VA = "0x24D4BC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D567C", Offset = "0x5D567C")]
				add
				{
				}
				[Token(Token = "0x6002A7B")]
				[Address(RVA = "0x24D4CF4", Offset = "0x24D4CF4", VA = "0x24D4CF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D568C", Offset = "0x5D568C")]
				remove
				{
				}
			}

			[Token(Token = "0x14000036")]
			public static event ControlTypeEvent OnControllerDisconnected
			{
				[Token(Token = "0x6002A7C")]
				[Address(RVA = "0x24D4E24", Offset = "0x24D4E24", VA = "0x24D4E24")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D569C", Offset = "0x5D569C")]
				add
				{
				}
				[Token(Token = "0x6002A7D")]
				[Address(RVA = "0x24D4F54", Offset = "0x24D4F54", VA = "0x24D4F54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D56AC", Offset = "0x5D56AC")]
				remove
				{
				}
			}

			[Token(Token = "0x14000037")]
			public static event HandednessEvent OnHandednessChanged
			{
				[Token(Token = "0x6002A7E")]
				[Address(RVA = "0x24C8320", Offset = "0x24C8320", VA = "0x24C8320")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D56BC", Offset = "0x5D56BC")]
				add
				{
				}
				[Token(Token = "0x6002A7F")]
				[Address(RVA = "0x24C84D4", Offset = "0x24C84D4", VA = "0x24C84D4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D56CC", Offset = "0x5D56CC")]
				remove
				{
				}
			}

			[Token(Token = "0x6002A80")]
			[Address(RVA = "0x24D30C4", Offset = "0x24D30C4", VA = "0x24D30C4")]
			public static void UpdateEvents()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064E")]
		public class ButtonDef<T>
		{
			[Token(Token = "0x4002FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public T rawButton;

			[Token(Token = "0x4002FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public Button[] virtualButtons;

			[Token(Token = "0x4002FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public bool supportsTouch;

			[Token(Token = "0x4002FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public bool supportsAxis1D;

			[Token(Token = "0x4002FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public bool supportsAxis2D;

			[Token(Token = "0x4002FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[SerializeField]
			public bool supportsButton;

			[Token(Token = "0x6002A81")]
			public ButtonDef()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200064F")]
		public class SerializedButtonDef
		{
			[Token(Token = "0x4002FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			public Button[] virtualButtons;

			[Token(Token = "0x6002A82")]
			[Address(RVA = "0x24DBEAC", Offset = "0x24DBEAC", VA = "0x24DBEAC")]
			public SerializedButtonDef()
			{
			}
		}

		[Token(Token = "0x2000650")]
		public struct ButtonLookupTable<T>
		{
			[Token(Token = "0x4002FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] PrimaryTrigger;

			[Token(Token = "0x4002FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] SecondaryTrigger;

			[Token(Token = "0x4002FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Start;

			[Token(Token = "0x4002FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Options;

			[Token(Token = "0x4002FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action1;

			[Token(Token = "0x4002FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action2;

			[Token(Token = "0x4002FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action3;

			[Token(Token = "0x4002FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action4;

			[Token(Token = "0x4002FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action5;

			[Token(Token = "0x4002FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action6;

			[Token(Token = "0x4002FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action7;

			[Token(Token = "0x4002FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Action8;

			[Token(Token = "0x4002FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] DpadUp;

			[Token(Token = "0x4002FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] DpadDown;

			[Token(Token = "0x4002FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] DpadLeft;

			[Token(Token = "0x4002FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] DpadRight;

			[Token(Token = "0x4003000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Touchpad;

			[Token(Token = "0x4003001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Joystick;

			[Token(Token = "0x4003002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] LeftStick;

			[Token(Token = "0x4003003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] RightStick;

			[Token(Token = "0x4003004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] LeftTrigger;

			[Token(Token = "0x4003005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] RightTrigger;

			[Token(Token = "0x4003006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] LeftBumper;

			[Token(Token = "0x4003007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] RightBumper;

			[Token(Token = "0x4003008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Any;
		}

		[Token(Token = "0x40022D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ControlType connectedControlTypes;

		[Token(Token = "0x40022D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Transform _leftHand;

		[Token(Token = "0x40022D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform _rightHand;

		[Token(Token = "0x40022D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Transform _3DOFHand;

		[Token(Token = "0x40022D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float rumbleStrengthLow;

		[Token(Token = "0x40022D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float rumbleStrengthMed;

		[Token(Token = "0x40022DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static float rumbleStrengthHi;

		[Token(Token = "0x40022DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static float rumbleLengthShort;

		[Token(Token = "0x40022DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float rumbleLengthMed;

		[Token(Token = "0x40022DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static float rumbleLengthLong;

		[Token(Token = "0x40022DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static ControlType _activeControlType;

		[Token(Token = "0x40022DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private static ITBSDKInput _activeSDK;

		[Token(Token = "0x40022E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool _hasActiveSDK;

		[Token(Token = "0x40022E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static Dictionary<ControlType, bool> _supportedControllerTypes;

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0x24D05B8", Offset = "0x24D05B8", VA = "0x24D05B8")]
		public static void Initialize(VRPlatform platform)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0x24D3030", Offset = "0x24D3030", VA = "0x24D3030")]
		public static void Update()
		{
		}

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0x24BD1D0", Offset = "0x24BD1D0", VA = "0x24BD1D0")]
		public static Controller GetActiveController()
		{
			return default(Controller);
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0x24BCF2C", Offset = "0x24BCF2C", VA = "0x24BCF2C")]
		public static ControlType GetActiveControlType()
		{
			return default(ControlType);
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0x24C1BBC", Offset = "0x24C1BBC", VA = "0x24C1BBC")]
		public static VRController GetControllerModel(Controller controller)
		{
			return default(VRController);
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0x24C11EC", Offset = "0x24C11EC", VA = "0x24C11EC")]
		public static void SetActiveControlType(ControlType controlType)
		{
		}

		[Token(Token = "0x6001EA0")]
		[Address(RVA = "0x24D31EC", Offset = "0x24D31EC", VA = "0x24D31EC")]
		public static string GetControllerName(Controller controller = Controller.Active)
		{
			return null;
		}

		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x24D3358", Offset = "0x24D3358", VA = "0x24D3358")]
		public static bool ControllerHasRumbleSupport(Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x24C0AA8", Offset = "0x24C0AA8", VA = "0x24C0AA8")]
		public static bool GetButton(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x24D3520", Offset = "0x24D3520", VA = "0x24D3520")]
		public static bool GetButtonUp(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0x24D34D0", Offset = "0x24D34D0", VA = "0x24D34D0")]
		public static WaveVR_ButtonList.EButtons ToWaveButton(Button button)
		{
			return default(WaveVR_ButtonList.EButtons);
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x24D34B8", Offset = "0x24D34B8", VA = "0x24D34B8")]
		public static WaveVR_Controller.EDeviceType ToWaveDevice(Controller controller)
		{
			return default(WaveVR_Controller.EDeviceType);
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x24D37E0", Offset = "0x24D37E0", VA = "0x24D37E0")]
		public static bool GetButtonDown(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x24C3E24", Offset = "0x24C3E24", VA = "0x24C3E24")]
		public static bool GetTouch(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x24D3AA0", Offset = "0x24D3AA0", VA = "0x24D3AA0")]
		public static bool GetTouchUp(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x24D3C08", Offset = "0x24D3C08", VA = "0x24D3C08")]
		public static bool GetTouchDown(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0x24BE550", Offset = "0x24BE550", VA = "0x24BE550")]
		public static Vector2 GetAxis2D(Button button, Controller controller = Controller.Active)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x24C00D0", Offset = "0x24C00D0", VA = "0x24C00D0")]
		public static float GetAxis1D(Button button, Controller controller = Controller.Active)
		{
			return default(float);
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x24D3D70", Offset = "0x24D3D70", VA = "0x24D3D70")]
		public static Vector3 GetPosition(Controller controller = Controller.Active)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x24C8850", Offset = "0x24C8850", VA = "0x24C8850")]
		public static Quaternion GetRotation(Controller controller = Controller.Active)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x24D3F0C", Offset = "0x24D3F0C", VA = "0x24D3F0C")]
		public static Vector3 GetVelocity(Controller controller = Controller.Active)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x24D40A8", Offset = "0x24D40A8", VA = "0x24D40A8")]
		public static Vector3 GetAngularVelocity(Controller controller = Controller.Active)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x24C8B68", Offset = "0x24C8B68", VA = "0x24C8B68")]
		public static Vector3 GetAcceleration(Controller controller = Controller.Active)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x24C211C", Offset = "0x24C211C", VA = "0x24C211C")]
		public static float GetFinger(Finger finger, Controller controller = Controller.Active)
		{
			return default(float);
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0x24C1D1C", Offset = "0x24C1D1C", VA = "0x24C1D1C")]
		public static bool SupportsFinger(Finger finger, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0x24C3B54", Offset = "0x24C3B54", VA = "0x24C3B54")]
		public static bool SupportsButton(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0x24C3F8C", Offset = "0x24C3F8C", VA = "0x24C3F8C")]
		public static bool SupportsTouch(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x24C0344", Offset = "0x24C0344", VA = "0x24C0344")]
		public static bool SupportsAxis1D(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x24C06D8", Offset = "0x24C06D8", VA = "0x24C06D8")]
		public static bool SupportsAxis2D(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x24C3654", Offset = "0x24C3654", VA = "0x24C3654")]
		public static bool SupportsVirtualButton(Button button, Controller controller = Controller.Active)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x24C7E7C", Offset = "0x24C7E7C", VA = "0x24C7E7C")]
		public static Mobile3DOFHandedness Get3DOFHandedness()
		{
			return default(Mobile3DOFHandedness);
		}

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x24D4244", Offset = "0x24D4244", VA = "0x24D4244")]
		public static HandTrackingOffsets GetControllerTrackingOffsets(Controller controller)
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x24C1130", Offset = "0x24C1130", VA = "0x24C1130")]
		public static bool SupportsControlType(ControlType controlType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x24D43BC", Offset = "0x24D43BC", VA = "0x24D43BC")]
		public static void SetRumble(Controller controller = Controller.Active, float amount = 0f)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x24D4558", Offset = "0x24D4558", VA = "0x24D4558")]
		public static void SetRumble(Controller controller = Controller.Active, float strength = 0f, float frequency = 0f)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x24D4708", Offset = "0x24D4708", VA = "0x24D4708")]
		public static void StartRumblePulse(Controller controller = Controller.Active, RumblePulseStrength strength = RumblePulseStrength.Low, RumblePusleLength length = RumblePusleLength.Short)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x24D4994", Offset = "0x24D4994", VA = "0x24D4994")]
		public static void StartRumblePulse(Controller controller = Controller.Active, float strength = 0.5f, float length = 0.2f)
		{
		}

		[Token(Token = "0x6001EBF")]
		public static T[] GetRawButtons<T>(Button virtualButton, ButtonLookupTable<T> lookupTable)
		{
			return null;
		}

		[Token(Token = "0x6001EC0")]
		public static List<ButtonDef<T>> LoadButtonDefs<T>(List<ButtonDef<T>> buttons, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001EC1")]
		public static ButtonLookupTable<T> NewLookupTableFromDefs<T>(List<ButtonDef<T>> defs)
		{
			return default(ButtonLookupTable<T>);
		}

		[Token(Token = "0x6001EC2")]
		public static void SetupVirtualMap<T>(ref ButtonLookupTable<T> table, T rawButton, Button virtualButton)
		{
		}

		[Token(Token = "0x6001EC3")]
		public static void BindVirtualMapToButton<T>(ref T[] virtualButtonGroup, T rawButton)
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class TB3DOFArmModel : MonoBehaviour
	{
		[Token(Token = "0x40022E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TB3DOFArmModel instance;

		[Token(Token = "0x40022E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9940", Offset = "0x5C9940")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9940", Offset = "0x5C9940")]
		public Vector3 shoulderPosition;

		[Token(Token = "0x40022E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C99D0", Offset = "0x5C99D0")]
		public Vector3 elbowPosition;

		[Token(Token = "0x40022E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9A30", Offset = "0x5C9A30")]
		public Vector3 handPosition;

		[Token(Token = "0x40022E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _handTransform;

		[Token(Token = "0x40022E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Transform _shoulderTransform;

		[Token(Token = "0x40022E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _elbowTransform;

		[Token(Token = "0x40022E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Transform _pointerSourceTransform;

		[Token(Token = "0x40022EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _pointerSourceAngle;

		[Token(Token = "0x40022EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float shoulderPositionX;

		[Token(Token = "0x40022EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool _centered;

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x24C7A10", Offset = "0x24C7A10", VA = "0x24C7A10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x24C7BA8", Offset = "0x24C7BA8", VA = "0x24C7BA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x24C8288", Offset = "0x24C8288", VA = "0x24C8288")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x24C8450", Offset = "0x24C8450", VA = "0x24C8450")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x24C8604", Offset = "0x24C8604", VA = "0x24C8604")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x24C8000", Offset = "0x24C8000", VA = "0x24C8000")]
		private void OnHandednessChanged(TBInput.Mobile3DOFHandedness handedness)
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x24C89EC", Offset = "0x24C89EC", VA = "0x24C89EC")]
		private Vector3 GetTargetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x24C8E08", Offset = "0x24C8E08", VA = "0x24C8E08")]
		public void ToggleCenteredAlignment(bool on)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x24C8F10", Offset = "0x24C8F10", VA = "0x24C8F10")]
		public Transform GetPointerSourceTransform()
		{
			return null;
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x24C818C", Offset = "0x24C818C", VA = "0x24C818C")]
		public void SetPointerSourceRotation()
		{
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x24C8F18", Offset = "0x24C8F18", VA = "0x24C8F18")]
		public Transform GetHandTransform()
		{
			return null;
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0x24C8F20", Offset = "0x24C8F20", VA = "0x24C8F20")]
		public TB3DOFArmModel()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	public class TBTrackedNodeHelper : MonoBehaviour
	{
		[Token(Token = "0x40022ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TBNode nodeToAttachWith;

		[Token(Token = "0x40022EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 positionOffset;

		[Token(Token = "0x40022EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 rotationOffset;

		[Token(Token = "0x40022F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 _startingScale;

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0x21735A0", Offset = "0x21735A0", VA = "0x21735A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0x2173AC8", Offset = "0x2173AC8", VA = "0x2173AC8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0x2174254", Offset = "0x2174254", VA = "0x2174254")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0x217411C", Offset = "0x217411C", VA = "0x217411C")]
		private void AttachToNode(TBNode node, Transform t)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0x2174384", Offset = "0x2174384", VA = "0x2174384")]
		public TBTrackedNodeHelper()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public static class TBTracking
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C32B0", Offset = "0x5C32B0")]
		public delegate void TrackingEvent(XRNode node, Transform nodeTransform);

		[Token(Token = "0x2000652")]
		public delegate void NodeCreationEvent(TBNode node, Transform nodeTransform);

		[Token(Token = "0x2000653")]
		public delegate void NodeTrackingEvent(TBNode node, bool isTracking);

		[Token(Token = "0x40022F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<TBNode, TBTrackingNodeBase> _nodes;

		[Token(Token = "0x40022F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Dictionary<VRPlatform, ITBSDKTracking> _trackingSDKs;

		[Token(Token = "0x40022F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ITBSDKTracking _activeSDK;

		[Token(Token = "0x40022F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Bounds _activeBounds;

		[Token(Token = "0x40022F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C9A8C", Offset = "0x5C9A8C")]
		public static TrackingEvent OnNodeConnected;

		[Token(Token = "0x40022F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static NodeCreationEvent OnNodeCreated;

		[Token(Token = "0x40022F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static NodeTrackingEvent OnNodeTrackingChanged;

		[Token(Token = "0x40022F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static NodeTrackingEvent OnNodeWithinBoundsChanged;

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0x217438C", Offset = "0x217438C", VA = "0x217438C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D1A74", Offset = "0x5D1A74")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0x217440C", Offset = "0x217440C", VA = "0x217440C")]
		public static void Initialize(VRPlatform platform)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0x2174818", Offset = "0x2174818", VA = "0x2174818")]
		public static void AddTrackedDeviceForNode(TBNode node)
		{
		}

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0x21749F4", Offset = "0x21749F4", VA = "0x21749F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D1A84", Offset = "0x5D1A84")]
		public static void AddTrackedDeviceForNode(XRNode node)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0x2174A38", Offset = "0x2174A38", VA = "0x2174A38")]
		public static TBTrackingNodeBase GetNode(TBNode node)
		{
			return null;
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0x2173CA8", Offset = "0x2173CA8", VA = "0x2173CA8")]
		public static Transform GetTransformForNode(TBNode node)
		{
			return null;
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0x2174AE8", Offset = "0x2174AE8", VA = "0x2174AE8")]
		public static void UpdateNodeState(TBTrackingNodeBase node)
		{
		}

		[Token(Token = "0x6001EDE")]
		[Address(RVA = "0x2174BD8", Offset = "0x2174BD8", VA = "0x2174BD8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D1A94", Offset = "0x5D1A94")]
		public static Transform GetTransformForNode(XRNode node)
		{
			return null;
		}

		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x2174BDC", Offset = "0x2174BDC", VA = "0x2174BDC")]
		public static void SendNodeConnectedEvents(TBNode node, Transform t)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x217558C", Offset = "0x217558C", VA = "0x217558C")]
		public static bool HasPositionalTrackingForNode(TBNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x21756C4", Offset = "0x21756C4", VA = "0x21756C4")]
		public static bool HasPlayspaceBounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x217580C", Offset = "0x217580C", VA = "0x217580C")]
		public static bool IsPointWithinPlayspaceBounds(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x21758F4", Offset = "0x21758F4", VA = "0x21758F4")]
		private static void RefreshBounds()
		{
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x2174714", Offset = "0x2174714", VA = "0x2174714")]
		private static ITBSDKTracking GetTrackingSDK(VRPlatform platform)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003ED")]
	public enum TBNode
	{
		[Token(Token = "0x40022FA")]
		None = 0,
		[Token(Token = "0x40022FB")]
		Head = 3,
		[Token(Token = "0x40022FC")]
		HardwareTracker = 8,
		[Token(Token = "0x40022FD")]
		TrackingVolume = 7,
		[Token(Token = "0x40022FE")]
		Controller3DOF = 6,
		[Token(Token = "0x40022FF")]
		Gamepad = 10,
		[Token(Token = "0x4002300")]
		LeftHand = 4,
		[Token(Token = "0x4002301")]
		RightHand = 5
	}
	[Token(Token = "0x20003EE")]
	public class TBTrackingNode3DOF : TBTrackingNodeBase
	{
		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x217614C", Offset = "0x217614C", VA = "0x217614C", Slot = "10")]
		protected override void OnUpdatePoses()
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x21762D8", Offset = "0x21762D8", VA = "0x21762D8")]
		public TBTrackingNode3DOF()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class TBTrackingNodeBase : MonoBehaviour
	{
		[Token(Token = "0x4002302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5C9AC0", Offset = "0x5C9AC0")]
		public new Transform transform;

		[Token(Token = "0x4002303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool _subscribedToUpdate;

		[Token(Token = "0x4002304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected TBNode _node;

		[Token(Token = "0x4002305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected XRNode _xrNode;

		[Token(Token = "0x4002306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected bool _overridePosition;

		[Token(Token = "0x4002307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Transform _positionTarget;

		[Token(Token = "0x4002308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected bool _isTracking;

		[Token(Token = "0x4002309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		protected bool _isWithinBounds;

		[Token(Token = "0x400230A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool tracking;

		[Token(Token = "0x400230B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		private bool withinBounds;

		[Token(Token = "0x17000224")]
		public bool IsTracking
		{
			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x217695C", Offset = "0x217695C", VA = "0x217695C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000225")]
		public bool IsWithinBounds
		{
			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x2176964", Offset = "0x2176964", VA = "0x2176964")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x21762F8", Offset = "0x21762F8", VA = "0x21762F8", Slot = "4")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x2176574", Offset = "0x2176574", VA = "0x2176574", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x217657C", Offset = "0x217657C", VA = "0x217657C", Slot = "6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5D1AA4", Offset = "0x5D1AA4")]
		public virtual void TrackNode(XRNode node)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x217658C", Offset = "0x217658C", VA = "0x217658C", Slot = "7")]
		public virtual void TrackNode(TBNode node)
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x21766BC", Offset = "0x21766BC", VA = "0x21766BC", Slot = "8")]
		public virtual void TogglePositionOverride(bool on, [Optional] Transform targetTransform)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x217679C", Offset = "0x217679C", VA = "0x217679C", Slot = "9")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x21767C8", Offset = "0x21767C8", VA = "0x21767C8", Slot = "10")]
		protected virtual void OnUpdatePoses()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x2176300", Offset = "0x2176300", VA = "0x2176300")]
		protected void SubscribeToUpdate(bool on)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x2176954", Offset = "0x2176954", VA = "0x2176954")]
		public TBNode GetNodeType()
		{
			return default(TBNode);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x217696C", Offset = "0x217696C", VA = "0x217696C")]
		public void SetWithinBounds(bool isWithinBounds)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x2176A04", Offset = "0x2176A04", VA = "0x2176A04")]
		public void SetTracking(bool isTracking)
		{
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x21762E8", Offset = "0x21762E8", VA = "0x21762E8")]
		public TBTrackingNodeBase()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public static class TBSettings
	{
		[Serializable]
		[Token(Token = "0x2000654")]
		public struct TBDisplaySettings
		{
			[Token(Token = "0x4003009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBTimestep targetTimestep;

			[Token(Token = "0x400300A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TBTimestep maxTimestep;

			[Token(Token = "0x400300B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float renderscale;

			[Token(Token = "0x400300C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public TBQualityLevel qualityLevel;

			[Token(Token = "0x400300D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool mirrorDisplay;

			[Token(Token = "0x400300E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public OpaqueSortMode opaqueSortMode;

			[Token(Token = "0x400300F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DepthTextureMode depthTextureMode;

			[Token(Token = "0x4003010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public TBRefreshRate refreshRate;

			[Token(Token = "0x4003011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TBQualitySettings qualitySettings;

			[Token(Token = "0x4003012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public bool initialized;
		}

		[Serializable]
		[Token(Token = "0x2000655")]
		public struct TBCameraSettings
		{
			[Token(Token = "0x4003013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBTrackingOrigin trackingOrigin;

			[Token(Token = "0x4003014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public KeyCode calibrationHotkey;

			[Token(Token = "0x4003015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float uncalibratedFloorHeight;

			[Token(Token = "0x4003016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool disablePositionTracking;
		}

		[Serializable]
		[Token(Token = "0x2000656")]
		public struct TBControlSettings
		{
			[Token(Token = "0x4003017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool supportsHandControllers;

			[Token(Token = "0x4003018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool supports3DOFControllers;

			[Token(Token = "0x4003019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool emulate3DOFArmModel;

			[Token(Token = "0x400301A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TBHardwareHandedness handedness3DOF;

			[Token(Token = "0x400301B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool supportsClickRemote;

			[Token(Token = "0x400301C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool supportsGamepad;

			[Token(Token = "0x400301D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public bool useInputEvents;

			[Token(Token = "0x400301E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public TBInput.ControlType defaultEditorControlType;
		}

		[Serializable]
		[Token(Token = "0x2000657")]
		public struct TBQualitySettings
		{
			[Token(Token = "0x400301F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBTextureSize textureQuality;

			[Token(Token = "0x4003020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public TBAntialiasingLevel antialiasingLevel;

			[Token(Token = "0x4003021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AnisotropicFiltering anisotropicFiltering;

			[Token(Token = "0x4003022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool realtimeReflectionProbes;

			[Token(Token = "0x4003023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int pixelLighCount;

			[Token(Token = "0x4003024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool softParticles;

			[Token(Token = "0x4003025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ShadowQuality shadowQuality;

			[Token(Token = "0x4003026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ShadowResolution shadowResolution;

			[Token(Token = "0x4003027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShadowProjection shadowProjection;

			[Token(Token = "0x4003028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int shadowDistance;

			[Token(Token = "0x4003029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int shadowNearPlaneOffset;

			[Token(Token = "0x400302A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float LODbias;

			[Token(Token = "0x400302B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int maximumLODLevel;

			[Token(Token = "0x400302C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public BlendWeights blendWeights;

			[Token(Token = "0x400302D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool enableQualitySettingsOverride;
		}

		[Serializable]
		[Token(Token = "0x2000658")]
		public enum TBQualityLevel
		{
			[Token(Token = "0x400302F")]
			VeryLow,
			[Token(Token = "0x4003030")]
			Low,
			[Token(Token = "0x4003031")]
			Medium,
			[Token(Token = "0x4003032")]
			High,
			[Token(Token = "0x4003033")]
			VeryHigh,
			[Token(Token = "0x4003034")]
			Ultra
		}

		[Serializable]
		[Token(Token = "0x2000659")]
		public enum TBTimestep
		{
			[Token(Token = "0x4003036")]
			Locked,
			[Token(Token = "0x4003037")]
			Half,
			[Token(Token = "0x4003038")]
			KeepUnitySetting
		}

		[Serializable]
		[Token(Token = "0x200065A")]
		public enum TBTrackingOrigin
		{
			[Token(Token = "0x400303A")]
			Eye,
			[Token(Token = "0x400303B")]
			Floor
		}

		[Serializable]
		[Token(Token = "0x200065B")]
		public enum TBRefreshRate
		{
			[Token(Token = "0x400303D")]
			FPS_DEFAULT = -1,
			[Token(Token = "0x400303E")]
			FPS_60 = 60,
			[Token(Token = "0x400303F")]
			FPS_72 = 72,
			[Token(Token = "0x4003040")]
			FPS_75 = 75,
			[Token(Token = "0x4003041")]
			FPS_80 = 80,
			[Token(Token = "0x4003042")]
			FPS_90 = 90,
			[Token(Token = "0x4003043")]
			FPS_120 = 120
		}

		[Serializable]
		[Token(Token = "0x200065C")]
		public enum TBGoogleRefreshRate
		{
			[Token(Token = "0x4003045")]
			FPS_60 = 60,
			[Token(Token = "0x4003046")]
			FPS_90 = 90
		}

		[Serializable]
		[Token(Token = "0x200065D")]
		public enum TBPSVRRefreshRate
		{
			[Token(Token = "0x4003048")]
			FPS_60 = 60,
			[Token(Token = "0x4003049")]
			FPS_90 = 90,
			[Token(Token = "0x400304A")]
			FPS_120 = 120
		}

		[Serializable]
		[Token(Token = "0x200065E")]
		public enum TBHardwareHandedness
		{
			[Token(Token = "0x400304C")]
			Left,
			[Token(Token = "0x400304D")]
			Right
		}

		[Token(Token = "0x200065F")]
		public enum TBAntialiasingLevel
		{
			[Token(Token = "0x400304F")]
			Off = 0,
			[Token(Token = "0x4003050")]
			_2x = 2,
			[Token(Token = "0x4003051")]
			_4x = 4,
			[Token(Token = "0x4003052")]
			_8x = 8
		}

		[Token(Token = "0x2000660")]
		public enum TBTextureSize
		{
			[Token(Token = "0x4003054")]
			FullRes,
			[Token(Token = "0x4003055")]
			HalfRes,
			[Token(Token = "0x4003056")]
			QuaterRes,
			[Token(Token = "0x4003057")]
			EighthRes
		}

		[Token(Token = "0x2000661")]
		public class VRDeviceNames
		{
			[Token(Token = "0x4003058")]
			public const string Oculus = "Oculus";

			[Token(Token = "0x4003059")]
			public const string SteamVR = "OpenVR";

			[Token(Token = "0x400305A")]
			public const string Daydream = "daydream";

			[Token(Token = "0x400305B")]
			public const string Cardboard = "cardboard";

			[Token(Token = "0x400305C")]
			public const string Unknown = "Unknown";

			[Token(Token = "0x400305D")]
			public const string PlayStationVR = "PlayStationVR";

			[Token(Token = "0x400305E")]
			public const string WindowsMR = "WindowsMR";

			[Token(Token = "0x400305F")]
			public const string None = "";

			[Token(Token = "0x6002A8F")]
			[Address(RVA = "0x2173590", Offset = "0x2173590", VA = "0x2173590")]
			public VRDeviceNames()
			{
			}
		}

		[Token(Token = "0x400230C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string settingsFolder;

		[Token(Token = "0x400230D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly string controlSettingsFileName;

		[Token(Token = "0x400230E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string coreSettingsFilename;

		[Token(Token = "0x400230F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly string cameraSettingsFilename;

		[Token(Token = "0x4002310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string displaySettingsFilename;

		[Token(Token = "0x4002311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static TBControlSettings _controlSettings;

		[Token(Token = "0x4002312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static TBDisplaySettings _displaySettings;

		[Token(Token = "0x4002313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static TBCameraSettings _cameraSettings;

		[Token(Token = "0x4002314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private static TBSettingsBase _settingsBase;

		[Token(Token = "0x4002315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private static bool _loadedSettings;

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x24D0444", Offset = "0x24D0444", VA = "0x24D0444")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x24DE2B0", Offset = "0x24DE2B0", VA = "0x24DE2B0")]
		public static void Initialize(VRPlatform platform)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x24DDA84", Offset = "0x24DDA84", VA = "0x24DDA84")]
		private static void LoadSettings(VRPlatform platform)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x24DE43C", Offset = "0x24DE43C", VA = "0x24DE43C")]
		private static void SetTimestep()
		{
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x24BCC88", Offset = "0x24BCC88", VA = "0x24BCC88")]
		public static TBControlSettings GetControlSettings()
		{
			return default(TBControlSettings);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x24CAA1C", Offset = "0x24CAA1C", VA = "0x24CAA1C")]
		public static TBCameraSettings GetCameraSettings()
		{
			return default(TBCameraSettings);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x24CAAB4", Offset = "0x24CAAB4", VA = "0x24CAAB4")]
		public static TBDisplaySettings GetDisplaySettings()
		{
			return default(TBDisplaySettings);
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x24DE71C", Offset = "0x24DE71C", VA = "0x24DE71C")]
		public static TBQualityLevel GetCurrentQualityLevel()
		{
			return default(TBQualityLevel);
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x24DE7A8", Offset = "0x24DE7A8", VA = "0x24DE7A8")]
		public static float GetConfiguredRenderscale()
		{
			return default(float);
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x24DE66C", Offset = "0x24DE66C", VA = "0x24DE66C")]
		public static float GetRefreshRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x24CFA3C", Offset = "0x24CFA3C", VA = "0x24CFA3C")]
		public static VRHeadset GetActiveHeadset()
		{
			return default(VRHeadset);
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x24CFBF0", Offset = "0x24CFBF0", VA = "0x24CFBF0")]
		public static VRFamily GetHeadsetFamily()
		{
			return default(VRFamily);
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x24DE858", Offset = "0x24DE858", VA = "0x24DE858")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D1AB4", Offset = "0x5D1AB4")]
		private static void PrintControlSettings()
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x24DE36C", Offset = "0x24DE36C", VA = "0x24DE36C")]
		private static void ApplyQualitySettingsOverrides(TBQualitySettings settings)
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x24DEA5C", Offset = "0x24DEA5C", VA = "0x24DEA5C")]
		public static void SetRenderscale(float newScale)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x24DEB14", Offset = "0x24DEB14", VA = "0x24DEB14")]
		public static void SetQualityLevel(TBQualityLevel level)
		{
		}
	}
	[Token(Token = "0x20003F1")]
	public enum VRHeadset
	{
		[Token(Token = "0x4002317")]
		None = 0,
		[Token(Token = "0x4002318")]
		OculusRift = 1,
		[Token(Token = "0x4002319")]
		OculusRiftS = 2,
		[Token(Token = "0x400231A")]
		GearVR = 200,
		[Token(Token = "0x400231B")]
		OculusGo = 201,
		[Token(Token = "0x400231C")]
		OculusQuest = 202,
		[Token(Token = "0x400231D")]
		MiVRStandalone = 203,
		[Token(Token = "0x400231E")]
		HTCVive = 400,
		[Token(Token = "0x400231F")]
		WindowsMR = 600,
		[Token(Token = "0x4002320")]
		Daydream = 800,
		[Token(Token = "0x4002321")]
		MirageSolo = 801,
		[Token(Token = "0x4002322")]
		PSVR = 1000
	}
	[Token(Token = "0x20003F2")]
	public enum VRFamily
	{
		[Token(Token = "0x4002324")]
		Unknown,
		[Token(Token = "0x4002325")]
		Oculus,
		[Token(Token = "0x4002326")]
		HTC,
		[Token(Token = "0x4002327")]
		Valve,
		[Token(Token = "0x4002328")]
		Sony,
		[Token(Token = "0x4002329")]
		Windows,
		[Token(Token = "0x400232A")]
		Google
	}
	[Token(Token = "0x20003F3")]
	public enum VRController
	{
		[Token(Token = "0x400232C")]
		None = 0,
		[Token(Token = "0x400232D")]
		OculusRemote = 1,
		[Token(Token = "0x400232E")]
		OculusTouchV1 = 2,
		[Token(Token = "0x400232F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C9AD0", Offset = "0x5C9AD0")]
		OculusTouch = 2,
		[Token(Token = "0x4002330")]
		XboxOneGamepad = 3,
		[Token(Token = "0x4002331")]
		GearVRController = 4,
		[Token(Token = "0x4002332")]
		OculusGoController = 5,
		[Token(Token = "0x4002333")]
		OculusTouchV2 = 6,
		[Token(Token = "0x4002334")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5C9AE0", Offset = "0x5C9AE0")]
		OculusQuestController = 6,
		[Token(Token = "0x4002335")]
		GearVRTouchpad = 7,
		[Token(Token = "0x4002336")]
		ViveController = 200,
		[Token(Token = "0x4002337")]
		XInputGamepad = 201,
		[Token(Token = "0x4002338")]
		ValveIndexController = 202,
		[Token(Token = "0x4002339")]
		WMRController = 400,
		[Token(Token = "0x400233A")]
		Daydream3DOF = 600,
		[Token(Token = "0x400233B")]
		Daydream6DOF = 601,
		[Token(Token = "0x400233C")]
		DualShock4 = 800,
		[Token(Token = "0x400233D")]
		PlayStationMove = 801,
		[Token(Token = "0x400233E")]
		PlayStationAim = 802
	}
	[Token(Token = "0x20003F4")]
	public class TBCore : MonoBehaviour
	{
		[Token(Token = "0x2000662")]
		public delegate void TBCoreEvent();

		[Token(Token = "0x2000663")]
		public static class Events
		{
			[Token(Token = "0x2000703")]
			public delegate void TBCoreSystemEvent(bool on);

			[Token(Token = "0x4003060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TBCoreSystemEvent OnHMDConnected;

			[Token(Token = "0x4003061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static TBCoreSystemEvent OnSystemMenu;

			[Token(Token = "0x4003062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static TBCoreSystemEvent OnHMDMounted;

			[Token(Token = "0x4003063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static TBCoreSystemEvent OnVRModeEnabled;

			[Token(Token = "0x4003064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TBCoreEvent OnTrackingReset;

			[Token(Token = "0x4003065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static TBCoreEvent OnSystemSuspend;

			[Token(Token = "0x4003066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static TBCoreEvent OnSystemResume;
		}

		[Token(Token = "0x2000664")]
		public static class Internal
		{
			[Token(Token = "0x6002A94")]
			[Address(RVA = "0x24CE9E0", Offset = "0x24CE9E0", VA = "0x24CE9E0")]
			public static void InitializeStartup()
			{
			}

			[Token(Token = "0x6002A95")]
			[Address(RVA = "0x24D14D4", Offset = "0x24D14D4", VA = "0x24D14D4")]
			public static void ResetTracking()
			{
			}

			[Token(Token = "0x6002A96")]
			[Address(RVA = "0x24D15AC", Offset = "0x24D15AC", VA = "0x24D15AC")]
			public static void SetHMDConnected(bool on)
			{
			}

			[Token(Token = "0x6002A97")]
			[Address(RVA = "0x24CFED4", Offset = "0x24CFED4", VA = "0x24CFED4")]
			public static void SetSystemMenu(bool on)
			{
			}

			[Token(Token = "0x6002A98")]
			[Address(RVA = "0x24D1620", Offset = "0x24D1620", VA = "0x24D1620")]
			public static void SetHMDMounted(bool on)
			{
			}

			[Token(Token = "0x6002A99")]
			[Address(RVA = "0x24CF1EC", Offset = "0x24CF1EC", VA = "0x24CF1EC")]
			public static void SetSystemSuspend()
			{
			}

			[Token(Token = "0x6002A9A")]
			[Address(RVA = "0x24CF258", Offset = "0x24CF258", VA = "0x24CF258")]
			public static void SetSystemResume()
			{
			}

			[Token(Token = "0x6002A9B")]
			[Address(RVA = "0x24CE5E8", Offset = "0x24CE5E8", VA = "0x24CE5E8")]
			public static bool IsValidSetup()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C331C", Offset = "0x5C331C")]
		private sealed class <WaitForHMDConnection>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x1700039D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002A9F")]
				[Address(RVA = "0x24D0304", Offset = "0x24D0304", VA = "0x24D0304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700039E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA1")]
				[Address(RVA = "0x24D0394", Offset = "0x24D0394", VA = "0x24D0394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002A9C")]
			[Address(RVA = "0x24CF98C", Offset = "0x24CF98C", VA = "0x24CF98C")]
			[DebuggerHidden]
			public <WaitForHMDConnection>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002A9D")]
			[Address(RVA = "0x24D0194", Offset = "0x24D0194", VA = "0x24D0194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002A9E")]
			[Address(RVA = "0x24D0198", Offset = "0x24D0198", VA = "0x24D0198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA0")]
			[Address(RVA = "0x24D030C", Offset = "0x24D030C", VA = "0x24D030C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C332C", Offset = "0x5C332C")]
		private sealed class <OnApplicationFocus>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400306A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400306B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool focus;

			[Token(Token = "0x1700039F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AA5")]
				[Address(RVA = "0x24CFF48", Offset = "0x24CFF48", VA = "0x24CFF48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AA7")]
				[Address(RVA = "0x24CFFD8", Offset = "0x24CFFD8", VA = "0x24CFFD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA2")]
			[Address(RVA = "0x24CFE34", Offset = "0x24CFE34", VA = "0x24CFE34")]
			[DebuggerHidden]
			public <OnApplicationFocus>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6002AA3")]
			[Address(RVA = "0x24CFE80", Offset = "0x24CFE80", VA = "0x24CFE80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AA4")]
			[Address(RVA = "0x24CFE84", Offset = "0x24CFE84", VA = "0x24CFE84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AA6")]
			[Address(RVA = "0x24CFF50", Offset = "0x24CFF50", VA = "0x24CFF50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C333C", Offset = "0x5C333C")]
		private sealed class <WaitForCameraRig>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400306C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400306D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400306E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TBCore <>4__this;

			[Token(Token = "0x170003A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AAB")]
				[Address(RVA = "0x24D00FC", Offset = "0x24D00FC", VA = "0x24D00FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AAD")]
				[Address(RVA = "0x24D018C", Offset = "0x24D018C", VA = "0x24D018C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AA8")]
			[Address(RVA = "0x24CFE54", Offset = "0x24CFE54", VA = "0x24CFE54")]
			[DebuggerHidden]
			public <WaitForCameraRig>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x6002AA9")]
			[Address(RVA = "0x24CFFE0", Offset = "0x24CFFE0", VA = "0x24CFFE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AAA")]
			[Address(RVA = "0x24CFFE4", Offset = "0x24CFFE4", VA = "0x24CFFE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AAC")]
			[Address(RVA = "0x24D0104", Offset = "0x24D0104", VA = "0x24D0104", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400233F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static TBCore instance;

		[Token(Token = "0x4002340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static VRPlatform _activePlatform;

		[Token(Token = "0x4002341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _initialized;

		[Token(Token = "0x4002342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static TBCoreEvent OnNewScene;

		[Token(Token = "0x4002343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static TBCoreEvent OnUpdate;

		[Token(Token = "0x4002344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static TBCoreEvent OnFixedUpdate;

		[Token(Token = "0x4002345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static TBCoreEvent OnLateUpdate;

		[Token(Token = "0x4002346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static TBCoreEvent OnBeforeRender;

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x24CDEA0", Offset = "0x24CDEA0", VA = "0x24CDEA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x24CEC20", Offset = "0x24CEC20", VA = "0x24CEC20")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x24CECB0", Offset = "0x24CECB0", VA = "0x24CECB0")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x24CE518", Offset = "0x24CE518", VA = "0x24CE518")]
		private void InitializePerScene()
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x24CEE4C", Offset = "0x24CEE4C", VA = "0x24CEE4C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x24CEF30", Offset = "0x24CEF30", VA = "0x24CEF30")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x24CF014", Offset = "0x24CF014", VA = "0x24CF014")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0x24CF0F8", Offset = "0x24CF0F8", VA = "0x24CF0F8")]
		private void BeforeRender()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0x24CF1DC", Offset = "0x24CF1DC", VA = "0x24CF1DC")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0x24CE5F0", Offset = "0x24CE5F0", VA = "0x24CE5F0")]
		private static void SetActivePlatform()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0x24CF2C4", Offset = "0x24CF2C4", VA = "0x24CF2C4")]
		private void ToggleVRMode(bool on)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0x24CF868", Offset = "0x24CF868", VA = "0x24CF868")]
		private void StartCheckingForHMD()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0x24CED40", Offset = "0x24CED40", VA = "0x24CED40")]
		private void InitializeCameraAndTracking(TBCameraRig rig)
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0x24CF88C", Offset = "0x24CF88C", VA = "0x24CF88C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1AE8", Offset = "0x5D1AE8")]
		private IEnumerator WaitForHMDConnection()
		{
			return null;
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0x24CF9AC", Offset = "0x24CF9AC", VA = "0x24CF9AC")]
		public void ForceInit()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0x24BC888", Offset = "0x24BC888", VA = "0x24BC888")]
		public static VRPlatform GetActivePlatform()
		{
			return default(VRPlatform);
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0x24BCA68", Offset = "0x24BCA68", VA = "0x24BCA68")]
		public static VRHeadset GetActiveHeadset()
		{
			return default(VRHeadset);
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0x24CFB78", Offset = "0x24CFB78", VA = "0x24CFB78")]
		public static VRFamily GetActiveHeadsetFamily()
		{
			return default(VRFamily);
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0x24BCC80", Offset = "0x24BCC80", VA = "0x24BCC80")]
		public static bool UsingEditorMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0x24CC308", Offset = "0x24CC308", VA = "0x24CC308")]
		public static bool UsingVRMode()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0x24CFD2C", Offset = "0x24CFD2C", VA = "0x24CFD2C")]
		public static bool IsNativeIntegration()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0x24CFDA8", Offset = "0x24CFDA8", VA = "0x24CFDA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1B60", Offset = "0x5D1B60")]
		private IEnumerator OnApplicationFocus(bool focus)
		{
			return null;
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0x24CF900", Offset = "0x24CF900", VA = "0x24CF900")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1BD8", Offset = "0x5D1BD8")]
		private IEnumerator WaitForCameraRig()
		{
			return null;
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0x24CFE74", Offset = "0x24CFE74", VA = "0x24CFE74")]
		public TBCore()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	public enum VRPlatform
	{
		[Token(Token = "0x4002348")]
		None = 0,
		[Token(Token = "0x4002349")]
		OculusPC = 1,
		[Token(Token = "0x400234A")]
		SteamVR = 2,
		[Token(Token = "0x400234B")]
		OculusMobile = 3,
		[Token(Token = "0x400234C")]
		PlayStationVR = 4,
		[Token(Token = "0x400234D")]
		Daydream = 5,
		[Token(Token = "0x400234E")]
		WindowsMR = 7
	}
	[Token(Token = "0x20003F6")]
	public static class TBDataManager
	{
		[Token(Token = "0x2000668")]
		public enum PathType
		{
			[Token(Token = "0x4003070")]
			PersistentDataPath,
			[Token(Token = "0x4003071")]
			ProjectFolder,
			[Token(Token = "0x4003072")]
			ResourcesFolder
		}

		[Serializable]
		[Token(Token = "0x2000669")]
		public class Wrapper<T>
		{
			[Token(Token = "0x4003073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] Items;

			[Token(Token = "0x6002AAE")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x400234F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string persistentDataPath;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0x24D16CC", Offset = "0x24D16CC", VA = "0x24D16CC")]
		public static void SerializeObjectToFile(object obj, string fileName, PathType pathType = PathType.PersistentDataPath)
		{
		}

		[Token(Token = "0x6001F20")]
		public static T DeserializeFromFile<T>(string fileName, PathType pathType = PathType.PersistentDataPath)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0x24D1A20", Offset = "0x24D1A20", VA = "0x24D1A20")]
		public static void SaveStringToStorageDefault(string serializedString, string pathAndFileName)
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0x24D1D20", Offset = "0x24D1D20", VA = "0x24D1D20")]
		public static string LoadStringFromStorageDefault(string pathAndFileName)
		{
			return null;
		}

		[Token(Token = "0x6001F23")]
		public static T DeserializeString<T>(string serializedString, string fileName)
		{
			return (T)null;
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0x24D1810", Offset = "0x24D1810", VA = "0x24D1810")]
		public static string SerializeString(object obj)
		{
			return null;
		}

		[Token(Token = "0x6001F25")]
		public static T GetNullOrEmptyOfType<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0x24D1978", Offset = "0x24D1978", VA = "0x24D1978")]
		public static string GetPathForType(PathType pathtype)
		{
			return null;
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0x24D202C", Offset = "0x24D202C", VA = "0x24D202C")]
		public static bool HasDataFile(string fileName, PathType pathType = PathType.PersistentDataPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0x24D20CC", Offset = "0x24D20CC", VA = "0x24D20CC")]
		public static void DeleteDataFile(string fileName, PathType pathType)
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0x24D21B4", Offset = "0x24D21B4", VA = "0x24D21B4")]
		public static string ReadStringFromFile(string fileName, PathType pathType)
		{
			return null;
		}

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0x24D25E0", Offset = "0x24D25E0", VA = "0x24D25E0")]
		public static void WriteStringToFile(string text, string fileName, PathType pathType = PathType.PersistentDataPath)
		{
		}

		[Token(Token = "0x6001F2B")]
		public static T[] FromJsonWrapper<T>(Wrapper<T> wrapper)
		{
			return null;
		}

		[Token(Token = "0x6001F2C")]
		public static Wrapper<T> ToJsonWrapper<T>(T[] array)
		{
			return null;
		}
	}
	[Token(Token = "0x20003F7")]
	public static class TBDebug
	{
		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0x24D29F4", Offset = "0x24D29F4", VA = "0x24D29F4")]
		public static void DrawBounds(Bounds b)
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0x24D2F4C", Offset = "0x24D2F4C", VA = "0x24D2F4C")]
		public static void DrawBounds(Bounds b, Color c)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0x24D2FB4", Offset = "0x24D2FB4", VA = "0x24D2FB4")]
		public static void DrawBounds(Bounds b, float duration)
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0x24D2A70", Offset = "0x24D2A70", VA = "0x24D2A70")]
		public static void DrawBounds(Bounds bounds, Color color, float duration)
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class TBWaitForPlatform : MonoBehaviour
	{
		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C334C", Offset = "0x5C334C")]
		private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x170003A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AB2")]
				[Address(RVA = "0x217701C", Offset = "0x217701C", VA = "0x217701C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AB4")]
				[Address(RVA = "0x21770AC", Offset = "0x21770AC", VA = "0x21770AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AAF")]
			[Address(RVA = "0x2176F38", Offset = "0x2176F38", VA = "0x2176F38")]
			[DebuggerHidden]
			public <Start>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002AB0")]
			[Address(RVA = "0x2176F60", Offset = "0x2176F60", VA = "0x2176F60", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB1")]
			[Address(RVA = "0x2176F64", Offset = "0x2176F64", VA = "0x2176F64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB3")]
			[Address(RVA = "0x2177024", Offset = "0x2177024", VA = "0x2177024", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool overrideNextScene;

		[Token(Token = "0x4002351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string sceneName;

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0x2176EC4", Offset = "0x2176EC4", VA = "0x2176EC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1C50", Offset = "0x5D1C50")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0x2176F58", Offset = "0x2176F58", VA = "0x2176F58")]
		public TBWaitForPlatform()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class TBServiceManager : MonoBehaviour
	{
		[Token(Token = "0x200066B")]
		public static class Events
		{
			[Token(Token = "0x2000704")]
			public delegate void TBAchievementEvent(string token);

			[Token(Token = "0x2000705")]
			public delegate void TBEntitlementCheckEvent(bool pass);

			[Token(Token = "0x4003076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static TBEntitlementCheckEvent OnEntitlementCheckComplete;

			[Token(Token = "0x4003077")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static TBAchievementEvent OnAchievementUnlocked;
		}

		[Token(Token = "0x4002352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, bool> _achievementList;

		[Token(Token = "0x4002353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static TBServiceBase _activeService;

		[Token(Token = "0x4002354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VRService _service;

		[Token(Token = "0x4002355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static bool _initialized;

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0x24DBEB4", Offset = "0x24DBEB4", VA = "0x24DBEB4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0x24DBF68", Offset = "0x24DBF68", VA = "0x24DBF68")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0x24DC0E4", Offset = "0x24DC0E4", VA = "0x24DC0E4")]
		public static void OnEntitlementCheckComplete()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0x24DC670", Offset = "0x24DC670", VA = "0x24DC670")]
		public static bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0x24DC764", Offset = "0x24DC764", VA = "0x24DC764")]
		public static string GetUsername()
		{
			return null;
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0x24DC8E4", Offset = "0x24DC8E4", VA = "0x24DC8E4")]
		public static bool IsAchievementUnlocked(string token)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0x24DCA10", Offset = "0x24DCA10", VA = "0x24DCA10")]
		public static void UnlockAchievement(string token)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0x24DD394", Offset = "0x24DD394", VA = "0x24DD394")]
		public static void UpdateAchievementList(string token, bool value)
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0x24DD550", Offset = "0x24DD550", VA = "0x24DD550")]
		public static int GetNumAchievements()
		{
			return default(int);
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0x24DD688", Offset = "0x24DD688", VA = "0x24DD688")]
		public static int GetNumAchievements(bool unlocked)
		{
			return default(int);
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0x24DD8E0", Offset = "0x24DD8E0", VA = "0x24DD8E0")]
		public static void SetAchievementList(Dictionary<string, bool> list)
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0x24C45B8", Offset = "0x24C45B8", VA = "0x24C45B8")]
		public static VRService GetActiveService()
		{
			return default(VRService);
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0x24DD970", Offset = "0x24DD970", VA = "0x24DD970")]
		public TBServiceManager()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public enum VRService
	{
		[Token(Token = "0x4002357")]
		None,
		[Token(Token = "0x4002358")]
		Steam,
		[Token(Token = "0x4002359")]
		Oculus,
		[Token(Token = "0x400235A")]
		PSN,
		[Token(Token = "0x400235B")]
		XboxLive
	}
}
namespace TButt.Services
{
	[Token(Token = "0x20003FB")]
	public class TBOculusService : TBServiceBase
	{
		[Token(Token = "0x400235C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string serviceFilename;

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0x24C40FC", Offset = "0x24C40FC", VA = "0x24C40FC")]
		public TBOculusService()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public struct OculusServiceIDs
	{
		[Token(Token = "0x400235D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string oculusPC_ID;

		[Token(Token = "0x400235E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public string oculusMobile_ID;

		[Token(Token = "0x400235F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string oculusQuest_ID;
	}
	[Token(Token = "0x20003FD")]
	public class TBSteamService : TBServiceBase
	{
		[Token(Token = "0x4002360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string serviceFilename;

		[Token(Token = "0x4002361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static int gameIDInt;

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0x24C4764", Offset = "0x24C4764", VA = "0x24C4764")]
		public TBSteamService()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public class TBServiceBase : MonoBehaviour
	{
		[Token(Token = "0x4002362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected string _username;

		[Token(Token = "0x4002363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected bool _ready;

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0x24C41E0", Offset = "0x24C41E0", VA = "0x24C41E0", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0x24C4218", Offset = "0x24C4218", VA = "0x24C4218", Slot = "5")]
		protected virtual void CheckEntitlement()
		{
		}

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0x24C42A0", Offset = "0x24C42A0", VA = "0x24C42A0", Slot = "6")]
		protected virtual void PopulateUserData()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0x24C4328", Offset = "0x24C4328", VA = "0x24C4328")]
		protected void SetReady(bool on)
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0x24C4330", Offset = "0x24C4330", VA = "0x24C4330", Slot = "7")]
		protected virtual void EvalEntitlement(bool passed)
		{
		}

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x24C4644", Offset = "0x24C4644", VA = "0x24C4644", Slot = "8")]
		public virtual string GetUsername()
		{
			return null;
		}

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x24C464C", Offset = "0x24C464C", VA = "0x24C464C", Slot = "9")]
		public virtual bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x24C4654", Offset = "0x24C4654", VA = "0x24C4654", Slot = "10")]
		public virtual void UnlockAchievement(string token)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x24C46DC", Offset = "0x24C46DC", VA = "0x24C46DC", Slot = "11")]
		public virtual Dictionary<string, bool> GetAchievementDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x24C4100", Offset = "0x24C4100", VA = "0x24C4100")]
		public TBServiceBase()
		{
		}
	}
}
namespace TButt.Sample
{
	[Token(Token = "0x20003FF")]
	public class TBSampleAxis1D : MonoBehaviour
	{
		[Token(Token = "0x4002364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TBInput.Button _button;

		[Token(Token = "0x4002365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TBInput.Controller _controller;

		[Token(Token = "0x4002366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Image _image;

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x24BFFB4", Offset = "0x24BFFB4", VA = "0x24BFFB4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x24C001C", Offset = "0x24C001C", VA = "0x24C001C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x24C0238", Offset = "0x24C0238", VA = "0x24C0238")]
		public void SetButton(TBInput.Button button, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x24C04AC", Offset = "0x24C04AC", VA = "0x24C04AC")]
		public TBSampleAxis1D()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class TBSampleAxis2D : MonoBehaviour
	{
		[Token(Token = "0x4002367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TBInput.Button _button;

		[Token(Token = "0x4002368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TBInput.Controller _controller;

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x24C04B4", Offset = "0x24C04B4", VA = "0x24C04B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0x24C05CC", Offset = "0x24C05CC", VA = "0x24C05CC")]
		public void SetButton(TBInput.Button button, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0x24C0840", Offset = "0x24C0840", VA = "0x24C0840")]
		public TBSampleAxis2D()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class TBSampleControllerSelector : MonoBehaviour
	{
		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C335C", Offset = "0x5C335C")]
		private sealed class <ChooseController>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400307A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TBSampleControllerSelector <>4__this;

			[Token(Token = "0x170003A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AB8")]
				[Address(RVA = "0x24C12C4", Offset = "0x24C12C4", VA = "0x24C12C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ABA")]
				[Address(RVA = "0x24C1354", Offset = "0x24C1354", VA = "0x24C1354", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AB5")]
			[Address(RVA = "0x24C09A4", Offset = "0x24C09A4", VA = "0x24C09A4")]
			[DebuggerHidden]
			public <ChooseController>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002AB6")]
			[Address(RVA = "0x24C0F04", Offset = "0x24C0F04", VA = "0x24C0F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AB7")]
			[Address(RVA = "0x24C0F08", Offset = "0x24C0F08", VA = "0x24C0F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AB9")]
			[Address(RVA = "0x24C12CC", Offset = "0x24C12CC", VA = "0x24C12CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private TBInput.ControlType controlType;

		[Token(Token = "0x400236A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Image fillImage;

		[Token(Token = "0x400236B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private Image disabledImage;

		[Token(Token = "0x400236C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _selectionVal;

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0x24C0848", Offset = "0x24C0848", VA = "0x24C0848")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0x24C0918", Offset = "0x24C0918", VA = "0x24C0918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1CC8", Offset = "0x5D1CC8")]
		private IEnumerator ChooseController()
		{
			return null;
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0x24C09C4", Offset = "0x24C09C4", VA = "0x24C09C4")]
		private void AnimateHandControllers()
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0x24C0E4C", Offset = "0x24C0E4C", VA = "0x24C0E4C")]
		private void AnimateInput(ref float time, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x24C0D68", Offset = "0x24C0D68", VA = "0x24C0D68")]
		private void AddTime(ref float time)
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x24C0DC0", Offset = "0x24C0DC0", VA = "0x24C0DC0")]
		private void ResolveTime(ref float time)
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x24C0EFC", Offset = "0x24C0EFC", VA = "0x24C0EFC")]
		public TBSampleControllerSelector()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class TBSampleControllerSelectorContainer : MonoBehaviour
	{
		[Token(Token = "0x400236D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool _subscribed;

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x24C135C", Offset = "0x24C135C", VA = "0x24C135C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x24C1594", Offset = "0x24C1594", VA = "0x24C1594")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x24C1750", Offset = "0x24C1750", VA = "0x24C1750")]
		private void OnControlTypeChanged(TBInput.ControlType type)
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x24C1788", Offset = "0x24C1788", VA = "0x24C1788")]
		public TBSampleControllerSelectorContainer()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class TBSampleFingerDisplay : MonoBehaviour
	{
		[Token(Token = "0x400236E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TBInput.Controller controller;

		[Token(Token = "0x400236F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite closedFist;

		[Token(Token = "0x4002370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Sprite fingerGun;

		[Token(Token = "0x4002371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite pointing;

		[Token(Token = "0x4002372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Sprite open;

		[Token(Token = "0x4002373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite thumbDown;

		[Token(Token = "0x4002374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Sprite pinch;

		[Token(Token = "0x4002375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Sprite thumbsUp;

		[Token(Token = "0x4002376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9B20", Offset = "0x5C9B20")]
		public Image _icon;

		[Token(Token = "0x4002377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Image _thumb;

		[Token(Token = "0x4002378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Image _index;

		[Token(Token = "0x4002379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image _grip;

		[Token(Token = "0x400237A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _thumbWeight;

		[Token(Token = "0x400237B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float _indexWeight;

		[Token(Token = "0x400237C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float _gripWeight;

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x24C1790", Offset = "0x24C1790", VA = "0x24C1790")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x24C1F0C", Offset = "0x24C1F0C", VA = "0x24C1F0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x24C1E84", Offset = "0x24C1E84", VA = "0x24C1E84")]
		public void ToggleHandedness()
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x24C2284", Offset = "0x24C2284", VA = "0x24C2284")]
		private void ResolveIcon()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x24C2360", Offset = "0x24C2360", VA = "0x24C2360")]
		public TBSampleFingerDisplay()
		{
		}
	}
	[Token(Token = "0x2000404")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C250C", Offset = "0x5C250C")]
	public class TBSampleHandAnimation : MonoBehaviour
	{
		[Token(Token = "0x400237D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TBInput.Controller controller;

		[Token(Token = "0x400237E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator _animator;

		[Token(Token = "0x400237F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int _indexHash;

		[Token(Token = "0x4002380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int _thumbHash;

		[Token(Token = "0x4002381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int _gripHash;

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x24C2368", Offset = "0x24C2368", VA = "0x24C2368")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x24C2424", Offset = "0x24C2424", VA = "0x24C2424")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x24C258C", Offset = "0x24C258C", VA = "0x24C258C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x24C26F4", Offset = "0x24C26F4", VA = "0x24C26F4")]
		private void OnUpdate()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x24C2824", Offset = "0x24C2824", VA = "0x24C2824")]
		public TBSampleHandAnimation()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class TBSampleInputPanel : MonoBehaviour
	{
		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C336C", Offset = "0x5C336C")]
		private sealed class <Start>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400307B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400307C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400307D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TBSampleInputPanel <>4__this;

			[Token(Token = "0x400307E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private TBInput.ControlType <assocaitedControlType>5__2;

			[Token(Token = "0x170003A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ABE")]
				[Address(RVA = "0x24C37BC", Offset = "0x24C37BC", VA = "0x24C37BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC0")]
				[Address(RVA = "0x24C384C", Offset = "0x24C384C", VA = "0x24C384C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ABB")]
			[Address(RVA = "0x24C28C0", Offset = "0x24C28C0", VA = "0x24C28C0")]
			[DebuggerHidden]
			public <Start>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002ABC")]
			[Address(RVA = "0x24C3050", Offset = "0x24C3050", VA = "0x24C3050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ABD")]
			[Address(RVA = "0x24C3054", Offset = "0x24C3054", VA = "0x24C3054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ABF")]
			[Address(RVA = "0x24C37C4", Offset = "0x24C37C4", VA = "0x24C37C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public TBInput.Controller controller;

		[Token(Token = "0x4002383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<TBInput.Button> buttons;

		[Token(Token = "0x4002384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Text controllerLabel;

		[Token(Token = "0x4002385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TBSampleInputRow rowPrefab;

		[Token(Token = "0x4002386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TBSampleInputRow _activeRow;

		[Token(Token = "0x4002387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform _rect;

		[Token(Token = "0x4002388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _rowOffset;

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x24C2834", Offset = "0x24C2834", VA = "0x24C2834")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1D40", Offset = "0x5D1D40")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x24C28E0", Offset = "0x24C28E0", VA = "0x24C28E0")]
		private void CreateDisplayRow(TBInput.Button button)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x24C2D60", Offset = "0x24C2D60", VA = "0x24C2D60")]
		private void ConformHeights()
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x24C303C", Offset = "0x24C303C", VA = "0x24C303C")]
		public TBSampleInputPanel()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class TBSampleInputRow : MonoBehaviour
	{
		[Token(Token = "0x4002389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Text _label;

		[Token(Token = "0x400238A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TBSamplePress _press;

		[Token(Token = "0x400238B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private TBSampleTouch _touch;

		[Token(Token = "0x400238C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TBSampleAxis1D _axis1D;

		[Token(Token = "0x400238D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TBSampleAxis2D _axis2D;

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x24C2B48", Offset = "0x24C2B48", VA = "0x24C2B48")]
		public void SetButton(TBInput.Button button, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x24C39EC", Offset = "0x24C39EC", VA = "0x24C39EC")]
		public TBSampleInputRow()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class TBSamplePress : MonoBehaviour
	{
		[Token(Token = "0x400238E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TBInput.Button _button;

		[Token(Token = "0x400238F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TBInput.Controller _controller;

		[Token(Token = "0x4002390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Image _image;

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x24C39F4", Offset = "0x24C39F4", VA = "0x24C39F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x24C3A5C", Offset = "0x24C3A5C", VA = "0x24C3A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x24C3854", Offset = "0x24C3854", VA = "0x24C3854")]
		public void SetButton(TBInput.Button button, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x24C3CBC", Offset = "0x24C3CBC", VA = "0x24C3CBC")]
		public TBSamplePress()
		{
		}
	}
	[Token(Token = "0x2000408")]
	public class TBSampleTouch : MonoBehaviour
	{
		[Token(Token = "0x4002391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private TBInput.Button _button;

		[Token(Token = "0x4002392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private TBInput.Controller _controller;

		[Token(Token = "0x4002393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Image _image;

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x24C3CC4", Offset = "0x24C3CC4", VA = "0x24C3CC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0x24C3D2C", Offset = "0x24C3D2C", VA = "0x24C3D2C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0x24C3920", Offset = "0x24C3920", VA = "0x24C3920")]
		public void SetButton(TBInput.Button button, TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0x24C40F4", Offset = "0x24C40F4", VA = "0x24C40F4")]
		public TBSampleTouch()
		{
		}
	}
}
namespace TButt.Settings
{
	[Token(Token = "0x2000409")]
	public class TBGoogleSettings : TBSettingsBase
	{
		[Token(Token = "0x4002394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string settingsFilename;

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0x24C47DC", Offset = "0x24C47DC", VA = "0x24C47DC", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0x24C4BC4", Offset = "0x24C4BC4", VA = "0x24C4BC4")]
		private static TBSettings.TBDisplaySettings GetDefaultGoogleDisplaySettings(TBSettings.TBDisplaySettings settings)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0x24C48CC", Offset = "0x24C48CC", VA = "0x24C48CC")]
		public static TBSettings.TBDisplaySettings LoadDisplaySettings(string filename)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0x24C4C8C", Offset = "0x24C4C8C", VA = "0x24C4C8C")]
		public TBGoogleSettings()
		{
		}
	}
	[Token(Token = "0x200040A")]
	public class TBOculusSettings : TBSettingsBase
	{
		[Token(Token = "0x200066E")]
		public enum OculusMobileVersion
		{
			[Token(Token = "0x4003080")]
			Galaxy2014 = 0,
			[Token(Token = "0x4003081")]
			Galaxy2015 = 1,
			[Token(Token = "0x4003082")]
			Galaxy2016 = 2,
			[Token(Token = "0x4003083")]
			Galaxy2017 = 3,
			[Token(Token = "0x4003084")]
			Galaxy2018 = 4,
			[Token(Token = "0x4003085")]
			Go = 100,
			[Token(Token = "0x4003086")]
			Quest = 101,
			[Token(Token = "0x4003087")]
			Default = 10000
		}

		[Token(Token = "0x200066F")]
		public enum OculusDeviceFamily
		{
			[Token(Token = "0x4003089")]
			Unknown = -1,
			[Token(Token = "0x400308A")]
			GearVR = 0,
			[Token(Token = "0x400308B")]
			Go = 50,
			[Token(Token = "0x400308C")]
			Quest = 100,
			[Token(Token = "0x400308D")]
			Rift = 1000
		}

		[Token(Token = "0x2000670")]
		public enum FixedFoveatedRenderingLevel
		{
			[Token(Token = "0x400308F")]
			None,
			[Token(Token = "0x4003090")]
			Low,
			[Token(Token = "0x4003091")]
			Medium,
			[Token(Token = "0x4003092")]
			High
		}

		[Token(Token = "0x2000671")]
		public enum TBOculusMobileRefreshRate
		{
			[Token(Token = "0x4003094")]
			FPS_60 = 60,
			[Token(Token = "0x4003095")]
			FPS_72 = 72
		}

		[Serializable]
		[Token(Token = "0x2000672")]
		public struct TBCoreSettingsOculus
		{
			[Token(Token = "0x4003096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBSettings.TBDisplaySettings displaySettings;

			[Token(Token = "0x4003097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public FixedFoveatedRenderingLevel fixedFoveatedRenderingLevel;

			[Token(Token = "0x4003098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public bool useDynamicResolution;

			[Token(Token = "0x4003099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public Vector2 dynamicResolutionRange;

			[Token(Token = "0x400309A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public bool allowViveEmulation;
		}

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C337C", Offset = "0x5C337C")]
		private sealed class <ApplySettingsToOVRManager>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400309B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400309C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400309D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TBOculusSettings <>4__this;

			[Token(Token = "0x170003A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AC4")]
				[Address(RVA = "0x24C6C94", Offset = "0x24C6C94", VA = "0x24C6C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AC6")]
				[Address(RVA = "0x24C6D24", Offset = "0x24C6D24", VA = "0x24C6D24", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AC1")]
			[Address(RVA = "0x24C5BD0", Offset = "0x24C5BD0", VA = "0x24C5BD0")]
			[DebuggerHidden]
			public <ApplySettingsToOVRManager>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6002AC2")]
			[Address(RVA = "0x24C6A50", Offset = "0x24C6A50", VA = "0x24C6A50", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AC3")]
			[Address(RVA = "0x24C6A54", Offset = "0x24C6A54", VA = "0x24C6A54", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AC5")]
			[Address(RVA = "0x24C6C9C", Offset = "0x24C6C9C", VA = "0x24C6C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string settingsFilename;

		[Token(Token = "0x4002396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static TBCoreSettingsOculus _oculusSettings;

		[Token(Token = "0x4002397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static OculusDeviceFamily _devicefamily;

		[Token(Token = "0x4002398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static readonly string _gearVRFilename;

		[Token(Token = "0x4002399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static readonly string _goFilename;

		[Token(Token = "0x400239A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static readonly string _riftFilename;

		[Token(Token = "0x400239B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private static readonly string _questFilename;

		[Token(Token = "0x6001F7F")]
		[Address(RVA = "0x24C4D10", Offset = "0x24C4D10", VA = "0x24C4D10", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F80")]
		[Address(RVA = "0x24C5338", Offset = "0x24C5338", VA = "0x24C5338", Slot = "5")]
		public override void SetRenderscale(float newScale)
		{
		}

		[Token(Token = "0x6001F81")]
		[Address(RVA = "0x24C544C", Offset = "0x24C544C", VA = "0x24C544C", Slot = "7")]
		public override float GetRefreshRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001F82")]
		[Address(RVA = "0x24C5538", Offset = "0x24C5538", VA = "0x24C5538", Slot = "13")]
		protected override void PrintStartupResults()
		{
		}

		[Token(Token = "0x6001F83")]
		[Address(RVA = "0x24C55D0", Offset = "0x24C55D0", VA = "0x24C55D0")]
		public static TBSettings.TBDisplaySettings GetDefaultDisplaySettings(OculusDeviceFamily family)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F84")]
		[Address(RVA = "0x24C5718", Offset = "0x24C5718", VA = "0x24C5718")]
		public static TBCoreSettingsOculus GetDefaultOculusSettings(OculusDeviceFamily family)
		{
			return default(TBCoreSettingsOculus);
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x24C5A98", Offset = "0x24C5A98", VA = "0x24C5A98")]
		public static TBSettings.TBQualitySettings GetDefaultOculusQualitySettings(OculusDeviceFamily family)
		{
			return default(TBSettings.TBQualitySettings);
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x24C52AC", Offset = "0x24C52AC", VA = "0x24C52AC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1DB8", Offset = "0x5D1DB8")]
		private IEnumerator ApplySettingsToOVRManager()
		{
			return null;
		}

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0x24C5BF0", Offset = "0x24C5BF0", VA = "0x24C5BF0")]
		public static void SetFixedFoveatedRenderingLevel(FixedFoveatedRenderingLevel level)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0x24C5D64", Offset = "0x24C5D64", VA = "0x24C5D64")]
		public static void SetRefreshRate(TBOculusMobileRefreshRate rate)
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0x24C5EA4", Offset = "0x24C5EA4", VA = "0x24C5EA4")]
		protected static OculusMobileVersion GetOculusMobileVersion()
		{
			return default(OculusMobileVersion);
		}

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x24BC914", Offset = "0x24BC914", VA = "0x24BC914")]
		public static OculusDeviceFamily GetOculusDeviceFamily()
		{
			return default(OculusDeviceFamily);
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x24C6298", Offset = "0x24C6298", VA = "0x24C6298")]
		protected static string GetGearVRDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x24C66F0", Offset = "0x24C66F0", VA = "0x24C66F0")]
		public static bool SupportsDynamicResolution(OculusDeviceFamily family)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x24C5094", Offset = "0x24C5094", VA = "0x24C5094")]
		public static TBCoreSettingsOculus LoadOculusSettings(OculusDeviceFamily family)
		{
			return default(TBCoreSettingsOculus);
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x24C6704", Offset = "0x24C6704", VA = "0x24C6704")]
		public static string GetOculusSettingsFilename(OculusDeviceFamily family)
		{
			return null;
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x24C6884", Offset = "0x24C6884", VA = "0x24C6884")]
		public static Vector2 GetResolutionScalingFactor(OculusDeviceFamily family)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x24C55B0", Offset = "0x24C55B0", VA = "0x24C55B0")]
		public static bool SupportsFixedFoveatedRendering(OculusDeviceFamily family)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x24C5E90", Offset = "0x24C5E90", VA = "0x24C5E90")]
		public static bool SupportsMultipleRefreshRates(OculusDeviceFamily family)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x24C68CC", Offset = "0x24C68CC", VA = "0x24C68CC")]
		public static TBCoreSettingsOculus GetRuntimeOculusSettings()
		{
			return default(TBCoreSettingsOculus);
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x24C6968", Offset = "0x24C6968", VA = "0x24C6968")]
		public TBOculusSettings()
		{
		}
	}
	[Token(Token = "0x200040B")]
	public class TBSteamVRSettings : TBSettingsBase
	{
		[Token(Token = "0x400239C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string settingsFilename;

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x24C6E30", Offset = "0x24C6E30", VA = "0x24C6E30", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0x24C6F20", Offset = "0x24C6F20", VA = "0x24C6F20")]
		public static TBSettings.TBDisplaySettings LoadDisplaySettings(string filename)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x24C71AC", Offset = "0x24C71AC", VA = "0x24C71AC")]
		public TBSteamVRSettings()
		{
		}
	}
	[Token(Token = "0x200040C")]
	public class TBWindowsMRSettings : TBSettingsBase
	{
		[Token(Token = "0x2000674")]
		public enum TBWindowsMixedRealityLevel
		{
			[Token(Token = "0x400309F")]
			Base,
			[Token(Token = "0x40030A0")]
			Ultra
		}

		[Token(Token = "0x400239D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string settingsFilename;

		[Token(Token = "0x400239E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly string _baseFilename;

		[Token(Token = "0x400239F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string _ultraFilename;

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x24C7228", Offset = "0x24C7228", VA = "0x24C7228", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x24C7458", Offset = "0x24C7458", VA = "0x24C7458")]
		public static TBSettings.TBDisplaySettings LoadDisplaySettings(string filename)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0x24C76E4", Offset = "0x24C76E4", VA = "0x24C76E4")]
		public static TBSettings.TBDisplaySettings GetDefaultDisplaySettings(TBWindowsMixedRealityLevel level)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x24C7744", Offset = "0x24C7744", VA = "0x24C7744")]
		public static TBSettings.TBDisplaySettings LoadWindowsMRSettings(TBWindowsMixedRealityLevel level)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x24C7378", Offset = "0x24C7378", VA = "0x24C7378")]
		public static string GetWindowsMRSettingsFilename(TBWindowsMixedRealityLevel level)
		{
			return null;
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x24C7340", Offset = "0x24C7340", VA = "0x24C7340")]
		public TBWindowsMixedRealityLevel GetWindowsMixedRealityLevel()
		{
			return default(TBWindowsMixedRealityLevel);
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0x24C7960", Offset = "0x24C7960", VA = "0x24C7960")]
		public TBWindowsMRSettings()
		{
		}
	}
	[Token(Token = "0x200040D")]
	public class TBSettingsBase : MonoBehaviour
	{
		[Token(Token = "0x40023A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected TBSettings.TBDisplaySettings _displaySettings;

		[Token(Token = "0x40023A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected VRHeadset _headset;

		[Token(Token = "0x40023A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected VRFamily _family;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0x24C4B88", Offset = "0x24C4B88", VA = "0x24C4B88", Slot = "4")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x24C5408", Offset = "0x24C5408", VA = "0x24C5408", Slot = "5")]
		public virtual void SetRenderscale(float newScale)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x24C6D2C", Offset = "0x24C6D2C", VA = "0x24C6D2C", Slot = "6")]
		protected virtual void SetRefreshRate()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x24C4C28", Offset = "0x24C4C28", VA = "0x24C4C28")]
		public static TBSettings.TBDisplaySettings GetDefaultDisplaySettings(TBSettings.TBDisplaySettings defaultDisplaySettings)
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0x24C5B50", Offset = "0x24C5B50", VA = "0x24C5B50")]
		public static TBSettings.TBQualitySettings GetDefaultQualitySettings(TBSettings.TBQualitySettings qualitySettings)
		{
			return default(TBSettings.TBQualitySettings);
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x24C6D30", Offset = "0x24C6D30", VA = "0x24C6D30")]
		public TBSettings.TBDisplaySettings GetDisplaySettings()
		{
			return default(TBSettings.TBDisplaySettings);
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0x24C6D48", Offset = "0x24C6D48", VA = "0x24C6D48", Slot = "7")]
		public virtual float GetRefreshRate()
		{
			return default(float);
		}

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0x24C6E04", Offset = "0x24C6E04", VA = "0x24C6E04", Slot = "8")]
		public virtual TBSettings.TBQualityLevel GetConfiguredQualityLevel()
		{
			return default(TBSettings.TBQualityLevel);
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0x24C6E0C", Offset = "0x24C6E0C", VA = "0x24C6E0C", Slot = "9")]
		public virtual float GetConfiguredRenderscale()
		{
			return default(float);
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0x24C6E14", Offset = "0x24C6E14", VA = "0x24C6E14", Slot = "10")]
		public virtual VRHeadset GetActiveHeadset()
		{
			return default(VRHeadset);
		}

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0x24C6E1C", Offset = "0x24C6E1C", VA = "0x24C6E1C", Slot = "11")]
		public virtual VRFamily GetActiveFamily()
		{
			return default(VRFamily);
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0x24C6E24", Offset = "0x24C6E24", VA = "0x24C6E24", Slot = "12")]
		public virtual bool SupportsMultipleRefreshRates()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0x24C6E2C", Offset = "0x24C6E2C", VA = "0x24C6E2C", Slot = "13")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x5D1E30", Offset = "0x5D1E30")]
		protected virtual void PrintStartupResults()
		{
		}

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0x24C4C94", Offset = "0x24C4C94", VA = "0x24C4C94")]
		public TBSettingsBase()
		{
		}
	}
}
namespace TButt.Input
{
	[Token(Token = "0x200040E")]
	public class TBGoogleTracking : TBSDKTrackingBase
	{
		[Token(Token = "0x40023A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBGoogleTracking _instance;

		[Token(Token = "0x17000226")]
		public static TBGoogleTracking instance
		{
			[Token(Token = "0x6001FAF")]
			[Address(RVA = "0x24BC2E4", Offset = "0x24BC2E4", VA = "0x24BC2E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0x24BC384", Offset = "0x24BC384", VA = "0x24BC384", Slot = "23")]
		protected override TBTrackingNodeBase AddNode(TBNode node, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0x24BC3F8", Offset = "0x24BC3F8", VA = "0x24BC3F8", Slot = "27")]
		protected override bool SupportsHandControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0x24BC400", Offset = "0x24BC400", VA = "0x24BC400", Slot = "28")]
		protected override bool Supports3DOFController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0x24BC408", Offset = "0x24BC408", VA = "0x24BC408", Slot = "18")]
		public override bool SupportsHMDPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0x24BC380", Offset = "0x24BC380", VA = "0x24BC380")]
		public TBGoogleTracking()
		{
		}
	}
	[Token(Token = "0x200040F")]
	public class TBController_Oculus_Gamepad : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_Gamepad _instance;

		[Token(Token = "0x17000227")]
		public static TBController_Oculus_Gamepad instance
		{
			[Token(Token = "0x6001FB5")]
			[Address(RVA = "0x23A94F4", Offset = "0x23A94F4", VA = "0x23A94F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x23A9738", Offset = "0x23A9738", VA = "0x23A9738", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x23A96D4", Offset = "0x23A96D4", VA = "0x23A96D4")]
		public TBController_Oculus_Gamepad()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class TBController_Oculus_GearVRController : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_GearVRController _instance;

		[Token(Token = "0x17000228")]
		public static TBController_Oculus_GearVRController instance
		{
			[Token(Token = "0x6001FB8")]
			[Address(RVA = "0x23AA5FC", Offset = "0x23AA5FC", VA = "0x23AA5FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB9")]
		[Address(RVA = "0x23AA840", Offset = "0x23AA840", VA = "0x23AA840", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x23AABD4", Offset = "0x23AABD4", VA = "0x23AABD4", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FBB")]
		[Address(RVA = "0x23AAD5C", Offset = "0x23AAD5C", VA = "0x23AAD5C", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x23AB09C", Offset = "0x23AB09C", VA = "0x23AB09C", Slot = "7")]
		public override VRController GetModel()
		{
			return default(VRController);
		}

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x23AA7DC", Offset = "0x23AA7DC", VA = "0x23AA7DC")]
		public TBController_Oculus_GearVRController()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class TBController_Oculus_GearVRTouchpad : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_GearVRTouchpad _instance;

		[Token(Token = "0x17000229")]
		public static TBController_Oculus_GearVRTouchpad instance
		{
			[Token(Token = "0x6001FBE")]
			[Address(RVA = "0x23AB134", Offset = "0x23AB134", VA = "0x23AB134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x23AB378", Offset = "0x23AB378", VA = "0x23AB378", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x23AB314", Offset = "0x23AB314", VA = "0x23AB314")]
		public TBController_Oculus_GearVRTouchpad()
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class TBController_Oculus_QuestLeft : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_QuestLeft _instance;

		[Token(Token = "0x1700022A")]
		public static TBController_Oculus_QuestLeft instance
		{
			[Token(Token = "0x6001FC1")]
			[Address(RVA = "0x23AB954", Offset = "0x23AB954", VA = "0x23AB954")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC2")]
		[Address(RVA = "0x23ABB94", Offset = "0x23ABB94", VA = "0x23ABB94", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x23ABD38", Offset = "0x23ABD38", VA = "0x23ABD38", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FC4")]
		[Address(RVA = "0x23AC310", Offset = "0x23AC310", VA = "0x23AC310", Slot = "17")]
		protected override HandTrackingOffsets GetDefaultTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x23ABB30", Offset = "0x23ABB30", VA = "0x23ABB30")]
		public TBController_Oculus_QuestLeft()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class TBController_Oculus_QuestRight : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_QuestRight _instance;

		[Token(Token = "0x1700022B")]
		public static TBController_Oculus_QuestRight instance
		{
			[Token(Token = "0x6001FC6")]
			[Address(RVA = "0x23AC3E4", Offset = "0x23AC3E4", VA = "0x23AC3E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0x23AC628", Offset = "0x23AC628", VA = "0x23AC628", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x23AC7CC", Offset = "0x23AC7CC", VA = "0x23AC7CC", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x23ACCC8", Offset = "0x23ACCC8", VA = "0x23ACCC8", Slot = "17")]
		protected override HandTrackingOffsets GetDefaultTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x23AC5C4", Offset = "0x23AC5C4", VA = "0x23AC5C4")]
		public TBController_Oculus_QuestRight()
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class TBController_Oculus_Remote : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_Remote _instance;

		[Token(Token = "0x1700022C")]
		public static TBController_Oculus_Remote instance
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x23ACD9C", Offset = "0x23ACD9C", VA = "0x23ACD9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x23ACFE0", Offset = "0x23ACFE0", VA = "0x23ACFE0", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FCD")]
		[Address(RVA = "0x23ACF7C", Offset = "0x23ACF7C", VA = "0x23ACF7C")]
		public TBController_Oculus_Remote()
		{
		}
	}
	[Token(Token = "0x2000415")]
	public class TBController_Oculus_TouchLeft : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_TouchLeft _instance;

		[Token(Token = "0x1700022D")]
		public static TBController_Oculus_TouchLeft instance
		{
			[Token(Token = "0x6001FCE")]
			[Address(RVA = "0x23AD5B4", Offset = "0x23AD5B4", VA = "0x23AD5B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FCF")]
		[Address(RVA = "0x23AD870", Offset = "0x23AD870", VA = "0x23AD870", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FD0")]
		[Address(RVA = "0x23ADA68", Offset = "0x23ADA68", VA = "0x23ADA68", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FD1")]
		[Address(RVA = "0x23AE040", Offset = "0x23AE040", VA = "0x23AE040", Slot = "17")]
		protected override HandTrackingOffsets GetDefaultTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x23AD80C", Offset = "0x23AD80C", VA = "0x23AD80C")]
		public TBController_Oculus_TouchLeft()
		{
		}
	}
	[Token(Token = "0x2000416")]
	public class TBController_Oculus_TouchRight : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_TouchRight _instance;

		[Token(Token = "0x1700022E")]
		public static TBController_Oculus_TouchRight instance
		{
			[Token(Token = "0x6001FD3")]
			[Address(RVA = "0x23AE114", Offset = "0x23AE114", VA = "0x23AE114")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x23AE3D4", Offset = "0x23AE3D4", VA = "0x23AE3D4", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FD5")]
		[Address(RVA = "0x23AE5CC", Offset = "0x23AE5CC", VA = "0x23AE5CC", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x23AEAC8", Offset = "0x23AEAC8", VA = "0x23AEAC8", Slot = "17")]
		protected override HandTrackingOffsets GetDefaultTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x23AE370", Offset = "0x23AE370", VA = "0x23AE370")]
		public TBController_Oculus_TouchRight()
		{
		}
	}
	[Token(Token = "0x2000417")]
	public class TBController_Oculus_ViveControllerLeft : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_ViveControllerLeft _instance;

		[Token(Token = "0x1700022F")]
		public static TBController_Oculus_ViveControllerLeft instance
		{
			[Token(Token = "0x6001FD8")]
			[Address(RVA = "0x23AEB9C", Offset = "0x23AEB9C", VA = "0x23AEB9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x23AEDDC", Offset = "0x23AEDDC", VA = "0x23AEDDC", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x23AEF1C", Offset = "0x23AEF1C", VA = "0x23AEF1C", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x23AED78", Offset = "0x23AED78", VA = "0x23AED78")]
		public TBController_Oculus_ViveControllerLeft()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class TBController_Oculus_ViveControllerRight : TBControllerBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBController_Oculus_ViveControllerRight _instance;

		[Token(Token = "0x17000230")]
		public static TBController_Oculus_ViveControllerRight instance
		{
			[Token(Token = "0x6001FDC")]
			[Address(RVA = "0x24BBB40", Offset = "0x24BBB40", VA = "0x24BBB40")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x24BBD84", Offset = "0x24BBD84", VA = "0x24BBD84", Slot = "15")]
		protected override void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x24BBEC4", Offset = "0x24BBEC4", VA = "0x24BBEC4", Slot = "4")]
		public override List<TBInput.ButtonDef<OVRInput.RawButton>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x24BBD20", Offset = "0x24BBD20", VA = "0x24BBD20")]
		public TBController_Oculus_ViveControllerRight()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public class TBOculusTracking : TBSDKTrackingBase
	{
		[Token(Token = "0x40023AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBOculusTracking _instance;

		[Token(Token = "0x17000231")]
		public static TBOculusTracking instance
		{
			[Token(Token = "0x6001FE0")]
			[Address(RVA = "0x24BE328", Offset = "0x24BE328", VA = "0x24BE328")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x24BE3C8", Offset = "0x24BE3C8", VA = "0x24BE3C8")]
		private bool PressedLeft()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x24BE704", Offset = "0x24BE704", VA = "0x24BE704", Slot = "21")]
		public override void UpdateNodeState(TBTrackingNodeBase node)
		{
		}

		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x24BEBE4", Offset = "0x24BEBE4", VA = "0x24BEBE4", Slot = "24")]
		public override bool HasUserBoundarySystem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x24BEC80", Offset = "0x24BEC80", VA = "0x24BEC80", Slot = "22")]
		public override Vector2 GetPlayspaceDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x24BED50", Offset = "0x24BED50", VA = "0x24BED50", Slot = "25")]
		public override bool IsPointWithinPlayspace(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x24BEE28", Offset = "0x24BEE28", VA = "0x24BEE28", Slot = "26")]
		public override bool IsPointWithinUserBoundary(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x24BEF00", Offset = "0x24BEF00", VA = "0x24BEF00", Slot = "23")]
		protected override TBTrackingNodeBase AddNode(TBNode node, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x24BEFA8", Offset = "0x24BEFA8", VA = "0x24BEFA8", Slot = "27")]
		protected override bool SupportsHandControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x24BF044", Offset = "0x24BF044", VA = "0x24BF044", Slot = "28")]
		protected override bool Supports3DOFController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x24BF110", Offset = "0x24BF110", VA = "0x24BF110", Slot = "18")]
		public override bool SupportsHMDPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x24BE3C4", Offset = "0x24BE3C4", VA = "0x24BE3C4")]
		public TBOculusTracking()
		{
		}
	}
	[Token(Token = "0x200041A")]
	public class TBSteamVRTracking : TBSDKTrackingBase
	{
		[Token(Token = "0x40023AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBSteamVRTracking _instance;

		[Token(Token = "0x17000232")]
		public static TBSteamVRTracking instance
		{
			[Token(Token = "0x6001FEC")]
			[Address(RVA = "0x24BF72C", Offset = "0x24BF72C", VA = "0x24BF72C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x24BF7CC", Offset = "0x24BF7CC", VA = "0x24BF7CC", Slot = "23")]
		protected override TBTrackingNodeBase AddNode(TBNode node, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x24BF840", Offset = "0x24BF840", VA = "0x24BF840", Slot = "27")]
		protected override bool SupportsHandControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x24BF8DC", Offset = "0x24BF8DC", VA = "0x24BF8DC", Slot = "28")]
		protected override bool Supports3DOFController()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x24BF9A8", Offset = "0x24BF9A8", VA = "0x24BF9A8", Slot = "18")]
		public override bool SupportsHMDPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x24BF7C8", Offset = "0x24BF7C8", VA = "0x24BF7C8")]
		public TBSteamVRTracking()
		{
		}
	}
	[Token(Token = "0x200041B")]
	public class TBSteamVR2Tracking : TBSDKTrackingBase
	{
		[Token(Token = "0x40023B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBSteamVR2Tracking _instance;

		[Token(Token = "0x17000233")]
		public static TBSteamVR2Tracking instance
		{
			[Token(Token = "0x6001FF2")]
			[Address(RVA = "0x24BF68C", Offset = "0x24BF68C", VA = "0x24BF68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x24BF728", Offset = "0x24BF728", VA = "0x24BF728")]
		public TBSteamVR2Tracking()
		{
		}
	}
	[Token(Token = "0x200041C")]
	public static class TBSteamVRActions
	{
	}
	[Token(Token = "0x200041D")]
	public class TBInputGoogle : TBSDKInputBase<TBInput.Button>
	{
		[Token(Token = "0x40023B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBInputGoogle _instance;

		[Token(Token = "0x17000234")]
		public static TBInputGoogle instance
		{
			[Token(Token = "0x6001FF4")]
			[Address(RVA = "0x24BC49C", Offset = "0x24BC49C", VA = "0x24BC49C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x24BC538", Offset = "0x24BC538", VA = "0x24BC538")]
		public TBInputGoogle()
		{
		}
	}
	[Token(Token = "0x200041E")]
	public class TBInputOculus : TBSDKInputBase<OVRInput.RawButton>
	{
		[Token(Token = "0x40023B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBInputOculus _instance;

		[Token(Token = "0x40023B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _leftRumble;

		[Token(Token = "0x40023B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _rightRumble;

		[Token(Token = "0x17000235")]
		public static TBInputOculus instance
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x24BC59C", Offset = "0x24BC59C", VA = "0x24BC59C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x24BC69C", Offset = "0x24BC69C", VA = "0x24BC69C", Slot = "40")]
		protected override void LoadHandControllers()
		{
		}

		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x24BCAE0", Offset = "0x24BCAE0", VA = "0x24BCAE0", Slot = "41")]
		protected override void Load3DOFControllers()
		{
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x24BCD20", Offset = "0x24BCD20", VA = "0x24BCD20", Slot = "42")]
		protected override void LoadClickRemotes()
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x24BCE5C", Offset = "0x24BCE5C", VA = "0x24BCE5C", Slot = "43")]
		protected override void LoadGamepads()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x24BCE78", Offset = "0x24BCE78", VA = "0x24BCE78", Slot = "44")]
		public override void Update()
		{
		}

		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x24BCFB8", Offset = "0x24BCFB8", VA = "0x24BCFB8", Slot = "45")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x24BCFBC", Offset = "0x24BCFBC", VA = "0x24BCFBC")]
		public static OVRInput.Controller GetOculusControllerID(TBInput.Controller controller)
		{
			return default(OVRInput.Controller);
		}

		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x24BD328", Offset = "0x24BD328", VA = "0x24BD328", Slot = "96")]
		public override TBInput.Mobile3DOFHandedness Get3DOFHandedness()
		{
			return default(TBInput.Mobile3DOFHandedness);
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x24BD4B0", Offset = "0x24BD4B0", VA = "0x24BD4B0", Slot = "67")]
		protected override void StopRumbleInternal(TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0x24BD588", Offset = "0x24BD588", VA = "0x24BD588", Slot = "73")]
		public override bool ResolveButtonDown(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x24BD620", Offset = "0x24BD620", VA = "0x24BD620", Slot = "74")]
		public override bool ResolveButtonUp(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002002")]
		[Address(RVA = "0x24BD6B8", Offset = "0x24BD6B8", VA = "0x24BD6B8", Slot = "75")]
		public override bool ResolveButton(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x24BD750", Offset = "0x24BD750", VA = "0x24BD750", Slot = "76")]
		public override bool ResolveTouchDown(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002004")]
		[Address(RVA = "0x24BD8A4", Offset = "0x24BD8A4", VA = "0x24BD8A4", Slot = "77")]
		public override bool ResolveTouchUp(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x24BD948", Offset = "0x24BD948", VA = "0x24BD948", Slot = "78")]
		public override bool ResolveTouch(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0x24BD9EC", Offset = "0x24BD9EC", VA = "0x24BD9EC", Slot = "79")]
		public override float ResolveAxis1D(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x24BDAFC", Offset = "0x24BDAFC", VA = "0x24BDAFC", Slot = "80")]
		public override Vector2 ResolveAxis2D(OVRInput.RawButton button, TBInput.Controller controller)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002008")]
		[Address(RVA = "0x24BDC14", Offset = "0x24BDC14", VA = "0x24BDC14", Slot = "63")]
		public override Quaternion GetRawRotation(TBInput.Controller controller)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x24BDCAC", Offset = "0x24BDCAC", VA = "0x24BDCAC", Slot = "62")]
		public override Vector3 GetRawPosition(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600200A")]
		[Address(RVA = "0x24BDD44", Offset = "0x24BDD44", VA = "0x24BDD44", Slot = "64")]
		public override Vector3 GetVelocity(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x24BDDDC", Offset = "0x24BDDDC", VA = "0x24BDDDC", Slot = "65")]
		public override Vector3 GetAngularVelocity(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0x24BDE74", Offset = "0x24BDE74", VA = "0x24BDE74", Slot = "66")]
		public override Vector3 GetAcceleration(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x24BDF0C", Offset = "0x24BDF0C", VA = "0x24BDF0C", Slot = "84")]
		protected override bool ResolveRumble(TBInput.Controller controller, float strength = 0.5f, float frequency = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x600200E")]
		[Address(RVA = "0x24BD7F4", Offset = "0x24BD7F4", VA = "0x24BD7F4")]
		public static OVRInput.RawTouch GetTouchEnum(OVRInput.RawButton button)
		{
			return default(OVRInput.RawTouch);
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x24BDABC", Offset = "0x24BDABC", VA = "0x24BDABC")]
		public static OVRInput.RawAxis1D GetAxis1DEnum(OVRInput.RawButton button)
		{
			return default(OVRInput.RawAxis1D);
		}

		[Token(Token = "0x6002010")]
		[Address(RVA = "0x24BDBD4", Offset = "0x24BDBD4", VA = "0x24BDBD4")]
		public static OVRInput.RawAxis2D GetAxis2DEnum(OVRInput.RawButton button)
		{
			return default(OVRInput.RawAxis2D);
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x24BC638", Offset = "0x24BC638", VA = "0x24BC638")]
		public TBInputOculus()
		{
		}
	}
	[Token(Token = "0x200041F")]
	public class TBInputSteamVR2 : TBSDKInputWithXInputBase<TBInput.Button>
	{
		[Token(Token = "0x40023B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBInputSteamVR2 _instance;

		[Token(Token = "0x40023B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 lastLeftControllerVelocity;

		[Token(Token = "0x40023B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 lastRightControllerVelocity;

		[Token(Token = "0x17000236")]
		public static TBInputSteamVR2 instance
		{
			[Token(Token = "0x6002012")]
			[Address(RVA = "0x24BE1C0", Offset = "0x24BE1C0", VA = "0x24BE1C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x24BE25C", Offset = "0x24BE25C", VA = "0x24BE25C")]
		public TBInputSteamVR2()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000420")]
	public enum SteamVRHardwareButton
	{
		[Token(Token = "0x40023B9")]
		PrimaryTrigger = 1,
		[Token(Token = "0x40023BA")]
		Grip = 2,
		[Token(Token = "0x40023BB")]
		Menu = 0x10,
		[Token(Token = "0x40023BC")]
		AX = 0x100,
		[Token(Token = "0x40023BD")]
		BY = 0x200,
		[Token(Token = "0x40023BE")]
		Squeeze = 0x1000,
		[Token(Token = "0x40023BF")]
		Touchpad = 0x10000,
		[Token(Token = "0x40023C0")]
		Joystick = 0x20000
	}
	[Token(Token = "0x2000421")]
	public class TBInputSteamVR : TBSDKInputWithXInputBase<TBInput.Button>
	{
		[Token(Token = "0x40023C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBInputSteamVR _instance;

		[Token(Token = "0x40023C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 lastLeftControllerVelocity;

		[Token(Token = "0x40023C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 lastRightControllerVelocity;

		[Token(Token = "0x17000237")]
		public static TBInputSteamVR instance
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0x24BE058", Offset = "0x24BE058", VA = "0x24BE058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x24BE0F4", Offset = "0x24BE0F4", VA = "0x24BE0F4")]
		public TBInputSteamVR()
		{
		}
	}
	[Token(Token = "0x2000422")]
	public class TBWindowsMRInput : TBSDKInputWithXInputBase<TBInput.Button>
	{
		[Token(Token = "0x2000675")]
		public enum Button
		{
			[Token(Token = "0x40030A2")]
			SelectTrigger,
			[Token(Token = "0x40030A3")]
			Grip,
			[Token(Token = "0x40030A4")]
			Menu,
			[Token(Token = "0x40030A5")]
			Thumbstick,
			[Token(Token = "0x40030A6")]
			Touchpad
		}

		[Token(Token = "0x40023C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBWindowsMRInput _instance;

		[Token(Token = "0x40023C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected Vector3 lastLeftControllerVelocity;

		[Token(Token = "0x40023C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		protected Vector3 lastRightControllerVelocity;

		[Token(Token = "0x17000238")]
		public static TBWindowsMRInput instance
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0x24BFA3C", Offset = "0x24BFA3C", VA = "0x24BFA3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0x24BFAD8", Offset = "0x24BFAD8", VA = "0x24BFAD8")]
		public TBWindowsMRInput()
		{
		}
	}
	[Token(Token = "0x2000423")]
	public class TBXInput : TBSDKInputBase<TBXInput.TBXInputButton>
	{
		[Token(Token = "0x2000676")]
		public enum TBXInputButton
		{
			[Token(Token = "0x40030A8")]
			ButtonA,
			[Token(Token = "0x40030A9")]
			ButtonB,
			[Token(Token = "0x40030AA")]
			ButtonX,
			[Token(Token = "0x40030AB")]
			ButtonY,
			[Token(Token = "0x40030AC")]
			LeftStick,
			[Token(Token = "0x40030AD")]
			RightStick,
			[Token(Token = "0x40030AE")]
			DpadUp,
			[Token(Token = "0x40030AF")]
			DpadRight,
			[Token(Token = "0x40030B0")]
			DpadDown,
			[Token(Token = "0x40030B1")]
			DpadLeft,
			[Token(Token = "0x40030B2")]
			Back,
			[Token(Token = "0x40030B3")]
			Guide,
			[Token(Token = "0x40030B4")]
			RightBumper,
			[Token(Token = "0x40030B5")]
			LeftBumper,
			[Token(Token = "0x40030B6")]
			LeftTrigger,
			[Token(Token = "0x40030B7")]
			RightTrigger,
			[Token(Token = "0x40030B8")]
			Start
		}

		[Token(Token = "0x40023C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBXInput _instance;

		[Token(Token = "0x17000239")]
		public static TBXInput instance
		{
			[Token(Token = "0x6002018")]
			[Address(RVA = "0x24BFEB4", Offset = "0x24BFEB4", VA = "0x24BFEB4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0x24BFF50", Offset = "0x24BFF50", VA = "0x24BFF50")]
		public TBXInput()
		{
		}
	}
	[Token(Token = "0x2000424")]
	public class TBWindowsMRTracking : TBSDKTrackingBase
	{
		[Token(Token = "0x40023C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static TBWindowsMRTracking _instance;

		[Token(Token = "0x1700023A")]
		public static TBWindowsMRTracking instance
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0x24BFBA4", Offset = "0x24BFBA4", VA = "0x24BFBA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0x24BFC44", Offset = "0x24BFC44", VA = "0x24BFC44", Slot = "23")]
		protected override TBTrackingNodeBase AddNode(TBNode node, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x24BFCB8", Offset = "0x24BFCB8", VA = "0x24BFCB8", Slot = "27")]
		protected override bool SupportsHandControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x24BFD54", Offset = "0x24BFD54", VA = "0x24BFD54", Slot = "28")]
		protected override bool Supports3DOFController()
		{
			return default(bool);
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x24BFE20", Offset = "0x24BFE20", VA = "0x24BFE20", Slot = "18")]
		public override bool SupportsHMDPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x24BFC40", Offset = "0x24BFC40", VA = "0x24BFC40")]
		public TBWindowsMRTracking()
		{
		}
	}
	[Token(Token = "0x2000425")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C2584", Offset = "0x5C2584")]
	public abstract class TBControllerBase<T>
	{
		[Token(Token = "0x40023C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string name;

		[Token(Token = "0x40023CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected string fileName;

		[Token(Token = "0x40023CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBInput.Controller type;

		[Token(Token = "0x40023CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected VRController model;

		[Token(Token = "0x40023CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool supportsRumble;

		[Token(Token = "0x40023CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool loaded;

		[Token(Token = "0x40023CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected List<TBInput.ButtonDef<T>> loadedButtonDefs;

		[Token(Token = "0x40023D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBInput.ButtonLookupTable<T> lookupTable;

		[Token(Token = "0x40023D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected HandTrackingOffsets trackingOffsets;

		[Token(Token = "0x40023D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _isRumbling;

		[Token(Token = "0x40023D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] thumbPoseButtons;

		[Token(Token = "0x40023D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] indexPoseButtons;

		[Token(Token = "0x40023D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] middlePoseButtons;

		[Token(Token = "0x40023D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] ringPoseButtons;

		[Token(Token = "0x40023D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] pinkyPoseButtons;

		[Token(Token = "0x40023D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] gripPoseButtons;

		[Token(Token = "0x1700023B")]
		public virtual bool IsRumbling
		{
			[Token(Token = "0x600202E")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002020")]
		public virtual List<TBInput.ButtonDef<T>> GetDefaultDefs()
		{
			return null;
		}

		[Token(Token = "0x6002021")]
		protected virtual void Initialize()
		{
		}

		[Token(Token = "0x6002022")]
		public virtual string GetName()
		{
			return null;
		}

		[Token(Token = "0x6002023")]
		public virtual VRController GetModel()
		{
			return default(VRController);
		}

		[Token(Token = "0x6002024")]
		public virtual string GetFileName()
		{
			return null;
		}

		[Token(Token = "0x6002025")]
		public virtual TBInput.Controller GetControllerType()
		{
			return default(TBInput.Controller);
		}

		[Token(Token = "0x6002026")]
		public virtual bool HasRumbleSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6002027")]
		public virtual bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x6002028")]
		public virtual List<TBInput.ButtonDef<T>> GetLoadedButtonDefs()
		{
			return null;
		}

		[Token(Token = "0x6002029")]
		public virtual TBInput.ButtonLookupTable<T> GetLookupTable()
		{
			return default(TBInput.ButtonLookupTable<T>);
		}

		[Token(Token = "0x600202A")]
		public virtual HandTrackingOffsets GetTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x600202B")]
		protected virtual void SetFingerPoseButtons()
		{
		}

		[Token(Token = "0x600202C")]
		public virtual T[] GetFingerButtons(TBInput.Finger finger)
		{
			return null;
		}

		[Token(Token = "0x600202D")]
		protected virtual HandTrackingOffsets GetDefaultTrackingOffsets()
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x600202F")]
		public virtual void SetRumbling(bool on)
		{
		}

		[Token(Token = "0x6002030")]
		protected TBControllerBase()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public struct HandTrackingOffsets
	{
		[Token(Token = "0x40023D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 positionOffset;

		[Token(Token = "0x40023DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 rotationOffset;
	}
	[Token(Token = "0x2000427")]
	public class TBControllerSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C338C", Offset = "0x5C338C")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40030BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40030BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TBControllerSpawner <>4__this;

			[Token(Token = "0x170003AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002ACA")]
				[Address(RVA = "0x23A945C", Offset = "0x23A945C", VA = "0x23A945C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002ACC")]
				[Address(RVA = "0x23A94EC", Offset = "0x23A94EC", VA = "0x23A94EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AC7")]
			[Address(RVA = "0x23A91D8", Offset = "0x23A91D8", VA = "0x23A91D8")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002AC8")]
			[Address(RVA = "0x23A9200", Offset = "0x23A9200", VA = "0x23A9200", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AC9")]
			[Address(RVA = "0x23A9204", Offset = "0x23A9204", VA = "0x23A9204", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002ACB")]
			[Address(RVA = "0x23A9464", Offset = "0x23A9464", VA = "0x23A9464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9B60", Offset = "0x5C9B60")]
		[SerializeField]
		private GameObject leftHandController;

		[Token(Token = "0x40023DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject rightHandController;

		[Token(Token = "0x40023DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private GameObject mobile3DOFController;

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x23A914C", Offset = "0x23A914C", VA = "0x23A914C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1E64", Offset = "0x5D1E64")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x23A91F8", Offset = "0x23A91F8", VA = "0x23A91F8")]
		public TBControllerSpawner()
		{
		}
	}
	[Token(Token = "0x2000428")]
	public interface ITBSDKInput
	{
		[Token(Token = "0x6002033")]
		void Initialize();

		[Token(Token = "0x6002034")]
		void Update();

		[Token(Token = "0x6002035")]
		void FixedUpdate();

		[Token(Token = "0x6002036")]
		void RefreshInput(bool needed);

		[Token(Token = "0x6002037")]
		bool GetButton(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002038")]
		bool GetButtonDown(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002039")]
		bool GetButtonUp(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203A")]
		bool GetTouch(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203B")]
		bool GetTouchDown(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203C")]
		bool GetTouchUp(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203D")]
		float GetAxis1D(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203E")]
		Vector2 GetAxis2D(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600203F")]
		bool SetRumble(TBInput.Controller controller, float amount);

		[Token(Token = "0x6002040")]
		bool SetRumble(TBInput.Controller controller, float strength, float frequency);

		[Token(Token = "0x6002041")]
		void StartRumblePulse(TBInput.Controller controller, float strength, float length);

		[Token(Token = "0x6002042")]
		Vector3 GetRawPosition(TBInput.Controller controller);

		[Token(Token = "0x6002043")]
		Quaternion GetRawRotation(TBInput.Controller controller);

		[Token(Token = "0x6002044")]
		Vector3 GetVelocity(TBInput.Controller controller);

		[Token(Token = "0x6002045")]
		Vector3 GetAngularVelocity(TBInput.Controller controller);

		[Token(Token = "0x6002046")]
		Vector3 GetAcceleration(TBInput.Controller controller);

		[Token(Token = "0x6002047")]
		float GetFinger(TBInput.Finger finger, TBInput.Controller controller);

		[Token(Token = "0x6002048")]
		HandTrackingOffsets GetControllerTrackingOffsets(TBInput.Controller controller);

		[Token(Token = "0x6002049")]
		InputDevice GetUnityXRInputDevice(TBInput.Controller controller);

		[Token(Token = "0x600204A")]
		TBInput.Controller GetActiveController();

		[Token(Token = "0x600204B")]
		string GetControllerName(TBInput.Controller controller);

		[Token(Token = "0x600204C")]
		VRController GetControllerModel(TBInput.Controller controller);

		[Token(Token = "0x600204D")]
		bool ControllerHasRumbleSupport(TBInput.Controller controller);

		[Token(Token = "0x600204E")]
		bool SupportsButton(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x600204F")]
		bool SupportsTouch(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002050")]
		bool SupportsAxis1D(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002051")]
		bool SupportsAxis2D(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002052")]
		bool SupportsInputType(TBInput.Button button, TBInput.Controller controller);

		[Token(Token = "0x6002053")]
		bool SupportsFinger(TBInput.Finger finger, TBInput.Controller controller);

		[Token(Token = "0x6002054")]
		TBInput.Mobile3DOFHandedness Get3DOFHandedness();
	}
	[Token(Token = "0x2000429")]
	public abstract class TBSDKInputBase<T> : ITBSDKInput
	{
		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C339C", Offset = "0x5C339C")]
		private sealed class <RefreshInputRoutine>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBSDKInputBase<T> <>4__this;

			[Token(Token = "0x170003AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AD0")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AD2")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002ACD")]
			[DebuggerHidden]
			public <RefreshInputRoutine>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6002ACE")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002ACF")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AD1")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33AC", Offset = "0x5C33AC")]
		private sealed class <RumblePulseRoutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40030BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40030C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40030C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBSDKInputBase<T> <>4__this;

			[Token(Token = "0x40030C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TBInput.Controller controller;

			[Token(Token = "0x40030C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float strength;

			[Token(Token = "0x40030C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float length;

			[Token(Token = "0x40030C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private float <t>5__2;

			[Token(Token = "0x170003AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002AD6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002AD8")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002AD3")]
			[DebuggerHidden]
			public <RumblePulseRoutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002AD4")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002AD5")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002AD7")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40023DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBInput.Controller _activeController;

		[Token(Token = "0x40023DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected bool _usesXInputForGamepads;

		[Token(Token = "0x40023E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBInput.ButtonLookupTable<T> emptyLookupTable;

		[Token(Token = "0x40023E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBControllerBase<T> controller_LHand;

		[Token(Token = "0x40023E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBControllerBase<T> controller_RHand;

		[Token(Token = "0x40023E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBControllerBase<T> controller_3DOF;

		[Token(Token = "0x40023E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBControllerBase<T> controller_Gamepad;

		[Token(Token = "0x40023E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TBControllerBase<T> controller_ClickRemote;

		[Token(Token = "0x40023E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] _fingerButtons;

		[Token(Token = "0x40023E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Coroutine leftRumbleRoutine;

		[Token(Token = "0x40023E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected Coroutine rightRumbleRoutine;

		[Token(Token = "0x6002055")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x6002056")]
		protected void LoadControllers()
		{
		}

		[Token(Token = "0x6002057")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6002058")]
		protected virtual void LoadHandControllers()
		{
		}

		[Token(Token = "0x6002059")]
		protected virtual void Load3DOFControllers()
		{
		}

		[Token(Token = "0x600205A")]
		protected virtual void LoadClickRemotes()
		{
		}

		[Token(Token = "0x600205B")]
		protected virtual void LoadGamepads()
		{
		}

		[Token(Token = "0x600205C")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x600205D")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600205E")]
		public virtual void RefreshInput(bool needed)
		{
		}

		[Token(Token = "0x600205F")]
		public virtual void UpdateRumbleState(TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6002060")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1EDC", Offset = "0x5D1EDC")]
		protected virtual IEnumerator RefreshInputRoutine()
		{
			return null;
		}

		[Token(Token = "0x6002061")]
		public virtual TBInput.Controller GetActiveController()
		{
			return default(TBInput.Controller);
		}

		[Token(Token = "0x6002062")]
		public virtual InputDevice GetUnityXRInputDevice(TBInput.Controller controller)
		{
			return default(InputDevice);
		}

		[Token(Token = "0x6002063")]
		public virtual string GetControllerName(TBInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6002064")]
		public virtual VRController GetControllerModel(TBInput.Controller controller)
		{
			return default(VRController);
		}

		[Token(Token = "0x6002065")]
		protected static List<TBInput.ButtonDef<T>> LoadMappingsForController(TBControllerBase<T> controller)
		{
			return null;
		}

		[Token(Token = "0x6002066")]
		protected TBControllerBase<T> GetControllerForType(TBInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6002067")]
		protected TBInput.ButtonLookupTable<T> GetButtonLookupTableForController(TBInput.Controller controller)
		{
			return default(TBInput.ButtonLookupTable<T>);
		}

		[Token(Token = "0x6002068")]
		protected virtual T[] GetButtonArray(TBInput.Button button, ref TBInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x6002069")]
		public virtual bool GetButtonDown(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206A")]
		public virtual bool GetButtonUp(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206B")]
		public virtual bool GetButton(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206C")]
		public virtual bool GetTouchDown(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206D")]
		public virtual bool GetTouchUp(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206E")]
		public virtual bool GetTouch(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600206F")]
		public virtual float GetAxis1D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x6002070")]
		public virtual Vector2 GetAxis2D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002071")]
		public virtual Vector3 GetRawPosition(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002072")]
		public virtual Quaternion GetRawRotation(TBInput.Controller controller)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002073")]
		public virtual Vector3 GetVelocity(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002074")]
		public virtual Vector3 GetAngularVelocity(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002075")]
		public virtual Vector3 GetAcceleration(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002076")]
		protected virtual void StopRumbleInternal(TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6002077")]
		public virtual bool SetRumble(TBInput.Controller controller, float strength)
		{
			return default(bool);
		}

		[Token(Token = "0x6002078")]
		public virtual bool SetRumble(TBInput.Controller controller, float strength, float frequency)
		{
			return default(bool);
		}

		[Token(Token = "0x6002079")]
		public virtual void StartRumblePulse(TBInput.Controller controller, float strength, float length)
		{
		}

		[Token(Token = "0x600207A")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1F54", Offset = "0x5D1F54")]
		protected virtual IEnumerator RumblePulseRoutine(TBInput.Controller controller, float strength, float length)
		{
			return null;
		}

		[Token(Token = "0x600207B")]
		public virtual float GetFinger(TBInput.Finger finger, TBInput.Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x600207C")]
		public virtual bool ResolveButtonDown(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600207D")]
		public virtual bool ResolveButtonUp(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600207E")]
		public virtual bool ResolveButton(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600207F")]
		public virtual bool ResolveTouchDown(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002080")]
		public virtual bool ResolveTouchUp(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002081")]
		public virtual bool ResolveTouch(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002082")]
		public virtual float ResolveAxis1D(T button, TBInput.Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x6002083")]
		public virtual Vector2 ResolveAxis2D(T button, TBInput.Controller controller)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002084")]
		public virtual Vector3 ResolveRawPosition(TBInput.Controller controller)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002085")]
		public virtual Quaternion ResolveRawRotation(TBInput.Controller controller)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002086")]
		protected virtual void SetActiveController(TBInput.Controller controller)
		{
		}

		[Token(Token = "0x6002087")]
		protected virtual bool ResolveRumble(TBInput.Controller controller, float strength = 0.5f, float frequency = 0.5f)
		{
			return default(bool);
		}

		[Token(Token = "0x6002088")]
		public virtual bool ControllerHasRumbleSupport(TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002089")]
		public virtual bool SupportsInputType(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208A")]
		public virtual bool SupportsButton(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208B")]
		public virtual bool SupportsRawButton(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208C")]
		public virtual bool SupportsTouch(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208D")]
		public virtual bool SupportsRawTouch(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208E")]
		public virtual bool SupportsAxis1D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600208F")]
		public virtual bool SupportsRawAxis1D(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002090")]
		public virtual bool SupportsAxis2D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002091")]
		public virtual bool SupportsRawAxis2D(T button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002092")]
		public virtual bool SupportsFinger(TBInput.Finger finger, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x6002093")]
		public virtual TBInput.Mobile3DOFHandedness Get3DOFHandedness()
		{
			return default(TBInput.Mobile3DOFHandedness);
		}

		[Token(Token = "0x6002094")]
		public virtual HandTrackingOffsets GetControllerTrackingOffsets(TBInput.Controller controller)
		{
			return default(HandTrackingOffsets);
		}

		[Token(Token = "0x6002095")]
		protected TBSDKInputBase()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class TBSDKInputWithXInputBase<T> : TBSDKInputBase<T>
	{
		[Token(Token = "0x40023E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool _useXInputWrapper;

		[Token(Token = "0x6002096")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6002097")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6002098")]
		protected override void LoadGamepads()
		{
		}

		[Token(Token = "0x6002099")]
		protected bool ShouldRouteThroughXInput(TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209A")]
		public override bool GetButtonDown(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209B")]
		public override bool GetButtonUp(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		public override bool GetButton(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209D")]
		public override bool GetTouchDown(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209E")]
		public override bool GetTouchUp(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x600209F")]
		public override bool GetTouch(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A0")]
		public override float GetAxis1D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(float);
		}

		[Token(Token = "0x60020A1")]
		public override Vector2 GetAxis2D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020A2")]
		public override bool ControllerHasRumbleSupport(TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A3")]
		public override bool SupportsInputType(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A4")]
		public override bool SupportsButton(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A5")]
		public override bool SupportsTouch(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A6")]
		public override bool SupportsAxis1D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A7")]
		public override bool SupportsAxis2D(TBInput.Button button, TBInput.Controller controller)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A8")]
		public override string GetControllerName(TBInput.Controller controller)
		{
			return null;
		}

		[Token(Token = "0x60020A9")]
		public TBSDKInputWithXInputBase()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public interface ITBSDKTracking
	{
		[Token(Token = "0x60020AA")]
		void Initialize();

		[Token(Token = "0x60020AB")]
		TBTrackingNodeBase CreateNode(TBNode node);

		[Token(Token = "0x60020AC")]
		bool SupportsNode(TBNode node);

		[Token(Token = "0x60020AD")]
		bool SupportsHMDPositionalTracking();

		[Token(Token = "0x60020AE")]
		bool HasPositionalTrackingForNode(TBNode node);

		[Token(Token = "0x60020AF")]
		void UpdateNodeState(TBTrackingNodeBase node);

		[Token(Token = "0x60020B0")]
		bool HasUserBoundarySystem();

		[Token(Token = "0x60020B1")]
		Vector2 GetPlayspaceDimensions();

		[Token(Token = "0x60020B2")]
		bool IsPointWithinPlayspace(Vector3 point);

		[Token(Token = "0x60020B3")]
		bool IsPointWithinUserBoundary(Vector3 point);
	}
	[Token(Token = "0x200042C")]
	public class TBSDKTrackingBase : ITBSDKTracking
	{
		[Token(Token = "0x40023EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool _initialized;

		[Token(Token = "0x40023EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private List<XRNodeState> _nodeStates;

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x24BF1A4", Offset = "0x24BF1A4", VA = "0x24BF1A4", Slot = "14")]
		public virtual void Initialize()
		{
		}

		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x24BF324", Offset = "0x24BF324", VA = "0x24BF324", Slot = "15")]
		public virtual TBTrackingNodeBase CreateNode(TBNode node)
		{
			return null;
		}

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x24BF3D8", Offset = "0x24BF3D8", VA = "0x24BF3D8", Slot = "16")]
		public virtual bool SupportsNode(TBNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x24BF464", Offset = "0x24BF464", VA = "0x24BF464", Slot = "17")]
		public virtual bool HasPositionalTrackingForNode(TBNode node)
		{
			return default(bool);
		}

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x24BF488", Offset = "0x24BF488", VA = "0x24BF488", Slot = "18")]
		public virtual bool SupportsHMDPositionalTracking()
		{
			return default(bool);
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x24BF490", Offset = "0x24BF490", VA = "0x24BF490", Slot = "19")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x24BF4A0", Offset = "0x24BF4A0", VA = "0x24BF4A0", Slot = "20")]
		protected virtual void UpdateNodeStates()
		{
		}

		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x24BE9F8", Offset = "0x24BE9F8", VA = "0x24BE9F8", Slot = "21")]
		public virtual void UpdateNodeState(TBTrackingNodeBase node)
		{
		}

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x24BF528", Offset = "0x24BF528", VA = "0x24BF528", Slot = "22")]
		public virtual Vector2 GetPlayspaceDimensions()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x24BF5AC", Offset = "0x24BF5AC", VA = "0x24BF5AC", Slot = "23")]
		protected virtual TBTrackingNodeBase AddNode(TBNode node, GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x24BF654", Offset = "0x24BF654", VA = "0x24BF654", Slot = "24")]
		public virtual bool HasUserBoundarySystem()
		{
			return default(bool);
		}

		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x24BF65C", Offset = "0x24BF65C", VA = "0x24BF65C", Slot = "25")]
		public virtual bool IsPointWithinPlayspace(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x24BF664", Offset = "0x24BF664", VA = "0x24BF664", Slot = "26")]
		public virtual bool IsPointWithinUserBoundary(Vector3 point)
		{
			return default(bool);
		}

		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x24BF66C", Offset = "0x24BF66C", VA = "0x24BF66C", Slot = "27")]
		protected virtual bool SupportsHandControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x24BF674", Offset = "0x24BF674", VA = "0x24BF674", Slot = "28")]
		protected virtual bool Supports3DOFController()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x24BF67C", Offset = "0x24BF67C", VA = "0x24BF67C", Slot = "29")]
		protected virtual bool SupportsGamepad()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x24BF684", Offset = "0x24BF684", VA = "0x24BF684", Slot = "30")]
		protected virtual bool SupportsTracker()
		{
			return default(bool);
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x24BC410", Offset = "0x24BC410", VA = "0x24BC410")]
		public TBSDKTrackingBase()
		{
		}
	}
}
namespace DigitalOpus.MB.Core
{
	[Token(Token = "0x200042D")]
	public static class MB_TGAWriter
	{
		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x1663670", Offset = "0x1663670", VA = "0x1663670")]
		public static void Write(Color[] pixels, int width, int height, string path)
		{
		}

		[Token(Token = "0x60020C7")]
		[Address(RVA = "0x16636D4", Offset = "0x16636D4", VA = "0x16636D4")]
		public static void Write(Color[] pixels, int width, int height, Stream output)
		{
		}
	}
	[Token(Token = "0x200042E")]
	public class MB_Utility
	{
		[Token(Token = "0x200067A")]
		public struct MeshAnalysisResult
		{
			[Token(Token = "0x40030C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rect uvRect;

			[Token(Token = "0x40030C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool hasOutOfBoundsUVs;

			[Token(Token = "0x40030C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool hasOverlappingSubmeshVerts;

			[Token(Token = "0x40030C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			public bool hasOverlappingSubmeshTris;

			[Token(Token = "0x40030CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
			public bool hasUVs;

			[Token(Token = "0x40030CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float submeshArea;
		}

		[Token(Token = "0x200067B")]
		private class MB_Triangle
		{
			[Token(Token = "0x40030CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int submeshIdx;

			[Token(Token = "0x40030CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int[] vs;

			[Token(Token = "0x6002AD9")]
			[Address(RVA = "0x21CC688", Offset = "0x21CC688", VA = "0x21CC688")]
			public bool isSame(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002ADA")]
			[Address(RVA = "0x21CC8F4", Offset = "0x21CC8F4", VA = "0x21CC8F4")]
			public bool sharesVerts(MB_Triangle obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002ADB")]
			[Address(RVA = "0x21CC4F4", Offset = "0x21CC4F4", VA = "0x21CC4F4")]
			public void Initialize(int[] ts, int idx, int sIdx)
			{
			}

			[Token(Token = "0x6002ADC")]
			[Address(RVA = "0x21CC480", Offset = "0x21CC480", VA = "0x21CC480")]
			public MB_Triangle()
			{
			}
		}

		[Token(Token = "0x40023EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DO_INTEGRITY_CHECKS;

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x21CA3A4", Offset = "0x21CA3A4", VA = "0x21CA3A4")]
		public static Texture2D createTextureCopy(Texture2D source)
		{
			return null;
		}

		[Token(Token = "0x60020C9")]
		[Address(RVA = "0x21CA4C8", Offset = "0x21CA4C8", VA = "0x21CA4C8")]
		public static bool ArrayBIsSubsetOfA(object[] a, object[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0x21CA58C", Offset = "0x21CA58C", VA = "0x21CA58C")]
		public static Material[] GetGOMaterials(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0x21CAE18", Offset = "0x21CAE18", VA = "0x21CAE18")]
		public static Mesh GetMesh(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60020CC")]
		[Address(RVA = "0x21CAFCC", Offset = "0x21CAFCC", VA = "0x21CAFCC")]
		public static void SetMesh(GameObject go, Mesh m)
		{
		}

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0x21CB188", Offset = "0x21CB188", VA = "0x21CB188")]
		public static Renderer GetRenderer(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0x21CB304", Offset = "0x21CB304", VA = "0x21CB304")]
		public static void DisableRendererInSource(GameObject go)
		{
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0x21CB4B0", Offset = "0x21CB4B0", VA = "0x21CB4B0")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref Rect uvBounds)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0x21CB56C", Offset = "0x21CB56C", VA = "0x21CB56C")]
		public static bool hasOutOfBoundsUVs(Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1, int uvChannel = 0)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0x21CB6FC", Offset = "0x21CB6FC", VA = "0x21CB6FC")]
		public static bool hasOutOfBoundsUVs(Vector2[] uvs, Mesh m, ref MeshAnalysisResult putResultHere, int submeshIndex = -1)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0x21CBCB0", Offset = "0x21CBCB0", VA = "0x21CBCB0")]
		public static void setSolidColor(Texture2D t, Color c)
		{
		}

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0x21CBD94", Offset = "0x21CBD94", VA = "0x21CBD94")]
		public static Texture2D resampleTexture(Texture2D source, int newWidth, int newHeight)
		{
			return null;
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0x21CBF8C", Offset = "0x21CBF8C", VA = "0x21CBF8C")]
		public static bool AreAllSharedMaterialsDistinct(Material[] sharedMaterials)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0x21CC0E8", Offset = "0x21CC0E8", VA = "0x21CC0E8")]
		public static int doSubmeshesShareVertsOrTris(Mesh m, ref MeshAnalysisResult mar)
		{
			return default(int);
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0x21CCD4C", Offset = "0x21CCD4C", VA = "0x21CCD4C")]
		public static bool GetBounds(GameObject go, out Bounds b)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0x21CD104", Offset = "0x21CD104", VA = "0x21CD104")]
		public static void Destroy(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0x21CD1CC", Offset = "0x21CD1CC", VA = "0x21CD1CC")]
		public MB_Utility()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public delegate void ProgressUpdateDelegate(string msg, float progress);
	[Token(Token = "0x2000430")]
	public delegate bool ProgressUpdateCancelableDelegate(string msg, float progress);
	[Token(Token = "0x2000431")]
	public enum MB_ObjsToCombineTypes
	{
		[Token(Token = "0x40023EE")]
		prefabOnly,
		[Token(Token = "0x40023EF")]
		sceneObjOnly,
		[Token(Token = "0x40023F0")]
		dontCare
	}
	[Token(Token = "0x2000432")]
	public enum MB_OutputOptions
	{
		[Token(Token = "0x40023F2")]
		bakeIntoPrefab,
		[Token(Token = "0x40023F3")]
		bakeMeshsInPlace,
		[Token(Token = "0x40023F4")]
		bakeTextureAtlasesOnly,
		[Token(Token = "0x40023F5")]
		bakeIntoSceneObject
	}
	[Token(Token = "0x2000433")]
	public enum MB_RenderType
	{
		[Token(Token = "0x40023F7")]
		meshRenderer,
		[Token(Token = "0x40023F8")]
		skinnedMeshRenderer
	}
	[Token(Token = "0x2000434")]
	public enum MB2_OutputOptions
	{
		[Token(Token = "0x40023FA")]
		bakeIntoSceneObject,
		[Token(Token = "0x40023FB")]
		bakeMeshAssetsInPlace,
		[Token(Token = "0x40023FC")]
		bakeIntoPrefab
	}
	[Token(Token = "0x2000435")]
	public enum MB2_LightmapOptions
	{
		[Token(Token = "0x40023FE")]
		preserve_current_lightmapping,
		[Token(Token = "0x40023FF")]
		ignore_UV2,
		[Token(Token = "0x4002400")]
		copy_UV2_unchanged,
		[Token(Token = "0x4002401")]
		generate_new_UV2_layout,
		[Token(Token = "0x4002402")]
		copy_UV2_unchanged_to_separate_rects
	}
	[Token(Token = "0x2000436")]
	public enum MB2_PackingAlgorithmEnum
	{
		[Token(Token = "0x4002404")]
		UnitysPackTextures,
		[Token(Token = "0x4002405")]
		MeshBakerTexturePacker,
		[Token(Token = "0x4002406")]
		MeshBakerTexturePacker_Fast,
		[Token(Token = "0x4002407")]
		MeshBakerTexturePacker_Horizontal,
		[Token(Token = "0x4002408")]
		MeshBakerTexturePacker_Vertical
	}
	[Token(Token = "0x2000437")]
	public enum MB_TextureTilingTreatment
	{
		[Token(Token = "0x400240A")]
		none,
		[Token(Token = "0x400240B")]
		considerUVs,
		[Token(Token = "0x400240C")]
		edgeToEdgeX,
		[Token(Token = "0x400240D")]
		edgeToEdgeY,
		[Token(Token = "0x400240E")]
		edgeToEdgeXY,
		[Token(Token = "0x400240F")]
		unknown
	}
	[Token(Token = "0x2000438")]
	public enum MB2_ValidationLevel
	{
		[Token(Token = "0x4002411")]
		none,
		[Token(Token = "0x4002412")]
		quick,
		[Token(Token = "0x4002413")]
		robust
	}
	[Token(Token = "0x2000439")]
	public interface MB2_EditorMethodsInterface
	{
		[Token(Token = "0x60020E2")]
		void Clear();

		[Token(Token = "0x60020E3")]
		void RestoreReadFlagsAndFormats(ProgressUpdateDelegate progressInfo);

		[Token(Token = "0x60020E4")]
		void SetReadWriteFlag(Texture2D tx, bool isReadable, bool addToList);

		[Token(Token = "0x60020E5")]
		void AddTextureFormat(Texture2D tx, bool isNormalMap);

		[Token(Token = "0x60020E6")]
		void SaveAtlasToAssetDatabase(Texture2D atlas, ShaderTextureProperty texPropertyName, int atlasNum, Material resMat);

		[Token(Token = "0x60020E7")]
		bool IsNormalMap(Texture2D tx);

		[Token(Token = "0x60020E8")]
		string GetPlatformString();

		[Token(Token = "0x60020E9")]
		void SetTextureSize(Texture2D tx, int size);

		[Token(Token = "0x60020EA")]
		bool IsCompressed(Texture2D tx);

		[Token(Token = "0x60020EB")]
		void CheckBuildSettings(long estimatedAtlasSize);

		[Token(Token = "0x60020EC")]
		bool CheckPrefabTypes(MB_ObjsToCombineTypes prefabType, List<GameObject> gos);

		[Token(Token = "0x60020ED")]
		bool ValidateSkinnedMeshes(List<GameObject> mom);

		[Token(Token = "0x60020EE")]
		void CommitChangesToAssets();

		[Token(Token = "0x60020EF")]
		void OnPreTextureBake();

		[Token(Token = "0x60020F0")]
		void OnPostTextureBake();

		[Token(Token = "0x60020F1")]
		void Destroy(UnityEngine.Object o);
	}
	[Token(Token = "0x200043A")]
	public enum MB2_LogLevel
	{
		[Token(Token = "0x4002415")]
		none,
		[Token(Token = "0x4002416")]
		error,
		[Token(Token = "0x4002417")]
		warn,
		[Token(Token = "0x4002418")]
		info,
		[Token(Token = "0x4002419")]
		debug,
		[Token(Token = "0x400241A")]
		trace
	}
	[Token(Token = "0x200043B")]
	public class MB2_Log
	{
		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFB85E0", Offset = "0xFB85E0", VA = "0xFB85E0")]
		public static void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xFB8878", Offset = "0xFB8878", VA = "0xFB8878")]
		public static string Error(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xFB896C", Offset = "0xFB896C", VA = "0xFB896C")]
		public static string Warn(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xFB8A60", Offset = "0xFB8A60", VA = "0xFB8A60")]
		public static string Info(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xFB8B54", Offset = "0xFB8B54", VA = "0xFB8B54")]
		public static string LogDebug(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xFB8C48", Offset = "0xFB8C48", VA = "0xFB8C48")]
		public static string Trace(string msg, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xFB8D3C", Offset = "0xFB8D3C", VA = "0xFB8D3C")]
		public MB2_Log()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class ObjectLog
	{
		[Token(Token = "0x400241B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int pos;

		[Token(Token = "0x400241C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string[] logMessages;

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0x21CE134", Offset = "0x21CE134", VA = "0x21CE134")]
		private void _CacheLogMessage(string msg)
		{
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0x21CE204", Offset = "0x21CE204", VA = "0x21CE204")]
		public ObjectLog(short bufferSize)
		{
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0x21CE27C", Offset = "0x21CE27C", VA = "0x21CE27C")]
		public void Log(MB2_LogLevel l, string msg, MB2_LogLevel currentThreshold)
		{
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0x21CE2B0", Offset = "0x21CE2B0", VA = "0x21CE2B0")]
		public void Error(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0x21CE2DC", Offset = "0x21CE2DC", VA = "0x21CE2DC")]
		public void Warn(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0x21CE308", Offset = "0x21CE308", VA = "0x21CE308")]
		public void Info(string msg, params object[] args)
		{
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0x21CE334", Offset = "0x21CE334", VA = "0x21CE334")]
		public void LogDebug(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0x21CE360", Offset = "0x21CE360", VA = "0x21CE360")]
		public void Trace(string msg, params object[] args)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0x21CE38C", Offset = "0x21CE38C", VA = "0x21CE38C")]
		public string Dump()
		{
			return null;
		}
	}
	[Token(Token = "0x200043D")]
	public interface MBVersionInterface
	{
		[Token(Token = "0x6002102")]
		string version();

		[Token(Token = "0x6002103")]
		int GetMajorVersion();

		[Token(Token = "0x6002104")]
		int GetMinorVersion();

		[Token(Token = "0x6002105")]
		bool GetActive(GameObject go);

		[Token(Token = "0x6002106")]
		void SetActive(GameObject go, bool isActive);

		[Token(Token = "0x6002107")]
		void SetActiveRecursively(GameObject go, bool isActive);

		[Token(Token = "0x6002108")]
		UnityEngine.Object[] FindSceneObjectsOfType(Type t);

		[Token(Token = "0x6002109")]
		bool IsRunningAndMeshNotReadWriteable(Mesh m);

		[Token(Token = "0x600210A")]
		Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600210B")]
		void MeshClear(Mesh m, bool t);

		[Token(Token = "0x600210C")]
		void MeshAssignUV3(Mesh m, Vector2[] uv3s);

		[Token(Token = "0x600210D")]
		void MeshAssignUV4(Mesh m, Vector2[] uv4s);

		[Token(Token = "0x600210E")]
		Vector4 GetLightmapTilingOffset(Renderer r);

		[Token(Token = "0x600210F")]
		Transform[] GetBones(Renderer r);

		[Token(Token = "0x6002110")]
		void OptimizeMesh(Mesh m);

		[Token(Token = "0x6002111")]
		int GetBlendShapeFrameCount(Mesh m, int shapeIndex);

		[Token(Token = "0x6002112")]
		float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex);

		[Token(Token = "0x6002113")]
		void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x6002114")]
		void ClearBlendShapes(Mesh m);

		[Token(Token = "0x6002115")]
		void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts);

		[Token(Token = "0x6002116")]
		int MaxMeshVertexCount();

		[Token(Token = "0x6002117")]
		void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles);

		[Token(Token = "0x6002118")]
		bool GraphicsUVStartsAtTop();
	}
	[Token(Token = "0x200043E")]
	public class MBVersion
	{
		[Token(Token = "0x400241D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MBVersionInterface _MBVersion;

		[Token(Token = "0x6002119")]
		[Address(RVA = "0x1660AA4", Offset = "0x1660AA4", VA = "0x1660AA4")]
		private static MBVersionInterface _CreateMBVersionConcrete()
		{
			return null;
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0x1660BD8", Offset = "0x1660BD8", VA = "0x1660BD8")]
		public static string version()
		{
			return null;
		}

		[Token(Token = "0x600211B")]
		[Address(RVA = "0x1660CFC", Offset = "0x1660CFC", VA = "0x1660CFC")]
		public static int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600211C")]
		[Address(RVA = "0x1660E20", Offset = "0x1660E20", VA = "0x1660E20")]
		public static int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0x1660F44", Offset = "0x1660F44", VA = "0x1660F44")]
		public static bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600211E")]
		[Address(RVA = "0x1661070", Offset = "0x1661070", VA = "0x1661070")]
		public static void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0x16611AC", Offset = "0x16611AC", VA = "0x16611AC")]
		public static void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x6002120")]
		[Address(RVA = "0x16612E8", Offset = "0x16612E8", VA = "0x16612E8")]
		public static UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0x1661414", Offset = "0x1661414", VA = "0x1661414")]
		public static bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6002122")]
		[Address(RVA = "0x1661540", Offset = "0x1661540", VA = "0x1661540")]
		public static Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0x1661688", Offset = "0x1661688", VA = "0x1661688")]
		public static void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6002124")]
		[Address(RVA = "0x16617C4", Offset = "0x16617C4", VA = "0x16617C4")]
		public static void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0x1661900", Offset = "0x1661900", VA = "0x1661900")]
		public static void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6002126")]
		[Address(RVA = "0x1661A3C", Offset = "0x1661A3C", VA = "0x1661A3C")]
		public static Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1661B78", Offset = "0x1661B78", VA = "0x1661B78")]
		public static Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1661CA4", Offset = "0x1661CA4", VA = "0x1661CA4")]
		public static void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1661DD0", Offset = "0x1661DD0", VA = "0x1661DD0")]
		public static int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x1661F0C", Offset = "0x1661F0C", VA = "0x1661F0C")]
		public static float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1662054", Offset = "0x1662054", VA = "0x1662054")]
		public static void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x16621B0", Offset = "0x16621B0", VA = "0x16621B0")]
		public static void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x16622DC", Offset = "0x16622DC", VA = "0x16622DC")]
		public static void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x1662438", Offset = "0x1662438", VA = "0x1662438")]
		public static int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x166255C", Offset = "0x166255C", VA = "0x166255C")]
		public static void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x16626AC", Offset = "0x16626AC", VA = "0x16626AC")]
		public static bool GraphicsUVStartsAtTop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x16627D0", Offset = "0x16627D0", VA = "0x16627D0")]
		public MBVersion()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043F")]
	public class MB3_AgglomerativeClustering
	{
		[Serializable]
		[Token(Token = "0x200067C")]
		public class ClusterNode
		{
			[Token(Token = "0x40030CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public item_s leaf;

			[Token(Token = "0x40030CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public ClusterNode cha;

			[Token(Token = "0x40030D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ClusterNode chb;

			[Token(Token = "0x40030D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int height;

			[Token(Token = "0x40030D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float distToMergedCentroid;

			[Token(Token = "0x40030D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 centroid;

			[Token(Token = "0x40030D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] leafs;

			[Token(Token = "0x40030D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int idx;

			[Token(Token = "0x40030D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool isUnclustered;

			[Token(Token = "0x6002ADD")]
			[Address(RVA = "0xFC6B84", Offset = "0xFC6B84", VA = "0xFC6B84")]
			public ClusterNode(item_s ii, int index)
			{
			}

			[Token(Token = "0x6002ADE")]
			[Address(RVA = "0xFC73D8", Offset = "0xFC73D8", VA = "0xFC73D8")]
			public ClusterNode(ClusterNode a, ClusterNode b, int index, int h, float dist, ClusterNode[] clusters)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200067D")]
		public class item_s
		{
			[Token(Token = "0x40030D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject go;

			[Token(Token = "0x40030D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 coord;

			[Token(Token = "0x6002ADF")]
			[Address(RVA = "0xFC79B4", Offset = "0xFC79B4", VA = "0xFC79B4")]
			public item_s()
			{
			}
		}

		[Token(Token = "0x200067E")]
		public class ClusterDistance
		{
			[Token(Token = "0x40030D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ClusterNode a;

			[Token(Token = "0x40030DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public ClusterNode b;

			[Token(Token = "0x6002AE0")]
			[Address(RVA = "0xFC775C", Offset = "0xFC775C", VA = "0xFC775C")]
			public ClusterDistance(ClusterNode aa, ClusterNode bb)
			{
			}
		}

		[Token(Token = "0x400241E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<item_s> items;

		[Token(Token = "0x400241F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ClusterNode[] clusters;

		[Token(Token = "0x4002420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool wasCanceled;

		[Token(Token = "0x4002421")]
		private const int MAX_PRIORITY_Q_SIZE = 2048;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0xFC4AB8", Offset = "0xFC4AB8", VA = "0xFC4AB8")]
		private float euclidean_distance(Vector3 a, Vector3 b)
		{
			return default(float);
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0xFC4B6C", Offset = "0xFC4B6C", VA = "0xFC4B6C")]
		public bool agglomerate(ProgressUpdateCancelableDelegate progFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0xFC6C6C", Offset = "0xFC6C6C", VA = "0xFC6C6C")]
		private float _RefillPriorityQWithSome(PriorityQueue<float, ClusterDistance> pq, List<ClusterNode> unclustered, ClusterNode[] clusters, ProgressUpdateCancelableDelegate progFunc)
		{
			return default(float);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0xFC7784", Offset = "0xFC7784", VA = "0xFC7784")]
		public int TestRun(List<GameObject> gos)
		{
			return default(int);
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0xFC79BC", Offset = "0xFC79BC", VA = "0xFC79BC")]
		public static void Main()
		{
		}

		[Token(Token = "0x6002137")]
		public static T NthSmallestElement<T>(List<T> array, int n) where T : IComparable<T>
		{
			return (T)null;
		}

		[Token(Token = "0x6002138")]
		private static List<T> QuickSelectSmallest<T>(List<T> input, int n) where T : IComparable<T>
		{
			return null;
		}

		[Token(Token = "0x6002139")]
		private static int QuickSelectPartition<T>(List<T> array, int startIndex, int endIndex, int pivotIndex) where T : IComparable<T>
		{
			return default(int);
		}

		[Token(Token = "0x600213A")]
		private static void Swap<T>(List<T> array, int index1, int index2)
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0xFC7B28", Offset = "0xFC7B28", VA = "0xFC7B28")]
		public MB3_AgglomerativeClustering()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class MB3_CopyBoneWeights
	{
		[Token(Token = "0x600213C")]
		[Address(RVA = "0xFC7BBC", Offset = "0xFC7BBC", VA = "0xFC7BBC")]
		public static void CopyBoneWeightsFromSeamMeshToOtherMeshes(float radius, Mesh seamMesh, Mesh[] targetMeshes)
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0xFC8A2C", Offset = "0xFC8A2C", VA = "0xFC8A2C")]
		public MB3_CopyBoneWeights()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000441")]
	public abstract class MB3_MeshCombiner
	{
		[Token(Token = "0x200067F")]
		public delegate void GenerateUV2Delegate(Mesh m, float hardAngle, float packMargin);

		[Token(Token = "0x2000680")]
		public class MBBlendShapeKey
		{
			[Token(Token = "0x40030DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int gameObjecID;

			[Token(Token = "0x40030DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int blendShapeIndexInSrc;

			[Token(Token = "0x6002AE5")]
			[Address(RVA = "0x158E0A0", Offset = "0x158E0A0", VA = "0x158E0A0")]
			public MBBlendShapeKey(int srcSkinnedMeshRenderGameObjectID, int blendShapeIndexInSource)
			{
			}

			[Token(Token = "0x6002AE6")]
			[Address(RVA = "0x158E0C8", Offset = "0x158E0C8", VA = "0x158E0C8", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002AE7")]
			[Address(RVA = "0x158E184", Offset = "0x158E184", VA = "0x158E184", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x2000681")]
		public class MBBlendShapeValue
		{
			[Token(Token = "0x40030DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject combinedMeshGameObject;

			[Token(Token = "0x40030DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int blendShapeIndex;

			[Token(Token = "0x6002AE8")]
			[Address(RVA = "0x158E1A0", Offset = "0x158E1A0", VA = "0x158E1A0")]
			public MBBlendShapeValue()
			{
			}
		}

		[Token(Token = "0x4002422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		protected MB2_LogLevel _LOG_LEVEL;

		[Token(Token = "0x4002423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected MB2_ValidationLevel _validationLevel;

		[Token(Token = "0x4002424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected string _name;

		[Token(Token = "0x4002425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x4002426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected GameObject _resultSceneObject;

		[Token(Token = "0x4002427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected Renderer _targetRenderer;

		[Token(Token = "0x4002428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected MB_RenderType _renderType;

		[Token(Token = "0x4002429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected MB2_OutputOptions _outputOption;

		[Token(Token = "0x400242A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected MB2_LightmapOptions _lightmapOption;

		[Token(Token = "0x400242B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected bool _doNorm;

		[Token(Token = "0x400242C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		protected bool _doTan;

		[Token(Token = "0x400242D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		[SerializeField]
		protected bool _doCol;

		[Token(Token = "0x400242E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F")]
		[SerializeField]
		protected bool _doUV;

		[Token(Token = "0x400242F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _doUV3;

		[Token(Token = "0x4002430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		protected bool _doUV4;

		[Token(Token = "0x4002431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		protected bool _doBlendShapes;

		[Token(Token = "0x4002432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		protected bool _recenterVertsToBoundsCenter;

		[Token(Token = "0x4002433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		public bool _optimizeAfterBake;

		[Token(Token = "0x4002434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public float uv2UnwrappingParamsHardAngle;

		[Token(Token = "0x4002435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		public float uv2UnwrappingParamsPackMargin;

		[Token(Token = "0x4002436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected bool _usingTemporaryTextureBakeResult;

		[Token(Token = "0x1700023C")]
		public static bool EVAL_VERSION
		{
			[Token(Token = "0x600213E")]
			[Address(RVA = "0xFCE6C4", Offset = "0xFCE6C4", VA = "0xFCE6C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700023D")]
		public virtual MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x600213F")]
			[Address(RVA = "0xFCE6CC", Offset = "0xFCE6CC", VA = "0xFCE6CC", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x6002140")]
			[Address(RVA = "0xFCE6D4", Offset = "0xFCE6D4", VA = "0xFCE6D4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public virtual MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0xFCE6DC", Offset = "0xFCE6DC", VA = "0xFCE6DC", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x6002142")]
			[Address(RVA = "0xFCE6E4", Offset = "0xFCE6E4", VA = "0xFCE6E4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public string name
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0xFCE6EC", Offset = "0xFCE6EC", VA = "0xFCE6EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002144")]
			[Address(RVA = "0xFCE6F4", Offset = "0xFCE6F4", VA = "0xFCE6F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public virtual MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6002145")]
			[Address(RVA = "0xFCE6FC", Offset = "0xFCE6FC", VA = "0xFCE6FC", Slot = "8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002146")]
			[Address(RVA = "0xFCE704", Offset = "0xFCE704", VA = "0xFCE704", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public virtual GameObject resultSceneObject
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xFCE70C", Offset = "0xFCE70C", VA = "0xFCE70C", Slot = "10")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002148")]
			[Address(RVA = "0xFCE714", Offset = "0xFCE714", VA = "0xFCE714", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public virtual Renderer targetRenderer
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xFCE71C", Offset = "0xFCE71C", VA = "0xFCE71C", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x600214A")]
			[Address(RVA = "0xFCE724", Offset = "0xFCE724", VA = "0xFCE724", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public virtual MB_RenderType renderType
		{
			[Token(Token = "0x600214B")]
			[Address(RVA = "0xFCE84C", Offset = "0xFCE84C", VA = "0xFCE84C", Slot = "14")]
			get
			{
				return default(MB_RenderType);
			}
			[Token(Token = "0x600214C")]
			[Address(RVA = "0xFCE854", Offset = "0xFCE854", VA = "0xFCE854", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public virtual MB2_OutputOptions outputOption
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0xFCE85C", Offset = "0xFCE85C", VA = "0xFCE85C", Slot = "16")]
			get
			{
				return default(MB2_OutputOptions);
			}
			[Token(Token = "0x600214E")]
			[Address(RVA = "0xFCE864", Offset = "0xFCE864", VA = "0xFCE864", Slot = "17")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public virtual MB2_LightmapOptions lightmapOption
		{
			[Token(Token = "0x600214F")]
			[Address(RVA = "0xFCE86C", Offset = "0xFCE86C", VA = "0xFCE86C", Slot = "18")]
			get
			{
				return default(MB2_LightmapOptions);
			}
			[Token(Token = "0x6002150")]
			[Address(RVA = "0xFCE874", Offset = "0xFCE874", VA = "0xFCE874", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public virtual bool doNorm
		{
			[Token(Token = "0x6002151")]
			[Address(RVA = "0xFCE87C", Offset = "0xFCE87C", VA = "0xFCE87C", Slot = "20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002152")]
			[Address(RVA = "0xFCE884", Offset = "0xFCE884", VA = "0xFCE884", Slot = "21")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public virtual bool doTan
		{
			[Token(Token = "0x6002153")]
			[Address(RVA = "0xFCE88C", Offset = "0xFCE88C", VA = "0xFCE88C", Slot = "22")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002154")]
			[Address(RVA = "0xFCE894", Offset = "0xFCE894", VA = "0xFCE894", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x17000248")]
		public virtual bool doCol
		{
			[Token(Token = "0x6002155")]
			[Address(RVA = "0xFCE89C", Offset = "0xFCE89C", VA = "0xFCE89C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002156")]
			[Address(RVA = "0xFCE8A4", Offset = "0xFCE8A4", VA = "0xFCE8A4", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x17000249")]
		public virtual bool doUV
		{
			[Token(Token = "0x6002157")]
			[Address(RVA = "0xFCE8AC", Offset = "0xFCE8AC", VA = "0xFCE8AC", Slot = "26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002158")]
			[Address(RVA = "0xFCE8B4", Offset = "0xFCE8B4", VA = "0xFCE8B4", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x1700024A")]
		public virtual bool doUV1
		{
			[Token(Token = "0x6002159")]
			[Address(RVA = "0xFCE8BC", Offset = "0xFCE8BC", VA = "0xFCE8BC", Slot = "28")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600215A")]
			[Address(RVA = "0xFCE8C4", Offset = "0xFCE8C4", VA = "0xFCE8C4", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700024B")]
		public virtual bool doUV3
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0xFCE8EC", Offset = "0xFCE8EC", VA = "0xFCE8EC", Slot = "31")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600215D")]
			[Address(RVA = "0xFCE8F4", Offset = "0xFCE8F4", VA = "0xFCE8F4", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700024C")]
		public virtual bool doUV4
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0xFCE8FC", Offset = "0xFCE8FC", VA = "0xFCE8FC", Slot = "33")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600215F")]
			[Address(RVA = "0xFCE904", Offset = "0xFCE904", VA = "0xFCE904", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700024D")]
		public virtual bool doBlendShapes
		{
			[Token(Token = "0x6002160")]
			[Address(RVA = "0xFCE90C", Offset = "0xFCE90C", VA = "0xFCE90C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002161")]
			[Address(RVA = "0xFCE914", Offset = "0xFCE914", VA = "0xFCE914", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x1700024E")]
		public virtual bool recenterVertsToBoundsCenter
		{
			[Token(Token = "0x6002162")]
			[Address(RVA = "0xFCE91C", Offset = "0xFCE91C", VA = "0xFCE91C", Slot = "37")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002163")]
			[Address(RVA = "0xFCE924", Offset = "0xFCE924", VA = "0xFCE924", Slot = "38")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool optimizeAfterBake
		{
			[Token(Token = "0x6002164")]
			[Address(RVA = "0xFCE92C", Offset = "0xFCE92C", VA = "0xFCE92C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002165")]
			[Address(RVA = "0xFCE934", Offset = "0xFCE934", VA = "0xFCE934")]
			set
			{
			}
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xFCE8C8", Offset = "0xFCE8C8", VA = "0xFCE8C8", Slot = "30")]
		public virtual bool doUV2()
		{
			return default(bool);
		}

		[Token(Token = "0x6002166")]
		public abstract int GetLightmapIndex();

		[Token(Token = "0x6002167")]
		public abstract void ClearBuffers();

		[Token(Token = "0x6002168")]
		public abstract void ClearMesh();

		[Token(Token = "0x6002169")]
		public abstract void DisposeRuntimeCreated();

		[Token(Token = "0x600216A")]
		public abstract void DestroyMesh();

		[Token(Token = "0x600216B")]
		public abstract void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods);

		[Token(Token = "0x600216C")]
		public abstract List<GameObject> GetObjectsInCombined();

		[Token(Token = "0x600216D")]
		public abstract int GetNumObjectsInCombined();

		[Token(Token = "0x600216E")]
		public abstract int GetNumVerticesFor(GameObject go);

		[Token(Token = "0x600216F")]
		public abstract int GetNumVerticesFor(int instanceID);

		[Token(Token = "0x6002170")]
		public abstract Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap();

		[Token(Token = "0x6002171")]
		[Address(RVA = "0xFCE93C", Offset = "0xFCE93C", VA = "0xFCE93C", Slot = "50")]
		public virtual void Apply()
		{
		}

		[Token(Token = "0x6002172")]
		public abstract void Apply(GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6002173")]
		public abstract void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapeFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod);

		[Token(Token = "0x6002174")]
		public abstract bool UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false);

		[Token(Token = "0x6002175")]
		public abstract bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true);

		[Token(Token = "0x6002176")]
		public abstract bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource);

		[Token(Token = "0x6002177")]
		public abstract bool CombinedMeshContains(GameObject go);

		[Token(Token = "0x6002178")]
		public abstract void UpdateSkinnedMeshApproximateBounds();

		[Token(Token = "0x6002179")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBones();

		[Token(Token = "0x600217A")]
		public abstract void CheckIntegrity();

		[Token(Token = "0x600217B")]
		public abstract void UpdateSkinnedMeshApproximateBoundsFromBounds();

		[Token(Token = "0x600217C")]
		[Address(RVA = "0xFCE950", Offset = "0xFCE950", VA = "0xFCE950")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBonesStatic(Transform[] bs, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xFCEF18", Offset = "0xFCEF18", VA = "0xFCEF18")]
		public static void UpdateSkinnedMeshApproximateBoundsFromBoundsStatic(List<GameObject> objectsInCombined, SkinnedMeshRenderer smr)
		{
		}

		[Token(Token = "0x600217E")]
		[Address(RVA = "0xFCF1DC", Offset = "0xFCF1DC", VA = "0xFCF1DC", Slot = "61")]
		protected virtual bool _CreateTemporaryTextrueBakeResult(GameObject[] gos, List<Material> matsOnTargetRenderer)
		{
			return default(bool);
		}

		[Token(Token = "0x600217F")]
		public abstract List<Material> GetMaterialsOnTargetRenderer();

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xFCF2B8", Offset = "0xFCF2B8", VA = "0xFCF2B8")]
		protected MB3_MeshCombiner()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000442")]
	public class MB3_MeshCombinerSingle : MB3_MeshCombiner
	{
		[Token(Token = "0x2000682")]
		public enum MeshCreationConditions
		{
			[Token(Token = "0x40030E0")]
			NoMesh,
			[Token(Token = "0x40030E1")]
			CreatedInEditor,
			[Token(Token = "0x40030E2")]
			CreatedAtRuntime,
			[Token(Token = "0x40030E3")]
			AssignedByUser
		}

		[Serializable]
		[Token(Token = "0x2000683")]
		public class SerializableIntArray
		{
			[Token(Token = "0x40030E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int[] data;

			[Token(Token = "0x6002AE9")]
			[Address(RVA = "0x15906D8", Offset = "0x15906D8", VA = "0x15906D8")]
			public SerializableIntArray()
			{
			}

			[Token(Token = "0x6002AEA")]
			[Address(RVA = "0x158FB48", Offset = "0x158FB48", VA = "0x158FB48")]
			public SerializableIntArray(int len)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000684")]
		public class MB_DynamicGameObject : IComparable<MB_DynamicGameObject>
		{
			[Token(Token = "0x40030E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int instanceID;

			[Token(Token = "0x40030E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GameObject gameObject;

			[Token(Token = "0x40030E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x40030E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int vertIdx;

			[Token(Token = "0x40030E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blendShapeIdx;

			[Token(Token = "0x40030EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int numVerts;

			[Token(Token = "0x40030EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int numBlendShapes;

			[Token(Token = "0x40030EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int[] indexesOfBonesUsed;

			[Token(Token = "0x40030ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int lightmapIndex;

			[Token(Token = "0x40030EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector4 lightmapTilingOffset;

			[Token(Token = "0x40030EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Vector3 meshSize;

			[Token(Token = "0x40030F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool show;

			[Token(Token = "0x40030F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
			public bool invertTriangles;

			[Token(Token = "0x40030F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public int[] submeshTriIdxs;

			[Token(Token = "0x40030F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public int[] submeshNumTris;

			[Token(Token = "0x40030F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public int[] targetSubmeshIdxs;

			[Token(Token = "0x40030F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Rect[] uvRects;

			[Token(Token = "0x40030F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Rect[] encapsulatingRect;

			[Token(Token = "0x40030F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Rect[] sourceMaterialTiling;

			[Token(Token = "0x40030F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Rect[] obUVRects;

			[Token(Token = "0x40030F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool _beingDeleted;

			[Token(Token = "0x40030FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public int _triangleIdxAdjustment;

			[NonSerialized]
			[Token(Token = "0x40030FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public SerializableIntArray[] _tmpSubmeshTris;

			[NonSerialized]
			[Token(Token = "0x40030FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			public Transform[] _tmpCachedBones;

			[NonSerialized]
			[Token(Token = "0x40030FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Matrix4x4[] _tmpCachedBindposes;

			[NonSerialized]
			[Token(Token = "0x40030FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
			public BoneWeight[] _tmpCachedBoneWeights;

			[NonSerialized]
			[Token(Token = "0x40030FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public int[] _tmpIndexesOfSourceBonesUsed;

			[Token(Token = "0x6002AEB")]
			[Address(RVA = "0x15A8000", Offset = "0x15A8000", VA = "0x15A8000", Slot = "4")]
			public int CompareTo(MB_DynamicGameObject b)
			{
				return default(int);
			}

			[Token(Token = "0x6002AEC")]
			[Address(RVA = "0x1598EA4", Offset = "0x1598EA4", VA = "0x1598EA4")]
			public MB_DynamicGameObject()
			{
			}
		}

		[Token(Token = "0x2000685")]
		public class MeshChannels
		{
			[Token(Token = "0x4003100")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3[] vertices;

			[Token(Token = "0x4003101")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3[] normals;

			[Token(Token = "0x4003102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector4[] tangents;

			[Token(Token = "0x4003103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector2[] uv0raw;

			[Token(Token = "0x4003104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector2[] uv0modified;

			[Token(Token = "0x4003105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector2[] uv2;

			[Token(Token = "0x4003106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector2[] uv3;

			[Token(Token = "0x4003107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2[] uv4;

			[Token(Token = "0x4003108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Color[] colors;

			[Token(Token = "0x4003109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public BoneWeight[] boneWeights;

			[Token(Token = "0x400310A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Matrix4x4[] bindPoses;

			[Token(Token = "0x400310B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int[] triangles;

			[Token(Token = "0x400310C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public MBBlendShape[] blendShapes;

			[Token(Token = "0x6002AED")]
			[Address(RVA = "0x15A802C", Offset = "0x15A802C", VA = "0x15A802C")]
			public MeshChannels()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000686")]
		public class MBBlendShapeFrame
		{
			[Token(Token = "0x400310D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float frameWeight;

			[Token(Token = "0x400310E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3[] vertices;

			[Token(Token = "0x400310F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3[] normals;

			[Token(Token = "0x4003110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3[] tangents;

			[Token(Token = "0x6002AEE")]
			[Address(RVA = "0x15A7FF8", Offset = "0x15A7FF8", VA = "0x15A7FF8")]
			public MBBlendShapeFrame()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000687")]
		public class MBBlendShape
		{
			[Token(Token = "0x4003111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int gameObjectID;

			[Token(Token = "0x4003112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GameObject gameObject;

			[Token(Token = "0x4003113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4003114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int indexInSource;

			[Token(Token = "0x4003115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MBBlendShapeFrame[] frames;

			[Token(Token = "0x6002AEF")]
			[Address(RVA = "0x15A7FF0", Offset = "0x15A7FF0", VA = "0x15A7FF0")]
			public MBBlendShape()
			{
			}
		}

		[Token(Token = "0x2000688")]
		public class MeshChannelsCache
		{
			[Token(Token = "0x4003116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MB3_MeshCombinerSingle mc;

			[Token(Token = "0x4003117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			protected Dictionary<int, MeshChannels> meshID2MeshChannels;

			[Token(Token = "0x4003118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Vector2 _HALF_UV;

			[Token(Token = "0x6002AF0")]
			[Address(RVA = "0x1598DD4", Offset = "0x1598DD4", VA = "0x1598DD4")]
			public MeshChannelsCache(MB3_MeshCombinerSingle mcs)
			{
			}

			[Token(Token = "0x6002AF1")]
			[Address(RVA = "0x159A4F0", Offset = "0x159A4F0", VA = "0x159A4F0")]
			internal Vector3[] GetVertices(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF2")]
			[Address(RVA = "0x159A698", Offset = "0x159A698", VA = "0x159A698")]
			internal Vector3[] GetNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF3")]
			[Address(RVA = "0x159A830", Offset = "0x159A830", VA = "0x159A830")]
			internal Vector4[] GetTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF4")]
			[Address(RVA = "0x1590C20", Offset = "0x1590C20", VA = "0x1590C20")]
			internal Vector2[] GetUv0Raw(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF5")]
			[Address(RVA = "0x15A8774", Offset = "0x15A8774", VA = "0x15A8774")]
			internal Vector2[] GetUv0Modified(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF6")]
			[Address(RVA = "0x159D790", Offset = "0x159D790", VA = "0x159D790")]
			internal Vector2[] GetUv2(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF7")]
			[Address(RVA = "0x159B664", Offset = "0x159B664", VA = "0x159B664")]
			internal Vector2[] GetUv3(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF8")]
			[Address(RVA = "0x159B82C", Offset = "0x159B82C", VA = "0x159B82C")]
			internal Vector2[] GetUv4(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AF9")]
			[Address(RVA = "0x159B9F4", Offset = "0x159B9F4", VA = "0x159B9F4")]
			internal Color[] GetColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AFA")]
			[Address(RVA = "0x15A7618", Offset = "0x15A7618", VA = "0x15A7618")]
			internal Matrix4x4[] GetBindposes(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6002AFB")]
			[Address(RVA = "0x15A3BC0", Offset = "0x15A3BC0", VA = "0x15A3BC0")]
			internal BoneWeight[] GetBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6002AFC")]
			[Address(RVA = "0x15A929C", Offset = "0x15A929C", VA = "0x15A929C")]
			internal int[] GetTriangles(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AFD")]
			[Address(RVA = "0x159BB8C", Offset = "0x159BB8C", VA = "0x159BB8C")]
			internal MBBlendShape[] GetBlendShapes(Mesh m, int gameObjectID)
			{
				return null;
			}

			[Token(Token = "0x6002AFE")]
			[Address(RVA = "0x15A8BC4", Offset = "0x15A8BC4", VA = "0x15A8BC4")]
			private Color[] _getMeshColors(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002AFF")]
			[Address(RVA = "0x15A8034", Offset = "0x15A8034", VA = "0x15A8034")]
			private Vector3[] _getMeshNormals(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002B00")]
			[Address(RVA = "0x15A82A4", Offset = "0x15A82A4", VA = "0x15A82A4")]
			private Vector4[] _getMeshTangents(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002B01")]
			[Address(RVA = "0x15A8538", Offset = "0x15A8538", VA = "0x15A8538")]
			private Vector2[] _getMeshUVs(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002B02")]
			[Address(RVA = "0x15A8900", Offset = "0x15A8900", VA = "0x15A8900")]
			private Vector2[] _getMeshUV2s(Mesh m)
			{
				return null;
			}

			[Token(Token = "0x6002B03")]
			[Address(RVA = "0x15A8E1C", Offset = "0x15A8E1C", VA = "0x15A8E1C")]
			public static Matrix4x4[] _getBindPoses(Renderer r)
			{
				return null;
			}

			[Token(Token = "0x6002B04")]
			[Address(RVA = "0x15A902C", Offset = "0x15A902C", VA = "0x15A902C")]
			public static BoneWeight[] _getBoneWeights(Renderer r, int numVertsInMeshBeingAdded)
			{
				return null;
			}

			[Token(Token = "0x6002B05")]
			[Address(RVA = "0x15A9444", Offset = "0x15A9444", VA = "0x15A9444")]
			private void _generateTangents(int[] triangles, Vector3[] verts, Vector2[] uvs, Vector3[] normals, Vector4[] outTangents)
			{
			}
		}

		[Token(Token = "0x2000689")]
		public struct BoneAndBindpose
		{
			[Token(Token = "0x4003119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform bone;

			[Token(Token = "0x400311A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Matrix4x4 bindPose;

			[Token(Token = "0x6002B06")]
			[Address(RVA = "0x48B33C", Offset = "0x48B33C", VA = "0x48B33C")]
			public BoneAndBindpose(Transform t, Matrix4x4 bp)
			{
			}

			[Token(Token = "0x6002B07")]
			[Address(RVA = "0x48B3B8", Offset = "0x48B3B8", VA = "0x48B3B8", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B08")]
			[Address(RVA = "0x48B3C0", Offset = "0x48B3C0", VA = "0x48B3C0", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33BC", Offset = "0x5C33BC")]
		private sealed class <>c__DisplayClass51_0
		{
			[Token(Token = "0x400311B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject[] _goToAdd;

			[Token(Token = "0x6002B09")]
			[Address(RVA = "0x1598384", Offset = "0x1598384", VA = "0x1598384")]
			public <>c__DisplayClass51_0()
			{
			}
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33CC", Offset = "0x5C33CC")]
		private sealed class <>c__DisplayClass51_1
		{
			[Token(Token = "0x400311C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int i;

			[Token(Token = "0x400311D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass51_0 CS$<>8__locals1;

			[Token(Token = "0x6002B0A")]
			[Address(RVA = "0x1598E9C", Offset = "0x1598E9C", VA = "0x1598E9C")]
			public <>c__DisplayClass51_1()
			{
			}

			[Token(Token = "0x6002B0B")]
			[Address(RVA = "0x15A7C18", Offset = "0x15A7C18", VA = "0x15A7C18")]
			internal bool <_addToCombined>b__0(int o)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4002437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		protected List<GameObject> objectsInCombinedMesh;

		[Token(Token = "0x4002438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private int lightmapIndex;

		[Token(Token = "0x4002439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private List<MB_DynamicGameObject> mbDynamicObjectsInCombinedMesh;

		[Token(Token = "0x400243A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<GameObject, MB_DynamicGameObject> _instance2combined_map;

		[Token(Token = "0x400243B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private Vector3[] verts;

		[Token(Token = "0x400243C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Vector3[] normals;

		[Token(Token = "0x400243D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private Vector4[] tangents;

		[Token(Token = "0x400243E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Vector2[] uvs;

		[Token(Token = "0x400243F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private Vector2[] uv2s;

		[Token(Token = "0x4002440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Vector2[] uv3s;

		[Token(Token = "0x4002441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private Vector2[] uv4s;

		[Token(Token = "0x4002442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Color[] colors;

		[Token(Token = "0x4002443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private Matrix4x4[] bindPoses;

		[Token(Token = "0x4002444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform[] bones;

		[Token(Token = "0x4002445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		internal MBBlendShape[] blendShapes;

		[Token(Token = "0x4002446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		internal MBBlendShape[] blendShapesInCombined;

		[Token(Token = "0x4002447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private SerializableIntArray[] submeshTris;

		[Token(Token = "0x4002448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private MeshCreationConditions _meshBirth;

		[Token(Token = "0x4002449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private Mesh _mesh;

		[Token(Token = "0x400244A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BoneWeight[] boneWeights;

		[Token(Token = "0x400244B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private GameObject[] empty;

		[Token(Token = "0x400244C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int[] emptyIDs;

		[Token(Token = "0x17000250")]
		public override MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6002181")]
			[Address(RVA = "0x158E1A8", Offset = "0x158E1A8", VA = "0x158E1A8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public override MB_RenderType renderType
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0x158E320", Offset = "0x158E320", VA = "0x158E320", Slot = "15")]
			set
			{
			}
		}

		[Token(Token = "0x17000252")]
		public override GameObject resultSceneObject
		{
			[Token(Token = "0x6002183")]
			[Address(RVA = "0x158E404", Offset = "0x158E404", VA = "0x158E404", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6002184")]
		[Address(RVA = "0x158E540", Offset = "0x158E540", VA = "0x158E540")]
		private MB_DynamicGameObject instance2Combined_MapGet(GameObject gameObjectID)
		{
			return null;
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0x158E5C0", Offset = "0x158E5C0", VA = "0x158E5C0")]
		private void instance2Combined_MapAdd(GameObject gameObjectID, MB_DynamicGameObject dgo)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0x158E648", Offset = "0x158E648", VA = "0x158E648")]
		private void instance2Combined_MapRemove(GameObject gameObjectID)
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0x158E6C8", Offset = "0x158E6C8", VA = "0x158E6C8")]
		private bool instance2Combined_MapTryGetValue(GameObject gameObjectID, out MB_DynamicGameObject dgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6002188")]
		[Address(RVA = "0x158E750", Offset = "0x158E750", VA = "0x158E750")]
		private int instance2Combined_MapCount()
		{
			return default(int);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0x158E7C8", Offset = "0x158E7C8", VA = "0x158E7C8")]
		private void instance2Combined_MapClear()
		{
		}

		[Token(Token = "0x600218A")]
		[Address(RVA = "0x158E840", Offset = "0x158E840", VA = "0x158E840")]
		private bool instance2Combined_MapContainsKey(GameObject gameObjectID)
		{
			return default(bool);
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x158E8C0", Offset = "0x158E8C0", VA = "0x158E8C0")]
		private bool InstanceID2DGO(int instanceID, out MB_DynamicGameObject dgoGameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x158E9F4", Offset = "0x158E9F4", VA = "0x158E9F4", Slot = "46")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x158EA6C", Offset = "0x158EA6C", VA = "0x158EA6C", Slot = "45")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x600218E")]
		[Address(RVA = "0x158EB1C", Offset = "0x158EB1C", VA = "0x158EB1C")]
		public Mesh GetMesh()
		{
			return null;
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x158EC48", Offset = "0x158EC48", VA = "0x158EC48")]
		public void SetMesh(Mesh m)
		{
		}

		[Token(Token = "0x6002190")]
		[Address(RVA = "0x158ECE4", Offset = "0x158ECE4", VA = "0x158ECE4")]
		public Transform[] GetBones()
		{
			return null;
		}

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x158ECEC", Offset = "0x158ECEC", VA = "0x158ECEC", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x158ED44", Offset = "0x158ED44", VA = "0x158ED44", Slot = "47")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x158ED8C", Offset = "0x158ED8C", VA = "0x158ED8C", Slot = "48")]
		public override int GetNumVerticesFor(int instanceID)
		{
			return default(int);
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x158EDC0", Offset = "0x158EDC0", VA = "0x158EDC0", Slot = "49")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x158EFF8", Offset = "0x158EFF8", VA = "0x158EFF8")]
		private bool _Initialize(int numResultMats)
		{
			return default(bool);
		}

		[Token(Token = "0x6002196")]
		[Address(RVA = "0x158FBC0", Offset = "0x158FBC0", VA = "0x158FBC0")]
		private bool _collectMaterialTriangles(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map)
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x15906E0", Offset = "0x15906E0", VA = "0x15906E0")]
		private bool _collectOutOfBoundsUVRects2(Mesh m, MB_DynamicGameObject dgo, Material[] sharedMaterials, OrderedDictionary sourceMats2submeshIdx_map, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResults, MeshChannelsCache meshChannelCache)
		{
			return default(bool);
		}

		[Token(Token = "0x6002198")]
		[Address(RVA = "0x1590DB8", Offset = "0x1590DB8", VA = "0x1590DB8")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0x1590FBC", Offset = "0x1590FBC", VA = "0x1590FBC")]
		private bool _validateMeshFlags()
		{
			return default(bool);
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0x1591238", Offset = "0x1591238", VA = "0x1591238")]
		private bool _showHide(GameObject[] goToShow, GameObject[] goToHide)
		{
			return default(bool);
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0x15915F8", Offset = "0x15915F8", VA = "0x15915F8")]
		private bool _addToCombined(GameObject[] goToAdd, int[] goToDelete, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x600219C")]
		[Address(RVA = "0x159A9C8", Offset = "0x159A9C8", VA = "0x159A9C8")]
		private void _copyAndAdjustUVsFromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0x159B2EC", Offset = "0x159B2EC", VA = "0x159B2EC")]
		private void _copyAndAdjustUV2FromMesh(MB_DynamicGameObject dgo, Mesh mesh, int vertsIdx, MeshChannelsCache meshChannelsCache)
		{
		}

		[Token(Token = "0x600219E")]
		[Address(RVA = "0x159D928", Offset = "0x159D928", VA = "0x159D928", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0x159D938", Offset = "0x159D938", VA = "0x159D938", Slot = "58")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0x159DD04", Offset = "0x159DD04", VA = "0x159DD04", Slot = "60")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0x159E104", Offset = "0x159E104", VA = "0x159E104")]
		private int _getNumBones(Renderer r)
		{
			return default(int);
		}

		[Token(Token = "0x60021A2")]
		[Address(RVA = "0x159E260", Offset = "0x159E260", VA = "0x159E260")]
		private Transform[] _getBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0x159E26C", Offset = "0x159E26C", VA = "0x159E26C", Slot = "51")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60021A4")]
		[Address(RVA = "0x159E35C", Offset = "0x159E35C", VA = "0x159E35C", Slot = "63")]
		public virtual void ApplyShowHide()
		{
		}

		[Token(Token = "0x60021A5")]
		[Address(RVA = "0x159F508", Offset = "0x159F508", VA = "0x159F508", Slot = "52")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0x159F1E8", Offset = "0x159F1E8", VA = "0x159F1E8")]
		private int _numNonZeroLengthSubmeshTris(SerializableIntArray[] subTris)
		{
			return default(int);
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0x159F278", Offset = "0x159F278", VA = "0x159F278")]
		private void _updateMaterialsOnTargetRenderer(SerializableIntArray[] subTris, int numNonZeroLengthSubmeshTris)
		{
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0x159EB30", Offset = "0x159EB30", VA = "0x159EB30")]
		public SerializableIntArray[] GetSubmeshTrisWithShowHideApplied()
		{
			return null;
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0x15A1F4C", Offset = "0x15A1F4C", VA = "0x15A1F4C", Slot = "53")]
		public override bool UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0x15A1F98", Offset = "0x15A1F98", VA = "0x15A1F98")]
		private bool _updateGameObjects(GameObject[] gos, bool recalcBounds, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AB")]
		[Address(RVA = "0x15A23A8", Offset = "0x15A23A8", VA = "0x15A23A8")]
		private bool _updateGameObject(GameObject go, bool updateVertices, bool updateNormals, bool updateTangents, bool updateUV, bool updateUV2, bool updateUV3, bool updateUV4, bool updateColors, bool updateSkinningInfo, MeshChannelsCache meshChannelCache, Dictionary<int, MB_Utility.MeshAnalysisResult[]> meshAnalysisResultsCache, OrderedDictionary sourceMats2submeshIdx_map, MB2_TextureBakeResults.Material2AtlasRectangleMapper mat2rect_map)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0x15A3DB8", Offset = "0x15A3DB8", VA = "0x15A3DB8")]
		public bool ShowHideGameObjects(GameObject[] toShow, GameObject[] toHide)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AD")]
		[Address(RVA = "0x15A3EC4", Offset = "0x15A3EC4", VA = "0x15A3EC4", Slot = "54")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0x15A411C", Offset = "0x15A411C", VA = "0x15A411C", Slot = "55")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0x15A49FC", Offset = "0x15A49FC", VA = "0x15A49FC", Slot = "56")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0x15A4A7C", Offset = "0x15A4A7C", VA = "0x15A4A7C", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0x158EBC0", Offset = "0x158EBC0", VA = "0x158EBC0")]
		private Mesh NewMesh()
		{
			return null;
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0x15A4DC4", Offset = "0x15A4DC4", VA = "0x15A4DC4", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x60021B3")]
		[Address(RVA = "0x15A4E8C", Offset = "0x15A4E8C", VA = "0x15A4E8C", Slot = "42")]
		public override void DisposeRuntimeCreated()
		{
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0x15A4F58", Offset = "0x15A4F58", VA = "0x15A4F58", Slot = "43")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x60021B5")]
		[Address(RVA = "0x15A5090", Offset = "0x15A5090", VA = "0x15A5090", Slot = "44")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0x159838C", Offset = "0x159838C", VA = "0x159838C")]
		public bool ValidateTargRendererAndMeshAndResultSceneObj()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0x159880C", Offset = "0x159880C", VA = "0x159880C")]
		private OrderedDictionary BuildSourceMatsToSubmeshIdxMap(int numResultMats)
		{
			return null;
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0x15A521C", Offset = "0x15A521C", VA = "0x15A521C")]
		internal static Renderer BuildSceneHierarchPreBake(MB3_MeshCombinerSingle mom, GameObject root, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
			return null;
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0x15A639C", Offset = "0x15A639C", VA = "0x15A639C")]
		public static void BuildPrefabHierarchy(MB3_MeshCombinerSingle mom, GameObject instantiatedPrefabRoot, Mesh m, bool createNewChild = false, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x60021BA")]
		[Address(RVA = "0x15A5EC4", Offset = "0x15A5EC4", VA = "0x15A5EC4")]
		private static void _ConfigureSceneHierarch(MB3_MeshCombinerSingle mom, GameObject root, MeshRenderer mr, MeshFilter mf, SkinnedMeshRenderer smr, Mesh m, [Optional] GameObject[] objsToBeAdded)
		{
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0x15A48D8", Offset = "0x15A48D8", VA = "0x15A48D8")]
		public void BuildSceneMeshObject([Optional] GameObject[] gos, bool createNewChild = false)
		{
		}

		[Token(Token = "0x60021BC")]
		[Address(RVA = "0x1599AA8", Offset = "0x1599AA8", VA = "0x1599AA8")]
		private bool IsMirrored(Matrix4x4 tm)
		{
			return default(bool);
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0x15A6CBC", Offset = "0x15A6CBC", VA = "0x15A6CBC", Slot = "59")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0x15A1E50", Offset = "0x15A1E50", VA = "0x15A1E50")]
		private void _ZeroArray(Vector3[] arr, int idx, int length)
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0x1598B4C", Offset = "0x1598B4C", VA = "0x1598B4C")]
		private List<MB_DynamicGameObject>[] _buildBoneIdx2dgoMap()
		{
			return null;
		}

		[Token(Token = "0x60021C0")]
		[Address(RVA = "0x1598FB4", Offset = "0x1598FB4", VA = "0x1598FB4")]
		private void _CollectBonesToAddForDGO(MB_DynamicGameObject dgo, Dictionary<Transform, int> bone2idx, HashSet<int> boneIdxsToDelete, HashSet<BoneAndBindpose> bonesToAdd, Renderer r, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0x1599D24", Offset = "0x1599D24", VA = "0x1599D24")]
		private void _CopyBonesWeAreKeepingToNewBonesArrayAndAdjustBWIndexes(HashSet<int> boneIdxsToDeleteHS, HashSet<BoneAndBindpose> bonesToAdd, Transform[] nbones, Matrix4x4[] nbindPoses, BoneWeight[] nboneWeights, int totalDeleteVerts)
		{
		}

		[Token(Token = "0x60021C2")]
		[Address(RVA = "0x159C3DC", Offset = "0x159C3DC", VA = "0x159C3DC")]
		private void _AddBonesToNewBonesArrayAndAdjustBWIndexes(MB_DynamicGameObject dgo, Renderer r, int vertsIdx, Transform[] nbones, BoneWeight[] nboneWeights, MeshChannelsCache meshChannelCache)
		{
		}

		[Token(Token = "0x60021C3")]
		[Address(RVA = "0x159CEB8", Offset = "0x159CEB8", VA = "0x159CEB8")]
		private void _copyUV2unchangedToSeparateRects()
		{
		}

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x15A7880", Offset = "0x15A7880", VA = "0x15A7880", Slot = "62")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x15A7998", Offset = "0x15A7998", VA = "0x15A7998")]
		public MB3_MeshCombinerSingle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000443")]
	public class MB3_MultiMeshCombiner : MB3_MeshCombiner
	{
		[Serializable]
		[Token(Token = "0x200068C")]
		public class CombinedMesh
		{
			[Token(Token = "0x400311E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MB3_MeshCombinerSingle combinedMesh;

			[Token(Token = "0x400311F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int extraSpace;

			[Token(Token = "0x4003120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int numVertsInListToDelete;

			[Token(Token = "0x4003121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int numVertsInListToAdd;

			[Token(Token = "0x4003122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<GameObject> gosToAdd;

			[Token(Token = "0x4003123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public List<int> gosToDelete;

			[Token(Token = "0x4003124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> gosToUpdate;

			[Token(Token = "0x4003125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool isDirty;

			[Token(Token = "0x6002B0C")]
			[Address(RVA = "0x15AEDC0", Offset = "0x15AEDC0", VA = "0x15AEDC0")]
			public CombinedMesh(int maxNumVertsInMesh, GameObject resultSceneObject, MB2_LogLevel ll)
			{
			}

			[Token(Token = "0x6002B0D")]
			[Address(RVA = "0x15B0324", Offset = "0x15B0324", VA = "0x15B0324")]
			public bool isEmpty()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400244D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject[] empty;

		[Token(Token = "0x400244E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int[] emptyIDs;

		[Token(Token = "0x400244F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Dictionary<int, CombinedMesh> obj2MeshCombinerMap;

		[Token(Token = "0x4002450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public List<CombinedMesh> meshCombiners;

		[Token(Token = "0x4002451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private int _maxVertsInMesh;

		[Token(Token = "0x17000253")]
		public override MB2_LogLevel LOG_LEVEL
		{
			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x15A9E14", Offset = "0x15A9E14", VA = "0x15A9E14", Slot = "4")]
			get
			{
				return default(MB2_LogLevel);
			}
			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x15A9E1C", Offset = "0x15A9E1C", VA = "0x15A9E1C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public override MB2_ValidationLevel validationLevel
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x15AA028", Offset = "0x15AA028", VA = "0x15AA028", Slot = "6")]
			get
			{
				return default(MB2_ValidationLevel);
			}
			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x15A9F20", Offset = "0x15A9F20", VA = "0x15A9F20", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000255")]
		public int maxVertsInMesh
		{
			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x15AA030", Offset = "0x15AA030", VA = "0x15AA030")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x15AA038", Offset = "0x15AA038", VA = "0x15AA038")]
			set
			{
			}
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x15AA1C4", Offset = "0x15AA1C4", VA = "0x15AA1C4", Slot = "46")]
		public override int GetNumObjectsInCombined()
		{
			return default(int);
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x15AA23C", Offset = "0x15AA23C", VA = "0x15AA23C", Slot = "47")]
		public override int GetNumVerticesFor(GameObject go)
		{
			return default(int);
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x15AA340", Offset = "0x15AA340", VA = "0x15AA340", Slot = "48")]
		public override int GetNumVerticesFor(int gameObjectID)
		{
			return default(int);
		}

		[Token(Token = "0x60021CF")]
		[Address(RVA = "0x15AA424", Offset = "0x15AA424", VA = "0x15AA424", Slot = "45")]
		public override List<GameObject> GetObjectsInCombined()
		{
			return null;
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x15AA588", Offset = "0x15AA588", VA = "0x15AA588", Slot = "39")]
		public override int GetLightmapIndex()
		{
			return default(int);
		}

		[Token(Token = "0x60021D1")]
		[Address(RVA = "0x15AA67C", Offset = "0x15AA67C", VA = "0x15AA67C", Slot = "56")]
		public override bool CombinedMeshContains(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0x15AA71C", Offset = "0x15AA71C", VA = "0x15AA71C")]
		private bool _validateTextureBakeResults()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0x15AA920", Offset = "0x15AA920", VA = "0x15AA920", Slot = "51")]
		public override void Apply(GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0x15AAAC0", Offset = "0x15AAAC0", VA = "0x15AAAC0", Slot = "52")]
		public override void Apply(bool triangles, bool vertices, bool normals, bool tangents, bool uvs, bool uv2, bool uv3, bool uv4, bool colors, bool bones = false, bool blendShapesFlag = false, [Optional] GenerateUV2Delegate uv2GenerationMethod)
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0x15AACC0", Offset = "0x15AACC0", VA = "0x15AACC0", Slot = "57")]
		public override void UpdateSkinnedMeshApproximateBounds()
		{
		}

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0x15AADB8", Offset = "0x15AADB8", VA = "0x15AADB8", Slot = "58")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBones()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0x15AAEB0", Offset = "0x15AAEB0", VA = "0x15AAEB0", Slot = "60")]
		public override void UpdateSkinnedMeshApproximateBoundsFromBounds()
		{
		}

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0x15AAFA8", Offset = "0x15AAFA8", VA = "0x15AAFA8", Slot = "53")]
		public override bool UpdateGameObjects(GameObject[] gos, bool recalcBounds = true, bool updateVertices = true, bool updateNormals = true, bool updateTangents = true, bool updateUV = false, bool updateUV2 = false, bool updateUV3 = false, bool updateUV4 = false, bool updateColors = false, bool updateSkinningInfo = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0x15AB52C", Offset = "0x15AB52C", VA = "0x15AB52C", Slot = "54")]
		public override bool AddDeleteGameObjects(GameObject[] gos, GameObject[] deleteGOs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0x15AB784", Offset = "0x15AB784", VA = "0x15AB784", Slot = "55")]
		public override bool AddDeleteGameObjectsByID(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0x15ABE24", Offset = "0x15ABE24", VA = "0x15ABE24")]
		private bool _validate(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0x15AC770", Offset = "0x15AC770", VA = "0x15AC770")]
		private void _distributeAmongBakers(GameObject[] gos, int[] deleteGOinstanceIDs)
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0x15AD628", Offset = "0x15AD628", VA = "0x15AD628")]
		private bool _bakeStep1(GameObject[] gos, int[] deleteGOinstanceIDs, bool disableRendererInSource)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0x15AF2DC", Offset = "0x15AF2DC", VA = "0x15AF2DC", Slot = "49")]
		public override Dictionary<MBBlendShapeKey, MBBlendShapeValue> BuildSourceBlendShapeToCombinedIndexMap()
		{
			return null;
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0x15AF66C", Offset = "0x15AF66C", VA = "0x15AF66C", Slot = "40")]
		public override void ClearBuffers()
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0x15AF790", Offset = "0x15AF790", VA = "0x15AF790", Slot = "41")]
		public override void ClearMesh()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0x15AF7A0", Offset = "0x15AF7A0", VA = "0x15AF7A0", Slot = "42")]
		public override void DisposeRuntimeCreated()
		{
		}

		[Token(Token = "0x60021E2")]
		[Address(RVA = "0x15AF898", Offset = "0x15AF898", VA = "0x15AF898", Slot = "43")]
		public override void DestroyMesh()
		{
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0x15AFB7C", Offset = "0x15AFB7C", VA = "0x15AFB7C", Slot = "44")]
		public override void DestroyMeshEditor(MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60021E4")]
		[Address(RVA = "0x15AEF30", Offset = "0x15AEF30", VA = "0x15AEF30")]
		private void _setMBValues(MB3_MeshCombinerSingle targ)
		{
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0x15AFEE4", Offset = "0x15AFEE4", VA = "0x15AFEE4", Slot = "62")]
		public override List<Material> GetMaterialsOnTargetRenderer()
		{
			return null;
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0x15B007C", Offset = "0x15B007C", VA = "0x15B007C", Slot = "59")]
		public override void CheckIntegrity()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0x15B01C0", Offset = "0x15B01C0", VA = "0x15B01C0")]
		public MB3_MultiMeshCombiner()
		{
		}
	}
	[Token(Token = "0x2000444")]
	public class PriorityQueue<TPriority, TValue> : ICollection<KeyValuePair<TPriority, TValue>>, IEnumerable<KeyValuePair<TPriority, TValue>>, IEnumerable
	{
		[Token(Token = "0x4002452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<KeyValuePair<TPriority, TValue>> _baseHeap;

		[Token(Token = "0x4002453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IComparer<TPriority> _comparer;

		[Token(Token = "0x17000256")]
		public bool IsEmpty
		{
			[Token(Token = "0x60021F6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000257")]
		public int Count
		{
			[Token(Token = "0x6002200")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000258")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6002202")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60021E9")]
		public PriorityQueue()
		{
		}

		[Token(Token = "0x60021EA")]
		public PriorityQueue(int capacity)
		{
		}

		[Token(Token = "0x60021EB")]
		public PriorityQueue(int capacity, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60021EC")]
		public PriorityQueue(IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60021ED")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data)
		{
		}

		[Token(Token = "0x60021EE")]
		public PriorityQueue(IEnumerable<KeyValuePair<TPriority, TValue>> data, IComparer<TPriority> comparer)
		{
		}

		[Token(Token = "0x60021EF")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2)
		{
			return null;
		}

		[Token(Token = "0x60021F0")]
		public static PriorityQueue<TPriority, TValue> MergeQueues(PriorityQueue<TPriority, TValue> pq1, PriorityQueue<TPriority, TValue> pq2, IComparer<TPriority> comparer)
		{
			return null;
		}

		[Token(Token = "0x60021F1")]
		public void Enqueue(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x60021F2")]
		public KeyValuePair<TPriority, TValue> Dequeue()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60021F3")]
		public TValue DequeueValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60021F4")]
		public KeyValuePair<TPriority, TValue> Peek()
		{
			return default(KeyValuePair<TPriority, TValue>);
		}

		[Token(Token = "0x60021F5")]
		public TValue PeekValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x60021F7")]
		private void ExchangeElements(int pos1, int pos2)
		{
		}

		[Token(Token = "0x60021F8")]
		private void Insert(TPriority priority, TValue value)
		{
		}

		[Token(Token = "0x60021F9")]
		private int HeapifyFromEndToBeginning(int pos)
		{
			return default(int);
		}

		[Token(Token = "0x60021FA")]
		private void DeleteRoot()
		{
		}

		[Token(Token = "0x60021FB")]
		private void HeapifyFromBeginningToEnd(int pos)
		{
		}

		[Token(Token = "0x60021FC")]
		public void Add(KeyValuePair<TPriority, TValue> item)
		{
		}

		[Token(Token = "0x60021FD")]
		public void Clear()
		{
		}

		[Token(Token = "0x60021FE")]
		public bool Contains(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x60021FF")]
		public bool TryFindValue(TPriority item, out TValue foundVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6002201")]
		public void CopyTo(KeyValuePair<TPriority, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6002203")]
		public bool Remove(KeyValuePair<TPriority, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6002204")]
		public IEnumerator<KeyValuePair<TPriority, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6002205")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}
	}
	[Token(Token = "0x2000445")]
	public struct DVector2
	{
		[Token(Token = "0x4002454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static double epsilon;

		[Token(Token = "0x4002455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4002456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x6002206")]
		[Address(RVA = "0xFB7FA4", Offset = "0xFB7FA4", VA = "0xFB7FA4")]
		public static DVector2 Subtract(DVector2 a, DVector2 b)
		{
			return default(DVector2);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x47FFA4", Offset = "0x47FFA4", VA = "0x47FFA4")]
		public DVector2(double xx, double yy)
		{
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x47FFBC", Offset = "0x47FFBC", VA = "0x47FFBC")]
		public DVector2(DVector2 r)
		{
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x47FFD4", Offset = "0x47FFD4", VA = "0x47FFD4")]
		public Vector2 GetVector2()
		{
			return default(Vector2);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x48000C", Offset = "0x48000C", VA = "0x48000C")]
		public bool IsContainedIn(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x480084", Offset = "0x480084", VA = "0x480084")]
		public bool IsContainedInWithMargin(DRect r)
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x4800CC", Offset = "0x4800CC", VA = "0x4800CC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x4800D4", Offset = "0x4800D4", VA = "0x4800D4")]
		public string ToString(string formatS)
		{
			return null;
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0xFB83B0", Offset = "0xFB83B0", VA = "0xFB83B0")]
		public static double Distance(DVector2 a, DVector2 b)
		{
			return default(double);
		}
	}
	[Token(Token = "0x2000446")]
	public struct DRect
	{
		[Token(Token = "0x4002457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double x;

		[Token(Token = "0x4002458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double y;

		[Token(Token = "0x4002459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double width;

		[Token(Token = "0x400245A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double height;

		[Token(Token = "0x17000259")]
		public DVector2 minD
		{
			[Token(Token = "0x6002216")]
			[Address(RVA = "0x47FE08", Offset = "0x47FE08", VA = "0x47FE08")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x1700025A")]
		public DVector2 maxD
		{
			[Token(Token = "0x6002217")]
			[Address(RVA = "0x47FE18", Offset = "0x47FE18", VA = "0x47FE18")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x1700025B")]
		public Vector2 min
		{
			[Token(Token = "0x6002218")]
			[Address(RVA = "0x47FE30", Offset = "0x47FE30", VA = "0x47FE30")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700025C")]
		public Vector2 max
		{
			[Token(Token = "0x6002219")]
			[Address(RVA = "0x47FE68", Offset = "0x47FE68", VA = "0x47FE68")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700025D")]
		public Vector2 size
		{
			[Token(Token = "0x600221A")]
			[Address(RVA = "0x47FEA8", Offset = "0x47FEA8", VA = "0x47FEA8")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x1700025E")]
		public DVector2 center
		{
			[Token(Token = "0x600221B")]
			[Address(RVA = "0x47FEE0", Offset = "0x47FEE0", VA = "0x47FEE0")]
			get
			{
				return default(DVector2);
			}
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x47FCC8", Offset = "0x47FCC8", VA = "0x47FCC8")]
		public DRect(Rect r)
		{
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x47FCEC", Offset = "0x47FCEC", VA = "0x47FCEC")]
		public DRect(Vector2 o, Vector2 s)
		{
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x47FD20", Offset = "0x47FD20", VA = "0x47FD20")]
		public DRect(DRect r)
		{
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x47FD5C", Offset = "0x47FD5C", VA = "0x47FD5C")]
		public DRect(float xx, float yy, float w, float h)
		{
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x47FD90", Offset = "0x47FD90", VA = "0x47FD90")]
		public DRect(double xx, double yy, double w, double h)
		{
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x47FDB8", Offset = "0x47FDB8", VA = "0x47FDB8")]
		public Rect GetRect()
		{
			return default(Rect);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x47FF08", Offset = "0x47FF08", VA = "0x47FF08", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0xFB7A60", Offset = "0xFB7A60", VA = "0xFB7A60")]
		public static bool operator ==(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0xFB7B38", Offset = "0xFB7B38", VA = "0xFB7B38")]
		public static bool operator !=(DRect a, DRect b)
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x47FF10", Offset = "0x47FF10", VA = "0x47FF10", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x47FF18", Offset = "0x47FF18", VA = "0x47FF18")]
		public void Expand(float amt)
		{
		}

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x47FF54", Offset = "0x47FF54", VA = "0x47FF54")]
		public bool Encloses(DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x47FF9C", Offset = "0x47FF9C", VA = "0x47FF9C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000447")]
	public class MB3_UVTransformUtility
	{
		[Token(Token = "0x6002223")]
		[Address(RVA = "0x165FBD0", Offset = "0x165FBD0", VA = "0x165FBD0")]
		public static void Test()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x16600F4", Offset = "0x16600F4", VA = "0x16600F4")]
		public static float TransformX(DRect r, double x)
		{
			return default(float);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x1641800", Offset = "0x1641800", VA = "0x1641800")]
		public static DRect CombineTransforms(ref DRect r1, ref DRect r2)
		{
			return default(DRect);
		}

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x166011C", Offset = "0x166011C", VA = "0x166011C")]
		public static Rect CombineTransforms(ref Rect r1, ref Rect r2)
		{
			return default(Rect);
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x16417D0", Offset = "0x16417D0", VA = "0x16417D0")]
		public static DRect InverseTransform(ref DRect t)
		{
			return default(DRect);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x164185C", Offset = "0x164185C", VA = "0x164185C")]
		public static DRect GetShiftTransformToFitBinA(ref DRect A, ref DRect B)
		{
			return default(DRect);
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1644A24", Offset = "0x1644A24", VA = "0x1644A24")]
		public static DRect GetEncapsulatingRectShifted(ref DRect uvRect1, ref DRect willBeIn)
		{
			return default(DRect);
		}

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x1660238", Offset = "0x1660238", VA = "0x1660238")]
		public static DRect GetEncapsulatingRect(ref DRect uvRect1, ref DRect uvRect2)
		{
			return default(DRect);
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x1660308", Offset = "0x1660308", VA = "0x1660308")]
		public static bool RectContainsShifted(ref DRect bucket, ref DRect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x16604E4", Offset = "0x16604E4", VA = "0x16604E4")]
		public static bool RectContainsShifted(ref Rect bucket, ref Rect tryFit)
		{
			return default(bool);
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1660850", Offset = "0x1660850", VA = "0x1660850")]
		public static bool LineSegmentContainsShifted(float bucketOffset, float bucketLength, float tryFitOffset, float tryFitLength)
		{
			return default(bool);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1660978", Offset = "0x1660978", VA = "0x1660978")]
		public static bool RectContains(ref DRect bigRect, ref DRect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1660694", Offset = "0x1660694", VA = "0x1660694")]
		public static bool RectContains(ref Rect bigRect, ref Rect smallToTestIfFits)
		{
			return default(bool);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x16600A0", Offset = "0x16600A0", VA = "0x16600A0")]
		public static Vector2 TransformPoint(ref DRect r, Vector2 p)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1660A48", Offset = "0x1660A48", VA = "0x1660A48")]
		public static DVector2 TransformPoint(ref DRect r, DVector2 p)
		{
			return default(DVector2);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1660A9C", Offset = "0x1660A9C", VA = "0x1660A9C")]
		public MB3_UVTransformUtility()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000448")]
	public struct AtlasPadding
	{
		[Token(Token = "0x400245B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int topBottom;

		[Token(Token = "0x400245C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int leftRight;

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x47FCB0", Offset = "0x47FCB0", VA = "0x47FCB0")]
		public AtlasPadding(int p)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x47FCBC", Offset = "0x47FCBC", VA = "0x47FCBC")]
		public AtlasPadding(int px, int py)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000449")]
	public class AtlasPackingResult
	{
		[Token(Token = "0x400245D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int atlasX;

		[Token(Token = "0x400245E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int atlasY;

		[Token(Token = "0x400245F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int usedW;

		[Token(Token = "0x4002460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int usedH;

		[Token(Token = "0x4002461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rect[] rects;

		[Token(Token = "0x4002462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AtlasPadding[] padding;

		[Token(Token = "0x4002463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] srcImgIdxs;

		[Token(Token = "0x4002464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public object data;

		[Token(Token = "0x6002235")]
		[Address(RVA = "0xFB7030", Offset = "0xFB7030", VA = "0xFB7030")]
		public AtlasPackingResult(AtlasPadding[] pds)
		{
		}

		[Token(Token = "0x6002236")]
		[Address(RVA = "0xFB7050", Offset = "0xFB7050", VA = "0xFB7050")]
		public void CalcUsedWidthAndHeight()
		{
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0xFB7378", Offset = "0xFB7378", VA = "0xFB7378", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200044A")]
	public abstract class MB2_TexturePacker
	{
		[Token(Token = "0x200068D")]
		internal enum NodeType
		{
			[Token(Token = "0x4003127")]
			Container,
			[Token(Token = "0x4003128")]
			maxDim,
			[Token(Token = "0x4003129")]
			regular
		}

		[Token(Token = "0x200068E")]
		internal class PixRect
		{
			[Token(Token = "0x400312A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int x;

			[Token(Token = "0x400312B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int y;

			[Token(Token = "0x400312C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int w;

			[Token(Token = "0x400312D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int h;

			[Token(Token = "0x6002B0E")]
			[Address(RVA = "0xFB9AA8", Offset = "0xFB9AA8", VA = "0xFB9AA8")]
			public PixRect()
			{
			}

			[Token(Token = "0x6002B0F")]
			[Address(RVA = "0xFB9AB0", Offset = "0xFB9AB0", VA = "0xFB9AB0")]
			public PixRect(int xx, int yy, int ww, int hh)
			{
			}

			[Token(Token = "0x6002B10")]
			[Address(RVA = "0xFB9AE8", Offset = "0xFB9AE8", VA = "0xFB9AE8", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x200068F")]
		internal class Image
		{
			[Token(Token = "0x400312E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int imgId;

			[Token(Token = "0x400312F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int w;

			[Token(Token = "0x4003130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int h;

			[Token(Token = "0x4003131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int x;

			[Token(Token = "0x4003132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int y;

			[Token(Token = "0x6002B11")]
			[Address(RVA = "0xFB9770", Offset = "0xFB9770", VA = "0xFB9770")]
			public Image(int id, int tw, int th, AtlasPadding padding, int minImageSizeX, int minImageSizeY)
			{
			}

			[Token(Token = "0x6002B12")]
			[Address(RVA = "0xFB9840", Offset = "0xFB9840", VA = "0xFB9840")]
			public Image(Image im)
			{
			}
		}

		[Token(Token = "0x2000690")]
		internal class ImgIDComparer : IComparer<Image>
		{
			[Token(Token = "0x6002B13")]
			[Address(RVA = "0xFB9A44", Offset = "0xFB9A44", VA = "0xFB9A44", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6002B14")]
			[Address(RVA = "0xFB9AA0", Offset = "0xFB9AA0", VA = "0xFB9AA0")]
			public ImgIDComparer()
			{
			}
		}

		[Token(Token = "0x2000691")]
		internal class ImageHeightComparer : IComparer<Image>
		{
			[Token(Token = "0x6002B15")]
			[Address(RVA = "0xFB997C", Offset = "0xFB997C", VA = "0xFB997C", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6002B16")]
			[Address(RVA = "0xFB99D8", Offset = "0xFB99D8", VA = "0xFB99D8")]
			public ImageHeightComparer()
			{
			}
		}

		[Token(Token = "0x2000692")]
		internal class ImageWidthComparer : IComparer<Image>
		{
			[Token(Token = "0x6002B17")]
			[Address(RVA = "0xFB99E0", Offset = "0xFB99E0", VA = "0xFB99E0", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6002B18")]
			[Address(RVA = "0xFB9A3C", Offset = "0xFB9A3C", VA = "0xFB9A3C")]
			public ImageWidthComparer()
			{
			}
		}

		[Token(Token = "0x2000693")]
		internal class ImageAreaComparer : IComparer<Image>
		{
			[Token(Token = "0x6002B19")]
			[Address(RVA = "0xFB98E8", Offset = "0xFB98E8", VA = "0xFB98E8", Slot = "4")]
			public int Compare(Image x, Image y)
			{
				return default(int);
			}

			[Token(Token = "0x6002B1A")]
			[Address(RVA = "0xFB9974", Offset = "0xFB9974", VA = "0xFB9974")]
			public ImageAreaComparer()
			{
			}
		}

		[Token(Token = "0x4002465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x4002466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool atlasMustBePowerOfTwo;

		[Token(Token = "0x6002238")]
		[Address(RVA = "0xFB8D44", Offset = "0xFB8D44", VA = "0xFB8D44")]
		public static int RoundToNearestPositivePowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0xFB8E08", Offset = "0xFB8E08", VA = "0xFB8E08")]
		public static int CeilToNearestPowerOfTwo(int x)
		{
			return default(int);
		}

		[Token(Token = "0x600223A")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding);

		[Token(Token = "0x600223B")]
		public abstract AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas);

		[Token(Token = "0x600223C")]
		[Address(RVA = "0xFB8EC0", Offset = "0xFB8EC0", VA = "0xFB8EC0")]
		internal bool ScaleAtlasToFitMaxDim(Vector2 rootWH, List<Image> images, int maxDimensionX, int maxDimensionY, AtlasPadding padding, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, ref int outW, ref int outH, out float padX, out float padY, out int newMinSizeX, out int newMinSizeY)
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0xFB947C", Offset = "0xFB947C", VA = "0xFB947C")]
		public void normalizeRects(AtlasPackingResult rr, AtlasPadding padding)
		{
		}

		[Token(Token = "0x600223E")]
		[Address(RVA = "0xFB9758", Offset = "0xFB9758", VA = "0xFB9758")]
		protected MB2_TexturePacker()
		{
		}
	}
	[Token(Token = "0x200044B")]
	public class MB2_TexturePackerRegular : MB2_TexturePacker
	{
		[Token(Token = "0x2000694")]
		private class ProbeResult
		{
			[Token(Token = "0x4003133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int w;

			[Token(Token = "0x4003134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int h;

			[Token(Token = "0x4003135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int outW;

			[Token(Token = "0x4003136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int outH;

			[Token(Token = "0x4003137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Node root;

			[Token(Token = "0x4003138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public bool largerOrEqualToMaxDim;

			[Token(Token = "0x4003139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float efficiency;

			[Token(Token = "0x400313A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float squareness;

			[Token(Token = "0x400313B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float totalAtlasArea;

			[Token(Token = "0x400313C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int numAtlases;

			[Token(Token = "0x6002B1B")]
			[Address(RVA = "0xFBF8B0", Offset = "0xFBF8B0", VA = "0xFBF8B0")]
			public void Set(int ww, int hh, int outw, int outh, Node r, bool fits, float e, float sq)
			{
			}

			[Token(Token = "0x6002B1C")]
			[Address(RVA = "0xFC4960", Offset = "0xFC4960", VA = "0xFC4960")]
			public float GetScore(bool doPowerOfTwoScore)
			{
				return default(float);
			}

			[Token(Token = "0x6002B1D")]
			[Address(RVA = "0xFC4A54", Offset = "0xFC4A54", VA = "0xFC4A54")]
			public void PrintTree()
			{
			}

			[Token(Token = "0x6002B1E")]
			[Address(RVA = "0xFC4958", Offset = "0xFC4958", VA = "0xFC4958")]
			public ProbeResult()
			{
			}
		}

		[Token(Token = "0x2000695")]
		internal class Node
		{
			[Token(Token = "0x400313D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal NodeType isFullAtlas;

			[Token(Token = "0x400313E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal Node[] child;

			[Token(Token = "0x400313F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal PixRect r;

			[Token(Token = "0x4003140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal Image img;

			[Token(Token = "0x4003141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ProbeResult bestRoot;

			[Token(Token = "0x6002B1F")]
			[Address(RVA = "0xFBEED0", Offset = "0xFBEED0", VA = "0xFBEED0")]
			internal Node(NodeType rootType)
			{
			}

			[Token(Token = "0x6002B20")]
			[Address(RVA = "0xFC49C0", Offset = "0xFC49C0", VA = "0xFC49C0")]
			private bool isLeaf()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B21")]
			[Address(RVA = "0xFBEF4C", Offset = "0xFBEF4C", VA = "0xFBEF4C")]
			internal Node Insert(Image im, bool handed)
			{
				return null;
			}
		}

		[Token(Token = "0x4002467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ProbeResult bestRoot;

		[Token(Token = "0x4002468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int atlasY;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0xFBDA30", Offset = "0xFBDA30", VA = "0xFBDA30")]
		private static void printTree(Node r, string spc)
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0xFBDE30", Offset = "0xFBDE30", VA = "0xFBDE30")]
		private static void flattenTree(Node r, List<Image> putHere)
		{
		}

		[Token(Token = "0x6002241")]
		[Address(RVA = "0xFBE014", Offset = "0xFBE014", VA = "0xFBE014")]
		private static void drawGizmosNode(Node r)
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0xFBE3F0", Offset = "0xFBE3F0", VA = "0xFBE3F0")]
		private static Texture2D createFilledTex(Color c, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x6002243")]
		[Address(RVA = "0xFBE510", Offset = "0xFBE510", VA = "0xFBE510")]
		public void DrawGizmos()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0xFBE624", Offset = "0xFBE624", VA = "0xFBE624")]
		private bool ProbeSingleAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6002245")]
		[Address(RVA = "0xFBF8E4", Offset = "0xFBF8E4", VA = "0xFBF8E4")]
		private bool ProbeMultiAtlas(Image[] imgsToAdd, int idealAtlasW, int idealAtlasH, float imgArea, int maxAtlasDimX, int maxAtlasDimY, ProbeResult pr)
		{
			return default(bool);
		}

		[Token(Token = "0x6002246")]
		[Address(RVA = "0xFBF688", Offset = "0xFBF688", VA = "0xFBF688")]
		internal void GetExtent(Node r, ref int x, ref int y)
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0xFBFF7C", Offset = "0xFBFF7C", VA = "0xFBFF7C")]
		private int StepWidthHeight(int oldVal, int step, int maxDim)
		{
			return default(int);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0xFBFFAC", Offset = "0xFBFFAC", VA = "0xFBFFAC", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int atPadding)
		{
			return null;
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0xFC00E0", Offset = "0xFC00E0", VA = "0xFC00E0", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0xFC1F50", Offset = "0xFC1F50", VA = "0xFC1F50")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0xFC0350", Offset = "0xFC0350", VA = "0xFC0350")]
		private AtlasPackingResult[] _GetRectsMultiAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0xFC49A8", Offset = "0xFC49A8", VA = "0xFC49A8")]
		public MB2_TexturePackerRegular()
		{
		}
	}
	[Token(Token = "0x200044C")]
	public class MB2_TexturePackerHorizontalVert : MB2_TexturePacker
	{
		[Token(Token = "0x2000696")]
		public enum TexturePackingOrientation
		{
			[Token(Token = "0x4003143")]
			horizontal,
			[Token(Token = "0x4003144")]
			vertical
		}

		[Token(Token = "0x4002469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TexturePackingOrientation packingOrientation;

		[Token(Token = "0x400246A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool stretchImagesToEdges;

		[Token(Token = "0x600224D")]
		[Address(RVA = "0xFB9D54", Offset = "0xFB9D54", VA = "0xFB9D54", Slot = "4")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, int maxDimensionX, int maxDimensionY, int padding)
		{
			return null;
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0xFB9E98", Offset = "0xFB9E98", VA = "0xFB9E98", Slot = "5")]
		public override AtlasPackingResult[] GetRects(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, bool doMultiAtlas)
		{
			return null;
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0xFBC190", Offset = "0xFBC190", VA = "0xFBC190")]
		private AtlasPackingResult _GetRectsSingleAtlas(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionX, int maxDimensionY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY, int recursionDepth)
		{
			return null;
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0xFBA144", Offset = "0xFBA144", VA = "0xFBA144")]
		private AtlasPackingResult[] _GetRectsMultiAtlasVertical(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0xFBB180", Offset = "0xFBB180", VA = "0xFBB180")]
		private AtlasPackingResult[] _GetRectsMultiAtlasHorizontal(List<Vector2> imgWidthHeights, List<AtlasPadding> paddings, int maxDimensionPassedX, int maxDimensionPassedY, int minImageSizeX, int minImageSizeY, int masterImageSizeX, int masterImageSizeY)
		{
			return null;
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0xFBD78C", Offset = "0xFBD78C", VA = "0xFBD78C")]
		private Image PopLargestThatFits(List<Image> images, int spaceRemaining, int maxDim, bool emptyAtlas)
		{
			return null;
		}

		[Token(Token = "0x6002253")]
		[Address(RVA = "0xFBDA14", Offset = "0xFBDA14", VA = "0xFBDA14")]
		public MB2_TexturePackerHorizontalVert()
		{
		}
	}
	[Token(Token = "0x200044D")]
	internal interface MB_ITextureCombinerPacker
	{
		[Token(Token = "0x6002254")]
		IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6002255")]
		AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x6002256")]
		IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);
	}
	[Token(Token = "0x200044E")]
	internal abstract class MB3_TextureCombinerPackerRoot : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33DC", Offset = "0x5C33DC")]
		private sealed class <ConvertTexturesToReadableFormats>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4003147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4003148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x170003B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B25")]
				[Address(RVA = "0x1653258", Offset = "0x1653258", VA = "0x1653258", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B27")]
				[Address(RVA = "0x16532E8", Offset = "0x16532E8", VA = "0x16532E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B22")]
			[Address(RVA = "0x1652E38", Offset = "0x1652E38", VA = "0x1652E38")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6002B23")]
			[Address(RVA = "0x1652E64", Offset = "0x1652E64", VA = "0x1652E64", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B24")]
			[Address(RVA = "0x1652E68", Offset = "0x1652E68", VA = "0x1652E68", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B26")]
			[Address(RVA = "0x1653260", Offset = "0x1653260", VA = "0x1653260", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x164C8AC", Offset = "0x164C8AC", VA = "0x164C8AC")]
		internal static void CreateTemporaryTexturesForAtlas(List<MB_TexSet> distinctMaterialTextures, MB3_TextureCombiner combiner, int propIdx, MB3_TextureCombinerPipeline.TexturePipelineData data)
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x164CD1C", Offset = "0x164CD1C", VA = "0x164CD1C")]
		public static AtlasPackingResult[] CalculateAtlasRectanglesStatic(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0x1652CEC", Offset = "0x1652CEC", VA = "0x1652CEC")]
		public static void MakeProceduralTexturesReadable(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0x1652D78", Offset = "0x1652D78", VA = "0x1652D78", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D1FCC", Offset = "0x5D1FCC")]
		public virtual IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0x1652E58", Offset = "0x1652E58", VA = "0x1652E58", Slot = "8")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x600225C")]
		public abstract IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL);

		[Token(Token = "0x600225D")]
		[Address(RVA = "0x1649AF0", Offset = "0x1649AF0", VA = "0x1649AF0")]
		protected MB3_TextureCombinerPackerRoot()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	public class ShaderTextureProperty
	{
		[Token(Token = "0x400246B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x400246C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool isNormalMap;

		[Token(Token = "0x600225E")]
		[Address(RVA = "0x21CF7DC", Offset = "0x21CF7DC", VA = "0x21CF7DC")]
		public ShaderTextureProperty(string n, bool norm)
		{
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0x21CF804", Offset = "0x21CF804", VA = "0x21CF804", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0x21CF8EC", Offset = "0x21CF8EC", VA = "0x21CF8EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0x21CF8F4", Offset = "0x21CF8F4", VA = "0x21CF8F4")]
		public static string[] GetNames(List<ShaderTextureProperty> props)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000450")]
	public class MB3_TextureCombiner
	{
		[Token(Token = "0x2000698")]
		private class TemporaryTexture
		{
			[Token(Token = "0x400314A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal string property;

			[Token(Token = "0x400314B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal Texture2D texture;

			[Token(Token = "0x6002B28")]
			[Address(RVA = "0x1641404", Offset = "0x1641404", VA = "0x1641404")]
			public TemporaryTexture(string prop, Texture2D tex)
			{
			}
		}

		[Token(Token = "0x2000699")]
		public class CombineTexturesIntoAtlasesCoroutineResult
		{
			[Token(Token = "0x400314C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool success;

			[Token(Token = "0x400314D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public bool isFinished;

			[Token(Token = "0x6002B29")]
			[Address(RVA = "0x16413F4", Offset = "0x16413F4", VA = "0x16413F4")]
			public CombineTexturesIntoAtlasesCoroutineResult()
			{
			}
		}

		[Token(Token = "0x200069A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33EC", Offset = "0x5C33EC")]
		private sealed class <CombineTexturesIntoAtlasesCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400314E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400314F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4003150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CombineTexturesIntoAtlasesCoroutineResult coroutineResult;

			[Token(Token = "0x4003151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float maxTimePerFrame;

			[Token(Token = "0x4003152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4003153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4003154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4003155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Material resultMaterial;

			[Token(Token = "0x4003156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4003157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4003158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public List<AtlasPackingResult> packingResults;

			[Token(Token = "0x400315A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool onlyPackRects;

			[Token(Token = "0x400315B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool splitAtlasWhenPackingIfTooBig;

			[Token(Token = "0x170003B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B2D")]
				[Address(RVA = "0x15B44CC", Offset = "0x15B44CC", VA = "0x15B44CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B2F")]
				[Address(RVA = "0x15B455C", Offset = "0x15B455C", VA = "0x15B455C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B2A")]
			[Address(RVA = "0x15B0F20", Offset = "0x15B0F20", VA = "0x15B0F20")]
			[DebuggerHidden]
			public <CombineTexturesIntoAtlasesCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6002B2B")]
			[Address(RVA = "0x15B41F0", Offset = "0x15B41F0", VA = "0x15B41F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B2C")]
			[Address(RVA = "0x15B41F4", Offset = "0x15B41F4", VA = "0x15B41F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B2E")]
			[Address(RVA = "0x15B44D4", Offset = "0x15B44D4", VA = "0x15B44D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C33FC", Offset = "0x5C33FC")]
		private sealed class <_CombineTexturesIntoAtlases>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400315C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400315D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400315E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400315F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<GameObject> objsToMesh;

			[Token(Token = "0x4003161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4003162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4003163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Material resultMaterial;

			[Token(Token = "0x4003164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<Material> allowedMaterialsFilter;

			[Token(Token = "0x4003165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool onlyPackRects;

			[Token(Token = "0x4003166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
			public bool splitAtlasWhenPackingIfTooBig;

			[Token(Token = "0x4003167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<AtlasPackingResult> atlasPackingResult;

			[Token(Token = "0x4003168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4003169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x170003B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B34")]
				[Address(RVA = "0x15B5374", Offset = "0x15B5374", VA = "0x15B5374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B36")]
				[Address(RVA = "0x15B5404", Offset = "0x15B5404", VA = "0x15B5404", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B30")]
			[Address(RVA = "0x15B0F40", Offset = "0x15B0F40", VA = "0x15B0F40")]
			[DebuggerHidden]
			public <_CombineTexturesIntoAtlases>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6002B31")]
			[Address(RVA = "0x15B4564", Offset = "0x15B4564", VA = "0x15B4564", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B32")]
			[Address(RVA = "0x15B4988", Offset = "0x15B4988", VA = "0x15B4988", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B33")]
			[Address(RVA = "0x15B458C", Offset = "0x15B458C", VA = "0x15B458C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002B35")]
			[Address(RVA = "0x15B537C", Offset = "0x15B537C", VA = "0x15B537C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C340C", Offset = "0x5C340C")]
		private sealed class <__CombineTexturesIntoAtlases>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400316A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400316B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400316C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x400316D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x400316E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x400316F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x4003170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool splitAtlasWhenPackingIfTooBig;

			[Token(Token = "0x4003172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4003173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private StringBuilder <report>5__2;

			[Token(Token = "0x4003174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private MB_ITextureCombinerPacker <texturePaker>5__3;

			[Token(Token = "0x170003B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B3A")]
				[Address(RVA = "0x16408A0", Offset = "0x16408A0", VA = "0x16408A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B3C")]
				[Address(RVA = "0x1640930", Offset = "0x1640930", VA = "0x1640930", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B37")]
			[Address(RVA = "0x163DFA0", Offset = "0x163DFA0", VA = "0x163DFA0")]
			[DebuggerHidden]
			public <__CombineTexturesIntoAtlases>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002B38")]
			[Address(RVA = "0x163DFC0", Offset = "0x163DFC0", VA = "0x163DFC0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B39")]
			[Address(RVA = "0x163DFC4", Offset = "0x163DFC4", VA = "0x163DFC4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B3B")]
			[Address(RVA = "0x16408A8", Offset = "0x16408A8", VA = "0x16408A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200069D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C341C", Offset = "0x5C341C")]
		private sealed class <__RunTexturePackerOnly>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4003177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB3_TextureCombiner <>4__this;

			[Token(Token = "0x4003178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4003179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x400317A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x400317B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool splitAtlasWhenPackingIfTooBig;

			[Token(Token = "0x400317C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public List<AtlasPackingResult> packingResult;

			[Token(Token = "0x170003B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B40")]
				[Address(RVA = "0x164135C", Offset = "0x164135C", VA = "0x164135C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B42")]
				[Address(RVA = "0x16413EC", Offset = "0x16413EC", VA = "0x16413EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B3D")]
			[Address(RVA = "0x1640938", Offset = "0x1640938", VA = "0x1640938")]
			[DebuggerHidden]
			public <__RunTexturePackerOnly>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6002B3E")]
			[Address(RVA = "0x1640958", Offset = "0x1640958", VA = "0x1640958", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B3F")]
			[Address(RVA = "0x164095C", Offset = "0x164095C", VA = "0x164095C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B41")]
			[Address(RVA = "0x1641364", Offset = "0x1641364", VA = "0x1641364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400246D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400246E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		protected MB2_TextureBakeResults _textureBakeResults;

		[Token(Token = "0x400246F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int _atlasPadding;

		[Token(Token = "0x4002470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		protected int _maxAtlasSize;

		[Token(Token = "0x4002471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int _maxAtlasWidthOverride;

		[Token(Token = "0x4002472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int _maxAtlasHeightOverride;

		[Token(Token = "0x4002473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool _useMaxAtlasWidthOverride;

		[Token(Token = "0x4002474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		protected bool _useMaxAtlasHeightOverride;

		[Token(Token = "0x4002475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		protected bool _resizePowerOfTwoTextures;

		[Token(Token = "0x4002476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[SerializeField]
		protected bool _fixOutOfBoundsUVs;

		[Token(Token = "0x4002477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int _maxTilingBakeSize;

		[Token(Token = "0x4002478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected bool _saveAtlasesAsAssets;

		[Token(Token = "0x4002479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected MB2_PackingAlgorithmEnum _packingAlgorithm;

		[Token(Token = "0x400247A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected bool _meshBakerTexturePackerForcePowerOfTwo;

		[Token(Token = "0x400247B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected List<ShaderTextureProperty> _customShaderPropNames;

		[Token(Token = "0x400247C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected bool _normalizeTexelDensity;

		[Token(Token = "0x400247D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		protected bool _considerNonTextureProperties;

		[Token(Token = "0x400247E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private List<TemporaryTexture> _temporaryTextures;

		[Token(Token = "0x400247F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _RunCorutineWithoutPauseIsRunning;

		[Token(Token = "0x1700025F")]
		public MB2_TextureBakeResults textureBakeResults
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0x15B0594", Offset = "0x15B0594", VA = "0x15B0594")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002263")]
			[Address(RVA = "0x15B059C", Offset = "0x15B059C", VA = "0x15B059C")]
			set
			{
			}
		}

		[Token(Token = "0x17000260")]
		public int atlasPadding
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0x15B05A4", Offset = "0x15B05A4", VA = "0x15B05A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002265")]
			[Address(RVA = "0x15B05AC", Offset = "0x15B05AC", VA = "0x15B05AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000261")]
		public int maxAtlasSize
		{
			[Token(Token = "0x6002266")]
			[Address(RVA = "0x15B05B4", Offset = "0x15B05B4", VA = "0x15B05B4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002267")]
			[Address(RVA = "0x15B05BC", Offset = "0x15B05BC", VA = "0x15B05BC")]
			set
			{
			}
		}

		[Token(Token = "0x17000262")]
		public virtual int maxAtlasWidthOverride
		{
			[Token(Token = "0x6002268")]
			[Address(RVA = "0x15B05C4", Offset = "0x15B05C4", VA = "0x15B05C4", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002269")]
			[Address(RVA = "0x15B05CC", Offset = "0x15B05CC", VA = "0x15B05CC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000263")]
		public virtual int maxAtlasHeightOverride
		{
			[Token(Token = "0x600226A")]
			[Address(RVA = "0x15B05D4", Offset = "0x15B05D4", VA = "0x15B05D4", Slot = "6")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600226B")]
			[Address(RVA = "0x15B05DC", Offset = "0x15B05DC", VA = "0x15B05DC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000264")]
		public virtual bool useMaxAtlasWidthOverride
		{
			[Token(Token = "0x600226C")]
			[Address(RVA = "0x15B05E4", Offset = "0x15B05E4", VA = "0x15B05E4", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600226D")]
			[Address(RVA = "0x15B05EC", Offset = "0x15B05EC", VA = "0x15B05EC", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public virtual bool useMaxAtlasHeightOverride
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0x15B05F4", Offset = "0x15B05F4", VA = "0x15B05F4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600226F")]
			[Address(RVA = "0x15B05FC", Offset = "0x15B05FC", VA = "0x15B05FC", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public bool resizePowerOfTwoTextures
		{
			[Token(Token = "0x6002270")]
			[Address(RVA = "0x15B0604", Offset = "0x15B0604", VA = "0x15B0604")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002271")]
			[Address(RVA = "0x15B060C", Offset = "0x15B060C", VA = "0x15B060C")]
			set
			{
			}
		}

		[Token(Token = "0x17000267")]
		public bool fixOutOfBoundsUVs
		{
			[Token(Token = "0x6002272")]
			[Address(RVA = "0x15B0614", Offset = "0x15B0614", VA = "0x15B0614")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002273")]
			[Address(RVA = "0x15B061C", Offset = "0x15B061C", VA = "0x15B061C")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public int maxTilingBakeSize
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0x15B0624", Offset = "0x15B0624", VA = "0x15B0624")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002275")]
			[Address(RVA = "0x15B062C", Offset = "0x15B062C", VA = "0x15B062C")]
			set
			{
			}
		}

		[Token(Token = "0x17000269")]
		public bool saveAtlasesAsAssets
		{
			[Token(Token = "0x6002276")]
			[Address(RVA = "0x15B0634", Offset = "0x15B0634", VA = "0x15B0634")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002277")]
			[Address(RVA = "0x15B063C", Offset = "0x15B063C", VA = "0x15B063C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026A")]
		public MB2_PackingAlgorithmEnum packingAlgorithm
		{
			[Token(Token = "0x6002278")]
			[Address(RVA = "0x15B0644", Offset = "0x15B0644", VA = "0x15B0644")]
			get
			{
				return default(MB2_PackingAlgorithmEnum);
			}
			[Token(Token = "0x6002279")]
			[Address(RVA = "0x15B064C", Offset = "0x15B064C", VA = "0x15B064C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public bool meshBakerTexturePackerForcePowerOfTwo
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0x15B0654", Offset = "0x15B0654", VA = "0x15B0654")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600227B")]
			[Address(RVA = "0x15B065C", Offset = "0x15B065C", VA = "0x15B065C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public List<ShaderTextureProperty> customShaderPropNames
		{
			[Token(Token = "0x600227C")]
			[Address(RVA = "0x15B0664", Offset = "0x15B0664", VA = "0x15B0664")]
			get
			{
				return null;
			}
			[Token(Token = "0x600227D")]
			[Address(RVA = "0x15B066C", Offset = "0x15B066C", VA = "0x15B066C")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public bool considerNonTextureProperties
		{
			[Token(Token = "0x600227E")]
			[Address(RVA = "0x15B0674", Offset = "0x15B0674", VA = "0x15B0674")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600227F")]
			[Address(RVA = "0x15B067C", Offset = "0x15B067C", VA = "0x15B067C")]
			set
			{
			}
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x15B0684", Offset = "0x15B0684", VA = "0x15B0684")]
		public static void RunCorutineWithoutPause(IEnumerator cor, int recursionDepth)
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x15B0AC0", Offset = "0x15B0AC0", VA = "0x15B0AC0")]
		public bool CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false, bool splitAtlasWhenPackingIfTooBig = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6002282")]
		[Address(RVA = "0x15B0D68", Offset = "0x15B0D68", VA = "0x15B0D68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2044", Offset = "0x5D2044")]
		public IEnumerator CombineTexturesIntoAtlasesCoroutine(ProgressUpdateDelegate progressInfo, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, [Optional] MB2_EditorMethodsInterface textureEditorMethods, [Optional] CombineTexturesIntoAtlasesCoroutineResult coroutineResult, float maxTimePerFrame = 0.01f, [Optional] List<AtlasPackingResult> packingResults, bool onlyPackRects = false, bool splitAtlasWhenPackingIfTooBig = false)
		{
			return null;
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x15B0BD4", Offset = "0x15B0BD4", VA = "0x15B0BD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D20BC", Offset = "0x5D20BC")]
		private IEnumerator _CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, Material resultMaterial, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> atlasPackingResult, bool onlyPackRects, bool splitAtlasWhenPackingIfTooBig)
		{
			return null;
		}

		[Token(Token = "0x6002284")]
		[Address(RVA = "0x15B0F60", Offset = "0x15B0F60", VA = "0x15B0F60")]
		private MB3_TextureCombinerPipeline.TexturePipelineData LoadPipelineData(Material resultMaterial, List<ShaderTextureProperty> texPropertyNames, List<GameObject> objsToMesh, List<Material> allowedMaterialsFilter, List<MB_TexSet> distinctMaterialTextures)
		{
			return null;
		}

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x15B111C", Offset = "0x15B111C", VA = "0x15B111C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2134", Offset = "0x5D2134")]
		private IEnumerator __CombineTexturesIntoAtlases(ProgressUpdateDelegate progressInfo, CombineTexturesIntoAtlasesCoroutineResult result, MB_AtlasesAndRects resultAtlasesAndRects, MB3_TextureCombinerPipeline.TexturePipelineData data, bool splitAtlasWhenPackingIfTooBig, MB2_EditorMethodsInterface textureEditorMethods)
		{
			return null;
		}

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x15B1240", Offset = "0x15B1240", VA = "0x15B1240")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D21AC", Offset = "0x5D21AC")]
		private IEnumerator __RunTexturePackerOnly(CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, bool splitAtlasWhenPackingIfTooBig, MB2_EditorMethodsInterface textureEditorMethods, List<AtlasPackingResult> packingResult)
		{
			return null;
		}

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x15B1344", Offset = "0x15B1344", VA = "0x15B1344")]
		internal int _getNumTemporaryTextures()
		{
			return default(int);
		}

		[Token(Token = "0x6002288")]
		[Address(RVA = "0x15B13BC", Offset = "0x15B13BC", VA = "0x15B13BC")]
		public Texture2D _createTemporaryTexture(string propertyName, int w, int h, TextureFormat texFormat, bool mipMaps)
		{
			return null;
		}

		[Token(Token = "0x6002289")]
		[Address(RVA = "0x15B15C4", Offset = "0x15B15C4", VA = "0x15B15C4")]
		internal Texture2D _createTextureCopy(string propertyName, Texture2D t)
		{
			return null;
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0x15B17E0", Offset = "0x15B17E0", VA = "0x15B17E0")]
		internal Texture2D _resizeTexture(string propertyName, Texture2D t, int w, int h)
		{
			return null;
		}

		[Token(Token = "0x600228B")]
		[Address(RVA = "0x15B19A4", Offset = "0x15B19A4", VA = "0x15B19A4")]
		internal void _destroyAllTemporaryTextures()
		{
		}

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x15B1B94", Offset = "0x15B1B94", VA = "0x15B1B94")]
		internal void _destroyTemporaryTextures(string propertyName)
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x15B2088", Offset = "0x15B2088", VA = "0x15B2088")]
		public void _restoreProceduralMaterials()
		{
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x15B208C", Offset = "0x15B208C", VA = "0x15B208C")]
		public void SuggestTreatment(List<GameObject> objsToMesh, Material[] resultMaterials, List<ShaderTextureProperty> _customShaderPropNames)
		{
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x15B3FB4", Offset = "0x15B3FB4", VA = "0x15B3FB4")]
		private string PrintList(List<GameObject> gos)
		{
			return null;
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x15B40F0", Offset = "0x15B40F0", VA = "0x15B40F0")]
		public MB3_TextureCombiner()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class MeshBakerMaterialTexture
	{
		[Token(Token = "0x4002480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Texture2D _t;

		[Token(Token = "0x4002481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float texelDensity;

		[Token(Token = "0x4002482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool readyToBuildAtlases;

		[Token(Token = "0x4002483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private DRect encapsulatingSamplingRect;

		[Token(Token = "0x4002484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9F5C", Offset = "0x5C9F5C")]
		private DRect <matTilingRect>k__BackingField;

		[Token(Token = "0x1700026E")]
		public Texture2D t
		{
			[Token(Token = "0x6002292")]
			[Address(RVA = "0x21CD8C4", Offset = "0x21CD8C4", VA = "0x21CD8C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700026F")]
		public DRect matTilingRect
		{
			[Token(Token = "0x6002293")]
			[Address(RVA = "0x21CA388", Offset = "0x21CA388", VA = "0x21CA388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2224", Offset = "0x5D2224")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x6002294")]
			[Address(RVA = "0x21CD8CC", Offset = "0x21CD8CC", VA = "0x21CD8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2234", Offset = "0x5D2234")]
			private set
			{
			}
		}

		[Token(Token = "0x17000270")]
		public bool isNull
		{
			[Token(Token = "0x600229B")]
			[Address(RVA = "0x21CDD10", Offset = "0x21CDD10", VA = "0x21CDD10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000271")]
		public int width
		{
			[Token(Token = "0x600229C")]
			[Address(RVA = "0x21CDD9C", Offset = "0x21CDD9C", VA = "0x21CDD9C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000272")]
		public int height
		{
			[Token(Token = "0x600229D")]
			[Address(RVA = "0x21CDEB0", Offset = "0x21CDEB0", VA = "0x21CDEB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x21CD910", Offset = "0x21CD910", VA = "0x21CD910")]
		public MeshBakerMaterialTexture()
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x21CD918", Offset = "0x21CD918", VA = "0x21CD918")]
		public MeshBakerMaterialTexture(Texture tx)
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x21CDA3C", Offset = "0x21CDA3C", VA = "0x21CDA3C")]
		public MeshBakerMaterialTexture(Texture tx, Vector2 matTilingOffset, Vector2 matTilingScale, float texelDens)
		{
		}

		[Token(Token = "0x6002298")]
		[Address(RVA = "0x21C9998", Offset = "0x21C9998", VA = "0x21C9998")]
		public DRect GetEncapsulatingSamplingRect()
		{
			return default(DRect);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x21C99B4", Offset = "0x21C99B4", VA = "0x21C99B4")]
		public void SetEncapsulatingSamplingRect(MB_TexSet ts, DRect r)
		{
		}

		[Token(Token = "0x600229A")]
		[Address(RVA = "0x21CDBDC", Offset = "0x21CDBDC", VA = "0x21CDBDC")]
		public Texture2D GetTexture2D()
		{
			return null;
		}

		[Token(Token = "0x600229E")]
		[Address(RVA = "0x21CDFC4", Offset = "0x21CDFC4", VA = "0x21CDFC4")]
		public string GetTexName()
		{
			return null;
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x21CE08C", Offset = "0x21CE08C", VA = "0x21CE08C")]
		public bool AreTexturesEqual(MeshBakerMaterialTexture b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000452")]
	public class MatAndTransformToMerged
	{
		[Token(Token = "0x4002485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material mat;

		[Token(Token = "0x4002486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9F6C", Offset = "0x5C9F6C")]
		private DRect <obUVRectIfTilingSame>k__BackingField;

		[Token(Token = "0x4002487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9F7C", Offset = "0x5C9F7C")]
		private DRect <samplingRectMatAndUVTiling>k__BackingField;

		[Token(Token = "0x4002488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9F8C", Offset = "0x5C9F8C")]
		private DRect <materialTiling>k__BackingField;

		[Token(Token = "0x4002489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string objName;

		[Token(Token = "0x17000273")]
		public DRect obUVRectIfTilingSame
		{
			[Token(Token = "0x60022A1")]
			[Address(RVA = "0x21CD1D8", Offset = "0x21CD1D8", VA = "0x21CD1D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2244", Offset = "0x5D2244")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60022A2")]
			[Address(RVA = "0x21CD1F4", Offset = "0x21CD1F4", VA = "0x21CD1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2254", Offset = "0x5D2254")]
			private set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public DRect samplingRectMatAndUVTiling
		{
			[Token(Token = "0x60022A3")]
			[Address(RVA = "0x21CD238", Offset = "0x21CD238", VA = "0x21CD238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2264", Offset = "0x5D2264")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x21CD254", Offset = "0x21CD254", VA = "0x21CD254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2274", Offset = "0x5D2274")]
			private set
			{
			}
		}

		[Token(Token = "0x17000275")]
		public DRect materialTiling
		{
			[Token(Token = "0x60022A5")]
			[Address(RVA = "0x21C9B00", Offset = "0x21C9B00", VA = "0x21C9B00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2284", Offset = "0x5D2284")]
			get
			{
				return default(DRect);
			}
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x21CD298", Offset = "0x21CD298", VA = "0x21CD298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2294", Offset = "0x5D2294")]
			private set
			{
			}
		}

		[Token(Token = "0x60022A7")]
		[Address(RVA = "0x21CD2DC", Offset = "0x21CD2DC", VA = "0x21CD2DC")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x60022A8")]
		[Address(RVA = "0x21CD400", Offset = "0x21CD400", VA = "0x21CD400")]
		public MatAndTransformToMerged(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x60022A9")]
		[Address(RVA = "0x21CD350", Offset = "0x21CD350", VA = "0x21CD350")]
		private void _init(DRect obUVrect, bool fixOutOfBoundsUVs, Material m)
		{
		}

		[Token(Token = "0x60022AA")]
		[Address(RVA = "0x21CD470", Offset = "0x21CD470", VA = "0x21CD470", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x21CD5F4", Offset = "0x21CD5F4", VA = "0x21CD5F4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x21CD6A0", Offset = "0x21CD6A0", VA = "0x21CD6A0")]
		public string GetMaterialName()
		{
			return null;
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x21CD790", Offset = "0x21CD790", VA = "0x21CD790")]
		public void AssignInitialValuesForMaterialTilingAndSamplingRectMatAndUVTiling(bool allTexturesUseSameMatTiling, DRect matTiling)
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class MatsAndGOs
	{
		[Token(Token = "0x400248A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<MatAndTransformToMerged> mats;

		[Token(Token = "0x400248B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<GameObject> gos;

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x21CD8BC", Offset = "0x21CD8BC", VA = "0x21CD8BC")]
		public MatsAndGOs()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class MB_TexSet
	{
		[Token(Token = "0x200069E")]
		private interface PipelineVariation
		{
			[Token(Token = "0x6002B43")]
			void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect);

			[Token(Token = "0x6002B44")]
			void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment);

			[Token(Token = "0x6002B45")]
			Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex);

			[Token(Token = "0x6002B46")]
			void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props);
		}

		[Token(Token = "0x200069F")]
		private class PipelineVariationAllTexturesUseSameMatTiling : PipelineVariation
		{
			[Token(Token = "0x400317D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MB_TexSet texSet;

			[Token(Token = "0x6002B47")]
			[Address(RVA = "0x21C9500", Offset = "0x21C9500", VA = "0x21C9500")]
			public PipelineVariationAllTexturesUseSameMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6002B48")]
			[Address(RVA = "0x21C9520", Offset = "0x21C9520", VA = "0x21C9520", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x6002B49")]
			[Address(RVA = "0x21C9698", Offset = "0x21C9698", VA = "0x21C9698", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x6002B4A")]
			[Address(RVA = "0x21C99F8", Offset = "0x21C99F8", VA = "0x21C99F8", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x6002B4B")]
			[Address(RVA = "0x21C9B1C", Offset = "0x21C9B1C", VA = "0x21C9B1C", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x20006A0")]
		private class PipelineVariationSomeTexturesUseDifferentMatTiling : PipelineVariation
		{
			[Token(Token = "0x400317E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MB_TexSet texSet;

			[Token(Token = "0x6002B4C")]
			[Address(RVA = "0x21C9B20", Offset = "0x21C9B20", VA = "0x21C9B20")]
			public PipelineVariationSomeTexturesUseDifferentMatTiling(MB_TexSet ts)
			{
			}

			[Token(Token = "0x6002B4D")]
			[Address(RVA = "0x21C9B40", Offset = "0x21C9B40", VA = "0x21C9B40", Slot = "4")]
			public void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
			{
			}

			[Token(Token = "0x6002B4E")]
			[Address(RVA = "0x21C9CF0", Offset = "0x21C9CF0", VA = "0x21C9CF0", Slot = "5")]
			public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
			{
			}

			[Token(Token = "0x6002B4F")]
			[Address(RVA = "0x21C9FF0", Offset = "0x21C9FF0", VA = "0x21C9FF0", Slot = "6")]
			public Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
			{
				return default(Rect);
			}

			[Token(Token = "0x6002B50")]
			[Address(RVA = "0x21CA028", Offset = "0x21CA028", VA = "0x21CA028", Slot = "7")]
			public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
			{
			}
		}

		[Token(Token = "0x400248C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public MeshBakerMaterialTexture[] ts;

		[Token(Token = "0x400248D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public MatsAndGOs matsAndGOs;

		[Token(Token = "0x400248E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9F9C", Offset = "0x5C9F9C")]
		private bool <allTexturesUseSameMatTiling>k__BackingField;

		[Token(Token = "0x400248F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FAC", Offset = "0x5C9FAC")]
		private bool <thisIsOnlyTexSetInAtlas>k__BackingField;

		[Token(Token = "0x4002490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FBC", Offset = "0x5C9FBC")]
		private MB_TextureTilingTreatment <tilingTreatment>k__BackingField;

		[Token(Token = "0x4002491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FCC", Offset = "0x5C9FCC")]
		private Vector2 <obUVoffset>k__BackingField;

		[Token(Token = "0x4002492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C9FDC", Offset = "0x5C9FDC")]
		private Vector2 <obUVscale>k__BackingField;

		[Token(Token = "0x4002493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int idealWidth;

		[Token(Token = "0x4002494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int idealHeight;

		[Token(Token = "0x4002495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PipelineVariation pipelineVariation;

		[Token(Token = "0x17000276")]
		public bool allTexturesUseSameMatTiling
		{
			[Token(Token = "0x60022AF")]
			[Address(RVA = "0x1645AB0", Offset = "0x1645AB0", VA = "0x1645AB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22A4", Offset = "0x5D22A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022B0")]
			[Address(RVA = "0x1663C24", Offset = "0x1663C24", VA = "0x1663C24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22B4", Offset = "0x5D22B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000277")]
		public bool thisIsOnlyTexSetInAtlas
		{
			[Token(Token = "0x60022B1")]
			[Address(RVA = "0x165FB20", Offset = "0x165FB20", VA = "0x165FB20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22C4", Offset = "0x5D22C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x1663C2C", Offset = "0x1663C2C", VA = "0x1663C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22D4", Offset = "0x5D22D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000278")]
		public MB_TextureTilingTreatment tilingTreatment
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x1645AB8", Offset = "0x1645AB8", VA = "0x1645AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22E4", Offset = "0x5D22E4")]
			get
			{
				return default(MB_TextureTilingTreatment);
			}
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x1663C34", Offset = "0x1663C34", VA = "0x1663C34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D22F4", Offset = "0x5D22F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector2 obUVoffset
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x16562DC", Offset = "0x16562DC", VA = "0x16562DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2304", Offset = "0x5D2304")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60022B6")]
			[Address(RVA = "0x1663C3C", Offset = "0x1663C3C", VA = "0x1663C3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2314", Offset = "0x5D2314")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Vector2 obUVscale
		{
			[Token(Token = "0x60022B7")]
			[Address(RVA = "0x16562F0", Offset = "0x16562F0", VA = "0x16562F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2324", Offset = "0x5D2324")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x60022B8")]
			[Address(RVA = "0x1663C48", Offset = "0x1663C48", VA = "0x1663C48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D2334", Offset = "0x5D2334")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027B")]
		internal DRect obUVrect
		{
			[Token(Token = "0x60022B9")]
			[Address(RVA = "0x1663C54", Offset = "0x1663C54", VA = "0x1663C54")]
			get
			{
				return default(DRect);
			}
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x165E22C", Offset = "0x165E22C", VA = "0x165E22C")]
		public MB_TexSet(MeshBakerMaterialTexture[] tss, Vector2 uvOffset, Vector2 uvScale, MB_TextureTilingTreatment treatment)
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x1659088", Offset = "0x1659088", VA = "0x1659088")]
		internal bool IsEqual(object obj, bool fixOutOfBoundsUVs, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60022BC")]
		[Address(RVA = "0x16507DC", Offset = "0x16507DC", VA = "0x16507DC")]
		public Vector2 GetMaxRawTextureHeightWidth()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60022BD")]
		[Address(RVA = "0x1663C98", Offset = "0x1663C98", VA = "0x1663C98")]
		private Rect GetEncapsulatingSamplingRectIfTilingSame()
		{
			return default(Rect);
		}

		[Token(Token = "0x60022BE")]
		[Address(RVA = "0x1644C8C", Offset = "0x1644C8C", VA = "0x1644C8C")]
		public void SetEncapsulatingSamplingRectWhenMergingTexSets(DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60022BF")]
		[Address(RVA = "0x1663D94", Offset = "0x1663D94", VA = "0x1663D94")]
		public void SetEncapsulatingSamplingRectForTesting(int propIdx, DRect newEncapsulatingSamplingRect)
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x165B4EC", Offset = "0x165B4EC", VA = "0x165B4EC")]
		public void SetEncapsulatingRect(int propIdx, bool considerMeshUVs)
		{
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1652B70", Offset = "0x1652B70", VA = "0x1652B70")]
		public void CreateColoredTexToReplaceNull(string propName, int propIdx, bool considerMeshUVs, MB3_TextureCombiner combiner, Color col)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x165B4E0", Offset = "0x165B4E0", VA = "0x165B4E0")]
		public void SetThisIsOnlyTexSetInAtlasTrue()
		{
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1643DDC", Offset = "0x1643DDC", VA = "0x1643DDC")]
		public void SetAllTexturesUseSameMatTilingTrue()
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x165F704", Offset = "0x165F704", VA = "0x165F704")]
		public void AdjustResultMaterialNonTextureProperties(Material resultMaterial, List<ShaderTextureProperty> props)
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x1650990", Offset = "0x1650990", VA = "0x1650990")]
		public void SetTilingTreatmentAndAdjustEncapsulatingSamplingRect(MB_TextureTilingTreatment newTilingTreatment)
		{
		}

		[Token(Token = "0x60022C6")]
		[Address(RVA = "0x165F7EC", Offset = "0x165F7EC", VA = "0x165F7EC")]
		internal void GetRectsForTextureBakeResults(out Rect allPropsUseSameTiling_encapsulatingSamplingRect, out Rect propsUseDifferntTiling_obUVRect)
		{
		}

		[Token(Token = "0x60022C7")]
		[Address(RVA = "0x165F8D4", Offset = "0x165F8D4", VA = "0x165F8D4")]
		internal Rect GetMaterialTilingRectForTextureBakerResults(int materialIndex)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022C8")]
		[Address(RVA = "0x1643E58", Offset = "0x1643E58", VA = "0x1643E58")]
		internal void CalcInitialFullSamplingRects(bool fixOutOfBoundsUVs)
		{
		}

		[Token(Token = "0x60022C9")]
		[Address(RVA = "0x1644354", Offset = "0x1644354", VA = "0x1644354")]
		internal void CalcMatAndUVSamplingRects()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x164463C", Offset = "0x164463C", VA = "0x164463C")]
		public bool AllTexturesAreSameForMerge(MB_TexSet other, bool considerNonTextureProperties, MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender)
		{
			return default(bool);
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1663E5C", Offset = "0x1663E5C", VA = "0x1663E5C")]
		public void DrawRectsToMergeGizmos(Color encC, Color innerC)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1643A98", Offset = "0x1643A98", VA = "0x1643A98")]
		internal string GetDescription()
		{
			return null;
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x1664270", Offset = "0x1664270", VA = "0x1664270")]
		internal string GetMatSubrectDescriptions()
		{
			return null;
		}
	}
	[Token(Token = "0x2000455")]
	public class MB3_TextureCombinerMerging
	{
		[Token(Token = "0x4002496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x4002497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private MB3_TextureCombinerNonTextureProperties resultMaterialTextureBlender;

		[Token(Token = "0x4002498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool fixOutOfBoundsUVs;

		[Token(Token = "0x4002499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400249A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool LOG_LEVEL_TRACE_MERGE_MAT_SUBRECTS;

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x164142C", Offset = "0x164142C", VA = "0x164142C")]
		public static Rect BuildTransformMeshUV2AtlasRect(bool considerMeshUVs, Rect _atlasRect, Rect _obUVRect, Rect _sourceMaterialTiling, Rect _encapsulatingRect)
		{
			return default(Rect);
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x16419E0", Offset = "0x16419E0", VA = "0x16419E0")]
		public MB3_TextureCombinerMerging(bool considerNonTextureProps, MB3_TextureCombinerNonTextureProperties resultMaterialTexBlender, bool fixObUVs, MB2_LogLevel logLevel)
		{
		}

		[Token(Token = "0x60022D0")]
		[Address(RVA = "0x1641A2C", Offset = "0x1641A2C", VA = "0x1641A2C")]
		public void MergeOverlappingDistinctMaterialTexturesAndCalcMaterialSubrects(List<MB_TexSet> distinctMaterialTextures)
		{
		}

		[Token(Token = "0x60022D1")]
		[Address(RVA = "0x1644D6C", Offset = "0x1644D6C", VA = "0x1644D6C")]
		public void DoIntegrityCheckMergedEncapsulatingSamplingRects(List<MB_TexSet> distinctMaterialTextures)
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class MB3_TextureCombinerNonTextureProperties
	{
		[Token(Token = "0x20006A1")]
		public interface MaterialProperty
		{
			[Token(Token = "0x170003BB")]
			string PropertyName
			{
				[Token(Token = "0x6002B51")]
				get;
				[Token(Token = "0x6002B52")]
				set;
			}

			[Token(Token = "0x6002B53")]
			MaterialPropertyValueAveraged GetAverageCalculator();

			[Token(Token = "0x6002B54")]
			object GetDefaultValue();
		}

		[Token(Token = "0x20006A2")]
		public class MaterialPropertyFloat : MaterialProperty
		{
			[Token(Token = "0x400317F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB0C8", Offset = "0x5CB0C8")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x4003180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private MaterialPropertyValueAveragedFloat _averageCalc;

			[Token(Token = "0x4003181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private float _defaultValue;

			[Token(Token = "0x170003BC")]
			public string PropertyName
			{
				[Token(Token = "0x6002B55")]
				[Address(RVA = "0x164794C", Offset = "0x164794C", VA = "0x164794C", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D5B8C", Offset = "0x5D5B8C")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002B56")]
				[Address(RVA = "0x1647954", Offset = "0x1647954", VA = "0x1647954", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D5B9C", Offset = "0x5D5B9C")]
				set
				{
				}
			}

			[Token(Token = "0x6002B57")]
			[Address(RVA = "0x16464C0", Offset = "0x16464C0", VA = "0x16464C0")]
			public MaterialPropertyFloat(string name, float defValue)
			{
			}

			[Token(Token = "0x6002B58")]
			[Address(RVA = "0x1647964", Offset = "0x1647964", VA = "0x1647964", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x6002B59")]
			[Address(RVA = "0x164796C", Offset = "0x164796C", VA = "0x164796C", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x20006A3")]
		public class MaterialPropertyColor : MaterialProperty
		{
			[Token(Token = "0x4003182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5CB0D8", Offset = "0x5CB0D8")]
			private string <PropertyName>k__BackingField;

			[Token(Token = "0x4003183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private MaterialPropertyValueAveragedColor _averageCalc;

			[Token(Token = "0x4003184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private Color _defaultValue;

			[Token(Token = "0x170003BD")]
			public string PropertyName
			{
				[Token(Token = "0x6002B5A")]
				[Address(RVA = "0x16478B4", Offset = "0x16478B4", VA = "0x16478B4", Slot = "4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D5BAC", Offset = "0x5D5BAC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002B5B")]
				[Address(RVA = "0x16478BC", Offset = "0x16478BC", VA = "0x16478BC", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D5BBC", Offset = "0x5D5BBC")]
				set
				{
				}
			}

			[Token(Token = "0x6002B5C")]
			[Address(RVA = "0x164641C", Offset = "0x164641C", VA = "0x164641C")]
			public MaterialPropertyColor(string name, Color defaultVal)
			{
			}

			[Token(Token = "0x6002B5D")]
			[Address(RVA = "0x16478CC", Offset = "0x16478CC", VA = "0x16478CC", Slot = "6")]
			public MaterialPropertyValueAveraged GetAverageCalculator()
			{
				return null;
			}

			[Token(Token = "0x6002B5E")]
			[Address(RVA = "0x16478D4", Offset = "0x16478D4", VA = "0x16478D4", Slot = "7")]
			public object GetDefaultValue()
			{
				return null;
			}
		}

		[Token(Token = "0x20006A4")]
		public interface MaterialPropertyValueAveraged
		{
			[Token(Token = "0x6002B5F")]
			void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property);

			[Token(Token = "0x6002B60")]
			object GetAverage();

			[Token(Token = "0x6002B61")]
			int NumValues();

			[Token(Token = "0x6002B62")]
			void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property);
		}

		[Token(Token = "0x20006A5")]
		public class MaterialPropertyValueAveragedFloat : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x4003185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float averageVal;

			[Token(Token = "0x4003186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int numValues;

			[Token(Token = "0x6002B63")]
			[Address(RVA = "0x1648048", Offset = "0x1648048", VA = "0x1648048", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6002B64")]
			[Address(RVA = "0x1648234", Offset = "0x1648234", VA = "0x1648234", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x6002B65")]
			[Address(RVA = "0x16482A8", Offset = "0x16482A8", VA = "0x16482A8", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x6002B66")]
			[Address(RVA = "0x16482B0", Offset = "0x16482B0", VA = "0x16482B0", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6002B67")]
			[Address(RVA = "0x164795C", Offset = "0x164795C", VA = "0x164795C")]
			public MaterialPropertyValueAveragedFloat()
			{
			}
		}

		[Token(Token = "0x20006A6")]
		public class MaterialPropertyValueAveragedColor : MaterialPropertyValueAveraged
		{
			[Token(Token = "0x4003187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Color averageVal;

			[Token(Token = "0x4003188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int numValues;

			[Token(Token = "0x6002B68")]
			[Address(RVA = "0x16479E0", Offset = "0x16479E0", VA = "0x16479E0", Slot = "4")]
			public void TryGetPropValueFromMaterialAndBlendIntoAverage(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6002B69")]
			[Address(RVA = "0x1647C90", Offset = "0x1647C90", VA = "0x1647C90", Slot = "5")]
			public object GetAverage()
			{
				return null;
			}

			[Token(Token = "0x6002B6A")]
			[Address(RVA = "0x1647D08", Offset = "0x1647D08", VA = "0x1647D08", Slot = "6")]
			public int NumValues()
			{
				return default(int);
			}

			[Token(Token = "0x6002B6B")]
			[Address(RVA = "0x1647D10", Offset = "0x1647D10", VA = "0x1647D10", Slot = "7")]
			public void SetAverageValueOrDefaultOnMaterial(Material mat, MaterialProperty property)
			{
			}

			[Token(Token = "0x6002B6C")]
			[Address(RVA = "0x16478C4", Offset = "0x16478C4", VA = "0x16478C4")]
			public MaterialPropertyValueAveragedColor()
			{
			}
		}

		[Token(Token = "0x20006A7")]
		public struct TexPropertyNameColorPair
		{
			[Token(Token = "0x4003189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400318A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Color color;

			[Token(Token = "0x6002B6D")]
			[Address(RVA = "0x48B6D8", Offset = "0x48B6D8", VA = "0x48B6D8")]
			public TexPropertyNameColorPair(string nm, Color col)
			{
			}
		}

		[Token(Token = "0x20006A8")]
		private interface NonTextureProperties
		{
			[Token(Token = "0x6002B6E")]
			bool NonTexturePropertiesAreEqual(Material a, Material b);

			[Token(Token = "0x6002B6F")]
			Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName);

			[Token(Token = "0x6002B70")]
			void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods);

			[Token(Token = "0x6002B71")]
			Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty);

			[Token(Token = "0x6002B72")]
			Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty);
		}

		[Token(Token = "0x20006A9")]
		private class NonTexturePropertiesDontBlendProps : NonTextureProperties
		{
			[Token(Token = "0x400318B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x6002B73")]
			[Address(RVA = "0x1646554", Offset = "0x1646554", VA = "0x1646554")]
			public NonTexturePropertiesDontBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties)
			{
			}

			[Token(Token = "0x6002B74")]
			[Address(RVA = "0x1649154", Offset = "0x1649154", VA = "0x1649154", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B75")]
			[Address(RVA = "0x164915C", Offset = "0x164915C", VA = "0x164915C", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x6002B76")]
			[Address(RVA = "0x16491F0", Offset = "0x16491F0", VA = "0x16491F0", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x6002B77")]
			[Address(RVA = "0x16495A0", Offset = "0x16495A0", VA = "0x16495A0", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x6002B78")]
			[Address(RVA = "0x16495B4", Offset = "0x16495B4", VA = "0x16495B4", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x20006AA")]
		private class NonTexturePropertiesBlendProps : NonTextureProperties
		{
			[Token(Token = "0x400318C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MB3_TextureCombinerNonTextureProperties _textureProperties;

			[Token(Token = "0x400318D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private TextureBlender resultMaterialTextureBlender;

			[Token(Token = "0x6002B79")]
			[Address(RVA = "0x16472C0", Offset = "0x16472C0", VA = "0x16472C0")]
			public NonTexturePropertiesBlendProps(MB3_TextureCombinerNonTextureProperties textureProperties, TextureBlender resultMats)
			{
			}

			[Token(Token = "0x6002B7A")]
			[Address(RVA = "0x16485D8", Offset = "0x16485D8", VA = "0x16485D8", Slot = "4")]
			public bool NonTexturePropertiesAreEqual(Material a, Material b)
			{
				return default(bool);
			}

			[Token(Token = "0x6002B7B")]
			[Address(RVA = "0x16486C0", Offset = "0x16486C0", VA = "0x16486C0", Slot = "5")]
			public Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
			{
				return null;
			}

			[Token(Token = "0x6002B7C")]
			[Address(RVA = "0x1648BF0", Offset = "0x1648BF0", VA = "0x1648BF0", Slot = "6")]
			public void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
			{
			}

			[Token(Token = "0x6002B7D")]
			[Address(RVA = "0x1648E5C", Offset = "0x1648E5C", VA = "0x1648E5C", Slot = "8")]
			public Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}

			[Token(Token = "0x6002B7E")]
			[Address(RVA = "0x1649058", Offset = "0x1649058", VA = "0x1649058", Slot = "7")]
			public Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
			{
				return default(Color);
			}
		}

		[Token(Token = "0x400249B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color NEUTRAL_NORMAL_MAP_COLOR;

		[Token(Token = "0x400249C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private TexPropertyNameColorPair[] defaultTextureProperty2DefaultColorMap;

		[Token(Token = "0x400249D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private MaterialProperty[] _nonTextureProperties;

		[Token(Token = "0x400249E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private MB2_LogLevel LOG_LEVEL;

		[Token(Token = "0x400249F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool _considerNonTextureProperties;

		[Token(Token = "0x40024A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextureBlender resultMaterialTextureBlender;

		[Token(Token = "0x40024A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TextureBlender[] textureBlenders;

		[Token(Token = "0x40024A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, Color> textureProperty2DefaultColorMap;

		[Token(Token = "0x40024A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private NonTextureProperties _nonTexturePropertiesBlender;

		[Token(Token = "0x60022D3")]
		[Address(RVA = "0x1645AC4", Offset = "0x1645AC4", VA = "0x1645AC4")]
		public MB3_TextureCombinerNonTextureProperties(MB2_LogLevel ll, bool considerNonTextureProps)
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1646574", Offset = "0x1646574", VA = "0x1646574")]
		internal void CollectAverageValuesOfNonTextureProperties(Material resultMaterial, Material mat)
		{
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x164681C", Offset = "0x164681C", VA = "0x164681C")]
		internal void LoadTextureBlendersIfNeeded(Material resultMaterial)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x16470C4", Offset = "0x16470C4", VA = "0x16470C4")]
		private static bool InterfaceFilter(Type typeObj, object criteriaObj)
		{
			return default(bool);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x1646F14", Offset = "0x1646F14", VA = "0x1646F14")]
		private void FindBestTextureBlender(Material resultMaterial)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1646850", Offset = "0x1646850", VA = "0x1646850")]
		private void LoadTextureBlenders()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x16472E8", Offset = "0x16472E8", VA = "0x16472E8")]
		internal bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x60022DA")]
		[Address(RVA = "0x16473D0", Offset = "0x16473D0", VA = "0x16473D0")]
		internal Texture2D TintTextureWithTextureCombiner(Texture2D t, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName)
		{
			return null;
		}

		[Token(Token = "0x60022DB")]
		[Address(RVA = "0x16474CC", Offset = "0x16474CC", VA = "0x16474CC")]
		internal void AdjustNonTextureProperties(Material resultMat, List<ShaderTextureProperty> texPropertyNames, List<MB_TexSet> distinctMaterialTextures, MB2_EditorMethodsInterface editorMethods)
		{
		}

		[Token(Token = "0x60022DC")]
		[Address(RVA = "0x1647624", Offset = "0x1647624", VA = "0x1647624")]
		internal Color GetColorAsItWouldAppearInAtlasIfNoTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60022DD")]
		[Address(RVA = "0x1647720", Offset = "0x1647720", VA = "0x1647720")]
		internal Color GetColorForTemporaryTexture(Material matIfBlender, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x1647134", Offset = "0x1647134", VA = "0x1647134")]
		private TextureBlender FindMatchingTextureBlender(string shaderName)
		{
			return null;
		}
	}
	[Token(Token = "0x2000457")]
	internal class MB3_TextureCombinerPackerMeshBaker : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C342C", Offset = "0x5C342C")]
		private sealed class <CreateAtlases>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400318E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400318F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4003190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x4003191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4003192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x4003193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4003194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4003195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D[] atlases;

			[Token(Token = "0x4003197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Rect[] <uvRects>5__2;

			[Token(Token = "0x4003198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <atlasSizeX>5__3;

			[Token(Token = "0x4003199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <atlasSizeY>5__4;

			[Token(Token = "0x400319A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <propIdx>5__5;

			[Token(Token = "0x400319B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private ShaderTextureProperty <property>5__6;

			[Token(Token = "0x400319C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color[][] <atlasPixels>5__7;

			[Token(Token = "0x400319D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <isNormalMap>5__8;

			[Token(Token = "0x400319E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <texSetIdx>5__9;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B82")]
				[Address(RVA = "0x164CBE4", Offset = "0x164CBE4", VA = "0x164CBE4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B84")]
				[Address(RVA = "0x164CC74", Offset = "0x164CC74", VA = "0x164CC74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B7F")]
			[Address(RVA = "0x1649874", Offset = "0x1649874", VA = "0x1649874")]
			[DebuggerHidden]
			public <CreateAtlases>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002B80")]
			[Address(RVA = "0x164AD68", Offset = "0x164AD68", VA = "0x164AD68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B81")]
			[Address(RVA = "0x164AD6C", Offset = "0x164AD6C", VA = "0x164AD6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B83")]
			[Address(RVA = "0x164CBEC", Offset = "0x164CBEC", VA = "0x164CBEC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C343C", Offset = "0x5C343C")]
		private sealed class <CopyScaledAndTiledToAtlas>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400319F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MeshBakerMaterialTexture source;

			[Token(Token = "0x40031A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40031A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int targX;

			[Token(Token = "0x40031A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int targY;

			[Token(Token = "0x40031A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int targW;

			[Token(Token = "0x40031A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int targH;

			[Token(Token = "0x40031A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AtlasPadding padding;

			[Token(Token = "0x40031A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public DRect srcSamplingRect;

			[Token(Token = "0x40031A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40031AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40031AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public ShaderTextureProperty shaderPropertyName;

			[Token(Token = "0x40031AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public MB_TexSet sourceMaterial;

			[Token(Token = "0x40031AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40031AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public Color[][] atlasPixels;

			[Token(Token = "0x40031AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <w>5__2;

			[Token(Token = "0x40031B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private int <h>5__3;

			[Token(Token = "0x40031B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private int <i>5__4;

			[Token(Token = "0x40031B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
			private int <j>5__5;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B88")]
				[Address(RVA = "0x164ACD0", Offset = "0x164ACD0", VA = "0x164ACD0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B8A")]
				[Address(RVA = "0x164AD60", Offset = "0x164AD60", VA = "0x164AD60", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B85")]
			[Address(RVA = "0x1649AC8", Offset = "0x1649AC8", VA = "0x1649AC8")]
			[DebuggerHidden]
			public <CopyScaledAndTiledToAtlas>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002B86")]
			[Address(RVA = "0x1649AF8", Offset = "0x1649AF8", VA = "0x1649AF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B87")]
			[Address(RVA = "0x1649AFC", Offset = "0x1649AFC", VA = "0x1649AFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B89")]
			[Address(RVA = "0x164ACD8", Offset = "0x164ACD8", VA = "0x164ACD8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x1649748", Offset = "0x1649748", VA = "0x1649748", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2344", Offset = "0x5D2344")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x1649894", Offset = "0x1649894", VA = "0x1649894")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D23BC", Offset = "0x5D23BC")]
		internal static IEnumerator CopyScaledAndTiledToAtlas(MeshBakerMaterialTexture source, MB_TexSet sourceMaterial, ShaderTextureProperty shaderPropertyName, DRect srcSamplingRect, int targX, int targY, int targW, int targH, AtlasPadding padding, Color[][] atlasPixels, bool isNormalMap, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, [Optional] ProgressUpdateDelegate progressInfo, MB2_LogLevel LOG_LEVEL = MB2_LogLevel.info)
		{
			return null;
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1649AE8", Offset = "0x1649AE8", VA = "0x1649AE8")]
		public MB3_TextureCombinerPackerMeshBaker()
		{
		}
	}
	[Token(Token = "0x2000458")]
	internal class MB3_TextureCombinerPackerMeshBakerFast : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x20006AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C344C", Offset = "0x5C344C")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x170003C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B8E")]
				[Address(RVA = "0x164D1D4", Offset = "0x164D1D4", VA = "0x164D1D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B90")]
				[Address(RVA = "0x164D264", Offset = "0x164D264", VA = "0x164D264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B8B")]
			[Address(RVA = "0x164CCF0", Offset = "0x164CCF0", VA = "0x164CCF0")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002B8C")]
			[Address(RVA = "0x164D1B8", Offset = "0x164D1B8", VA = "0x164D1B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B8D")]
			[Address(RVA = "0x164D1BC", Offset = "0x164D1BC", VA = "0x164D1BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B8F")]
			[Address(RVA = "0x164D1DC", Offset = "0x164D1DC", VA = "0x164D1DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C345C", Offset = "0x5C345C")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x40031B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40031B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40031BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40031BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40031BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Texture2D[] atlases;

			[Token(Token = "0x40031BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002B94")]
				[Address(RVA = "0x164EB20", Offset = "0x164EB20", VA = "0x164EB20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002B96")]
				[Address(RVA = "0x164EBB0", Offset = "0x164EBB0", VA = "0x164EBB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002B91")]
			[Address(RVA = "0x164D190", Offset = "0x164D190", VA = "0x164D190")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002B92")]
			[Address(RVA = "0x164D26C", Offset = "0x164D26C", VA = "0x164D26C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002B93")]
			[Address(RVA = "0x164D270", Offset = "0x164D270", VA = "0x164D270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002B95")]
			[Address(RVA = "0x164EB28", Offset = "0x164EB28", VA = "0x164EB28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x164CC7C", Offset = "0x164CC7C", VA = "0x164CC7C", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2434", Offset = "0x5D2434")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022E4")]
		[Address(RVA = "0x164CD10", Offset = "0x164CD10", VA = "0x164CD10", Slot = "7")]
		public virtual AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022E5")]
		[Address(RVA = "0x164D068", Offset = "0x164D068", VA = "0x164D068", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D24AC", Offset = "0x5D24AC")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x164D1B0", Offset = "0x164D1B0", VA = "0x164D1B0")]
		public MB3_TextureCombinerPackerMeshBakerFast()
		{
		}
	}
	[Token(Token = "0x2000459")]
	internal class MB3_TextureCombinerPackerMeshBakerHorizontalVertical : MB3_TextureCombinerPackerMeshBaker
	{
		[Token(Token = "0x20006AF")]
		private interface IPipeline
		{
			[Token(Token = "0x6002B97")]
			MB2_PackingAlgorithmEnum GetPackingAlg();

			[Token(Token = "0x6002B98")]
			void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight);

			[Token(Token = "0x6002B99")]
			MB_TextureTilingTreatment GetEdge2EdgeTreatment();

			[Token(Token = "0x6002B9A")]
			void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue);

			[Token(Token = "0x6002B9B")]
			void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY);

			[Token(Token = "0x6002B9C")]
			void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight);
		}

		[Token(Token = "0x20006B0")]
		private class VerticalPipeline : IPipeline
		{
			[Token(Token = "0x6002B9D")]
			[Address(RVA = "0x1651A14", Offset = "0x1651A14", VA = "0x1651A14", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x6002B9E")]
			[Address(RVA = "0x1651A1C", Offset = "0x1651A1C", VA = "0x1651A1C", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x6002B9F")]
			[Address(RVA = "0x1651B54", Offset = "0x1651B54", VA = "0x1651B54", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x6002BA0")]
			[Address(RVA = "0x1651B5C", Offset = "0x1651B5C", VA = "0x1651B5C", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x6002BA1")]
			[Address(RVA = "0x1651B68", Offset = "0x1651B68", VA = "0x1651B68", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x6002BA2")]
			[Address(RVA = "0x1651E20", Offset = "0x1651E20", VA = "0x1651E20", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x6002BA3")]
			[Address(RVA = "0x16507D4", Offset = "0x16507D4", VA = "0x16507D4")]
			public VerticalPipeline()
			{
			}
		}

		[Token(Token = "0x20006B1")]
		private class HorizontalPipeline : IPipeline
		{
			[Token(Token = "0x6002BA4")]
			[Address(RVA = "0x1651620", Offset = "0x1651620", VA = "0x1651620", Slot = "4")]
			public MB2_PackingAlgorithmEnum GetPackingAlg()
			{
				return default(MB2_PackingAlgorithmEnum);
			}

			[Token(Token = "0x6002BA5")]
			[Address(RVA = "0x1651628", Offset = "0x1651628", VA = "0x1651628", Slot = "5")]
			public void SortTexSetIntoBins(MB_TexSet texSet, List<MB_TexSet> horizontalVert, List<MB_TexSet> regular, int maxAtlasWidth, int maxAtlasHeight)
			{
			}

			[Token(Token = "0x6002BA6")]
			[Address(RVA = "0x1651760", Offset = "0x1651760", VA = "0x1651760", Slot = "6")]
			public MB_TextureTilingTreatment GetEdge2EdgeTreatment()
			{
				return default(MB_TextureTilingTreatment);
			}

			[Token(Token = "0x6002BA7")]
			[Address(RVA = "0x1651768", Offset = "0x1651768", VA = "0x1651768", Slot = "7")]
			public void InitializeAtlasPadding(ref AtlasPadding padding, int paddingValue)
			{
			}

			[Token(Token = "0x6002BA8")]
			[Address(RVA = "0x1651778", Offset = "0x1651778", VA = "0x1651778", Slot = "8")]
			public void MergeAtlasPackingResultStackBonAInternal(AtlasPackingResult a, AtlasPackingResult b, out Rect AatlasToFinal, out Rect BatlasToFinal, bool stretchBToAtlasWidth, int maxWidthDim, int maxHeightDim, out int atlasX, out int atlasY)
			{
			}

			[Token(Token = "0x6002BA9")]
			[Address(RVA = "0x16519FC", Offset = "0x16519FC", VA = "0x16519FC", Slot = "9")]
			public void GetExtraRoomForRegularAtlas(int usedHorizontalVertWidth, int usedHorizontalVertHeight, int maxAtlasWidth, int maxAtlasHeight, out int atlasRegularMaxWidth, out int atlasRegularMaxHeight)
			{
			}

			[Token(Token = "0x6002BAA")]
			[Address(RVA = "0x16507CC", Offset = "0x16507CC", VA = "0x16507CC")]
			public HorizontalPipeline()
			{
			}
		}

		[Token(Token = "0x20006B2")]
		public enum AtlasDirection
		{
			[Token(Token = "0x40031BF")]
			horizontal,
			[Token(Token = "0x40031C0")]
			vertical
		}

		[Token(Token = "0x40024A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private AtlasDirection _atlasDirection;

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x164EBB8", Offset = "0x164EBB8", VA = "0x164EBB8")]
		public MB3_TextureCombinerPackerMeshBakerHorizontalVertical(AtlasDirection ad)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x164EBD8", Offset = "0x164EBD8", VA = "0x164EBD8", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x16514E0", Offset = "0x16514E0", VA = "0x16514E0")]
		public static AtlasPackingResult TestStackRectanglesHorizontal(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1651580", Offset = "0x1651580", VA = "0x1651580")]
		public static AtlasPackingResult TestStackRectanglesVertical(AtlasPackingResult a, AtlasPackingResult b, int maxHeightDim, int maxWidthDim, bool stretchBToAtlasWidth)
		{
			return null;
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1650BE4", Offset = "0x1650BE4", VA = "0x1650BE4")]
		private static AtlasPackingResult MergeAtlasPackingResultStackBonA(AtlasPackingResult a, AtlasPackingResult b, int maxWidthDim, int maxHeightDim, bool stretchBToAtlasWidth, IPipeline pipeline)
		{
			return null;
		}
	}
	[Token(Token = "0x200045A")]
	internal class MB3_TextureCombinerPackerOneTextureInAtlas : MB_ITextureCombinerPacker
	{
		[Token(Token = "0x20006B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C346C", Offset = "0x5C346C")]
		private sealed class <ConvertTexturesToReadableFormats>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x170003C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BAE")]
				[Address(RVA = "0x16525C8", Offset = "0x16525C8", VA = "0x16525C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB0")]
				[Address(RVA = "0x1652658", Offset = "0x1652658", VA = "0x1652658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BAB")]
			[Address(RVA = "0x1651EAC", Offset = "0x1651EAC", VA = "0x1651EAC")]
			[DebuggerHidden]
			public <ConvertTexturesToReadableFormats>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002BAC")]
			[Address(RVA = "0x16525AC", Offset = "0x16525AC", VA = "0x16525AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BAD")]
			[Address(RVA = "0x16525B0", Offset = "0x16525B0", VA = "0x16525B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BAF")]
			[Address(RVA = "0x16525D0", Offset = "0x16525D0", VA = "0x16525D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C347C", Offset = "0x5C347C")]
		private sealed class <CreateAtlases>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40031C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40031C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Texture2D[] atlases;

			[Token(Token = "0x170003C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BB4")]
				[Address(RVA = "0x1652AD8", Offset = "0x1652AD8", VA = "0x1652AD8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BB6")]
				[Address(RVA = "0x1652B68", Offset = "0x1652B68", VA = "0x1652B68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB1")]
			[Address(RVA = "0x1652584", Offset = "0x1652584", VA = "0x1652584")]
			[DebuggerHidden]
			public <CreateAtlases>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB2")]
			[Address(RVA = "0x1652660", Offset = "0x1652660", VA = "0x1652660", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB3")]
			[Address(RVA = "0x1652664", Offset = "0x1652664", VA = "0x1652664", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BB5")]
			[Address(RVA = "0x1652AE0", Offset = "0x1652AE0", VA = "0x1652AE0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022EC")]
		[Address(RVA = "0x1651E38", Offset = "0x1651E38", VA = "0x1651E38", Slot = "4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2524", Offset = "0x5D2524")]
		public IEnumerator ConvertTexturesToReadableFormats(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022ED")]
		[Address(RVA = "0x1651ECC", Offset = "0x1651ECC", VA = "0x1651ECC", Slot = "5")]
		public AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x16524C4", Offset = "0x16524C4", VA = "0x16524C4", Slot = "6")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D259C", Offset = "0x5D259C")]
		public IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x16525A4", Offset = "0x16525A4", VA = "0x16525A4")]
		public MB3_TextureCombinerPackerOneTextureInAtlas()
		{
		}
	}
	[Token(Token = "0x200045B")]
	internal class MB3_TextureCombinerPackerUnity : MB3_TextureCombinerPackerRoot
	{
		[Token(Token = "0x20006B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C348C", Offset = "0x5C348C")]
		private sealed class <CreateAtlases>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AtlasPackingResult packedAtlasRects;

			[Token(Token = "0x40031CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB3_TextureCombinerPipeline.TexturePipelineData data;

			[Token(Token = "0x40031CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40031CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x40031CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40031CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40031D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Texture2D[] atlases;

			[Token(Token = "0x170003CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BBA")]
				[Address(RVA = "0x1656304", Offset = "0x1656304", VA = "0x1656304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BBC")]
				[Address(RVA = "0x1656394", Offset = "0x1656394", VA = "0x1656394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BB7")]
			[Address(RVA = "0x1653524", Offset = "0x1653524", VA = "0x1653524")]
			[DebuggerHidden]
			public <CreateAtlases>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6002BB8")]
			[Address(RVA = "0x16547F0", Offset = "0x16547F0", VA = "0x16547F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BB9")]
			[Address(RVA = "0x16547F8", Offset = "0x16547F8", VA = "0x16547F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BBB")]
			[Address(RVA = "0x165630C", Offset = "0x165630C", VA = "0x165630C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x16532F0", Offset = "0x16532F0", VA = "0x16532F0", Slot = "8")]
		public override AtlasPackingResult[] CalculateAtlasRectangles(MB3_TextureCombinerPipeline.TexturePipelineData data, bool doMultiAtlas, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022F1")]
		[Address(RVA = "0x16533F8", Offset = "0x16533F8", VA = "0x16533F8", Slot = "9")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2614", Offset = "0x5D2614")]
		public override IEnumerator CreateAtlases(ProgressUpdateDelegate progressInfo, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, AtlasPackingResult packedAtlasRects, Texture2D[] atlases, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022F2")]
		[Address(RVA = "0x1653544", Offset = "0x1653544", VA = "0x1653544")]
		internal static Texture2D _copyTexturesIntoAtlas(Texture2D[] texToPack, int padding, Rect[] rs, int w, int h, MB3_TextureCombiner combiner)
		{
			return null;
		}

		[Token(Token = "0x60022F3")]
		[Address(RVA = "0x1653984", Offset = "0x1653984", VA = "0x1653984")]
		internal static Texture2D GetAdjustedForScaleAndOffset2(string propertyName, MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, MB3_TextureCombinerPipeline.TexturePipelineData data, MB3_TextureCombiner combiner, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022F4")]
		[Address(RVA = "0x16547E8", Offset = "0x16547E8", VA = "0x16547E8")]
		public MB3_TextureCombinerPackerUnity()
		{
		}
	}
	[Token(Token = "0x200045C")]
	public class MB3_TextureCombinerPipeline
	{
		[Token(Token = "0x20006B6")]
		public struct CreateAtlasForProperty
		{
			[Token(Token = "0x40031D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool allTexturesAreNull;

			[Token(Token = "0x40031D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool allTexturesAreSame;

			[Token(Token = "0x40031D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool allNonTexturePropsAreSame;

			[Token(Token = "0x6002BBD")]
			[Address(RVA = "0x48B754", Offset = "0x48B754", VA = "0x48B754", Slot = "3")]
			public override string ToString()
			{
				return null;
			}
		}

		[Token(Token = "0x20006B7")]
		internal class TexturePipelineData
		{
			[Token(Token = "0x40031D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal MB2_TextureBakeResults _textureBakeResults;

			[Token(Token = "0x40031D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int _atlasPadding;

			[Token(Token = "0x40031D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			internal int _maxAtlasWidth;

			[Token(Token = "0x40031D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			internal int _maxAtlasHeight;

			[Token(Token = "0x40031D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			internal bool _useMaxAtlasHeightOverride;

			[Token(Token = "0x40031D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			internal bool _useMaxAtlasWidthOverride;

			[Token(Token = "0x40031DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
			internal bool _resizePowerOfTwoTextures;

			[Token(Token = "0x40031DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
			internal bool _fixOutOfBoundsUVs;

			[Token(Token = "0x40031DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			internal int _maxTilingBakeSize;

			[Token(Token = "0x40031DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			internal bool _saveAtlasesAsAssets;

			[Token(Token = "0x40031DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			internal MB2_PackingAlgorithmEnum _packingAlgorithm;

			[Token(Token = "0x40031DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			internal bool _meshBakerTexturePackerForcePowerOfTwo;

			[Token(Token = "0x40031E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			internal List<ShaderTextureProperty> _customShaderPropNames;

			[Token(Token = "0x40031E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			internal bool _normalizeTexelDensity;

			[Token(Token = "0x40031E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			internal bool _considerNonTextureProperties;

			[Token(Token = "0x40031E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			internal MB3_TextureCombinerNonTextureProperties nonTexturePropertyBlender;

			[Token(Token = "0x40031E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			internal List<MB_TexSet> distinctMaterialTextures;

			[Token(Token = "0x40031E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			internal List<GameObject> allObjsToMesh;

			[Token(Token = "0x40031E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			internal List<Material> allowedMaterialsFilter;

			[Token(Token = "0x40031E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			internal List<ShaderTextureProperty> texPropertyNames;

			[Token(Token = "0x40031E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			internal CreateAtlasForProperty[] allTexturesAreNullAndSameColor;

			[Token(Token = "0x40031E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			internal Material resultMaterial;

			[Token(Token = "0x170003CC")]
			internal int numAtlases
			{
				[Token(Token = "0x6002BBE")]
				[Address(RVA = "0x164CB70", Offset = "0x164CB70", VA = "0x164CB70")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002BBF")]
			[Address(RVA = "0x1640470", Offset = "0x1640470", VA = "0x1640470")]
			internal bool OnlyOneTextureInAtlasReuseTextures()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BC0")]
			[Address(RVA = "0x165FB28", Offset = "0x165FB28", VA = "0x165FB28")]
			public TexturePipelineData()
			{
			}
		}

		[Token(Token = "0x20006B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C349C", Offset = "0x5C349C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x40031EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TexturePipelineData data;

			[Token(Token = "0x6002BC1")]
			[Address(RVA = "0x1657360", Offset = "0x1657360", VA = "0x1657360")]
			public <>c__DisplayClass5_0()
			{
			}
		}

		[Token(Token = "0x20006B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34AC", Offset = "0x5C34AC")]
		private sealed class <>c__DisplayClass5_1
		{
			[Token(Token = "0x40031EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int i;

			[Token(Token = "0x40031EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass5_0 CS$<>8__locals1;

			[Token(Token = "0x6002BC2")]
			[Address(RVA = "0x1657368", Offset = "0x1657368", VA = "0x1657368")]
			public <>c__DisplayClass5_1()
			{
			}

			[Token(Token = "0x6002BC3")]
			[Address(RVA = "0x1658EDC", Offset = "0x1658EDC", VA = "0x1658EDC")]
			internal bool <_CollectPropertyNames>b__0(ShaderTextureProperty x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34BC", Offset = "0x5C34BC")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x40031ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TexturePipelineData data;

			[Token(Token = "0x6002BC4")]
			[Address(RVA = "0x1658FD4", Offset = "0x1658FD4", VA = "0x1658FD4")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x20006BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34CC", Offset = "0x5C34CC")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x40031EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MB_TexSet setOfTexs;

			[Token(Token = "0x40031EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6002BC5")]
			[Address(RVA = "0x1658FDC", Offset = "0x1658FDC", VA = "0x1658FDC")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6002BC6")]
			[Address(RVA = "0x1658FE4", Offset = "0x1658FE4", VA = "0x1658FE4")]
			internal bool <__Step1_CollectDistinctMatTexturesAndUsedObjects>b__0(MB_TexSet x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20006BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34DC", Offset = "0x5C34DC")]
		private sealed class <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x40031F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x40031F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x40031F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result;

			[Token(Token = "0x40031F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x40031F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public List<GameObject> usedObjsToMesh;

			[Token(Token = "0x170003CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BCA")]
				[Address(RVA = "0x165E39C", Offset = "0x165E39C", VA = "0x165E39C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BCC")]
				[Address(RVA = "0x165E42C", Offset = "0x165E42C", VA = "0x165E42C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BC7")]
			[Address(RVA = "0x1657590", Offset = "0x1657590", VA = "0x1657590")]
			[DebuggerHidden]
			public <__Step1_CollectDistinctMatTexturesAndUsedObjects>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002BC8")]
			[Address(RVA = "0x165B6BC", Offset = "0x165B6BC", VA = "0x165B6BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BC9")]
			[Address(RVA = "0x165B6C0", Offset = "0x165B6C0", VA = "0x165B6C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BCB")]
			[Address(RVA = "0x165E3A4", Offset = "0x165E3A4", VA = "0x165E3A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34EC", Offset = "0x5C34EC")]
		private sealed class <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x40031FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x170003CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD0")]
				[Address(RVA = "0x165B624", Offset = "0x165B624", VA = "0x165B624", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD2")]
				[Address(RVA = "0x165B6B4", Offset = "0x165B6B4", VA = "0x165B6B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BCD")]
			[Address(RVA = "0x1657EE0", Offset = "0x1657EE0", VA = "0x1657EE0")]
			[DebuggerHidden]
			public <CalculateIdealSizesForTexturesInAtlasAndPadding>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002BCE")]
			[Address(RVA = "0x1659554", Offset = "0x1659554", VA = "0x1659554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BCF")]
			[Address(RVA = "0x1659558", Offset = "0x1659558", VA = "0x1659558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD1")]
			[Address(RVA = "0x165B62C", Offset = "0x165B62C", VA = "0x165B62C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C34FC", Offset = "0x5C34FC")]
		private sealed class <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40031FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40031FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40031FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TexturePipelineData data;

			[Token(Token = "0x40031FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public MB2_LogLevel LOG_LEVEL;

			[Token(Token = "0x4003200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MB_ITextureCombinerPacker packer;

			[Token(Token = "0x4003201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ProgressUpdateDelegate progressInfo;

			[Token(Token = "0x4003202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MB3_TextureCombiner combiner;

			[Token(Token = "0x4003203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public AtlasPackingResult atlasPackingResult;

			[Token(Token = "0x4003204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MB2_EditorMethodsInterface textureEditorMethods;

			[Token(Token = "0x4003205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public StringBuilder report;

			[Token(Token = "0x4003206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MB_AtlasesAndRects resultAtlasesAndRects;

			[Token(Token = "0x4003207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Stopwatch <sw>5__2;

			[Token(Token = "0x4003208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Texture2D[] <atlases>5__3;

			[Token(Token = "0x170003D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002BD6")]
				[Address(RVA = "0x165F9BC", Offset = "0x165F9BC", VA = "0x165F9BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002BD8")]
				[Address(RVA = "0x165FA4C", Offset = "0x165FA4C", VA = "0x165FA4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002BD3")]
			[Address(RVA = "0x1657F00", Offset = "0x1657F00", VA = "0x1657F00")]
			[DebuggerHidden]
			public <__Step3_BuildAndSaveAtlasesAndStoreResults>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002BD4")]
			[Address(RVA = "0x165E434", Offset = "0x165E434", VA = "0x165E434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002BD5")]
			[Address(RVA = "0x165E438", Offset = "0x165E438", VA = "0x165E438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002BD7")]
			[Address(RVA = "0x165F9C4", Offset = "0x165F9C4", VA = "0x165F9C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40024A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool USE_EXPERIMENTAL_HOIZONTALVERTICAL;

		[Token(Token = "0x40024A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static ShaderTextureProperty[] shaderTexPropertyNames;

		[Token(Token = "0x60022F5")]
		[Address(RVA = "0x164C820", Offset = "0x164C820", VA = "0x164C820")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, bool considerNonTextureProperties, CreateAtlasForProperty[] allTexturesAreNullAndSameColor)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F6")]
		[Address(RVA = "0x165639C", Offset = "0x165639C", VA = "0x165639C")]
		internal static bool _CollectPropertyNames(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F7")]
		[Address(RVA = "0x1657370", Offset = "0x1657370", VA = "0x1657370")]
		internal static bool _ShouldWeCreateAtlasForThisProperty(int propertyIndex, CreateAtlasForProperty[] allTexturesAreNullAndSameColor, TexturePipelineData data)
		{
			return default(bool);
		}

		[Token(Token = "0x60022F8")]
		[Address(RVA = "0x1657410", Offset = "0x1657410", VA = "0x1657410")]
		public static Texture GetTextureConsideringStandardShaderKeywords(string shaderName, Material mat, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x60022F9")]
		[Address(RVA = "0x163EEF4", Offset = "0x163EEF4", VA = "0x163EEF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D268C", Offset = "0x5D268C")]
		internal static IEnumerator __Step1_CollectDistinctMatTexturesAndUsedObjects(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, List<GameObject> usedObjsToMesh, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022FA")]
		[Address(RVA = "0x16575B0", Offset = "0x16575B0", VA = "0x16575B0")]
		private static CreateAtlasForProperty[] CalculateAllTexturesAreNullAndSameColor(TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022FB")]
		[Address(RVA = "0x163F004", Offset = "0x163F004", VA = "0x163F004")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D2704", Offset = "0x5D2704")]
		internal static IEnumerator CalculateIdealSizesForTexturesInAtlasAndPadding(ProgressUpdateDelegate progressInfo, MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, TexturePipelineData data, MB3_TextureCombiner combiner, MB2_EditorMethodsInterface textureEditorMethods, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022FC")]
		[Address(RVA = "0x164105C", Offset = "0x164105C", VA = "0x164105C")]
		internal static AtlasPackingResult[] RunTexturePackerOnly(TexturePipelineData data, bool doSplitIntoMultiAtlasIfTooBig, MB_ITextureCombinerPacker texturePacker, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022FD")]
		[Address(RVA = "0x1640554", Offset = "0x1640554", VA = "0x1640554")]
		internal static MB_ITextureCombinerPacker CreatePacker(bool onlyOneTextureInAtlasReuseTextures, MB2_PackingAlgorithmEnum packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x60022FE")]
		[Address(RVA = "0x164073C", Offset = "0x164073C", VA = "0x164073C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D277C", Offset = "0x5D277C")]
		internal static IEnumerator __Step3_BuildAndSaveAtlasesAndStoreResults(MB3_TextureCombiner.CombineTexturesIntoAtlasesCoroutineResult result, ProgressUpdateDelegate progressInfo, TexturePipelineData data, MB3_TextureCombiner combiner, MB_ITextureCombinerPacker packer, AtlasPackingResult atlasPackingResult, MB2_EditorMethodsInterface textureEditorMethods, MB_AtlasesAndRects resultAtlasesAndRects, StringBuilder report, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x60022FF")]
		[Address(RVA = "0x163F0AC", Offset = "0x163F0AC", VA = "0x163F0AC")]
		internal static StringBuilder GenerateReport(TexturePipelineData data)
		{
			return null;
		}

		[Token(Token = "0x6002300")]
		[Address(RVA = "0x1650A74", Offset = "0x1650A74", VA = "0x1650A74")]
		internal static MB2_TexturePacker CreateTexturePacker(MB2_PackingAlgorithmEnum _packingAlgorithm)
		{
			return null;
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x1654158", Offset = "0x1654158", VA = "0x1654158")]
		internal static Vector2 GetAdjustedForScaleAndOffset2Dimensions(MeshBakerMaterialTexture source, Vector2 obUVoffset, Vector2 obUVscale, TexturePipelineData data, MB2_LogLevel LOG_LEVEL)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6002302")]
		[Address(RVA = "0x1657F20", Offset = "0x1657F20", VA = "0x1657F20")]
		internal static Color32 ConvertNormalFormatFromUnity_ToStandard(Color32 c)
		{
			return default(Color32);
		}

		[Token(Token = "0x6002303")]
		[Address(RVA = "0x16580C4", Offset = "0x16580C4", VA = "0x16580C4")]
		internal static float GetSubmeshArea(Mesh m, int submeshIdx)
		{
			return default(float);
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x16583FC", Offset = "0x16583FC", VA = "0x16583FC")]
		internal static bool IsPowerOfTwo(int x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x1658414", Offset = "0x1658414", VA = "0x1658414")]
		public MB3_TextureCombinerPipeline()
		{
		}
	}
	[Token(Token = "0x200045D")]
	public class MB3_Comment : MonoBehaviour
	{
		[Token(Token = "0x40024A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "MultilineAttribute", RVA = "0x5C9FEC", Offset = "0x5C9FEC")]
		public string comment;

		[Token(Token = "0x6002307")]
		[Address(RVA = "0xFC7BB4", Offset = "0xFC7BB4", VA = "0xFC7BB4")]
		public MB3_Comment()
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class MBVersionConcrete : MBVersionInterface
	{
		[Token(Token = "0x40024A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Vector2 _HALF_UV;

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x16627D8", Offset = "0x16627D8", VA = "0x16627D8", Slot = "4")]
		public string version()
		{
			return null;
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x1662834", Offset = "0x1662834", VA = "0x1662834", Slot = "5")]
		public int GetMajorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x1662934", Offset = "0x1662934", VA = "0x1662934", Slot = "6")]
		public int GetMinorVersion()
		{
			return default(int);
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x1662A34", Offset = "0x1662A34", VA = "0x1662A34", Slot = "7")]
		public bool GetActive(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x1662A60", Offset = "0x1662A60", VA = "0x1662A60", Slot = "8")]
		public void SetActive(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x1662A94", Offset = "0x1662A94", VA = "0x1662A94", Slot = "9")]
		public void SetActiveRecursively(GameObject go, bool isActive)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x1662AC8", Offset = "0x1662AC8", VA = "0x1662AC8", Slot = "10")]
		public UnityEngine.Object[] FindSceneObjectsOfType(Type t)
		{
			return null;
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x1662B4C", Offset = "0x1662B4C", VA = "0x1662B4C", Slot = "18")]
		public void OptimizeMesh(Mesh m)
		{
		}

		[Token(Token = "0x6002310")]
		[Address(RVA = "0x1662B50", Offset = "0x1662B50", VA = "0x1662B50", Slot = "11")]
		public bool IsRunningAndMeshNotReadWriteable(Mesh m)
		{
			return default(bool);
		}

		[Token(Token = "0x6002311")]
		[Address(RVA = "0x1662B98", Offset = "0x1662B98", VA = "0x1662B98")]
		public Vector2[] GetMeshUV1s(Mesh m, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002312")]
		[Address(RVA = "0x1662DC0", Offset = "0x1662DC0", VA = "0x1662DC0", Slot = "12")]
		public Vector2[] GetMeshUV3orUV4(Mesh m, bool get3, MB2_LogLevel LOG_LEVEL)
		{
			return null;
		}

		[Token(Token = "0x6002313")]
		[Address(RVA = "0x1663164", Offset = "0x1663164", VA = "0x1663164", Slot = "13")]
		public void MeshClear(Mesh m, bool t)
		{
		}

		[Token(Token = "0x6002314")]
		[Address(RVA = "0x1663198", Offset = "0x1663198", VA = "0x1663198", Slot = "14")]
		public void MeshAssignUV3(Mesh m, Vector2[] uv3s)
		{
		}

		[Token(Token = "0x6002315")]
		[Address(RVA = "0x16631CC", Offset = "0x16631CC", VA = "0x16631CC", Slot = "15")]
		public void MeshAssignUV4(Mesh m, Vector2[] uv4s)
		{
		}

		[Token(Token = "0x6002316")]
		[Address(RVA = "0x1663200", Offset = "0x1663200", VA = "0x1663200", Slot = "16")]
		public Vector4 GetLightmapTilingOffset(Renderer r)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6002317")]
		[Address(RVA = "0x1663234", Offset = "0x1663234", VA = "0x1663234", Slot = "17")]
		public Transform[] GetBones(Renderer r)
		{
			return null;
		}

		[Token(Token = "0x6002318")]
		[Address(RVA = "0x16633E0", Offset = "0x16633E0", VA = "0x16633E0", Slot = "19")]
		public int GetBlendShapeFrameCount(Mesh m, int shapeIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6002319")]
		[Address(RVA = "0x1663414", Offset = "0x1663414", VA = "0x1663414", Slot = "20")]
		public float GetBlendShapeFrameWeight(Mesh m, int shapeIndex, int frameIndex)
		{
			return default(float);
		}

		[Token(Token = "0x600231A")]
		[Address(RVA = "0x1663450", Offset = "0x1663450", VA = "0x1663450", Slot = "21")]
		public void GetBlendShapeFrameVertices(Mesh m, int shapeIndex, int frameIndex, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600231B")]
		[Address(RVA = "0x16634AC", Offset = "0x16634AC", VA = "0x16634AC", Slot = "22")]
		public void ClearBlendShapes(Mesh m)
		{
		}

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x16634D8", Offset = "0x16634D8", VA = "0x16634D8", Slot = "23")]
		public void AddBlendShapeFrame(Mesh m, string nm, float wt, Vector3[] vs, Vector3[] ns, Vector3[] ts)
		{
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x1663534", Offset = "0x1663534", VA = "0x1663534", Slot = "24")]
		public int MaxMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x166353C", Offset = "0x166353C", VA = "0x166353C", Slot = "25")]
		public void SetMeshIndexFormatAndClearMesh(Mesh m, int numVerts, bool vertices, bool justClearTriangles)
		{
		}

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x1663618", Offset = "0x1663618", VA = "0x1663618", Slot = "26")]
		public bool GraphicsUVStartsAtTop()
		{
			return default(bool);
		}

		[Token(Token = "0x6002320")]
		[Address(RVA = "0x1663620", Offset = "0x1663620", VA = "0x1663620")]
		public MBVersionConcrete()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200045F")]
	public class GrouperData
	{
		[Token(Token = "0x40024A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool clusterOnLMIndex;

		[Token(Token = "0x40024AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool clusterByLODLevel;

		[Token(Token = "0x40024AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 origin;

		[Token(Token = "0x40024AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 cellSize;

		[Token(Token = "0x40024AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int pieNumSegments;

		[Token(Token = "0x40024AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pieAxis;

		[Token(Token = "0x40024AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int height;

		[Token(Token = "0x40024B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float maxDistBetweenClusters;

		[Token(Token = "0x40024B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool includeCellsWithOnlyOneRenderer;

		[Token(Token = "0x6002321")]
		[Address(RVA = "0xFB8528", Offset = "0xFB8528", VA = "0xFB8528")]
		public GrouperData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000460")]
	public abstract class MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20006BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C350C", Offset = "0x5C350C")]
		private sealed class <>c__DisplayClass3_0
		{
			[Token(Token = "0x4003209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Renderer r;

			[Token(Token = "0x400320A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Predicate<Renderer> <>9__0;

			[Token(Token = "0x6002BD9")]
			[Address(RVA = "0xFCB76C", Offset = "0xFCB76C", VA = "0xFCB76C")]
			public <>c__DisplayClass3_0()
			{
			}

			[Token(Token = "0x6002BDA")]
			[Address(RVA = "0xFCBBC8", Offset = "0xFCBBC8", VA = "0xFCBBC8")]
			internal bool <DoClustering>b__0(Renderer x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GrouperData d;

		[Token(Token = "0x6002322")]
		public abstract Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection);

		[Token(Token = "0x6002323")]
		public abstract void DrawGizmos(Bounds sourceObjectBounds);

		[Token(Token = "0x6002324")]
		[Address(RVA = "0xFCA18C", Offset = "0xFCA18C", VA = "0xFCA18C")]
		public void DoClustering(MB3_TextureBaker tb, MB3_MeshBakerGrouper grouper)
		{
		}

		[Token(Token = "0x6002325")]
		[Address(RVA = "0xFCB44C", Offset = "0xFCB44C", VA = "0xFCB44C")]
		private Dictionary<int, List<Renderer>> GroupByLightmapIndex(List<Renderer> gaws)
		{
			return null;
		}

		[Token(Token = "0x6002326")]
		[Address(RVA = "0xFCB774", Offset = "0xFCB774", VA = "0xFCB774")]
		private void AddMeshBaker(MB3_TextureBaker tb, string key, List<Renderer> gaws)
		{
		}

		[Token(Token = "0x6002327")]
		[Address(RVA = "0xFC8AE0", Offset = "0xFC8AE0", VA = "0xFC8AE0")]
		protected MB3_MeshBakerGrouperCore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000461")]
	public class MB3_MeshBakerGrouperNone : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x6002328")]
		[Address(RVA = "0xFCD2BC", Offset = "0xFCD2BC", VA = "0xFCD2BC")]
		public MB3_MeshBakerGrouperNone(GrouperData d)
		{
		}

		[Token(Token = "0x6002329")]
		[Address(RVA = "0xFCD2DC", Offset = "0xFCD2DC", VA = "0xFCD2DC", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600232A")]
		[Address(RVA = "0xFCD564", Offset = "0xFCD564", VA = "0xFCD564", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000462")]
	public class MB3_MeshBakerGrouperGrid : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x600232B")]
		[Address(RVA = "0xFCBC58", Offset = "0xFCBC58", VA = "0xFCBC58")]
		public MB3_MeshBakerGrouperGrid(GrouperData d)
		{
		}

		[Token(Token = "0x600232C")]
		[Address(RVA = "0xFCBC78", Offset = "0xFCBC78", VA = "0xFCBC78", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x600232D")]
		[Address(RVA = "0xFCC3E8", Offset = "0xFCC3E8", VA = "0xFCC3E8", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000463")]
	public class MB3_MeshBakerGrouperPie : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x600232E")]
		[Address(RVA = "0xFCD568", Offset = "0xFCD568", VA = "0xFCD568")]
		public MB3_MeshBakerGrouperPie(GrouperData data)
		{
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0xFCD588", Offset = "0xFCD588", VA = "0xFCD588", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002330")]
		[Address(RVA = "0xFCDF24", Offset = "0xFCDF24", VA = "0xFCDF24", Slot = "5")]
		public override void DrawGizmos(Bounds sourceObjectBounds)
		{
		}

		[Token(Token = "0x6002331")]
		[Address(RVA = "0xFCE3D8", Offset = "0xFCE3D8", VA = "0xFCE3D8")]
		public static void DrawCircle(Vector3 axis, Vector3 center, float radius, int subdiv)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000464")]
	public class MB3_MeshBakerGrouperKMeans : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x40024B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int numClusters;

		[Token(Token = "0x40024B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3[] clusterCenters;

		[Token(Token = "0x40024B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float[] clusterSizes;

		[Token(Token = "0x6002332")]
		[Address(RVA = "0xFCCBD8", Offset = "0xFCCBD8", VA = "0xFCCBD8")]
		public MB3_MeshBakerGrouperKMeans(GrouperData data)
		{
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0xFCCC78", Offset = "0xFCCC78", VA = "0xFCCC78", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0xFCD1BC", Offset = "0xFCD1BC", VA = "0xFCD1BC", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000465")]
	public class MB3_MeshBakerGrouperCluster : MB3_MeshBakerGrouperCore
	{
		[Token(Token = "0x20006C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C351C", Offset = "0x5C351C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x400320B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public List<GameObject> gos;

			[Token(Token = "0x6002BDB")]
			[Address(RVA = "0xFC957C", Offset = "0xFC957C", VA = "0xFC957C")]
			public <>c__DisplayClass8_0()
			{
			}
		}

		[Token(Token = "0x20006C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C352C", Offset = "0x5C352C")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x400320C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int i;

			[Token(Token = "0x400320D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x6002BDC")]
			[Address(RVA = "0xFC9584", Offset = "0xFC9584", VA = "0xFC9584")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x6002BDD")]
			[Address(RVA = "0xFCA0A0", Offset = "0xFCA0A0", VA = "0xFCA0A0")]
			internal bool <BuildClusters>b__0(MB3_AgglomerativeClustering.item_s x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40024B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public MB3_AgglomerativeClustering cluster;

		[Token(Token = "0x40024B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float _lastMaxDistBetweenClusters;

		[Token(Token = "0x40024B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float _ObjsExtents;

		[Token(Token = "0x40024B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float _minDistBetweenClusters;

		[Token(Token = "0x40024BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private List<MB3_AgglomerativeClustering.ClusterNode> _clustersToDraw;

		[Token(Token = "0x40024BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] _radii;

		[Token(Token = "0x6002335")]
		[Address(RVA = "0xFC8A34", Offset = "0xFC8A34", VA = "0xFC8A34")]
		public MB3_MeshBakerGrouperCluster(GrouperData data, List<GameObject> gos)
		{
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0xFC8AE8", Offset = "0xFC8AE8", VA = "0xFC8AE8", Slot = "4")]
		public override Dictionary<string, List<Renderer>> FilterIntoGroups(List<GameObject> selection)
		{
			return null;
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0xFC8E9C", Offset = "0xFC8E9C", VA = "0xFC8E9C")]
		public void BuildClusters(List<GameObject> gos, ProgressUpdateCancelableDelegate progFunc)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0xFC958C", Offset = "0xFC958C", VA = "0xFC958C")]
		private void _BuildListOfClustersToDraw(ProgressUpdateCancelableDelegate progFunc, out float smallest, out float largest)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0xFC9E9C", Offset = "0xFC9E9C", VA = "0xFC9E9C", Slot = "5")]
		public override void DrawGizmos(Bounds sceneObjectBounds)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public interface TextureBlender
	{
		[Token(Token = "0x600233A")]
		bool DoesShaderNameMatch(string shaderName);

		[Token(Token = "0x600233B")]
		void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName);

		[Token(Token = "0x600233C")]
		Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor);

		[Token(Token = "0x600233D")]
		bool NonTexturePropertiesAreEqual(Material a, Material b);

		[Token(Token = "0x600233E")]
		void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial);

		[Token(Token = "0x600233F")]
		Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName);
	}
	[Token(Token = "0x2000467")]
	public class TextureBlenderFallback : TextureBlender
	{
		[Token(Token = "0x40024BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool m_doTintColor;

		[Token(Token = "0x40024BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color m_defaultColor;

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x21CFA48", Offset = "0x21CFA48", VA = "0x21CFA48", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x21CFA50", Offset = "0x21CFA50", VA = "0x21CFA50", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6002342")]
		[Address(RVA = "0x21CFBC8", Offset = "0x21CFBC8", VA = "0x21CFBC8", Slot = "6")]
		public Color OnBlendTexturePixel(string shaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x21CFC5C", Offset = "0x21CFC5C", VA = "0x21CFC5C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x21CFEA4", Offset = "0x21CFEA4", VA = "0x21CFEA4", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x21CFFE4", Offset = "0x21CFFE4", VA = "0x21CFFE4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texProperty)
		{
			return default(Color);
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x21CFD7C", Offset = "0x21CFD7C", VA = "0x21CFD7C")]
		public static bool _compareColor(Material a, Material b, Color defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002347")]
		[Address(RVA = "0x21D0DAC", Offset = "0x21D0DAC", VA = "0x21D0DAC")]
		public static bool _compareFloat(Material a, Material b, float defaultVal, string propertyName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x21D0E84", Offset = "0x21D0E84", VA = "0x21D0E84")]
		public TextureBlenderFallback()
		{
		}
	}
	[Token(Token = "0x2000468")]
	public class TextureBlenderLegacyBumpDiffuse : TextureBlender
	{
		[Token(Token = "0x40024BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool doColor;

		[Token(Token = "0x40024C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color m_defaultTintColor;

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x21D0EC8", Offset = "0x21D0EC8", VA = "0x21D0EC8", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x600234A")]
		[Address(RVA = "0x21D0F78", Offset = "0x21D0F78", VA = "0x21D0F78", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x21D1060", Offset = "0x21D1060", VA = "0x21D1060", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600234C")]
		[Address(RVA = "0x21D10F4", Offset = "0x21D10F4", VA = "0x21D10F4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x21D1184", Offset = "0x21D1184", VA = "0x21D1184", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x21D121C", Offset = "0x21D121C", VA = "0x21D121C", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x21D1498", Offset = "0x21D1498", VA = "0x21D1498")]
		public TextureBlenderLegacyBumpDiffuse()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class TextureBlenderLegacyDiffuse : TextureBlender
	{
		[Token(Token = "0x40024C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private bool doColor;

		[Token(Token = "0x40024C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color m_defaultTintColor;

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x21D14DC", Offset = "0x21D14DC", VA = "0x21D14DC", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x21D158C", Offset = "0x21D158C", VA = "0x21D158C", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x21D1674", Offset = "0x21D1674", VA = "0x21D1674", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002353")]
		[Address(RVA = "0x21D1708", Offset = "0x21D1708", VA = "0x21D1708", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x21D1798", Offset = "0x21D1798", VA = "0x21D1798", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002355")]
		[Address(RVA = "0x21D1830", Offset = "0x21D1830", VA = "0x21D1830", Slot = "9")]
		public Color GetColorIfNoTexture(Material m, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x21D1A4C", Offset = "0x21D1A4C", VA = "0x21D1A4C")]
		public TextureBlenderLegacyDiffuse()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class TextureBlenderMaterialPropertyCacheHelper
	{
		[Token(Token = "0x20006C2")]
		private struct MaterialPropertyPair
		{
			[Token(Token = "0x400320E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Material material;

			[Token(Token = "0x400320F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public string property;

			[Token(Token = "0x6002BDE")]
			[Address(RVA = "0x5D7BFC", Offset = "0x5D7BFC", VA = "0x5D7BFC")]
			public MaterialPropertyPair(Material m, string prop)
			{
			}

			[Token(Token = "0x6002BDF")]
			[Address(RVA = "0x5D7C08", Offset = "0x5D7C08", VA = "0x5D7C08", Slot = "0")]
			public override bool Equals(object obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6002BE0")]
			[Address(RVA = "0x5D7C10", Offset = "0x5D7C10", VA = "0x5D7C10", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}
		}

		[Token(Token = "0x40024C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Dictionary<MaterialPropertyPair, object> nonTexturePropertyValuesForSourceMaterials;

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x21D1A90", Offset = "0x21D1A90", VA = "0x21D1A90")]
		private bool AllNonTexturePropertyValuesAreEqual(string prop)
		{
			return default(bool);
		}

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x21D1D6C", Offset = "0x21D1D6C", VA = "0x21D1D6C")]
		public void CacheMaterialProperty(Material m, string property, object value)
		{
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x21D1E10", Offset = "0x21D1E10", VA = "0x21D1E10")]
		public object GetValueIfAllSourceAreTheSameOrDefault(string property, object defaultValue)
		{
			return null;
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x21D2040", Offset = "0x21D2040", VA = "0x21D2040")]
		public TextureBlenderMaterialPropertyCacheHelper()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class TextureBlenderStandardMetallic : TextureBlender
	{
		[Token(Token = "0x20006C3")]
		private enum Prop
		{
			[Token(Token = "0x4003211")]
			doColor,
			[Token(Token = "0x4003212")]
			doMetallic,
			[Token(Token = "0x4003213")]
			doEmission,
			[Token(Token = "0x4003214")]
			doBump,
			[Token(Token = "0x4003215")]
			doNone
		}

		[Token(Token = "0x40024C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40024C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40024C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_glossiness;

		[Token(Token = "0x40024CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_glossMapScale;

		[Token(Token = "0x40024CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_metallic;

		[Token(Token = "0x40024CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40024CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_bumpScale;

		[Token(Token = "0x40024CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40024CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Color m_emissionColor;

		[Token(Token = "0x40024D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Prop propertyToDo;

		[Token(Token = "0x40024D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40024D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40024D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_generatingTintedAtlasGlossiness;

		[Token(Token = "0x40024D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_generatingTintedAtlasGlossMapScale;

		[Token(Token = "0x40024D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40024D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40024D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40024D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40024D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40024DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x21D2230", Offset = "0x21D2230", VA = "0x21D2230", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x21D22A8", Offset = "0x21D22A8", VA = "0x21D22A8", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x21D27BC", Offset = "0x21D27BC", VA = "0x21D27BC", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x21D29D0", Offset = "0x21D29D0", VA = "0x21D29D0", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600235F")]
		[Address(RVA = "0x21D2D38", Offset = "0x21D2D38", VA = "0x21D2D38", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002360")]
		[Address(RVA = "0x21D33B4", Offset = "0x21D33B4", VA = "0x21D33B4", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x21D3CFC", Offset = "0x21D3CFC", VA = "0x21D3CFC")]
		public TextureBlenderStandardMetallic()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class TextureBlenderStandardMetallicRoughness : TextureBlender
	{
		[Token(Token = "0x20006C4")]
		private enum Prop
		{
			[Token(Token = "0x4003217")]
			doColor,
			[Token(Token = "0x4003218")]
			doMetallic,
			[Token(Token = "0x4003219")]
			doRoughness,
			[Token(Token = "0x400321A")]
			doEmission,
			[Token(Token = "0x400321B")]
			doBump,
			[Token(Token = "0x400321C")]
			doNone
		}

		[Token(Token = "0x40024DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40024DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40024DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_roughness;

		[Token(Token = "0x40024DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_metallic;

		[Token(Token = "0x40024E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_hasMetallicGlossMap;

		[Token(Token = "0x40024E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40024E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_bumpScale;

		[Token(Token = "0x40024E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40024E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color m_emissionColor;

		[Token(Token = "0x40024E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Prop propertyToDo;

		[Token(Token = "0x40024E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color m_generatingTintedAtlasColor;

		[Token(Token = "0x40024E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_generatingTintedAtlasMetallic;

		[Token(Token = "0x40024E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_generatingTintedAtlasRoughness;

		[Token(Token = "0x40024E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_generatingTintedAtlasBumpScale;

		[Token(Token = "0x40024EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color m_generatingTintedAtlasEmission;

		[Token(Token = "0x40024EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x40024EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float m_notGeneratingAtlasDefaultMetallic;

		[Token(Token = "0x40024ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x40024EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x21D3EA8", Offset = "0x21D3EA8", VA = "0x21D3EA8", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x21D3F20", Offset = "0x21D3F20", VA = "0x21D3F20", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x6002365")]
		[Address(RVA = "0x21D4478", Offset = "0x21D4478", VA = "0x21D4478", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6002366")]
		[Address(RVA = "0x21D467C", Offset = "0x21D467C", VA = "0x21D467C", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x6002367")]
		[Address(RVA = "0x21D4B58", Offset = "0x21D4B58", VA = "0x21D4B58", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002368")]
		[Address(RVA = "0x21D5200", Offset = "0x21D5200", VA = "0x21D5200", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002369")]
		[Address(RVA = "0x21D5C84", Offset = "0x21D5C84", VA = "0x21D5C84")]
		public TextureBlenderStandardMetallicRoughness()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class TextureBlenderStandardSpecular : TextureBlender
	{
		[Token(Token = "0x20006C5")]
		private enum Prop
		{
			[Token(Token = "0x400321E")]
			doColor,
			[Token(Token = "0x400321F")]
			doSpecular,
			[Token(Token = "0x4003220")]
			doEmission,
			[Token(Token = "0x4003221")]
			doBump,
			[Token(Token = "0x4003222")]
			doNone
		}

		[Token(Token = "0x40024EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Color NeutralNormalMap;

		[Token(Token = "0x40024F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private TextureBlenderMaterialPropertyCacheHelper sourceMaterialPropertyCache;

		[Token(Token = "0x40024F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Color m_tintColor;

		[Token(Token = "0x40024F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_glossiness;

		[Token(Token = "0x40024F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_SpecGlossMapScale;

		[Token(Token = "0x40024F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Color m_specColor;

		[Token(Token = "0x40024F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_hasSpecGlossMap;

		[Token(Token = "0x40024F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_bumpScale;

		[Token(Token = "0x40024F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_shaderDoesEmission;

		[Token(Token = "0x40024F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_emissionColor;

		[Token(Token = "0x40024F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Prop propertyToDo;

		[Token(Token = "0x40024FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Color m_generatingTintedAtlaColor;

		[Token(Token = "0x40024FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Color m_generatingTintedAtlaSpecular;

		[Token(Token = "0x40024FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_generatingTintedAtlaGlossiness;

		[Token(Token = "0x40024FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_generatingTintedAtlaSpecGlossMapScale;

		[Token(Token = "0x40024FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_generatingTintedAtlaBumpScale;

		[Token(Token = "0x40024FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Color m_generatingTintedAtlaEmission;

		[Token(Token = "0x4002500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Color m_notGeneratingAtlasDefaultColor;

		[Token(Token = "0x4002501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Color m_notGeneratingAtlasDefaultSpecularColor;

		[Token(Token = "0x4002502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float m_notGeneratingAtlasDefaultGlossiness;

		[Token(Token = "0x4002503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Color m_notGeneratingAtlasDefaultEmisionColor;

		[Token(Token = "0x600236B")]
		[Address(RVA = "0x21D5E2C", Offset = "0x21D5E2C", VA = "0x21D5E2C", Slot = "4")]
		public bool DoesShaderNameMatch(string shaderName)
		{
			return default(bool);
		}

		[Token(Token = "0x600236C")]
		[Address(RVA = "0x21D5EA4", Offset = "0x21D5EA4", VA = "0x21D5EA4", Slot = "5")]
		public void OnBeforeTintTexture(Material sourceMat, string shaderTexturePropertyName)
		{
		}

		[Token(Token = "0x600236D")]
		[Address(RVA = "0x21D63F0", Offset = "0x21D63F0", VA = "0x21D63F0", Slot = "6")]
		public Color OnBlendTexturePixel(string propertyToDoshaderPropertyName, Color pixelColor)
		{
			return default(Color);
		}

		[Token(Token = "0x600236E")]
		[Address(RVA = "0x21D65F4", Offset = "0x21D65F4", VA = "0x21D65F4", Slot = "7")]
		public bool NonTexturePropertiesAreEqual(Material a, Material b)
		{
			return default(bool);
		}

		[Token(Token = "0x600236F")]
		[Address(RVA = "0x21D699C", Offset = "0x21D699C", VA = "0x21D699C", Slot = "8")]
		public void SetNonTexturePropertyValuesOnResultMaterial(Material resultMaterial)
		{
		}

		[Token(Token = "0x6002370")]
		[Address(RVA = "0x21D7064", Offset = "0x21D7064", VA = "0x21D7064", Slot = "9")]
		public Color GetColorIfNoTexture(Material mat, ShaderTextureProperty texPropertyName)
		{
			return default(Color);
		}

		[Token(Token = "0x6002371")]
		[Address(RVA = "0x21D798C", Offset = "0x21D798C", VA = "0x21D798C")]
		public TextureBlenderStandardSpecular()
		{
		}
	}
}
namespace DentedPixel.LTExamples
{
	[Token(Token = "0x200046E")]
	public class PathBezier : MonoBehaviour
	{
		[Token(Token = "0x4002504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform[] trans;

		[Token(Token = "0x4002505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private LTBezierPath cr;

		[Token(Token = "0x4002506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private GameObject avatar1;

		[Token(Token = "0x4002507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float iter;

		[Token(Token = "0x6002373")]
		[Address(RVA = "0xFAA544", Offset = "0xFAA544", VA = "0xFAA544")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002374")]
		[Address(RVA = "0xFAA9F8", Offset = "0xFAA9F8", VA = "0xFAA9F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6002375")]
		[Address(RVA = "0xFAAC34", Offset = "0xFAAC34", VA = "0xFAAC34")]
		private void Update()
		{
		}

		[Token(Token = "0x6002376")]
		[Address(RVA = "0xFAAC88", Offset = "0xFAAC88", VA = "0xFAAC88")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6002377")]
		[Address(RVA = "0xFAACEC", Offset = "0xFAACEC", VA = "0xFAACEC")]
		public PathBezier()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class TestingUnitTests : MonoBehaviour
	{
		[Token(Token = "0x20006C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C353C", Offset = "0x5C353C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4003223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4003224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public GameObject[] cubes;

			[Token(Token = "0x4003225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[] tweenIds;

			[Token(Token = "0x4003226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int onCompleteCount;

			[Token(Token = "0x4003227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject cubeToTrans;

			[Token(Token = "0x4003228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 cubeDestEnd;

			[Token(Token = "0x4003229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject cubeSpline;

			[Token(Token = "0x400322A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int jumpTimeId;

			[Token(Token = "0x400322B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public GameObject jumpCube;

			[Token(Token = "0x400322C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public GameObject zeroCube;

			[Token(Token = "0x400322D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public GameObject cubeScale;

			[Token(Token = "0x400322E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public GameObject cubeRotate;

			[Token(Token = "0x400322F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject cubeRotateA;

			[Token(Token = "0x4003230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public GameObject cubeRotateB;

			[Token(Token = "0x4003231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float onStartTime;

			[Token(Token = "0x4003232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 beforePos;

			[Token(Token = "0x4003233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Vector3 beforePos2;

			[Token(Token = "0x4003234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
			public int totalEasingCheck;

			[Token(Token = "0x4003235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public int totalEasingCheckSuccess;

			[Token(Token = "0x4003236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public bool value2UpdateCalled;

			[Token(Token = "0x4003237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Action <>9__21;

			[Token(Token = "0x6002BE1")]
			[Address(RVA = "0xFAD2BC", Offset = "0xFAD2BC", VA = "0xFAD2BC")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002BE2")]
			[Address(RVA = "0xFADAFC", Offset = "0xFADAFC", VA = "0xFADAFC")]
			internal void <Start>b__0()
			{
			}

			[Token(Token = "0x6002BE3")]
			[Address(RVA = "0xFADC10", Offset = "0xFADC10", VA = "0xFADC10")]
			internal void <Start>b__1()
			{
			}

			[Token(Token = "0x6002BE4")]
			[Address(RVA = "0xFADE94", Offset = "0xFADE94", VA = "0xFADE94")]
			internal void <Start>b__21()
			{
			}

			[Token(Token = "0x6002BE5")]
			[Address(RVA = "0xFADF40", Offset = "0xFADF40", VA = "0xFADF40")]
			internal void <Start>b__2()
			{
			}

			[Token(Token = "0x6002BE6")]
			[Address(RVA = "0xFAE07C", Offset = "0xFAE07C", VA = "0xFAE07C")]
			internal void <Start>b__4()
			{
			}

			[Token(Token = "0x6002BE7")]
			[Address(RVA = "0xFAE1F4", Offset = "0xFAE1F4", VA = "0xFAE1F4")]
			internal void <Start>b__5()
			{
			}

			[Token(Token = "0x6002BE8")]
			[Address(RVA = "0xFAE498", Offset = "0xFAE498", VA = "0xFAE498")]
			internal void <Start>b__6()
			{
			}

			[Token(Token = "0x6002BE9")]
			[Address(RVA = "0xFAE61C", Offset = "0xFAE61C", VA = "0xFAE61C")]
			internal void <Start>b__8()
			{
			}

			[Token(Token = "0x6002BEA")]
			[Address(RVA = "0xFAE960", Offset = "0xFAE960", VA = "0xFAE960")]
			internal void <Start>b__9()
			{
			}

			[Token(Token = "0x6002BEB")]
			[Address(RVA = "0xFAECA8", Offset = "0xFAECA8", VA = "0xFAECA8")]
			internal void <Start>b__10()
			{
			}

			[Token(Token = "0x6002BEC")]
			[Address(RVA = "0xFAEFF0", Offset = "0xFAEFF0", VA = "0xFAEFF0")]
			internal void <Start>b__11()
			{
			}

			[Token(Token = "0x6002BED")]
			[Address(RVA = "0xFAF3E8", Offset = "0xFAF3E8", VA = "0xFAF3E8")]
			internal void <Start>b__13(object completeObj)
			{
			}

			[Token(Token = "0x6002BEE")]
			[Address(RVA = "0xFAF5E0", Offset = "0xFAF5E0", VA = "0xFAF5E0")]
			internal void <Start>b__14()
			{
			}

			[Token(Token = "0x6002BEF")]
			[Address(RVA = "0xFAF9C0", Offset = "0xFAF9C0", VA = "0xFAF9C0")]
			internal void <Start>b__15()
			{
			}

			[Token(Token = "0x6002BF0")]
			[Address(RVA = "0xFAF9DC", Offset = "0xFAF9DC", VA = "0xFAF9DC")]
			internal void <Start>b__16()
			{
			}

			[Token(Token = "0x6002BF1")]
			[Address(RVA = "0xFAFB5C", Offset = "0xFAFB5C", VA = "0xFAFB5C")]
			internal void <Start>b__17()
			{
			}

			[Token(Token = "0x6002BF2")]
			[Address(RVA = "0xFB0148", Offset = "0xFB0148", VA = "0xFB0148")]
			internal void <Start>b__19(Vector2 value)
			{
			}

			[Token(Token = "0x6002BF3")]
			[Address(RVA = "0xFB0154", Offset = "0xFB0154", VA = "0xFB0154")]
			internal void <Start>b__20()
			{
			}
		}

		[Token(Token = "0x20006C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C354C", Offset = "0x5C354C")]
		private sealed class <>c__DisplayClass21_1
		{
			[Token(Token = "0x4003238")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float beforeX;

			[Token(Token = "0x4003239")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass21_0 CS$<>8__locals1;

			[Token(Token = "0x6002BF4")]
			[Address(RVA = "0xFAE490", Offset = "0xFAE490", VA = "0xFAE490")]
			public <>c__DisplayClass21_1()
			{
			}

			[Token(Token = "0x6002BF5")]
			[Address(RVA = "0xFB01F8", Offset = "0xFB01F8", VA = "0xFB01F8")]
			internal void <Start>b__23()
			{
			}
		}

		[Token(Token = "0x20006C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C355C", Offset = "0x5C355C")]
		private sealed class <>c__DisplayClass21_2
		{
			[Token(Token = "0x400323A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int totalTweenTypeLength;

			[Token(Token = "0x400323B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public <>c__DisplayClass21_0 CS$<>8__locals2;

			[Token(Token = "0x400323C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<object> <>9__24;

			[Token(Token = "0x6002BF6")]
			[Address(RVA = "0xFAD384", Offset = "0xFAD384", VA = "0xFAD384")]
			public <>c__DisplayClass21_2()
			{
			}

			[Token(Token = "0x6002BF7")]
			[Address(RVA = "0xFB07F0", Offset = "0xFB07F0", VA = "0xFB07F0")]
			internal void <Start>b__24(object obj)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20006C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C356C", Offset = "0x5C356C")]
		private sealed class <>c
		{
			[Token(Token = "0x400323D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400323E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Action <>9__21_3;

			[Token(Token = "0x400323F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__21_22;

			[Token(Token = "0x4003240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Action <>9__21_7;

			[Token(Token = "0x4003241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<float> <>9__21_12;

			[Token(Token = "0x4003242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public static Action <>9__21_18;

			[Token(Token = "0x6002BF9")]
			[Address(RVA = "0xFAD860", Offset = "0xFAD860", VA = "0xFAD860")]
			public <>c()
			{
			}

			[Token(Token = "0x6002BFA")]
			[Address(RVA = "0xFAD868", Offset = "0xFAD868", VA = "0xFAD868")]
			internal void <Start>b__21_3()
			{
			}

			[Token(Token = "0x6002BFB")]
			[Address(RVA = "0xFAD8FC", Offset = "0xFAD8FC", VA = "0xFAD8FC")]
			internal void <Start>b__21_22()
			{
			}

			[Token(Token = "0x6002BFC")]
			[Address(RVA = "0xFAD900", Offset = "0xFAD900", VA = "0xFAD900")]
			internal void <Start>b__21_7()
			{
			}

			[Token(Token = "0x6002BFD")]
			[Address(RVA = "0xFAD994", Offset = "0xFAD994", VA = "0xFAD994")]
			internal void <Start>b__21_12(float val)
			{
			}

			[Token(Token = "0x6002BFE")]
			[Address(RVA = "0xFADA44", Offset = "0xFADA44", VA = "0xFADA44")]
			internal void <Start>b__21_18()
			{
			}
		}

		[Token(Token = "0x20006CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C357C", Offset = "0x5C357C")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x4003243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4003244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int pauseCount;

			[Token(Token = "0x4003245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject cubeRound;

			[Token(Token = "0x4003246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 onStartPos;

			[Token(Token = "0x4003247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 onStartPosSpline;

			[Token(Token = "0x4003248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public GameObject cubeSpline;

			[Token(Token = "0x4003249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int setOnStartNum;

			[Token(Token = "0x400324A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool setPosOnUpdate;

			[Token(Token = "0x400324B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public int setPosNum;

			[Token(Token = "0x400324C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool hasGroupTweensCheckStarted;

			[Token(Token = "0x400324D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float previousXlt4;

			[Token(Token = "0x400324E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public bool onUpdateWasCalled;

			[Token(Token = "0x400324F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float start;

			[Token(Token = "0x4003250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public float expectedTime;

			[Token(Token = "0x4003251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public bool didGetCorrectOnUpdate;

			[Token(Token = "0x4003252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			public Action <>9__10;

			[Token(Token = "0x4003253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public Action<Vector3> <>9__11;

			[Token(Token = "0x4003254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			public Action <>9__13;

			[Token(Token = "0x4003255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public Action<object> <>9__12;

			[Token(Token = "0x6002BFF")]
			[Address(RVA = "0xFB09F4", Offset = "0xFB09F4", VA = "0xFB09F4")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x6002C00")]
			[Address(RVA = "0xFB09FC", Offset = "0xFB09FC", VA = "0xFB09FC")]
			internal void <timeBasedTesting>b__0()
			{
			}

			[Token(Token = "0x6002C01")]
			[Address(RVA = "0xFB0A34", Offset = "0xFB0A34", VA = "0xFB0A34")]
			internal void <timeBasedTesting>b__1()
			{
			}

			[Token(Token = "0x6002C02")]
			[Address(RVA = "0xFB0A6C", Offset = "0xFB0A6C", VA = "0xFB0A6C")]
			internal void <timeBasedTesting>b__2(float val)
			{
			}

			[Token(Token = "0x6002C03")]
			[Address(RVA = "0xFB0A7C", Offset = "0xFB0A7C", VA = "0xFB0A7C")]
			internal void <timeBasedTesting>b__3()
			{
			}

			[Token(Token = "0x6002C04")]
			[Address(RVA = "0xFB0E04", Offset = "0xFB0E04", VA = "0xFB0E04")]
			internal void <timeBasedTesting>b__4()
			{
			}

			[Token(Token = "0x6002C05")]
			[Address(RVA = "0xFB1314", Offset = "0xFB1314", VA = "0xFB1314")]
			internal void <timeBasedTesting>b__10()
			{
			}

			[Token(Token = "0x6002C06")]
			[Address(RVA = "0xFB1324", Offset = "0xFB1324", VA = "0xFB1324")]
			internal void <timeBasedTesting>b__11(Vector3 newPosition)
			{
			}

			[Token(Token = "0x6002C07")]
			[Address(RVA = "0xFB139C", Offset = "0xFB139C", VA = "0xFB139C")]
			internal void <timeBasedTesting>b__12(object param)
			{
			}

			[Token(Token = "0x6002C08")]
			[Address(RVA = "0xFB1738", Offset = "0xFB1738", VA = "0xFB1738")]
			internal void <timeBasedTesting>b__13()
			{
			}

			[Token(Token = "0x6002C09")]
			[Address(RVA = "0xFB1F74", Offset = "0xFB1F74", VA = "0xFB1F74")]
			internal void <timeBasedTesting>b__5()
			{
			}

			[Token(Token = "0x6002C0A")]
			[Address(RVA = "0xFB2480", Offset = "0xFB2480", VA = "0xFB2480")]
			internal void <timeBasedTesting>b__6(float val)
			{
			}

			[Token(Token = "0x6002C0B")]
			[Address(RVA = "0xFB248C", Offset = "0xFB248C", VA = "0xFB248C")]
			internal void <timeBasedTesting>b__7()
			{
			}

			[Token(Token = "0x6002C0C")]
			[Address(RVA = "0xFB28D4", Offset = "0xFB28D4", VA = "0xFB28D4")]
			internal void <timeBasedTesting>b__8(Vector3 val)
			{
			}

			[Token(Token = "0x6002C0D")]
			[Address(RVA = "0xFB2934", Offset = "0xFB2934", VA = "0xFB2934")]
			internal void <timeBasedTesting>b__9()
			{
			}
		}

		[Token(Token = "0x20006CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C358C", Offset = "0x5C358C")]
		private sealed class <timeBasedTesting>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4003256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4003257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4003258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x4003259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private <>c__DisplayClass23_0 <>8__1;

			[Token(Token = "0x400325A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <descriptionMatchCount>5__2;

			[Token(Token = "0x170003D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C11")]
				[Address(RVA = "0xFB6F98", Offset = "0xFB6F98", VA = "0xFB6F98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C13")]
				[Address(RVA = "0xFB7028", Offset = "0xFB7028", VA = "0xFB7028", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C0E")]
			[Address(RVA = "0xFAD418", Offset = "0xFAD418", VA = "0xFAD418")]
			[DebuggerHidden]
			public <timeBasedTesting>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002C0F")]
			[Address(RVA = "0xFB3BF0", Offset = "0xFB3BF0", VA = "0xFB3BF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C10")]
			[Address(RVA = "0xFB3BF4", Offset = "0xFB3BF4", VA = "0xFB3BF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C12")]
			[Address(RVA = "0xFB6FA0", Offset = "0xFB6FA0", VA = "0xFB6FA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20006CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5C359C", Offset = "0x5C359C")]
		private sealed class <lotsOfCancels>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400325B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x400325C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x400325D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TestingUnitTests <>4__this;

			[Token(Token = "0x400325E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int <cubeCount>5__2;

			[Token(Token = "0x400325F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int[] <tweensA>5__3;

			[Token(Token = "0x4003260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private GameObject[] <aGOs>5__4;

			[Token(Token = "0x4003261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int[] <tweensB>5__5;

			[Token(Token = "0x4003262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private GameObject[] <bGOs>5__6;

			[Token(Token = "0x170003D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002C17")]
				[Address(RVA = "0xFB3B58", Offset = "0xFB3B58", VA = "0xFB3B58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002C19")]
				[Address(RVA = "0xFB3BE8", Offset = "0xFB3BE8", VA = "0xFB3BE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002C14")]
			[Address(RVA = "0xFAD4C4", Offset = "0xFAD4C4", VA = "0xFAD4C4")]
			[DebuggerHidden]
			public <lotsOfCancels>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002C15")]
			[Address(RVA = "0xFB29D8", Offset = "0xFB29D8", VA = "0xFB29D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002C16")]
			[Address(RVA = "0xFB29DC", Offset = "0xFB29DC", VA = "0xFB29DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002C18")]
			[Address(RVA = "0xFB3B60", Offset = "0xFB3B60", VA = "0xFB3B60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4002508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject cube1;

		[Token(Token = "0x4002509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject cube2;

		[Token(Token = "0x400250A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject cube3;

		[Token(Token = "0x400250B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cube4;

		[Token(Token = "0x400250C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public GameObject cubeAlpha1;

		[Token(Token = "0x400250D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject cubeAlpha2;

		[Token(Token = "0x400250E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool eventGameObjectWasCalled;

		[Token(Token = "0x400250F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool eventGeneralWasCalled;

		[Token(Token = "0x4002510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int lt1Id;

		[Token(Token = "0x4002511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private LTDescr lt2;

		[Token(Token = "0x4002512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LTDescr lt3;

		[Token(Token = "0x4002513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private LTDescr lt4;

		[Token(Token = "0x4002514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LTDescr[] groupTweens;

		[Token(Token = "0x4002515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private GameObject[] groupGOs;

		[Token(Token = "0x4002516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int groupTweensCnt;

		[Token(Token = "0x4002517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int rotateRepeat;

		[Token(Token = "0x4002518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int rotateRepeatAngle;

		[Token(Token = "0x4002519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private GameObject boxNoCollider;

		[Token(Token = "0x400251A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float timeElapsedNormalTimeScale;

		[Token(Token = "0x400251B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float timeElapsedIgnoreTimeScale;

		[Token(Token = "0x6002378")]
		[Address(RVA = "0xFAACF4", Offset = "0xFAACF4", VA = "0xFAACF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6002379")]
		[Address(RVA = "0xFAADFC", Offset = "0xFAADFC", VA = "0xFAADFC")]
		private void Start()
		{
		}

		[Token(Token = "0x600237A")]
		[Address(RVA = "0xFAD2C4", Offset = "0xFAD2C4", VA = "0xFAD2C4")]
		private GameObject cubeNamed(string name)
		{
			return null;
		}

		[Token(Token = "0x600237B")]
		[Address(RVA = "0xFAD38C", Offset = "0xFAD38C", VA = "0xFAD38C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D27F4", Offset = "0x5D27F4")]
		private IEnumerator timeBasedTesting()
		{
			return null;
		}

		[Token(Token = "0x600237C")]
		[Address(RVA = "0xFAD438", Offset = "0xFAD438", VA = "0xFAD438")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5D286C", Offset = "0x5D286C")]
		private IEnumerator lotsOfCancels()
		{
			return null;
		}

		[Token(Token = "0x600237D")]
		[Address(RVA = "0xFAD4E4", Offset = "0xFAD4E4", VA = "0xFAD4E4")]
		private void rotateRepeatFinished()
		{
		}

		[Token(Token = "0x600237E")]
		[Address(RVA = "0xFAD5E0", Offset = "0xFAD5E0", VA = "0xFAD5E0")]
		private void rotateRepeatAllFinished()
		{
		}

		[Token(Token = "0x600237F")]
		[Address(RVA = "0xFAD7CC", Offset = "0xFAD7CC", VA = "0xFAD7CC")]
		private void eventGameObjectCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6002380")]
		[Address(RVA = "0xFAD7D8", Offset = "0xFAD7D8", VA = "0xFAD7D8")]
		private void eventGeneralCalled(LTEvent e)
		{
		}

		[Token(Token = "0x6002381")]
		[Address(RVA = "0xFAD7E4", Offset = "0xFAD7E4", VA = "0xFAD7E4")]
		public TestingUnitTests()
		{
		}
	}
}
namespace AraSamples
{
	[Serializable]
	[Token(Token = "0x2000470")]
	public class AxleInfo
	{
		[Token(Token = "0x400251C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WheelCollider leftWheel;

		[Token(Token = "0x400251D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WheelCollider rightWheel;

		[Token(Token = "0x400251E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool motor;

		[Token(Token = "0x400251F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool steering;

		[Token(Token = "0x6002382")]
		[Address(RVA = "0x2279588", Offset = "0x2279588", VA = "0x2279588")]
		public AxleInfo()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x4002520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<AxleInfo> axleInfos;

		[Token(Token = "0x4002521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxMotorTorque;

		[Token(Token = "0x4002522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxSteeringAngle;

		[Token(Token = "0x6002383")]
		[Address(RVA = "0x2279590", Offset = "0x2279590", VA = "0x2279590")]
		public void ApplyLocalPositionToVisuals(WheelCollider collider)
		{
		}

		[Token(Token = "0x6002384")]
		[Address(RVA = "0x2279720", Offset = "0x2279720", VA = "0x2279720")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6002385")]
		[Address(RVA = "0x22799AC", Offset = "0x22799AC", VA = "0x22799AC")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class ObjectDragger : MonoBehaviour
	{
		[Token(Token = "0x4002523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 screenPoint;

		[Token(Token = "0x4002524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 offset;

		[Token(Token = "0x6002386")]
		[Address(RVA = "0x22799B4", Offset = "0x22799B4", VA = "0x22799B4")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6002387")]
		[Address(RVA = "0x2279BD8", Offset = "0x2279BD8", VA = "0x2279BD8")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6002388")]
		[Address(RVA = "0x2279D34", Offset = "0x2279D34", VA = "0x2279D34")]
		public ObjectDragger()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public class Rotation : MonoBehaviour
	{
		[Token(Token = "0x4002525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float speed;

		[Token(Token = "0x4002526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 axis;

		[Token(Token = "0x6002389")]
		[Address(RVA = "0x2279D3C", Offset = "0x2279D3C", VA = "0x2279D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x600238A")]
		[Address(RVA = "0x2279DB4", Offset = "0x2279DB4", VA = "0x2279DB4")]
		public Rotation()
		{
		}
	}
	[Token(Token = "0x2000474")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2594", Offset = "0x5C2594")]
	public class WallPlayerController : MonoBehaviour
	{
		[Token(Token = "0x4002527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float speed;

		[Token(Token = "0x4002528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int boardSize;

		[Token(Token = "0x4002529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int maxTrailLenght;

		[Token(Token = "0x400252A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color[] colors;

		[Token(Token = "0x400252B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int coordX;

		[Token(Token = "0x400252C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int coordZ;

		[Token(Token = "0x400252D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private AraTrail trail;

		[Token(Token = "0x600238B")]
		[Address(RVA = "0x2279DC8", Offset = "0x2279DC8", VA = "0x2279DC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600238C")]
		[Address(RVA = "0x2279E30", Offset = "0x2279E30", VA = "0x2279E30")]
		private void Update()
		{
		}

		[Token(Token = "0x600238D")]
		[Address(RVA = "0x227A524", Offset = "0x227A524", VA = "0x227A524")]
		public WallPlayerController()
		{
		}
	}
}
namespace Ara
{
	[Token(Token = "0x2000475")]
	[AttributeAttribute(Name = "ExecuteInEditMode", RVA = "0x5C260C", Offset = "0x5C260C")]
	public class AraTrail : MonoBehaviour
	{
		[Token(Token = "0x20006CD")]
		public enum TrailAlignment
		{
			[Token(Token = "0x4003264")]
			View,
			[Token(Token = "0x4003265")]
			Velocity,
			[Token(Token = "0x4003266")]
			Local
		}

		[Token(Token = "0x20006CE")]
		public enum TrailSorting
		{
			[Token(Token = "0x4003268")]
			OlderOnTop,
			[Token(Token = "0x4003269")]
			NewerOnTop
		}

		[Token(Token = "0x20006CF")]
		public enum Timescale
		{
			[Token(Token = "0x400326B")]
			Normal,
			[Token(Token = "0x400326C")]
			Unscaled
		}

		[Token(Token = "0x20006D0")]
		public enum TextureMode
		{
			[Token(Token = "0x400326E")]
			Stretch,
			[Token(Token = "0x400326F")]
			Tile
		}

		[Token(Token = "0x20006D1")]
		public struct CurveFrame
		{
			[Token(Token = "0x4003270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4003271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x4003272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 bitangent;

			[Token(Token = "0x4003273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 tangent;

			[Token(Token = "0x6002C1A")]
			[Address(RVA = "0x5D7E00", Offset = "0x5D7E00", VA = "0x5D7E00")]
			public CurveFrame(Vector3 position, Vector3 normal, Vector3 bitangent, Vector3 tangent)
			{
			}

			[Token(Token = "0x6002C1B")]
			[Address(RVA = "0x5D7E60", Offset = "0x5D7E60", VA = "0x5D7E60")]
			public Vector3 Transport(Vector3 newTangent, Vector3 newPosition)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006D2")]
		public struct Point
		{
			[Token(Token = "0x4003274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4003275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 velocity;

			[Token(Token = "0x4003276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 tangent;

			[Token(Token = "0x4003277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 normal;

			[Token(Token = "0x4003278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color color;

			[Token(Token = "0x4003279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float thickness;

			[Token(Token = "0x400327A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float life;

			[Token(Token = "0x400327B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool discontinuous;

			[Token(Token = "0x6002C1C")]
			[Address(RVA = "0x5D7FA0", Offset = "0x5D7FA0", VA = "0x5D7FA0")]
			public Point(Vector3 position, Vector3 velocity, Vector3 tangent, Vector3 normal, Color color, float thickness, float lifetime)
			{
			}

			[Token(Token = "0x6002C1D")]
			[Address(RVA = "0x2276FA0", Offset = "0x2276FA0", VA = "0x2276FA0")]
			private static float CatmullRom(float p0, float p1, float p2, float p3, float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002C1E")]
			[Address(RVA = "0x2277024", Offset = "0x2277024", VA = "0x2277024")]
			private static Color CatmullRomColor(Color p0, Color p1, Color p2, Color p3, float t)
			{
				return default(Color);
			}

			[Token(Token = "0x6002C1F")]
			[Address(RVA = "0x2277418", Offset = "0x2277418", VA = "0x2277418")]
			private static Vector3 CatmullRom3D(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6002C20")]
			[Address(RVA = "0x22776FC", Offset = "0x22776FC", VA = "0x22776FC")]
			public static Point Interpolate(Point a, Point b, Point c, Point d, float t)
			{
				return default(Point);
			}

			[Token(Token = "0x6002C21")]
			[Address(RVA = "0x2277A94", Offset = "0x2277A94", VA = "0x2277A94")]
			public static Point operator +(Point p1, Point p2)
			{
				return default(Point);
			}

			[Token(Token = "0x6002C22")]
			[Address(RVA = "0x2277CD4", Offset = "0x2277CD4", VA = "0x2277CD4")]
			public static Point operator -(Point p1, Point p2)
			{
				return default(Point);
			}
		}

		[Token(Token = "0x400252E")]
		public const float epsilon = 1E-05f;

		[Token(Token = "0x400252F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5C9FFC", Offset = "0x5C9FFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5C9FFC", Offset = "0x5C9FFC")]
		public TrailSection section;

		[Token(Token = "0x4002530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA05C", Offset = "0x5CA05C")]
		public Space space;

		[Token(Token = "0x4002531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA090", Offset = "0x5CA090")]
		public Timescale timescale;

		[Token(Token = "0x4002532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA0DC", Offset = "0x5CA0DC")]
		public TrailAlignment alignment;

		[Token(Token = "0x4002533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA110", Offset = "0x5CA110")]
		public TrailSorting sorting;

		[Token(Token = "0x4002534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA17C", Offset = "0x5CA17C")]
		public float thickness;

		[Token(Token = "0x4002535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA1CC", Offset = "0x5CA1CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA1CC", Offset = "0x5CA1CC")]
		public int smoothness;

		[Token(Token = "0x4002536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA250", Offset = "0x5CA250")]
		public bool highQualityCorners;

		[Token(Token = "0x4002537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA2AC", Offset = "0x5CA2AC")]
		public int cornerRoundness;

		[Token(Token = "0x4002538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA2C8", Offset = "0x5CA2C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA2C8", Offset = "0x5CA2C8")]
		public AnimationCurve thicknessOverLenght;

		[Token(Token = "0x4002539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA328", Offset = "0x5CA328")]
		public Gradient colorOverLenght;

		[Token(Token = "0x400253A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA38C", Offset = "0x5CA38C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA38C", Offset = "0x5CA38C")]
		public AnimationCurve thicknessOverTime;

		[Token(Token = "0x400253B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA3EC", Offset = "0x5CA3EC")]
		public Gradient colorOverTime;

		[Token(Token = "0x400253C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA454", Offset = "0x5CA454")]
		public bool emit;

		[Token(Token = "0x400253D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA48C", Offset = "0x5CA48C")]
		public float initialThickness;

		[Token(Token = "0x400253E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA4F8", Offset = "0x5CA4F8")]
		public Color initialColor;

		[Token(Token = "0x400253F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA560", Offset = "0x5CA560")]
		public Vector3 initialVelocity;

		[Token(Token = "0x4002540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA5CC", Offset = "0x5CA5CC")]
		public float timeInterval;

		[Token(Token = "0x4002541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA600", Offset = "0x5CA600")]
		public float minDistance;

		[Token(Token = "0x4002542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA634", Offset = "0x5CA634")]
		public float time;

		[Token(Token = "0x4002543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA684", Offset = "0x5CA684")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA684", Offset = "0x5CA684")]
		public bool enablePhysics;

		[Token(Token = "0x4002544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA6F4", Offset = "0x5CA6F4")]
		public float warmup;

		[Token(Token = "0x4002545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA728", Offset = "0x5CA728")]
		public Vector3 gravity;

		[Token(Token = "0x4002546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA774", Offset = "0x5CA774")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA774", Offset = "0x5CA774")]
		public float inertia;

		[Token(Token = "0x4002547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA7C4", Offset = "0x5CA7C4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA7C4", Offset = "0x5CA7C4")]
		public float velocitySmoothing;

		[Token(Token = "0x4002548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA814", Offset = "0x5CA814")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA814", Offset = "0x5CA814")]
		public float damping;

		[Token(Token = "0x4002549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA864", Offset = "0x5CA864")]
		public Material[] materials;

		[Token(Token = "0x400254A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public ShadowCastingMode castShadows;

		[Token(Token = "0x400254B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool receiveShadows;

		[Token(Token = "0x400254C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool useLightProbes;

		[Token(Token = "0x400254D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x5CA89C", Offset = "0x5CA89C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA89C", Offset = "0x5CA89C")]
		public TextureMode textureMode;

		[Token(Token = "0x400254E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA8FC", Offset = "0x5CA8FC")]
		public float uvFactor;

		[Token(Token = "0x400254F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA930", Offset = "0x5CA930")]
		public float uvWidthFactor;

		[Token(Token = "0x4002550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA964", Offset = "0x5CA964")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x5CA964", Offset = "0x5CA964")]
		public float tileAnchor;

		[Token(Token = "0x4002552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5CA9C4", Offset = "0x5CA9C4")]
		public List<Point> points;

		[Token(Token = "0x4002553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private List<Point> renderablePoints;

		[Token(Token = "0x4002554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<int> discontinuities;

		[Token(Token = "0x4002555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Mesh mesh_;

		[Token(Token = "0x4002556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 velocity;

		[Token(Token = "0x4002557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 prevPosition;

		[Token(Token = "0x4002558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float accumTime;

		[Token(Token = "0x4002559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private List<Vector3> vertices;

		[Token(Token = "0x400255A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<Vector3> normals;

		[Token(Token = "0x400255B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private List<Vector4> tangents;

		[Token(Token = "0x400255C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<Vector2> uvs;

		[Token(Token = "0x400255D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private List<Color> vertColors;

		[Token(Token = "0x400255E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<int> tris;

		[Token(Token = "0x1700027C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6002390")]
			[Address(RVA = "0x243A650", Offset = "0x243A650", VA = "0x243A650")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700027D")]
		private float DeltaTime
		{
			[Token(Token = "0x6002391")]
			[Address(RVA = "0x243A664", Offset = "0x243A664", VA = "0x243A664")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027E")]
		private float FixedDeltaTime
		{
			[Token(Token = "0x6002392")]
			[Address(RVA = "0x243A680", Offset = "0x243A680", VA = "0x243A680")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027F")]
		public Mesh mesh
		{
			[Token(Token = "0x6002393")]
			[Address(RVA = "0x243A69C", Offset = "0x243A69C", VA = "0x243A69C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000026")]
		public event Action onUpdatePoints
		{
			[Token(Token = "0x600238E")]
			[Address(RVA = "0x243A438", Offset = "0x243A438", VA = "0x243A438")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D28E4", Offset = "0x5D28E4")]
			add
			{
			}
			[Token(Token = "0x600238F")]
			[Address(RVA = "0x243A544", Offset = "0x243A544", VA = "0x243A544")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5D28F4", Offset = "0x5D28F4")]
			remove
			{
			}
		}

		[Token(Token = "0x6002394")]
		[Address(RVA = "0x243A6A4", Offset = "0x243A6A4", VA = "0x243A6A4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6002395")]
		[Address(RVA = "0x243A754", Offset = "0x243A754", VA = "0x243A754")]
		public void Awake()
		{
		}

		[Token(Token = "0x6002396")]
		[Address(RVA = "0x243A868", Offset = "0x243A868", VA = "0x243A868")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6002397")]
		[Address(RVA = "0x243AA90", Offset = "0x243AA90", VA = "0x243AA90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6002398")]
		[Address(RVA = "0x243AC00", Offset = "0x243AC00", VA = "0x243AC00")]
		public void Clear()
		{
		}

		[Token(Token = "0x6002399")]
		[Address(RVA = "0x243AC78", Offset = "0x243AC78", VA = "0x243AC78")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x600239A")]
		[Address(RVA = "0x243AE44", Offset = "0x243AE44", VA = "0x243AE44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600239B")]
		[Address(RVA = "0x243AEA8", Offset = "0x243AEA8", VA = "0x243AEA8")]
		private void EmissionStep(float time)
		{
		}

		[Token(Token = "0x600239C")]
		[Address(RVA = "0x243A758", Offset = "0x243A758", VA = "0x243A758")]
		private void Warmup()
		{
		}

		[Token(Token = "0x600239D")]
		[Address(RVA = "0x243BA64", Offset = "0x243BA64", VA = "0x243BA64")]
		private void PhysicsStep(float timestep)
		{
		}

		[Token(Token = "0x600239E")]
		[Address(RVA = "0x243BE04", Offset = "0x243BE04", VA = "0x243BE04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600239F")]
		[Address(RVA = "0x243B7A0", Offset = "0x243B7A0", VA = "0x243B7A0")]
		public void EmitPoint(Vector3 position)
		{
		}

		[Token(Token = "0x60023A0")]
		[Address(RVA = "0x243B0B8", Offset = "0x243B0B8", VA = "0x243B0B8")]
		private void SnapLastPointToTransform()
		{
		}

		[Token(Token = "0x60023A1")]
		[Address(RVA = "0x243B36C", Offset = "0x243B36C", VA = "0x243B36C")]
		private void UpdatePointsLifecycle()
		{
		}

		[Token(Token = "0x60023A2")]
		[Address(RVA = "0x243BE4C", Offset = "0x243BE4C", VA = "0x243BE4C")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x60023A3")]
		[Address(RVA = "0x243BFC0", Offset = "0x243BFC0", VA = "0x243BFC0")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x60023A4")]
		[Address(RVA = "0x243C0D8", Offset = "0x243C0D8", VA = "0x243C0D8")]
		private void RenderMesh(Camera cam)
		{
		}

		[Token(Token = "0x60023A5")]
		[Address(RVA = "0x243C460", Offset = "0x243C460", VA = "0x243C460")]
		public float GetLenght(List<Point> input)
		{
			return default(float);
		}

		[Token(Token = "0x60023A6")]
		[Address(RVA = "0x243C608", Offset = "0x243C608", VA = "0x243C608")]
		private List<Point> GetRenderablePoints(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x60023A7")]
		[Address(RVA = "0x243D1EC", Offset = "0x243D1EC", VA = "0x243D1EC")]
		private CurveFrame InitializeCurveFrame(Vector3 point, Vector3 nextPoint)
		{
			return default(CurveFrame);
		}

		[Token(Token = "0x60023A8")]
		[Address(RVA = "0x243D50C", Offset = "0x243D50C", VA = "0x243D50C")]
		private void UpdateTrailMesh(Camera cam)
		{
		}

		[Token(Token = "0x60023A9")]
		[Address(RVA = "0x243D990", Offset = "0x243D990", VA = "0x243D990")]
		private void UpdateSegmentMesh(int start, int end, Vector3 localCamPosition)
		{
		}

		[Token(Token = "0x60023AA")]
		[Address(RVA = "0x244023C", Offset = "0x244023C", VA = "0x244023C")]
		public AraTrail()
		{
		}
	}
	[Token(Token = "0x2000476")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C261C", Offset = "0x5C261C")]
	public class ColorFromSpeed : MonoBehaviour
	{
		[Token(Token = "0x400255F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private AraTrail trail;

		[Token(Token = "0x4002560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CA9D4", Offset = "0x5CA9D4")]
		public Gradient colorFromSpeed;

		[Token(Token = "0x4002561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CAA08", Offset = "0x5CAA08")]
		public float minSpeed;

		[Token(Token = "0x4002562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x5CAA5C", Offset = "0x5CAA5C")]
		public float maxSpeed;

		[Token(Token = "0x60023AB")]
		[Address(RVA = "0x2277F14", Offset = "0x2277F14", VA = "0x2277F14")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023AC")]
		[Address(RVA = "0x2277FD8", Offset = "0x2277FD8", VA = "0x2277FD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023AD")]
		[Address(RVA = "0x2278080", Offset = "0x2278080", VA = "0x2278080")]
		private void SetColorFromSpeed()
		{
		}

		[Token(Token = "0x60023AE")]
		[Address(RVA = "0x2278304", Offset = "0x2278304", VA = "0x2278304")]
		public ColorFromSpeed()
		{
		}
	}
	[Token(Token = "0x2000477")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C2694", Offset = "0x5C2694")]
	public class ElectricalArc : MonoBehaviour
	{
		[Token(Token = "0x4002563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private AraTrail trail;

		[Token(Token = "0x4002564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform source;

		[Token(Token = "0x4002565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform target;

		[Token(Token = "0x4002566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int points;

		[Token(Token = "0x4002567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float burstInterval;

		[Token(Token = "0x4002568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float burstRandom;

		[Token(Token = "0x4002569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speedRandom;

		[Token(Token = "0x400256A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float positionRandom;

		[Token(Token = "0x400256B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float accum;

		[Token(Token = "0x60023AF")]
		[Address(RVA = "0x227838C", Offset = "0x227838C", VA = "0x227838C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023B0")]
		[Address(RVA = "0x2278410", Offset = "0x2278410", VA = "0x2278410")]
		private void Update()
		{
		}

		[Token(Token = "0x60023B1")]
		[Address(RVA = "0x2278478", Offset = "0x2278478", VA = "0x2278478")]
		private void ChangeArc()
		{
		}

		[Token(Token = "0x60023B2")]
		[Address(RVA = "0x22789A0", Offset = "0x22789A0", VA = "0x22789A0")]
		public ElectricalArc()
		{
		}
	}
	[Token(Token = "0x2000478")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x5C270C", Offset = "0x5C270C")]
	public class TireTrack : MonoBehaviour
	{
		[Token(Token = "0x400256C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private AraTrail trail;

		[Token(Token = "0x400256D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float offset;

		[Token(Token = "0x400256E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDist;

		[Token(Token = "0x60023B3")]
		[Address(RVA = "0x22789D0", Offset = "0x22789D0", VA = "0x22789D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60023B4")]
		[Address(RVA = "0x2278A94", Offset = "0x2278A94", VA = "0x2278A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60023B5")]
		[Address(RVA = "0x2278B3C", Offset = "0x2278B3C", VA = "0x2278B3C")]
		private void ProjectToGround()
		{
		}

		[Token(Token = "0x60023B6")]
		[Address(RVA = "0x2279170", Offset = "0x2279170", VA = "0x2279170")]
		public TireTrack()
		{
		}
	}
	[Token(Token = "0x2000479")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x5C2784", Offset = "0x5C2784")]
	public class TrailSection : ScriptableObject
	{
		[Token(Token = "0x400256F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HideInInspector", RVA = "0x5CAAB0", Offset = "0x5CAAB0")]
		public List<Vector2> vertices;

		[Token(Token = "0x4002570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int snapX;

		[Token(Token = "0x4002571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int snapY;

		[Token(Token = "0x17000280")]
		public int Segments
		{
			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x2279190", Offset = "0x2279190", VA = "0x2279190")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60023B8")]
		[Address(RVA = "0x227920C", Offset = "0x227920C", VA = "0x227920C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x60023B9")]
		[Address(RVA = "0x22792A4", Offset = "0x22792A4", VA = "0x22792A4")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x60023BA")]
		[Address(RVA = "0x22794A4", Offset = "0x22794A4", VA = "0x22794A4")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x60023BB")]
		[Address(RVA = "0x2279580", Offset = "0x2279580", VA = "0x2279580")]
		public TrailSection()
		{
		}
	}
}
